(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    472861,      17565]
NotebookOptionsPosition[    397177,      15343]
NotebookOutlinePosition[    439491,      16483]
CellTagsIndexPosition[    437743,      16417]
WindowFrame->Normal
ContainsDynamic->False*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 StyleBox["Exploring Abstract Algebra with Mathematica",
  Evaluatable->False,
  AspectRatioFixed->True,
  FontFamily->"Times",
  FontSize->24],
 StyleBox["\n",
  Evaluatable->False,
  AspectRatioFixed->True,
  FontFamily->"Times"],
 StyleBox["Al Hibbard and Ken Levasseur",
  Evaluatable->False,
  AspectRatioFixed->True,
  FontFamily->"Times",
  FontSize->14,
  FontSlant->"Plain"],
 StyleBox["\n",
  Evaluatable->False,
  AspectRatioFixed->True,
  FontFamily->"Times"],
 StyleBox["\[Copyright] Copyright 1998 Springer-Verlag New York, Inc.",
  Evaluatable->False,
  AspectRatioFixed->True,
  FontFamily->"Times",
  FontSize->10,
  FontSlant->"Plain"]
}], "Subsubtitle",
 Evaluatable->False,
 TextAlignment->Center,
 TextJustification->0,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Chapter 5",
  FontSize->18],
 "\nAdditional Functionality"
}], "Section",
 Evaluatable->False,
 TextAlignment->Center,
 AspectRatioFixed->True,
 CellTags->"Global"],

Cell["\<\
In the final chapter, we look at some additional functionality that does not \
neatly fit into the chapters on groupoids, ringoids, or morphisms. \
\>", "Text",
 CellTags->"Global"],

Cell[CellGroupData[{

Cell["5.0 Read me first", "Subsection",
 CellTags->"First"],

Cell[TextData[{
 "To evaluate any of the ",
 StyleBox["Input", "MR"],
 " cells in this chapter, the following cell should be evaluated first."
}], "Text",
 CellTags->"First"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<AbstractAlgebra`Master`\>\"", "]"}]], "Input",
 ShowGroupOpener->True,
 CellTags->"First",
 CellLabel->"In[1]:="],

Cell[TextData[{
 "Since we wish to primarily focus on groups, we use the ",
 StyleBox["SwitchStructureTo", "MR"],
 " function."
}], "Text",
 CellTags->"First"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SwitchStructureTo", "[", "Group", "]"}]], "Input",
 CellTags->"First",
 CellLabel->"In[2]:="],

Cell[BoxData["Group"], "Output",
 CellTags->"First",
 CellLabel->"Out[2]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5.1 Global variables and options", "Subsection",
 CellTags->{"Global", "i:1"}],

Cell["\<\
There are several global variables and options that are worth noting. \
\>", "Text",
 CellTags->"Global"],

Cell[BoxData[
 FormBox[GridBox[{
    {
     StyleBox["name", "SO10"], 
     StyleBox[
      RowBox[{"initial", " ", "value"}], "SO10"], 
     StyleBox[
      FormBox[" ",
       StandardForm], "Text"]},
    {
     StyleBox[
      FormBox["DefaultStructure",
       StandardForm], "Text"], 
     StyleBox[
      FormBox["Group",
       StandardForm], "Text"], 
     StyleBox[
      RowBox[{"context", " ", 
       RowBox[{"(", 
        RowBox[{"groups", " ", "versus", " ", "rings"}], ")"}], " ", "that", 
       " ", "is", " ", "assumed", " ", "for", " ", "the", " ", "functions", 
       " ", "in", " ", "use"}],
      SingleLetterItalics->False]},
    {
     StyleBox[
      FormBox["VisualTextShown",
       StandardForm], "Text"], 
     StyleBox[
      FormBox["2",
       StandardForm], "Text"], 
     RowBox[{"specifies", " ", 
      StyleBox["how",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["often",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["accompanying",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["text",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["for",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["visualizations",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["is",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["shown",
       SingleLetterItalics->False]}]},
    {
     StyleBox[
      FormBox["BackgroundColors",
       StandardForm], "Text"], 
     StyleBox[
      FormBox[
       StyleBox[
        RowBox[{"(", 
         RowBox[{"see", " ", "below"}], ")"}], "Text"],
       StandardForm], "Text"], 
     RowBox[{"(", "ordered", ")", " ", 
      StyleBox["list",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["of",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["colors",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["that",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["are",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["used",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["for",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["Cayley",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["tables",
       SingleLetterItalics->False]}]},
    {
     StyleBox["Output", "MR"], 
     StyleBox["Computational", "MR"], 
     RowBox[{
      RowBox[{
      "available", " ", "for", " ", "some", " ", "functions", " ", "when", 
       " ", "the"}], " ", "\n", 
      RowBox[{
       StyleBox["Visual", "MR"], " ", "mode", " ", "is", " ", "being", " ", 
       "used", " ", "in", " ", "order", " ", "to"}], " ", "\n", 
      RowBox[{
      "change", " ", "the", " ", "output", " ", "from", " ", "the", " ", 
       "computation"}], " ", "\n", 
      RowBox[{"to", " ", "the", " ", "visual", " ", "graphic", " ", 
       RowBox[{"(", 
        RowBox[{"using", " ", "the", " ", "value", " ", "\n", 
         StyleBox["Graphics", "MR"], " ", "or", " ", 
         StyleBox["GraphicsArray", "MR"], " ", "for", " ", "a", " ", "few", 
         " ", "functions"}], ")"}]}]}]},
    {
     StyleBox["DefaultOrder", "MR"], 
     StyleBox["RightToLeft", "MR"], 
     RowBox[{
     "default", " ", "direction", " ", "for", " ", "multiplying", " ", 
      "permutations"}]}
   }], NotebookDefault]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
 GridBoxItemSize->{"Columns" -> {
     Scaled[0.29], 
     Scaled[0.23], {
      Scaled[0.48]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellTags->{"Global", "i:2"}],

Cell["Some global variables.", "Caption",
 CellTags->"Global"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   StyleBox[
    RowBox[{
    "Yellow", ",", " ", "Orange", ",", " ", "Violet", ",", " ", "Blue", ",", 
     " ", "Mint", ",", " ", "Turquoise", ",", " ", "EmeraldGreen", ",", " ", 
     "GreenDark", ",", " ", "Pink", ",", " ", "BlueLight", ",", " ", "Banana",
      ",", " ", "Green", ",", " ", "Brown", ",", " ", "Gray", ",", " ", "Red",
      ",", " ", "Purple", ",", " ", "CadmiumYellow", ",", " ", "Maroon", ",", 
     " ", "Navy", ",", " ", "Salmon", ",", " ", "Aquamarine", ",", " ", 
     "Indigo", ",", " ", "Lavender", ",", " ", "Antique", ",", " ", "Bisque", 
     ",", " ", "Burlywood", ",", " ", "Eggshell", ",", " ", "Khaki", ",", " ",
      "BlueViolet", ",", " ", "CadmiumOrange", ",", " ", "CadmiumRedDeep", 
     ",", " ", "Cerulean", ",", " ", "Chartreuse", ",", " ", "Cyan", ",", " ",
      "DeepPink", ",", " ", "Magenta", ",", " ", "OrangeRed", ",", " ", 
     "Peacock", ",", " ", "SkyBlueDeep", ",", " ", "TurquoiseDark", ",", " ", 
     "Ultramarine"}], "MR",
    FormatType->StandardForm], 
   StyleBox["}", "MR",
    FormatType->StandardForm]}], NotebookDefault]], "DefinitionBox",
 CellTags->"Global"],

Cell[TextData[{
 StyleBox["BackgroundColors",
  FontFamily->"Courier"],
 "."
}], "Caption",
 CellTags->"Global"],

Cell["\<\
We can always see the default structure that is being assumed.\
\>", "MathCaption",
 CellTags->"Global"],

Cell[CellGroupData[{

Cell[BoxData["DefaultStructure"], "Input",
 CellTags->"Global",
 CellLabel->"In[3]:="],

Cell[BoxData["Group"], "Output",
 CellTags->"Global",
 CellLabel->"Out[3]="]
}, Open  ]],

Cell[TextData[{
 "If we wish to change the value of this variable, it is best to use the ",
 StyleBox["SwitchStructureTo", "MR"],
 " function because it also redefines some options for various functions."
}], "MathCaption",
 CellTags->"Global"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SwitchStructureTo", "[", "Group", "]"}]], "Input",
 CellTags->"Global",
 CellLabel->"In[4]:="],

Cell[BoxData["Group"], "Output",
 CellTags->"Global",
 CellLabel->"Out[4]="]
}, Open  ]],

Cell[TextData[{
 "Typically, the output of all functions, even in the ",
 StyleBox["Visual", "MR"],
 " mode, results in a computation."
}], "MathCaption",
 CellTags->"Global"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CayleyTable", "[", 
  RowBox[{
   RowBox[{"Z", "[", "6", "]"}], ",", " ", 
   RowBox[{"Mode", " ", "\[Rule]", " ", "Visual"}]}], "]"}]], "Input",
 CellTags->"Global",
 CellLabel->"In[5]:="],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: 1.07143 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.159864 0.136054 0.0255102 0.136054 [
[ 0 0 0 0 ]
[ 1 1.07143 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 1.07143 L
0 1.07143 L
closepath
clip
newpath
1 1 0 r
.15986 .70578 m
.15986 .84184 L
.29592 .84184 L
.29592 .70578 L
F
.84014 .56973 m
.84014 .70578 L
.97619 .70578 L
.97619 .56973 L
F
.70408 .43367 m
.70408 .56973 L
.84014 .56973 L
.84014 .43367 L
F
.56803 .29762 m
.56803 .43367 L
.70408 .43367 L
.70408 .29762 L
F
.43197 .16156 m
.43197 .29762 L
.56803 .29762 L
.56803 .16156 L
F
.29592 .02551 m
.29592 .16156 L
.43197 .16156 L
.43197 .02551 L
F
1 .5 0 r
.29592 .70578 m
.29592 .84184 L
.43197 .84184 L
.43197 .70578 L
F
.15986 .56973 m
.15986 .70578 L
.29592 .70578 L
.29592 .56973 L
F
.84014 .43367 m
.84014 .56973 L
.97619 .56973 L
.97619 .43367 L
F
.70408 .29762 m
.70408 .43367 L
.84014 .43367 L
.84014 .29762 L
F
.56803 .16156 m
.56803 .29762 L
.70408 .29762 L
.70408 .16156 L
F
.43197 .02551 m
.43197 .16156 L
.56803 .16156 L
.56803 .02551 L
F
.56 .37 .6 r
.43197 .70578 m
.43197 .84184 L
.56803 .84184 L
.56803 .70578 L
F
.29592 .56973 m
.29592 .70578 L
.43197 .70578 L
.43197 .56973 L
F
.15986 .43367 m
.15986 .56973 L
.29592 .56973 L
.29592 .43367 L
F
.84014 .29762 m
.84014 .43367 L
.97619 .43367 L
.97619 .29762 L
F
.70408 .16156 m
.70408 .29762 L
.84014 .29762 L
.84014 .16156 L
F
.56803 .02551 m
.56803 .16156 L
.70408 .16156 L
.70408 .02551 L
F
0 0 1 r
.56803 .70578 m
.56803 .84184 L
.70408 .84184 L
.70408 .70578 L
F
.43197 .56973 m
.43197 .70578 L
.56803 .70578 L
.56803 .56973 L
F
.29592 .43367 m
.29592 .56973 L
.43197 .56973 L
.43197 .43367 L
F
.15986 .29762 m
.15986 .43367 L
.29592 .43367 L
.29592 .29762 L
F
.84014 .16156 m
.84014 .29762 L
.97619 .29762 L
.97619 .16156 L
F
.70408 .02551 m
.70408 .16156 L
.84014 .16156 L
.84014 .02551 L
F
.74 .99 .79 r
.70408 .70578 m
.70408 .84184 L
.84014 .84184 L
.84014 .70578 L
F
.56803 .56973 m
.56803 .70578 L
.70408 .70578 L
.70408 .56973 L
F
.43197 .43367 m
.43197 .56973 L
.56803 .56973 L
.56803 .43367 L
F
.29592 .29762 m
.29592 .43367 L
.43197 .43367 L
.43197 .29762 L
F
.15986 .16156 m
.15986 .29762 L
.29592 .29762 L
.29592 .16156 L
F
.84014 .02551 m
.84014 .16156 L
.97619 .16156 L
.97619 .02551 L
F
.251 .878 .816 r
.84014 .70578 m
.84014 .84184 L
.97619 .84184 L
.97619 .70578 L
F
.70408 .56973 m
.70408 .70578 L
.84014 .70578 L
.84014 .56973 L
F
.56803 .43367 m
.56803 .56973 L
.70408 .56973 L
.70408 .43367 L
F
.43197 .29762 m
.43197 .43367 L
.56803 .43367 L
.56803 .29762 L
F
.29592 .16156 m
.29592 .29762 L
.43197 .29762 L
.43197 .16156 L
F
.15986 .02551 m
.15986 .16156 L
.29592 .16156 L
.29592 .02551 L
F
1 1 0 r
.15986 .84184 m
.15986 .97789 L
.29592 .97789 L
.29592 .84184 L
F
1 .5 0 r
.29592 .84184 m
.29592 .97789 L
.43197 .97789 L
.43197 .84184 L
F
.56 .37 .6 r
.43197 .84184 m
.43197 .97789 L
.56803 .97789 L
.56803 .84184 L
F
0 0 1 r
.56803 .84184 m
.56803 .97789 L
.70408 .97789 L
.70408 .84184 L
F
.74 .99 .79 r
.70408 .84184 m
.70408 .97789 L
.84014 .97789 L
.84014 .84184 L
F
.251 .878 .816 r
.84014 .84184 m
.84014 .97789 L
.97619 .97789 L
.97619 .84184 L
F
1 1 0 r
.02381 .70578 m
.02381 .84184 L
.15986 .84184 L
.15986 .70578 L
F
1 .5 0 r
.02381 .56973 m
.02381 .70578 L
.15986 .70578 L
.15986 .56973 L
F
.56 .37 .6 r
.02381 .43367 m
.02381 .56973 L
.15986 .56973 L
.15986 .43367 L
F
0 0 1 r
.02381 .29762 m
.02381 .43367 L
.15986 .43367 L
.15986 .29762 L
F
.74 .99 .79 r
.02381 .16156 m
.02381 .29762 L
.15986 .29762 L
.15986 .16156 L
F
.251 .878 .816 r
.02381 .02551 m
.02381 .16156 L
.15986 .16156 L
.15986 .02551 L
F
0 g
1 Mabswid
[ ] 0 setdash
.02381 .02551 m
.02381 .97789 L
s
.02381 .02551 m
.97619 .02551 L
s
.02381 .16156 m
.97619 .16156 L
s
.02381 .29762 m
.97619 .29762 L
s
.02381 .43367 m
.97619 .43367 L
s
.02381 .56973 m
.97619 .56973 L
s
.02381 .70578 m
.97619 .70578 L
s
.02381 .84184 m
.97619 .84184 L
s
.02381 .97789 m
.97619 .97789 L
s
.15986 .02551 m
.15986 .97789 L
s
.29592 .02551 m
.29592 .97789 L
s
.43197 .02551 m
.43197 .97789 L
s
.56803 .02551 m
.56803 .97789 L
s
.70408 .02551 m
.70408 .97789 L
s
.84014 .02551 m
.84014 .97789 L
s
.97619 .02551 m
.97619 .97789 L
s
.02381 .97789 m
.15986 .84184 L
s
2.6 Mabswid
.15986 .02551 m
.15986 .97789 L
s
.02381 .84184 m
.97619 .84184 L
s
[(0)] .22789 .77381 0 0 Mshowa
[(1)] .36395 .77381 0 0 Mshowa
[(2)] .5 .77381 0 0 Mshowa
[(3)] .63605 .77381 0 0 Mshowa
[(4)] .77211 .77381 0 0 Mshowa
[(5)] .90816 .77381 0 0 Mshowa
[(1)] .22789 .63776 0 0 Mshowa
[(2)] .36395 .63776 0 0 Mshowa
[(3)] .5 .63776 0 0 Mshowa
[(4)] .63605 .63776 0 0 Mshowa
[(5)] .77211 .63776 0 0 Mshowa
[(0)] .90816 .63776 0 0 Mshowa
[(2)] .22789 .5017 0 0 Mshowa
[(3)] .36395 .5017 0 0 Mshowa
[(4)] .5 .5017 0 0 Mshowa
[(5)] .63605 .5017 0 0 Mshowa
[(0)] .77211 .5017 0 0 Mshowa
[(1)] .90816 .5017 0 0 Mshowa
[(3)] .22789 .36565 0 0 Mshowa
[(4)] .36395 .36565 0 0 Mshowa
[(5)] .5 .36565 0 0 Mshowa
[(0)] .63605 .36565 0 0 Mshowa
[(1)] .77211 .36565 0 0 Mshowa
[(2)] .90816 .36565 0 0 Mshowa
[(4)] .22789 .22959 0 0 Mshowa
[(5)] .36395 .22959 0 0 Mshowa
[(0)] .5 .22959 0 0 Mshowa
[(1)] .63605 .22959 0 0 Mshowa
[(2)] .77211 .22959 0 0 Mshowa
[(3)] .90816 .22959 0 0 Mshowa
[(5)] .22789 .09354 0 0 Mshowa
[(0)] .36395 .09354 0 0 Mshowa
[(1)] .5 .09354 0 0 Mshowa
[(2)] .63605 .09354 0 0 Mshowa
[(3)] .77211 .09354 0 0 Mshowa
[(4)] .90816 .09354 0 0 Mshowa
[(0)] .09184 .77381 0 0 Mshowa
[(1)] .09184 .63776 0 0 Mshowa
[(2)] .09184 .5017 0 0 Mshowa
[(3)] .09184 .36565 0 0 Mshowa
[(4)] .09184 .22959 0 0 Mshowa
[(5)] .09184 .09354 0 0 Mshowa
[(0)] .22789 .90986 0 0 Mshowa
[(1)] .36395 .90986 0 0 Mshowa
[(2)] .5 .90986 0 0 Mshowa
[(3)] .63605 .90986 0 0 Mshowa
[(4)] .77211 .90986 0 0 Mshowa
[(5)] .90816 .90986 0 0 Mshowa
[(Z[6])] .02381 1.04592 -1 0 Mshowa
gsave
.97619 1.04592 -113 -10 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20 translate 1 -1 scale
gsave
0.000000 0.000000 0.000000 setrgbcolor
1.000000 setlinewidth
gsave
newpath
 79.000000 16.000000 moveto
 540.000000 16.000000 lineto
 540.000000 4.000000 lineto
 79.000000 4.000000 lineto
 79.000000 16.000000 lineto
closepath
clip newpath
81.000000 13.000000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
0.000000 0.000000 rmoveto
81.000000 13.000000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
(x) show
93.000000 13.000000 moveto
%%IncludeResource: font Math1Mono
%%IncludeFont: Math1Mono
/Math1Mono findfont 10.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
(+) show
105.000000 13.000000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
(y) show
111.000000 13.000000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
0.000000 0.000000 rmoveto
1.000000 setlinewidth
grestore
grestore
%%DocumentNeededResources: font Math1Mono
%%+ font Courier
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Math1Mono
%%+ Courier
%%DocumentSuppliedFonts:
%%DocumentFonts: font Math1Mono
%%+ font Courier
grestore
[(x)] .07007 .88673 0 0 Mshowa
[(y)] .12585 .93707 0 0 Mshowa
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
 ImageSize->{176.75, 189.375},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"Global",
 CellLabel->"From In[5]:=",
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXT2S0zAYNXHWf7sFP86koNmr0EDFBeh2GGbYggGW7bgADCUzVBwAOi7A
ESi5AtcI1r9sPzmyYzvy5tuZKOaT5bz3In2ynh3z/Or29as3V7fXL68un91c
vXt9/fLD5dO3N1UovhdF0a/q9fsyYtu7alMWv3bVX1XZ8bZmbz/Y7msrEMUs
snvy7y97RSUrVyy05f8WtdVuvEXJSxn7yF/Rhpci9uXFd/aqYqwUMbYre9vw
UsR+7/6wVxVjpfoM/hetCByBI3AE7nTBpazkoULDzHXsHABOxRF5bRt6ykrZ
tk0iZeVafFqbTspK2bZNLGOlRNqLYmGRqNHmJC5AbQZoJ/L4VkxgaWuQWcxV
rABqZJYGKoZ0KSw1VCwDCuWWLii2ZK1yoFV+gFYpK9cDelP/ATOBGgVQIwNq
cOYr14hKG/0l4vv1VwP1IaNLo3YmhXimkYeUMVfa6dVlRpBrraUxIq11h+qf
beXQdOQX2XZQtpVt785sR+AIHIEjcEPAuewM1b7UGXNrHanGpcFgMxKDDikJ
HIEjcATuVMAZkyDXMAtoHCjASefaLdvtPf2WbccxOzwoolU+PltHLRRttDRD
S/lU4rBiglFbjbltDw+tzCrfdIccrvwD0GUsi8NXFysWKTWMQo3a895DZwKF
DrM95tWlEZtJoRFtD99sa3JsY8spjdPs8Mi2o5odS5/tCByBI3DBgnM5Bqp9
uVPT1NY6Uo1Lg8FmJAYdUhI4AkfgCNypgDNnhoWGmeuY87KpbNGGbq4Pz+Mn
eFBEZ/qpJnsBatHlz8zTWUC3EATiLMymVdLpMRxRoX0eg4dCZnFdgC00YBLP
dXP30DmCnzBvf/FVqBELx1mYLts6/QRzQ8U8fsLSZzsCR+AIHIEbAs5lZ6j2
pc6YW2CWlIDBZiQGHVISOAJH4AjcqYAzJkGuYebQOFCAE1Y6T7/xry6mMzs8
KKJVviGL1nSIdm6RVbEhP6o44qLeQyu03scrG9Sir1b4RxVhK4T6S6oVutjj
ECg1zJJ/yA8tZjdAfBNJe73fyCp+txr06j++OjVix1fMjKsCbKG7EjxS74zO
x9KnPgJH4AgcgRsCzuVtqPalzphb4JyUgMG+n5h4M3BLSeAIHIEjcKcCzjgG
hYaZQxdBAU46nY8hz5s4yPnYTxEtQ3JNtgC17mu19diUD5aYYoU/l1ZON2mg
VvN5IHMp5PSQkBoBeCBz6ZL4GyBjPWJiCgPEM++qbGbnXefNE8ZAG+vJEwfZ
Hguf9wgcgSNwBG4IOKexYT9FQ6HdNae9EjAY8jwNzMAtJYEjcASOwJ0IOHPa
WoAtdAUv6bQ9xn/M5r7V2V6KjpVIrlnmeAd0rTY9YGkfhg0SpFzzPGJz4SLN
8+TNRQ63Izxy098PmSoHj/o8isMskGXPgQSOwBE4AtcTXMzefrKatSNQhy8a
P2JlHAB8BO4hL9c6Jj4yRKQPQCyEToGw3m+oKv9ChbvS4ESPVr2An6e4dw6Q
SdyIuUjEIZNAscS1X6gk0DeBSJyFTMI5MJxf0d2yU0RVAWKpJkteil2Vg1g2
pVYLMlIsNdpzI9/JJINTdFOskbUnme5q2Z/sFY/J8swl690yX9xkkSiLPw3S
c3GoJNDIbY7w4EmsXCTQqVFgferMrtJyPwwLZH02rLYfhYWv3lfLoMBxIJug
INn3wTzWyL6KgMf/aCvfLnTTQm99ZluxjsmdPE7YP4GYOFkVswXvgihbmfGM
ZpW3uraRBhAGtBIXMZjYERohc2u8oKz1Dhzy/DBUWo/hqN67Po0nKjQ1yG8J
nReixMxjsev78hWlA0jzsJGDKQJ3cBdKXDtnFjjTl1f6a4jrsW9idznSonv/
AY7nr/0=\
\>"],
 ImageRangeCache->{{{0, 175.75}, {188.375, 0}} -> {-1.17504, -0.189028, \
0.0418213, 0.0418213}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "5", ",", "0", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "5", ",", "0", ",", "1", ",", "2"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "0", ",", "1", ",", "2", ",", "3"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "0", ",", "1", ",", "2", ",", "3", ",", "4"}], "}"}]}], 
  "}"}]], "Output",
 CellTags->"Global",
 CellLabel->"Out[5]="]
}, Open  ]],

Cell[TextData[{
 "By adding ",
 StyleBox["Output \[Rule] Graphics", "MR"],
 " to a function when using the ",
 StyleBox["Visual", "MR"],
 " mode, the computational output is suppressed and the graphic becomes the \
output."
}], "MathCaption",
 CellTags->"Global"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gr1", " ", "=", " ", 
  RowBox[{"CayleyTable", "[", 
   RowBox[{
    RowBox[{"Z", "[", "4", "]"}], ",", " ", 
    RowBox[{"Mode", " ", "\[Rule]", " ", "Visual"}], ",", " ", 
    RowBox[{"Output", " ", "\[Rule]", " ", "Graphics"}]}], "]"}]}]], "Input",
 CellTags->"Global",
 CellLabel->"In[6]:="],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: 1.1 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.214286 0.190476 0.0261905 0.190476 [
[ 0 0 0 0 ]
[ 1 1.1 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 1.1 L
0 1.1 L
closepath
clip
newpath
1 1 0 r
.21429 .59762 m
.21429 .7881 L
.40476 .7881 L
.40476 .59762 L
F
.78571 .40714 m
.78571 .59762 L
.97619 .59762 L
.97619 .40714 L
F
.59524 .21667 m
.59524 .40714 L
.78571 .40714 L
.78571 .21667 L
F
.40476 .02619 m
.40476 .21667 L
.59524 .21667 L
.59524 .02619 L
F
1 .5 0 r
.40476 .59762 m
.40476 .7881 L
.59524 .7881 L
.59524 .59762 L
F
.21429 .40714 m
.21429 .59762 L
.40476 .59762 L
.40476 .40714 L
F
.78571 .21667 m
.78571 .40714 L
.97619 .40714 L
.97619 .21667 L
F
.59524 .02619 m
.59524 .21667 L
.78571 .21667 L
.78571 .02619 L
F
.56 .37 .6 r
.59524 .59762 m
.59524 .7881 L
.78571 .7881 L
.78571 .59762 L
F
.40476 .40714 m
.40476 .59762 L
.59524 .59762 L
.59524 .40714 L
F
.21429 .21667 m
.21429 .40714 L
.40476 .40714 L
.40476 .21667 L
F
.78571 .02619 m
.78571 .21667 L
.97619 .21667 L
.97619 .02619 L
F
0 0 1 r
.78571 .59762 m
.78571 .7881 L
.97619 .7881 L
.97619 .59762 L
F
.59524 .40714 m
.59524 .59762 L
.78571 .59762 L
.78571 .40714 L
F
.40476 .21667 m
.40476 .40714 L
.59524 .40714 L
.59524 .21667 L
F
.21429 .02619 m
.21429 .21667 L
.40476 .21667 L
.40476 .02619 L
F
1 1 0 r
.21429 .7881 m
.21429 .97857 L
.40476 .97857 L
.40476 .7881 L
F
1 .5 0 r
.40476 .7881 m
.40476 .97857 L
.59524 .97857 L
.59524 .7881 L
F
.56 .37 .6 r
.59524 .7881 m
.59524 .97857 L
.78571 .97857 L
.78571 .7881 L
F
0 0 1 r
.78571 .7881 m
.78571 .97857 L
.97619 .97857 L
.97619 .7881 L
F
1 1 0 r
.02381 .59762 m
.02381 .7881 L
.21429 .7881 L
.21429 .59762 L
F
1 .5 0 r
.02381 .40714 m
.02381 .59762 L
.21429 .59762 L
.21429 .40714 L
F
.56 .37 .6 r
.02381 .21667 m
.02381 .40714 L
.21429 .40714 L
.21429 .21667 L
F
0 0 1 r
.02381 .02619 m
.02381 .21667 L
.21429 .21667 L
.21429 .02619 L
F
0 g
1 Mabswid
[ ] 0 setdash
.02381 .02619 m
.02381 .97857 L
s
.02381 .02619 m
.97619 .02619 L
s
.02381 .21667 m
.97619 .21667 L
s
.02381 .40714 m
.97619 .40714 L
s
.02381 .59762 m
.97619 .59762 L
s
.02381 .7881 m
.97619 .7881 L
s
.02381 .97857 m
.97619 .97857 L
s
.21429 .02619 m
.21429 .97857 L
s
.40476 .02619 m
.40476 .97857 L
s
.59524 .02619 m
.59524 .97857 L
s
.78571 .02619 m
.78571 .97857 L
s
.97619 .02619 m
.97619 .97857 L
s
.02381 .97857 m
.21429 .7881 L
s
2.6 Mabswid
.21429 .02619 m
.21429 .97857 L
s
.02381 .7881 m
.97619 .7881 L
s
[(0)] .30952 .69286 0 0 Mshowa
[(1)] .5 .69286 0 0 Mshowa
[(2)] .69048 .69286 0 0 Mshowa
[(3)] .88095 .69286 0 0 Mshowa
[(1)] .30952 .50238 0 0 Mshowa
[(2)] .5 .50238 0 0 Mshowa
[(3)] .69048 .50238 0 0 Mshowa
[(0)] .88095 .50238 0 0 Mshowa
[(2)] .30952 .3119 0 0 Mshowa
[(3)] .5 .3119 0 0 Mshowa
[(0)] .69048 .3119 0 0 Mshowa
[(1)] .88095 .3119 0 0 Mshowa
[(3)] .30952 .12143 0 0 Mshowa
[(0)] .5 .12143 0 0 Mshowa
[(1)] .69048 .12143 0 0 Mshowa
[(2)] .88095 .12143 0 0 Mshowa
[(0)] .11905 .69286 0 0 Mshowa
[(1)] .11905 .50238 0 0 Mshowa
[(2)] .11905 .3119 0 0 Mshowa
[(3)] .11905 .12143 0 0 Mshowa
[(0)] .30952 .88333 0 0 Mshowa
[(1)] .5 .88333 0 0 Mshowa
[(2)] .69048 .88333 0 0 Mshowa
[(3)] .88095 .88333 0 0 Mshowa
[(Z[4])] .02381 1.07381 -1 0 Mshowa
gsave
.97619 1.07381 -113 -10 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20 translate 1 -1 scale
gsave
0.000000 0.000000 0.000000 setrgbcolor
1.000000 setlinewidth
gsave
newpath
 79.000000 16.000000 moveto
 540.000000 16.000000 lineto
 540.000000 4.000000 lineto
 79.000000 4.000000 lineto
 79.000000 16.000000 lineto
closepath
clip newpath
81.000000 13.000000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
0.000000 0.000000 rmoveto
81.000000 13.000000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
(x) show
93.000000 13.000000 moveto
%%IncludeResource: font Math1Mono
%%IncludeFont: Math1Mono
/Math1Mono findfont 10.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
(+) show
105.000000 13.000000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
(y) show
111.000000 13.000000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
0.000000 0.000000 rmoveto
1.000000 setlinewidth
grestore
grestore
%%DocumentNeededResources: font Math1Mono
%%+ font Courier
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Math1Mono
%%+ Courier
%%DocumentSuppliedFonts:
%%DocumentFonts: font Math1Mono
%%+ font Courier
grestore
[(x)] .08857 .85095 0 0 Mshowa
[(y)] .16667 .92143 0 0 Mshowa
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
 ImageSize->{176.812, 194.438},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"Global",
 CellLabel->"From In[6]:=",
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXMtS2zAUNXGglPgRNoW2JCEz/Ra66g90l2E6A4sOlLLrD/Sx76of0O74
hv5Yar1l5yh+0EgOuZmJbI4sn3Ml68r3RsO7xf3Vh4+L++vLxfnbu8Xt1fXl
5/OLm7sCiveiKHoovn/PI3a+LE5l8bAsPkXlmsOQHX6zy4cWEMVLcROGLKMJ
KwcMmvO/RW1Rx1tMeSmxL/wbzXgpsB/vf7FvcR0rVVv+iQZESqRESqRE2ifS
ESs5lGv6TGNjICQRd+S1q5ISVsq2q+JGrBwKtlYyM0uIwhIt+BjUpkD6SN7f
woSWVTtSS73CcmBRYtmhsKdiWwpsy9rZZuzIwRl6vDZgRwbsSJ/IGPEZJW8p
sQ7TayNeQHaNY87Itv33kERKpERKpETqgdSVn1DtJ3rpmFt3UhqnQNkMKJva
i6vbdCIlUiIlUiLdMVKTpsg0faaxHAgxARQKllLBF+FgaQRTJg1kotyDEZyD
WiQdhbYoeE2kDgsTNKsWJTXBawPbUO4hhXFjyfKtsA3lI0xMfOyyvGKHST84
43NvFjmyEJXZsz5N0e8xM+OTg7MxsOPRLmElf9JXd0mkREqkREqkHkhdGRLV
fqKXjnlN/kUpmwFlpXyO23QiJVIiJVIiDUdq0ge5ps9gSqEUrTlTGTyulG1X
xTl+962XiWKwTAvOQW2X7RbKiNySrrCuv8j7sq1uu8U221a3BaNkx6P2hviy
qMHGizADZnIH47I/aLkfY8P+YHccNJESKZES6a6ROjMVsv1kqZaOuX0nkAdR
yma1eRW36URKpERKpES6W6QmQMnBWfP9GKVgqfU+kFqZjtgv00ozfEGXn7vX
JRy6/SLfS/NQzqHbJpFemof297TZJ9JLo5LmWZX/MGwdfYMzkYI3KD3aN+yO
syZSIiVSIt0h0pgd/rCaoQMoyxKNz1gZe+sLUfWal0ONiVv5VPAKYP6eCFH1
stIL8uNbxinsigBCTgAWhxDyAmDDEEL2NanoCDVR+Bu1+2KPCg8qmEvcQQhx
zwD23HVdH3oOiTsMIc754Dm71LfCMcCOtJBe5WVEVQ6wkRa8rUkZUZUBLNmk
bV4yMqIqdWFbmI6xRgaN4LbnYqxJhfwZh4yv71V+RlQdAQx53CCrKVqcEBbk
PeSwYW8GEYeGsCqOLa5BhrX6HrIEUyiYuH2XOPRuEmRsnfGDbyExwE5CCBkA
7NSPkH27Sj0bItuwefJyIF+cn/nufWbsxAspJ5h6obI3/7zRjN8F0OC/1TY/
mDdWE0h8Y2exxiL48oQWmq8AE6ul8FP8aUFzNtaMaHLdaGUV54c0oEVRYDD6
RGqaeppbcD/0ItZCkotqoLsPifvkIuC+oboSM5lyVNAijVxZFdMrT8ceWSOp
etvIYXNTSa0engPXxYeWOPMUD/SAVM5+isvlHIv2/gFvKju2\
\>"],
 ImageRangeCache->{{{0, 175.812}, {193.438, 0}} -> {-1.12503, -0.138182, \
0.0298617, 0.0298617}}],

Cell[BoxData[
 TagBox[
  RowBox[{"\[SkeletonIndicator]", "Graphics", "\[SkeletonIndicator]"}],
  False,
  Editable->False]], "Output",
 CellTags->"Global",
 CellLabel->"Out[6]="]
}, Open  ]],

Cell[TextData[{
 "Now this graphic image can be used along side another graphic using ",
 StyleBox["GraphicsArray", "MR"],
 "."
}], "MathCaption",
 CellTags->"Global"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"gr2", "=", 
   RowBox[{"LeftCosets", "[", 
    RowBox[{
     RowBox[{"Z", "[", "8", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "4"}], "}"}], ",", 
     RowBox[{"Mode", "\[Rule]", "Visual"}], ",", 
     RowBox[{"Output", "\[Rule]", "Graphics"}], ",", 
     RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"GraphicsRow", "[", 
    RowBox[{"{", 
     RowBox[{"gr1", ",", "gr2"}], "}"}], "]"}], ",", 
   RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}]}], 
  "]"}]}], "Input",
 CellTags->"Global",
 CellLabel->"In[7]:="],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .52381 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.47619 0.0124717 0.47619 [
[ 0 0 0 0 ]
[ 1 .52381 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 .52381 L
0 .52381 L
closepath
clip
newpath
% Start of sub-graphic
p
0.0238095 0.0124717 0.477324 0.511338 MathSubStart
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.214286 0.190476 0.0261905 0.190476 [
[ 0 0 0 0 ]
[ 1 1.1 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 1.1 L
0 1.1 L
closepath
clip
newpath
1 1 0 r
.21429 .59762 m
.21429 .7881 L
.40476 .7881 L
.40476 .59762 L
F
.78571 .40714 m
.78571 .59762 L
.97619 .59762 L
.97619 .40714 L
F
.59524 .21667 m
.59524 .40714 L
.78571 .40714 L
.78571 .21667 L
F
.40476 .02619 m
.40476 .21667 L
.59524 .21667 L
.59524 .02619 L
F
1 .5 0 r
.40476 .59762 m
.40476 .7881 L
.59524 .7881 L
.59524 .59762 L
F
.21429 .40714 m
.21429 .59762 L
.40476 .59762 L
.40476 .40714 L
F
.78571 .21667 m
.78571 .40714 L
.97619 .40714 L
.97619 .21667 L
F
.59524 .02619 m
.59524 .21667 L
.78571 .21667 L
.78571 .02619 L
F
.56 .37 .6 r
.59524 .59762 m
.59524 .7881 L
.78571 .7881 L
.78571 .59762 L
F
.40476 .40714 m
.40476 .59762 L
.59524 .59762 L
.59524 .40714 L
F
.21429 .21667 m
.21429 .40714 L
.40476 .40714 L
.40476 .21667 L
F
.78571 .02619 m
.78571 .21667 L
.97619 .21667 L
.97619 .02619 L
F
0 0 1 r
.78571 .59762 m
.78571 .7881 L
.97619 .7881 L
.97619 .59762 L
F
.59524 .40714 m
.59524 .59762 L
.78571 .59762 L
.78571 .40714 L
F
.40476 .21667 m
.40476 .40714 L
.59524 .40714 L
.59524 .21667 L
F
.21429 .02619 m
.21429 .21667 L
.40476 .21667 L
.40476 .02619 L
F
1 1 0 r
.21429 .7881 m
.21429 .97857 L
.40476 .97857 L
.40476 .7881 L
F
1 .5 0 r
.40476 .7881 m
.40476 .97857 L
.59524 .97857 L
.59524 .7881 L
F
.56 .37 .6 r
.59524 .7881 m
.59524 .97857 L
.78571 .97857 L
.78571 .7881 L
F
0 0 1 r
.78571 .7881 m
.78571 .97857 L
.97619 .97857 L
.97619 .7881 L
F
1 1 0 r
.02381 .59762 m
.02381 .7881 L
.21429 .7881 L
.21429 .59762 L
F
1 .5 0 r
.02381 .40714 m
.02381 .59762 L
.21429 .59762 L
.21429 .40714 L
F
.56 .37 .6 r
.02381 .21667 m
.02381 .40714 L
.21429 .40714 L
.21429 .21667 L
F
0 0 1 r
.02381 .02619 m
.02381 .21667 L
.21429 .21667 L
.21429 .02619 L
F
0 g
1 Mabswid
[ ] 0 setdash
.02381 .02619 m
.02381 .97857 L
s
.02381 .02619 m
.97619 .02619 L
s
.02381 .21667 m
.97619 .21667 L
s
.02381 .40714 m
.97619 .40714 L
s
.02381 .59762 m
.97619 .59762 L
s
.02381 .7881 m
.97619 .7881 L
s
.02381 .97857 m
.97619 .97857 L
s
.21429 .02619 m
.21429 .97857 L
s
.40476 .02619 m
.40476 .97857 L
s
.59524 .02619 m
.59524 .97857 L
s
.78571 .02619 m
.78571 .97857 L
s
.97619 .02619 m
.97619 .97857 L
s
.02381 .97857 m
.21429 .7881 L
s
2.6 Mabswid
.21429 .02619 m
.21429 .97857 L
s
.02381 .7881 m
.97619 .7881 L
s
[(0)] .30952 .69286 0 0 Mshowa
[(1)] .5 .69286 0 0 Mshowa
[(2)] .69048 .69286 0 0 Mshowa
[(3)] .88095 .69286 0 0 Mshowa
[(1)] .30952 .50238 0 0 Mshowa
[(2)] .5 .50238 0 0 Mshowa
[(3)] .69048 .50238 0 0 Mshowa
[(0)] .88095 .50238 0 0 Mshowa
[(2)] .30952 .3119 0 0 Mshowa
[(3)] .5 .3119 0 0 Mshowa
[(0)] .69048 .3119 0 0 Mshowa
[(1)] .88095 .3119 0 0 Mshowa
[(3)] .30952 .12143 0 0 Mshowa
[(0)] .5 .12143 0 0 Mshowa
[(1)] .69048 .12143 0 0 Mshowa
[(2)] .88095 .12143 0 0 Mshowa
[(0)] .11905 .69286 0 0 Mshowa
[(1)] .11905 .50238 0 0 Mshowa
[(2)] .11905 .3119 0 0 Mshowa
[(3)] .11905 .12143 0 0 Mshowa
[(0)] .30952 .88333 0 0 Mshowa
[(1)] .5 .88333 0 0 Mshowa
[(2)] .69048 .88333 0 0 Mshowa
[(3)] .88095 .88333 0 0 Mshowa
[(Z[4])] .02381 1.07381 -1 0 Mshowa
gsave
.97619 1.07381 -113 -10 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20 translate 1 -1 scale
gsave
0.000000 0.000000 0.000000 setrgbcolor
1.000000 setlinewidth
gsave
newpath
 79.000000 16.000000 moveto
 540.000000 16.000000 lineto
 540.000000 4.000000 lineto
 79.000000 4.000000 lineto
 79.000000 16.000000 lineto
closepath
clip newpath
81.000000 13.000000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
0.000000 0.000000 rmoveto
81.000000 13.000000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
(x) show
93.000000 13.000000 moveto
%%IncludeResource: font Math1Mono
%%IncludeFont: Math1Mono
/Math1Mono findfont 10.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
(+) show
105.000000 13.000000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
(y) show
111.000000 13.000000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
0.000000 0.000000 rmoveto
1.000000 setlinewidth
grestore
grestore
%%DocumentNeededResources: font Math1Mono
%%+ font Courier
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Math1Mono
%%+ Courier
%%DocumentSuppliedFonts:
%%DocumentFonts: font Math1Mono
%%+ font Courier
grestore
[(x)] .08857 .85095 0 0 Mshowa
[(y)] .16667 .92143 0 0 Mshowa
MathSubEnd
P
% End of sub-graphic
% Start of sub-graphic
p
0.522676 0.0124717 0.97619 0.511338 MathSubStart
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.12963 0.10582 0.0251323 0.10582 [
[ 0 0 0 0 ]
[ 1 1.05556 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 1.05556 L
0 1.05556 L
closepath
clip
newpath
1 1 0 r
.12963 .76587 m
.12963 .87169 L
.23545 .87169 L
.23545 .76587 L
F
.23545 .66005 m
.23545 .76587 L
.34127 .76587 L
.34127 .66005 L
F
.87037 .55423 m
.87037 .66005 L
.97619 .66005 L
.97619 .55423 L
F
.76455 .44841 m
.76455 .55423 L
.87037 .55423 L
.87037 .44841 L
F
.65873 .34259 m
.65873 .44841 L
.76455 .44841 L
.76455 .34259 L
F
.55291 .23677 m
.55291 .34259 L
.65873 .34259 L
.65873 .23677 L
F
.44709 .13095 m
.44709 .23677 L
.55291 .23677 L
.55291 .13095 L
F
.34127 .02513 m
.34127 .13095 L
.44709 .13095 L
.44709 .02513 L
F
.23545 .76587 m
.23545 .87169 L
.34127 .87169 L
.34127 .76587 L
F
.12963 .66005 m
.12963 .76587 L
.23545 .76587 L
.23545 .66005 L
F
.76455 .55423 m
.76455 .66005 L
.87037 .66005 L
.87037 .55423 L
F
.87037 .44841 m
.87037 .55423 L
.97619 .55423 L
.97619 .44841 L
F
.55291 .34259 m
.55291 .44841 L
.65873 .44841 L
.65873 .34259 L
F
.65873 .23677 m
.65873 .34259 L
.76455 .34259 L
.76455 .23677 L
F
.34127 .13095 m
.34127 .23677 L
.44709 .23677 L
.44709 .13095 L
F
.44709 .02513 m
.44709 .13095 L
.55291 .13095 L
.55291 .02513 L
F
1 .5 0 r
.34127 .76587 m
.34127 .87169 L
.44709 .87169 L
.44709 .76587 L
F
.44709 .66005 m
.44709 .76587 L
.55291 .76587 L
.55291 .66005 L
F
.12963 .55423 m
.12963 .66005 L
.23545 .66005 L
.23545 .55423 L
F
.23545 .44841 m
.23545 .55423 L
.34127 .55423 L
.34127 .44841 L
F
.87037 .34259 m
.87037 .44841 L
.97619 .44841 L
.97619 .34259 L
F
.76455 .23677 m
.76455 .34259 L
.87037 .34259 L
.87037 .23677 L
F
.65873 .13095 m
.65873 .23677 L
.76455 .23677 L
.76455 .13095 L
F
.55291 .02513 m
.55291 .13095 L
.65873 .13095 L
.65873 .02513 L
F
.44709 .76587 m
.44709 .87169 L
.55291 .87169 L
.55291 .76587 L
F
.34127 .66005 m
.34127 .76587 L
.44709 .76587 L
.44709 .66005 L
F
.23545 .55423 m
.23545 .66005 L
.34127 .66005 L
.34127 .55423 L
F
.12963 .44841 m
.12963 .55423 L
.23545 .55423 L
.23545 .44841 L
F
.76455 .34259 m
.76455 .44841 L
.87037 .44841 L
.87037 .34259 L
F
.87037 .23677 m
.87037 .34259 L
.97619 .34259 L
.97619 .23677 L
F
.55291 .13095 m
.55291 .23677 L
.65873 .23677 L
.65873 .13095 L
F
.65873 .02513 m
.65873 .13095 L
.76455 .13095 L
.76455 .02513 L
F
.56 .37 .6 r
.55291 .76587 m
.55291 .87169 L
.65873 .87169 L
.65873 .76587 L
F
.65873 .66005 m
.65873 .76587 L
.76455 .76587 L
.76455 .66005 L
F
.34127 .55423 m
.34127 .66005 L
.44709 .66005 L
.44709 .55423 L
F
.44709 .44841 m
.44709 .55423 L
.55291 .55423 L
.55291 .44841 L
F
.12963 .34259 m
.12963 .44841 L
.23545 .44841 L
.23545 .34259 L
F
.23545 .23677 m
.23545 .34259 L
.34127 .34259 L
.34127 .23677 L
F
.87037 .13095 m
.87037 .23677 L
.97619 .23677 L
.97619 .13095 L
F
.76455 .02513 m
.76455 .13095 L
.87037 .13095 L
.87037 .02513 L
F
.65873 .76587 m
.65873 .87169 L
.76455 .87169 L
.76455 .76587 L
F
.55291 .66005 m
.55291 .76587 L
.65873 .76587 L
.65873 .66005 L
F
.44709 .55423 m
.44709 .66005 L
.55291 .66005 L
.55291 .55423 L
F
.34127 .44841 m
.34127 .55423 L
.44709 .55423 L
.44709 .44841 L
F
.23545 .34259 m
.23545 .44841 L
.34127 .44841 L
.34127 .34259 L
F
.12963 .23677 m
.12963 .34259 L
.23545 .34259 L
.23545 .23677 L
F
.76455 .13095 m
.76455 .23677 L
.87037 .23677 L
.87037 .13095 L
F
.87037 .02513 m
.87037 .13095 L
.97619 .13095 L
.97619 .02513 L
F
0 0 1 r
.76455 .76587 m
.76455 .87169 L
.87037 .87169 L
.87037 .76587 L
F
.87037 .66005 m
.87037 .76587 L
.97619 .76587 L
.97619 .66005 L
F
.55291 .55423 m
.55291 .66005 L
.65873 .66005 L
.65873 .55423 L
F
.65873 .44841 m
.65873 .55423 L
.76455 .55423 L
.76455 .44841 L
F
.34127 .34259 m
.34127 .44841 L
.44709 .44841 L
.44709 .34259 L
F
.44709 .23677 m
.44709 .34259 L
.55291 .34259 L
.55291 .23677 L
F
.12963 .13095 m
.12963 .23677 L
.23545 .23677 L
.23545 .13095 L
F
.23545 .02513 m
.23545 .13095 L
.34127 .13095 L
.34127 .02513 L
F
.87037 .76587 m
.87037 .87169 L
.97619 .87169 L
.97619 .76587 L
F
.76455 .66005 m
.76455 .76587 L
.87037 .76587 L
.87037 .66005 L
F
.65873 .55423 m
.65873 .66005 L
.76455 .66005 L
.76455 .55423 L
F
.55291 .44841 m
.55291 .55423 L
.65873 .55423 L
.65873 .44841 L
F
.44709 .34259 m
.44709 .44841 L
.55291 .44841 L
.55291 .34259 L
F
.34127 .23677 m
.34127 .34259 L
.44709 .34259 L
.44709 .23677 L
F
.23545 .13095 m
.23545 .23677 L
.34127 .23677 L
.34127 .13095 L
F
.12963 .02513 m
.12963 .13095 L
.23545 .13095 L
.23545 .02513 L
F
1 1 0 r
.12963 .87169 m
.12963 .97751 L
.23545 .97751 L
.23545 .87169 L
F
.23545 .87169 m
.23545 .97751 L
.34127 .97751 L
.34127 .87169 L
F
1 .5 0 r
.34127 .87169 m
.34127 .97751 L
.44709 .97751 L
.44709 .87169 L
F
.44709 .87169 m
.44709 .97751 L
.55291 .97751 L
.55291 .87169 L
F
.56 .37 .6 r
.55291 .87169 m
.55291 .97751 L
.65873 .97751 L
.65873 .87169 L
F
.65873 .87169 m
.65873 .97751 L
.76455 .97751 L
.76455 .87169 L
F
0 0 1 r
.76455 .87169 m
.76455 .97751 L
.87037 .97751 L
.87037 .87169 L
F
.87037 .87169 m
.87037 .97751 L
.97619 .97751 L
.97619 .87169 L
F
1 1 0 r
.02381 .76587 m
.02381 .87169 L
.12963 .87169 L
.12963 .76587 L
F
.02381 .66005 m
.02381 .76587 L
.12963 .76587 L
.12963 .66005 L
F
1 .5 0 r
.02381 .55423 m
.02381 .66005 L
.12963 .66005 L
.12963 .55423 L
F
.02381 .44841 m
.02381 .55423 L
.12963 .55423 L
.12963 .44841 L
F
.56 .37 .6 r
.02381 .34259 m
.02381 .44841 L
.12963 .44841 L
.12963 .34259 L
F
.02381 .23677 m
.02381 .34259 L
.12963 .34259 L
.12963 .23677 L
F
0 0 1 r
.02381 .13095 m
.02381 .23677 L
.12963 .23677 L
.12963 .13095 L
F
.02381 .02513 m
.02381 .13095 L
.12963 .13095 L
.12963 .02513 L
F
0 g
1 Mabswid
[ ] 0 setdash
.02381 .02513 m
.02381 .97751 L
s
.02381 .02513 m
.97619 .02513 L
s
.02381 .13095 m
.97619 .13095 L
s
.02381 .23677 m
.97619 .23677 L
s
.02381 .34259 m
.97619 .34259 L
s
.02381 .44841 m
.97619 .44841 L
s
.02381 .55423 m
.97619 .55423 L
s
.02381 .66005 m
.97619 .66005 L
s
.02381 .76587 m
.97619 .76587 L
s
.02381 .87169 m
.97619 .87169 L
s
.02381 .97751 m
.97619 .97751 L
s
.12963 .02513 m
.12963 .97751 L
s
.23545 .02513 m
.23545 .97751 L
s
.34127 .02513 m
.34127 .97751 L
s
.44709 .02513 m
.44709 .97751 L
s
.55291 .02513 m
.55291 .97751 L
s
.65873 .02513 m
.65873 .97751 L
s
.76455 .02513 m
.76455 .97751 L
s
.87037 .02513 m
.87037 .97751 L
s
.97619 .02513 m
.97619 .97751 L
s
.02381 .97751 m
.12963 .87169 L
s
2.6 Mabswid
.12963 .02513 m
.12963 .97751 L
s
.02381 .87169 m
.97619 .87169 L
s
[(0)] .18254 .81878 0 0 Mshowa
[(4)] .28836 .81878 0 0 Mshowa
[(1)] .39418 .81878 0 0 Mshowa
[(5)] .5 .81878 0 0 Mshowa
[(2)] .60582 .81878 0 0 Mshowa
[(6)] .71164 .81878 0 0 Mshowa
[(3)] .81746 .81878 0 0 Mshowa
[(7)] .92328 .81878 0 0 Mshowa
[(4)] .18254 .71296 0 0 Mshowa
[(0)] .28836 .71296 0 0 Mshowa
[(5)] .39418 .71296 0 0 Mshowa
[(1)] .5 .71296 0 0 Mshowa
[(6)] .60582 .71296 0 0 Mshowa
[(2)] .71164 .71296 0 0 Mshowa
[(7)] .81746 .71296 0 0 Mshowa
[(3)] .92328 .71296 0 0 Mshowa
[(1)] .18254 .60714 0 0 Mshowa
[(5)] .28836 .60714 0 0 Mshowa
[(2)] .39418 .60714 0 0 Mshowa
[(6)] .5 .60714 0 0 Mshowa
[(3)] .60582 .60714 0 0 Mshowa
[(7)] .71164 .60714 0 0 Mshowa
[(4)] .81746 .60714 0 0 Mshowa
[(0)] .92328 .60714 0 0 Mshowa
[(5)] .18254 .50132 0 0 Mshowa
[(1)] .28836 .50132 0 0 Mshowa
[(6)] .39418 .50132 0 0 Mshowa
[(2)] .5 .50132 0 0 Mshowa
[(7)] .60582 .50132 0 0 Mshowa
[(3)] .71164 .50132 0 0 Mshowa
[(0)] .81746 .50132 0 0 Mshowa
[(4)] .92328 .50132 0 0 Mshowa
[(2)] .18254 .3955 0 0 Mshowa
[(6)] .28836 .3955 0 0 Mshowa
[(3)] .39418 .3955 0 0 Mshowa
[(7)] .5 .3955 0 0 Mshowa
[(4)] .60582 .3955 0 0 Mshowa
[(0)] .71164 .3955 0 0 Mshowa
[(5)] .81746 .3955 0 0 Mshowa
[(1)] .92328 .3955 0 0 Mshowa
[(6)] .18254 .28968 0 0 Mshowa
[(2)] .28836 .28968 0 0 Mshowa
[(7)] .39418 .28968 0 0 Mshowa
[(3)] .5 .28968 0 0 Mshowa
[(0)] .60582 .28968 0 0 Mshowa
[(4)] .71164 .28968 0 0 Mshowa
[(1)] .81746 .28968 0 0 Mshowa
[(5)] .92328 .28968 0 0 Mshowa
[(3)] .18254 .18386 0 0 Mshowa
[(7)] .28836 .18386 0 0 Mshowa
[(4)] .39418 .18386 0 0 Mshowa
[(0)] .5 .18386 0 0 Mshowa
[(5)] .60582 .18386 0 0 Mshowa
[(1)] .71164 .18386 0 0 Mshowa
[(6)] .81746 .18386 0 0 Mshowa
[(2)] .92328 .18386 0 0 Mshowa
[(7)] .18254 .07804 0 0 Mshowa
[(3)] .28836 .07804 0 0 Mshowa
[(0)] .39418 .07804 0 0 Mshowa
[(4)] .5 .07804 0 0 Mshowa
[(1)] .60582 .07804 0 0 Mshowa
[(5)] .71164 .07804 0 0 Mshowa
[(2)] .81746 .07804 0 0 Mshowa
[(6)] .92328 .07804 0 0 Mshowa
[(0)] .07672 .81878 0 0 Mshowa
[(4)] .07672 .71296 0 0 Mshowa
[(1)] .07672 .60714 0 0 Mshowa
[(5)] .07672 .50132 0 0 Mshowa
[(2)] .07672 .3955 0 0 Mshowa
[(6)] .07672 .28968 0 0 Mshowa
[(3)] .07672 .18386 0 0 Mshowa
[(7)] .07672 .07804 0 0 Mshowa
[(0)] .18254 .9246 0 0 Mshowa
[(4)] .28836 .9246 0 0 Mshowa
[(1)] .39418 .9246 0 0 Mshowa
[(5)] .5 .9246 0 0 Mshowa
[(2)] .60582 .9246 0 0 Mshowa
[(6)] .71164 .9246 0 0 Mshowa
[(3)] .81746 .9246 0 0 Mshowa
[(7)] .92328 .9246 0 0 Mshowa
[(Z[8])] .02381 1.03042 -1 0 Mshowa
gsave
.97619 1.03042 -113 -10 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20 translate 1 -1 scale
gsave
0.000000 0.000000 0.000000 setrgbcolor
1.000000 setlinewidth
gsave
newpath
 79.000000 16.000000 moveto
 540.000000 16.000000 lineto
 540.000000 4.000000 lineto
 79.000000 4.000000 lineto
 79.000000 16.000000 lineto
closepath
clip newpath
81.000000 13.000000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
0.000000 0.000000 rmoveto
81.000000 13.000000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
(x) show
93.000000 13.000000 moveto
%%IncludeResource: font Math1Mono
%%IncludeFont: Math1Mono
/Math1Mono findfont 10.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
(+) show
105.000000 13.000000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
(y) show
111.000000 13.000000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
0.000000 0.000000 rmoveto
1.000000 setlinewidth
grestore
grestore
%%DocumentNeededResources: font Math1Mono
%%+ font Courier
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Math1Mono
%%+ Courier
%%DocumentSuppliedFonts:
%%DocumentFonts: font Math1Mono
%%+ font Courier
grestore
[(x)] .05979 .90661 0 0 Mshowa
[(y)] .10317 .94577 0 0 Mshowa
MathSubEnd
P
% End of sub-graphic
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
 ImageSize->{288, 150.812},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"Global",
 CellLabel->"From In[7]:=",
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXUuP5LYR5vZjHt2zcDyzszuT+LCbf5D4EN/z8MnHuSWHhRHAPgRJJs4h
gP03AtiHGD74sn9yMiIlipKqyKqS2CIlLrAtDSmqW8WvvioWi9QX77/56q9/
e//N11++f/v54/t/fPX1l/96+6e/Pz4XbV8o9eKtUuq/b1V1/vR8Wn/of++q
j/qPCc4P1eHb6v4/OAVq+2S+VV+ubqvPTVX0Rv9tap/rdIvX+vO3puzD8/+H
eMfqOx4ePjx9eP4f45iTHKrf/Pj4GOX4fP8bi4xjLhKJjIwbQACXVgAvHQE0
tUdAKAf92S076s/PTJnw4U8ltAZ6gnbZAOkUqrU4IHGFUbWRCDEnIBVGKoxU
GKkwUjpAmoGRNgB8dlYoe6AWKtN30UVngBi31Wd9vyEIt/ZHmdo9BCtzQdWT
dCiS2vREpZ+9ggqRx/RTqXMfjeUDvxl4bBr4QWVbQKAb/blzy6rzHYBKvAyn
yxAdSuuxvvH1GUSX7vUYneaE1xno0kVVp2zTJ78OmuPjVV+6a1l0HpRyvUCo
3L2Pp50HpedPjTU62q657Jb1pHdpLdSxvisRw8bEvI5Ft8YaHTksGxG2cAsp
WJ0ypW9Zld1MCdu6d+7EvQDVA8Rpvubcx8U+uB4AUV9YUV9htT2ZXsDiPwg4
OSTqKTgZ02wBJ0NQ3Vj5nQe4NjYngzCflp0pfQv1jdsHoXrfdTx2XhTcmS6w
zGXeudKo/u8M4hqZ7WxZlLFZzfj42MwMgq64Qm6MG0O29VfBBhFg5upYW4Ez
gbvbwrJ1JA7dsjRhGTNKh7Bw/hGpNEKbq6NH9zpEhf30uDQccmxEvMjoCQdR
htTvYituY6bKPE4yZJdWPImrQBJnriRtFNUqqhVFtRYHpDQcgbSAVBipMFJh
pMJI6QDpJIw0CAHWCRPKDQEOgnyNwELx7ic33Lc19xsCjxYMlCdqXHHFbAZ0
ByqFmXjjWWEuPnNNM8VChSEKPtpUTGgCPESE3HJf37gEGKrnEGdOeJ3BZZsG
r9BddoBA29wLfBYwKZT6yDJUD/QA1R/8Fuuutmv2wBk1PQHtmt4ULDTR5e0k
n6G7n6zjPDRSf9crKVWQKOTO280THJswb2Q+uEMp7z4o+wnoLpkUhZGgh5mJ
YjNiMRPRzevcB2sPgz+WV/V8bMAf2XlLA/zjRitaMQbpDMNRiDxhoUnyJqLU
9N1LiWNeM/eByspNPrmHzAtrn4q184/XzBX4K3RaUMniyZNEEQtXFlQWrlw0
Vw7TK4rST6n0V1xVMdL5RKop0nZQniREQkeUhD4RSZUyPkbaFVKIjFrGT29Q
K/Q6pO2WgdrCtYVr80Nt4drCtTmh9kBVWWxHCy/FXlIutyu4GNRq1regawgu
bPz2qn5WooxtCgkPtAaze4hp67DvHnzypg54UrtGjUG1KpCbAs38oHNKg8A6
FhzHkn/Cs54HKrTN5ec+VI8hYybVSMhYQjEKjoJAC7XO9edgDu4o4G0Js/h4
2/0bkALG24FmonKnnqoKI9dzQ5NL+J4wuCnwdWCow7D68W4383qJ2830XTPW
GeypASFjHnqgWbDPfMJWspzQiXSmvy9NCpoioPNY1kViZRrXCV2Enox+7Pqi
M+7AHnqs2m3a9ctNk1ux5DymhqwXWytuxsY3eMZNNzPH+GLXU+mF0OPiWg0G
vXOsB4UI12E9GPEdSl9AwiRaHSg9Ddq3L5b1APVlOjtC6fC+zhw5hO3dtAQ5
KndtA9nuXHHNWqTBuE2YEuvGHjK6NbcNTEQzGIfkuPXIHulDRUnCavfciTIO
J+65A2+egyDdBhnijCmYxxLKl1A910wz2+UeFC2h/OlRy/jpJZQ/ArWFawvX
5ofawrWToLbkrRVSKKRQSKE4YMUBK1xbuLZw7alRO5irMtEyJNg4KPa9qQHp
JnqcsV0+y5zE7cQUndweScQxcuaPszkETCAeTfcRSIggoHr367H2ij4xQu0l
6nuIvBMoYU6C6jFOCnEVzEmxtPWpmUv5TWxSiMp5jW5DxHfb6W/9T30ccAaR
8pAz6HtMiLLc6zHLw9AK/u467D0sii5MogsxvdYaWCJdYFC6EdW1yJUEyhvj
5nui3lZGY9APzoAz9MBn0F+xsL5aHcjBHgQIeuqEXYpYGPZgzO5GbI2ALQMB
3UUr0rYMMZZy4K+MQEzGtgYl0sQ/pqNufyTPHTFj1UsKjGsJXKwT3jmQfokI
c5h4dRBOj6FLeLhAuLBwYeE1QTg5FsbyTRYg61TpgvEcRlS/k+qQuB1XHFJx
V083fpu4rqgvXTCTXz3YLA9gSEo1OyQQrq/v/zoWYTSzjhyeaF/ieAWIu13z
AQk5MzxzqVRK1dHxzCNngcnmkrOkV7hsIWEXhXg9l0BPIAsBD/njfjE8vhjc
xx63FtwXvk8R90JWYfG9XsS6wRwaNtp3fXkaH24PPaPdtKBXbt1KujjrNvgO
Vgix+xYKA5J0N5oCLocmJNBJCl3kX+CKppsByWhL1gMJ7zPbzcX/gEgo/I9J
klvu439XgqF6jl1QDE0ZuSsCNSdwB/SebEjczHmKNIk2Km4SiyNblOZJmAOI
2APkhBTGZzBC9YDkvAMF6mvcIigMlkI42uIIjqsNOU/oWN1PpiQe62Hz44QW
Aiun6oHGPHfTKTxd3JcwtWQ9kIxATj0dEHBcMetA8XdjWQfqwM29D9a+ero4
70As+rEEO9GsxALVYlBsX+7Hcb38e1UB1qE61hbiQGV/d70XNqxo95WKMuwG
MgeXDO4cyD9wLHMIrVhPEEtNGMzpMXU2YOaKQyruAubCzIWZVwfm5Ji5pPcV
4hi2K8SRGpiTI458wLwUl26w70kGsl8MkQBaoWX6Rv/9Kbc/TgZmCYjfdIRW
dH5GnU8GdzEdqUaBcdzNm2nlb9N7EhtVJlJbE+r1CaZdBi55P1MnrKuLoLkN
RtA3FUymyIUe0vJxYYjrpPWYmHzig7jQvR7jSoNjGj6pmEWRSpvECyZxpALl
eek1Gyhz3Uao3L2Ppx0Zyvzdydg79WUA4Cy5+HoqgBo/4U4sIageoNltDUyf
kNrNxKjpQ9TNxNib6mUA25XzLkXMkJhc3gzV+64bw7tjdgFbIpTnZeDBCM1A
FX6F2BOakmNTynlAblY3M2Tjffk64uLWPH+GtfGP06jbdY1MyUkFjylSq+dY
IqQtaLKOVKXoiSaIO8Fj5xAh7S260WeHbln9TlaisGrOv42h2LXdYr+MtV13
1JVilkBcKAH61k5uTCfiFwjoUkKvHB4Yo//QetPuC7cd5A4zUvIULAefQj3g
CbYnx0srsJco2j8TabbU0o/QbGm78L53q1N0qcIr5W6wgBumHFAoJDppuxWh
kMuGXN0urJgGK07vhxv/9E1M7rNLvCRODsUpzwFr+XHfWmNcQPy6Te9oQ4lb
exYIKu4hrNXj3wMVZ9uagpl01kRjGWymBDsUQfNf2FLJhHHH1TMJn1FxB6Vj
+N89wZ7/DpMgVI91RqiTIDJzhY6RHbfcqadCNTznlTBo5yXLLrSe3FSMjT2T
vTzu9PCUeMw+f9DXPUqWdZgdPOfl1PM+PO3fqsFZC9PebLb0LW+goYeTWCbk
0iaeLvUlPTRLBqouA3bMSRie87LnSeEJ8ykFajH4lDO+JvLwdC+6SxiwKfmo
GyuFPXDGeD9ajzLt+9HCmGu3j2G6ng8P7csHGHyoeHvILGRglNKAPM3wjvCp
pe2yDu+kRGFpointYKE+fFfV3GQj0bT1sydRfK7etHpVfW6LIShAG2cITJVR
4p0tM7cqViE5aKVtFSBoXQNlxYFNElz58VY3AG3/rd6lFY7KnfnMCWcs8Tf7
AcxkF5xEGZDXDzjEXSjmTsDiL0CimwuN87Ld3sWW/l9d318v1kWqCXAGVomp
+iKsDCdNH5mGOgWrx8gvRIpQvdtpnvtSA5wTALoFr2YH6xXqDKT+xduV8m5k
pPffmnF6fGOi8Ykeaudej92Xge/wcusgvre9Mgzau0Li0aANTmhdTwVy43/c
i51eBr/X3+XfbajdQYCalsKE9A4oOwPK9oWtTwvp6Xjbd72Pt4n8y+J5AW+P
mnjFeRsC+dlKefs0E7RNWikDu+1mAnQutvsWMDl6W8MCaeIfDWL7CQShibrM
EDGf24vnWUZLoFS7jJZJwSVjf65wK1R2YYGW0VIln/9F4ceyVGmkBCcA4yVW
lhIYOXoq8WCXCcb8mNEM7QdzBfqi1lVMBJSx9Vyp0JJiHc7+rvFJEJmeA2V9
9/ypM95MRL5cZedCl6P0JEmjo3g0WDXfmlAiCG3epsS8czxMhxqS49H8jDqE
Ogid84VNufZFYtHR4bcZjXVHf3tbkRL08jPhlPCmlfcKIz97VwpdaQyTu1KC
Yn4sCHk5fW9oXijOyoI9P9uisB8uUyUvxToykfJSNhhS0ThlYc5aebXo9OVt
YLekqQTbq8hpKnu3ynbWzTqZdtvqbaPFVhBtUk5JOUHuy8CqaH5+YAdfrZRh
IfdpIBwRzZZEkmkTSaovuF0nmYKuE2xuJoZqSRBRQ+sPeQkQeHU3vF4pscLw
7BOs6xaU9I+p0j+cF8cObNnO0wMpxV7SDgP+2srs3z2CVsodrvbGsclJWaj3
0nZMKX9v5djyaUrSSxuj31sqqCfwfrZC/I8p0Je/M+c/AbL+S3Wm7/2xcxEh
tefPQJlZiKR+qA6afqBYZTs0hAJzv8f0Cp9Y75Z9ZBpde5/1V72GCvmtxg1D
CLZ76R+AWx4Fv1ko+l9ikpY/0R+xX6/tMhRyrvtfP7a//7fYl47uf0gQUCDS
D0Nqb3qkcAVUQfKApABdNwZgd0Bb6HsZ6GB11Bl28UewrDAZ6N+3w34SH7D3
9n7dgFX/7J+mwUtUZP4yFQFlP5qT/uX+ng3/pGm69X/OjyOIV7d9Ydro83f+
c/Xi/5L3Qls=\
\>"],
 ImageRangeCache->{{{0, 287}, {149.812, 0}} -> {-0.0536619, -0.0261961, \
0.0073426, 0.0073426}, {{7.25, 137}, {146.188, 3.5625}} -> {-1.42043, \
-0.28431, 0.0404912, 0.0404912}, {{149.938, 279.688}, {146.188, 3.5625}} -> \
{-12.1455, -0.70791, 0.0728332, 0.0728332}}],

Cell[BoxData[
 TagBox[
  RowBox[{"\[SkeletonIndicator]", "GraphicsArray", "\[SkeletonIndicator]"}],
  False,
  Editable->False]], "Output",
 CellTags->"Global",
 CellLabel->"Out[7]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5.2 Working with permutations and cycles", "Subsection",
 CellTags->{"PermIntroduction", "i:3"}],

Cell[CellGroupData[{

Cell["5.2.1 Introduction", "Subsubsection",
 CellMargins->{{Inherited, Inherited}, {Inherited, 8}},
 CellTags->"PermIntroduction"],

Cell[TextData[{
 "A permutation of a set ",
 Cell[BoxData[
  FormBox["S", TraditionalForm]]],
 " is a bijection (one-to-one and onto function) from ",
 Cell[BoxData[
  FormBox["S", TraditionalForm]]],
 " to ",
 Cell[BoxData[
  FormBox["S", TraditionalForm]]],
 ". Frequently, either the set ",
 Cell[BoxData[
  FormBox["S", TraditionalForm]]],
 " is the first ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 " positive integers or it can be viewed as such. For the most part, in these \
packages we view a permutation \[Sigma] as a function on ",
 StyleBox["Range", "MR"],
 "[",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 "]. Therefore, we describe it by the ordered list of the functional ",
 StyleBox["images",
  FontSlant->"Italic"],
 " of the domain ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"1", ",", " ", "2", ",", " ", "...", ",", " ", "n"}], "}"}], 
   TraditionalForm]]],
 ". In other words, the permutation \[Sigma] is given as a rearrangement of \
this set. For example, let \[Sigma] be the permutation that takes 1 to 4, 2 \
to 2, 3 to 1, and 4 to 3. "
}], "Text",
 CellTags->{"PermIntroduction", "i:40"}],

Cell[TextData[{
 "We define a permutation by using the ordered set of images of the domain ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"1", ",", " ", "2", ",", " ", "...", ",", " ", "n"}], "}"}], 
   TraditionalForm]]],
 ". Here, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Sigma]", "(", "1", ")"}], " ", "=", " ", "4"}], 
   TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Sigma]", "(", "2", ")"}], " ", "=", " ", "2"}], 
   TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Sigma]", "(", "3", ")"}], " ", "=", " ", "1"}], 
   TraditionalForm]]],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Sigma]", "(", "4", ")"}], " ", "=", " ", "3"}], 
   TraditionalForm]]],
 "."
}], "MathCaption",
 CellTags->"PermIntroduction"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Sigma]", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"4", ",", " ", "2", ",", " ", "1", ",", " ", "3"}], 
   "}"}]}]], "Input",
 CellTags->"PermIntroduction",
 CellLabel->"In[8]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "2", ",", "1", ",", "3"}], "}"}]], "Output",
 CellTags->"PermIntroduction",
 CellLabel->"Out[8]="]
}, Open  ]],

Cell[TextData[{
 "The function ",
 StyleBox["PermutationMatrix", "MR"],
 " allows us to view both the domain (first row) and image (second row) of a \
permutation, as it is sometimes presented."
}], "MathCaption",
 CellTags->"PermIntroduction"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PermutationMatrix", "[", "\[Sigma]", "]"}]], "Input",
 CellTags->"PermIntroduction",
 CellLabel->"In[9]:="],

Cell[BoxData[
 TagBox[
  RowBox[{"(", GridBox[{
     {"1", "2", "3", "4"},
     {"4", "2", "1", "3"}
    }], ")"}],
  MatrixForm[#]& ]], "Output",
 CellTags->"PermIntroduction",
 CellLabel->"Out[9]//MatrixForm="]
}, Open  ]],

Cell[TextData[{
 "Note that a permutation must be a bijection. Therefore, a list of length ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 " is considered a permutation only if it is the list ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"1", ",", " ", "2", ",", " ", "...", ",", " ", "n"}], "}"}], 
   TraditionalForm]]],
 " after the elements are sorted."
}], "MathCaption",
 CellTags->"PermIntroduction"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PermutationQ", "[", 
  RowBox[{"{", 
   RowBox[{"5", ",", " ", "2", ",", " ", "1", ",", " ", "3"}], "}"}], 
  "]"}]], "Input",
 CellTags->"PermIntroduction",
 CellLabel->"In[10]:="],

Cell[BoxData["False"], "Output",
 CellTags->"PermIntroduction",
 CellLabel->"Out[10]="]
}, Open  ]],

Cell[TextData[{
 "A number of functions deal with permutations (and cycles). Note that while \
the functions listed here are compatible with those found in the standard \
package ",
 ButtonBox["DiscreteMath`Permutations`",
  BaseStyle->"AddOnsLink",
  ButtonData:>{"DiscreteMath`Permutations`", "DiscreteMath`Permutations`"}],
 ", the functionality is greatly expanded here."
}], "Text",
 CellTags->"PermIntroduction"],

Cell[TextData[{
 "Below is a list of functions that have either the word ",
 StyleBox["Permutation", "MR"],
 " or ",
 StyleBox["Cycle", "MR"],
 " in their name (some of which are not related to these packages)."
}], "MathCaption",
 CellTags->"PermIntroduction"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Union", "[", 
  RowBox[{
   RowBox[{"Names", "[", "\"\<*Permutation*\>\"", "]"}], ",", 
   RowBox[{"Names", "[", "\"\<*Cycle*\>\"", "]"}]}], "]"}]], "Input",
 CellTags->"PermIntroduction",
 CellLabel->"In[11]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Cycle\"\>", ",", "\<\"CycleAs\"\>", 
   ",", "\<\"DisjointCyclesQ\"\>", ",", "\<\"EvenPermutationQ\"\>", 
   ",", "\<\"ExtendPermutation\"\>", ",", "\<\"FormGroupoidFromCycles\"\>", 
   ",", "\<\"FromCycles\"\>", ",", "\<\"MultiplyCycles\"\>", 
   ",", "\<\"MultiplyPermutations\"\>", ",", "\<\"OddPermutationQ\"\>", 
   ",", "\<\"PermutationComposition\"\>", ",", "\<\"PermutationGroup\"\>", 
   ",", "\<\"PermutationImage\"\>", ",", "\<\"PermutationInverse\"\>", 
   ",", "\<\"PermutationMatrix\"\>", ",", "\<\"PermutationQ\"\>", 
   ",", "\<\"Permutations\"\>", ",", "\<\"PermutationToPower\"\>", 
   ",", "\<\"RandomPermutation\"\>", ",", "\<\"SamePermutationQ\"\>", 
   ",", "\<\"ShowColoredPermutation\"\>", ",", "\<\"ShowPermutation\"\>", 
   ",", "\<\"ShowPossiblePermutations\"\>", ",", "\<\"TestPermutationQ\"\>", 
   ",", "\<\"ToCycles\"\>", ",", "\<\"ToPermutation\"\>"}], "}"}]], "Output",
 CellTags->"PermIntroduction",
 CellLabel->"Out[11]="]
}, Open  ]],

Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{
      StyleBox["PermutationQ", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox["list", "TI"], 
      StyleBox["]", "MR"]}], 
     StyleBox[
      RowBox[{
       StyleBox[
        RowBox[{"give", " "}],
        SingleLetterItalics->False], 
       StyleBox["True", "MR"], 
       StyleBox[
        RowBox[{" ", "if", " "}],
        SingleLetterItalics->False], 
       StyleBox["list",
        FontSlant->"Italic"], 
       StyleBox[
        RowBox[{" ", 
         RowBox[{
          RowBox[{"represents", " ", "a", " ", "permutation"}], ",", " ", 
          "and", " "}]}],
        SingleLetterItalics->False], 
       StyleBox["False", "MR"], 
       StyleBox[
        RowBox[{" ", "otherwise"}],
        SingleLetterItalics->False]}], "Text"]},
    {
     RowBox[{
      StyleBox["RandomPermutation", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox["n", "TI"], 
      StyleBox["]", "MR"]}], 
     StyleBox[
      RowBox[{
       StyleBox[
        RowBox[{
        "give", " ", "a", " ", "random", " ", "permutation", " ", "on", " ", 
         RowBox[{"{", 
          RowBox[{"1", ",", " ", "2", ",", " ", "\[Ellipsis]", ",", " "}]}]}],
        
        SingleLetterItalics->False], 
       StyleBox["n",
        FontSlant->"Italic"], "}"}], "Text"]},
    {
     RowBox[{
      StyleBox["Ordering", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox["list", "TI"], 
      StyleBox["]", "MR"]}], 
     StyleBox[
      RowBox[{
       StyleBox[
        RowBox[{
        "give", " ", "the", " ", "permutation", " ", "that", " ", "puts", " ",
          "the", " ", "elements", " ", "in", " "}],
        SingleLetterItalics->False], 
       StyleBox["list",
        FontSlant->"Italic"], 
       StyleBox[
        RowBox[{" ", 
         RowBox[{"in", " ", "order"}]}],
        SingleLetterItalics->False]}], "Text"]}
   }], NotebookDefault]], "DefinitionBox",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.35], {
      Scaled[0.65]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellTags->{"PermIntroduction", "i:4"}],

Cell[TextData[{
 "Basic functions for working with permutations; these are almost equivalent \
to those in ",
 StyleBox["DiscreteMath`Permutations`",
  FontFamily->"Courier"],
 "."
}], "Caption",
 CellTags->"PermIntroduction"],

Cell[TextData[{
 "The ",
 StyleBox["Ordering", "MR"],
 " function does not require the list to be a permutation on the integers 1, \
2, ..., ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 ". The following list is considered ordered when the elements appear in the \
order {1, 3, 2}."
}], "MathCaption",
 CellTags->"PermIntroduction"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ordering", "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<aleph\>\"", ",", " ", "\"\<gimel\>\"", ",", " ", "\"\<beth\>\""}], 
   "}"}], "]"}]], "Input",
 CellTags->"PermIntroduction",
 CellLabel->"In[12]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "2"}], "}"}]], "Output",
 CellTags->"PermIntroduction",
 CellLabel->"Out[12]="]
}, Open  ]],

Cell[TextData[{
 "When the list is a permutation, ",
 StyleBox["Ordering", "MR"],
 " effectively finds the inverse of the permutation."
}], "MathCaption",
 CellTags->"PermIntroduction"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q", " ", "=", " ", 
  RowBox[{"Ordering", "[", 
   RowBox[{"p", "=", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellTags->"PermIntroduction",
 CellLabel->"In[13]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "2"}], "}"}]], "Output",
 CellTags->"PermIntroduction",
 CellLabel->"Out[13]="]
}, Open  ]],

Cell[TextData[{
 "The following verifies that ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["q", TraditionalForm]]],
 " are inverses."
}], "MathCaption",
 CellTags->"PermIntroduction"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PermutationComposition", "[", 
  RowBox[{"q", ",", " ", "p"}], "]"}]], "Input",
 CellTags->"PermIntroduction",
 CellLabel->"In[14]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellTags->"PermIntroduction",
 CellLabel->"Out[14]="]
}, Open  ]],

Cell["And here is another way of verifying it.", "MathCaption",
 CellTags->"PermIntroduction"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q", " ", "==", " ", 
  RowBox[{"PermutationInverse", "[", "p", "]"}]}]], "Input",
 CellTags->"PermIntroduction",
 CellLabel->"In[15]:="],

Cell[BoxData["True"], "Output",
 CellTags->"PermIntroduction",
 CellLabel->"Out[15]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5.2.2 Permutation operations", "Subsubsection",
 CellTags->{"PermOperations", "i:5"}],

Cell[TextData[{
 "Since we are viewing a permutation of length ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 " as a ",
 StyleBox["function",
  FontSlant->"Italic"],
 " on ",
 Cell[BoxData[
  RowBox[{
   StyleBox["Range", "MR"], 
   StyleBox["[", "MR"], 
   StyleBox["n", "TI"], 
   StyleBox["]", "MR"]}]], "Input",
  GeneratedCell->True],
 ", we multiply two permutations by composing the two functions. Since there \
are two different traditions as to the order in which one composes two \
functions, the order for multiplying permutations is likewise in dispute. To \
remedy this, the function ",
 StyleBox["MultiplyPermutations", "MR"],
 " has an option called ",
 StyleBox["ProductOrder", "MR"],
 " that permits the values ",
 StyleBox["RightToLeft", "MR"],
 " and ",
 StyleBox["LeftToRight", "MR"],
 "."
}], "Text",
 CellTags->"PermOperations"],

Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{
      StyleBox["MultiplyPermutations", "MR"], 
      StyleBox["[", "MR"], 
      RowBox[{
       StyleBox["perm2", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["perm1", "TI"]}], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       StyleBox["give",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["the",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["product",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["of",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["the",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["permutation",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["perm1",
        FontSlant->"Italic"]}], 
      StyleBox[" ",
       SingleLetterItalics->False], "\n", 
      RowBox[{
       RowBox[{
        StyleBox["followed",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["by",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["the",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["permutation",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["perm2",
         FontSlant->"Italic"]}], 
       StyleBox[",",
        FontSlant->"Italic"], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        RowBox[{
        "working", " ", "from", " ", "right", " ", "to", " ", "left"}],
        SingleLetterItalics->False]}]}]},
    {
     RowBox[{
      StyleBox["MultiplyPermutations", "MR"], 
      StyleBox["[", "MR"], 
      RowBox[{
       StyleBox["perm2", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["perm1", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox[
        FormBox[
         StyleBox[
          RowBox[{"ProductOrder", " ", "\[Rule]", " ", "LeftToRight"}], "MR"],
         
         TraditionalForm], "TI"]}], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       StyleBox[
        RowBox[{
        "give", " ", "the", " ", "product", " ", "of", " ", "the", " ", 
         "permutation", " "}],
        SingleLetterItalics->False], 
       StyleBox["perm2",
        FontSlant->"Italic"]}], 
      StyleBox[" ",
       SingleLetterItalics->False], "\n", 
      RowBox[{
       RowBox[{
        StyleBox["followed",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["by",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["the",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["permutation",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["perm1",
         FontSlant->"Italic"]}], 
       StyleBox[",",
        FontSlant->"Italic"], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        RowBox[{
        "working", " ", "from", " ", "left", " ", "to", " ", "right"}],
        SingleLetterItalics->False]}]}]},
    {
     RowBox[{
      StyleBox["PermutationComposition", "MR"], 
      StyleBox["[", "MR"], 
      RowBox[{
       StyleBox["perm2", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["perm1", "TI"]}], 
      StyleBox["]", "MR"]}], 
     StyleBox[
      RowBox[{
       StyleBox[
        RowBox[{"identical", " ", "to", " "}],
        SingleLetterItalics->False], 
       StyleBox[
        FormBox[
         RowBox[{
          StyleBox["MultiplyPermutations", "MR"], 
          StyleBox["[", "MR"], 
          RowBox[{
           StyleBox["perm2", "TI"], 
           StyleBox[",", "TI"], " ", 
           StyleBox["perm1", "TI"], 
           StyleBox[",", "TI"], " ", 
           StyleBox[
            FormBox[
             StyleBox[
              RowBox[{"ProductOrder", " ", "\[Rule]", " ", "RightToLeft"}], 
              "MR",
              SingleLetterItalics->False],
             TraditionalForm], "TI"]}], 
          StyleBox["]", "MR"]}],
         StandardForm], "Text"]}], "Text"]}
   }], NotebookDefault]], "DefinitionBox",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.48], {
      Scaled[0.52]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellTags->{"PermOperations", "i:6"}],

Cell["Different ways of multiplying permutations.", "Caption",
 CellTags->"PermOperations"],

Cell["\<\
Here are two randomly chosen permutations of length eight and four \
respectively.\
\>", "MathCaption",
 CellTags->"PermOperations"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"p", " ", "=", " ", 
    RowBox[{"RandomPermutation", "[", "8", "]"}]}], ",", 
   RowBox[{"q", " ", "=", " ", 
    RowBox[{"RandomPermutation", "[", "4", "]"}]}]}], "}"}]], "Input",
 CellTags->"PermOperations",
 CellLabel->"In[16]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "4", ",", "6", ",", "1", ",", "3", ",", "2", ",", "5", ",", "7", ",", 
     "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "4", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellTags->"PermOperations",
 CellLabel->"Out[16]="]
}, Open  ]],

Cell[TextData[{
 "A permutation in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["S", "m"], TraditionalForm]]],
 " can be extended to one in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["S", "n"], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", ">", "m"}], TraditionalForm]]],
 ", with ",
 StyleBox["ExtendPermutation", "MR"],
 ". For example, we can extend ",
 Cell[BoxData[
  FormBox["q", TraditionalForm]]],
 " to a permutation in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["S", "8"], TraditionalForm]]],
 ", extending the function as the identity on the last four entries."
}], "MathCaption",
 CellTags->"PermOperations"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Column", "[", 
  RowBox[{"{", 
   RowBox[{"q", ",", 
    RowBox[{"ExtendPermutation", "[", 
     RowBox[{"q", ",", "8"}], "]"}]}], "}"}], "]"}]], "Input",
 CellTags->"PermOperations",
 CellLabel->"In[17]:="],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", "4", ",", "3"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
      "2", ",", "1", ",", "4", ",", "3", ",", "5", ",", "6", ",", "7", ",", 
       "8"}], "}"}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  ColumnForm[{{2, 1, 4, 3}, {2, 1, 4, 3, 5, 6, 7, 8}}],
  Editable->False]], "Output",
 CellTags->"PermOperations",
 CellLabel->"Out[17]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["ExtendPermutation", "Input",
  FontWeight->"Plain"],
 " is used automatically when we multiply ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["q", TraditionalForm]]],
 ". This is the result when performing the product from right to left, the \
default approach."
}], "MathCaption",
 CellTags->{"PermOperations", "i:41"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MultiplyPermutations", "[", 
  RowBox[{"p", ",", " ", "q"}], "]"}]], "Input",
 CellTags->"PermOperations",
 CellLabel->"In[18]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "6", ",", "4", ",", "3", ",", "1", ",", "2", ",", "5", ",", "7", ",", "8"}],
   "}"}]], "Output",
 CellTags->"PermOperations",
 CellLabel->"Out[18]="]
}, Open  ]],

Cell["\<\
Using the same permutations, we (generally) get a different result when we \
perform the product working from left to right.\
\>", "MathCaption",
 CellTags->"PermOperations"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MultiplyPermutations", "[", 
  RowBox[{"p", ",", " ", "q", ",", " ", 
   RowBox[{"ProductOrder", " ", "\[Rule]", " ", "LeftToRight"}]}], 
  "]"}]], "Input",
 CellTags->"PermOperations",
 CellLabel->"In[19]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "6", ",", "2", ",", "4", ",", "1", ",", "5", ",", "7", ",", "8"}],
   "}"}]], "Output",
 CellTags->"PermOperations",
 CellLabel->"Out[19]="]
}, Open  ]],

Cell[TextData[{
 "Note that permutations can be entered into ",
 StyleBox["MultiplyPermutations", "MR"],
 " either as a list of rules or in the standard permutation form. Note also \
that the ",
 StyleBox["Textual", "MR"],
 " mode indicates the rule form of the product but returns the standard \
form."
}], "MathCaption",
 CellTags->"PermOperations"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MultiplyPermutations", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", " ", "\[Rule]", " ", "4"}], ",", " ", 
     RowBox[{"2", " ", "\[Rule]", " ", "5"}], ",", " ", 
     RowBox[{"3", " ", "\[Rule]", " ", "3"}], ",", " ", 
     RowBox[{"4", " ", "\[Rule]", " ", "2"}], ",", " ", 
     RowBox[{"5", " ", "\[Rule]", " ", "1"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "4", ",", "2"}], "}"}], ",", " ", 
   RowBox[{"Mode", " ", "\[Rule]", " ", "Textual"}]}], "]"}]], "Input",
 CellTags->"PermOperations",
 CellLabel->"In[20]:="],

Cell[BoxData["\<\"The permutation resulting from the product of \"\>"], \
"Print",
 CellTags->"PermOperations"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\t\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "4", ",", "2"}], "}"}]}],
  SequenceForm["\t", {3, 1, 4, 2}],
  Editable->False]], "Print",
 CellTags->"PermOperations"],

Cell[BoxData["\<\"followed by\"\>"], "Print",
 CellTags->"PermOperations"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\t\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "4"}], ",", 
     RowBox[{"2", "\[Rule]", "5"}], ",", 
     RowBox[{"3", "\[Rule]", "3"}], ",", 
     RowBox[{"4", "\[Rule]", "2"}], ",", 
     RowBox[{"5", "\[Rule]", "1"}]}], "}"}]}],
  SequenceForm["\t", {1 -> 4, 2 -> 5, 3 -> 3, 4 -> 2, 5 -> 1}],
  Editable->False]], "Print",
 CellTags->"PermOperations"],

Cell[BoxData["\<\"can be given as \"\>"], "Print",
 CellTags->"PermOperations"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\t\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "3"}], ",", 
     RowBox[{"2", "\[Rule]", "4"}], ",", 
     RowBox[{"3", "\[Rule]", "2"}], ",", 
     RowBox[{"4", "\[Rule]", "5"}], ",", 
     RowBox[{"5", "\[Rule]", "1"}]}], "}"}]}],
  SequenceForm["\t", {1 -> 3, 2 -> 4, 3 -> 2, 4 -> 5, 5 -> 1}],
  Editable->False]], "Print",
 CellTags->"PermOperations"],

Cell[BoxData["\<\"or as\"\>"], "Print",
 CellTags->"PermOperations"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "4", ",", "2", ",", "5", ",", "1"}], "}"}]], "Output",
 CellTags->"PermOperations",
 CellLabel->"Out[20]="]
}, Open  ]],

Cell["\<\
Here is a summary of some miscellaneous functions dealing with permutations, \
several of which we have already seen in use.\
\>", "Text",
 CellTags->"PermOperations"],

Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{
      StyleBox["ExtendPermutation", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox["p", "TI"], 
      StyleBox[",", "MR"], " ", 
      StyleBox["n", "TI"], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          StyleBox[
           RowBox[{"for", " ", "a", " ", "permutation", " "}],
           SingleLetterItalics->False], 
          StyleBox[
           FormBox["p",
            TraditionalForm], "Text"], 
          StyleBox[
           RowBox[{" ", 
            RowBox[{"of", " ", "length", " "}]}],
           SingleLetterItalics->False], 
          StyleBox[
           FormBox["m",
            TraditionalForm], "Text"]}], 
         StyleBox[",",
          SingleLetterItalics->False], 
         StyleBox[" ",
          SingleLetterItalics->False], 
         StyleBox[
          RowBox[{"return", " ", "the"}],
          SingleLetterItalics->False]}], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        RowBox[{
         StyleBox["equivalent",
          SingleLetterItalics->False], 
         StyleBox[",",
          SingleLetterItalics->False], 
         StyleBox[" ",
          SingleLetterItalics->False], 
         RowBox[{
          StyleBox["extended",
           SingleLetterItalics->False], 
          StyleBox[" ",
           SingleLetterItalics->False], 
          StyleBox["permutation",
           SingleLetterItalics->False], 
          StyleBox[" ",
           SingleLetterItalics->False], 
          StyleBox["of",
           SingleLetterItalics->False], 
          StyleBox[" ",
           SingleLetterItalics->False], 
          StyleBox["length",
           SingleLetterItalics->False], 
          StyleBox[" ",
           SingleLetterItalics->False], 
          StyleBox[
           FormBox["n",
            TraditionalForm], "Text"]}]}]}], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       RowBox[{
        RowBox[{
         StyleBox["(",
          SingleLetterItalics->False], 
         StyleBox[
          FormBox[
           RowBox[{
            StyleBox["n",
             SingleLetterItalics->False,
             FontSlant->"Italic"], " ", 
            StyleBox[">",
             SingleLetterItalics->False], " ", 
            StyleBox["m",
             SingleLetterItalics->False,
             FontSlant->"Italic"]}],
           TraditionalForm], "Text"], 
         StyleBox[")",
          SingleLetterItalics->False]}], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["that",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["is",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["the",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["identity",
         SingleLetterItalics->False]}], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["on",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["positions",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        FormBox[
         StyleBox[
          RowBox[{
           StyleBox["m",
            FontSlant->"Italic"], "+", "1"}],
          SingleLetterItalics->False],
         TraditionalForm], "Text"]}], 
      StyleBox[",",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["\[Ellipsis]",
       SingleLetterItalics->False], 
      StyleBox[",",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox[
       FormBox["n",
        TraditionalForm], "Text"]}]},
    {
     RowBox[{
      StyleBox["PermutationInverse", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox["p", "TI"], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      StyleBox[
       RowBox[{
        RowBox[{
        "give", " ", "the", " ", "permutation", " ", "that", " ", "is", " ", 
         "the"}], " ", "inverse", " ", "of"}],
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], "\n", 
      RowBox[{
       StyleBox["permutation",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        FormBox["p",
         TraditionalForm], "Text"]}]}]},
    {
     RowBox[{
      StyleBox["PermutationMatrix", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox["p", "TI"], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       StyleBox[
        RowBox[{"show", " ", "a", " ", "permutation", " "}],
        SingleLetterItalics->False], 
       StyleBox[
        FormBox["p",
         TraditionalForm], "Text"], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["in",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["matrix",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["form",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["where",
        SingleLetterItalics->False]}], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      RowBox[{
       StyleBox["the",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["bottom",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["row",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["is",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        FormBox["p",
         TraditionalForm], "Text"], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["and",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["the",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["top",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["row",
        SingleLetterItalics->False]}], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      RowBox[{
       StyleBox[
        RowBox[{"consists", " ", "of", " ", "1"}],
        SingleLetterItalics->False], 
       StyleBox[",",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["2",
        SingleLetterItalics->False], 
       StyleBox[",",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["\[Ellipsis]",
        SingleLetterItalics->False], 
       StyleBox[",",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        FormBox[
         RowBox[{
          StyleBox["Length", "MR"], 
          StyleBox["[", "MR"], 
          StyleBox["p", "TI"], 
          StyleBox["]", "MR"]}],
         StandardForm], "Text"]}]}]},
    {
     RowBox[{
      StyleBox["PermutationToPower", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox["p", "TI"], 
      StyleBox[",", "MR"], " ", 
      StyleBox["n", "TI"], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      StyleBox["give",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["the",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox[
       RowBox[{
        StyleBox["n",
         FontSlant->"Italic"], "th"}],
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["power",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["of",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["the",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["permutation",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox[
       FormBox["p",
        TraditionalForm], "Text"], 
      StyleBox[
       RowBox[{" ", 
        RowBox[{"(", 
         RowBox[{"where", " ", "is", " "}]}]}],
       SingleLetterItalics->False], 
      StyleBox[
       FormBox["n",
        TraditionalForm], "Text"], 
      StyleBox[
       RowBox[{" ", 
        RowBox[{"is", " ", "any", " ", "integer"}], ")"}],
       SingleLetterItalics->False]}]}
   }], NotebookDefault]], "DefinitionBox",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.42], {
      Scaled[0.58]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellTags->{"PermOperations", "i:7"}],

Cell["Miscellaneous functions.", "Caption",
 CellTags->"PermOperations"],

Cell[TextData[{
 StyleBox["PermutationToPower", "MR"],
 " is analogous to ",
 StyleBox["ElementToPower", "MR"],
 "; both can be used to raise an element to any positive or negative power."
}], "MathCaption",
 CellTags->"PermOperations"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"k", ",", 
       RowBox[{"PermutationToPower", "[", 
        RowBox[{"p", ",", " ", "k"}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"k", ",", " ", 
       RowBox[{"-", "1"}], ",", " ", "4"}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"TableDepth", " ", "\[Rule]", "2"}], ",", " ", 
   RowBox[{"TableHeadings", " ", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<k\>\"", ",", "\"\<\!\(\*SuperscriptBox[\(p\), \(k\)]\)\>\""}], 
       "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellTags->"PermOperations",
 CellLabel->"In[21]:="],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"k\"\>", "\<\"\\!\\(p\\^k\\)\"\>"},
    {
     RowBox[{"-", "1"}], 
     RowBox[{"{", 
      RowBox[{
      "3", ",", "5", ",", "4", ",", "1", ",", "6", ",", "2", ",", "7", ",", 
       "8"}], "}"}]},
    {"0", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
       "8"}], "}"}]},
    {"1", 
     RowBox[{"{", 
      RowBox[{
      "4", ",", "6", ",", "1", ",", "3", ",", "2", ",", "5", ",", "7", ",", 
       "8"}], "}"}]},
    {"2", 
     RowBox[{"{", 
      RowBox[{
      "3", ",", "5", ",", "4", ",", "1", ",", "6", ",", "2", ",", "7", ",", 
       "8"}], "}"}]},
    {"3", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
       "8"}], "}"}]},
    {"4", 
     RowBox[{"{", 
      RowBox[{
      "4", ",", "6", ",", "1", ",", "3", ",", "2", ",", "5", ",", "7", ",", 
       "8"}], "}"}]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  TableForm[#, TableDepth -> 2, 
   TableHeadings -> {None, {"k", "\!\(p\^k\)"}}]& ]], "Output",
 CellTags->"PermOperations",
 CellLabel->"Out[21]//TableForm="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5.2.3 Representing permutations", "Subsubsection",
 CellTags->{"PermRepresent", "i:8"}],

Cell[TextData[{
 "Since permutations are functions from ",
 Cell[BoxData[
  RowBox[{
   StyleBox["Range", "MR"], 
   StyleBox["[", "MR"], 
   StyleBox["n", "TI"], 
   StyleBox["]", "MR"]}]]],
 " to itself, it is natural to represent a permutation by a list of rules."
}], "Text",
 CellTags->"PermRepresent"],

Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{
      StyleBox["ToRules", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox["perm", "TI"], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       RowBox[{
        StyleBox[
         RowBox[{"for", " ", "a", " ", "permutation", " "}],
         SingleLetterItalics->False], 
        StyleBox["perm",
         FontSlant->"Italic"], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["of",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["length",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["n",
         FontSlant->"Italic"]}], 
       StyleBox[",",
        FontSlant->"Italic"], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        RowBox[{"give", " ", "a", " ", "list", " ", "of"}],
        SingleLetterItalics->False]}], 
      StyleBox[" ",
       SingleLetterItalics->False], "\n", 
      RowBox[{
       RowBox[{
        StyleBox["rules",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["of",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["the",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["form",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["x",
         FontSlant->"Italic"]}], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["\[Rule]",
        SingleLetterItalics->False,
        FontFamily->"Courier"], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       RowBox[{
        StyleBox["y",
         FontSlant->"Italic"], 
        StyleBox[
         RowBox[{" ", "where", " "}],
         SingleLetterItalics->False], 
        StyleBox["x",
         FontSlant->"Italic"], 
        StyleBox[
         RowBox[{" ", 
          RowBox[{"is", " ", "in", " "}]}],
         SingleLetterItalics->False], 
        StyleBox[
         FormBox[
          RowBox[{
           StyleBox["Range", "MR"], 
           StyleBox["[", "MR"], 
           StyleBox["n", "TI"], 
           StyleBox["]", "MR"]}],
          StandardForm], "Text"]}]}], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["\n",
       SingleLetterItalics->False], 
      RowBox[{
       RowBox[{
        StyleBox["and",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["y",
         FontSlant->"Italic"], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["is",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["perm",
         FontSlant->"Italic"], "\[NoBreak]", 
        RowBox[{"(", 
         StyleBox["x",
          FontSlant->"Italic"], ")"}]}], ",", " ", 
       RowBox[{"the", " ", "image", " ", "of", " ", 
        StyleBox["x",
         FontSlant->"Italic"], " ", "under", " ", "the", " ", 
        "permutation"}]}]}]},
    {
     RowBox[{
      StyleBox["ToPermutation", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox["list", "TI"], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       RowBox[{
        StyleBox["when",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["list",
         FontSlant->"Italic"], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["is",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["a",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["list",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["of",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["rules",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["in",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["the",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["form",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["x",
         FontSlant->"Italic"]}], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["\[Rule]",
        SingleLetterItalics->False,
        FontFamily->"Courier"], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       RowBox[{
        StyleBox["y",
         FontSlant->"Italic"], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["or",
         SingleLetterItalics->False]}]}], 
      StyleBox[" ",
       SingleLetterItalics->False], "\n", 
      RowBox[{
       RowBox[{
        StyleBox["{",
         SingleLetterItalics->False], 
        RowBox[{
         StyleBox["x",
          FontSlant->"Italic"], 
         StyleBox[" ",
          SingleLetterItalics->False], 
         StyleBox["\[Rule]",
          SingleLetterItalics->False,
          FontFamily->"Courier"], 
         StyleBox[" ",
          SingleLetterItalics->False], 
         StyleBox["y",
          FontSlant->"Italic"]}], 
        StyleBox["}",
         SingleLetterItalics->False]}], 
       StyleBox[",",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        RowBox[{"give", " ", "the", " ", "permutation"}],
        SingleLetterItalics->False], 
       StyleBox[",",
        SingleLetterItalics->False], 
       StyleBox[
        RowBox[{"if", " ", "possible"}],
        SingleLetterItalics->False], 
       StyleBox[",",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["corresponding",
        SingleLetterItalics->False]}], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["\n",
       SingleLetterItalics->False], 
      StyleBox[
       RowBox[{"to", " ", "the", " ", "rules"}],
       SingleLetterItalics->False]}]}
   }], NotebookDefault]], "DefinitionBox",
 CellTags->{"PermRepresent", "i:9"}],

Cell["Rules and permutations can be interchanged.", "Caption",
 CellTags->"PermRepresent"],

Cell["\<\
The following converts a permutation into a list of rules corresponding to \
the permutation.\
\>", "MathCaption",
 CellTags->"PermRepresent"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"q", " ", "=", " ", 
    RowBox[{"RandomPermutation", "[", "4", "]"}]}], ",", 
   RowBox[{"qrules", " ", "=", " ", 
    RowBox[{"ToRules", "[", "q", "]"}]}]}], "}"}]], "Input",
 CellTags->"PermRepresent",
 CellLabel->"In[22]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "4"}], ",", 
     RowBox[{"2", "\[Rule]", "1"}], ",", 
     RowBox[{"3", "\[Rule]", "3"}], ",", 
     RowBox[{"4", "\[Rule]", "2"}]}], "}"}]}], "}"}]], "Output",
 CellTags->"PermRepresent",
 CellLabel->"Out[22]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["ToPermutation", "MR"],
 " converts a list of rules into a permutation. Here we see that this \
function is the inverse to ",
 StyleBox["ToRules", "MR"],
 "."
}], "MathCaption",
 CellTags->"PermRepresent"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ToPermutation", "[", "qrules", "]"}], " ", "==", " ", 
  "q"}]], "Input",
 CellTags->"PermRepresent",
 CellLabel->"In[23]:="],

Cell[BoxData["True"], "Output",
 CellTags->"PermRepresent",
 CellLabel->"Out[23]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5.2.4 Cycles", "Subsubsection",
 CellTags->{"Cycles", "i:10"}],

Cell[TextData[{
 "Consider the permutation \[Sigma] = {3, 1, 4, 2}. This represents the \
function that takes 1 to 3, 2 to 1, 3 to 4 and 4 to 2. Note that \[Sigma] is \
a ",
 StyleBox["cyclic permutation",
  FontSlant->"Italic"],
 " in the sense that \[Sigma](1) = 3, \[Sigma](3) = \[Sigma](\[Sigma](1)) = \
4, \[Sigma](4) = \[Sigma](\[Sigma](\[Sigma](1))) = 2, and then \[Sigma](2) \
takes us back to 1, cycling through all of the elements. Often such a cycle \
is represented in the mathematical literature as (1 3 4 2). Since \
juxtaposition implies multiplication in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", and since parentheses cannot be used as delimiters, we need another \
structure to represent a ",
 StyleBox["cycle",
  FontSlant->"Italic"],
 ". In these packages, this cycle is represented by ",
 StyleBox["Cycle", "MR"],
 "[1, 3, 4, 2], with the head ",
 StyleBox["Cycle", "MR"],
 " and the elements separated by commas, as in a list. Cycles are important \
in abstract algebra",
 " ",
 "(for example, any permutation can be written as a product of cycles) and \
consequently receive some attention in these packages."
}], "Text",
 CellTags->{"Cycles", "i:42"}],

Cell[TextData[{
 "The ",
 ButtonBox["DiscreteMath`Permutations`",
  BaseStyle->"AddOnsLink",
  ButtonData:>{"DiscreteMath`Permutations`", "DiscreteMath`Permutations`"}],
 " package contains two functions for converting between permutations and \
cycles: ",
 StyleBox["ToCycles", "MR"],
 " and ",
 StyleBox["FromCycles", "MR"],
 ". For compatibility reasons, we can still operate using the approach \
presented there, but because the approach here is clearer and more robust, \
you are encouraged to adopt the defaults used here."
}], "Text",
 CellTags->{"Cycles", "i:43"}],

Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{
      StyleBox["ToCycles", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox["perm", "TI"], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      StyleBox[
       RowBox[{"give", " ", "the", " ", "decomposition", " ", "of", " "}],
       SingleLetterItalics->False], 
      StyleBox["perm",
       FontSlant->"Italic"], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["into",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["a",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["list",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["of",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["cycles",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["of",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["the",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["form",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox[
       FormBox[
        RowBox[{
         StyleBox["Cycle", "MR"], 
         StyleBox["[", "MR"], 
         StyleBox["a", "TI"], 
         StyleBox[",", "TI"], " ", 
         StyleBox["b", "TI"], 
         StyleBox[",", "TI"], " ", 
         StyleBox["\[Ellipsis]", "MR"], 
         StyleBox["]", "MR"]}],
        StandardForm], "Text"]}]},
    {
     RowBox[{
      StyleBox["ToCycles", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox["perm", "TI"], 
      StyleBox[",", "MR"], " ", 
      StyleBox[
       FormBox[
        RowBox[{
         StyleBox["CycleAs", "MR"], 
         StyleBox[" ", "MR"], 
         StyleBox["\[Rule]", "MR"], " ", 
         StyleBox["List", "MR"]}],
        TraditionalForm], "TI"], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       StyleBox[
        RowBox[{"give", " ", "the", " ", "decomposition", " ", "of", " "}],
        SingleLetterItalics->False], 
       StyleBox["perm",
        FontSlant->"Italic"], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["into",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["a",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["list",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["of",
        SingleLetterItalics->False]}], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["\n",
       SingleLetterItalics->False], 
      RowBox[{
       StyleBox["cycles",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["of",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["the",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["form",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["found",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["in",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["the",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["DiscreteMath", "MR"], 
       StyleBox[
        RowBox[{" ", "package"}],
        SingleLetterItalics->False]}]}]},
    {
     RowBox[{
      StyleBox["FromCycles", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox[
       FormBox[
        RowBox[{
         StyleBox["{", "MR"], 
         SubscriptBox["cyc", "1"], 
         StyleBox[",", "MR"], " ", 
         SubscriptBox["cyc", "2"], 
         StyleBox[",", "MR"], " ", "\[Ellipsis]", 
         StyleBox["}", "MR"]}],
        TraditionalForm], "TI"], 
      StyleBox["]", "MR"]}], 
     StyleBox[
      RowBox[{
      "give", " ", "the", " ", "permutation", " ", "corresponding", " ", "to",
        " ", "the", " ", "given", " ", "cyclic", " ", "decomposition"}],
      SingleLetterItalics->False]}
   }], NotebookDefault]], "DefinitionBox",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.43], {
      Scaled[0.57]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellTags->{"Cycles", "i:11"}],

Cell["Converting between cycles and permutations.", "Caption",
 CellTags->"Cycles"],

Cell[BoxData[
 FormBox[GridBox[{
    {
     StyleBox[
      RowBox[{"option", " ", "name"}], "SO10",
      FontSlant->"Italic"], 
     StyleBox[
      RowBox[{"default", " ", "value"}], "SO10",
      FontSlant->"Italic"], 
     StyleBox[
      FormBox[" ",
       StandardForm], "Text"]},
    {
     StyleBox[
      FormBox["CycleAs",
       StandardForm], "Text"], 
     StyleBox[
      FormBox["Cycle",
       StandardForm], "Text"], 
     RowBox[{
      StyleBox[
       RowBox[{
       "specifies", " ", "whether", " ", "a", " ", "cycle", " ", "should", 
        " ", "be", " ", "represented"}],
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      RowBox[{
       StyleBox["using",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["the",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        FormBox[
         RowBox[{
          StyleBox["Cycle", "MR"], 
          StyleBox["[", "MR"], 
          StyleBox[
           RowBox[{"a", ",", " ", "b", ",", " ", "\[Ellipsis]"}], "TI"], 
          StyleBox["]", "MR"]}],
         StandardForm], "Text"], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["structure",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["or",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["as",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["a",
        SingleLetterItalics->False]}], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox[
       RowBox[{"list", " ", "of", " ", "lists", " ", 
        RowBox[{"(", 
         RowBox[{"using", " ", 
          StyleBox["List", "MR"]}], ")"}]}],
       SingleLetterItalics->False]}]},
    {
     StyleBox[
      FormBox["Normalize",
       StandardForm], "Text"], 
     StyleBox[
      FormBox["True",
       StandardForm], "Text"], 
     RowBox[{
      RowBox[{
       RowBox[{
        StyleBox["when",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["set",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["to",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["True", "MR"]}], 
       StyleBox[",",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       RowBox[{
        StyleBox["specifies",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["that",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["all",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["cycles",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["of",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["length",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["one",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["are",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["dropped",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox[
         RowBox[{"(", 
          RowBox[{
          "unless", " ", "needed", " ", "to", " ", "show", " ", "the", " ", 
           "length", " ", "of", " ", "the", " ", "original", " ", 
           "permutation"}], ")"}],
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["and",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["a",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["normalization",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["is",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["applied",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["to",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["all",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["remaining",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["cycles",
         SingleLetterItalics->False], 
        RowBox[{
         StyleBox["(",
          SingleLetterItalics->False], 
         RowBox[{
          StyleBox["only",
           SingleLetterItalics->False], 
          StyleBox[" ",
           SingleLetterItalics->False], 
          StyleBox["valid",
           SingleLetterItalics->False], 
          StyleBox[" ",
           SingleLetterItalics->False], 
          StyleBox["if",
           SingleLetterItalics->False], 
          StyleBox[" ",
           SingleLetterItalics->False], 
          StyleBox["we",
           SingleLetterItalics->False], 
          StyleBox[" ",
           SingleLetterItalics->False], 
          StyleBox["have",
           SingleLetterItalics->False], 
          StyleBox[" ",
           SingleLetterItalics->False], 
          StyleBox[
           RowBox[{"CycleAs", " ", "\[Rule]", " ", "Cycle"}], "MR"]}], 
         StyleBox[")",
          SingleLetterItalics->False]}]}]}], 
      StyleBox[" ",
       SingleLetterItalics->False]}]}
   }], NotebookDefault]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
 GridBoxItemSize->{"Columns" -> {
     Scaled[0.17], 
     Scaled[0.15], {
      Scaled[0.68]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellTags->{"Cycles", "i:12"}],

Cell[TextData[{
 "Options for ",
 StyleBox["ToCycles",
  FontFamily->"Courier"],
 "."
}], "Caption",
 CellTags->"Cycles"],

Cell["Consider the following permutation as an example.", "MathCaption",
 CellTags->"Cycles"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"r", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
   "8", ",", " ", "2", ",", " ", "5", ",", "6", ",", " ", "4", ",", " ", "3", 
    ",", " ", "1", ",", " ", "9", ",", " ", "7", ",", " ", "10", ",", " ", 
    "11"}], "}"}]}]], "Input",
 CellTags->"Cycles",
 CellLabel->"In[24]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "8", ",", "2", ",", "5", ",", "6", ",", "4", ",", "3", ",", "1", ",", "9", 
   ",", "7", ",", "10", ",", "11"}], "}"}]], "Output",
 CellTags->"Cycles",
 CellLabel->"Out[24]="]
}, Open  ]],

Cell[TextData[{
 "Here is how ",
 StyleBox["ToCycles", "MR"],
 " works in ",
 StyleBox["DiscreteMath`Permutations`", "MR"],
 "."
}], "MathCaption",
 CellTags->"Cycles"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToCycles", "[", 
  RowBox[{"r", ",", " ", 
   RowBox[{"CycleAs", " ", "\[Rule]", " ", "List"}]}], "]"}]], "Input",
 CellTags->"Cycles",
 CellLabel->"In[25]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"8", ",", "9", ",", "7", ",", "1"}], "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "6", ",", "3"}], "}"}], ",", 
   RowBox[{"{", "10", "}"}], ",", 
   RowBox[{"{", "11", "}"}]}], "}"}]], "Output",
 CellTags->"Cycles",
 CellLabel->"Out[25]="]
}, Open  ]],

Cell[TextData[{
 "Here is how the new version of ",
 StyleBox["ToCycles", "MR"],
 " works. Note the omission of the two singleton cycles {2} and {10} but \
retention of {11}. Note also that the other cycles are \
\[OpenCurlyDoubleQuote]rotated\[CloseCurlyDoubleQuote] until the smallest \
element in the cycle appears first."
}], "MathCaption",
 CellTags->"Cycles"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rcycles", " ", "=", " ", 
  RowBox[{"ToCycles", "[", "r", "]"}]}]], "Input",
 CellTags->"Cycles",
 CellLabel->"In[26]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Cycle", "[", 
    RowBox[{"1", ",", "8", ",", "9", ",", "7"}], "]"}], ",", 
   RowBox[{"Cycle", "[", 
    RowBox[{"3", ",", "5", ",", "4", ",", "6"}], "]"}], ",", 
   RowBox[{"Cycle", "[", "11", "]"}]}], "}"}]], "Output",
 CellTags->"Cycles",
 CellLabel->"Out[26]="]
}, Open  ]],

Cell[TextData[{
 "Setting ",
 StyleBox["Normalize", "MR"],
 " to ",
 StyleBox["False", "MR"],
 " retains the structure of the ",
 StyleBox["DiscreteMath", "MR"],
 " approach but changes the lists to having the head ",
 StyleBox["Cycle", "MR"],
 "."
}], "MathCaption",
 CellTags->"Cycles"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToCycles", "[", 
  RowBox[{"r", ",", " ", 
   RowBox[{"Normalize", " ", "\[Rule]", " ", "False"}]}], "]"}]], "Input",
 CellTags->"Cycles",
 CellLabel->"In[27]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Cycle", "[", 
    RowBox[{"8", ",", "9", ",", "7", ",", "1"}], "]"}], ",", 
   RowBox[{"Cycle", "[", "2", "]"}], ",", 
   RowBox[{"Cycle", "[", 
    RowBox[{"5", ",", "4", ",", "6", ",", "3"}], "]"}], ",", 
   RowBox[{"Cycle", "[", "10", "]"}], ",", 
   RowBox[{"Cycle", "[", "11", "]"}]}], "}"}]], "Output",
 CellTags->"Cycles",
 CellLabel->"Out[27]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["FromCycles", "MR"],
 " takes any output of ",
 StyleBox["ToCycles", "MR"],
 " and acts as an inverse."
}], "MathCaption",
 CellTags->"Cycles"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"FromCycles", "[", 
     RowBox[{"ToCycles", "[", 
      RowBox[{"r", ",", " ", 
       RowBox[{"CycleAs", " ", "\[Rule]", " ", "List"}]}], "]"}], "]"}], " ", 
    "==", " ", "r"}], ",", "\n", 
   RowBox[{
    RowBox[{"FromCycles", "[", 
     RowBox[{"ToCycles", "[", "r", "]"}], "]"}], " ", "==", " ", "r"}], ",", 
   "\n", 
   RowBox[{
    RowBox[{"FromCycles", "[", 
     RowBox[{"ToCycles", "[", 
      RowBox[{"r", ",", "  ", 
       RowBox[{"Normalize", " ", "\[Rule]", " ", "False"}]}], "]"}], "]"}], 
    " ", "==", " ", "r"}]}], "}"}]], "Input",
 CellTags->"Cycles",
 CellLabel->"In[28]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "True", ",", "True"}], "}"}]], "Output",
 CellTags->"Cycles",
 CellLabel->"Out[28]="]
}, Open  ]],

Cell[TextData[{
 "The list of cycles needs to be disjoint before one can hope for a \
permutation to represent the cycle list. (This is a failure in the ",
 StyleBox["DiscreteMath", "MR"],
 " package; this is not checked.)"
}], "MathCaption",
 CellTags->"Cycles"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FromCycles", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Cycle", "[", 
     RowBox[{"2", ",", "3"}], "]"}], ",", " ", 
    RowBox[{"Cycle", "[", 
     RowBox[{"1", ",", "2"}], "]"}]}], "}"}], "]"}]], "Input",
 CellTags->"Cycles",
 CellLabel->"In[29]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cycle", "::", "\<\"disjoint\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"The cycles in the list \\!\\({\\(Cycle[\\(2, 3\\)]\\), \
\\(Cycle[\\(1, 2\\)]\\)}\\) need to be disjoint to use this \
function.\"\>"}]], "Message",
 CellTags->"Cycles"],

Cell[BoxData["$Failed"], "Output",
 CellTags->"Cycles",
 CellLabel->"Out[29]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["ToCycles", "MR"],
 " can also work on a ",
 StyleBox["list",
  FontSlant->"Italic"],
 " of permutations, returning a list of cycle decompositions."
}], "MathCaption",
 CellTags->"Cycles"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Column", "[", 
  RowBox[{"ToCycles", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"RandomPermutation", "[", "8", "]"}], ",", 
     RowBox[{"RandomPermutation", "[", "8", "]"}]}], "}"}], "]"}], 
  "]"}]], "Input",
 CellTags->"Cycles",
 CellLabel->"In[30]:="],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cycle", "[", 
        RowBox[{"1", ",", "6", ",", "2", ",", "5", ",", "7", ",", "4"}], 
        "]"}], ",", 
       RowBox[{"Cycle", "[", "8", "]"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cycle", "[", 
        RowBox[{"1", ",", "3", ",", "6", ",", "4", ",", "7", ",", "8"}], 
        "]"}], ",", 
       RowBox[{"Cycle", "[", 
        RowBox[{"2", ",", "5"}], "]"}]}], "}"}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  ColumnForm[{{
     Cycle[1, 6, 2, 5, 7, 4], 
     Cycle[8]}, {
     Cycle[1, 3, 6, 4, 7, 8], 
     Cycle[2, 5]}}],
  Editable->False]], "Output",
 CellTags->"Cycles",
 CellLabel->"Out[30]="]
}, Open  ]],

Cell[TextData[{
 "The permutation given to ",
 StyleBox["ToCycles", "MR"],
 " can be given as a list of rules (in various forms)."
}], "MathCaption",
 CellTags->"Cycles"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ToCycles", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[Rule]", "4"}], ",", 
      RowBox[{"2", "\[Rule]", "3"}], ",", 
      RowBox[{"3", "\[Rule]", "1"}], ",", 
      RowBox[{"4", "\[Rule]", "2"}]}], "}"}], "]"}], ",", 
   RowBox[{"ToCycles", "[", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "4"}], ",", 
     RowBox[{"2", "\[Rule]", "3"}], ",", 
     RowBox[{"3", "\[Rule]", "1"}], ",", 
     RowBox[{"4", "\[Rule]", "2"}]}], "]"}], ",", 
   RowBox[{"ToCycles", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", "\[Rule]", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[Rule]", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[Rule]", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", "\[Rule]", "2"}], "}"}]}], "}"}], "]"}]}], "}"}]], "Input",\

 CellTags->"Cycles",
 CellLabel->"In[31]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Cycle", "[", 
     RowBox[{"1", ",", "4", ",", "2", ",", "3"}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Cycle", "[", 
     RowBox[{"1", ",", "4", ",", "2", ",", "3"}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Cycle", "[", 
     RowBox[{"1", ",", "4", ",", "2", ",", "3"}], "]"}], "}"}]}], 
  "}"}]], "Output",
 CellTags->"Cycles",
 CellLabel->"Out[31]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["ToPermutation", "MR"],
 " can act on a cycle (as well as a list of rules representing a permutation, \
as we saw earlier)."
}], "MathCaption",
 CellTags->"Cycles"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToPermutation", "[", 
  RowBox[{"Cycle", "[", 
   RowBox[{"2", ",", " ", "3", ",", " ", "5"}], "]"}], "]"}]], "Input",
 CellTags->"Cycles",
 CellLabel->"In[32]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "5", ",", "4", ",", "2"}], "}"}]], "Output",
 CellTags->"Cycles",
 CellLabel->"Out[32]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5.2.5 Cycle operations", "Subsubsection",
 CellTags->{"CycleOperations", "i:13"}],

Cell[TextData[{
 "Cycles can be multiplied just as permutations can. In the following \
functions, the cycles can be either in list form or ",
 StyleBox["Cycle", "MR"],
 " form. These cycles are multiplied in the same order used by ",
 StyleBox["MultiplyPermutations", "MR"],
 ", which is ",
 StyleBox["RightToLeft", "MR"],
 " by default."
}], "Text",
 CellTags->"CycleOperations"],

Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{
      StyleBox["MultiplyCycles", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox[
       FormBox[
        SubscriptBox["cyc", "2"],
        TraditionalForm], "TI"], 
      StyleBox[",", "MR"], " ", 
      StyleBox[
       FormBox[
        SubscriptBox["cyc", "1"],
        TraditionalForm], "TI"], 
      StyleBox[",", "MR"], " ", 
      StyleBox["n", "TI"], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          StyleBox["give",
           SingleLetterItalics->False], 
          StyleBox[" ",
           SingleLetterItalics->False], 
          StyleBox["the",
           SingleLetterItalics->False], 
          StyleBox[" ",
           SingleLetterItalics->False], 
          StyleBox["product",
           SingleLetterItalics->False], 
          StyleBox[" ",
           SingleLetterItalics->False], 
          StyleBox["of",
           SingleLetterItalics->False], 
          StyleBox[" ",
           SingleLetterItalics->False], 
          StyleBox["cycle",
           SingleLetterItalics->False], 
          StyleBox[" ",
           SingleLetterItalics->False], 
          StyleBox[
           FormBox[
            SubscriptBox[
             StyleBox["cyc",
              FontSlant->"Italic"], "1"],
            TraditionalForm], "Text"], 
          StyleBox[
           RowBox[{"followed", " ", "by", " "}],
           SingleLetterItalics->False], 
          StyleBox[
           FormBox[
            SubscriptBox[
             StyleBox["cyc",
              FontSlant->"Italic"], "2"],
            TraditionalForm], "Text"]}], "\n", 
         RowBox[{
          StyleBox["as",
           SingleLetterItalics->False], 
          StyleBox[" ",
           SingleLetterItalics->False], 
          StyleBox["a",
           SingleLetterItalics->False], 
          StyleBox[" ",
           SingleLetterItalics->False], 
          StyleBox["permutation",
           SingleLetterItalics->False], 
          StyleBox[" ",
           SingleLetterItalics->False], 
          StyleBox["of",
           SingleLetterItalics->False], 
          StyleBox[" ",
           SingleLetterItalics->False], 
          StyleBox["length",
           SingleLetterItalics->False], 
          StyleBox[" ",
           SingleLetterItalics->False], 
          StyleBox["n",
           FontSlant->"Italic"], 
          StyleBox[
           RowBox[{" ", 
            RowBox[{"(", "in", " "}]}],
           SingleLetterItalics->False], 
          StyleBox[
           FormBox[
            SubscriptBox["S", "n"],
            TraditionalForm], "Text"]}]}], 
        StyleBox[")",
         SingleLetterItalics->False]}], 
       StyleBox[",",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        RowBox[{"multiplying", " ", "from"}],
        SingleLetterItalics->False]}], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["\n",
       SingleLetterItalics->False], 
      StyleBox[
       RowBox[{"right", " ", "to", " ", "left"}],
       SingleLetterItalics->False]}]},
    {
     RowBox[{
      StyleBox["MultiplyCycles", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox[
       FormBox[
        SubscriptBox["cyc", "2"],
        TraditionalForm], "TI"], 
      StyleBox[",", "MR"], " ", 
      StyleBox[
       FormBox[
        SubscriptBox["cyc", "1"],
        TraditionalForm], "TI"], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       StyleBox["give",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["the",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["product",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["of",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["cycle",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        FormBox[
         SubscriptBox[
          StyleBox["cyc",
           FontSlant->"Italic"], "1"],
         TraditionalForm], "Text"], 
       StyleBox["followed",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["by",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        FormBox[
         SubscriptBox[
          StyleBox["cyc",
           FontSlant->"Italic"], "2"],
         TraditionalForm], "Text"], 
       StyleBox["as",
        SingleLetterItalics->False]}], 
      StyleBox[" ",
       SingleLetterItalics->False], "\n", 
      RowBox[{
       RowBox[{
        StyleBox["a",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["permutation",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        RowBox[{
         StyleBox["of",
          SingleLetterItalics->False], 
         StyleBox[" ",
          SingleLetterItalics->False], 
         StyleBox["length",
          SingleLetterItalics->False], 
         StyleBox[" ",
          SingleLetterItalics->False], 
         StyleBox["n",
          FontSlant->"Italic"], 
         StyleBox[
          RowBox[{",", " ", "where", " "}],
          SingleLetterItalics->False], 
         StyleBox["n",
          FontSlant->"Italic"], 
         StyleBox[" ",
          SingleLetterItalics->False], 
         StyleBox["is",
          SingleLetterItalics->False], 
         StyleBox[" ",
          SingleLetterItalics->False], 
         StyleBox["the",
          SingleLetterItalics->False], 
         StyleBox[" ",
          SingleLetterItalics->False], 
         StyleBox["maximum",
          SingleLetterItalics->False]}], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox[
         RowBox[{
         "value", " ", "appearing", " ", "in", " ", "either", " ", "cycle"}],
         SingleLetterItalics->False]}], 
       StyleBox[",",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        RowBox[{"multiplying", " ", "from", " ", "right", " ", "to"}],
        SingleLetterItalics->False]}], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["\n",
       SingleLetterItalics->False], 
      StyleBox["left",
       SingleLetterItalics->False]}]},
    {
     RowBox[{
      StyleBox["MultiplyCycles", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox[
       FormBox[
        SubscriptBox["cyc", 
         StyleBox["k", "TI"]],
        TraditionalForm], "TI"], 
      StyleBox[",", "MR"], " ", "\[Ellipsis]", 
      StyleBox[",", "MR"], " ", 
      StyleBox[
       FormBox[
        SubscriptBox["cyc", "2"],
        TraditionalForm], "TI"], 
      StyleBox[",", "MR"], " ", 
      StyleBox[
       FormBox[
        SubscriptBox["cyc", "1"],
        TraditionalForm], "TI"], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       StyleBox[
        RowBox[{
        "give", " ", "the", " ", "product", " ", "of", " ", "the", " ", 
         "cycles", " "}],
        SingleLetterItalics->False], 
       StyleBox[
        FormBox[
         SubscriptBox[
          StyleBox["cyc",
           FontSlant->"Italic"], "1"],
         TraditionalForm], "Text"], 
       StyleBox[
        RowBox[{"followed", " ", "by", " "}],
        SingleLetterItalics->False], 
       StyleBox[
        FormBox[
         SubscriptBox[
          StyleBox["cyc",
           FontSlant->"Italic"], "2"],
         TraditionalForm], "Text"], 
       StyleBox[
        RowBox[{"followed", " ", "by", " ", "\[Ellipsis]", " "}],
        SingleLetterItalics->False], 
       StyleBox[
        FormBox[
         SubscriptBox[
          StyleBox["cyc",
           FontSlant->"Italic"], 
          StyleBox["k", "Text"]],
         TraditionalForm], "Text"]}], 
      StyleBox[",", "Text"], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      RowBox[{
       StyleBox["as",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["a",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["permutation",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["of",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["length",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["n",
        FontSlant->"Italic"]}], 
      StyleBox[",",
       FontSlant->"Italic"], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      RowBox[{
       StyleBox["where",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["n",
        FontSlant->"Italic"], 
       StyleBox[
        RowBox[{" ", 
         RowBox[{
         "is", " ", "the", " ", "maximum", " ", "value", " ", "appearing", 
          " ", "in", " ", "any", " ", "cycle"}]}],
        SingleLetterItalics->False]}]}]},
    {
     RowBox[{
      StyleBox["MultiplyCycles", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox[
       FormBox[
        RowBox[{
         StyleBox["{", "MR"], 
         SubscriptBox["cyc", "k"], 
         StyleBox[",", "MR"], " ", "\[Ellipsis]", 
         StyleBox[",", "MR"], " ", 
         SubscriptBox["cyc", "2"], 
         StyleBox[",", "MR"], " ", 
         SubscriptBox["cyc", "1"], 
         StyleBox["}", "MR"]}],
        TraditionalForm], "TI"], 
      StyleBox["]", "MR"]}], 
     StyleBox[
      FormBox[
       RowBox[{
        StyleBox["equivalent",
         SingleLetterItalics->False], " ", 
        StyleBox["to",
         SingleLetterItalics->False], " ", 
        StyleBox[
         FormBox[
          FormBox[
           RowBox[{
            StyleBox["MultiplyCycles", "MR"], 
            StyleBox["[", "MR"], 
            RowBox[{
             SubscriptBox["cyc", 
              StyleBox["k", "TI"]], ",", " ", 
             StyleBox["\[Ellipsis]",
              SingleLetterItalics->False], 
             StyleBox[",",
              SingleLetterItalics->False], " ", 
             SubscriptBox["cyc", "2"], ",", " ", 
             SubscriptBox["cyc", "1"]}], 
            StyleBox["]", "MR"]}],
           TextForm],
          TraditionalForm], "TI"]}],
       TextForm], "Text"]},
    {
     StyleBox[
      RowBox[{"MultiplyCycles", "[", 
       RowBox[{"...", ",", " ", 
        RowBox[{"ProductOrder", " ", "\[Rule]", " ", "LeftToRight"}]}], "]"}],
       "MR"], 
     RowBox[{
     "multiply", " ", "the", " ", "cycles", " ", "by", " ", "multiplying", 
      " ", "from", " ", "left", " ", "to", " ", "right"}]},
    {
     RowBox[{
      StyleBox[
       FormBox[
        SubscriptBox["cyc", "2"],
        TraditionalForm], "TI"], 
      StyleBox[" ", "TI"], 
      StyleBox["@", "MR"], " ", 
      StyleBox[
       FormBox[
        SubscriptBox["cyc", "1"],
        TraditionalForm], "TI"]}], 
     RowBox[{"equivalent", " ", "to", " ", 
      RowBox[{
       StyleBox["MultiplyCycles", "MR"], 
       StyleBox["[", "MR"], 
       RowBox[{
        StyleBox[
         FormBox[
          SubscriptBox["cyc", "2"],
          TraditionalForm], "TI"], 
        StyleBox[",", "TI"], " ", 
        StyleBox[
         FormBox[
          SubscriptBox["cyc", "1"],
          TraditionalForm], "TI"]}], 
       StyleBox["]", "MR"]}]}]}
   }], NotebookDefault]], "DefinitionBox",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.32], {
      Scaled[0.68]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellTags->{"CycleOperations", "i:14"}],

Cell[TextData[{
 "Variations in the ",
 StyleBox["MultiplyCycles",
  FontFamily->"Courier"],
 " function."
}], "Caption",
 CellTags->"CycleOperations"],

Cell["\<\
Here we obtain two different cycles by choosing the first cycle in the \
decomposition of two random permutations.\
\>", "MathCaption",
 CellTags->"CycleOperations"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"c1", " ", "=", " ", 
    RowBox[{"First", "[", 
     RowBox[{"ToCycles", "[", 
      RowBox[{"RandomPermutation", "[", "12", "]"}], "]"}], "]"}]}], ",", 
   "\n", 
   RowBox[{"c2", " ", "=", " ", 
    RowBox[{"First", "[", 
     RowBox[{"ToCycles", "[", 
      RowBox[{"RandomPermutation", "[", "12", "]"}], "]"}], "]"}]}]}], 
  "}"}]], "Input",
 CellTags->"CycleOperations",
 CellLabel->"In[33]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Cycle", "[", 
    RowBox[{"3", ",", "8"}], "]"}], ",", 
   RowBox[{"Cycle", "[", 
    RowBox[{"1", ",", "8", ",", "2", ",", "6"}], "]"}]}], "}"}]], "Output",
 CellTags->"CycleOperations",
 CellLabel->"Out[33]="]
}, Open  ]],

Cell[TextData[{
 "The product of the two cycles is performed by multiplying the cycles from \
right to left (by default). One can use the function name (",
 StyleBox["MultiplyCycles", "MR"],
 ") or the shortcut."
}], "MathCaption",
 CellTags->"CycleOperations"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"MultiplyCycles", "[", 
    RowBox[{"c2", ",", " ", "c1"}], "]"}], ",", " ", 
   RowBox[{"c2", " ", "@", " ", "c1"}]}], "}"}]], "Input",
 CellTags->"CycleOperations",
 CellLabel->"In[34]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "8", ",", "6", ",", "2", ",", "4", ",", "5", ",", "1", ",", "7", ",", 
     "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "8", ",", "6", ",", "2", ",", "4", ",", "5", ",", "1", ",", "7", ",", 
     "3"}], "}"}]}], "}"}]], "Output",
 CellTags->"CycleOperations",
 CellLabel->"Out[34]="]
}, Open  ]],

Cell["\<\
The same result can be obtained by converting the cycles to permutations and \
then multiplying them.\
\>", "MathCaption",
 CellTags->"CycleOperations"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p1", " ", "=", " ", 
   RowBox[{"FromCycles", "[", 
    RowBox[{"{", "c1", "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"p2", " ", "=", " ", 
   RowBox[{"FromCycles", "[", 
    RowBox[{"{", "c2", "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{"MultiplyPermutations", "[", 
  RowBox[{"p2", ",", " ", "p1"}], "]"}]}], "Input",
 CellTags->"CycleOperations",
 CellLabel->"In[35]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "8", ",", "6", ",", "2", ",", "4", ",", "5", ",", "1", ",", "7", ",", "3"}],
   "}"}]], "Output",
 CellTags->"CycleOperations",
 CellLabel->"Out[35]="]
}, Open  ]],

Cell[TextData[{
 "Actually, ",
 StyleBox["MultiplyPermutations", "MR"],
 " multiplies the cycles without first doing the conversion."
}], "MathCaption",
 CellTags->"CycleOperations"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MultiplyPermutations", "[", 
  RowBox[{"c2", ",", "c1"}], "]"}]], "Input",
 CellTags->"CycleOperations",
 CellLabel->"In[36]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "8", ",", "6", ",", "2", ",", "4", ",", "5", ",", "1", ",", "7", ",", "3"}],
   "}"}]], "Output",
 CellTags->"CycleOperations",
 CellLabel->"Out[36]="]
}, Open  ]],

Cell[TextData[{
 "To convey that",
 " ",
 "these cycles are to be multiplied as elements in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["S", "9"], TraditionalForm]]],
 ", add 9 as the final argument."
}], "MathCaption",
 CellTags->"CycleOperations"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MultiplyCycles", "[", 
  RowBox[{
   RowBox[{"Cycle", "[", 
    RowBox[{"2", ",", "3"}], "]"}], ",", " ", 
   RowBox[{"Cycle", "[", 
    RowBox[{"4", ",", "6"}], "]"}], ",", " ", "9"}], "]"}]], "Input",
 CellTags->"CycleOperations",
 CellLabel->"In[37]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "3", ",", "2", ",", "6", ",", "5", ",", "4", ",", "7", ",", "8", 
   ",", "9"}], "}"}]], "Output",
 CellTags->"CycleOperations",
 CellLabel->"Out[37]="]
}, Open  ]],

Cell["\<\
When the cycles are not disjoint, the order in which these are multiplied \
matters.\
\>", "MathCaption",
 CellTags->"CycleOperations"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"MultiplyCycles", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cycle", "[", 
       RowBox[{"2", ",", "6", ",", "4"}], "]"}], ",", " ", 
      RowBox[{"Cycle", "[", 
       RowBox[{"4", ",", "3", ",", "1"}], "]"}], ",", " ", 
      RowBox[{"Cycle", "[", 
       RowBox[{"2", ",", "5", ",", " ", "1"}], "]"}]}], "}"}], "]"}], ",", 
   "\n", 
   RowBox[{"MultiplyCycles", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cycle", "[", 
       RowBox[{"2", ",", "5", ",", " ", "1"}], "]"}], ",", " ", 
      RowBox[{"Cycle", "[", 
       RowBox[{"2", ",", "6", ",", "4"}], "]"}], ",", " ", 
      RowBox[{"Cycle", "[", 
       RowBox[{"4", ",", "3", ",", "1"}], "]"}]}], "}"}], "]"}]}], 
  "}"}]], "Input",
 CellTags->"CycleOperations",
 CellLabel->"In[38]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"6", ",", "5", ",", "1", ",", "3", ",", "2", ",", "4"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "2", ",", "3", ",", "1", ",", "4"}], "}"}]}], 
  "}"}]], "Output",
 CellTags->"CycleOperations",
 CellLabel->"Out[38]="]
}, Open  ]],

Cell["\<\
However, when the cycles are disjoint, the order of the factors is \
immaterial.\
\>", "MathCaption",
 CellTags->"CycleOperations"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"MultiplyCycles", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycle", "[", 
      RowBox[{"2", ",", "6", ",", "4"}], "]"}], ",", " ", 
     RowBox[{"Cycle", "[", 
      RowBox[{"3", ",", "5", ",", " ", "1"}], "]"}]}], "}"}], "]"}], " ", "==",
   "\n", 
  RowBox[{"MultiplyCycles", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycle", "[", 
      RowBox[{"3", ",", "5", ",", " ", "1"}], "]"}], ",", " ", 
     RowBox[{"Cycle", "[", 
      RowBox[{"2", ",", "6", ",", "4"}], "]"}]}], "}"}], "]"}]}]], "Input",
 CellTags->"CycleOperations",
 CellLabel->"In[39]:="],

Cell[BoxData["True"], "Output",
 CellTags->"CycleOperations",
 CellLabel->"Out[39]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5.2.6 Other cycle-related functions", "Subsubsection",
 CellTags->"OtherCycle"],

Cell[TextData[{
 "The ",
 StyleBox["DisjointCyclesQ", "MR"],
 " function can ascertain whether the cycles in a list (or sequence) are \
disjoint."
}], "MathCaption",
 CellTags->"OtherCycle"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DisjointCyclesQ", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Cycle", "[", 
     RowBox[{"2", ",", "6", ",", "4"}], "]"}], ",", " ", 
    RowBox[{"Cycle", "[", 
     RowBox[{"3", ",", "5", ",", " ", "1"}], "]"}]}], "}"}], "]"}]], "Input",
 CellTags->"OtherCycle",
 CellLabel->"In[40]:="],

Cell[BoxData["True"], "Output",
 CellTags->"OtherCycle",
 CellLabel->"Out[40]="]
}, Open  ]],

Cell[BoxData[
 FormBox[GridBox[{
    {
     StyleBox[
      FormBox[
       RowBox[{
        StyleBox["DisjointCyclesQ", "MR"], 
        StyleBox["[", "MR"], 
        RowBox[{
         SubscriptBox["cyc", "1"], 
         StyleBox[",", "MR"], " ", 
         SubscriptBox["cyc", "2"], 
         StyleBox[",", "MR"], " ", "\[Ellipsis]"}], 
        StyleBox["]", "MR"]}],
       TraditionalForm], "TI"], 
     RowBox[{
      RowBox[{
       StyleBox[
        RowBox[{"give", " "}],
        SingleLetterItalics->False], 
       StyleBox["True", "MR"], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["if",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["the",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["cycles",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        FormBox[
         SubscriptBox[
          StyleBox["cyc",
           FontSlant->"Italic"], "1"],
         TraditionalForm], "Text"]}], 
      StyleBox[",", "Text"], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox[
       FormBox[
        SubscriptBox[
         StyleBox["cyc",
          FontSlant->"Italic"], "2"],
        TraditionalForm], "Text"], ",", 
      StyleBox[
       RowBox[{"\[Ellipsis]", " ", "are", " ", "disjoint"}],
       SingleLetterItalics->False], 
      StyleBox[",",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      RowBox[{
       StyleBox["and",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["False", "MR"], 
       StyleBox[
        RowBox[{" ", "otherwise"}],
        SingleLetterItalics->False]}]}]},
    {
     StyleBox[
      FormBox[
       RowBox[{
        StyleBox["DisjointCyclesQ", "MR"], 
        StyleBox["[", "MR"], 
        RowBox[{
         StyleBox["{", "MR"], 
         RowBox[{
          SubscriptBox["cyc", "1"], 
          StyleBox[",", "MR"], " ", "\n", 
          SubscriptBox["cyc", "2"], 
          StyleBox[",", "MR"], " ", "\[Ellipsis]"}], 
         StyleBox["}", "MR"]}], 
        StyleBox["]", "MR"]}],
       TraditionalForm], "TI"], 
     RowBox[{
      RowBox[{
       StyleBox[
        RowBox[{"give", " "}],
        SingleLetterItalics->False], 
       StyleBox["True", "MR"], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["if",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["the",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["cycles",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        FormBox[
         SubscriptBox[
          StyleBox["cyc",
           FontSlant->"Italic"], "1"],
         TraditionalForm], "Text"]}], 
      StyleBox[",", "Text"], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox[
       FormBox[
        SubscriptBox[
         StyleBox["cyc",
          FontSlant->"Italic"], "2"],
        TraditionalForm], "Text"], ",", 
      StyleBox[
       RowBox[{"\[Ellipsis]", " ", "are", " ", "disjoint"}],
       SingleLetterItalics->False], 
      StyleBox[",",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      RowBox[{
       StyleBox["and",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["False", "MR"], 
       StyleBox[
        RowBox[{" ", "otherwise"}],
        SingleLetterItalics->False]}]}]},
    {
     StyleBox[
      FormBox[
       RowBox[{
        StyleBox["SamePermutationQ", "MR"], 
        StyleBox["[", "MR"], 
        RowBox[{
         SubscriptBox["cyclist", "1"], 
         StyleBox[",", "MR"], " ", 
         SubscriptBox["cyclist", "2"]}], 
        StyleBox["]", "MR"]}],
       TraditionalForm], "TI"], 
     RowBox[{
      RowBox[{
       StyleBox["give",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["True", "MR"], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["if",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["the",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["cycles",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["in",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        FormBox[
         SubscriptBox[
          StyleBox["cyclist",
           FontSlant->"Italic"], "1"],
         TraditionalForm], "Text"]}], " ", "\n", 
      RowBox[{
       RowBox[{
       "represent", " ", "the", " ", "same", " ", "permutation", "  ", "as", 
        " ", 
        StyleBox[
         FormBox[
          RowBox[{"the", " ", "\n", 
           RowBox[{"cycles", " ", "in", " ", 
            SubscriptBox[
             StyleBox["cyclist",
              FontSlant->"Italic"], "2"]}]}],
          TraditionalForm], "Text"]}], 
       StyleBox[",",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       RowBox[{
        StyleBox["and",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["False", "MR"], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["otherwise",
         SingleLetterItalics->False]}]}]}]}
   }], NotebookDefault]], "DefinitionBox",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.48], {
      Scaled[0.52]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellTags->{"OtherCycle", "i:15"}],

Cell["Other functions related to cycles.", "Caption",
 CellTags->"OtherCycle"],

Cell[TextData[{
 "Representing a permutation with cycles is not unique. The function ",
 StyleBox["SamePermutationQ", "MR"],
 " determines whether two lists of cycles represent the same permutation."
}], "MathCaption",
 CellTags->"OtherCycle"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"SamePermutationQ", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "2", ",", "5"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "3", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8", ",", "1"}], "}"}]}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"SamePermutationQ", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cycle", "[", 
        RowBox[{"1", ",", "8"}], "]"}], ",", 
       RowBox[{"Cycle", "[", 
        RowBox[{"3", ",", "2", ",", "5"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cycle", "[", 
        RowBox[{"5", ",", "3", ",", "2"}], "]"}], ",", 
       RowBox[{"Cycle", "[", 
        RowBox[{"8", ",", "1"}], "]"}]}], "}"}]}], "]"}]}], "}"}]], "Input",
 CellTags->"OtherCycle",
 CellLabel->"In[41]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "True"}], "}"}]], "Output",
 CellTags->"OtherCycle",
 CellLabel->"Out[41]="]
}, Open  ]],

Cell[TextData[{
 "Cycles of length two are called ",
 StyleBox["transpositions",
  FontSlant->"Italic"],
 ". Any cycle can be written as a product of transpositions, and consequently \
so can any permutation. While the number of transpositions in a given \
permutation is not unique, whether this number is odd or even is fixed."
}], "Text",
 CellTags->{"OtherCycle", "i:16"}],

Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{
      StyleBox["ToTranspositions", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox["cyc", "TI"], 
      StyleBox["]", "MR"]}], 
     StyleBox[
      RowBox[{
       StyleBox[
        RowBox[{"give", " ", "the", " ", "cycle", " "}],
        SingleLetterItalics->False], 
       StyleBox["cyc",
        FontSlant->"Italic"], 
       StyleBox[
        RowBox[{" ", 
         RowBox[{
         "as", " ", "a", " ", "product", " ", "of", " ", "transpositions"}]}],
        
        SingleLetterItalics->False]}], "Text"]},
    {
     RowBox[{
      StyleBox["ToTranspositions", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox["perm", "TI"], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       StyleBox[
        RowBox[{"give", " ", "the", " ", "permutation", " "}],
        SingleLetterItalics->False], 
       StyleBox["perm",
        FontSlant->"Italic"], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["as",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["a",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["product",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["of",
        SingleLetterItalics->False]}], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["\n", "Text",
       SingleLetterItalics->False], 
      StyleBox["transpositions",
       SingleLetterItalics->False]}]}
   }], NotebookDefault]], "DefinitionBox",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.38], {
      Scaled[0.62]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellTags->{"OtherCycle", "i:17"}],

Cell["Converting to transpositions.", "Caption",
 CellTags->"OtherCycle"],

Cell["\<\
Here we convert a random permutation of length six into transpositions.\
\>", "MathCaption",
 CellTags->"OtherCycle"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToTranspositions", "[", 
  RowBox[{"p", " ", "=", " ", 
   RowBox[{"RandomPermutation", "[", "6", "]"}]}], "]"}]], "Input",
 CellTags->"OtherCycle",
 CellLabel->"In[42]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Cycle", "[", 
    RowBox[{"1", ",", "2"}], "]"}], ",", 
   RowBox[{"Cycle", "[", 
    RowBox[{"1", ",", "5"}], "]"}], ",", 
   RowBox[{"Cycle", "[", 
    RowBox[{"1", ",", "3"}], "]"}], ",", 
   RowBox[{"Cycle", "[", 
    RowBox[{"1", ",", "6"}], "]"}], ",", 
   RowBox[{"Cycle", "[", 
    RowBox[{"1", ",", "4"}], "]"}]}], "}"}]], "Output",
 CellTags->"OtherCycle",
 CellLabel->"Out[42]="]
}, Open  ]],

Cell["\<\
In this case, first we convert the same permutation to cycles and then \
convert each cycle into transpositions.\
\>", "MathCaption",
 CellTags->"OtherCycle"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"ToTranspositions", ",", 
   RowBox[{"ToCycles", "[", "p", "]"}]}], "]"}]], "Input",
 CellTags->"OtherCycle",
 CellLabel->"In[43]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Cycle", "[", 
     RowBox[{"1", ",", "2"}], "]"}], ",", 
    RowBox[{"Cycle", "[", 
     RowBox[{"1", ",", "5"}], "]"}], ",", 
    RowBox[{"Cycle", "[", 
     RowBox[{"1", ",", "3"}], "]"}], ",", 
    RowBox[{"Cycle", "[", 
     RowBox[{"1", ",", "6"}], "]"}], ",", 
    RowBox[{"Cycle", "[", 
     RowBox[{"1", ",", "4"}], "]"}]}], "}"}], "}"}]], "Output",
 CellTags->"OtherCycle",
 CellLabel->"Out[43]="]
}, Open  ]],

Cell["\<\
The number of transpositions in a permutation gives some information about \
the permutation. Actually, whether the number of transpositions is even or \
odd is what is important. The following functions can be used in ascertaining \
this.\
\>", "Text",
 CellTags->"OtherCycle"],

Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{
      StyleBox["EvenPermutationQ", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox["perm", "TI"], 
      StyleBox["]", "MR"]}], 
     StyleBox[
      RowBox[{
       StyleBox[
        RowBox[{"give", " "}],
        SingleLetterItalics->False], 
       StyleBox["True", "MR"], 
       StyleBox[
        RowBox[{" ", "if", " "}],
        SingleLetterItalics->False], 
       StyleBox["perm",
        FontSlant->"Italic"], 
       StyleBox[
        RowBox[{" ", 
         RowBox[{
          RowBox[{"is", " ", "an", " ", "even", " ", "permutation"}], ",", 
          " ", "and", " "}]}],
        SingleLetterItalics->False], 
       StyleBox["False", "MR"], 
       StyleBox[
        RowBox[{" ", "otherwise"}],
        SingleLetterItalics->False]}], "Text"]},
    {
     RowBox[{
      StyleBox["OddPermutationQ", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox["perm", "TI"], 
      StyleBox["]", "MR"]}], 
     StyleBox[
      RowBox[{
       StyleBox[
        RowBox[{"give", " "}],
        SingleLetterItalics->False], 
       StyleBox["True", "MR"], 
       StyleBox[
        RowBox[{" ", "if", " "}],
        SingleLetterItalics->False], 
       StyleBox["perm",
        FontSlant->"Italic"], 
       StyleBox[
        RowBox[{" ", 
         RowBox[{
          RowBox[{"is", " ", "an", " ", "odd", " ", "permutation"}], ",", " ",
           "and", " "}]}],
        SingleLetterItalics->False], 
       StyleBox["False", "MR"], 
       StyleBox[
        RowBox[{" ", "otherwise"}],
        SingleLetterItalics->False]}], "Text"]},
    {
     RowBox[{
      StyleBox["Parity", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox["perm", "TI"], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       StyleBox[
        RowBox[{"give", " ", "1", " ", "if", " "}],
        SingleLetterItalics->False], 
       StyleBox["perm",
        FontSlant->"Italic"], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["is",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["an",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["even",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["permutation",
        SingleLetterItalics->False]}], 
      StyleBox[",",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox[
       RowBox[{"and", " ", 
        RowBox[{
         RowBox[{"-", "1"}], " ", "if", " ", "an", " ", "odd", " ", 
         "permutation"}]}],
       SingleLetterItalics->False]}]}
   }], NotebookDefault]], "DefinitionBox",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.39], {
      Scaled[0.61]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellTags->{"OtherCycle", "i:18"}],

Cell["Functions dealing with the parity of a permutation.", "Caption",
 CellTags->"OtherCycle"],

Cell["\<\
First, let\[CloseCurlyQuote]s create five random permutations of length six.\
\>", "MathCaption",
 CellTags->"OtherCycle"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "p", "]"}], "\n", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"p", "[", "k", "]"}], " ", "=", "  ", 
    RowBox[{"RandomPermutation", "[", "6", "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"k", ",", " ", "5"}], "}"}]}], "]"}]}], "Input",
 CellTags->"OtherCycle",
 CellLabel->"In[44]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "3", ",", "1", ",", "4", ",", "2"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "4", ",", "6", ",", "2", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "1", ",", "4", ",", "5", ",", "6"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "5", ",", "6", ",", "3", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "3", ",", "1", ",", "6", ",", "2"}], "}"}]}], 
  "}"}]], "Output",
 CellTags->"OtherCycle",
 CellLabel->"Out[45]="]
}, Open  ]],

Cell["\<\
Now consider the following table that shows how the oddness/evenness of a \
permutation is related to the number of transpositions.\
\>", "MathCaption",
 CellTags->"OtherCycle"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"p", "[", "k", "]"}], ",", " ", 
       RowBox[{"Parity", "[", 
        RowBox[{"p", "[", "k", "]"}], "]"}], ",", " ", 
       RowBox[{"OddPermutationQ", "[", 
        RowBox[{"p", "[", "k", "]"}], "]"}], ",", " ", 
       RowBox[{"Length", "[", 
        RowBox[{"ToTranspositions", "[", 
         RowBox[{"p", "[", "k", "]"}], "]"}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"k", ",", " ", "5"}], "}"}]}], "]"}], ",", 
   RowBox[{"TableDepth", " ", "\[Rule]", " ", "2"}], ",", 
   RowBox[{"TableHeadings", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"None", ",", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<p\>\"", ",", " ", "\"\<parity\>\"", ",", "\"\<odd?\>\"", ",", 
        "\"\<# of transp.\\n\>\""}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"TableSpacing", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"0.5", ",", " ", "2"}], "}"}]}]}], "]"}]], "Input",
 CellTags->"OtherCycle",
 CellLabel->"In[46]:="],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"p\"\>", "\<\"parity\"\>", "\<\"odd?\"\>", "\<\"# of \
transp.\\n\"\>"},
    {
     RowBox[{"{", 
      RowBox[{"5", ",", "6", ",", "3", ",", "1", ",", "4", ",", "2"}], "}"}], 
     
     RowBox[{"-", "1"}], "True", "3"},
    {
     RowBox[{"{", 
      RowBox[{"3", ",", "5", ",", "4", ",", "6", ",", "2", ",", "1"}], "}"}], 
     "1", "False", "4"},
    {
     RowBox[{"{", 
      RowBox[{"3", ",", "2", ",", "1", ",", "4", ",", "5", ",", "6"}], "}"}], 
     
     RowBox[{"-", "1"}], "True", "3"},
    {
     RowBox[{"{", 
      RowBox[{"2", ",", "4", ",", "5", ",", "6", ",", "3", ",", "1"}], "}"}], 
     "1", "False", "4"},
    {
     RowBox[{"{", 
      RowBox[{"5", ",", "4", ",", "3", ",", "1", ",", "6", ",", "2"}], "}"}], 
     "1", "False", "4"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[1.4]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {{
        Offset[0.2]}}, "RowsIndexed" -> {}}],
  TableForm[#, TableDepth -> 2, 
   TableHeadings -> {None, {"p", "parity", "odd?", "# of transp.\n"}}, 
   TableSpacing -> {0.5, 2}]& ]], "Output",
 CellTags->"OtherCycle",
 CellLabel->"Out[46]//TableForm="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5.2.7 Stabilizers and orbits", "Subsubsection",
 CellTags->{"Stabilizers", "i:19"}],

Cell[TextData[{
 "Since a permutation can be regarded as a function, we can ask whether the \
permutation sends a value ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]]],
 " to itself. If so, we say the permutation ",
 StyleBox["fixes",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]]],
 ". More generally, we can ask about the image of any element."
}], "Text",
 CellTags->"Stabilizers"],

Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{
      StyleBox["FixQ", "MR"], 
      StyleBox["[", "MR"], 
      RowBox[{
       StyleBox["p", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["k", "TI"]}], 
      StyleBox["]", "MR"]}], 
     StyleBox[
      RowBox[{
       StyleBox[
        RowBox[{"give", " "}],
        SingleLetterItalics->False], 
       StyleBox["True", "MR"], 
       StyleBox[
        RowBox[{" ", 
         RowBox[{"if", " ", "the", " ", "permutation", " "}]}],
        SingleLetterItalics->False], 
       FormBox["p",
        TraditionalForm], 
       StyleBox[
        RowBox[{" ", 
         RowBox[{"(", 
          RowBox[{"of", " ", 
           RowBox[{"{", 
            RowBox[{
            "1", ",", " ", "2", ",", " ", "\[Ellipsis]", ",", " "}]}]}]}]}],
        SingleLetterItalics->False], 
       FormBox["n",
        TraditionalForm], 
       StyleBox[
        RowBox[{
         RowBox[{"}", ")"}], " ", "fixes", " ", "the", " ", "element", " "}],
        SingleLetterItalics->False], 
       StyleBox["k",
        FontSlant->"Italic"], 
       StyleBox[
        RowBox[{
         RowBox[{",", " ", "and"}], " "}],
        SingleLetterItalics->False], 
       StyleBox["False", "MR"], 
       StyleBox[
        RowBox[{" ", "otherwise"}],
        SingleLetterItalics->False]}], "Text"]},
    {
     RowBox[{
      StyleBox["FixQ", "MR"], 
      StyleBox["[", "MR"], 
      RowBox[{
       StyleBox["S", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["p", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["el", "TI"]}], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       StyleBox[
        RowBox[{"give", " "}],
        SingleLetterItalics->False], 
       StyleBox["True", "MR"], 
       StyleBox[
        RowBox[{" ", 
         RowBox[{"if", " ", "the", " ", "permutation", " "}]}],
        SingleLetterItalics->False], 
       StyleBox[
        FormBox["p",
         TraditionalForm], "Text"], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["of",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["the",
        SingleLetterItalics->False]}], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["\n", "Text",
       SingleLetterItalics->False], 
      RowBox[{
       StyleBox["elements",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["in",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["the",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["set",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        FormBox["S",
         TraditionalForm], "Text"], 
       StyleBox[
        RowBox[{" ", 
         RowBox[{"fixes", " ", "the", " ", "element", " "}]}],
        SingleLetterItalics->False], 
       StyleBox["el",
        FontSlant->"Italic"], 
       StyleBox[
        RowBox[{" ", 
         RowBox[{"(", "from", " "}]}],
        SingleLetterItalics->False], 
       StyleBox[
        FormBox["S",
         TraditionalForm], "Text"], 
       StyleBox[
        RowBox[{
         RowBox[{")", ",", " ", "and"}], " "}],
        SingleLetterItalics->False], 
       StyleBox["False", "MR"], 
       StyleBox[
        RowBox[{" ", "otherwise"}],
        SingleLetterItalics->False]}]}]},
    {
     RowBox[{
      StyleBox["PermutationImage", "MR"], 
      StyleBox["[", "MR"], 
      RowBox[{
       StyleBox["p", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["k", "TI"]}], 
      StyleBox["]", "MR"]}], 
     StyleBox[
      RowBox[{
       StyleBox[
        RowBox[{"give", " ", "the", " ", "image", " ", "of", " "}],
        SingleLetterItalics->False], 
       FormBox["k",
        TraditionalForm], 
       StyleBox[
        RowBox[{" ", 
         RowBox[{"under", " ", "the", " ", "permutation", " "}]}],
        SingleLetterItalics->False], 
       FormBox["p",
        TraditionalForm]}], "Text"]},
    {
     RowBox[{
      StyleBox["PermutationImage", "MR"], 
      StyleBox["[", "MR"], 
      RowBox[{
       StyleBox["S", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["p", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["el", "TI"]}], 
      StyleBox["]", "MR"]}], 
     StyleBox[
      RowBox[{
       StyleBox[
        RowBox[{"give", " ", "the", " ", "image", " ", "of", " "}],
        SingleLetterItalics->False], 
       StyleBox["el",
        FontSlant->"Italic"], 
       StyleBox[
        RowBox[{" ", 
         RowBox[{"under", " ", "the", " ", "permutation", " "}]}],
        SingleLetterItalics->False], 
       FormBox["p",
        TraditionalForm], 
       StyleBox[
        RowBox[{" ", 
         RowBox[{
         "of", " ", "the", " ", "elements", " ", "in", " ", "the", " ", "set",
           " "}]}],
        SingleLetterItalics->False], 
       FormBox["S",
        TraditionalForm]}], "Text"]}
   }], NotebookDefault]], "DefinitionBox",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.42], {
      Scaled[0.58]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellTags->"Stabilizers"],

Cell[TextData[{
 StyleBox["FixQ",
  FontFamily->"Courier"],
 " and ",
 StyleBox["PermutationImage",
  FontFamily->"Courier"],
 " variations."
}], "Caption",
 CellTags->"Stabilizers"],

Cell[TextData[{
 "The permutation ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]]],
 " fixes 5 because it sends 5 to itself."
}], "MathCaption",
 CellTags->"Stabilizers"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  RowBox[{"FixQ", "[", 
   RowBox[{
    RowBox[{"p", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "4", ",", "1", ",", "5"}], "}"}]}], ",", 
    " ", "5"}], "]"}],
  FontFamily->"Courier",
  FontWeight->"Bold"]], "Input",
 CellTags->"Stabilizers",
 CellLabel->"In[47]:="],

Cell[BoxData["True"], "Output",
 CellTags->"Stabilizers",
 CellLabel->"Out[47]="]
}, Open  ]],

Cell[TextData[{
 "The ",
 StyleBox["PermutationImage", "MR"],
 " function confirms this."
}], "MathCaption",
 CellTags->"Stabilizers"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PermutationImage", "[", 
  RowBox[{"p", ",", " ", "5"}], "]"}]], "Input",
 CellTags->"Stabilizers",
 CellLabel->"In[48]:="],

Cell[BoxData["5"], "Output",
 CellTags->"Stabilizers",
 CellLabel->"Out[48]="]
}, Open  ]],

Cell["\<\
Here we see that the element \"c\" is not fixed, since it is sent to \"e\".\
\>", "MathCaption",
 CellTags->"Stabilizers"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Sset", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\"", ",", "\"\<d\>\"", ",", 
     "\"\<e\>\""}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"p", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<c\>\"", ",", "\"\<b\>\"", ",", "\"\<e\>\"", ",", "\"\<d\>\"", ",", 
     "\"\<a\>\""}], "}"}]}], ";"}], "\n", 
 RowBox[{"{", 
  StyleBox[
   RowBox[{
    RowBox[{"FixQ", "[", 
     RowBox[{"Sset", ",", "p", ",", "\"\<c\>\""}], "]"}], ",", " ", 
    RowBox[{"PermutationImage", "[", 
     RowBox[{"Sset", ",", "p", ",", "\"\<c\>\""}], "]"}]}],
   FontFamily->"Courier",
   FontWeight->"Bold"], 
  StyleBox["}",
   FontFamily->"Courier",
   FontWeight->"Bold"]}]}], "Input",
 CellTags->"Stabilizers",
 CellLabel->"In[49]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"False", ",", "\<\"e\"\>"}], "}"}]], "Output",
 CellTags->"Stabilizers",
 CellLabel->"Out[49]="]
}, Open  ]],

Cell[TextData[{
 "Given a group ",
 Cell[BoxData[
  FormBox["G", TraditionalForm]]],
 " of permutations on a set ",
 Cell[BoxData[
  FormBox["S", TraditionalForm]]],
 ", and given an element ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", " ", "\[Element]", " ", "S"}], TraditionalForm]]],
 ", we are often interested in the ",
 StyleBox["stabilizer",
  FontSlant->"Italic"],
 " and ",
 StyleBox["orbit",
  FontSlant->"Italic"],
 " of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 "."
}], "Text",
 CellTags->"Stabilizers"],

Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{
      StyleBox["Stabilizer", "MR"], 
      StyleBox["[", "MR"], 
      RowBox[{
       StyleBox["G", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["S", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["x", "TI"]}], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       StyleBox[
        RowBox[{
        "give", " ", "the", " ", "stabilizer", " ", "of", " ", "the", " ", 
         "element", " "}],
        SingleLetterItalics->False], 
       StyleBox[
        FormBox["x",
         TraditionalForm], "Text"], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["from",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["the",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["set",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        FormBox["S",
         TraditionalForm], "Text"]}], 
      StyleBox[",", "Text"], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      RowBox[{
       StyleBox["where",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        FormBox["G",
         TraditionalForm], "Text"], 
       StyleBox[
        RowBox[{" ", 
         RowBox[{
         "is", " ", "a", " ", "group", " ", "of", " ", "permutations", " ", 
          "on", " "}]}],
        SingleLetterItalics->False], 
       StyleBox[
        FormBox["S",
         TraditionalForm], "Text"]}]}]},
    {
     RowBox[{
      StyleBox["Stabilizer", "MR"], 
      StyleBox["[", "MR"], 
      RowBox[{
       StyleBox["S", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["x", "TI"]}], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       StyleBox[
        RowBox[{
        "give", " ", "the", " ", "stabilizer", " ", "of", " ", "the", " ", 
         "element", " "}],
        SingleLetterItalics->False], 
       StyleBox[
        FormBox["x",
         TraditionalForm], "Text"], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["from",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["the",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["set",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        FormBox["S",
         TraditionalForm], "Text"]}], 
      StyleBox[",", "Text"], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      RowBox[{
       StyleBox["where",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["the",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["understood",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["group",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        FormBox["G",
         TraditionalForm], "Text"], 
       StyleBox[
        RowBox[{" ", 
         RowBox[{
         "is", " ", "the", " ", "full", " ", "group", " ", "of", " ", 
          "permutations", " ", "on", " "}]}],
        SingleLetterItalics->False], 
       StyleBox[
        FormBox["S",
         TraditionalForm], "Text"]}]}]},
    {
     RowBox[{
      StyleBox["Orbit", "MR"], 
      StyleBox["[", "MR"], 
      RowBox[{
       StyleBox["G", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["S", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["x", "TI"]}], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       StyleBox[
        RowBox[{
        "give", " ", "the", " ", "orbit", " ", "of", " ", "the", " ", 
         "element", " "}],
        SingleLetterItalics->False], 
       StyleBox[
        FormBox["x",
         TraditionalForm], "Text"], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["from",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["the",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["set",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        FormBox["S",
         TraditionalForm], "Text"]}], 
      StyleBox[",", "Text"], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      RowBox[{
       StyleBox["where",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        FormBox["G",
         TraditionalForm], "Text"], 
       StyleBox[
        RowBox[{" ", 
         RowBox[{
         "is", " ", "a", " ", "group", " ", "of", " ", "permutations", " ", 
          "on", " "}]}],
        SingleLetterItalics->False], 
       StyleBox[
        FormBox["S",
         TraditionalForm], "Text"]}]}]},
    {
     RowBox[{
      StyleBox["Orbit", "MR"], 
      StyleBox["[", "MR"], 
      RowBox[{
       StyleBox["S", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["x", "TI"]}], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       StyleBox[
        RowBox[{
        "give", " ", "the", " ", "orbit", " ", "of", " ", "the", " ", 
         "element", " "}],
        SingleLetterItalics->False], 
       StyleBox[
        FormBox["x",
         TraditionalForm], "Text"], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["from",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["the",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["set",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        FormBox["S",
         TraditionalForm], "Text"]}], 
      StyleBox[",", "Text"], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      RowBox[{
       StyleBox["where",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["the",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["understood",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["group",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        FormBox["G",
         TraditionalForm], "Text"], 
       StyleBox[
        RowBox[{" ", 
         RowBox[{
         "is", " ", "the", " ", "full", " ", "group", " ", "of", " ", 
          "permutations", " ", "on", " "}]}],
        SingleLetterItalics->False], 
       StyleBox[
        FormBox["S",
         TraditionalForm], "Text"]}]}]}
   }], NotebookDefault]], "DefinitionBox",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.31], {
      Scaled[0.69]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellTags->{"Stabilizers", "i:20"}],

Cell["How to work with orbits and stabilizers.", "Caption",
 CellTags->"Stabilizers"],

Cell[TextData[{
 "Let ",
 Cell[BoxData[
  FormBox["G", TraditionalForm]]],
 " be a group formed from cycles as follows. Note that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"|", "G", "|"}], "=", "6"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["G", TraditionalForm]]],
 " is a subgroup of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["S", "8"], TraditionalForm]]],
 "."
}], "MathCaption",
 CellTags->"Stabilizers"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"G", " ", "=", " ", 
  RowBox[{"FormGroupoidFromCycles", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycle", "[", "1", "]"}], ",", " ", 
     RowBox[{
      RowBox[{"Cycle", "[", 
       RowBox[{"1", ",", "3", ",", "2"}], "]"}], " ", "@", " ", 
      RowBox[{
       RowBox[{"Cycle", "[", 
        RowBox[{"4", ",", "6", ",", "5"}], "]"}], " ", "@", " ", 
       RowBox[{"Cycle", "[", 
        RowBox[{"7", ",", "8"}], "]"}]}]}], ",", "\n", 
     RowBox[{
      RowBox[{"Cycle", "[", 
       RowBox[{"1", ",", "3", ",", "2"}], "]"}], " ", "@", " ", 
      RowBox[{"Cycle", "[", 
       RowBox[{"4", ",", "6", ",", "5"}], "]"}]}], " ", ",", "\n", 
     RowBox[{
      RowBox[{"Cycle", "[", 
       RowBox[{"1", ",", "2", ",", "3"}], "]"}], " ", "@", " ", 
      RowBox[{"Cycle", "[", 
       RowBox[{"4", ",", "5", ",", "6"}], "]"}]}], " ", ",", "\n", 
     RowBox[{
      RowBox[{"Cycle", "[", 
       RowBox[{"1", ",", "2", ",", "3"}], "]"}], " ", "@", " ", 
      RowBox[{
       RowBox[{"Cycle", "[", 
        RowBox[{"4", ",", "5", ",", "6"}], "]"}], " ", "@", " ", 
       RowBox[{"Cycle", "[", 
        RowBox[{"7", ",", "8"}], "]"}]}]}], ",", "\n", 
     RowBox[{"Cycle", "[", 
      RowBox[{"7", ",", "8"}], "]"}]}], "}"}], "]"}]}]], "Input",
 CellTags->"Stabilizers",
 CellLabel->"In[50]:="],

Cell[BoxData[
 RowBox[{"Groupoid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
       "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "3", ",", "1", ",", "2", ",", "6", ",", "4", ",", "5", ",", "8", ",", 
       "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "3", ",", "1", ",", "2", ",", "6", ",", "4", ",", "5", ",", "7", ",", 
       "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "2", ",", "3", ",", "1", ",", "5", ",", "6", ",", "4", ",", "7", ",", 
       "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "2", ",", "3", ",", "1", ",", "5", ",", "6", ",", "4", ",", "8", ",", 
       "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "8", ",", 
       "7"}], "}"}]}], "}"}], ",", "\<\"-Operation-\"\>"}], "]"}]], "Output",
 CellTags->"Stabilizers",
 CellLabel->"Out[50]="]
}, Open  ]],

Cell[TextData[{
 "The orbit of 4 under the group ",
 Cell[BoxData[
  FormBox["G", TraditionalForm]]],
 " is the set {4, 6, 5}."
}], "MathCaption",
 CellTags->"Stabilizers"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Orbit", "[", 
  RowBox[{"G", ",", " ", 
   RowBox[{"Range", "[", "8", "]"}], ",", " ", "4"}], "]"}]], "Input",
 CellTags->"Stabilizers",
 CellLabel->"In[51]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "6", ",", "5"}], "}"}]], "Output",
 CellTags->"Stabilizers",
 CellLabel->"Out[51]="]
}, Open  ]],

Cell[TextData[{
 "The orbit can also be obtained by directly applying the definition of the \
orbit, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Phi]", "(", "s", ")"}], " ", "|", " ", 
     RowBox[{"\[Phi]", " ", "\[Element]", " ", "G"}]}], "}"}], 
   TraditionalForm]]],
 "."
}], "MathCaption",
 CellTags->"Stabilizers"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"PermutationImage", "[", 
     RowBox[{
      RowBox[{"Range", "[", "8", "]"}], ",", "#", ",", "4"}], "]"}], "&"}], 
   ",", " ", 
   RowBox[{"Elements", "[", "G", "]"}]}], "]"}]], "Input",
 CellTags->"Stabilizers",
 CellLabel->"In[52]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "6", ",", "6", ",", "5", ",", "5", ",", "4"}], 
  "}"}]], "Output",
 CellTags->"Stabilizers",
 CellLabel->"Out[52]="]
}, Open  ]],

Cell["\<\
The stabilizer of the same element with the same group is the set of the \
following two permutations.\
\>", "MathCaption",
 CellTags->"Stabilizers"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Stabilizer", "[", 
  RowBox[{"G", ",", " ", 
   RowBox[{"Range", "[", "8", "]"}], ",", " ", "4"}], "]"}]], "Input",
 CellTags->"Stabilizers",
 CellLabel->"In[53]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
     "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "8", ",", 
     "7"}], "}"}]}], "}"}]], "Output",
 CellTags->"Stabilizers",
 CellLabel->"Out[53]="]
}, Open  ]],

Cell[TextData[{
 "This set can also be obtained by directly applying the definition of the \
stabilizer, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Phi]", " ", "\[Element]", " ", "G"}], " ", "|", " ", 
      RowBox[{"\[Phi]", "(", "x", ")"}]}], " ", "=", " ", "x"}], "}"}], 
   TraditionalForm]]],
 "."
}], "MathCaption",
 CellTags->"Stabilizers"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"Elements", "[", "G", "]"}], ",", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"PermutationImage", "[", 
      RowBox[{
       RowBox[{"Range", "[", "8", "]"}], ",", "#", ",", "4"}], "]"}], " ", "==",
      " ", "4"}], "&"}]}], "]"}]], "Input",
 CellTags->"Stabilizers",
 CellLabel->"In[54]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
     "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "8", ",", 
     "7"}], "}"}]}], "}"}]], "Output",
 CellTags->"Stabilizers",
 CellLabel->"Out[54]="]
}, Open  ]],

Cell[TextData[{
 "Using the ",
 StyleBox["FixQ", "MR"],
 " function, the following may be more natural."
}], "MathCaption",
 CellTags->"Stabilizers"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"Elements", "[", "G", "]"}], ",", " ", 
   RowBox[{
    RowBox[{"FixQ", "[", 
     RowBox[{"#", ",", "4"}], "]"}], " ", "&"}]}], "]"}]], "Input",
 CellTags->"Stabilizers",
 CellLabel->"In[55]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
     "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "8", ",", 
     "7"}], "}"}]}], "}"}]], "Output",
 CellTags->"Stabilizers",
 CellLabel->"Out[55]="]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "5.3 Working in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DoubleStruckCapitalZ]", "[", 
    SqrtBox["d"], "]"}], TraditionalForm]]]
}], "Subsection",
 CellTags->{"BasicZ", "i:21"}],

Cell[CellGroupData[{

Cell["5.3.1 Basic functions", "Subsubsection",
 CellMargins->{{Inherited, Inherited}, {Inherited, 8}},
 CellTags->"BasicZ"],

Cell[TextData[{
 "It may be worthwhile to first preview the ",
 StyleBox["Adjoin", "MR"],
 " function discussed in ",
 ButtonBox["section 5.4.3",
  BaseStyle->"AddOnsLink",
  ButtonData:>{"Adjoin", "Adjoin"}],
 ", since it is related. Here we would like to focus on working with elements \
in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DoubleStruckCapitalZ]", "[", 
    SqrtBox["d"], "]"}], TraditionalForm]]],
 ", which is the set obtained by adjoining the square root of some integer ",
 Cell[BoxData[
  FormBox["d", TraditionalForm]]],
 " to the integers. (We want ",
 Cell[BoxData[
  FormBox["d", TraditionalForm]]],
 " to be square-free.) This set is of interest when considering a unique \
factorization domain (UFD). First we look at some basic functions, then we \
look at some functions for divisibility."
}], "Text",
 CellTags->"BasicZ"],

Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{
      StyleBox["ZdQ", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox["x", "TI"], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       RowBox[{
        StyleBox[
         RowBox[{"give", " "}],
         SingleLetterItalics->False], 
        StyleBox["True", "MR"], 
        StyleBox[
         RowBox[{" ", "if", " "}],
         SingleLetterItalics->False], 
        StyleBox[
         FormBox["x",
          TraditionalForm], "Text"], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["can",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["be",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["viewed",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["as",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["an",
         SingleLetterItalics->False]}], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["element",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["in",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        FormBox[
         RowBox[{"\n", 
          RowBox[{
           StyleBox["\[DoubleStruckCapitalZ]",
            SingleLetterItalics->False], "[", 
           SqrtBox["d"], "]"}]}],
         TraditionalForm], "Text"], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["for",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["some",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["integer",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        FormBox["d",
         TraditionalForm], "Text"]}], 
      StyleBox[",", "Text"], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      RowBox[{
       StyleBox["and",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["False", "MR"], 
       StyleBox[
        RowBox[{" ", "otherwise"}],
        SingleLetterItalics->False]}]}]},
    {
     RowBox[{
      StyleBox["ZdConjugate", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox[
       FormBox[
        RowBox[{"a", " ", 
         StyleBox["+", "MR"], " ", 
         RowBox[{"b", 
          SqrtBox["d"]}]}],
        TraditionalForm], "TI"], 
      StyleBox["]", "MR"]}], 
     StyleBox[
      RowBox[{
       StyleBox["return",
        SingleLetterItalics->False], 
       FormBox[
        RowBox[{
         StyleBox[" ",
          FontSlant->"Italic"], 
         RowBox[{
          StyleBox["a",
           SingleLetterItalics->False,
           FontSlant->"Italic"], 
          StyleBox[" ",
           FontSlant->"Italic"], 
          StyleBox["-",
           SingleLetterItalics->False,
           FontSlant->"Italic"], 
          StyleBox[" ",
           FontSlant->"Italic"], 
          RowBox[{
           StyleBox["b",
            SingleLetterItalics->False,
            FontSlant->"Italic"], " ", 
           FormBox[
            SqrtBox["d"],
            TraditionalForm]}]}]}],
        TraditionalForm]}], "Text"]},
    {
     RowBox[{
      StyleBox["ZdUnitQ", "MR"], 
      StyleBox["[", "MR"], 
      RowBox[{
       StyleBox["d", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["x", "TI"]}], 
      StyleBox["]", "MR"]}], 
     StyleBox[
      RowBox[{
       StyleBox[
        RowBox[{"give", " "}],
        SingleLetterItalics->False], 
       StyleBox["True", "MR"], 
       StyleBox[
        RowBox[{" ", "if", " "}],
        SingleLetterItalics->False], 
       FormBox["x",
        TraditionalForm], 
       StyleBox[
        RowBox[{" ", 
         RowBox[{"is", " ", "a", " ", "unit", " ", "in", " "}]}],
        SingleLetterItalics->False], 
       FormBox[
        RowBox[{
         StyleBox["\[DoubleStruckCapitalZ]",
          SingleLetterItalics->False], "[", 
         SqrtBox["d"], "]"}],
        TraditionalForm], 
       StyleBox[
        RowBox[{
         RowBox[{",", " ", "and"}], " "}],
        SingleLetterItalics->False], 
       StyleBox["False", "MR"], 
       StyleBox[
        RowBox[{" ", "otherwise"}],
        SingleLetterItalics->False]}], "Text"]},
    {
     RowBox[{
      StyleBox["ZdDivide", "MR"], 
      StyleBox["[", "MR"], 
      RowBox[{
       StyleBox["x", "TI"], 
       StyleBox[",", "MR"], 
       StyleBox["y", "TI"]}], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       RowBox[{"return", " ", "the", " ", "quotient", " ", 
        StyleBox[
         RowBox[{"x", "/", "y"}],
         FontSlant->"Italic"], " ", "in", " ", "the", " ", "form", " ", 
        StyleBox["r",
         FontSlant->"Italic"]}], " ", "+", " ", 
       RowBox[{
        StyleBox["s",
         FontSlant->"Italic"], " ", 
        StyleBox[
         SqrtBox["d"],
         FontSlant->"Italic"]}]}], " ", "\n", 
      RowBox[{"when", " ", 
       StyleBox["x",
        FontSlant->"Italic"], " ", "and", " ", 
       StyleBox["y",
        FontSlant->"Italic"], 
       StyleBox[" ",
        FontSlant->"Italic"], "are", " ", "both", " ", "in", " ", 
       RowBox[{"\[DoubleStruckCapitalZ]", "[", 
        SqrtBox[
         StyleBox["d",
          FontSlant->"Italic"]], "]"}]}]}]},
    {
     RowBox[{
      StyleBox["ZdAssociatesQ", "MR"], 
      StyleBox["[", "MR"], 
      RowBox[{
       StyleBox["d", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["x", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["y", "TI"]}], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{"give", " ", 
       StyleBox["True", "MR"], " ", "if", " ", 
       StyleBox["x",
        FontSlant->"Italic"], " ", "and", " ", 
       StyleBox["y",
        FontSlant->"Italic"], " ", "are", " ", "associates", " ", "in", " ", 
       RowBox[{"\[DoubleStruckCapitalZ]", "[", 
        SqrtBox[
         StyleBox["d",
          FontSlant->"Italic"]], "]"}]}], ",", " ", 
      RowBox[{"and", " ", 
       StyleBox["False", "MR"], " ", "otherwise"}]}]},
    {
     RowBox[{
      StyleBox["ZdIrreducibleQ", "MR"], 
      StyleBox["[", "MR"], 
      RowBox[{
       StyleBox["d", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["x", "TI"]}], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       RowBox[{"for", " ", "negative", " ", 
        StyleBox["d",
         FontSlant->"Italic"]}], ",", " ", 
       RowBox[{"give", " ", 
        StyleBox["True", "MR"], " ", "if", " ", 
        StyleBox["x",
         FontSlant->"Italic"], " ", "is", " ", "irreducible"}]}], " ", 
      RowBox[{
       RowBox[{"in", " ", 
        RowBox[{"\[DoubleStruckCapitalZ]", "[", 
         SqrtBox[
          StyleBox["d",
           FontSlant->"Italic"]], "]"}]}], ",", " ", 
       RowBox[{"and", " ", 
        StyleBox["False", "MR"], " ", "otherwise"}]}]}]},
    {
     StyleBox[
      FormBox[
       FormBox[
        RowBox[{
         StyleBox["RandomElement", "MR"], 
         StyleBox["[", "MR"], 
         RowBox[{"d", 
          StyleBox[",", "MR"], " ", "max"}], 
         StyleBox["]", "MR"]}],
        NotebookDefault],
       TraditionalForm], "TI"], 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"return", " ", 
         StyleBox["a",
          FontSlant->"Italic"]}], 
        StyleBox[" ",
         FontSlant->"Italic"], "+", " ", 
        RowBox[{
         StyleBox["b",
          FontSlant->"Italic"], " ", 
         SqrtBox[
          StyleBox["d",
           FontSlant->"Italic"]], " ", "where", " ", 
         StyleBox["a",
          FontSlant->"Italic"]}]}], ",", " ", 
       RowBox[{
        StyleBox["b",
         FontSlant->"Italic"], " ", "\[Element]", " ", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"-", 
           StyleBox["max",
            FontSlant->"Italic"]}], ",", " ", 
          StyleBox["max",
           FontSlant->"Italic"]}], "]"}]}]}], " ", "\n", 
      RowBox[{"and", " ", "are", " ", "integers"}]}]},
    {
     StyleBox[
      FormBox[
       FormBox[
        RowBox[{
         StyleBox["RandomElements", "MR"], 
         StyleBox["[", "MR"], 
         RowBox[{"d", 
          StyleBox[",", "MR"], " ", "max", ",", " ", "n"}], 
         StyleBox["]", "MR"]}],
        NotebookDefault],
       TraditionalForm], "TI"], 
     RowBox[{"return", " ", 
      StyleBox["n",
       FontSlant->"Italic"], " ", "random", " ", "elements", " ", "in", " ", 
      RowBox[{"\[DoubleStruckCapitalZ]", "[", 
       SqrtBox[
        StyleBox["d",
         FontSlant->"Italic"]], "]"}]}]}
   }], NotebookDefault]], "DefinitionBox",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.36], {
      Scaled[0.64]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellTags->{"BasicZ", "i:22"}],

Cell["Basic functions.", "Caption",
 CellTags->"BasicZ"],

Cell[TextData[{
 "Some numbers do not belong to any set ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DoubleStruckCapitalZ]", "[", 
    SqrtBox["d"], "]"}], TraditionalForm]]],
 " ."
}], "MathCaption",
 CellTags->"BasicZ"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"ZdQ", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"3", " ", "-", " ", 
      SqrtBox["5"]}], ",", 
     RadicalBox["5", "3"], ",", " ", "18", ",", "\[Pi]", ",", 
     RowBox[{"2", " ", "+", " ", 
      RowBox[{"17", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", "3"}], " "}]]}]}], ",", " ", 
     RowBox[{"RandomElement", "[", 
      RowBox[{
       RowBox[{"-", "3"}], ",", " ", "25"}], "]"}]}], "}"}]}], "]"}]], "Input",\

 CellTags->"BasicZ",
 CellLabel->"In[56]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "True", ",", "False", ",", "True", ",", "False", ",", "True", ",", "True"}],
   "}"}]], "Output",
 CellTags->"BasicZ",
 CellLabel->"Out[56]="]
}, Open  ]],

Cell[TextData[{
 "The conjugate of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", " ", "+", " ", 
    RowBox[{"b", " ", 
     SqrtBox["d"]}]}], TraditionalForm]]],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", " ", "-", " ", 
    RowBox[{"b", " ", 
     SqrtBox["d"]}]}], TraditionalForm]]],
 "."
}], "MathCaption",
 CellTags->"BasicZ"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"ZdConjugate", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"3", " ", "-", " ", 
      SqrtBox["5"]}], ",", 
     RowBox[{"2", " ", "+", " ", 
      SqrtBox[
       RowBox[{"-", "8"}]]}], ",", " ", "18"}], "}"}]}], "]"}]], "Input",
 CellTags->"BasicZ",
 CellLabel->"In[57]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"3", "+", 
    SqrtBox["5"]}], ",", 
   RowBox[{"2", "-", 
    RowBox[{"2", " ", "I", " ", 
     SqrtBox["2"]}]}], ",", "18"}], "}"}]], "Output",
 CellTags->"BasicZ",
 CellLabel->"Out[57]="]
}, Open  ]],

Cell[TextData[{
 "We can ask whether an element is a unit in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DoubleStruckCapitalZ]", "[", 
    SqrtBox["d"], "]"}], TraditionalForm]]],
 "."
}], "MathCaption",
 CellTags->"BasicZ"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ZdUnitQ", "[", 
     RowBox[{"2", ",", "#"}], "]"}], "&"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "+", 
      SqrtBox["2"]}], ",", 
     RowBox[{"-", "1"}], ",", " ", 
     RowBox[{"2", "+", 
      SqrtBox["2"]}], ",", 
     RowBox[{"1", " ", "-", " ", 
      SqrtBox["2"]}]}], "}"}]}], "]"}]], "Input",
 CellTags->"BasicZ",
 CellLabel->"In[58]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "True", ",", "False", ",", "True"}], "}"}]], "Output",
 CellTags->"BasicZ",
 CellLabel->"Out[58]="]
}, Open  ]],

Cell[TextData[{
 "Here we calculate a quotient between two elements in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DoubleStruckCapitalZ]", "[", 
    SqrtBox["2"], "]"}], TraditionalForm]]],
 "."
}], "MathCaption",
 CellTags->"BasicZ"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q", " ", "=", " ", 
  RowBox[{"ZdDivide", "[", 
   RowBox[{
    RowBox[{"2", " ", "-", " ", 
     RowBox[{"3", " ", 
      SqrtBox["2"]}]}], ",", " ", 
    RowBox[{"1", " ", "+", " ", 
     SqrtBox["2"]}]}], "]"}]}]], "Input",
 CellTags->"BasicZ",
 CellLabel->"In[59]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "8"}], "+", 
  RowBox[{"5", " ", 
   SqrtBox["2"]}]}]], "Output",
 CellTags->"BasicZ",
 CellLabel->"Out[59]="]
}, Open  ]],

Cell[TextData[{
 "Since we just saw that 1 + ",
 Cell[BoxData[
  FormBox[
   SqrtBox["2"], TraditionalForm]]],
 " is a unit in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DoubleStruckCapitalZ]", "[", 
    SqrtBox["2"], "]"}], TraditionalForm]]],
 ", 2 - 3",
 Cell[BoxData[
  FormBox[
   SqrtBox["2"], TraditionalForm]]],
 " and the previous quotient should be associates."
}], "MathCaption",
 CellTags->"BasicZ"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ZdAssociatesQ", "[", 
  RowBox[{"2", ",", " ", 
   RowBox[{"2", " ", "-", " ", 
    RowBox[{"3", " ", 
     SqrtBox["2"]}]}], ",", " ", "q"}], "]"}]], "Input",
 CellTags->"BasicZ",
 CellLabel->"In[60]:="],

Cell[BoxData["True"], "Output",
 CellTags->"BasicZ",
 CellLabel->"Out[60]="]
}, Open  ]],

Cell["Irreducibility can be tested as follows.", "MathCaption",
 CellTags->"BasicZ"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ZdIrreducibleQ", "[", 
     RowBox[{
      RowBox[{"-", "3"}], ",", " ", "#"}], "]"}], "&"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", "-", " ", 
      RowBox[{"5", 
       SqrtBox[
        RowBox[{"-", "3"}]]}]}], ",", " ", "5", ",", " ", "7"}], "}"}]}], 
  "]"}]], "Input",
 CellTags->"BasicZ",
 CellLabel->"In[61]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "True", ",", "False"}], "}"}]], "Output",
 CellTags->"BasicZ",
 CellLabel->"Out[61]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5.3.2 Divisibility", "Subsubsection",
 CellTags->{"DivisibilityZ", "i:23"}],

Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{
      StyleBox["DividesQ", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox["r", "TI"], 
      StyleBox[",", "MR"], " ", 
      StyleBox["s", "TI"], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       StyleBox[
        RowBox[{"give", " "}],
        SingleLetterItalics->False], 
       StyleBox["True", "MR"], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["if",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["the",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["integer",
        SingleLetterItalics->False], " ", 
       StyleBox[
        FormBox["s",
         TraditionalForm], "Text"], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["divided",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["by",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["the",
        SingleLetterItalics->False]}], 
      RowBox[{
       RowBox[{
        StyleBox["integer",
         SingleLetterItalics->False], " ", 
        StyleBox[
         FormBox["r",
          TraditionalForm], "Text"], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["yields",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["an",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["integer",
         SingleLetterItalics->False]}], 
       StyleBox[",",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       RowBox[{
        StyleBox["and",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["False", "MR"], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["otherwise",
         SingleLetterItalics->False]}]}]}]},
    {
     RowBox[{
      StyleBox["IntegerDivisors", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox["n", "TI"], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      StyleBox["equivalent", "Text"], 
      StyleBox[" ", "Text"], 
      StyleBox["to", "Text"], 
      StyleBox[
       FormBox[
        FormBox[
         RowBox[{" ", 
          RowBox[{
           StyleBox["Divisors", "MR"], 
           StyleBox["[", "MR"], "n", 
           StyleBox["]", "MR"]}]}],
         NotebookDefault],
        TraditionalForm], "TI"]}]},
    {
     RowBox[{
      StyleBox["IntegerDivisors", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox[
       RowBox[{"n", ",", " ", "opts"}], "TI"], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      StyleBox["equivalent", "Text"], 
      StyleBox[" ", "Text"], 
      StyleBox["to", "Text"], 
      StyleBox[
       FormBox[
        RowBox[{
         FormBox[
          RowBox[{" ", 
           RowBox[{
            StyleBox["Divisors", "MR"], 
            StyleBox["[", "MR"], "n", 
            StyleBox["]", "MR"]}]}],
          NotebookDefault], 
         StyleBox["with",
          FontSlant->"Plain"], 
         StyleBox[" ",
          FontSlant->"Plain"], 
         StyleBox["additional",
          FontSlant->"Plain"], 
         StyleBox[" ",
          FontSlant->"Plain"], 
         StyleBox[
          RowBox[{
          "options", " ", "specified", " ", "below", " ", "with", " ", 
           StyleBox["ZdDivisors", "MR"]}],
          FontSlant->"Plain"]}],
        TraditionalForm], "TI"]}]}
   }], NotebookDefault]], "DefinitionBox",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.38], {
      Scaled[0.62]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellTags->{"DivisibilityZ", "i:24"}],

Cell["Functions for working with the ordinary integers.", "Caption",
 CellTags->"DivisibilityZ"],

Cell[TextData[{
 "It is the case that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"4", " ", "|", " ", "8"}], TraditionalForm]]],
 ", but it is not true that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"8", " ", "|", " ", "4"}], TraditionalForm]]],
 "."
}], "MathCaption",
 CellTags->"DivisibilityZ"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"DividesQ", "[", 
    RowBox[{"4", ",", " ", "8"}], "]"}], ",", " ", 
   RowBox[{"DividesQ", "[", 
    RowBox[{"8", ",", "4"}], "]"}]}], "}"}]], "Input",
 CellTags->"DivisibilityZ",
 CellLabel->"In[62]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "False"}], "}"}]], "Output",
 CellTags->"DivisibilityZ",
 CellLabel->"Out[62]="]
}, Open  ]],

Cell["Here we have the divisors of 28 paired up in a natural way.", \
"MathCaption",
 CellTags->"DivisibilityZ"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerDivisors", "[", 
  RowBox[{"28", ",", " ", 
   RowBox[{"Combine", " ", "\[Rule]", " ", "Products"}]}], "]"}]], "Input",
 CellTags->"DivisibilityZ",
 CellLabel->"In[63]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "7"}], "}"}]}], "}"}]], "Output",
 CellTags->"DivisibilityZ",
 CellLabel->"Out[63]="]
}, Open  ]],

Cell["\<\
Here we contrast the divisors of 28 with the nontrivial divisors of 28.\
\>", "MathCaption",
 CellTags->"DivisibilityZ"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Divisors", "[", "28", "]"}], ",", " ", 
   RowBox[{"IntegerDivisors", "[", 
    RowBox[{"28", ",", " ", 
     RowBox[{"NonTrivialOnly", " ", "\[Rule]", " ", "True"}]}], "]"}]}], 
  "}"}]], "Input",
 CellTags->"DivisibilityZ",
 CellLabel->"In[64]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4", ",", "7", ",", "14", ",", "28"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "7", ",", "14"}], "}"}]}], "}"}]], "Output",
 CellTags->"DivisibilityZ",
 CellLabel->"Out[64]="]
}, Open  ]],

Cell[BoxData[
 FormBox[GridBox[{
    {
     StyleBox[
      FormBox[
       RowBox[{
        StyleBox["DividesQ", "MR"], 
        StyleBox["[", "MR"], " ", 
        RowBox[{
         RowBox[{"a", " ", 
          StyleBox["+", "MR"], " ", 
          RowBox[{"b", " ", 
           SqrtBox["d"]}]}], 
         StyleBox[",", "MR"], " ", 
         RowBox[{"c", " ", 
          StyleBox["+", "MR"], " ", 
          RowBox[{"e", " ", 
           SqrtBox["d"]}]}], 
         StyleBox[",", "MR"], " ", 
         RowBox[{
          StyleBox["Radical", "MR"], 
          StyleBox[" ", "MR"], 
          StyleBox["\[Rule]", "MR"], " ", "d"}]}], 
        StyleBox["]", "MR"]}],
       TraditionalForm], "TI"], 
     RowBox[{
      RowBox[{
       StyleBox["give",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["True", "MR",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["if",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        FormBox[
         RowBox[{
          RowBox[{
           StyleBox["a",
            SingleLetterItalics->False,
            FontSlant->"Italic"], " ", 
           StyleBox["+",
            SingleLetterItalics->False], " ", 
           RowBox[{
            StyleBox["b",
             SingleLetterItalics->False,
             FontSlant->"Italic"], " ", 
            SqrtBox["d"]}]}], " ", 
          StyleBox["|",
           SingleLetterItalics->False], " ", 
          RowBox[{
           StyleBox["c",
            SingleLetterItalics->False,
            FontSlant->"Italic"], " ", 
           StyleBox["+",
            SingleLetterItalics->False], " ", 
           RowBox[{
            StyleBox["e",
             SingleLetterItalics->False,
             FontSlant->"Italic"], " ", 
            SqrtBox["d"]}]}]}],
         TraditionalForm], "Text"]}], 
      StyleBox[",",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox[
       RowBox[{"and", " ", 
        StyleBox["False", "MR"], " ", "otherwise"}],
       SingleLetterItalics->False]}]},
    {
     RowBox[{
      StyleBox["ZdDividesQ", "MR"], 
      StyleBox["[", "MR"], 
      RowBox[{
       StyleBox["d", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["r", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["s", "TI"]}], 
      StyleBox["]", "MR"]}], 
     StyleBox[
      RowBox[{
       StyleBox[
        RowBox[{"equivalent", " ", "to", " "}],
        SingleLetterItalics->False], 
       StyleBox[
        FormBox[
         RowBox[{
          StyleBox["DividesQ", "MR"], 
          StyleBox["[", "MR"], 
          RowBox[{
           StyleBox["r", "TI"], 
           StyleBox[",", "TI"], " ", 
           StyleBox["s", "TI"], 
           StyleBox[",", "TI"], " ", 
           StyleBox[
            FormBox[
             RowBox[{
              StyleBox["Radical", "MR"], " ", 
              StyleBox["\[Rule]", "MR"], 
              StyleBox[" ", "MR"], 
              StyleBox["d",
               SingleLetterItalics->False]}],
             TraditionalForm], "TI"]}], 
          StyleBox["]", "MR"]}],
         StandardForm], "Text"]}], "Text"]},
    {
     RowBox[{
      StyleBox["ZdDivisors", "MR"], 
      StyleBox["[", "MR"], 
      RowBox[{
       StyleBox["d", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["x", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["opts", "TI"]}], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       StyleBox[
        RowBox[{"return", " ", "the", " ", "divisors", " ", "of", " "}],
        SingleLetterItalics->False], 
       StyleBox[
        FormBox["x",
         TraditionalForm], "Text"], 
       StyleBox[
        RowBox[{" ", "in", " "}],
        SingleLetterItalics->False], 
       StyleBox[
        FormBox[
         RowBox[{
          StyleBox["\[DoubleStruckCapitalZ]",
           SingleLetterItalics->False], "[", 
          SqrtBox["d"], "]"}],
         TraditionalForm], "Text"], 
       StyleBox[
        RowBox[{" ", 
         RowBox[{"for", " ", "negative", " "}]}],
        SingleLetterItalics->False], 
       StyleBox[
        FormBox["d",
         TraditionalForm], "Text"]}], 
      StyleBox[",",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox[
       RowBox[{
       "giving", " ", "only", " ", "one", " ", "divisor", " ", "per", " ", 
        "class", " ", "of", " ", "associates"}],
       SingleLetterItalics->False], 
      StyleBox[",",
       SingleLetterItalics->False], 
      RowBox[{
       StyleBox["using",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["the",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["options",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["specified",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["in",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["opts",
        FontSlant->"Italic"]}]}]},
    {
     RowBox[{
      StyleBox["ZdDivisors", "MR"], 
      StyleBox["[", "MR"], 
      RowBox[{
       StyleBox["d", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["x", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["max", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["opts", "TI"]}], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       RowBox[{
        StyleBox[
         RowBox[{"return", " ", "the", " ", "divisors", " ", "of", " "}],
         SingleLetterItalics->False], 
        StyleBox[
         FormBox["x",
          TraditionalForm], "Text"], 
        StyleBox[
         RowBox[{" ", "in", " "}],
         SingleLetterItalics->False], 
        StyleBox[
         FormBox[
          RowBox[{
           StyleBox["\[DoubleStruckCapitalZ]",
            SingleLetterItalics->False], "[", 
           SqrtBox["d"], "]"}],
          TraditionalForm], "Text"], 
        StyleBox[
         RowBox[{" ", 
          RowBox[{"for", " ", "positive", " "}]}],
         SingleLetterItalics->False], 
        StyleBox[
         FormBox["d",
          TraditionalForm], "Text"]}], 
       StyleBox[",",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        RowBox[{
        "whose", " ", "norm", " ", "is", " ", "less", " ", "than", " ", "or", 
         " ", "equal", " ", "to", " ", "the", " ", "norm"}],
        SingleLetterItalics->False]}], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      RowBox[{
       StyleBox["of",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["max",
        FontSlant->"Italic"], 
       StyleBox[
        RowBox[{
         RowBox[{",", " ", 
          RowBox[{
          "using", " ", "the", " ", "options", " ", "specified", " ", 
           "in"}]}], " "}],
        SingleLetterItalics->False], 
       StyleBox["opts",
        FontSlant->"Italic"]}]}]}
   }], NotebookDefault]], "DefinitionBox",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.35], {
      Scaled[0.65]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellTags->{"DivisibilityZ", "i:25"}],

Cell[TextData[{
 "Divisor-related functions for elements in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DoubleStruckCapitalZ]", "[", 
    SqrtBox["d"], "]"}], TraditionalForm]]],
 "."
}], "Caption",
 CellTags->"DivisibilityZ"],

Cell[BoxData[
 FormBox[GridBox[{
    {
     StyleBox[
      RowBox[{"option", " ", "name"}], "SO10"], 
     StyleBox["value", "SO10"], 
     StyleBox[
      FormBox[" ",
       StandardForm], "Text"]},
    {
     StyleBox[
      FormBox["DivisorsComplete",
       StandardForm], "Text"], 
     StyleBox[
      FormBox["False",
       StandardForm], "Text"], 
     RowBox[{
      RowBox[{
       RowBox[{
        StyleBox["include",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["all",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["the",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["divisors",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["if",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["set",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["to",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["True", "MR"]}], 
       StyleBox[",",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["but",
        SingleLetterItalics->False]}], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["\n",
       SingleLetterItalics->False], 
      StyleBox[
       RowBox[{
       "only", " ", "include", " ", "one", " ", "from", " ", "each", " ", 
        "class", " ", "of", " ", "associates"}],
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["\n",
       SingleLetterItalics->False], 
      RowBox[{
       StyleBox[
        RowBox[{"(", 
         RowBox[{
         "typically", " ", "one", " ", "in", " ", "the", " ", "first", " ", 
          "quadrant", " ", "or", " ", "right", " ", "\n", 
          "half\[Hyphen]plane"}], ")"}],
        SingleLetterItalics->False], 
       StyleBox[",",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       RowBox[{
        StyleBox[
         RowBox[{"if", " ", "set", " ", "to"}],
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["False", "MR"], 
        StyleBox[
         RowBox[{" ", 
          RowBox[{"(", "default", ")"}]}],
         SingleLetterItalics->False]}]}]}]},
    {
     StyleBox[
      FormBox["NonTrivialOnly",
       StandardForm], "Text"], 
     StyleBox[
      FormBox["False",
       StandardForm], "Text"], 
     RowBox[{
      StyleBox[
       RowBox[{"if", " ", "set", " ", "to", " "}],
       SingleLetterItalics->False], 
      StyleBox["True", "MR"], 
      StyleBox[",",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox[
       RowBox[{
       "exclude", " ", "all", " ", "associates", " ", "of", " ", "1", " ", 
        "and", " ", "the", " ", "number", " ", "whose"}],
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox[
       RowBox[{"divisors", " ", "we", " ", "are", " ", "seeking"}],
       SingleLetterItalics->False], 
      StyleBox[",",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox[
       RowBox[{
       "while", " ", "include", " ", "them", " ", "if", " ", "set", " ", 
        "to"}],
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["False", "MR"], 
      StyleBox[
       RowBox[{" ", 
        RowBox[{"(", "default", ")"}]}],
       SingleLetterItalics->False]}]},
    {
     StyleBox[
      FormBox["Combine",
       StandardForm], "Text"], 
     StyleBox[
      FormBox["False",
       StandardForm], "Text"], 
     StyleBox[
      RowBox[{
       RowBox[{
       "do", " ", "not", " ", "combine", " ", "the", " ", "divisors", " ", 
        "in", " ", "any", " ", "manner"}], " ", "\n", 
       RowBox[{"(", 
        RowBox[{"default", " ", "value"}], ")"}]}],
      SingleLetterItalics->False]},
    {
     StyleBox[
      FormBox["Combine",
       StandardForm], "Text"], 
     StyleBox[
      FormBox["Products",
       StandardForm], "Text"], 
     RowBox[{
      StyleBox[
       RowBox[{
        RowBox[{"combine", " ", "divisors"}], ",", " ", 
        RowBox[{"if", " ", "possible"}], ",", " ", 
        RowBox[{"in", " ", "pairs", " ", "of", " ", "the", " ", "form"}]}],
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], "\n", 
      RowBox[{
       StyleBox[
        FormBox[
         RowBox[{"{", 
          StyleBox["a",
           SingleLetterItalics->False,
           FontSlant->"Italic"], ",", 
          StyleBox[" ",
           FontSlant->"Italic"], 
          StyleBox["b",
           SingleLetterItalics->False,
           FontSlant->"Italic"], "}"}],
         TraditionalForm], "Text"], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["where",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        FormBox[
         RowBox[{
          StyleBox["a",
           SingleLetterItalics->False], 
          StyleBox[" ",
           FontSlant->"Plain"], 
          StyleBox["*",
           SingleLetterItalics->False,
           FontSlant->"Plain"], " ", 
          StyleBox["b",
           SingleLetterItalics->False]}],
         TraditionalForm],
        FontSlant->"Italic"], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["is",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["the",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["number",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["whose",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["divisors",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["we",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["are",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["seeking",
        SingleLetterItalics->False]}]}]},
    {
     StyleBox[
      FormBox["Combine",
       StandardForm], "Text"], 
     StyleBox[
      FormBox["Negations",
       StandardForm], "Text"], 
     RowBox[{
      StyleBox[
       RowBox[{
        RowBox[{"combine", " ", "divisors"}], ",", " ", 
        RowBox[{"if", " ", "possible"}], ",", " ", 
        RowBox[{"in", " ", "pairs", " ", "of"}]}],
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["\n", "Text",
       SingleLetterItalics->False], 
      RowBox[{
       StyleBox["the",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["form",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        FormBox[
         RowBox[{"{", 
          StyleBox["a",
           SingleLetterItalics->False,
           FontSlant->"Italic"], ",", " ", 
          StyleBox["-",
           SingleLetterItalics->False], 
          StyleBox["a",
           SingleLetterItalics->False,
           FontSlant->"Italic"], "}"}],
         TraditionalForm], "Text"]}]}]},
    {
     StyleBox[
      FormBox["Combine",
       StandardForm], "Text"], 
     StyleBox[
      FormBox["Associates",
       StandardForm], "Text"], 
     RowBox[{
      StyleBox[
       RowBox[{
        RowBox[{"combine", " ", "divisors"}], ",", " ", 
        RowBox[{"if", " ", "possible"}], ",", " ", 
        RowBox[{
        "in", " ", "lists", " ", "where", " ", "each", " ", "element", " ", 
         "in", " ", "a", " ", "list"}]}],
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox[
       RowBox[{
       "is", " ", "an", " ", "associate", " ", "of", " ", "the", " ", 
        "others"}],
       SingleLetterItalics->False], 
      StyleBox[";",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["for",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox[
       FormBox[
        RowBox[{
         StyleBox["d",
          SingleLetterItalics->False,
          FontSlant->"Italic"], " ", 
         StyleBox["<",
          SingleLetterItalics->False], " ", "-", "1", ","}],
        TraditionalForm], "Text"], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["this",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["is",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["the",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["same",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["as",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["Negations", "MR"]}]}
   }], NotebookDefault]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
 GridBoxItemSize->{"Columns" -> {
     Scaled[0.2], 
     Scaled[0.19], {
      Scaled[0.61]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellTags->{"DivisibilityZ", "i:26"}],

Cell[TextData[{
 "Options for ",
 StyleBox["IntegerDivisors",
  FontFamily->"Courier"],
 " and ",
 StyleBox["ZdDivisors",
  FontFamily->"Courier"],
 "."
}], "Caption",
 CellTags->"DivisibilityZ"],

Cell[TextData[{
 "We use the following to determine if ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", " ", "-", " ", 
    RowBox[{"3", " ", 
     SqrtBox[
      RowBox[{"-", "5"}]]}]}], TraditionalForm]]],
 " divides 46 over ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DoubleStruckCapitalZ]", "[", 
    SqrtBox[
     RowBox[{"-", "5"}]], "]"}], TraditionalForm]]],
 "."
}], "MathCaption",
 CellTags->"DivisibilityZ"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DividesQ", "[", " ", 
  RowBox[{
   RowBox[{"1", " ", "-", " ", 
    RowBox[{"3", 
     SqrtBox[
      RowBox[{"-", "5"}]]}]}], ",", "46", ",", " ", 
   RowBox[{"Radical", " ", "\[Rule]", 
    RowBox[{"-", "5"}]}]}], "]"}]], "Input",
 CellTags->"DivisibilityZ",
 CellLabel->"In[65]:="],

Cell[BoxData["True"], "Output",
 CellTags->"DivisibilityZ",
 CellLabel->"Out[65]="]
}, Open  ]],

Cell["This is an alternate way of accomplishing the same thing.", \
"MathCaption",
 CellTags->"DivisibilityZ"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ZdDividesQ", "[", 
  RowBox[{
   RowBox[{"-", "5"}], ",", " ", 
   RowBox[{"1", " ", "-", " ", 
    RowBox[{"3", 
     SqrtBox[
      RowBox[{"-", "5"}]]}]}], ",", "46"}], "]"}]], "Input",
 CellTags->"DivisibilityZ",
 CellLabel->"In[66]:="],

Cell[BoxData["True"], "Output",
 CellTags->"DivisibilityZ",
 CellLabel->"Out[66]="]
}, Open  ]],

Cell[TextData[{
 "Since we know that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"1", " ", "-", " ", 
     RowBox[{"3", " ", 
      SqrtBox[
       RowBox[{"-", "5"}]]}]}], " ", "|", " ", "46"}], TraditionalForm]]],
 ", we may be interested in knowing the other divisor (yielding a product of \
46)."
}], "MathCaption",
 CellTags->"DivisibilityZ"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ZdDivide", "[", 
  RowBox[{"46", ",", " ", 
   RowBox[{"1", " ", "-", " ", 
    RowBox[{"3", 
     SqrtBox[
      RowBox[{"-", "5"}]]}]}]}], "]"}]], "Input",
 CellTags->"DivisibilityZ",
 CellLabel->"In[67]:="],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"3", " ", "I", " ", 
   SqrtBox["5"]}]}]], "Output",
 CellTags->"DivisibilityZ",
 CellLabel->"Out[67]="]
}, Open  ]],

Cell["\<\
In this case, we are asking for all the divisors of 24 to be paired so that \
the product is 24.\
\>", "MathCaption",
 CellTags->"DivisibilityZ"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerDivisors", "[", 
  RowBox[{"24", ",", " ", 
   RowBox[{"DivisorsComplete", " ", "\[Rule]", " ", "True"}], ",", " ", 
   RowBox[{"Combine", " ", "\[Rule]", " ", "Products"}]}], "]"}]], "Input",
 CellTags->"DivisibilityZ",
 CellLabel->"In[68]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "24"}], ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "12"}], ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "8"}], ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6"}], ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellTags->"DivisibilityZ",
 CellLabel->"Out[68]="]
}, Open  ]],

Cell[TextData[{
 "Now we are looking for the divisors of 28 in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DoubleStruckCapitalZ]", "[", 
    SqrtBox[
     RowBox[{"-", "5"}]], "]"}], TraditionalForm]]],
 " in order to pair them by associates. Since we are not looking for the \
complete list of divisors, all the negations (of the ones listed) are \
excluded. Since the negations are the only associates, each class has a \
single element."
}], "MathCaption",
 CellTags->"DivisibilityZ"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ZdDivisors", "[", 
  RowBox[{
   RowBox[{"-", "5"}], ",", " ", "28", ",", " ", 
   RowBox[{"Combine", " ", "\[Rule]", " ", "Associates"}]}], "]"}]], "Input",
 CellTags->"DivisibilityZ",
 CellLabel->"In[69]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"{", "7", "}"}], ",", 
   RowBox[{"{", "14", "}"}], ",", 
   RowBox[{"{", "28", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", "-", 
     RowBox[{"I", " ", 
      SqrtBox["5"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", "+", 
     RowBox[{"I", " ", 
      SqrtBox["5"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", "-", 
     RowBox[{"2", " ", "I", " ", 
      SqrtBox["5"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", "+", 
     RowBox[{"2", " ", "I", " ", 
      SqrtBox["5"]}]}], "}"}]}], "}"}]], "Output",
 CellTags->"DivisibilityZ",
 CellLabel->"Out[69]="]
}, Open  ]],

Cell[TextData[{
 "When we set ",
 StyleBox["DivisorsComplete", "MR"],
 " to ",
 StyleBox["True", "MR"],
 ", the natural pairing of associates (negations in this case) is given. Note \
also that ",
 StyleBox["NonTrivialOnly", "MR"],
 " set to ",
 StyleBox["True", "MR"],
 " prevents \[PlusMinus] 1 and \[PlusMinus] 28 from being listed."
}], "MathCaption",
 CellTags->"DivisibilityZ"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ZdDivisors", "[", 
  RowBox[{
   RowBox[{"-", "5"}], ",", "28", ",", " ", 
   RowBox[{"Combine", " ", "\[Rule]", " ", "Associates"}], ",", " ", 
   RowBox[{"DivisorsComplete", " ", "\[Rule]", " ", "True"}], ",", " ", 
   RowBox[{"NonTrivialOnly", " ", "\[Rule]", " ", "True"}]}], "]"}]], "Input",\

 CellTags->"DivisibilityZ",
 CellLabel->"In[70]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "14"}], ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "7"}], ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], "-", 
      RowBox[{"I", " ", 
       SqrtBox["5"]}]}], ",", 
     RowBox[{"3", "+", 
      RowBox[{"I", " ", 
       SqrtBox["5"]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"3", "-", 
      RowBox[{"I", " ", 
       SqrtBox["5"]}]}], ",", 
     RowBox[{
      RowBox[{"-", "3"}], "+", 
      RowBox[{"I", " ", 
       SqrtBox["5"]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "6"}], "-", 
      RowBox[{"2", " ", "I", " ", 
       SqrtBox["5"]}]}], ",", 
     RowBox[{"6", "+", 
      RowBox[{"2", " ", "I", " ", 
       SqrtBox["5"]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"6", "-", 
      RowBox[{"2", " ", "I", " ", 
       SqrtBox["5"]}]}], ",", 
     RowBox[{
      RowBox[{"-", "6"}], "+", 
      RowBox[{"2", " ", "I", " ", 
       SqrtBox["5"]}]}]}], "}"}]}], "}"}]], "Output",
 CellTags->"DivisibilityZ",
 CellLabel->"Out[70]="]
}, Open  ]],

Cell[TextData[{
 "Since the ring \[DoubleStruckCapitalZ]",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", "i", "]"}], TraditionalForm]]],
 " has four units, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[PlusMinus]", "1"}], ",", 
     RowBox[{"\[PlusMinus]", "i"}]}], "}"}], TraditionalForm]]],
 ", combining by associates yields classes of length 4."
}], "MathCaption",
 CellTags->"DivisibilityZ"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ZdDivisors", "[", 
  RowBox[{
   RowBox[{"-", "1"}], ",", "8", ",", " ", 
   RowBox[{"Combine", " ", "\[Rule]", " ", "Associates"}], ",", " ", 
   RowBox[{"DivisorsComplete", " ", "\[Rule]", " ", "True"}], ",", " ", 
   RowBox[{"NonTrivialOnly", " ", "\[Rule]", " ", "True"}]}], "]"}]], "Input",\

 CellTags->"DivisibilityZ",
 CellLabel->"In[71]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4"}], ",", 
     RowBox[{
      RowBox[{"-", "4"}], " ", "I"}], ",", 
     RowBox[{"4", " ", "I"}], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "4"}], "-", 
      RowBox[{"4", " ", "I"}]}], ",", 
     RowBox[{
      RowBox[{"-", "4"}], "+", 
      RowBox[{"4", " ", "I"}]}], ",", 
     RowBox[{"4", "-", 
      RowBox[{"4", " ", "I"}]}], ",", 
     RowBox[{"4", "+", 
      RowBox[{"4", " ", "I"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "I"}], ",", 
     RowBox[{"2", " ", "I"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], "-", 
      RowBox[{"2", " ", "I"}]}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], "+", 
      RowBox[{"2", " ", "I"}]}], ",", 
     RowBox[{"2", "-", 
      RowBox[{"2", " ", "I"}]}], ",", 
     RowBox[{"2", "+", 
      RowBox[{"2", " ", "I"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "-", "I"}], ",", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "I"}], ",", 
     RowBox[{"1", "-", "I"}], ",", 
     RowBox[{"1", "+", "I"}]}], "}"}]}], "}"}]], "Output",
 CellTags->"DivisibilityZ",
 CellLabel->"Out[71]="]
}, Open  ]],

Cell["Here are the same divisors combined by negations.", "MathCaption",
 CellTags->"DivisibilityZ"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ZdDivisors", "[", 
  RowBox[{
   RowBox[{"-", "1"}], ",", "8", ",", " ", 
   RowBox[{"Combine", " ", "\[Rule]", " ", "Negations"}], ",", " ", 
   RowBox[{"DivisorsComplete", " ", "\[Rule]", " ", "True"}], ",", " ", 
   RowBox[{"NonTrivialOnly", " ", "\[Rule]", " ", "True"}]}], "]"}]], "Input",\

 CellTags->"DivisibilityZ",
 CellLabel->"In[72]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "4"}], "-", 
      RowBox[{"4", " ", "I"}]}], ",", 
     RowBox[{"4", "+", 
      RowBox[{"4", " ", "I"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "4"}], "+", 
      RowBox[{"4", " ", "I"}]}], ",", 
     RowBox[{"4", "-", 
      RowBox[{"4", " ", "I"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], "-", 
      RowBox[{"2", " ", "I"}]}], ",", 
     RowBox[{"2", "+", 
      RowBox[{"2", " ", "I"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], "+", 
      RowBox[{"2", " ", "I"}]}], ",", 
     RowBox[{"2", "-", 
      RowBox[{"2", " ", "I"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "-", "I"}], ",", 
     RowBox[{"1", "+", "I"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "+", "I"}], ",", 
     RowBox[{"1", "-", "I"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "I"}], ",", 
     RowBox[{"2", " ", "I"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "4"}], " ", "I"}], ",", 
     RowBox[{"4", " ", "I"}]}], "}"}]}], "}"}]], "Output",
 CellTags->"DivisibilityZ",
 CellLabel->"Out[72]="]
}, Open  ]],

Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{
      StyleBox["ZdCombineAssociates", "MR"], 
      StyleBox["[", "MR"], 
      RowBox[{
       StyleBox["d", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["lst", "TI"]}], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       StyleBox["return",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["the",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["list",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["lst",
        SingleLetterItalics->False,
        FontSlant->"Italic"], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["by",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["combining",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["all",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["the",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["associates",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["in",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        FormBox[
         RowBox[{
          StyleBox["\[DoubleStruckCapitalZ]",
           SingleLetterItalics->False], "[", 
          SqrtBox["d"], "]"}],
         TraditionalForm], "Text"], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["together",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["in",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["sublists",
        SingleLetterItalics->False]}], 
      StyleBox[" ",
       SingleLetterItalics->False]}]}
   }], NotebookDefault]], "DefinitionBox",
 GeneratedCell->True,
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.42], {
      Scaled[0.58]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellTags->{"DivisibilityZ", "i:27"}],

Cell["Means of combining associates if given a list of elements.", "Caption",
 CellTags->"DivisibilityZ"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ZdCombineAssociates", "[", 
  RowBox[{
   RowBox[{"-", "1"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", " ", 
     RowBox[{"3", "I"}], ",", " ", 
     RowBox[{"-", "4"}], ",", " ", "5", ",", " ", 
     RowBox[{
      RowBox[{"-", "5"}], "I"}], ",", "6", ",", " ", 
     RowBox[{"7", "I"}], ",", 
     RowBox[{"-", "5"}]}], "}"}]}], "]"}]], "Input",
 CellTags->"DivisibilityZ",
 CellLabel->"In[73]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"3", " ", "I"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5"}], ",", 
     RowBox[{
      RowBox[{"-", "5"}], " ", "I"}], ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", " ", "I"}], "}"}], ",", 
   RowBox[{"{", "6", "}"}]}], "}"}]], "Output",
 CellTags->"DivisibilityZ",
 CellLabel->"Out[73]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5.3.3 Norm-related functions", "Subsubsection",
 CellTags->{"NormZ", "i:28"}],

Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{
      StyleBox["ZdNorm", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox[
       FormBox[
        RowBox[{"a", " ", 
         StyleBox["+", "MR"], " ", 
         RowBox[{"b", " ", 
          SqrtBox["d"]}]}],
        TraditionalForm], "TI"], 
      StyleBox["]", "MR"]}], 
     StyleBox[
      RowBox[{
       StyleBox[
        RowBox[{
        "return", " ", "the", " ", "norm", " ", "of", " ", "an", " ", 
         "element", " ", "in", " "}],
        SingleLetterItalics->False], 
       FormBox[
        RowBox[{
         StyleBox["\[DoubleStruckCapitalZ]",
          SingleLetterItalics->False], "[", 
         SqrtBox["d"], "]"}],
        TraditionalForm], 
       StyleBox[
        RowBox[{
         RowBox[{",", " ", 
          RowBox[{"defined", " ", "to", " ", "be"}]}], " "}],
        SingleLetterItalics->False], 
       FormBox[
        RowBox[{" ", 
         RowBox[{
          StyleBox["|",
           SingleLetterItalics->False], " ", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           StyleBox["-",
            SingleLetterItalics->False], " ", 
           RowBox[{
            StyleBox["d",
             SingleLetterItalics->False,
             FontSlant->"Italic"], " ", 
            SuperscriptBox["b", "2"]}]}], 
          StyleBox["|",
           SingleLetterItalics->False]}]}],
        TraditionalForm], " "}], "Text"]},
    {
     RowBox[{
      StyleBox["ZdPossibleNormQ", "MR"], 
      StyleBox["[", "MR"], 
      RowBox[{
       StyleBox["d", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["nrm", "TI"]}], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       RowBox[{
        StyleBox[
         RowBox[{"f", 
          StyleBox["or", "Text"]}]], " ", "negative", " ", 
        StyleBox["d",
         FontSlant->"Italic"]}], 
       StyleBox[",",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       RowBox[{
        StyleBox["give",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["True", "MR"], 
        StyleBox[
         RowBox[{" ", 
          RowBox[{"if", " ", "the", " ", "value", " "}]}],
         SingleLetterItalics->False], 
        StyleBox["nrm",
         FontSlant->"Italic"]}]}], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["\n",
       SingleLetterItalics->False], 
      RowBox[{
       RowBox[{
        StyleBox["can",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["occur",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["in",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox[
         FormBox[
          RowBox[{
           StyleBox["\[DoubleStruckCapitalZ]",
            SingleLetterItalics->False], "[", 
           SqrtBox["d"], "]"}],
          TraditionalForm], "Text"]}], 
       StyleBox[" ", "Text"], 
       StyleBox[",", "Text"], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       RowBox[{
        StyleBox["and",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["False", "MR"], 
        StyleBox[
         RowBox[{" ", "otherwise"}],
         SingleLetterItalics->False]}]}]}]},
    {
     RowBox[{
      StyleBox["ZdPossibleNorms", "MR"], 
      StyleBox["[", "MR"], 
      RowBox[{
       StyleBox["d", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["max", "TI"]}], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       StyleBox["for", "Text"], " ", "negative", " ", 
       StyleBox["d",
        FontSlant->"Italic"]}], ",", " ", 
      RowBox[{
       StyleBox["give",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["a",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["list",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["of",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["all",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["norms",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["less",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["than",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["or",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["equal",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["to",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["max",
        FontSlant->"Italic"], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["that",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["are",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["possible",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["in",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        FormBox[
         RowBox[{
          StyleBox["\[DoubleStruckCapitalZ]",
           SingleLetterItalics->False], "[", 
          SqrtBox["d"], "]"}],
         TraditionalForm], "Text"]}]}]},
    {
     RowBox[{
      StyleBox["ValuesHavingGivenNorm", "MR"], 
      StyleBox["[", "MR"], 
      RowBox[{
       StyleBox["d", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["nrm", "TI"]}], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       RowBox[{
        StyleBox["for", "Text"], " ", "negative", " ", 
        StyleBox["d",
         FontSlant->"Italic"]}], ",", " ", 
       RowBox[{
        StyleBox["return",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["all",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["values",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["in",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox[
         FormBox[
          RowBox[{
           StyleBox["\[DoubleStruckCapitalZ]",
            SingleLetterItalics->False], "[", 
           SqrtBox["d"], "]"}],
          TraditionalForm], "Text"]}]}], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      RowBox[{
       StyleBox["having",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["norm",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["nrm",
        FontSlant->"Italic"]}]}]},
    {
     RowBox[{
      StyleBox["ValuesHavingGivenNorm", "MR"], 
      StyleBox["[", "MR"], 
      RowBox[{
       StyleBox["d", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["nrm", "TI"], 
       StyleBox[",", "TI"], 
       StyleBox[" ", "TI"], 
       StyleBox["max", "TI"]}], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       RowBox[{
       "return", " ", "a", " ", "partial", " ", "list", " ", "of", " ", 
        "values", " ", "in", " ", 
        StyleBox[
         FormBox[
          RowBox[{
           StyleBox["\[DoubleStruckCapitalZ]",
            SingleLetterItalics->False], "[", 
           SqrtBox["d"], "]"}],
          TraditionalForm], "Text"]}], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["having",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["norm",
        SingleLetterItalics->False]}], 
      StyleBox[" ",
       SingleLetterItalics->False], "\n", 
      RowBox[{
       StyleBox["nrm",
        FontSlant->"Italic"], 
       StyleBox[",", "Text"], 
       StyleBox[" ", "Text"], 
       RowBox[{
        StyleBox["for", "Text"], " ", "positive", " ", 
        StyleBox["d",
         FontSlant->"Italic"]}], 
       StyleBox[",",
        FontSlant->"Italic"], 
       StyleBox[" ",
        FontSlant->"Italic"], 
       RowBox[{"using", " ", "up", " ", "to", " ", 
        StyleBox["max",
         FontSlant->"Italic"], " ", "iterations", " ", "of", " ", "an", " ", 
        "algorithm", " ", "in", " ", "this", " ", "pursuit", " ", 
        RowBox[{"(", 
         RowBox[{
         "defaulting", " ", "to", " ", "50", " ", "if", " ", "omitted"}], 
         ")"}]}]}]}]}
   }], NotebookDefault]], "DefinitionBox",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.33], {
      Scaled[0.67]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellTags->{"NormZ", "i:29"}],

Cell["Working with norms.", "Caption",
 CellTags->"NormZ"],

Cell[TextData[{
 "After choosing five random elements from ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DoubleStruckCapitalZ]", "[", 
    SqrtBox[
     RowBox[{"-", "3"}]], "]"}], TraditionalForm]]],
 ", we determine the norm of each."
}], "MathCaption",
 CellTags->"NormZ"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#", ",", 
        RowBox[{"ZdNorm", "[", "#", "]"}]}], "}"}], "&"}], ",", " ", 
     RowBox[{"RandomElements", "[", 
      RowBox[{
       RowBox[{"-", "3"}], ",", " ", "25", ",", "5"}], "]"}]}], "]"}], ",", 
   " ", 
   RowBox[{"TableHeadings", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"None", ",", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<N(x)\\n\>\""}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellTags->"NormZ",
 CellLabel->"In[74]:="],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"x\"\>", "\<\"N(x)\\n\"\>"},
    {
     RowBox[{"5", "+", 
      RowBox[{"13", " ", "I", " ", 
       SqrtBox["3"]}]}], "532"},
    {
     RowBox[{
      RowBox[{"-", "12"}], "+", 
      RowBox[{"3", " ", "I", " ", 
       SqrtBox["3"]}]}], "171"},
    {
     RowBox[{
      RowBox[{"-", "8"}], "+", 
      RowBox[{"I", " ", 
       SqrtBox["3"]}]}], "67"},
    {
     RowBox[{
      RowBox[{"-", "18"}], "-", 
      RowBox[{"17", " ", "I", " ", 
       SqrtBox["3"]}]}], "1191"},
    {
     RowBox[{
      RowBox[{"-", "10"}], "+", 
      RowBox[{"17", " ", "I", " ", 
       SqrtBox["3"]}]}], "967"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  TableForm[#, TableHeadings -> {None, {"x", "N(x)\n"}}]& ]], "Output",
 CellTags->"NormZ",
 CellLabel->"Out[74]//TableForm="]
}, Open  ]],

Cell["\<\
If we have a norm value in mind, we can check to see if this is a viable \
value in the specified ring.\
\>", "MathCaption",
 CellTags->"NormZ"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"#", ",", 
      RowBox[{"ZdPossibleNormQ", "[", 
       RowBox[{
        RowBox[{"-", "5"}], ",", " ", "#"}], "]"}]}], "}"}], "&"}], ",", " ", 
   
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", " ", "10"}], "]"}]}], "]"}]], "Input",
 CellTags->"NormZ",
 CellLabel->"In[75]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "True"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "True"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "False"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "False"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "True"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "True"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "True"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "False"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "False"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "True"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "False"}], "}"}]}], "}"}]], "Output",
 CellTags->"NormZ",
 CellLabel->"Out[75]="]
}, Open  ]],

Cell["\<\
The previous result can also be achieved in the following manner.\
\>", "MathCaption",
 CellTags->"NormZ"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ZdPossibleNorms", "[", 
  RowBox[{
   RowBox[{"-", "5"}], ",", " ", "10"}], "]"}]], "Input",
 CellTags->"NormZ",
 CellLabel->"In[76]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1", ",", "4", ",", "5", ",", "6", ",", "9"}], 
  "}"}]], "Output",
 CellTags->"NormZ",
 CellLabel->"Out[76]="]
}, Open  ]],

Cell[TextData[{
 "For the value of a norm ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 " to be possible in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DoubleStruckCapitalZ]", "[", 
    SqrtBox["d"], "]"}], TraditionalForm]]],
 ", there must be integer coordinates ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"a", ",", " ", "b"}], ")"}], TraditionalForm]]],
 " on the ellipse ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["a", "2"], " ", "-", " ", 
     RowBox[{"d", " ", 
      SuperscriptBox["b", "2"]}]}], " ", "=", " ", "n"}], TraditionalForm]]],
 ", when ",
 Cell[BoxData[
  FormBox["d", TraditionalForm]]],
 " is negative, and on one of two hyperbolas for positive ",
 Cell[BoxData[
  FormBox["d", TraditionalForm]]],
 ". In the following figure, points of the same color have the same norm and \
are on a common ellipse concentric with the ellipse shown (corresponding to \
norm 56)."
}], "MathCaption",
 CellTags->"NormZ"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ZdPossibleNorms", "[", 
  RowBox[{
   RowBox[{"-", "5"}], ",", "56", ",", " ", 
   RowBox[{"Mode", " ", "\[Rule]", " ", "Visual"}]}], "]"}]], "Input",
 CellTags->"NormZ",
 CellLabel->"In[77]:="],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .44721 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.0636336 0.223607 0.0636336 [
[.1182 -0.0125 -6 -9 ]
[.1182 -0.0125 6 0 ]
[.24547 -0.0125 -6 -9 ]
[.24547 -0.0125 6 0 ]
[.37273 -0.0125 -6 -9 ]
[.37273 -0.0125 6 0 ]
[.5 -0.0125 -3 -9 ]
[.5 -0.0125 3 0 ]
[.62727 -0.0125 -3 -9 ]
[.62727 -0.0125 3 0 ]
[.75453 -0.0125 -3 -9 ]
[.75453 -0.0125 3 0 ]
[.8818 -0.0125 -3 -9 ]
[.8818 -0.0125 3 0 ]
[ 0 0 -0.125 0 ]
[-0.0125 .03271 -12 -4.5 ]
[-0.0125 .03271 0 4.5 ]
[-0.0125 .09634 -12 -4.5 ]
[-0.0125 .09634 0 4.5 ]
[-0.0125 .15997 -12 -4.5 ]
[-0.0125 .15997 0 4.5 ]
[-0.0125 .22361 -6 -4.5 ]
[-0.0125 .22361 0 4.5 ]
[-0.0125 .28724 -6 -4.5 ]
[-0.0125 .28724 0 4.5 ]
[-0.0125 .35087 -6 -4.5 ]
[-0.0125 .35087 0 4.5 ]
[-0.0125 .41451 -6 -4.5 ]
[-0.0125 .41451 0 4.5 ]
[ 0 0 -0.125 0 ]
[ 0 .44721 .125 0 ]
[ 1 0 .125 0 ]
[ 0 0 0 0 ]
[ 1 .44721 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.1182 0 m
.1182 .00625 L
s
[(-6)] .1182 -0.0125 0 1 Mshowa
.24547 0 m
.24547 .00625 L
s
[(-4)] .24547 -0.0125 0 1 Mshowa
.37273 0 m
.37273 .00625 L
s
[(-2)] .37273 -0.0125 0 1 Mshowa
.5 0 m
.5 .00625 L
s
[(0)] .5 -0.0125 0 1 Mshowa
.62727 0 m
.62727 .00625 L
s
[(2)] .62727 -0.0125 0 1 Mshowa
.75453 0 m
.75453 .00625 L
s
[(4)] .75453 -0.0125 0 1 Mshowa
.8818 0 m
.8818 .00625 L
s
[(6)] .8818 -0.0125 0 1 Mshowa
.125 Mabswid
.15002 0 m
.15002 .00375 L
s
.18183 0 m
.18183 .00375 L
s
.21365 0 m
.21365 .00375 L
s
.27728 0 m
.27728 .00375 L
s
.3091 0 m
.3091 .00375 L
s
.34092 0 m
.34092 .00375 L
s
.40455 0 m
.40455 .00375 L
s
.43637 0 m
.43637 .00375 L
s
.46818 0 m
.46818 .00375 L
s
.53182 0 m
.53182 .00375 L
s
.56363 0 m
.56363 .00375 L
s
.59545 0 m
.59545 .00375 L
s
.65908 0 m
.65908 .00375 L
s
.6909 0 m
.6909 .00375 L
s
.72272 0 m
.72272 .00375 L
s
.78635 0 m
.78635 .00375 L
s
.81817 0 m
.81817 .00375 L
s
.84998 0 m
.84998 .00375 L
s
.08638 0 m
.08638 .00375 L
s
.05456 0 m
.05456 .00375 L
s
.02275 0 m
.02275 .00375 L
s
.91362 0 m
.91362 .00375 L
s
.94544 0 m
.94544 .00375 L
s
.97725 0 m
.97725 .00375 L
s
.25 Mabswid
0 0 m
1 0 L
s
0 .03271 m
.00625 .03271 L
s
[(-3)] -0.0125 .03271 1 0 Mshowa
0 .09634 m
.00625 .09634 L
s
[(-2)] -0.0125 .09634 1 0 Mshowa
0 .15997 m
.00625 .15997 L
s
[(-1)] -0.0125 .15997 1 0 Mshowa
0 .22361 m
.00625 .22361 L
s
[(0)] -0.0125 .22361 1 0 Mshowa
0 .28724 m
.00625 .28724 L
s
[(1)] -0.0125 .28724 1 0 Mshowa
0 .35087 m
.00625 .35087 L
s
[(2)] -0.0125 .35087 1 0 Mshowa
0 .41451 m
.00625 .41451 L
s
[(3)] -0.0125 .41451 1 0 Mshowa
.125 Mabswid
0 .04543 m
.00375 .04543 L
s
0 .05816 m
.00375 .05816 L
s
0 .07089 m
.00375 .07089 L
s
0 .08361 m
.00375 .08361 L
s
0 .10907 m
.00375 .10907 L
s
0 .12179 m
.00375 .12179 L
s
0 .13452 m
.00375 .13452 L
s
0 .14725 m
.00375 .14725 L
s
0 .1727 m
.00375 .1727 L
s
0 .18543 m
.00375 .18543 L
s
0 .19815 m
.00375 .19815 L
s
0 .21088 m
.00375 .21088 L
s
0 .23633 m
.00375 .23633 L
s
0 .24906 m
.00375 .24906 L
s
0 .26179 m
.00375 .26179 L
s
0 .27451 m
.00375 .27451 L
s
0 .29997 m
.00375 .29997 L
s
0 .31269 m
.00375 .31269 L
s
0 .32542 m
.00375 .32542 L
s
0 .33815 m
.00375 .33815 L
s
0 .3636 m
.00375 .3636 L
s
0 .37633 m
.00375 .37633 L
s
0 .38905 m
.00375 .38905 L
s
0 .40178 m
.00375 .40178 L
s
0 .01998 m
.00375 .01998 L
s
0 .00725 m
.00375 .00725 L
s
0 .42723 m
.00375 .42723 L
s
0 .43996 m
.00375 .43996 L
s
.25 Mabswid
0 0 m
0 .44721 L
s
.1182 .44096 m
.1182 .44721 L
s
.24547 .44096 m
.24547 .44721 L
s
.37273 .44096 m
.37273 .44721 L
s
.5 .44096 m
.5 .44721 L
s
.62727 .44096 m
.62727 .44721 L
s
.75453 .44096 m
.75453 .44721 L
s
.8818 .44096 m
.8818 .44721 L
s
.125 Mabswid
.15002 .44346 m
.15002 .44721 L
s
.18183 .44346 m
.18183 .44721 L
s
.21365 .44346 m
.21365 .44721 L
s
.27728 .44346 m
.27728 .44721 L
s
.3091 .44346 m
.3091 .44721 L
s
.34092 .44346 m
.34092 .44721 L
s
.40455 .44346 m
.40455 .44721 L
s
.43637 .44346 m
.43637 .44721 L
s
.46818 .44346 m
.46818 .44721 L
s
.53182 .44346 m
.53182 .44721 L
s
.56363 .44346 m
.56363 .44721 L
s
.59545 .44346 m
.59545 .44721 L
s
.65908 .44346 m
.65908 .44721 L
s
.6909 .44346 m
.6909 .44721 L
s
.72272 .44346 m
.72272 .44721 L
s
.78635 .44346 m
.78635 .44721 L
s
.81817 .44346 m
.81817 .44721 L
s
.84998 .44346 m
.84998 .44721 L
s
.08638 .44346 m
.08638 .44721 L
s
.05456 .44346 m
.05456 .44721 L
s
.02275 .44346 m
.02275 .44721 L
s
.91362 .44346 m
.91362 .44721 L
s
.94544 .44346 m
.94544 .44721 L
s
.97725 .44346 m
.97725 .44721 L
s
.25 Mabswid
0 .44721 m
1 .44721 L
s
.99375 .03271 m
1 .03271 L
s
.99375 .09634 m
1 .09634 L
s
.99375 .15997 m
1 .15997 L
s
.99375 .22361 m
1 .22361 L
s
.99375 .28724 m
1 .28724 L
s
.99375 .35087 m
1 .35087 L
s
.99375 .41451 m
1 .41451 L
s
.125 Mabswid
.99625 .04543 m
1 .04543 L
s
.99625 .05816 m
1 .05816 L
s
.99625 .07089 m
1 .07089 L
s
.99625 .08361 m
1 .08361 L
s
.99625 .10907 m
1 .10907 L
s
.99625 .12179 m
1 .12179 L
s
.99625 .13452 m
1 .13452 L
s
.99625 .14725 m
1 .14725 L
s
.99625 .1727 m
1 .1727 L
s
.99625 .18543 m
1 .18543 L
s
.99625 .19815 m
1 .19815 L
s
.99625 .21088 m
1 .21088 L
s
.99625 .23633 m
1 .23633 L
s
.99625 .24906 m
1 .24906 L
s
.99625 .26179 m
1 .26179 L
s
.99625 .27451 m
1 .27451 L
s
.99625 .29997 m
1 .29997 L
s
.99625 .31269 m
1 .31269 L
s
.99625 .32542 m
1 .32542 L
s
.99625 .33815 m
1 .33815 L
s
.99625 .3636 m
1 .3636 L
s
.99625 .37633 m
1 .37633 L
s
.99625 .38905 m
1 .38905 L
s
.99625 .40178 m
1 .40178 L
s
.99625 .01998 m
1 .01998 L
s
.99625 .00725 m
1 .00725 L
s
.99625 .42723 m
1 .42723 L
s
.99625 .43996 m
1 .43996 L
s
.25 Mabswid
1 0 m
1 .44721 L
s
0 .22361 m
1 .22361 L
s
.5 0 m
.5 .44721 L
s
0 0 m
1 0 L
1 .44721 L
0 .44721 L
closepath
clip
newpath
1 0 .286 r
.015 w
.05456 .15997 Mdot
1 0 .571 r
.05456 .22361 Mdot
1 0 .286 r
.05456 .28724 Mdot
1 0 0 r
.1182 .09634 Mdot
.571 0 1 r
.1182 .15997 Mdot
.286 0 1 r
.1182 .22361 Mdot
.571 0 1 r
.1182 .28724 Mdot
1 0 0 r
.1182 .35087 Mdot
.857 0 1 r
.18183 .09634 Mdot
0 0 1 r
.18183 .15997 Mdot
0 .571 1 r
.18183 .22361 Mdot
0 0 1 r
.18183 .28724 Mdot
.857 0 1 r
.18183 .35087 Mdot
.286 0 1 r
.24547 .09634 Mdot
0 1 .857 r
.24547 .15997 Mdot
0 1 .286 r
.24547 .22361 Mdot
0 1 .857 r
.24547 .28724 Mdot
.286 0 1 r
.24547 .35087 Mdot
1 0 .286 r
.3091 .03271 Mdot
0 .286 1 r
.3091 .09634 Mdot
0 1 0 r
.3091 .15997 Mdot
.286 1 0 r
.3091 .22361 Mdot
0 1 0 r
.3091 .28724 Mdot
0 .286 1 r
.3091 .35087 Mdot
1 0 .286 r
.3091 .41451 Mdot
1 0 .571 r
.37273 .03271 Mdot
0 .857 1 r
.37273 .09634 Mdot
.286 1 0 r
.37273 .15997 Mdot
1 .857 0 r
.37273 .22361 Mdot
.286 1 0 r
.37273 .28724 Mdot
0 .857 1 r
.37273 .35087 Mdot
1 0 .571 r
.37273 .41451 Mdot
1 0 .857 r
.43637 .03271 Mdot
0 1 .857 r
.43637 .09634 Mdot
.571 1 0 r
.43637 .15997 Mdot
1 .571 0 r
.43637 .22361 Mdot
.571 1 0 r
.43637 .28724 Mdot
0 1 .857 r
.43637 .35087 Mdot
1 0 .857 r
.43637 .41451 Mdot
.857 0 1 r
.5 .03271 Mdot
0 1 .571 r
.5 .09634 Mdot
.857 1 0 r
.5 .15997 Mdot
1 .286 0 r
.5 .22361 Mdot
.857 1 0 r
.5 .28724 Mdot
0 1 .571 r
.5 .35087 Mdot
.857 0 1 r
.5 .41451 Mdot
1 0 .857 r
.56363 .03271 Mdot
0 1 .857 r
.56363 .09634 Mdot
.571 1 0 r
.56363 .15997 Mdot
1 .571 0 r
.56363 .22361 Mdot
.571 1 0 r
.56363 .28724 Mdot
0 1 .857 r
.56363 .35087 Mdot
1 0 .857 r
.56363 .41451 Mdot
1 0 .571 r
.62727 .03271 Mdot
0 .857 1 r
.62727 .09634 Mdot
.286 1 0 r
.62727 .15997 Mdot
1 .857 0 r
.62727 .22361 Mdot
.286 1 0 r
.62727 .28724 Mdot
0 .857 1 r
.62727 .35087 Mdot
1 0 .571 r
.62727 .41451 Mdot
1 0 .286 r
.6909 .03271 Mdot
0 .286 1 r
.6909 .09634 Mdot
0 1 0 r
.6909 .15997 Mdot
.286 1 0 r
.6909 .22361 Mdot
0 1 0 r
.6909 .28724 Mdot
0 .286 1 r
.6909 .35087 Mdot
1 0 .286 r
.6909 .41451 Mdot
.286 0 1 r
.75453 .09634 Mdot
0 1 .857 r
.75453 .15997 Mdot
0 1 .286 r
.75453 .22361 Mdot
0 1 .857 r
.75453 .28724 Mdot
.286 0 1 r
.75453 .35087 Mdot
.857 0 1 r
.81817 .09634 Mdot
0 0 1 r
.81817 .15997 Mdot
0 .571 1 r
.81817 .22361 Mdot
0 0 1 r
.81817 .28724 Mdot
.857 0 1 r
.81817 .35087 Mdot
1 0 0 r
.8818 .09634 Mdot
.571 0 1 r
.8818 .15997 Mdot
.286 0 1 r
.8818 .22361 Mdot
.571 0 1 r
.8818 .28724 Mdot
1 0 0 r
.8818 .35087 Mdot
1 0 .286 r
.94544 .15997 Mdot
1 0 .571 r
.94544 .22361 Mdot
1 0 .286 r
.94544 .28724 Mdot
0 g
.5 Mabswid
.02381 .22356 m
.02788 .19581 L
.04004 .16849 L
.06006 .14211 L
.08761 .11713 L
.12221 .09397 L
.16328 .07302 L
.21011 .05466 L
.2619 .03918 L
.31777 .02686 L
.37675 .0179 L
.43784 .01247 L
.5 .01065 L
.56216 .01247 L
.62325 .0179 L
.68223 .02686 L
.7381 .03918 L
.78989 .05466 L
.83672 .07302 L
.87779 .09397 L
.91239 .11713 L
.93994 .14211 L
.95996 .16849 L
.97212 .19581 L
.97619 .22356 L
s
.02381 .22365 m
.02788 .2514 L
.04004 .27872 L
.06006 .3051 L
.08761 .33009 L
.12221 .35325 L
.16328 .37419 L
.21011 .39256 L
.2619 .40803 L
.31777 .42036 L
.37675 .42931 L
.43784 .43474 L
.5 .43657 L
.56216 .43474 L
.62325 .42931 L
.68223 .42036 L
.7381 .40803 L
.78989 .39256 L
.83672 .37419 L
.87779 .35325 L
.91239 .33009 L
.93994 .3051 L
.95996 .27872 L
.97212 .2514 L
.97619 .22365 L
s
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
 ImageSize->{288, 128.75},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"NormZ",
 CellLabel->"From In[77]:=",
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztW/l3FEUQ7uzmTnaDeSg5NCQKMRzCQwURMUGiSXgQEWEQeXjECCZoBCFe
v/n37D85btfMVPX0fN3bk7CLieG97A711d09VT09vatr2xsPt9a2N9fXppef
rT3d2Fx/Pr305FmTVO1SqmtaKfXPtNLXcfMy/aB/M/oj/U96fUF/VTTPUX1V
1Vdv6KtufTXJqNCmmG+K0dlE2Xn6Iq44+5dpVlWTnOizaBNYHLEila9j8ePJ
91n91UPJ6Mkgk00dEYYqM+j/UYSCVoHpcWx6yuVlt8Tl8vd8Ps2GFu3TDNA8
hvWhVE0ClTKuudHMCyJfprBdx2g6RskeZOVIX+rbhXx2ZAJX2EbFhR5l2TTV
pBncG67rV9lrmhB9BtXyFs2VHkDrDeQLpb1ofQc+//d9ds+1ZGpKGW9xT5eh
7UafNBfPHfRYf57UpF9axGdB6/qzT5MQOsrow5C0PdBX/VK+QPXvZz4zpJr+
qsZZ07EEb7PgMYDOMBq5fTwEoAqgrerPXk06DdATjN50m6KQqOJ1u4wSaYX5
9JzUzidsajhhiVWjniqINaAa+jtJVUprED1WwtfIeLOUNi9FQmV2koq8wr6k
w1DncUHDsJgPjJyu5SxHZNnpTZOWeqy/lT860ceRRD3swWe7H+oF/UkNdgAk
SNLXvkEYZA8+cYfjvzUuM3oFoB8zOu82ILfvJWZfBOxXGL3EEp6KJEuPJYAu
MnqxhWcW9B4LXgPoEqNoVVYI+Byz3wDs1xg9FxLwGWZCxeEGKztbLuDTrPYW
QG8y+k5IwCfZi9uA/RajJ0ICfpuZ7gL0DqNz5QI+zoL3AHqX0dlyat/k4O4D
9B6rRS2mkMcZvvoGsN8HfGaj63Y1B1mGfwdQ6ZrTbh/rAEKmJhJlcfrchgpa
RotUUrUio8hJFRM+qXsGH6lq6G+uZHFD0EbGAbXUgLU68MpZjivcXq31VKvW
jVaJ1dT/7JktUUscShJvdrg04qaL9VQ2ijmmJEbKjDcfcZTSI3dWLX01tlZn
D5wdmCYBWqqZK4PQpjrOWa+Ys3GfTasq3zeeyZRIF57g0c04Bmg/Atp6oKxZ
C2Q5Jxs0dPWTy6jF5+kAiIbUPgqU9ZTvw4C2EWgeyRZKOmLaDDQ6GpKsUUB7
HGgUyXqS9Qqg/RxoHsl6TKHCgB5BkXkkWxgXxLQVaFRuAM+4oI75a6BRJOtJ
Vg3QngSaR7KFZCF/Qg0M28nyP3kMA9rTQPNItuT6ZQjQfgt0CckWVgCou3Vz
RgZNlHpIlHvGjcwOS51G+rQ0pwyVlYLRiLKuH8vqrCGNT9YbskIwtHBTdK8t
yKs68Fmet63w+zl8c78gYLCK2WJfG7I2Uvm1UdrerRwRmkSsMg8oCdysJVKA
mrIoR2LXyhF5mrX03MpBvYjpPJAixnyKje2VfTWlksyo4szIp45kqB6hrd1+
QNsGtOeBsoVSOgCYQg30sRZP3+kDtN8DjSJZT99ppykjzDzTH4FGeywtMAI0
BZABRHO/Qei4Ked0/jOQVg1JFvIi1AAqTp5ktdNUZ5KFvPgrkOZ5l+TfSm+T
0RKPnIiWaQab75HU9QQgBukJUbbRkG/E6WOz7AOkDaH5zT1BtjWMlgG1WB2N
7NaAV8VNDzMiVKt2mNOavkq395VKNlHibAuh6UZCasSMZmsPCjqjmSuShGZs
0mRaqMWmqOxRINSQrQEbdeBLjT2tgzgkyrpxLx3Mtc7OtZdStpwFLNRUhbUc
9KuD5u421fZFV+gKFdG6LS27WmMjmvvsystZzqMHpFADvXay/NtIbXqOC33u
7rR5IuUf9vVfZCRqD+6I9JhhJNFmYVaNmbDz7aL/weaaZyekbN607XRu7eFJ
JWdllJJRcq2apPnSFdqSC90eHmQtnnLfpu1v51sD8gcZ2GJ0pJxaxB76YqWV
KfIHvUkKfTU0wlo8Y9DB11ztfHnXmdePh5kJqX3E6GvlEoPY0etedH60lSny
Z4yvkNp1wOdJwrhLhUX7IVDWrEDOUz0T7Bky9T2j6Mzsjk/1OEqOeZRhHxzE
sJodOmadZhBVLOtAj5zqyLK1l87ySJeg8Z/k2Eqe4DFTkWmUhcV+mT1DHFty
HyXcyZ9nFpXYoJGjfw8Ais4goh8rebZl0EHFrwFNjja+xVeeEnmMmZCyHR+/
nGXBrwCKTu63MkDK6KAq8dwB7F8yOhcS+ilmdx61JRL6aYAn9DMs+DlAww8G
k/vvMvt1wF7yyPL7zL4CUDpjT3O91WFqC/qA1aJj+lcZ/bCcWjmefhWgC4xe
DsnjPLMvAHY5Vj9v59G/nXGFc/YRQC8yiiIo+fuFTwuOGJWwI79f6GUP0BH/
VuEQaZkzwnW4cPihM78tqbAny+xd0M9irjN7lp4UGGrzECiVLldWdz+ZqDLR
L5tOAXSO0S/cpqwbgzyjut7PvccSnGY0YglPtaI+OqxJRwBKEkOa9K3bR6SW
nqgOiW0gSCh6bPKopbchI5r0dwvBPfKLwzgZWqGqrn8BilzN5g==\
\>"],
 ImageRangeCache->{{{0, 287}, {127.75, 0}} -> {-9.18956, -4.25798, 0.0608371, \
0.0608371}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "4", ",", "5", ",", "6", ",", "9", ",", "14", ",", "16",
    ",", "20", ",", "21", ",", "24", ",", "25", ",", "29", ",", "30", ",", 
   "36", ",", "41", ",", "45", ",", "46", ",", "49", ",", "54", ",", "56"}], 
  "}"}]], "Output",
 CellTags->"NormZ",
 CellLabel->"Out[77]="]
}, Open  ]],

Cell[TextData[{
 "If you look carefully, you should be able to see four points on the ellipse \
shown in the figure. They have coordinates ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[PlusMinus]", " ", "6"}], ",", " ", 
     RowBox[{"\[PlusMinus]", " ", "2"}]}], ")"}], TraditionalForm]]],
 ", which correspond to the following values in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DoubleStruckCapitalZ]", "[", 
    SqrtBox[
     RowBox[{"-", "5"}]], "]"}], TraditionalForm]]],
 "."
}], "MathCaption",
 CellTags->"NormZ"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ValuesHavingGivenNorm", "[", 
  RowBox[{
   RowBox[{"-", "5"}], ",", " ", "56"}], "]"}]], "Input",
 CellTags->"NormZ",
 CellLabel->"In[78]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "6"}], "-", 
    RowBox[{"2", " ", "I", " ", 
     SqrtBox["5"]}]}], ",", 
   RowBox[{
    RowBox[{"-", "6"}], "+", 
    RowBox[{"2", " ", "I", " ", 
     SqrtBox["5"]}]}], ",", 
   RowBox[{"6", "-", 
    RowBox[{"2", " ", "I", " ", 
     SqrtBox["5"]}]}], ",", 
   RowBox[{"6", "+", 
    RowBox[{"2", " ", "I", " ", 
     SqrtBox["5"]}]}]}], "}"}]], "Output",
 CellTags->"NormZ",
 CellLabel->"Out[78]="]
}, Open  ]],

Cell[TextData[{
 "Here are some of the units (having norm 1) in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DoubleStruckCapitalZ]", "[", 
    SqrtBox["2"], "]"}], TraditionalForm]]],
 "."
}], "MathCaption",
 CellTags->"NormZ"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ValuesHavingGivenNorm", "[", 
  RowBox[{"2", ",", "1", ",", " ", "35"}], "]"}]], "Input",
 CellTags->"NormZ",
 CellLabel->"In[79]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "41"}], "-", 
    RowBox[{"29", " ", 
     SqrtBox["2"]}]}], ",", 
   RowBox[{
    RowBox[{"-", "41"}], "+", 
    RowBox[{"29", " ", 
     SqrtBox["2"]}]}], ",", 
   RowBox[{
    RowBox[{"-", "17"}], "-", 
    RowBox[{"12", " ", 
     SqrtBox["2"]}]}], ",", 
   RowBox[{
    RowBox[{"-", "17"}], "+", 
    RowBox[{"12", " ", 
     SqrtBox["2"]}]}], ",", 
   RowBox[{
    RowBox[{"-", "7"}], "-", 
    RowBox[{"5", " ", 
     SqrtBox["2"]}]}], ",", 
   RowBox[{
    RowBox[{"-", "7"}], "+", 
    RowBox[{"5", " ", 
     SqrtBox["2"]}]}], ",", 
   RowBox[{
    RowBox[{"-", "3"}], "-", 
    RowBox[{"2", " ", 
     SqrtBox["2"]}]}], ",", 
   RowBox[{
    RowBox[{"-", "3"}], "+", 
    RowBox[{"2", " ", 
     SqrtBox["2"]}]}], ",", 
   RowBox[{
    RowBox[{"-", "1"}], "-", 
    SqrtBox["2"]}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SqrtBox["2"]}], ",", 
   RowBox[{"1", "-", 
    SqrtBox["2"]}], ",", "1", ",", 
   RowBox[{"1", "+", 
    SqrtBox["2"]}], ",", 
   RowBox[{"3", "-", 
    RowBox[{"2", " ", 
     SqrtBox["2"]}]}], ",", 
   RowBox[{"3", "+", 
    RowBox[{"2", " ", 
     SqrtBox["2"]}]}], ",", 
   RowBox[{"7", "-", 
    RowBox[{"5", " ", 
     SqrtBox["2"]}]}], ",", 
   RowBox[{"7", "+", 
    RowBox[{"5", " ", 
     SqrtBox["2"]}]}], ",", 
   RowBox[{"17", "-", 
    RowBox[{"12", " ", 
     SqrtBox["2"]}]}], ",", 
   RowBox[{"17", "+", 
    RowBox[{"12", " ", 
     SqrtBox["2"]}]}], ",", 
   RowBox[{"41", "-", 
    RowBox[{"29", " ", 
     SqrtBox["2"]}]}], ",", 
   RowBox[{"41", "+", 
    RowBox[{"29", " ", 
     SqrtBox["2"]}]}]}], "}"}]], "Output",
 CellTags->"NormZ",
 CellLabel->"Out[79]="]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5.4 Miscellaneous functions", "Subsection",
 CellTags->"WorkLists"],

Cell[CellGroupData[{

Cell["5.4.1 Working with lists", "Subsubsection",
 CellMargins->{{Inherited, Inherited}, {Inherited, 8}},
 CellTags->{"WorkLists", "i:30"}],

Cell[TextData[{
 "Although ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " has many functions for working with lists, it is still wanting in a few \
areas. Sometimes we wish to take the union or complement of two sets but ",
 StyleBox["not",
  FontSlant->"Italic"],
 " have the elements returned already sorted. The Cartesian product of two \
sets is a natural construct in algebra, as is the notion of applying some \
operation to a Cartesian product. Finally, we frequently wish to consider \
relations between two sets, viewing two lists as mathematical sets."
}], "Text",
 CellTags->"WorkLists"],

Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{
      StyleBox["UnionNoSort", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox[
       FormBox[
        SubscriptBox["list", "1"],
        TraditionalForm], "TI"], 
      StyleBox[",", "MR"], " ", 
      StyleBox[
       FormBox[
        SubscriptBox["list", "2"],
        TraditionalForm], "TI"], 
      StyleBox[",", "MR"], " ", "\[Ellipsis]", 
      StyleBox["]", "MR"]}], 
     RowBox[{
      StyleBox[
       RowBox[{"equivalent", " ", "to", " "}],
       SingleLetterItalics->False], 
      RowBox[{
       StyleBox["Union", "MR"], 
       StyleBox["[", "Text"], 
       RowBox[{
        StyleBox[
         FormBox[
          RowBox[{
           StyleBox[
            FormBox[
             SubscriptBox["list", "1"],
             TraditionalForm], "TI"], 
           StyleBox[",", "TI"], " ", 
           StyleBox[
            FormBox[
             SubscriptBox["list", "2"],
             TraditionalForm], "TI"], 
           StyleBox[",", "TI"], " ", "\[Ellipsis]", "]"}],
          StandardForm], "Text"], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["except",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["the",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["\n", "Text",
         SingleLetterItalics->False], 
        StyleBox["elements",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["are",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["not",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["sorted",
         SingleLetterItalics->False]}]}]}]},
    {
     RowBox[{
      StyleBox["ComplementNoSort", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox[
       FormBox[
        SubscriptBox["list", "1"],
        TraditionalForm], "TI"], 
      StyleBox[",", "MR"], " ", 
      StyleBox[
       FormBox[
        SubscriptBox["list", "2"],
        TraditionalForm], "TI"], 
      StyleBox[",", "MR"], " ", "\[Ellipsis]", 
      StyleBox["]", "MR"]}], 
     RowBox[{
      StyleBox[
       RowBox[{"equivalent", " ", "to", " "}],
       SingleLetterItalics->False], 
      RowBox[{
       StyleBox["Complement", "MR"], 
       StyleBox["[", "Text"], 
       RowBox[{
        StyleBox[
         FormBox[
          RowBox[{
           StyleBox[
            FormBox[
             SubscriptBox["list", "1"],
             TraditionalForm], "TI"], 
           StyleBox[",", "TI"], " ", 
           StyleBox[
            FormBox[
             SubscriptBox["list", "2"],
             TraditionalForm], "TI"], 
           StyleBox[",", "TI"], " ", "\[Ellipsis]", "]"}],
          StandardForm], "Text"], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["except",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["the",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["\n", "Text",
         SingleLetterItalics->False], 
        StyleBox["elements",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["are",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["not",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["sorted",
         SingleLetterItalics->False]}]}]}]},
    {
     RowBox[{
      StyleBox["CartesianProduct", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox[
       FormBox[
        SubscriptBox["list", "1"],
        TraditionalForm], "TI"], 
      StyleBox[",", "MR"], " ", 
      StyleBox[
       FormBox[
        SubscriptBox["list", "2"],
        TraditionalForm], "TI"], 
      StyleBox[",", "MR"], " ", "\[Ellipsis]", 
      StyleBox["]", "MR"]}], 
     RowBox[{
      StyleBox["give",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["the",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["Cartesian",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["product",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["of",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["the",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["lists",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox[
       FormBox[
        SubscriptBox["list", "1"],
        TraditionalForm], "TI"], 
      StyleBox[",", "TI"], " ", 
      StyleBox[
       FormBox[
        SubscriptBox["list", "2"],
        TraditionalForm], "TI"], ",", " ", 
      StyleBox["\[Ellipsis]", "MR"]}]},
    {
     RowBox[{
      StyleBox["CartesianProduct", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox[
       FormBox[
        SubscriptBox["list", "1"],
        TraditionalForm], "TI"], 
      StyleBox[",", "MR"], " ", 
      StyleBox[
       FormBox[
        SubscriptBox["list", "2"],
        TraditionalForm], "TI"], 
      StyleBox[",", "MR"], " ", "\[Ellipsis]", 
      StyleBox[",", "MR"], " ", 
      StyleBox[
       FormBox[
        RowBox[{
         StyleBox["Partition", "MR"], 
         StyleBox[" ", "MR"], 
         StyleBox["\[Rule]", "MR"], " ", 
         StyleBox["True", "MR"]}],
        TraditionalForm], "TI"], 
      StyleBox["]", "MR"]}], 
     StyleBox[
      RowBox[{
       RowBox[{
       "give", " ", "the", " ", "Cartesian", " ", "product", " ", "of", " ", 
        "the", " ", "lists"}], ",", " ", 
       RowBox[{
       "partitioned", " ", "according", " ", "to", " ", "the", " ", "length", 
        " ", "of", " ", "the", " ", "last", " ", "list"}]}],
      SingleLetterItalics->False]},
    {
     RowBox[{
      StyleBox["CloseSets", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox[
       FormBox[
        SubscriptBox["list", "1"],
        TraditionalForm], "TI"], 
      StyleBox[",", "MR"], " ", 
      StyleBox[
       FormBox[
        SubscriptBox["list", "2"],
        TraditionalForm], "TI"], 
      StyleBox[",", "MR"], " ", 
      StyleBox["op", "TI"], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      StyleBox[
       RowBox[{
       "give", " ", "the", " ", "list", " ", "of", " ", "all", " ", 
        "distinct", " ", "elements", " ", "obtained", " ", "by", " ", 
        "applying"}],
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["\n", "Text",
       SingleLetterItalics->False], 
      RowBox[{
       StyleBox["the",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["operation",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["op",
        FontSlant->"Italic"], 
       StyleBox[
        RowBox[{" ", "on", " "}],
        SingleLetterItalics->False], 
       RowBox[{
        StyleBox["CartesianProduct", "MR"], 
        StyleBox["[", "Text"], 
        RowBox[{
         StyleBox[
          FormBox[
           RowBox[{
            StyleBox[
             FormBox[
              SubscriptBox["list", "1"],
              TraditionalForm], "TI"], 
            StyleBox[",", "TI"], " ", 
            StyleBox[
             FormBox[
              SubscriptBox["list", "2"],
              TraditionalForm], "TI"]}],
           StandardForm], "Text"], 
         StyleBox[
          RowBox[{"]", " "}],
          SingleLetterItalics->False]}]}]}]}]},
    {
     RowBox[{
      StyleBox["Randomize", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox["list", "TI"], 
      StyleBox["]", "MR"]}], 
     StyleBox[
      RowBox[{
       StyleBox[
        RowBox[{
        "randomly", " ", "reorder", " ", "the", " ", "elements", " ", "in", 
         " "}],
        SingleLetterItalics->False], 
       StyleBox["list",
        FontSlant->"Italic"]}], "Text"]},
    {
     RowBox[{
      StyleBox["SubsetQ", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox[
       RowBox[{"child", ",", " ", "parent"}], "TI"], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      StyleBox[
       RowBox[{"give", " "}],
       SingleLetterItalics->False], 
      StyleBox["True", "MR"], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["if",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["child",
       SingleLetterItalics->False,
       FontSlant->"Italic"], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["is",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["a",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["subset",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["of",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["parent",
       SingleLetterItalics->False,
       FontSlant->"Italic"], 
      StyleBox[",",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["and",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["False", "MR"], 
      StyleBox[
       RowBox[{" ", "otherwise"}],
       SingleLetterItalics->False]}]},
    {
     RowBox[{
      StyleBox["ProperSubsetQ", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox[
       RowBox[{"child", ",", " ", "parent"}], "TI"], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      StyleBox[
       RowBox[{"give", " "}],
       SingleLetterItalics->False], 
      StyleBox["True", "MR"], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["if",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["child",
       SingleLetterItalics->False,
       FontSlant->"Italic"], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["is",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["a",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["proper",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["subset",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["of",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["parent",
       SingleLetterItalics->False,
       FontSlant->"Italic"], 
      StyleBox[",",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["and",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["False", "MR"], 
      StyleBox[
       RowBox[{" ", "otherwise"}],
       SingleLetterItalics->False]}]},
    {
     RowBox[{
      StyleBox["SameSetQ", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox["A", "TI"], 
      StyleBox[",", "MR"], " ", 
      StyleBox["B", "TI"], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      StyleBox[
       RowBox[{"give", " "}],
       SingleLetterItalics->False], 
      StyleBox["True", "MR"], 
      StyleBox[
       RowBox[{" ", "if", " "}],
       SingleLetterItalics->False], 
      StyleBox[
       FormBox["A",
        TraditionalForm], "Text"], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["is",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["mathematically",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["the",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["same",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["set",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["as",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox[
       FormBox[
        RowBox[{"B", ","}],
        TraditionalForm], "Text"], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["and",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["False", "MR"], 
      StyleBox[
       RowBox[{" ", "otherwise"}],
       SingleLetterItalics->False]}]}
   }], NotebookDefault]], "DefinitionBox",
 CellTags->{"WorkLists", "i:31"}],

Cell["Functions to work with lists.", "Caption",
 CellTags->"WorkLists"],

Cell[TextData[{
 StyleBox["UnionNoSort", "MR"],
 " does the work of ",
 StyleBox["Union", "MR"],
 " by combining all the elements under one roof and removing duplicates, but \
it does not apply ",
 StyleBox["Sort", "MR"],
 " to the final list."
}], "MathCaption",
 CellTags->"WorkLists"],

Cell[CellGroupData[{

Cell["\<\
{UnionNoSort[{2,4,3,5,3}, {1,6,4,3,5}], UnionNoSort[{2,4,3,5,3,1,6,4,3,5}], \
UnionNoSort[anyHead[2,4,3,5,3], anyHead[1,6,4,3,5]]}\
\>", "Input",
 CellTags->"WorkLists",
 CellLabel->"In[80]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "3", ",", "5", ",", "1", ",", "6"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "3", ",", "5", ",", "1", ",", "6"}], "}"}], 
   ",", 
   RowBox[{"anyHead", "[", 
    RowBox[{"2", ",", "4", ",", "3", ",", "5", ",", "1", ",", "6"}], "]"}]}], 
  "}"}]], "Output",
 CellTags->"WorkLists",
 CellLabel->"Out[80]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["ComplementNoSort", "MR"],
 " works in a similar fashion."
}], "MathCaption",
 CellTags->"WorkLists"],

Cell[CellGroupData[{

Cell["\<\
{ComplementNoSort[{2,4,3,5,3,7}, {1,6,4,3,5}], \
ComplementNoSort[{2,4,3,5,3,7}, {1,6,4,3,5}, {3,7}], \
ComplementNoSort[anyHead[2,4,3,5,3], anyHead[1,6,4,3,5]]}\
\>", "Input",
 CellTags->"WorkLists",
 CellLabel->"In[81]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "7"}], "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"anyHead", "[", "2", "]"}]}], "}"}]], "Output",
 CellTags->"WorkLists",
 CellLabel->"Out[81]="]
}, Open  ]],

Cell[TextData[{
 "The ",
 StyleBox["CartesianProduct", "MR"],
 " function returns a list of ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 "-tuples obtained by taking the Cartesian product of the lists given as \
arguments."
}], "MathCaption",
 CellTags->"WorkLists"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CartesianProduct", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\"", ",", "\"\<d\>\""}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellTags->"WorkLists",
 CellLabel->"In[82]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"a\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"a\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"a\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"b\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"b\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"b\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"c\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"c\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"c\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"d\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"d\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"d\"\>", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellTags->"WorkLists",
 CellLabel->"Out[82]="]
}, Open  ]],

Cell["\<\
To have a Cartesian product partitioned according to the length of the last \
list, add the corresponding option.\
\>", "MathCaption",
 CellTags->"WorkLists"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"CartesianProduct", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\"", ",", "\"\<d\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", " ", 
     RowBox[{"Partition", " ", "\[Rule]", " ", "True"}]}], "]"}], ",", " ", 
   RowBox[{"TableDepth", " ", "\[Rule]", " ", "1"}]}], "]"}]], "Input",
 CellTags->"WorkLists",
 CellLabel->"In[83]:="],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"a\"\>", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"a\"\>", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"a\"\>", ",", "3"}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"b\"\>", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"b\"\>", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"b\"\>", ",", "3"}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"c\"\>", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"c\"\>", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"c\"\>", ",", "3"}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"d\"\>", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"d\"\>", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"d\"\>", ",", "3"}], "}"}]}], "}"}]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  TableForm[{{{"a", 1}, {"a", 2}, {"a", 3}}, {{"b", 1}, {"b", 2}, {
     "b", 3}}, {{"c", 1}, {"c", 2}, {"c", 3}}, {{"d", 1}, {"d", 2}, {
     "d", 3}}}, TableDepth -> 1]]], "Output",
 CellTags->"WorkLists",
 CellLabel->"Out[83]//TableForm="]
}, Open  ]],

Cell[TextData[{
 "We can use more than two lists for arguments in the ",
 StyleBox["CartesianProduct", "MR"],
 " function."
}], "MathCaption",
 CellTags->"WorkLists"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CartesianProduct", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellTags->"WorkLists",
 CellLabel->"In[84]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "3", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellTags->"WorkLists",
 CellLabel->"Out[84]="]
}, Open  ]],

Cell[TextData[{
 "If we want to apply an operation to a Cartesian product, the ",
 StyleBox["CloseSets", "MR"],
 " function may be useful."
}], "MathCaption",
 CellTags->"WorkLists"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Column", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"CartesianProduct", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "3", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "]"}], ",", 
    RowBox[{"CloseSets", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "3", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", "Plus"}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellTags->"WorkLists",
 CellLabel->"In[85]:="],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "1"}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  ColumnForm[{{{2, 0}, {2, 1}, {3, 0}, {3, 1}, {5, 0}, {5, 1}}, {2, 3, 4, 5, 
    6}}],
  Editable->False]], "Output",
 CellTags->"WorkLists",
 CellLabel->"Out[85]="]
}, Open  ]],

Cell["\<\
This function can also be used to help form a Boggle dictionary.\
\>", "MathCaption",
 CellTags->{"WorkLists", "i:44"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"words", " ", "=", " ", 
  RowBox[{"CloseSets", "[", 
   RowBox[{
    RowBox[{"CloseSets", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<a\>\"", ",", " ", "\"\<c\>\""}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<a\>\"", ",", "\"\<c\>\"", ",", "\"\<p\>\""}], "}"}], ",", 
      "StringJoin"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<t\>\"", ",", "\"\<e\>\""}], "}"}], ",", " ", "StringJoin"}],
    "]"}]}]], "Input",
 CellTags->"WorkLists",
 CellLabel->"In[86]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"aat\"\>", ",", "\<\"aae\"\>", ",", "\<\"act\"\>", 
   ",", "\<\"ace\"\>", ",", "\<\"apt\"\>", ",", "\<\"ape\"\>", 
   ",", "\<\"cat\"\>", ",", "\<\"cae\"\>", ",", "\<\"cct\"\>", 
   ",", "\<\"cce\"\>", ",", "\<\"cpt\"\>", ",", "\<\"cpe\"\>"}], 
  "}"}]], "Output",
 CellTags->"WorkLists",
 CellLabel->"Out[86]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["Randomize", "MR"],
 " does exactly what its name implies."
}], "MathCaption",
 CellTags->"WorkLists"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Randomize", "[", "words", "]"}]], "Input",
 CellTags->"WorkLists",
 CellLabel->"In[87]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ace\"\>", ",", "\<\"apt\"\>", ",", "\<\"cce\"\>", 
   ",", "\<\"aat\"\>", ",", "\<\"aae\"\>", ",", "\<\"cat\"\>", 
   ",", "\<\"cpt\"\>", ",", "\<\"cae\"\>", ",", "\<\"cpe\"\>", 
   ",", "\<\"act\"\>", ",", "\<\"ape\"\>", ",", "\<\"cct\"\>"}], 
  "}"}]], "Output",
 CellTags->"WorkLists",
 CellLabel->"Out[87]="]
}, Open  ]],

Cell[TextData[{
 "Note the differences between ",
 StyleBox["SubsetQ,", "MR"],
 " ",
 StyleBox["ProperSubsetQ", "MR"],
 ", and ",
 StyleBox["SameSetQ", "MR"],
 "."
}], "MathCaption",
 CellTags->"WorkLists"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"SubsetQ", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", " ", "4", ",", " ", "5"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"4", ",", " ", "3", ",", " ", "5"}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"ProperSubsetQ", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", " ", "4", ",", " ", "5"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"4", ",", " ", "3", ",", " ", "5"}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"SameSetQ", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", " ", "4", ",", " ", "5"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"4", ",", " ", "3", ",", " ", "5"}], "}"}]}], "]"}]}], 
  "}"}]], "Input",
 CellTags->"WorkLists",
 CellLabel->"In[88]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "False", ",", "True"}], "}"}]], "Output",
 CellTags->"WorkLists",
 CellLabel->"Out[88]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5.4.2 Working with graphics", "Subsubsection",
 CellTags->{"WorkGraphics", "i:32"}],

Cell["\<\
To illustrate some elementary group concepts, sometimes visual aids are \
useful. The following have been constructed with this in mind.\
\>", "Text",
 CellTags->"WorkGraphics"],

Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{
      StyleBox["ShowCircle", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox["n", "TI"], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       StyleBox["give",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["a",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["graph",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["of",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["the",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["unit",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["circle",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["with",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        FormBox["n",
         TraditionalForm], "Text"], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["points",
        SingleLetterItalics->False]}], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["\n",
       SingleLetterItalics->False], 
      RowBox[{
       StyleBox["uniformly",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["placed",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["and",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["labeled",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["0",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["through",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        FormBox[
         RowBox[{
          StyleBox["n",
           SingleLetterItalics->False,
           FontSlant->"Italic"], " ", 
          StyleBox["-",
           SingleLetterItalics->False], " ", 
          StyleBox["1",
           SingleLetterItalics->False]}],
         TraditionalForm], "Text"]}]}]},
    {
     RowBox[{
      StyleBox["ShowCircle", "MR"], 
      StyleBox["[", "MR"], 
      RowBox[{
       StyleBox["n", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["labels", "TI"]}], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       StyleBox["give",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["a",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["graph",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["of",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["the",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["unit",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["circle",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["with",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        FormBox["n",
         TraditionalForm], "Text"], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["points",
        SingleLetterItalics->False]}], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      RowBox[{
       StyleBox["uniformly",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["placed",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["and",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["labeled",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["according",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["to",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["labels",
        FontSlant->"Italic"]}]}]},
    {
     RowBox[{
      StyleBox["DrawNgon", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox["n", "TI"], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         StyleBox["give",
          SingleLetterItalics->False], 
         StyleBox[" ",
          SingleLetterItalics->False], 
         StyleBox["a",
          SingleLetterItalics->False], 
         StyleBox[" ",
          SingleLetterItalics->False], 
         StyleBox["graph",
          SingleLetterItalics->False], 
         StyleBox[" ",
          SingleLetterItalics->False], 
         StyleBox["of",
          SingleLetterItalics->False], 
         StyleBox[" ",
          SingleLetterItalics->False], 
         StyleBox["a",
          SingleLetterItalics->False], 
         StyleBox[" ",
          SingleLetterItalics->False], 
         StyleBox["regular",
          SingleLetterItalics->False], 
         StyleBox[" ",
          SingleLetterItalics->False], 
         StyleBox[
          FormBox["n",
           TraditionalForm], "Text"], 
         StyleBox["\[Hyphen]gon",
          SingleLetterItalics->False], 
         StyleBox[" ",
          SingleLetterItalics->False], 
         StyleBox["with",
          SingleLetterItalics->False], 
         StyleBox[" ",
          SingleLetterItalics->False], 
         StyleBox["the",
          SingleLetterItalics->False]}], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["vertices",
         SingleLetterItalics->False]}], 
       StyleBox[" ",
        SingleLetterItalics->False], "\n", 
       RowBox[{
        StyleBox["labeled",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["1",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["through",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox[
         FormBox["n",
          TraditionalForm], "Text"], 
        StyleBox[
         RowBox[{" ", "("}],
         SingleLetterItalics->False], 
        StyleBox[
         FormBox[
          RowBox[{
           StyleBox["n",
            SingleLetterItalics->False,
            FontSlant->"Italic"], " ", 
           StyleBox[">",
            SingleLetterItalics->False], " ", 
           StyleBox["2",
            SingleLetterItalics->False]}],
          TraditionalForm], "Text"]}]}], 
      StyleBox[")",
       SingleLetterItalics->False]}]},
    {
     RowBox[{
      StyleBox["ShowFigure", "MR"], 
      StyleBox["[", "MR"], 
      RowBox[{
       StyleBox["n", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["perm", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["sym", "TI"]}], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       StyleBox["give",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["a",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["graph",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["of",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["an",
        SingleLetterItalics->False], " ", 
       StyleBox[
        FormBox["n",
         TraditionalForm], "Text"], 
       StyleBox["\[NoBreak]", "Text"], 
       StyleBox["\[Hyphen]gon",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["possessing",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["symmetry",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["of",
        SingleLetterItalics->False]}], 
      StyleBox[" ",
       SingleLetterItalics->False], "\n", 
      RowBox[{
       RowBox[{
        StyleBox["type",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["sym",
         FontSlant->"Italic"]}], 
       StyleBox[",",
        FontSlant->"Italic"], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       RowBox[{
        StyleBox["with",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["permutation",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["perm",
         FontSlant->"Italic"], 
        StyleBox[
         RowBox[{" ", 
          RowBox[{"applied", " ", "to", " ", "the", " ", "vertices"}]}],
         SingleLetterItalics->False]}]}]}]},
    {
     StyleBox[
      FormBox[
       StyleBox[
        RowBox[{"ShowFigure", "[", "]"}], "MR"],
       TraditionalForm], "TI"], 
     StyleBox[
      RowBox[{
      "redraw", " ", "the", " ", "most", " ", "recently", " ", "drawn", " ", 
       "figure", " "}],
      SingleLetterItalics->False]},
    {
     RowBox[{
      StyleBox["ShowPermutation", "MR"], 
      StyleBox["[", "MR"], 
      RowBox[{
       StyleBox["n", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["perm", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["sym", "TI"]}], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       StyleBox[
        RowBox[{"give", " ", "the", " ", "graphic", " ", "of", " "}],
        SingleLetterItalics->False], 
       StyleBox[
        FormBox[
         RowBox[{
          StyleBox["ShowFigure", "MR"], 
          StyleBox["[", "MR"], 
          RowBox[{
           StyleBox["n", "TI"], 
           StyleBox[",", "TI"], " ", 
           StyleBox["perm", "TI"], 
           StyleBox[",", "TI"], " ", 
           StyleBox["sym", "TI"]}], 
          StyleBox["]", "MR"]}],
         StandardForm], "Text"], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["with",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["also",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["the",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["same",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        FormBox["n",
         TraditionalForm], "Text"], 
       StyleBox["\[Hyphen]gon",
        SingleLetterItalics->False]}], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox[
       RowBox[{
       "in", " ", "\<\"standard position\"\>", " ", "so", " ", "that", " ", 
        "the", " ", "images", " ", "before", " ", "and", " ", "after", " ", 
        "the", " ", "permutation", " ", "are", " ", "shown"}],
       SingleLetterItalics->False]}]},
    {
     RowBox[{
      StyleBox["ShowPermutation", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox["perm", "TI"], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       StyleBox[
        RowBox[{
        "once", " ", "a", " ", "figure", " ", "has", " ", "been", " ", 
         "drawn", " ", "via", " "}],
        SingleLetterItalics->False], 
       StyleBox["ShowFigure", "MR"], 
       StyleBox[
        RowBox[{" ", "or", " "}],
        SingleLetterItalics->False], 
       StyleBox["ShowPermutation", "MR"]}], 
      StyleBox[",",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      RowBox[{
       StyleBox["show",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["the",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["before",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["and",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["after",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["effects",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["of",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["the",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["permutation",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["perm",
        SingleLetterItalics->False,
        FontSlant->"Italic"], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["on",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["the",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        FormBox["n",
         TraditionalForm], "Text"], 
       StyleBox["\[Hyphen]gon",
        SingleLetterItalics->False]}]}]}
   }], NotebookDefault]], "DefinitionBox",
 CellTags->{"WorkGraphics", "i:33"}],

Cell["Functions for drawing some graphics.", "Caption",
 CellTags->"WorkGraphics"],

Cell[TextData[{
 StyleBox["DrawNgon", "MR"],
 "[5] would have almost the same result as when using ",
 StyleBox["ShowFigure",
  FontFamily->"Courier"],
 ", as below."
}], "MathCaption",
 CellTags->"WorkGraphics"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowFigure", "[", 
  RowBox[{"5", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   "\"\<D\>\""}], "]"}]], "Input",
 CellChangeTimes->{3.408836457566112*^9},
 CellTags->"WorkGraphics",
 CellLabel->"In[89]:="],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .95106 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.400557 0.427716 0.400557 [
[ 0 0 0 0 ]
[ 1 .95106 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 .95106 L
0 .95106 L
closepath
clip
newpath
.74 .99 .79 r
.88095 .55149 m
.73544 .10366 L
.26456 .10366 L
.11905 .55149 L
.5 .82827 L
F
0 0 0 r
.5 Mabswid
[ ] 0 setdash
.88095 .55149 m
.73544 .10366 L
.26456 .10366 L
.11905 .55149 L
.5 .82827 L
.88095 .55149 L
s
0 g
[(1)] .97619 .58244 0 0 Mshowa
[(2)] .7943 .02264 0 0 Mshowa
[(3)] .2057 .02264 0 0 Mshowa
[(4)] .02381 .58244 0 0 Mshowa
[(5)] .5 .92841 0 0 Mshowa
1 0 0 r
.045 w
.88095 .55149 Mdot
0 1 0 r
.73544 .10366 Mdot
0 0 1 r
.26456 .10366 Mdot
1 1 0 r
.11905 .55149 Mdot
.628 .126 .941 r
.5 .82827 Mdot
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
 ImageSize->{189, 179.688},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"WorkGraphics",
 CellLabel->"From In[89]:=",
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzN2etOE0EUB/ABam1i1ETEQrkVaClQrhIRjRCJclEBCSAoRaSihiIIIiHG
GGKM8foavoGfeQRfx6/rnjnTw1T+BWl0AgmdyZzf/s/sBuh2GUtvLT9dS29l
ltLR4c30xnJm6VV0aH3TXyopUkrt+t8/oormnj81L7ue/+UXeYjRUEKVVZoF
aNbIpYQedM0zX2oFrB3An4O1OHM9FFNlHaBY/syMfg3Ya9am985nTRokcs74
yENn9sJ402bmqS4uddAQpNKkmXnMlWqnIUSlCTPzmOeW/O3lK+16P/+yZG/D
L9nbsDfvl+zNd1oX1y/Rt7qvX3MvuN3kDz4HeLsL3g74POBtLngb4AuAt7rg
rYAvAp50wZOAPwa8xQVvAfwJ4M0ueDPgzwBvcsGbAF8GPHEMeQLwFcDBu9S/
542ArwIed8HjgL8APOaCxwDfALzBBW8AfBPwehe8HvAtwOtc8DrAtwGPuuBR
wF8DXuuC1wL+BvCaY8hrAH8LeLULXg34DuBVLngV4O8Ar3TBKwF/D3jEBY8A
/gHwChe8AvCPgJe74OWAfwY87IKHAf8K+AXm52kI0PQboQCtmVIpDUGafqFS
kNbKuHSOhhBNP1EpJEn/obS3Df8MeIkfXOgfD/153t6aNvpUz8ipBcA14V+7
3KcG7M2Rmp/gUDsg5wLq9juykTBwfKwq5nSFf7rQ3+rDwqwSXQ7064zevsqP
Flslp7ktp1mZP6JEOHoXQHc9ETkiyBExWXgJuLljy3vrqw8s7Ga9SRpnADIf
L/J+rNMHFvZBtFUaL0pSYU8eOiQpBZB5VtIFMmeksXkYdBGgaZBpeLc0ngKI
w9QlkDkujbmqeiRpDCQZ1AuSbgHew/wK4EPSmKvqqjQeBEkGXQNJ1yWJq6oP
oH6QaXi/NO4DiMP8Jvsze6UxV9WAJF0GSQbdAEndgA8wvwl4pzTmqn/Fso07
QJJBwyApCfgg8xHJbJZ2I1y6DZLiIMnwO4DXSyZX1ai0qwNJBo2DpGrAR5nf
BTwijbmqJqRxBUgyaBIklQE+wXxKMkul3RSX7oGksyDJ8BnATwM+zXxWGp+S
xrNcegCSToIkw+ckKeB9j/7yER2UffOfY5SiIUj1eeuoEC2kCl7YF6oHvYuH
vFDofw4OGnQTfSUWeOGRdb2y1yZ1aGlfzDywdknfk+Selyr6DeqSGRA=\
\>"],
 ImageRangeCache->{{{0, 188}, {178.688, 0}} -> {-1.24906, -1.06781, \
0.0132878, 0.0132878}}]
}, Open  ]],

Cell[TextData[{
 "After ",
 StyleBox["ShowFigure", "MR"],
 " has been used, ",
 StyleBox["ShowPermutation", "MR"],
 " can be used by simply giving a permutation to be applied to the last \
figure."
}], "MathCaption",
 CellTags->"WorkGraphics"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowPermutation", "[", 
  RowBox[{"{", 
   RowBox[{"4", ",", "3", ",", "2", ",", "1", ",", " ", "5"}], "}"}], 
  "]"}]], "Input",
 CellTags->"WorkGraphics",
 CellLabel->"In[90]:="],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .45288 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.47619 0.010783 0.47619 [
[ 0 0 0 0 ]
[ 1 .45288 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 .45288 L
0 .45288 L
closepath
clip
newpath
% Start of sub-graphic
p
0.0238095 0.010783 0.477324 0.442101 MathSubStart
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.400557 0.427716 0.400557 [
[.5 .96356 -18 0 ]
[.5 .96356 18 9 ]
[ 0 0 0 0 ]
[ 1 .95106 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
[(Before)] .5 .96356 0 -1 Mshowa
0 0 m
1 0 L
1 .95106 L
0 .95106 L
closepath
clip
newpath
.74 .99 .79 r
.88095 .55149 m
.73544 .10366 L
.26456 .10366 L
.11905 .55149 L
.5 .82827 L
F
0 0 0 r
.5 Mabswid
[ ] 0 setdash
.88095 .55149 m
.73544 .10366 L
.26456 .10366 L
.11905 .55149 L
.5 .82827 L
.88095 .55149 L
s
0 g
[(1)] .97619 .58244 0 0 Mshowa
[(2)] .7943 .02264 0 0 Mshowa
[(3)] .2057 .02264 0 0 Mshowa
[(4)] .02381 .58244 0 0 Mshowa
[(5)] .5 .92841 0 0 Mshowa
1 0 0 r
.045 w
.88095 .55149 Mdot
0 1 0 r
.73544 .10366 Mdot
0 0 1 r
.26456 .10366 Mdot
1 1 0 r
.11905 .55149 Mdot
.628 .126 .941 r
.5 .82827 Mdot
MathSubEnd
P
% End of sub-graphic
% Start of sub-graphic
p
0.522676 0.010783 0.97619 0.442101 MathSubStart
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.400557 0.427716 0.400557 [
[.5 .96356 -15 0 ]
[.5 .96356 15 9 ]
[ 0 0 0 0 ]
[ 1 .95106 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
[(After)] .5 .96356 0 -1 Mshowa
0 0 m
1 0 L
1 .95106 L
0 .95106 L
closepath
clip
newpath
.74 .99 .79 r
.88095 .55149 m
.73544 .10366 L
.26456 .10366 L
.11905 .55149 L
.5 .82827 L
F
0 0 0 r
.5 Mabswid
[ ] 0 setdash
.88095 .55149 m
.73544 .10366 L
.26456 .10366 L
.11905 .55149 L
.5 .82827 L
.88095 .55149 L
s
0 g
[(4)] .97619 .58244 0 0 Mshowa
[(3)] .7943 .02264 0 0 Mshowa
[(2)] .2057 .02264 0 0 Mshowa
[(1)] .02381 .58244 0 0 Mshowa
[(5)] .5 .92841 0 0 Mshowa
1 1 0 r
.045 w
.88095 .55149 Mdot
0 0 1 r
.73544 .10366 Mdot
0 1 0 r
.26456 .10366 Mdot
1 0 0 r
.11905 .55149 Mdot
.628 .126 .941 r
.5 .82827 Mdot
MathSubEnd
P
% End of sub-graphic
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
 ImageSize->{288, 130.375},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"WorkGraphics",
 CellLabel->"From In[90]:=",
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXWtP3EYUHfZBaaISaCu1lCRsQgghQJPwSNtQQngHRQhRQtOo6geEqgZV
eTRNVfVDVbVV1Qf/hF/Gv3A9c4ex1zP2rndtz7V9icIZxjPje889986Q7K63
D948+/b5wZujw4PG5uuDV8+ODn9sbLx87XZVexjraTDG/mgw3nbcpvwmvq7w
b/KHFu1RDlU+d5W3ary1plor6up1GA4gehz5xZYNfett9o2GL7vS5hJr4cte
41DhVzbaXGxZzYhw+IH4XvP3Kdr07gi3PfLXmi2tqID4yRdzY8R28mwBZ062
HPZYtebV1SkYfpNDnXfMyJbDvlCtWXV1Uh/u2qgNhz7DcDbjnJ6eOifun5xj
wGfXaSSGJYFN0fOkxObcy44YVBAM5IWbGEgMSxKZP9MhqAuiJCFRW6rId8a9
EvpsDLd1KaaOerjt25SFz5TdpfLZf2xji8p1DGrMAjkFuyX23X+ulhTYVmWW
GAw/Bpuy9N0QfgzKpOzPxncZ/gkBS6XZ90z74A5xIMtAQA441Jol6nKwb5MN
DoxysK9Uqg5Wq8MNAcul2y9N++c2caG4mNDlYVu1NjEoDww22eTCIA8MyqXq
YR998hgXsFrafda07z4iTjRObpjkgkPNNlGXi32bbGOoXOwr2TZSdYmsLvCC
mfXS78+m/XqLuAnlZlyXj21VY8KgfDDYhAVD5INB2ViQqk80N1I+YwI2aV+P
2Oc3iaOWHF03yQmH2jGhLif7NmHDUDnZVzo2pOoUqzqJt2i4pwI6D7Q+H6wT
V21zNabLy7bqMWNQXhhswooh8sKgfKxI1SseV1Je8DbBR3SOiHGuWCXOYnN2
zSQ3HNmAGXW52bcJO4bKzX4mYEeqblTdqLqhRp/crgrYpt+mYiKncJm465i7
UV1+trMiTxiUHwab8oIh8sOQGXlBqn6JVD/4AKQdOrd0iJzKJeKwaw6vmuSI
I1vyhLoc7duUNwyVo/1MyRtSdUy0OjYE7NJ5p0vklC4Sl4lxeUWXp+2syTMG
5YnBprxiiDwxZE5ekapnKtVzRMAenZMSQk7tAnGaOKcNk1xxZFOeUZerfZvy
jqFytZ9JeUeqrqlW18sC9ul8lTByij8jblPjdkSXr+2sKhIG5YvBpqJgiHwx
ZFZRkKpvJtX3koAndC5LCTnVnxDHqXN82SRnHNlWJNTlbN+momGonO1nWtGQ
qnOm1fmigKd0nksZOeXzxHVmXF/S5W0764qMQXljsKmo6JP3EIeqaH5FZSVd
rHKW70jCXa6fYDCqqMiEqIdB5R9yqIvmlw6GDCwg1jm7tyTRrrr3MRhVNGRC
xB8ZVI0g5YqIJlVbN6po2KTqftggXa7f8uubfpNPBYWqexXlw6rVR5U8VQTN
9ym+L4D6AUSPI78gD8RxpsJbFXF+3xXLIEngvCIDLmuSaHb2t88QhWFDnwwf
73ssl2D0T+jJYFNoHHb295whDP1A/Tscal4y0ZsnukUegf42c6GfOE+Wc5+S
Qdo+wvmgQdGgt/l2ioyZt1uTuC8Q14lzzfsGwuX9Lm/AJrDl2E7KHCCcZQba
FPQAsZsAuz4J9ytC3xcd9OHQrVDtYYK1i8RfB/y9p1iTMhzz8nrVQZI7GBDy
d5PYiWBHPmeCHiCpn13oAZI6J/IBkvSwa0dRQg+79riQD7ue8ErugnXZZohQ
UndK7f1NkMCkgIXS/BcOj/ZeCX2egnBPeZqfdyzrMA0Ebe+XwstpCOnHAuYL
t6/x6D0tsG+3IHwAs4U5vXLXvi6gT7chXLe90jKdmBwyRCgd3xTCizsQkhkB
07n7NynO/kGObZ8F+mc9LY1nrYM4CJo5zJW1c0AxvPZ+HG095Wx+lwMb7wKd
AGPoThXcxCPEtsEb9wAghUZshhVS5HtU1nwKFMHnKIxY+w2Ts/ESgQ33gI57
XoyGsogHxOIHK3eFz91inwsYSj2PuXc/ZXgv+GxRCR+kVu35rX7O4B73wZ37
nlQGk6ALpPBLKqsugckPBAx2fXLk1v2a4Frw2BcA8P18HD/Bx9+6mr0CJsBT
3863rR9+tz87mLMGtwN4u2UW8il/xRgLDxwGAEqq+r7zd+TVDVhC/A+re/2E
uaszTpfDjg19D2E4zKrDpX3Hj+zfiGubwekn/tU5+qbr17TpHd09pq/8u3Ol
+7awWrwG5Vi1tuDSlrw7873S59jQt9HR8Igbb7S5kn+4eH3jf6oVg6W7alJN
tcT7/cSJQPwkNFlVZlbUuKpqPeetinFu0+Bq8zTTjWAnlofXmt9jdfMAETVD
H4yrN02XSxjXMPW9CvSxM5IC44QTrDdo6hn2Gqa04WQ9zN2OXBPDX/BW1Yl0
I2yuaWW/F15kY7MeMb7SatUXgVWjY9TJ3Rd9TuqhCk0Lry80LcSQoMiUYbXY
i8qjrJfR5wxr/65m19ukSRaTNWXAP6oVMVz80KL2sJ7/AfQhuDk=\
\>"],
 ImageRangeCache->{{{0, 287}, {129.375, 0}} -> {-0.0548928, -0.0226491, \
0.00735118, 0.00735118}, {{7.4375, 137}, {126.25, 3.0625}} -> {-1.52142, \
-1.13365, 0.0210669, 0.0210669}, {{149.938, 279.5}, {126.25, 3.0625}} -> \
{-4.52345, -1.13365, 0.0210669, 0.0210669}}],

Cell[BoxData["\<\"The figure on the left represents the original figure and \
the one on the right exhibits the effect of the transformation determined by \
the given permutation.\"\>"], "Print",
 CellTags->"WorkGraphics"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "3", ",", "2", ",", "1", ",", "5"}], "}"}]], "Output",
 CellTags->"WorkGraphics",
 CellLabel->"Out[90]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5.4.3 Adjoin", "Subsubsection",
 CellTags->{"Adjoin", "i:34"}],

Cell[TextData[{
 "The set of Gaussian integers is the set of all elements of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"a", " ", "+", " ", 
       RowBox[{"b", " ", "i"}]}], " ", "|", " ", "a"}], ",", " ", 
     RowBox[{"b", " ", "\[Element]", " ", "\[DoubleStruckCapitalZ]"}]}], 
    "}"}], TraditionalForm]]],
 ". Although the polynomial ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "2"], " ", "-", " ", "2"}], TraditionalForm]]],
 " does not have zeros in the rationals ",
 Cell[BoxData[
  FormBox["\[DoubleStruckCapitalQ]", TraditionalForm]]],
 ", it does have zeros in the set ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"a", " ", "+", " ", 
        RowBox[{"b", " ", 
         SqrtBox["2"]}]}], " ", "|", "  ", "a"}], ",", " ", 
      RowBox[{"b", " ", "\[Element]", " ", "\[DoubleStruckCapitalQ]"}]}], 
     "}"}], " "}], TraditionalForm]]],
 ". Note the similarity between the two sets. In general, given ",
 Cell[BoxData[
  FormBox[
   SqrtBox["d"], TraditionalForm]]],
 " for some integer ",
 Cell[BoxData[
  FormBox["d", TraditionalForm]]],
 " and some set ",
 Cell[BoxData[
  FormBox["S", TraditionalForm]]],
 " (usually a group or ring), we can construct the set ",
 Cell[BoxData[
  FormBox[
   RowBox[{"S", "[", 
    SqrtBox["d"], "]"}], TraditionalForm]]],
 " defined as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"a", " ", "+", " ", 
       RowBox[{"b", " ", 
        SqrtBox["d"]}]}], " ", "|", " ", "a"}], ",", " ", 
     RowBox[{"b", " ", "\[Element]", " ", "S"}]}], "}"}], TraditionalForm]]],
 ". The Gaussian integers are therefore denoted \[DoubleStruckCapitalZ]",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", "i", "]"}], TraditionalForm]]],
 " (since ",
 Cell[BoxData[
  FormBox[
   RowBox[{"i", " ", "=", " ", 
    SqrtBox[
     RowBox[{"-", "1"}]]}], TraditionalForm]]],
 "), while the second set is denoted ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DoubleStruckCapitalQ]", "[", 
    SqrtBox["2"], "]"}], TraditionalForm]]],
 ". In each case, we say we are ",
 StyleBox["adjoining",
  FontSlant->"Italic"],
 " an element to the underlying set. The same process can be applied to \
finite sets. Additionally, this process can be generalized to adjoining \
elements other than square roots, as well as generating lists of polynomials \
by adjoining an indeterminate."
}], "Text",
 CellTags->"Adjoin"],

Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{
      StyleBox["Adjoin", "MR"], 
      StyleBox["[", "MR"], 
      RowBox[{
       StyleBox["list", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["num", "TI"]}], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       StyleBox[
        RowBox[{"give", " ", "the", " ", "elements", " ", "in", " "}],
        SingleLetterItalics->False], 
       StyleBox["list",
        FontSlant->"Italic"], 
       StyleBox[
        RowBox[{" ", "with", " "}],
        SingleLetterItalics->False], 
       StyleBox["num",
        FontSlant->"Italic"], 
       StyleBox[
        RowBox[{" ", 
         RowBox[{"adjoined", ",", " ", "where", " "}]}],
        SingleLetterItalics->False], 
       StyleBox["num",
        FontSlant->"Italic"], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["needs",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["to",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["be",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["of",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["the",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["form",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False,
        FontSlant->"Italic"], 
       StyleBox[
        SuperscriptBox["n", 
         RowBox[{"p", "/", "q"}]],
        FontSlant->"Italic"]}], ",", " ", 
      RowBox[{"where", " ", 
       StyleBox["n",
        FontSlant->"Italic"]}], ",", " ", 
      StyleBox["p",
       FontSlant->"Italic"], ",", " ", 
      RowBox[{"and", 
       StyleBox[" ",
        FontSlant->"Italic"], 
       StyleBox["q",
        FontSlant->"Italic"], " ", "are", " ", "integers"}]}]},
    {
     RowBox[{
      StyleBox["Adjoin", "MR"], 
      StyleBox["[", "MR"], 
      RowBox[{
       StyleBox["S", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["num", "TI"]}], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       StyleBox[
        RowBox[{"for", " "}],
        SingleLetterItalics->False], 
       StyleBox[
        FormBox["S",
         TraditionalForm], "Text"], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["either",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["a",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["groupoid",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["or",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["ringoid",
        SingleLetterItalics->False]}], 
      StyleBox[",",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      RowBox[{
       StyleBox["return",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        FormBox[
         RowBox[{
          StyleBox["Adjoin", "MR"], 
          StyleBox["[", "MR"], 
          RowBox[{
           RowBox[{
            StyleBox["Elements", "MR"], 
            StyleBox["[", "MR"], 
            StyleBox["S", "TI"], 
            StyleBox["]", "MR"]}], 
           StyleBox[",", "MR"], " ", 
           StyleBox["num", "TI"]}], 
          StyleBox["]", "MR"]}],
         StandardForm], "Text"]}]}]},
    {
     RowBox[{
      StyleBox["Adjoin", "MR"], 
      StyleBox["[", "MR"], 
      RowBox[{
       StyleBox["list", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["ind", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["deg", "TI"]}], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      StyleBox[
       RowBox[{
       "give", " ", "the", " ", "set", " ", "of", " ", "polynomials", " ", 
        "in", " ", "the", " ", "indeterminate", " "}],
       SingleLetterItalics->False], 
      StyleBox["ind",
       FontSlant->"Italic"], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["of",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["degree",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["less",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["than",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["or",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["equal",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["to",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["deg",
       FontSlant->"Italic"], 
      StyleBox[
       RowBox[{" ", 
        RowBox[{"with", " ", "coefficients", " ", "from", " "}]}],
       SingleLetterItalics->False], 
      StyleBox["list",
       FontSlant->"Italic"]}]},
    {
     RowBox[{
      StyleBox["Adjoin", "MR"], 
      StyleBox["[", "MR"], 
      RowBox[{
       StyleBox["S", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["ind", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["deg", "TI"]}], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       StyleBox[
        RowBox[{"for", " "}],
        SingleLetterItalics->False], 
       StyleBox[
        FormBox["S",
         TraditionalForm], "Text"], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["either",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["a",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["groupoid",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["or",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["ringoid",
        SingleLetterItalics->False]}], 
      StyleBox[",",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      RowBox[{
       StyleBox["return",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        FormBox[
         RowBox[{
          StyleBox["Adjoin", "MR"], 
          StyleBox["[", "MR"], 
          StyleBox["Elements", "MR"], 
          StyleBox["[", "MR"], 
          StyleBox["S", "TI"], 
          StyleBox["]", "MR"], 
          StyleBox[",", "MR"], " ", 
          StyleBox["ind", "TI"], 
          StyleBox[",", "TI"], " ", 
          StyleBox["deg", "TI"], 
          StyleBox["]", "MR"]}],
         StandardForm], "Text"]}]}]}
   }], NotebookDefault]], "DefinitionBox",
 CellTags->"Adjoin"],

Cell[TextData[{
 "Uses of the ",
 StyleBox["Adjoin",
  FontFamily->"Courier"],
 " function."
}], "Caption",
 CellTags->"Adjoin"],

Cell[TextData[{
 "Here we adjoin ",
 Cell[BoxData[
  FormBox[
   SqrtBox["2"], TraditionalForm]]],
 " to the set {5, 6, 8}."
}], "MathCaption",
 CellTags->"Adjoin"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Adjoin", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", " ", "8"}], "}"}], ",", 
   SqrtBox["2"]}], "]"}]], "Input",
 CellTags->"Adjoin",
 CellLabel->"In[91]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"5", "+", 
    RowBox[{"5", " ", 
     SqrtBox["2"]}]}], ",", 
   RowBox[{"5", "+", 
    RowBox[{"6", " ", 
     SqrtBox["2"]}]}], ",", 
   RowBox[{"5", "+", 
    RowBox[{"8", " ", 
     SqrtBox["2"]}]}], ",", 
   RowBox[{"6", "+", 
    RowBox[{"5", " ", 
     SqrtBox["2"]}]}], ",", 
   RowBox[{"6", "+", 
    RowBox[{"6", " ", 
     SqrtBox["2"]}]}], ",", 
   RowBox[{"6", "+", 
    RowBox[{"8", " ", 
     SqrtBox["2"]}]}], ",", 
   RowBox[{"8", "+", 
    RowBox[{"5", " ", 
     SqrtBox["2"]}]}], ",", 
   RowBox[{"8", "+", 
    RowBox[{"6", " ", 
     SqrtBox["2"]}]}], ",", 
   RowBox[{"8", "+", 
    RowBox[{"8", " ", 
     SqrtBox["2"]}]}]}], "}"}]], "Output",
 CellTags->"Adjoin",
 CellLabel->"Out[91]="]
}, Open  ]],

Cell["We can adjoin a cube root to a list of symbols.", "MathCaption",
 CellTags->"Adjoin"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"a", ",", " ", "t"}], "]"}], "\n", 
 RowBox[{"Adjoin", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "t"}], "}"}], ",", 
   SuperscriptBox["2", 
    RowBox[{"1", "/", "3"}]]}], "]"}]}], "Input",
 CellTags->"Adjoin",
 CellLabel->"In[93]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "+", 
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{"1", "/", "3"}]], " ", "a"}], "+", 
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{"2", "/", "3"}]], " ", "a"}]}], ",", 
   RowBox[{"a", "+", 
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{"1", "/", "3"}]], " ", "a"}], "+", 
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{"2", "/", "3"}]], " ", "t"}]}], ",", 
   RowBox[{"a", "+", 
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{"2", "/", "3"}]], " ", "a"}], "+", 
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{"1", "/", "3"}]], " ", "t"}]}], ",", 
   RowBox[{"a", "+", 
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{"1", "/", "3"}]], " ", "t"}], "+", 
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{"2", "/", "3"}]], " ", "t"}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{"1", "/", "3"}]], " ", "a"}], "+", 
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{"2", "/", "3"}]], " ", "a"}], "+", "t"}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{"1", "/", "3"}]], " ", "a"}], "+", "t", "+", 
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{"2", "/", "3"}]], " ", "t"}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{"2", "/", "3"}]], " ", "a"}], "+", "t", "+", 
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{"1", "/", "3"}]], " ", "t"}]}], ",", 
   RowBox[{"t", "+", 
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{"1", "/", "3"}]], " ", "t"}], "+", 
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{"2", "/", "3"}]], " ", "t"}]}]}], "}"}]], "Output",
 CellTags->"Adjoin",
 CellLabel->"Out[94]="]
}, Open  ]],

Cell[TextData[{
 "Adjoining can be nested. Note that here we use the group (or ring) ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[DoubleStruckCapitalZ]", "2"], TraditionalForm]]],
 " instead of a list of elements."
}], "MathCaption",
 CellTags->"Adjoin"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Adjoin", "[", 
  RowBox[{
   RowBox[{"Adjoin", "[", 
    RowBox[{
     RowBox[{"Z", "[", "2", "]"}], ",", 
     SqrtBox["3"]}], "]"}], ",", " ", 
   SqrtBox["2"]}], "]"}]], "Input",
 CellTags->"Adjoin",
 CellLabel->"In[95]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   SqrtBox["6"], ",", 
   SqrtBox["2"], ",", 
   RowBox[{
    SqrtBox["2"], "+", 
    SqrtBox["6"]}], ",", 
   SqrtBox["3"], ",", 
   RowBox[{
    SqrtBox["3"], "+", 
    SqrtBox["6"]}], ",", 
   RowBox[{
    SqrtBox["2"], "+", 
    SqrtBox["3"]}], ",", 
   RowBox[{
    SqrtBox["2"], "+", 
    SqrtBox["3"], "+", 
    SqrtBox["6"]}], ",", "1", ",", 
   RowBox[{"1", "+", 
    SqrtBox["6"]}], ",", 
   RowBox[{"1", "+", 
    SqrtBox["2"]}], ",", 
   RowBox[{"1", "+", 
    SqrtBox["2"], "+", 
    SqrtBox["6"]}], ",", 
   RowBox[{"1", "+", 
    SqrtBox["3"]}], ",", 
   RowBox[{"1", "+", 
    SqrtBox["3"], "+", 
    SqrtBox["6"]}], ",", 
   RowBox[{"1", "+", 
    SqrtBox["2"], "+", 
    SqrtBox["3"]}], ",", 
   RowBox[{"1", "+", 
    SqrtBox["2"], "+", 
    SqrtBox["3"], "+", 
    SqrtBox["6"]}]}], "}"}]], "Output",
 CellTags->"Adjoin",
 CellLabel->"Out[95]="]
}, Open  ]],

Cell["Here we adjoin the cube of a fifth root of 2 to {0, 1}.", "MathCaption",
 CellTags->"Adjoin"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Adjoin", "[", 
  RowBox[{
   RowBox[{"Z", "[", "2", "]"}], ",", 
   SuperscriptBox["2", 
    RowBox[{"3", "/", "5"}]]}], "]"}]], "Input",
 CellTags->"Adjoin",
 CellLabel->"In[96]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"4", " ", 
    SuperscriptBox["2", 
     RowBox[{"2", "/", "5"}]]}], ",", 
   RowBox[{"2", " ", 
    SuperscriptBox["2", 
     RowBox[{"4", "/", "5"}]]}], ",", 
   RowBox[{
    RowBox[{"4", " ", 
     SuperscriptBox["2", 
      RowBox[{"2", "/", "5"}]]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["2", 
      RowBox[{"4", "/", "5"}]]}]}], ",", 
   RowBox[{"2", " ", 
    SuperscriptBox["2", 
     RowBox[{"1", "/", "5"}]]}], ",", 
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox["2", 
      RowBox[{"1", "/", "5"}]]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["2", 
      RowBox[{"2", "/", "5"}]]}]}], ",", 
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox["2", 
      RowBox[{"1", "/", "5"}]]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["2", 
      RowBox[{"4", "/", "5"}]]}]}], ",", 
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox["2", 
      RowBox[{"1", "/", "5"}]]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["2", 
      RowBox[{"2", "/", "5"}]]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["2", 
      RowBox[{"4", "/", "5"}]]}]}], ",", 
   SuperscriptBox["2", 
    RowBox[{"3", "/", "5"}]], ",", 
   RowBox[{
    RowBox[{"4", " ", 
     SuperscriptBox["2", 
      RowBox[{"2", "/", "5"}]]}], "+", 
    SuperscriptBox["2", 
     RowBox[{"3", "/", "5"}]]}], ",", 
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{"3", "/", "5"}]], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["2", 
      RowBox[{"4", "/", "5"}]]}]}], ",", 
   RowBox[{
    RowBox[{"4", " ", 
     SuperscriptBox["2", 
      RowBox[{"2", "/", "5"}]]}], "+", 
    SuperscriptBox["2", 
     RowBox[{"3", "/", "5"}]], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["2", 
      RowBox[{"4", "/", "5"}]]}]}], ",", 
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox["2", 
      RowBox[{"1", "/", "5"}]]}], "+", 
    SuperscriptBox["2", 
     RowBox[{"3", "/", "5"}]]}], ",", 
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox["2", 
      RowBox[{"1", "/", "5"}]]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["2", 
      RowBox[{"2", "/", "5"}]]}], "+", 
    SuperscriptBox["2", 
     RowBox[{"3", "/", "5"}]]}], ",", 
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox["2", 
      RowBox[{"1", "/", "5"}]]}], "+", 
    SuperscriptBox["2", 
     RowBox[{"3", "/", "5"}]], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["2", 
      RowBox[{"4", "/", "5"}]]}]}], ",", 
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox["2", 
      RowBox[{"1", "/", "5"}]]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["2", 
      RowBox[{"2", "/", "5"}]]}], "+", 
    SuperscriptBox["2", 
     RowBox[{"3", "/", "5"}]], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["2", 
      RowBox[{"4", "/", "5"}]]}]}], ",", "1", ",", 
   RowBox[{"1", "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["2", 
      RowBox[{"2", "/", "5"}]]}]}], ",", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["2", 
      RowBox[{"4", "/", "5"}]]}]}], ",", 
   RowBox[{"1", "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["2", 
      RowBox[{"2", "/", "5"}]]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["2", 
      RowBox[{"4", "/", "5"}]]}]}], ",", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["2", 
      RowBox[{"1", "/", "5"}]]}]}], ",", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["2", 
      RowBox[{"1", "/", "5"}]]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["2", 
      RowBox[{"2", "/", "5"}]]}]}], ",", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["2", 
      RowBox[{"1", "/", "5"}]]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["2", 
      RowBox[{"4", "/", "5"}]]}]}], ",", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["2", 
      RowBox[{"1", "/", "5"}]]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["2", 
      RowBox[{"2", "/", "5"}]]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["2", 
      RowBox[{"4", "/", "5"}]]}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox["2", 
     RowBox[{"3", "/", "5"}]]}], ",", 
   RowBox[{"1", "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["2", 
      RowBox[{"2", "/", "5"}]]}], "+", 
    SuperscriptBox["2", 
     RowBox[{"3", "/", "5"}]]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox["2", 
     RowBox[{"3", "/", "5"}]], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["2", 
      RowBox[{"4", "/", "5"}]]}]}], ",", 
   RowBox[{"1", "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["2", 
      RowBox[{"2", "/", "5"}]]}], "+", 
    SuperscriptBox["2", 
     RowBox[{"3", "/", "5"}]], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["2", 
      RowBox[{"4", "/", "5"}]]}]}], ",", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["2", 
      RowBox[{"1", "/", "5"}]]}], "+", 
    SuperscriptBox["2", 
     RowBox[{"3", "/", "5"}]]}], ",", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["2", 
      RowBox[{"1", "/", "5"}]]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["2", 
      RowBox[{"2", "/", "5"}]]}], "+", 
    SuperscriptBox["2", 
     RowBox[{"3", "/", "5"}]]}], ",", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["2", 
      RowBox[{"1", "/", "5"}]]}], "+", 
    SuperscriptBox["2", 
     RowBox[{"3", "/", "5"}]], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["2", 
      RowBox[{"4", "/", "5"}]]}]}], ",", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["2", 
      RowBox[{"1", "/", "5"}]]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["2", 
      RowBox[{"2", "/", "5"}]]}], "+", 
    SuperscriptBox["2", 
     RowBox[{"3", "/", "5"}]], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["2", 
      RowBox[{"4", "/", "5"}]]}]}]}], "}"}]], "Output",
 CellTags->"Adjoin",
 CellLabel->"Out[96]="]
}, Open  ]],

Cell["\<\
We can also form a list of polynomials by providing the set of coefficients, \
the indeterminate, and the bound on the degree.\
\>", "MathCaption",
 CellTags->"Adjoin"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  RowBox[{"Adjoin", "[", 
   RowBox[{
    RowBox[{"Z", "[", "2", "]"}], ",", " ", "\[Alpha]", ",", " ", "2"}], 
   "]"}],
  FontFamily->"Courier",
  FontWeight->"Bold"]], "Input",
 CellTags->"Adjoin",
 CellLabel->"In[97]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   SuperscriptBox["\[Alpha]", "2"], ",", "\[Alpha]", ",", 
   RowBox[{"\[Alpha]", "+", 
    SuperscriptBox["\[Alpha]", "2"]}], ",", "1", ",", 
   RowBox[{"1", "+", 
    SuperscriptBox["\[Alpha]", "2"]}], ",", 
   RowBox[{"1", "+", "\[Alpha]"}], ",", 
   RowBox[{"1", "+", "\[Alpha]", "+", 
    SuperscriptBox["\[Alpha]", "2"]}]}], "}"}]], "Output",
 CellTags->"Adjoin",
 CellLabel->"Out[97]="]
}, Open  ]],

Cell[TextData[{
 "Since we are interested in the elements for coefficients, it doesn\
\[CloseCurlyQuote]t matter if we are working with a group or a ring. Here we \
have all third degree (and lower) polynomials over ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[DoubleStruckCapitalZ]", "3"], TraditionalForm]]],
 " in the indeterminate ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 "."
}], "MathCaption",
 CellTags->"Adjoin"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Adjoin", "[", 
  RowBox[{
   RowBox[{"Z", "[", 
    RowBox[{"3", ",", " ", 
     RowBox[{"Structure", " ", "\[Rule]", " ", "Ring"}]}], "]"}], ",", " ", 
   "x", ",", " ", "3"}], "]"}]], "Input",
 CellTags->"Adjoin",
 CellLabel->"In[98]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   SuperscriptBox["x", "3"], ",", 
   RowBox[{"2", " ", 
    SuperscriptBox["x", "3"]}], ",", 
   SuperscriptBox["x", "2"], ",", 
   RowBox[{
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{
    SuperscriptBox["x", "2"], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "3"]}]}], ",", 
   RowBox[{"2", " ", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "3"]}]}], ",", "x", ",", 
   RowBox[{"x", "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"x", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "3"]}]}], ",", 
   RowBox[{"x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"x", "+", 
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"x", "+", 
    SuperscriptBox["x", "2"], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "3"]}]}], ",", 
   RowBox[{"x", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "2"]}]}], ",", 
   RowBox[{"x", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"x", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "3"]}]}], ",", 
   RowBox[{"2", " ", "x"}], ",", 
   RowBox[{
    RowBox[{"2", " ", "x"}], "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{
    RowBox[{"2", " ", "x"}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "3"]}]}], ",", 
   RowBox[{
    RowBox[{"2", " ", "x"}], "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{
    RowBox[{"2", " ", "x"}], "+", 
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{
    RowBox[{"2", " ", "x"}], "+", 
    SuperscriptBox["x", "2"], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "3"]}]}], ",", 
   RowBox[{
    RowBox[{"2", " ", "x"}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "2"]}]}], ",", 
   RowBox[{
    RowBox[{"2", " ", "x"}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{
    RowBox[{"2", " ", "x"}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "3"]}]}], ",", "1", ",", 
   RowBox[{"1", "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "3"]}]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox["x", "2"], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "3"]}]}], ",", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "2"]}]}], ",", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "3"]}]}], ",", 
   RowBox[{"1", "+", "x"}], ",", 
   RowBox[{"1", "+", "x", "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"1", "+", "x", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "3"]}]}], ",", 
   RowBox[{"1", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"1", "+", "x", "+", 
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"1", "+", "x", "+", 
    SuperscriptBox["x", "2"], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "3"]}]}], ",", 
   RowBox[{"1", "+", "x", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "2"]}]}], ",", 
   RowBox[{"1", "+", "x", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"1", "+", "x", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "3"]}]}], ",", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", "x"}]}], ",", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", "x"}], "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", "x"}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "3"]}]}], ",", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", "x"}], "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", "x"}], "+", 
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", "x"}], "+", 
    SuperscriptBox["x", "2"], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "3"]}]}], ",", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", "x"}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "2"]}]}], ",", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", "x"}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", "x"}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "3"]}]}], ",", "2", ",", 
   RowBox[{"2", "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"2", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "3"]}]}], ",", 
   RowBox[{"2", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"2", "+", 
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"2", "+", 
    SuperscriptBox["x", "2"], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "3"]}]}], ",", 
   RowBox[{"2", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "2"]}]}], ",", 
   RowBox[{"2", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"2", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "3"]}]}], ",", 
   RowBox[{"2", "+", "x"}], ",", 
   RowBox[{"2", "+", "x", "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"2", "+", "x", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "3"]}]}], ",", 
   RowBox[{"2", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"2", "+", "x", "+", 
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"2", "+", "x", "+", 
    SuperscriptBox["x", "2"], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "3"]}]}], ",", 
   RowBox[{"2", "+", "x", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "2"]}]}], ",", 
   RowBox[{"2", "+", "x", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"2", "+", "x", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "3"]}]}], ",", 
   RowBox[{"2", "+", 
    RowBox[{"2", " ", "x"}]}], ",", 
   RowBox[{"2", "+", 
    RowBox[{"2", " ", "x"}], "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"2", "+", 
    RowBox[{"2", " ", "x"}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "3"]}]}], ",", 
   RowBox[{"2", "+", 
    RowBox[{"2", " ", "x"}], "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"2", "+", 
    RowBox[{"2", " ", "x"}], "+", 
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"2", "+", 
    RowBox[{"2", " ", "x"}], "+", 
    SuperscriptBox["x", "2"], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "3"]}]}], ",", 
   RowBox[{"2", "+", 
    RowBox[{"2", " ", "x"}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "2"]}]}], ",", 
   RowBox[{"2", "+", 
    RowBox[{"2", " ", "x"}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"2", "+", 
    RowBox[{"2", " ", "x"}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "3"]}]}]}], "}"}]], "Output",
 CellTags->"Adjoin",
 CellLabel->"Out[98]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5.4.4 Disguising groups and rings", "Subsubsection",
 CellTags->{"Disguising", "i:35"}],

Cell[TextData[{
 "There are five groups of order 8. If they are presented as Cayley tables \
using only generic letters (",
 Cell[BoxData[
  FormBox["a", TraditionalForm]]],
 " through ",
 Cell[BoxData[
  FormBox["h", TraditionalForm]]],
 "), is it easy to determine which table belongs to which group? The ",
 StyleBox["DisguiseGroupoid", "MR"],
 " function can facilitate the task of presenting generic-looking groups."
}], "Text",
 CellTags->"Disguising"],

Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{
      StyleBox["DisguiseGroupoid", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox["G", "TI"], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       RowBox[{"return", " ", "the", " ", "groupoid", " ", 
        FormBox["G",
         TraditionalForm], " ", "with", " ", "the", " ", "elements", " ", 
        "of"}], " ", 
       RowBox[{
        FormBox["G",
         TraditionalForm], " ", "replaced", " ", "with", " ", "strings", " ", 
        
        FormBox["a",
         TraditionalForm]}]}], ",", " ", 
      FormBox["b",
       TraditionalForm], ",", " ", 
      RowBox[{"etc", "."}], ",", " ", 
      RowBox[{
      "in", " ", "order", " ", "to", " ", "provide", " ", "a", " ", 
       "context\[Hyphen]free", " ", "environment", " ", "to", " ", 
       RowBox[{"explore", " ", "group", " ", "properties"}]}]}]},
    {
     RowBox[{
      StyleBox["DisguiseGroupoid", "MR"], 
      StyleBox["[", "MR"], 
      RowBox[{
       StyleBox["G", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["rules", "TI"]}], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      StyleBox["return",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["the",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["groupoid",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["G",
       SingleLetterItalics->False,
       FontSlant->"Italic"], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["disguised",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["according",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["to",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["the",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["rules",
       FontSlant->"Italic"], 
      StyleBox[
       RowBox[{" ", "given"}],
       SingleLetterItalics->False]}]},
    {
     RowBox[{
      StyleBox["DisguiseGroupoid", "MR"], 
      StyleBox["[", "MR"], 
      RowBox[{
       StyleBox["G", "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox[
        FormBox[
         RowBox[{
          StyleBox["Randomize", "MR"], 
          StyleBox[" ", "MR"], 
          StyleBox["\[Rule]", "MR"], " ", 
          StyleBox["True", "MR"]}],
         TraditionalForm], "TI"]}], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      StyleBox[
       RowBox[{"return", " ", "the", " ", "groupoid", " ", 
        StyleBox["G",
         FontSlant->"Italic"], " ", "disguised", " ", "by", " ", "first"}],
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox[
       RowBox[{
       "randomizing", " ", "the", " ", "elements", " ", "before", " ", 
        "using", " ", "the", " ", "rule"}],
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      RowBox[{
       StyleBox["assignments",
        SingleLetterItalics->False], 
       StyleBox[";",
        SingleLetterItalics->False], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       RowBox[{
        StyleBox["Randomize", "MR"], 
        StyleBox[
         RowBox[{" ", 
          RowBox[{"defaults", " ", "to", " "}]}],
         SingleLetterItalics->False], 
        StyleBox["False", "MR"]}]}]}]},
    {
     RowBox[{
      StyleBox["DisguiseRingoid", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox["R", "TI"], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      StyleBox[
       RowBox[{
       "return", " ", "a", " ", "disguised", " ", "ringoid", " ", "in", " ", 
        "the", " ", "same"}],
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      RowBox[{
       RowBox[{
        StyleBox["fashion",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["as",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["DisguiseGroupoid", "MR"], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        StyleBox["does",
         SingleLetterItalics->False]}], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox[
        RowBox[{"for", " ", "groupoids"}],
        SingleLetterItalics->False]}]}]}
   }], NotebookDefault]], "DefinitionBox",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.35], {
      Scaled[0.65]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellTags->{"Disguising", "i:36"}],

Cell["Disguising a groupoid or ringoid.", "Caption",
 CellTags->"Disguising"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CayleyTable", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"DisguiseGroupoid", "[", 
      RowBox[{"G", " ", "=", " ", 
       RowBox[{"DirectProduct", "[", 
        RowBox[{
         RowBox[{"Z", "[", "2", "]"}], ",", " ", 
         RowBox[{"Z", "[", "2", "]"}]}], "]"}]}], "]"}], ",", " ", 
     RowBox[{"DisguiseGroupoid", "[", 
      RowBox[{"G", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], " ", "\[Rule]", " ", 
          "\"\<cat\>\""}], ",", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "1"}], "}"}], " ", "\[Rule]", " ", 
          "\"\<dog\>\""}], ",", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], " ", "\[Rule]", " ", 
          "\"\<hat\>\""}], ",", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], " ", "\[Rule]", " ", 
          "\"\<log\>\""}]}], "}"}], ",", " ", 
       RowBox[{"Randomize", " ", "\[Rule]", " ", "True"}]}], "]"}]}], "}"}], 
   ",", " ", 
   RowBox[{"Mode", " ", "\[Rule]", " ", "Visual"}]}], "]"}]], "Input",
 CellChangeTimes->{3.408836465792491*^9},
 CellTags->"Disguising",
 CellLabel->"In[99]:="],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .52381 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.47619 0.0124717 0.47619 [
[ 0 0 0 0 ]
[ 1 .52381 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 .52381 L
0 .52381 L
closepath
clip
newpath
% Start of sub-graphic
p
0.0238095 0.0124717 0.477324 0.511338 MathSubStart
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.214286 0.190476 0.0261905 0.190476 [
[ 0 0 0 0 ]
[ 1 1.1 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 1.1 L
0 1.1 L
closepath
clip
newpath
1 1 0 r
.21429 .59762 m
.21429 .7881 L
.40476 .7881 L
.40476 .59762 L
F
.40476 .40714 m
.40476 .59762 L
.59524 .59762 L
.59524 .40714 L
F
.59524 .21667 m
.59524 .40714 L
.78571 .40714 L
.78571 .21667 L
F
.78571 .02619 m
.78571 .21667 L
.97619 .21667 L
.97619 .02619 L
F
1 .5 0 r
.40476 .59762 m
.40476 .7881 L
.59524 .7881 L
.59524 .59762 L
F
.21429 .40714 m
.21429 .59762 L
.40476 .59762 L
.40476 .40714 L
F
.78571 .21667 m
.78571 .40714 L
.97619 .40714 L
.97619 .21667 L
F
.59524 .02619 m
.59524 .21667 L
.78571 .21667 L
.78571 .02619 L
F
.56 .37 .6 r
.59524 .59762 m
.59524 .7881 L
.78571 .7881 L
.78571 .59762 L
F
.78571 .40714 m
.78571 .59762 L
.97619 .59762 L
.97619 .40714 L
F
.21429 .21667 m
.21429 .40714 L
.40476 .40714 L
.40476 .21667 L
F
.40476 .02619 m
.40476 .21667 L
.59524 .21667 L
.59524 .02619 L
F
0 0 1 r
.78571 .59762 m
.78571 .7881 L
.97619 .7881 L
.97619 .59762 L
F
.59524 .40714 m
.59524 .59762 L
.78571 .59762 L
.78571 .40714 L
F
.40476 .21667 m
.40476 .40714 L
.59524 .40714 L
.59524 .21667 L
F
.21429 .02619 m
.21429 .21667 L
.40476 .21667 L
.40476 .02619 L
F
1 1 0 r
.21429 .7881 m
.21429 .97857 L
.40476 .97857 L
.40476 .7881 L
F
1 .5 0 r
.40476 .7881 m
.40476 .97857 L
.59524 .97857 L
.59524 .7881 L
F
.56 .37 .6 r
.59524 .7881 m
.59524 .97857 L
.78571 .97857 L
.78571 .7881 L
F
0 0 1 r
.78571 .7881 m
.78571 .97857 L
.97619 .97857 L
.97619 .7881 L
F
1 1 0 r
.02381 .59762 m
.02381 .7881 L
.21429 .7881 L
.21429 .59762 L
F
1 .5 0 r
.02381 .40714 m
.02381 .59762 L
.21429 .59762 L
.21429 .40714 L
F
.56 .37 .6 r
.02381 .21667 m
.02381 .40714 L
.21429 .40714 L
.21429 .21667 L
F
0 0 1 r
.02381 .02619 m
.02381 .21667 L
.21429 .21667 L
.21429 .02619 L
F
0 g
1 Mabswid
[ ] 0 setdash
.02381 .02619 m
.02381 .97857 L
s
.02381 .02619 m
.97619 .02619 L
s
.02381 .21667 m
.97619 .21667 L
s
.02381 .40714 m
.97619 .40714 L
s
.02381 .59762 m
.97619 .59762 L
s
.02381 .7881 m
.97619 .7881 L
s
.02381 .97857 m
.97619 .97857 L
s
.21429 .02619 m
.21429 .97857 L
s
.40476 .02619 m
.40476 .97857 L
s
.59524 .02619 m
.59524 .97857 L
s
.78571 .02619 m
.78571 .97857 L
s
.97619 .02619 m
.97619 .97857 L
s
.02381 .97857 m
.21429 .7881 L
s
2.6 Mabswid
.21429 .02619 m
.21429 .97857 L
s
.02381 .7881 m
.97619 .7881 L
s
[(a)] .30952 .69286 0 0 Mshowa
[(b)] .5 .69286 0 0 Mshowa
[(c)] .69048 .69286 0 0 Mshowa
[(d)] .88095 .69286 0 0 Mshowa
[(b)] .30952 .50238 0 0 Mshowa
[(a)] .5 .50238 0 0 Mshowa
[(d)] .69048 .50238 0 0 Mshowa
[(c)] .88095 .50238 0 0 Mshowa
[(c)] .30952 .3119 0 0 Mshowa
[(d)] .5 .3119 0 0 Mshowa
[(a)] .69048 .3119 0 0 Mshowa
[(b)] .88095 .3119 0 0 Mshowa
[(d)] .30952 .12143 0 0 Mshowa
[(c)] .5 .12143 0 0 Mshowa
[(b)] .69048 .12143 0 0 Mshowa
[(a)] .88095 .12143 0 0 Mshowa
[(a)] .11905 .69286 0 0 Mshowa
[(b)] .11905 .50238 0 0 Mshowa
[(c)] .11905 .3119 0 0 Mshowa
[(d)] .11905 .12143 0 0 Mshowa
[(a)] .30952 .88333 0 0 Mshowa
[(b)] .5 .88333 0 0 Mshowa
[(c)] .69048 .88333 0 0 Mshowa
[(d)] .88095 .88333 0 0 Mshowa
[(???)] .02381 1.07381 -1 0 Mshowa
gsave
.97619 1.07381 -113 -10 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20 translate 1 -1 scale
gsave
0.000000 0.000000 0.000000 setrgbcolor
1.000000 setlinewidth
gsave
newpath
 79.000000 16.000000 moveto
 540.000000 16.000000 lineto
 540.000000 4.000000 lineto
 79.000000 4.000000 lineto
 79.000000 16.000000 lineto
closepath
clip newpath
81.000000 13.000000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
0.000000 0.000000 rmoveto
81.000000 13.000000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
(x) show
93.000000 13.000000 moveto
%%IncludeResource: font Math1Mono
%%IncludeFont: Math1Mono
/Math1Mono findfont 10.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
(*) show
105.000000 13.000000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
(y) show
111.000000 13.000000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
0.000000 0.000000 rmoveto
1.000000 setlinewidth
grestore
grestore
%%DocumentNeededResources: font Math1Mono
%%+ font Courier
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Math1Mono
%%+ Courier
%%DocumentSuppliedFonts:
%%DocumentFonts: font Math1Mono
%%+ font Courier
grestore
[(x)] .08857 .85095 0 0 Mshowa
[(y)] .16667 .92143 0 0 Mshowa
MathSubEnd
P
% End of sub-graphic
% Start of sub-graphic
p
0.522676 0.0124717 0.97619 0.511338 MathSubStart
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.214286 0.190476 0.0261905 0.190476 [
[ 0 0 0 0 ]
[ 1 1.1 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 1.1 L
0 1.1 L
closepath
clip
newpath
1 1 0 r
.21429 .59762 m
.21429 .7881 L
.40476 .7881 L
.40476 .59762 L
F
.40476 .40714 m
.40476 .59762 L
.59524 .59762 L
.59524 .40714 L
F
.59524 .21667 m
.59524 .40714 L
.78571 .40714 L
.78571 .21667 L
F
.78571 .02619 m
.78571 .21667 L
.97619 .21667 L
.97619 .02619 L
F
1 .5 0 r
.40476 .59762 m
.40476 .7881 L
.59524 .7881 L
.59524 .59762 L
F
.21429 .40714 m
.21429 .59762 L
.40476 .59762 L
.40476 .40714 L
F
.78571 .21667 m
.78571 .40714 L
.97619 .40714 L
.97619 .21667 L
F
.59524 .02619 m
.59524 .21667 L
.78571 .21667 L
.78571 .02619 L
F
.56 .37 .6 r
.59524 .59762 m
.59524 .7881 L
.78571 .7881 L
.78571 .59762 L
F
.78571 .40714 m
.78571 .59762 L
.97619 .59762 L
.97619 .40714 L
F
.21429 .21667 m
.21429 .40714 L
.40476 .40714 L
.40476 .21667 L
F
.40476 .02619 m
.40476 .21667 L
.59524 .21667 L
.59524 .02619 L
F
0 0 1 r
.78571 .59762 m
.78571 .7881 L
.97619 .7881 L
.97619 .59762 L
F
.59524 .40714 m
.59524 .59762 L
.78571 .59762 L
.78571 .40714 L
F
.40476 .21667 m
.40476 .40714 L
.59524 .40714 L
.59524 .21667 L
F
.21429 .02619 m
.21429 .21667 L
.40476 .21667 L
.40476 .02619 L
F
1 1 0 r
.21429 .7881 m
.21429 .97857 L
.40476 .97857 L
.40476 .7881 L
F
1 .5 0 r
.40476 .7881 m
.40476 .97857 L
.59524 .97857 L
.59524 .7881 L
F
.56 .37 .6 r
.59524 .7881 m
.59524 .97857 L
.78571 .97857 L
.78571 .7881 L
F
0 0 1 r
.78571 .7881 m
.78571 .97857 L
.97619 .97857 L
.97619 .7881 L
F
1 1 0 r
.02381 .59762 m
.02381 .7881 L
.21429 .7881 L
.21429 .59762 L
F
1 .5 0 r
.02381 .40714 m
.02381 .59762 L
.21429 .59762 L
.21429 .40714 L
F
.56 .37 .6 r
.02381 .21667 m
.02381 .40714 L
.21429 .40714 L
.21429 .21667 L
F
0 0 1 r
.02381 .02619 m
.02381 .21667 L
.21429 .21667 L
.21429 .02619 L
F
0 g
1 Mabswid
[ ] 0 setdash
.02381 .02619 m
.02381 .97857 L
s
.02381 .02619 m
.97619 .02619 L
s
.02381 .21667 m
.97619 .21667 L
s
.02381 .40714 m
.97619 .40714 L
s
.02381 .59762 m
.97619 .59762 L
s
.02381 .7881 m
.97619 .7881 L
s
.02381 .97857 m
.97619 .97857 L
s
.21429 .02619 m
.21429 .97857 L
s
.40476 .02619 m
.40476 .97857 L
s
.59524 .02619 m
.59524 .97857 L
s
.78571 .02619 m
.78571 .97857 L
s
.97619 .02619 m
.97619 .97857 L
s
.02381 .97857 m
.21429 .7881 L
s
2.6 Mabswid
.21429 .02619 m
.21429 .97857 L
s
.02381 .7881 m
.97619 .7881 L
s
[(cat)] .30952 .69286 0 0 Mshowa
[(hat)] .5 .69286 0 0 Mshowa
[(log)] .69048 .69286 0 0 Mshowa
[(dog)] .88095 .69286 0 0 Mshowa
[(hat)] .30952 .50238 0 0 Mshowa
[(cat)] .5 .50238 0 0 Mshowa
[(dog)] .69048 .50238 0 0 Mshowa
[(log)] .88095 .50238 0 0 Mshowa
[(log)] .30952 .3119 0 0 Mshowa
[(dog)] .5 .3119 0 0 Mshowa
[(cat)] .69048 .3119 0 0 Mshowa
[(hat)] .88095 .3119 0 0 Mshowa
[(dog)] .30952 .12143 0 0 Mshowa
[(log)] .5 .12143 0 0 Mshowa
[(hat)] .69048 .12143 0 0 Mshowa
[(cat)] .88095 .12143 0 0 Mshowa
[(cat)] .11905 .69286 0 0 Mshowa
[(hat)] .11905 .50238 0 0 Mshowa
[(log)] .11905 .3119 0 0 Mshowa
[(dog)] .11905 .12143 0 0 Mshowa
[(cat)] .30952 .88333 0 0 Mshowa
[(hat)] .5 .88333 0 0 Mshowa
[(log)] .69048 .88333 0 0 Mshowa
[(dog)] .88095 .88333 0 0 Mshowa
[(???)] .02381 1.07381 -1 0 Mshowa
gsave
.97619 1.07381 -113 -10 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20 translate 1 -1 scale
gsave
0.000000 0.000000 0.000000 setrgbcolor
1.000000 setlinewidth
gsave
newpath
 79.000000 16.000000 moveto
 540.000000 16.000000 lineto
 540.000000 4.000000 lineto
 79.000000 4.000000 lineto
 79.000000 16.000000 lineto
closepath
clip newpath
81.000000 13.000000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
0.000000 0.000000 rmoveto
81.000000 13.000000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
(x) show
93.000000 13.000000 moveto
%%IncludeResource: font Math1Mono
%%IncludeFont: Math1Mono
/Math1Mono findfont 10.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
(*) show
105.000000 13.000000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
(y) show
111.000000 13.000000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
0.000000 0.000000 rmoveto
1.000000 setlinewidth
grestore
grestore
%%DocumentNeededResources: font Math1Mono
%%+ font Courier
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Math1Mono
%%+ Courier
%%DocumentSuppliedFonts:
%%DocumentFonts: font Math1Mono
%%+ font Courier
grestore
[(x)] .08857 .85095 0 0 Mshowa
[(y)] .16667 .92143 0 0 Mshowa
MathSubEnd
P
% End of sub-graphic
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
 ImageSize->{288, 150.812},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"Disguising",
 CellLabel->"From In[99]:=",
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztndmO5LYVhjklaWrtdaZnemxgMDYCGMilDfgREiDLZT/AwAhiXyQx2k6u
vLyAr/0Q/ZKdFndRh9ShRGppnQGmVaJYqtLP/3yiKJ3i3z/++O0//vXxx+++
+fjhz/cfv//2u29++PCn/9w/FRUvGHvxgTH2+wdWv358ein/8H+f1X/kSoLX
h3rxU73/V/rV0drEikfx+fyN7Kb+u6mL3vL1r/jWu7uHx4en/7mW/OAfnv7f
5Vsyfkz1UYojlv/YFaDCa63CLV//km/NqcCdUiGvAreAAPtYN9Tf9/7+Ptty
GW7IqcDDgtxAbCA2EBuIDcQGYgOxgdhAbCA2EBu63HBe/+VFhdbjSpeVvM5V
Cl6Iz2XviRULYgV3glPGReEQYV/bG+T/tCiB9jc/s+zqv1VdtNO2OTTL2CkW
LyJeXqcmS8l3e4pVpD56VulXCO9stAACI3Ij06zh32SjBatQ9fkrcRD20Yv3
FTZQhFGfymwIiaPfdQFoI79Gvaq+xlOx+hRV03xKBYZZpVXZaPk2uqyMM9mW
/62gkHt6m1Jx31UrkmRuAGIDHEsyt14MAZl2YylFFP+ZEBA2KSxN0QIdtkwC
sdRt1AZi9w7xIO1qD7WOaTcXpPa63Q6+8lA9uS48vm00j2witRQRIdvFqRPc
Frh7kDZWYgics0+YJFbKBYbHF+D7ME3gW++qB3VKPWEgzylHdNOwFvuZXFPN
UwBb6WyRIAJOgLC7ZcXCvE8VfRtLhwSM+tC2lz366qU2v+mrm7L4vrpAwKuU
tO/bUT/oQ/ZDHuiom864GQxQ3V1jTtlL91bmZU8oxOLZjAs0u+nik7chHEt9
ioZmhVOmvn+wgy6P5tHuqpfGkWhnHYGA32qPnfm2zmxoIQapQ4YWKkCPk1Zr
B2wVCvqHK7Enmz7Dle76UCUZ46IMPMkftF6GZadmGfs8lmW5urDiQvliFHOV
WoRz/cqE4oWu06CRAMVNjhsg8uBfz9BDNNBZL+imSMgNM6DHDNxAN0yJDcQG
YgOxgdhAbCA2EBuIDcQGwA2hLJ/b3CKIK+3b3BqLJm1eeb/hf9+N0QRCXh5e
2QJLDlq8GyNwQT1v+N9PsutZL2GfZkS38mnmM8OcfJrpULVPR+huzNSnxFPi
KfGUeEo8JZ7Oz6fEU+Ip8ZR4SjwlnhJPM0JgZj4lnhJP583TqxQ8bTzB2mTp
VQq59BOsEEcvax15hWqWTiWizpWo1v6yEdV1gDgeo6e6VbaZmXePMZSV8XmI
Iyy6utj7MQau4lF0K/m4qey2/su3HuQxIzWGMp1w9i1d0KrcAptldsKu4qhK
2LXqQcyunLfau7ObSuyudDFaar1CuccloKWTNwCm+FaQvibH+E5/VF2uc4wt
DXWOcdu2fZkLRGZq5rrAwgKMyYScYF4a4Oh2FvAxEtNuvYj3dWK6Sw21HqjX
iemuRlXriHoy26xvlhqEdzh9y811ZAyTEfwe2gbFB9iWvvJQvWGd8YjTSftU
geuMA1TEvq9XuJVTRhhGAN96oF7nEIjbjr51RL3RIswkufnzio8x8WP6AciW
pPOUFPsANMCeTlKLO0npnl8wJxm+dgmdfPq0sRtbcdcupfQqoj6LvHApI6oz
ec1iJWEDWfqFOthRrlmOrTNF4FQLDgKJvvy5DpHQKRpoNLVLu72g66ZSKwfl
ZBeAmibH2Z/3DF+16KxrU26yri3c66zrdKeCnsuRhonOAaRsAeljh46w9VLg
vscyGvd9l/WnbAGNzwGNz739nG4kR+iLRvJzGbTnGfhWbjnk7D3GsdI1532d
7RlUEtC5TKNmCQ/EXScRlPcRlJiXURYuXYF1bnl2By+f0s91MD+GyKmWzKPn
9Dedlk/aOfk006HS4ybEU+Ip8ZR4mmZJPCWeEk+Jp8TTNEviKfGUeDpvnnb/
0kTGL6MsnNlD9q9tqEHvN/zvu5y20miyLZzpULWFR7APqCf/wRpp4RHCaJU+
zdwjWZ1PR+iWrNKnxNO0PiWeEk+X4FPiKfF0CT4lnhJPl+BT4inxdAk+JZ4S
T+fqUzM7t8g9vU6lbOgnBVbpVqLqcLeK2cLf22Xyf3p9GWtlAzV8e8D6VmWp
RNl1j6neK/WEZ4i15tlWCpuJxsUD2P4UFWDJ+vySgP2ktfVdoyfIbs7TZ+e+
t8QdnBLPn5P25uRXgK64ucpFJk0Fac4G/gBBT+a69ZDvi2GuCywswJSXw3Nz
qwYITVd7iMS0Wy/ifV5M2+u2yL7yQD0vpjH7xX4vFQoicXHo/Nv+xEe3rXDJ
lqos7lQBIB9cR9R7vuHWmt47NsKQJ4aB3fZ2+qbHySo/FSG7zk9FBlafLHYo
ETg8b3eVOVoCwyOodUS9ZxktZ0Bb7QbEzdzOTD1aIvrM1LcpTCTFT/e9fWZn
n6VeqBx1hxo625hZ1kWMxF2oRP5ygOcaJW6CcNQFSors91J/WSj33nt10jHn
+inqZHCH/3GBRPCPcm0/+Ee4Fxq9gKZv30UCPscIUZ/DHAL4CBmDgL/0doaa
GkMTwYup3sPj8y5YB4wkNTy+x6ghlTzr43H53h0uFnrnyEMe5zDeGCyPOVJf
2I6RB3edytl6kKnVRMnz4rG+NnPQX2if+3425jqJ3v1p3XNJY/eplpOP3dMd
0fw+pTuiaX1KT5gQT5fgU+Ip8XQJPiWeEk+X4FPiKfF0CT4lnhJPl+BT4inx
dAk+HZmnoR+XAH4Bgyv1lq9/lbNJbMmyyqFs9vbR3KCR/9gVoMJrrYJoyC9z
h7mKw9wK3AIC7OfohpwQVyfH+bshswKLcQOxgdhAbCA2EBuIDcQGYgOxgdjw
vNjwx6WwQT0PDB08z5q1crwX4AkiRGpCuPtj9YEx5ks8CYxFmcm991qZfbPM
M9unZykfer/JQQ35+OMplhj86VVgfnO/TcLzdBdaqipYrzEDkznk6LxlOC3D
AU0jp1iOo+sHXS1RGjnFlkiVFqk7qRkNHc9M24em13xJv3GIcgMZG9hYRLn1
YtAmWtEfoXtAVuHLlNNgux7XFh2a8fs1/H5PY9iN6isP1euiKkBHcB1RT5xj
+84Y24/GJifXRIiVpzteUCBv1g3qy6UMivDM1QbapW9rx6zX7dw7j3sFYf/g
NXNMt9Et960j6o1sZmj26p1uhJNvK1EfTX3dUwkFhGX5+PRZMTN1u5McwjYG
5zGd5OXi3MxCbXB+aJbNqHOt0npj8M171sAs3LaXAb9681mdnnXHnNOtnnVc
wu3lIBDr6/Rm77pyykQcss6M3JGu47F4nOo6/qwVfe682H5rQZPgGkNdec/r
YbzFXOOnwNsA9XaAeGeAeBHuav/yimcprjS/6G2uMQYO66x3aELq9JYqbAuZ
B8wyWMo6Rjs5NIFcW63WxZiE6rsci1DrGmkEFKB7EXSfku5TEhuIDcQGYgOx
gdhAbCA2EBsysYEvfn7kV7bq1bFzU9NDYoe1emLwbZ1EsVRYNVHEpsbPQPJa
bL14sSQp1oUXyBrXQNmKeyK2KK14WTdErhxR5L8Vd1T8ZSvrt0B2uQRlmcow
c6LLZSCQ1o0Y4w9+50mDlz9d4FYuiD6xkpnK62ZT4ZT59CqJVxFqmYBcN8VK
oOwlUFYRwCLUMrE4dobTQEXEowoVKFKPDCd/TEKqvZzMY3MnWDgil0wwd3+s
R8aU0MPbuYCCdqsrj59UhQxH+TDkKRZmMUlVPZQzQTp1jpWtFTTliToiSyOd
Y+VoljjHSmyCynZN302fYIWJU7deDDFFE/oDuvuBP7+YJoiXni2FJCO4jqg3
2uP1dkwAZRPnTWEgGgFosJOUwuuQfgYcs82S8kiCWkfUG9nE4qKxNfDFK5lz
4ByypZaC8JCipjO7lIyo54XsLVDmXog8PtoXHePnS2H7zSpfKgbbMflScYqZ
oYBJM6cwcH4w0wnafWZoTvREmVNik/fqNukIJxapU40P9MuwilPQjHrOIesK
g9ABig7KuvJrGB7vGzk7q29XNYaNMdlZcbJh7FjY9suasWUdt8DgdSoJe2Rs
Wb7qEJI1uk9rHjnFquWOzi9z5HT4vR+ou+J2a6Z11xh46zsu71NrOnfN6771
xqeXd6R59QCLkmy9d7Are5OOu1crpRSsxvVqKdQcYGLMerB+XWxpCWEiZG3E
aJ6hb1ZKiqYK0+WbTEwIfsxv1gkFfsQ3k7X8xByAp4L6XMvxm371b7GJ7+Kz
tK9/rheF/jj+SsQn+8UJ03rtN6BMPJTNbz6Zmybuq7/qV07H0b29CJXVa+/y
7v4CcxB/A3Z2BHYGPeIZ/v5D9iy/+j991XmXDLo2/G/0O2RTnwFvhC5IobK/
II8U+vhPJ/pcediieqsjs4kq5t8Dcuor34bbaT72wjpofZ/IffVrcOv/xC74
bjs4xF78H751EU4=\
\>"],
 ImageRangeCache->{{{0, 287}, {149.812, 0}} -> {-0.0536619, -0.0261961, \
0.0073426, 0.0073426}, {{7.25, 137}, {146.188, 3.5625}} -> {-1.42043, \
-0.28431, 0.0404912, 0.0404912}, {{149.938, 279.688}, {146.188, 3.5625}} -> \
{-7.19803, -0.28431, 0.0404912, 0.0404912}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "5.4.5 A look at some functions in ",
 StyleBox["LabCode",
  FontFamily->"Courier"]
}], "Subsubsection",
 CellTags->{"LabCode", "i:37"}],

Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{
      StyleBox["CollectOrders", "MR"], 
      StyleBox["[", "MR"], 
      RowBox[{
       StyleBox["Orders", "MR"], 
       StyleBox["[", "MR"], 
       StyleBox["G", "TI"], 
       StyleBox["]", "MR"]}], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       StyleBox[
        RowBox[{
        "given", " ", "the", " ", "output", " ", "of", " ", "the", " "}],
        SingleLetterItalics->False], 
       StyleBox["Orders", "MR"], 
       StyleBox[" ",
        SingleLetterItalics->False], 
       StyleBox["function",
        SingleLetterItalics->False]}], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      RowBox[{
       StyleBox["(",
        SingleLetterItalics->False], 
       RowBox[{
        StyleBox["equivalently",
         SingleLetterItalics->False], 
        StyleBox[",",
         SingleLetterItalics->False], 
        StyleBox[" ",
         SingleLetterItalics->False], 
        RowBox[{
         StyleBox["OrderOfAllElements", "MR"], 
         StyleBox[
          RowBox[{")", ",", " ", 
           RowBox[{
           "this", " ", "function", " ", "organizes", " ", "the", " ", "data",
             " ", "in", " ", "the", " ", "form", " ", "{"}]}],
          SingleLetterItalics->False], 
         StyleBox[
          FormBox["p",
           TraditionalForm], "Text"], 
         StyleBox[
          RowBox[{",", " "}],
          SingleLetterItalics->False], 
         StyleBox[
          FormBox["A",
           TraditionalForm], "Text"], 
         StyleBox[
          RowBox[{
           RowBox[{"}", " ", "where"}], " "}],
          SingleLetterItalics->False], 
         StyleBox[
          FormBox["p",
           TraditionalForm], "Text"], 
         StyleBox[
          RowBox[{" ", 
           RowBox[{
           "is", " ", "one", " ", "of", " ", "the", " ", "possible", " ", 
            "orders", " ", "and", " "}]}],
          SingleLetterItalics->False], 
         StyleBox[
          FormBox["A",
           TraditionalForm], "Text"], 
         StyleBox[
          RowBox[{" ", 
           RowBox[{
           "is", " ", "the", " ", "set", " ", "of", " ", "elements", " ", 
            "in", " "}]}],
          SingleLetterItalics->False], 
         StyleBox[
          FormBox["G",
           TraditionalForm], "Text"], 
         StyleBox[
          RowBox[{" ", 
           RowBox[{"with", " ", "order", " "}]}],
          SingleLetterItalics->False], 
         StyleBox[
          FormBox["p",
           TraditionalForm], "Text"]}]}]}]}]},
    {
     RowBox[{
      StyleBox["ShowGroupOrders", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox["G", "TI"], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         StyleBox[
          RowBox[{"return", " ", "a", " "}],
          SingleLetterItalics->False], 
         StyleBox["ListPlot", "MR"], 
         StyleBox[
          RowBox[{" ", 
           RowBox[{"showing", " ", "pairs", " ", "{"}]}],
          SingleLetterItalics->False], 
         StyleBox[
          FormBox["g",
           TraditionalForm], "Text"]}], 
        StyleBox[",",
         SingleLetterItalics->False], 
        StyleBox[
         FormBox[
          RowBox[{" ", 
           RowBox[{
            StyleBox["|",
             SingleLetterItalics->False], " ", 
            StyleBox["g",
             SingleLetterItalics->False], 
            StyleBox["|",
             SingleLetterItalics->False]}]}],
          TraditionalForm], "Text"]}], 
       StyleBox["}",
        SingleLetterItalics->False]}], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["and",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["a",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["bar",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["chart",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["indicating",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["how",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["many",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["elements",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["there",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["are",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["for",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["each",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["order",
       SingleLetterItalics->False]}]},
    {
     RowBox[{
      StyleBox["ShowColoredPermutation", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox["p", "TI"], 
      StyleBox["]", "MR"]}], 
     StyleBox[
      RowBox[{
       StyleBox[
        RowBox[{
        "give", " ", "a", " ", "graphical", " ", "illustration", " ", "of", 
         " ", "the", " ", "permutation", " "}],
        SingleLetterItalics->False], 
       FormBox["p",
        TraditionalForm]}], "Text"]}
   }], NotebookDefault]], "DefinitionBox",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.39], {
      Scaled[0.61]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellTags->{"LabCode", "i:38"}],

Cell[TextData[{
 "Miscellaneous functions from ",
 StyleBox["LabCode",
  FontFamily->"Courier"],
 " that may be of interest."
}], "Caption",
 CellTags->"LabCode"],

Cell[TextData[{
 "This function organizes the data regarding the orders of the elements in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[DoubleStruckCapitalZ]", "15"], TraditionalForm]]],
 "."
}], "MathCaption",
 CellTags->"LabCode"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CollectOrders", "[", 
  RowBox[{"Orders", "[", 
   RowBox[{"Z", "[", "15", "]"}], "]"}], "]"}]], "Input",
 CellTags->"LabCode",
 CellLabel->"In[100]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", "0", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "10"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "6", ",", "9", ",", "12"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "2", ",", "4", ",", "7", ",", "8", ",", "11", ",", "13", ",", 
       "14"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellTags->"LabCode",
 CellLabel->"Out[100]="]
}, Open  ]],

Cell["\<\
Here are two graphical ways of considering the same question.\
\>", "MathCaption",
 CellTags->"LabCode"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowGroupOrders", "[", 
  RowBox[{"Z", "[", "15", "]"}], "]"}]], "Input",
 CellChangeTimes->{3.408836470548108*^9},
 CellTags->"LabCode",
 CellLabel->"In[101]:="],

Cell[CellGroupData[{

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0 0.0666667 0 0.0412023 [
[.06667 -0.0125 -3 -9 ]
[.06667 -0.0125 3 0 ]
[.13333 -0.0125 -3 -9 ]
[.13333 -0.0125 3 0 ]
[.2 -0.0125 -3 -9 ]
[.2 -0.0125 3 0 ]
[.26667 -0.0125 -3 -9 ]
[.26667 -0.0125 3 0 ]
[.33333 -0.0125 -3 -9 ]
[.33333 -0.0125 3 0 ]
[.4 -0.0125 -3 -9 ]
[.4 -0.0125 3 0 ]
[.46667 -0.0125 -3 -9 ]
[.46667 -0.0125 3 0 ]
[.53333 -0.0125 -3 -9 ]
[.53333 -0.0125 3 0 ]
[.6 -0.0125 -3 -9 ]
[.6 -0.0125 3 0 ]
[.66667 -0.0125 -3 -9 ]
[.66667 -0.0125 3 0 ]
[.73333 -0.0125 -6 -9 ]
[.73333 -0.0125 6 0 ]
[.8 -0.0125 -6 -9 ]
[.8 -0.0125 6 0 ]
[.86667 -0.0125 -6 -9 ]
[.86667 -0.0125 6 0 ]
[.93333 -0.0125 -6 -9 ]
[.93333 -0.0125 6 0 ]
[1 -0.0125 -6 -9 ]
[1 -0.0125 6 0 ]
[-0.0125 .0412 -6 -4.5 ]
[-0.0125 .0412 0 4.5 ]
[-0.0125 .61803 -12 -4.5 ]
[-0.0125 .61803 0 4.5 ]
[-0.0125 .61803 -12 -4.5 ]
[-0.0125 .61803 0 4.5 ]
[-0.0125 .20601 -6 -4.5 ]
[-0.0125 .20601 0 4.5 ]
[-0.0125 .61803 -12 -4.5 ]
[-0.0125 .61803 0 4.5 ]
[-0.0125 .12361 -6 -4.5 ]
[-0.0125 .12361 0 4.5 ]
[-0.0125 .20601 -6 -4.5 ]
[-0.0125 .20601 0 4.5 ]
[-0.0125 .61803 -12 -4.5 ]
[-0.0125 .61803 0 4.5 ]
[-0.0125 .61803 -12 -4.5 ]
[-0.0125 .61803 0 4.5 ]
[-0.0125 .20601 -6 -4.5 ]
[-0.0125 .20601 0 4.5 ]
[-0.0125 .12361 -6 -4.5 ]
[-0.0125 .12361 0 4.5 ]
[-0.0125 .61803 -12 -4.5 ]
[-0.0125 .61803 0 4.5 ]
[-0.0125 .20601 -6 -4.5 ]
[-0.0125 .20601 0 4.5 ]
[-0.0125 .61803 -12 -4.5 ]
[-0.0125 .61803 0 4.5 ]
[-0.0125 .61803 -12 -4.5 ]
[-0.0125 .61803 0 4.5 ]
[.5 .63053 -15 0 ]
[.5 .63053 15 9 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.06667 0 m
.06667 .00625 L
s
[(0)] .06667 -0.0125 0 1 Mshowa
.13333 0 m
.13333 .00625 L
s
[(1)] .13333 -0.0125 0 1 Mshowa
.2 0 m
.2 .00625 L
s
[(2)] .2 -0.0125 0 1 Mshowa
.26667 0 m
.26667 .00625 L
s
[(3)] .26667 -0.0125 0 1 Mshowa
.33333 0 m
.33333 .00625 L
s
[(4)] .33333 -0.0125 0 1 Mshowa
.4 0 m
.4 .00625 L
s
[(5)] .4 -0.0125 0 1 Mshowa
.46667 0 m
.46667 .00625 L
s
[(6)] .46667 -0.0125 0 1 Mshowa
.53333 0 m
.53333 .00625 L
s
[(7)] .53333 -0.0125 0 1 Mshowa
.6 0 m
.6 .00625 L
s
[(8)] .6 -0.0125 0 1 Mshowa
.66667 0 m
.66667 .00625 L
s
[(9)] .66667 -0.0125 0 1 Mshowa
.73333 0 m
.73333 .00625 L
s
[(10)] .73333 -0.0125 0 1 Mshowa
.8 0 m
.8 .00625 L
s
[(11)] .8 -0.0125 0 1 Mshowa
.86667 0 m
.86667 .00625 L
s
[(12)] .86667 -0.0125 0 1 Mshowa
.93333 0 m
.93333 .00625 L
s
[(13)] .93333 -0.0125 0 1 Mshowa
1 0 m
1 .00625 L
s
[(14)] 1 -0.0125 0 1 Mshowa
0 0 m
1 0 L
s
0 .0412 m
.00625 .0412 L
s
[(1)] -0.0125 .0412 1 0 Mshowa
0 .61803 m
.00625 .61803 L
s
[(15)] -0.0125 .61803 1 0 Mshowa
0 .61803 m
.00625 .61803 L
s
[(15)] -0.0125 .61803 1 0 Mshowa
0 .20601 m
.00625 .20601 L
s
[(5)] -0.0125 .20601 1 0 Mshowa
0 .61803 m
.00625 .61803 L
s
[(15)] -0.0125 .61803 1 0 Mshowa
0 .12361 m
.00625 .12361 L
s
[(3)] -0.0125 .12361 1 0 Mshowa
0 .20601 m
.00625 .20601 L
s
[(5)] -0.0125 .20601 1 0 Mshowa
0 .61803 m
.00625 .61803 L
s
[(15)] -0.0125 .61803 1 0 Mshowa
0 .61803 m
.00625 .61803 L
s
[(15)] -0.0125 .61803 1 0 Mshowa
0 .20601 m
.00625 .20601 L
s
[(5)] -0.0125 .20601 1 0 Mshowa
0 .12361 m
.00625 .12361 L
s
[(3)] -0.0125 .12361 1 0 Mshowa
0 .61803 m
.00625 .61803 L
s
[(15)] -0.0125 .61803 1 0 Mshowa
0 .20601 m
.00625 .20601 L
s
[(5)] -0.0125 .20601 1 0 Mshowa
0 .61803 m
.00625 .61803 L
s
[(15)] -0.0125 .61803 1 0 Mshowa
0 .61803 m
.00625 .61803 L
s
[(15)] -0.0125 .61803 1 0 Mshowa
0 0 m
0 .61803 L
s
[(Z[15])] .5 .63053 0 -1 Mshowa
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
0 0 1 r
.025 w
.06667 .0412 Mdot
.13333 .61803 Mdot
.2 .61803 Mdot
.26667 .20601 Mdot
.33333 .61803 Mdot
.4 .12361 Mdot
.46667 .20601 Mdot
.53333 .61803 Mdot
.6 .61803 Mdot
.66667 .20601 Mdot
.73333 .12361 Mdot
.8 .61803 Mdot
.86667 .20601 Mdot
.93333 .61803 Mdot
1 .61803 Mdot
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
 ImageSize->{288, 177.938},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"LabCode",
 CellLabel->"From In[101]:=",
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztWc1O3DAQ9iZmWe0PFPVSqSBtVQkOy8IL0Cs9IfoCrbRCleCAQJQr4ga9
9GF4t1biFuJxNN4136ROGsJK9R6cyfeNZ+zx2F47R7Pr0+/ns+uzk9n489Xs
8vTs5Mf48OIqh9KOUp2xUuphrIyc5WJR0O+DKYqXQt4xj8TorBkpNdLISJql
FLAOo7rrZIzArPhZPc9ynyXNbI+xlKXVRUwDzNPTLA1tx7bpoeebxG1BLfWw
NwAbAgz1vB/ueohVkfcewBJcHammAFsN1EP2VgIxDbCBbWeFIUKYGHothVAY
GGRoUNI2l8ovPxwofEgvdDgSDlD1eYLiRFYSXhfmWCWsGuLMcmvF8+a0FG0U
sa5kL5G8JSASNjpVol1hafCjowSTaKHbEO09cz3CcEtjU8FkpcmAB8rbF90u
5+1oa4uYt2t6O6lnpc/SCks9ljTARD23G3p6RXeoe2D7l+R35vHo8s0CAekU
mnb/px4MI5Xd5eVpITJJnP2xSpQSKecZ2jm7Rv23VUcrjPivIKgiQS34CQoE
TTO0Sfxr3CO/PHx5yn8zJSXGMUtfbMW3QN3fdszbV+ssR45YOv6LCYJKKlJe
J1Kj63gMN1E7YK890pFvnv9kShrkPZamANu3Jspz58A6y5FdliYA27PGQnO5
KbMEVTTWaIfRAQGZrTMo9FcWbY2ZbUW2rBkY+chHPvKRj3zkIx/5yEe+Hu8+
4roPseiAsWlKOkLwNXi2xdIUsFOg59jiCnUAXIVc7pu397YbOeIuAR02AewE
6Dl2VKNJBLXYEOf0Y8tOPeyF3LuvKHQw1dzT5lPvF7tyN7+3c5TXYXQSv7Hq
d9xU9PnLDVn5DCuM3XuUEswiLHTmCK4ksw24+hmoXh7AkrDdgbChuw3RQUD/
8HAni5IG7K2tSFaKb3Kq8wTwmEMn\
\>"],
 ImageRangeCache->{{{0, 287}, {176.938, 0}} -> {-1.48449, -1.18721, \
0.0606876, 0.0981946}}],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: 1.83983 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.21645 0 0.21645 [
[.24026 -0.0125 -3 -9 ]
[.24026 -0.0125 3 0 ]
[.45671 -0.0125 -3 -9 ]
[.45671 -0.0125 3 0 ]
[.67316 -0.0125 -3 -9 ]
[.67316 -0.0125 3 0 ]
[.88961 -0.0125 -6 -9 ]
[.88961 -0.0125 6 0 ]
[1.025 0 0 -4.5 ]
[1.025 0 36 4.5 ]
[.09789 .21645 -6 -4.5 ]
[.09789 .21645 0 4.5 ]
[.09789 .4329 -6 -4.5 ]
[.09789 .4329 0 4.5 ]
[.09789 .8658 -6 -4.5 ]
[.09789 .8658 0 4.5 ]
[.09789 1.7316 -6 -4.5 ]
[.09789 1.7316 0 4.5 ]
[.11039 1.86483 -27 0 ]
[.11039 1.86483 27 9 ]
[ 0 0 0 0 ]
[ 1 1.83983 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.24026 0 m
.24026 .00625 L
s
[(1)] .24026 -0.0125 0 1 Mshowa
.45671 0 m
.45671 .00625 L
s
[(3)] .45671 -0.0125 0 1 Mshowa
.67316 0 m
.67316 .00625 L
s
[(5)] .67316 -0.0125 0 1 Mshowa
.88961 0 m
.88961 .00625 L
s
[(15)] .88961 -0.0125 0 1 Mshowa
0 0 m
1 0 L
s
[(orders)] 1.025 0 -1 0 Mshowa
.11039 .21645 m
.11664 .21645 L
s
[(1)] .09789 .21645 1 0 Mshowa
.11039 .4329 m
.11664 .4329 L
s
[(2)] .09789 .4329 1 0 Mshowa
.11039 .8658 m
.11664 .8658 L
s
[(4)] .09789 .8658 1 0 Mshowa
.11039 1.7316 m
.11664 1.7316 L
s
[(8)] .09789 1.7316 1 0 Mshowa
.11039 0 m
.11039 1.83983 L
s
[(frequency)] .11039 1.86483 0 -1 Mshowa
0 0 m
1 0 L
1 1.83983 L
0 1.83983 L
closepath
clip
newpath
1 .75 0 r
.15368 0 m
.15368 .21645 L
.32684 .21645 L
.32684 0 L
F
0 g
.5 Mabswid
.15368 0 m
.15368 .21645 L
.32684 .21645 L
.32684 0 L
.15368 0 L
s
.5 1 0 r
.37013 0 m
.37013 .4329 L
.54329 .4329 L
.54329 0 L
F
0 g
.37013 0 m
.37013 .4329 L
.54329 .4329 L
.54329 0 L
.37013 0 L
s
0 1 1 r
.58658 0 m
.58658 .8658 L
.75974 .8658 L
.75974 0 L
F
0 g
.58658 0 m
.58658 .8658 L
.75974 .8658 L
.75974 0 L
.58658 0 L
s
1 0 0 r
.80303 0 m
.80303 1.7316 L
.97619 1.7316 L
.97619 0 L
F
0 g
.80303 0 m
.80303 1.7316 L
.97619 1.7316 L
.97619 0 L
.80303 0 L
s
[(1)] .24026 .30844 0 0 Mshowa
[(2)] .45671 .52489 0 0 Mshowa
[(4)] .67316 .95779 0 0 Mshowa
[(8)] .88961 1.82359 0 0 Mshowa
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
 ImageSize->{156.5, 288},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"LabCode",
 CellLabel->"From In[101]:=",
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXN1u0zAUTuOk/LRjWwvbxSQoN0NIwASDJ0ACgcQlD1BNQHuBQGMXcLPX
2M2eYC8Z4mPXSd1jt2mbLE2/Sou94+PvO39OFTfyl+HF6NvP4cX4bDj4eD78
PRqf/Rl8+HWeikQrCILrIGgNBoHsJ+m/+nKdpJ90EI2vOZaNkBHrm17P9PZM
T5jeiZr4jBqSJPoTPGJkPUb2gJHFjOxFLagoMOF0YPYZvXDZEO0yMieBJdNU
x8bGh8YKsjaSvV0zGhnZKzXxn1EPzRDlOqZVJBSLXlOhS5bNVTYGf3Wgc6ZO
ZrFuKNkdTt/MazPzKJUtKWqpHumSv9+NK4XtaLvsiBPfvHwAjqg54IFupGz5
dpLHNMMS7msqukmWbw2ccklzpSsn8Feg+pMrjAKd15sb9jBLjj/pgg22Y0Dk
Y8+z78kosl7VNpiEly1RfhEm+fKzlaO88rTqtldqnymj/UaWUc/UQx+JT/SX
c9OSPOUVUovUIrVILVJbE6+QWqQWqUVqkdqaeLXlqc32CqNGJpnbbBVIvC8w
kR2YXhO8mpYdwpvbudXQ7hP368tm+HAEy2H5llp+V15J1N1YH+4xsg68gTfw
Zv7ap+/unY31YXPvvLAclsPyulhOzzHZW1Ib6UOzniwPGMu5V7TIm16Jhqhw
8XtoJ+VQUjVaezaO0nxZjgVUS6Ed1ZJJudsHqFakeiyvVEqd6kifMLIK6QeM
7H519E8ZWf7RoYqMz949qk4/3T261ZE2c/mCClSgAhWoQAUqUIEKVKCaQ0W7
F0INV0a66IZVSfT+HUwindklWxQ2NxTYEFr9fS1g/dtWBcG4gm0MxFt5JVF3
dbB3jKyzOuypvEZrsvHUksmK26ktLKUn99vsbZcLIAABCEAAAhCAAAQgAAEI
QAACEIAABCAAUSrEWnd2C7xfWTIybck/X8TFy8IElwVguQxVOfTZGPnGrfSJ
9/31OmfMGPLDCzGy1fX5qxR0mkSvDxPHWA0dMqycbKSZvOdyCtPLZNYMYY3O
nBqYQQpXKakgsD9n8Sc5uvT8p0KGfKxjXqy0Fz8EdBkn7ONSOe9cfGpuPOWl
T982QuqN5ti89IGbnnAXVo3zqrbpzvp1HniZVWGbLeeJClfnzmme5F/lhmhE
C2pxkHOdmqD1H0pXpuM=\
\>"],
 ImageRangeCache->{{{0, 155.5}, {287, 0}} -> {-0.833421, -2.27642, 0.0456816, \
0.0456816}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5.4.6 Potpourri", "Subsubsection",
 CellTags->"Potpourri"],

Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{
      StyleBox["GaussianIntegerQ", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox["z", "TI"], 
      StyleBox["]", "MR"]}], 
     StyleBox[
      RowBox[{
       StyleBox[
        RowBox[{"give", " "}],
        SingleLetterItalics->False], 
       StyleBox["True", "MR"], 
       StyleBox[
        RowBox[{" ", 
         RowBox[{"if", " ", "the", " ", "complex", " ", "number", " "}]}],
        SingleLetterItalics->False], 
       FormBox["z",
        TraditionalForm], 
       StyleBox[
        RowBox[{" ", 
         RowBox[{
          RowBox[{"is", " ", "a", " ", "Gaussian", " ", "integer", " ", 
           RowBox[{"(", 
            RowBox[{
            "real", " ", "and", " ", "imaginary", " ", "parts", " ", "are", 
             " ", "integers"}], ")"}]}], ",", " ", "and", " "}]}],
        SingleLetterItalics->False], 
       StyleBox["False", "MR"], 
       StyleBox[
        RowBox[{" ", "otherwise"}],
        SingleLetterItalics->False]}], "Text"]},
    {
     RowBox[{
      StyleBox["ComplexToPoint", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox["z", "TI"], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      StyleBox[
       RowBox[{"given", " ", "a", " ", "complex", " ", "number", " "}],
       SingleLetterItalics->False], 
      StyleBox[
       FormBox[
        RowBox[{"z", ","}],
        TraditionalForm], "Text"], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["return",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      RowBox[{
       StyleBox["{",
        SingleLetterItalics->False], 
       RowBox[{
        StyleBox["Re", "MR"], 
        StyleBox["[", "Text"], 
        RowBox[{
         StyleBox[
          FormBox["z",
           TraditionalForm], "Text"], 
         StyleBox[
          RowBox[{
           RowBox[{"]", ","}], " "}],
          SingleLetterItalics->False], 
         RowBox[{
          StyleBox["Im", "MR"], 
          StyleBox["[", "Text"], 
          RowBox[{
           StyleBox[
            FormBox["z",
             TraditionalForm], "Text"], 
           StyleBox[
            RowBox[{"]", "}"}],
            SingleLetterItalics->False]}]}]}]}]}]}]},
    {
     RowBox[{
      StyleBox["IntegerLatticeGrid", "MR"], 
      StyleBox["[", "MR"], 
      RowBox[{
       StyleBox[
        FormBox[
         RowBox[{
          StyleBox["{", "MR"], 
          RowBox[{"a", 
           StyleBox[",", "MR"], " ", "b"}], 
          StyleBox["}", "MR"]}],
         TraditionalForm], "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox[
        FormBox[
         RowBox[{
          StyleBox["{", "MR"], 
          RowBox[{"c", 
           StyleBox[",", "MR"], " ", "d"}], 
          StyleBox["}", "MR"]}],
         TraditionalForm], "TI"], 
       StyleBox[",", "MR"], " ", 
       StyleBox["opts", "TI"]}], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      StyleBox[
       RowBox[{"return", " ", "a", " "}],
       SingleLetterItalics->False], 
      StyleBox["ListPlot", "MR"], 
      StyleBox[
       RowBox[{" ", 
        RowBox[{
        "of", " ", "an", " ", "integer", " ", "lattice", " ", "with", " ", 
         "domain", " "}]}],
       SingleLetterItalics->False], 
      StyleBox[
       FormBox[
        StyleBox[
         RowBox[{
          StyleBox["a",
           FontSlant->"Italic"], 
          StyleBox[" ",
           FontSlant->"Italic"], "\[LessEqual]", " ", 
          StyleBox["x",
           FontSlant->"Italic"], 
          StyleBox[" ",
           FontSlant->"Italic"], "\[LessEqual]", " ", 
          StyleBox["b",
           FontSlant->"Italic"]}],
         SingleLetterItalics->False],
        TraditionalForm], "Text"], 
      StyleBox[" ", "Text",
       SingleLetterItalics->False], 
      StyleBox["and",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox[
       FormBox[
        StyleBox[
         RowBox[{
          StyleBox["c",
           FontSlant->"Italic"], 
          StyleBox[" ",
           FontSlant->"Italic"], "\[LessEqual]", " ", 
          StyleBox["y",
           FontSlant->"Italic"], 
          StyleBox[" ",
           FontSlant->"Italic"], "\[LessEqual]", " ", 
          StyleBox["d",
           FontSlant->"Italic"]}],
         SingleLetterItalics->False],
        TraditionalForm], "Text"], 
      StyleBox[
       RowBox[{" ", 
        RowBox[{"with", " ", "options", " "}]}],
       SingleLetterItalics->False], 
      StyleBox["opts",
       FontSlant->"Italic"], 
      StyleBox[
       RowBox[{" ", 
        RowBox[{"to", " ", "be", " ", "used", " ", "by", " "}]}],
       SingleLetterItalics->False], 
      StyleBox["ListPlot", "MR"]}]},
    {
     RowBox[{
      StyleBox["ESG", "MR"], 
      StyleBox["[", "MR"], 
      StyleBox["code", "TI"], 
      StyleBox["]", "MR"]}], 
     RowBox[{
      StyleBox[
       RowBox[{
       "return", " ", "the", " ", "group", " ", "corresponding", " ", "to", 
        " "}],
       SingleLetterItalics->False], 
      StyleBox["code",
       FontSlant->"Italic"], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["as",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["found",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["in",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["the",
       SingleLetterItalics->False], 
      StyleBox[" ",
       SingleLetterItalics->False], 
      StyleBox["Exploring",
       FontSlant->"Italic"], 
      StyleBox[" ",
       FontSlant->"Italic"], 
      StyleBox["Small",
       FontSlant->"Italic"], 
      StyleBox[" ",
       FontSlant->"Italic"], 
      StyleBox["Groups",
       FontSlant->"Italic"], 
      StyleBox[" ",
       FontSlant->"Italic"], "software", " ", "package"}]}
   }], NotebookDefault]], "DefinitionBox",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.34], {
      Scaled[0.66]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellTags->{"Potpourri", "i:39"}],

Cell["Miscellaneous functions.", "Caption",
 CellTags->"Potpourri"],

Cell["\<\
A complex number is a Gaussian integer if its real and imaginary parts are \
integers.\
\>", "MathCaption",
 CellTags->"Potpourri"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"GaussianIntegerQ", ",", " ", 
   RowBox[{"nums", " ", "=", 
    RowBox[{"{", 
     RowBox[{"3", ",", " ", 
      RowBox[{"3", "-", 
       RowBox[{"2", "I"}]}], ",", " ", 
      RowBox[{"3.5", " ", "+", " ", 
       RowBox[{"4.3", "I"}]}], ",", " ", 
      RowBox[{
       RowBox[{"-", "8"}], "I"}]}], "}"}]}]}], "]"}]], "Input",
 CellTags->"Potpourri",
 CellLabel->"In[102]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "True", ",", "False", ",", "True"}], "}"}]], "Output",
 CellTags->"Potpourri",
 CellLabel->"Out[102]="]
}, Open  ]],

Cell["\<\
Here are the real and imaginary parts of each of these numbers.\
\>", "MathCaption",
 CellTags->"Potpourri"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"ComplexToPoint", ",", " ", "nums"}], "]"}]], "Input",
 CellTags->"Potpourri",
 CellLabel->"In[103]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     StyleBox["3.5`",
      StyleBoxAutoDelete->True,
      PrintPrecision->2], ",", 
     StyleBox["4.29999999999999982`",
      StyleBoxAutoDelete->True,
      PrintPrecision->2]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "8"}]}], "}"}]}], "}"}]], "Output",
 CellTags->"Potpourri",
 CellLabel->"Out[103]="]
}, Open  ]],

Cell[TextData[{
 "Here is a call to ",
 StyleBox["IntegerLatticeGrid", "MR"],
 " with some options added."
}], "MathCaption",
 CellTags->"Potpourri"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerLatticeGrid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "3"}], "}"}], ",", 
   RowBox[{"Axes", "\[Rule]", "None"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Prolog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], "}"}]}]}], "]"}]], "Input",\

 CellChangeTimes->{3.4088364768316183`*^9},
 CellTags->"Potpourri",
 CellLabel->"In[104]:="],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .375 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.119048 0.00892857 0.119048 [
[ 0 0 0 0 ]
[ 1 .375 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 .375 L
0 .375 L
closepath
clip
newpath
1 0 0 r
.02 w
.02381 .00893 Mdot
.02381 .12798 Mdot
.02381 .24702 Mdot
.02381 .36607 Mdot
.14286 .00893 Mdot
.14286 .12798 Mdot
.14286 .24702 Mdot
.14286 .36607 Mdot
.2619 .00893 Mdot
.2619 .12798 Mdot
.2619 .24702 Mdot
.2619 .36607 Mdot
.38095 .00893 Mdot
.38095 .12798 Mdot
.38095 .24702 Mdot
.38095 .36607 Mdot
.5 .00893 Mdot
.5 .12798 Mdot
.5 .24702 Mdot
.5 .36607 Mdot
.61905 .00893 Mdot
.61905 .12798 Mdot
.61905 .24702 Mdot
.61905 .36607 Mdot
.7381 .00893 Mdot
.7381 .12798 Mdot
.7381 .24702 Mdot
.7381 .36607 Mdot
.85714 .00893 Mdot
.85714 .12798 Mdot
.85714 .24702 Mdot
.85714 .36607 Mdot
.97619 .00893 Mdot
.97619 .12798 Mdot
.97619 .24702 Mdot
.97619 .36607 Mdot
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
 ImageSize->{288, 108},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"Potpourri",
 CellLabel->"From In[104]:=",
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAwKjAwMOQoMIDY/4FM
KAEGiiCCgYENRDGDWPJUZrFDLGAFUawgliyVWWzDxQKaxwFyhI+yqcsezUAD
b8FoBhrC7NEMNPAWjGagYcIezUwDbwEDIwCSH5a/\
\>"],
 ImageRangeCache->{{{0, 287}, {107, 0}} -> {-0.224574, -0.0750155, 0.0294395, \
0.0294395}}]
}, Open  ]],

Cell[TextData[{
 "Here are the two groups of order 4 given by the codes 0401 and 0402 used in \
the program ",
 StyleBox["Exploring Small Groups",
  FontSlant->"Italic"],
 ", written by Ladnor Geissinger."
}], "MathCaption",
 CellTags->"Potpourri"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ESG", "[", "0401", "]"}], ",", 
   RowBox[{"ESG", "[", "0402", "]"}]}], "}"}]], "Input",
 CellTags->"Potpourri",
 CellLabel->"In[105]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Groupoid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"#1", "+", "#2"}], ",", "4"}], "]"}], "&"}]}], "]"}], ",", 
   RowBox[{"Groupoid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "Rot", ",", "Ref", ",", 
       RowBox[{"Rot", "**", "Ref"}]}], "}"}], ",", "\<\"-Operation-\"\>"}], 
    "]"}]}], "}"}]], "Output",
 CellTags->"Potpourri",
 CellLabel->"Out[105]="]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
ScreenStyleEnvironment->"Working",
WindowSize->{1065, 725},
WindowMargins->{{14, Automatic}, {Automatic, 2}},
TaggingRules:>{
 "NextIndexingNumber" -> 45, 
  "IndexEntries" -> {{"i:1", " Global variables and options"}, {
    "i:10", "Cycles"}, {"i:11", "FromCycles"}, {"i:11", "ToCycles"}, {
    "i:13", "Cycle operations"}, {"i:13", "Operations on Cycles"}, {
    "i:14", "MultiplyCycles"}, {"i:15", "DisjointCyclesQ"}, {
    "i:15", "SamePermutationQ"}, {"i:16", "Transpositions"}, {
    "i:17", "ToTranspositions"}, {"i:18", "EvenPermutationQ"}, {
    "i:18", "OddPermutationQ"}, {"i:18", "Parity"}, {"i:19", "FixQ"}, {
    "i:19", "Orbits"}, {"i:19", "PermutationImage"}, {
    "i:19", "Stabilizers"}, {"i:2", "BackgroundColors"}, {
    "i:2", "DefaultOrder"}, {"i:2", "DefaultStructure"}, {"i:2", "Output"}, {
    "i:2", "VisualTextShown"}, {"i:20", "Orbit"}, {"i:20", "Stabilizer"}, {
    "i:21", "Working in Z[Sqrt[d]]"}, {"i:22", "ZdAssociatesQ"}, {
    "i:22", "ZdConjugate"}, {"i:22", "ZdDivide"}, {
    "i:22", "ZdIrreducibleQ"}, {"i:22", "ZdQ"}, {"i:22", "ZdUnitQ"}, {
    "i:23", "Divisibility in Z[Sqrt[d]]"}, {"i:24", "IntegerDivisors"}, {
    "i:25", "ZdDividesQ"}, {"i:25", "ZdDivisors"}, {
    "i:27", "ZdCombineAssociates"}, {"i:29", "ValuesHavingGivenNorm"}, {
    "i:29", "ZdNorm"}, {"i:29", "ZdPossibleNormQ"}, {
    "i:29", "ZdPossibleNorms"}, {"i:31", "CartesianProduct"}, {
    "i:31", "CloseSets"}, {"i:31", "ComplementNoSort"}, {
    "i:31", "ProperSubsetQ"}, {"i:31", "Randomize"}, {"i:31", "SameSetQ"}, {
    "i:31", "UnionNoSort"}, {"i:32", "Graphics Functions"}, {
    "i:33", "DrawNgon"}, {"i:33", "ShowCircle"}, {"i:33", "ShowFigure"}, {
    "i:33", "ShowPermutation"}, {"i:35", "Disguising groups and rings"}, {
    "i:36", "DisguiseGroupoid"}, {"i:36", "DisguiseRingoid"}, {
    "i:37", "LabCode functions"}, {"i:38", "CollectOrders"}, {
    "i:38", "ShowColoredPermutation"}, {"i:38", "ShowGroupOrders"}, {
    "i:39", "ComplexToPoint"}, {"i:39", "ESG"}, {
    "i:39", "GaussianIntegerQ"}, {"i:39", "IntegerLatticeGrid"}, {
    "i:4", "Ordering"}, {"i:4", "PermutationQ"}, {
    "i:4", "RandomPermutation"}, {"i:5", "Operations on Permutations"}, {
    "i:6", "MultiplyPermutations"}, {"i:6", "PermutationComposition"}, {
    "i:7", "ExtendPermutation"}, {"i:7", "PermutationInverse"}, {
    "i:7", "PermutationMatrix"}, {"i:7", "PermutationToPower"}, {
    "i:9", "ToPermutation"}, {
    "i:12", "Cycle", "value for CycleAs option for ToCycles"}, {
    "i:12", "CycleAs", "as an option to ToCycles"}, {
    "i:12", "List", "value for CycleAs option for ToCycles"}, {
    "i:12", "Normalize", "as an option to ToCycles"}, {
    "i:14", "@", "as a short form of MultiplyCycles"}, {
    "i:2", "Graphics", "value for Output option"}, {
    "i:2", "GraphicsArray", "value for Output option"}, {
    "i:2", "RightToLeft", "value of DefaultOrder"}, {
    "i:22", "RandomElement", "as applied to Z[Sqrt[d]]"}, {
    "i:22", "RandomElements", "as applied to Z[Sqrt[d]]"}, {
    "i:25", "DividesQ", "as applied to Z[Sqrt[d]]"}, {
    "i:25", "Radical", "option for DividesQ"}, {
    "i:26", "Associates", "value for Combine option for divisor functions"}, {
    "i:26", "Combine", "as an option with algebraic integers"}, {
    "i:26", "DivisorsComplete", "as an option with algebraic integers"}, {
    "i:26", "Negations", "value for Combine option for divisor functions"}, {
    "i:26", "NonTrivialOnly", "as an option with algebraic integers"}, {
    "i:26", "Products", "value for Combine option for divisor functions"}, {
    "i:28", "Norm-related functions", "in Z[Sqrt[d]]"}, {
    "i:30", "Lists", "functions for working with"}, {
    "i:31", "Partition", "option for CartesianProduct"}, {
    "i:34", "Adjoin", "as applied to algebraic integers"}, {
    "i:36", "Randomize", "option for DisguiseGroupoid"}, {
    "i:40", "permutation", "definition"}, {
    "i:41", "ExtendPermutation", "illustration"}, {
    "i:42", "cycle", "explanation"}, {
    "i:43", "cycles", 
     "functions contrasted with those in DiscreteMath`Permutations`"}, {
    "i:44", "Boggle dictionary", "forming"}, {
    "i:5", "Permutations", "operations"}, {
    "i:8", "Permutations", "representations"}, {
    "i:9", "ToRules", "as applied to permutations"}, {
    "i:24", "DividesQ", "on integers", ""}, {
    "i:3", "Permutations and Cycles", "working with", ""}, {
    "i:31", "SubsetQ", "", ""}}},
MacintoshSystemPageSetup -> \
"00<0001804P000000]P2:?oQon82n@960dL5:0?l0080001804P000000]P2:001\n\
0000I00000400`<300000BL?00400@0000000000000006P801T1T00000000000\n\
00000000000000000000000000000000",
Magnification->1,
FrontEndVersion->"6.0 for Mac OS X x86 (32-bit) (June 19, 2007)",
StyleDefinitions->"HelpBrowser.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Global"->{
  Cell[1396, 57, 191, 8, 78, "Section",
   Evaluatable->False,
   CellTags->"Global"],
  Cell[1590, 67, 191, 4, 33, "Text",
   CellTags->"Global"],
  Cell[2631, 113, 84, 1, 34, "Subsection",
   CellTags->{"Global", "i:1"}],
  Cell[2718, 116, 115, 3, 20, "Text",
   CellTags->"Global"],
  Cell[2836, 121, 4426, 141, 187, "DefinitionBox3Col",
   CellTags->{"Global", "i:2"}],
  Cell[7265, 264, 62, 1, 15, "Caption",
   CellTags->"Global"],
  Cell[7330, 267, 1169, 21, 77, "DefinitionBox",
   CellTags->"Global"],
  Cell[8502, 290, 112, 5, 15, "Caption",
   CellTags->"Global"],
  Cell[8617, 297, 114, 3, 36, "MathCaption",
   CellTags->"Global"],
  Cell[8756, 304, 86, 2, 23, "Input",
   CellTags->"Global"],
  Cell[8845, 308, 76, 2, 22, "Output",
   CellTags->"Global"],
  Cell[8936, 313, 244, 5, 49, "MathCaption",
   CellTags->"Global"],
  Cell[9205, 322, 118, 3, 23, "Input",
   CellTags->"Global"],
  Cell[9326, 327, 76, 2, 22, "Output",
   CellTags->"Global"],
  Cell[9417, 332, 175, 5, 49, "MathCaption",
   CellTags->"Global"],
  Cell[9617, 341, 213, 6, 23, "Input",
   CellTags->"Global"],
  Cell[9833, 349, 10065, 511, 196, 7864, 470, "GraphicsData", 
  "PostScript", "Graphics",
   CellTags->"Global"],
  Cell[19901, 862, 714, 22, 22, "Output",
   CellTags->"Global"],
  Cell[20630, 887, 263, 8, 49, "MathCaption",
   CellTags->"Global"],
  Cell[20918, 899, 319, 8, 23, "Input",
   CellTags->"Global"],
  Cell[21240, 909, 7033, 341, 201, 5278, 308, "GraphicsData", 
  "PostScript", "Graphics",
   CellTags->"Global"],
  Cell[28276, 1252, 178, 6, 22, "Output",
   CellTags->"Global"],
  Cell[28469, 1261, 167, 5, 36, "MathCaption",
   CellTags->"Global"],
  Cell[28661, 1270, 652, 20, 39, "Input",
   CellTags->"Global"],
  Cell[29316, 1292, 22020, 1086, 157, 16536, 992, "GraphicsData", 
  "PostScript", "Graphics",
   CellTags->"Global"],
  Cell[51339, 2380, 183, 6, 22, "Output",
   CellTags->"Global"]},
 "First"->{
  Cell[1806, 75, 59, 1, 34, "Subsection",
   CellTags->"First"],
  Cell[1868, 78, 174, 5, 33, "Text",
   CellTags->"First"],
  Cell[2045, 85, 155, 4, 23, "Input",
   CellTags->"First"],
  Cell[2203, 91, 159, 5, 33, "Text",
   CellTags->"First"],
  Cell[2387, 100, 117, 3, 23, "Input",
   CellTags->"First"],
  Cell[2507, 105, 75, 2, 22, "Output",
   CellTags->"First"]},
 "i:1"->{
  Cell[2631, 113, 84, 1, 34, "Subsection",
   CellTags->{"Global", "i:1"}]},
 "i:2"->{
  Cell[2836, 121, 4426, 141, 187, "DefinitionBox3Col",
   CellTags->{"Global", "i:2"}]},
 "PermIntroduction"->{
  Cell[51571, 2392, 102, 1, 34, "Subsection",
   CellTags->{"PermIntroduction", "i:3"}],
  Cell[51698, 2397, 130, 2, 20, "Subsubsection",
   CellTags->"PermIntroduction"],
  Cell[51831, 2401, 1147, 35, 46, "Text",
   CellTags->{"PermIntroduction", "i:40"}],
  Cell[52981, 2438, 826, 33, 36, "MathCaption",
   CellTags->"PermIntroduction"],
  Cell[53832, 2475, 206, 6, 23, "Input",
   CellTags->"PermIntroduction"],
  Cell[54041, 2483, 147, 4, 22, "Output",
   CellTags->"PermIntroduction"],
  Cell[54203, 2490, 244, 6, 49, "MathCaption",
   CellTags->"PermIntroduction"],
  Cell[54472, 2500, 131, 3, 23, "Input",
   CellTags->"PermIntroduction"],
  Cell[54606, 2505, 212, 8, 52, "Output",
   CellTags->"PermIntroduction"],
  Cell[54833, 2516, 425, 12, 62, "MathCaption",
   CellTags->"PermIntroduction"],
  Cell[55283, 2532, 205, 6, 23, "Input",
   CellTags->"PermIntroduction"],
  Cell[55491, 2540, 87, 2, 22, "Output",
   CellTags->"PermIntroduction"],
  Cell[55593, 2545, 418, 9, 46, "Text",
   CellTags->"PermIntroduction"],
  Cell[56014, 2556, 261, 7, 49, "MathCaption",
   CellTags->"PermIntroduction"],
  Cell[56300, 2567, 236, 6, 23, "Input",
   CellTags->"PermIntroduction"],
  Cell[56539, 2575, 1001, 16, 68, "Output",
   CellTags->"PermIntroduction"],
  Cell[57555, 2594, 2118, 70, 78, "DefinitionBox",
   CellTags->{"PermIntroduction", "i:4"}],
  Cell[59676, 2666, 226, 7, 24, "Caption",
   CellTags->"PermIntroduction"],
  Cell[59905, 2675, 340, 10, 62, "MathCaption",
   CellTags->"PermIntroduction"],
  Cell[60270, 2689, 226, 7, 23, "Input",
   CellTags->"PermIntroduction"],
  Cell[60499, 2698, 138, 4, 22, "Output",
   CellTags->"PermIntroduction"],
  Cell[60652, 2705, 185, 5, 49, "MathCaption",
   CellTags->"PermIntroduction"],
  Cell[60862, 2714, 234, 7, 23, "Input",
   CellTags->"PermIntroduction"],
  Cell[61099, 2723, 138, 4, 22, "Output",
   CellTags->"PermIntroduction"],
  Cell[61252, 2730, 226, 9, 36, "MathCaption",
   CellTags->"PermIntroduction"],
  Cell[61503, 2743, 158, 4, 23, "Input",
   CellTags->"PermIntroduction"],
  Cell[61664, 2749, 138, 4, 22, "Output",
   CellTags->"PermIntroduction"],
  Cell[61817, 2756, 94, 1, 36, "MathCaption",
   CellTags->"PermIntroduction"],
  Cell[61936, 2761, 160, 4, 23, "Input",
   CellTags->"PermIntroduction"],
  Cell[62099, 2767, 86, 2, 22, "Output",
   CellTags->"PermIntroduction"]},
 "i:3"->{
  Cell[51571, 2392, 102, 1, 34, "Subsection",
   CellTags->{"PermIntroduction", "i:3"}]},
 "i:40"->{
  Cell[51831, 2401, 1147, 35, 46, "Text",
   CellTags->{"PermIntroduction", "i:40"}]},
 "i:4"->{
  Cell[57555, 2594, 2118, 70, 78, "DefinitionBox",
   CellTags->{"PermIntroduction", "i:4"}]},
 "PermOperations"->{
  Cell[62234, 2775, 91, 1, 30, "Subsubsection",
   CellTags->{"PermOperations", "i:5"}],
  Cell[62328, 2778, 857, 28, 46, "Text",
   CellTags->"PermOperations"],
  Cell[63188, 2808, 4898, 162, 104, "DefinitionBox",
   CellTags->{"PermOperations", "i:6"}],
  Cell[68089, 2972, 91, 1, 15, "Caption",
   CellTags->"PermOperations"],
  Cell[68183, 2975, 142, 4, 36, "MathCaption",
   CellTags->"PermOperations"],
  Cell[68350, 2983, 285, 8, 23, "Input",
   CellTags->"PermOperations"],
  Cell[68638, 2993, 315, 10, 22, "Output",
   CellTags->"PermOperations"],
  Cell[68968, 3006, 647, 24, 49, "MathCaption",
   CellTags->"PermOperations"],
  Cell[69640, 3034, 231, 7, 23, "Input",
   CellTags->"PermOperations"],
  Cell[69874, 3043, 578, 18, 39, "Output",
   CellTags->"PermOperations"],
  Cell[70467, 3064, 388, 12, 36, "MathCaption",
   CellTags->{"PermOperations", "i:41"}],
  Cell[70880, 3080, 154, 4, 23, "Input",
   CellTags->"PermOperations"],
  Cell[71037, 3086, 192, 6, 22, "Output",
   CellTags->"PermOperations"],
  Cell[71244, 3095, 184, 4, 36, "MathCaption",
   CellTags->"PermOperations"],
  Cell[71453, 3103, 233, 6, 23, "Input",
   CellTags->"PermOperations"],
  Cell[71689, 3111, 192, 6, 22, "Output",
   CellTags->"PermOperations"],
  Cell[71896, 3120, 351, 9, 49, "MathCaption",
   CellTags->"PermOperations"],
  Cell[72272, 3133, 596, 14, 23, "Input",
   CellTags->"PermOperations"],
  Cell[72871, 3149, 111, 2, 18, "Print",
   CellTags->"PermOperations"],
  Cell[72985, 3153, 250, 7, 18, "Print",
   CellTags->"PermOperations"],
  Cell[73238, 3162, 74, 1, 18, "Print",
   CellTags->"PermOperations"],
  Cell[73315, 3165, 448, 12, 18, "Print",
   CellTags->"PermOperations"],
  Cell[73766, 3179, 79, 1, 18, "Print",
   CellTags->"PermOperations"],
  Cell[73848, 3182, 448, 12, 18, "Print",
   CellTags->"PermOperations"],
  Cell[74299, 3196, 68, 1, 18, "Print",
   CellTags->"PermOperations"],
  Cell[74370, 3199, 156, 4, 22, "Output",
   CellTags->"PermOperations"],
  Cell[74541, 3206, 177, 4, 33, "Text",
   CellTags->"PermOperations"],
  Cell[74721, 3212, 9207, 312, 123, "DefinitionBox",
   CellTags->{"PermOperations", "i:7"}],
  Cell[83931, 3526, 72, 1, 15, "Caption",
   CellTags->"PermOperations"],
  Cell[84006, 3529, 236, 6, 49, "MathCaption",
   CellTags->"PermOperations"],
  Cell[84267, 3539, 721, 21, 29, "Input",
   CellTags->"PermOperations"],
  Cell[84991, 3562, 1530, 48, 135, "Output",
   CellTags->"PermOperations"]},
 "i:5"->{
  Cell[62234, 2775, 91, 1, 30, "Subsubsection",
   CellTags->{"PermOperations", "i:5"}]},
 "i:6"->{
  Cell[63188, 2808, 4898, 162, 104, "DefinitionBox",
   CellTags->{"PermOperations", "i:6"}]},
 "i:41"->{
  Cell[70467, 3064, 388, 12, 36, "MathCaption",
   CellTags->{"PermOperations", "i:41"}]},
 "i:7"->{
  Cell[74721, 3212, 9207, 312, 123, "DefinitionBox",
   CellTags->{"PermOperations", "i:7"}]},
 "PermRepresent"->{
  Cell[86570, 3616, 93, 1, 30, "Subsubsection",
   CellTags->{"PermRepresent", "i:8"}],
  Cell[86666, 3619, 307, 10, 33, "Text",
   CellTags->"PermRepresent"],
  Cell[86976, 3631, 6617, 222, 111, "DefinitionBox",
   CellTags->{"PermRepresent", "i:9"}],
  Cell[93596, 3855, 90, 1, 15, "Caption",
   CellTags->"PermRepresent"],
  Cell[93689, 3858, 152, 4, 49, "MathCaption",
   CellTags->"PermRepresent"],
  Cell[93866, 3866, 279, 8, 23, "Input",
   CellTags->"PermRepresent"],
  Cell[94148, 3876, 391, 12, 22, "Output",
   CellTags->"PermRepresent"],
  Cell[94554, 3891, 231, 7, 49, "MathCaption",
   CellTags->"PermRepresent"],
  Cell[94810, 3902, 160, 5, 23, "Input",
   CellTags->"PermRepresent"],
  Cell[94973, 3909, 83, 2, 22, "Output",
   CellTags->"PermRepresent"]},
 "i:8"->{
  Cell[86570, 3616, 93, 1, 30, "Subsubsection",
   CellTags->{"PermRepresent", "i:8"}]},
 "i:9"->{
  Cell[86976, 3631, 6617, 222, 111, "DefinitionBox",
   CellTags->{"PermRepresent", "i:9"}]},
 "Cycles"->{
  Cell[95105, 3917, 68, 1, 30, "Subsubsection",
   CellTags->{"Cycles", "i:10"}],
  Cell[95176, 3920, 1189, 27, 137, "Text",
   CellTags->{"Cycles", "i:42"}],
  Cell[96368, 3949, 572, 14, 72, "Text",
   CellTags->{"Cycles", "i:43"}],
  Cell[96943, 3965, 4797, 160, 92, "DefinitionBox",
   CellTags->{"Cycles", "i:11"}],
  Cell[101743, 4127, 83, 1, 15, "Caption",
   CellTags->"Cycles"],
  Cell[101829, 4130, 6639, 216, 92, "DefinitionBox3Col",
   CellTags->{"Cycles", "i:12"}],
  Cell[108471, 4348, 121, 6, 15, "Caption",
   CellTags->"Cycles"],
  Cell[108595, 4356, 93, 1, 36, "MathCaption",
   CellTags->"Cycles"],
  Cell[108713, 4361, 302, 8, 23, "Input",
   CellTags->"Cycles"],
  Cell[109018, 4371, 217, 6, 22, "Output",
   CellTags->"Cycles"],
  Cell[109250, 4380, 168, 7, 36, "MathCaption",
   CellTags->"Cycles"],
  Cell[109443, 4391, 183, 5, 23, "Input",
   CellTags->"Cycles"],
  Cell[109629, 4398, 360, 11, 22, "Output",
   CellTags->"Cycles"],
  Cell[110004, 4412, 365, 8, 49, "MathCaption",
   CellTags->"Cycles"],
  Cell[110394, 4424, 145, 4, 23, "Input",
   CellTags->"Cycles"],
  Cell[110542, 4430, 318, 9, 22, "Output",
   CellTags->"Cycles"],
  Cell[110875, 4442, 288, 11, 36, "MathCaption",
   CellTags->"Cycles"],
  Cell[111188, 4457, 186, 5, 23, "Input",
   CellTags->"Cycles"],
  Cell[111377, 4464, 405, 11, 22, "Output",
   CellTags->"Cycles"],
  Cell[111797, 4478, 169, 6, 36, "MathCaption",
   CellTags->"Cycles"],
  Cell[111991, 4488, 663, 20, 54, "Input",
   CellTags->"Cycles"],
  Cell[112657, 4510, 137, 4, 22, "Output",
   CellTags->"Cycles"],
  Cell[112809, 4517, 263, 6, 36, "MathCaption",
   CellTags->"Cycles"],
  Cell[113097, 4527, 280, 9, 23, "Input",
   CellTags->"Cycles"],
  Cell[113380, 4538, 271, 7, 18, "Message",
   CellTags->"Cycles"],
  Cell[113654, 4547, 79, 2, 22, "Output",
   CellTags->"Cycles"],
  Cell[113748, 4552, 214, 7, 36, "MathCaption",
   CellTags->"Cycles"],
  Cell[113987, 4563, 285, 9, 23, "Input",
   CellTags->"Cycles"],
  Cell[114275, 4574, 869, 29, 39, "Output",
   CellTags->"Cycles"],
  Cell[115159, 4606, 170, 5, 36, "MathCaption",
   CellTags->"Cycles"],
  Cell[115354, 4615, 928, 29, 23, "Input",
   CellTags->"Cycles"],
  Cell[116285, 4646, 443, 14, 22, "Output",
   CellTags->"Cycles"],
  Cell[116743, 4663, 190, 5, 36, "MathCaption",
   CellTags->"Cycles"],
  Cell[116958, 4672, 187, 5, 23, "Input",
   CellTags->"Cycles"],
  Cell[117148, 4679, 148, 4, 22, "Output",
   CellTags->"Cycles"]},
 "i:10"->{
  Cell[95105, 3917, 68, 1, 30, "Subsubsection",
   CellTags->{"Cycles", "i:10"}]},
 "i:42"->{
  Cell[95176, 3920, 1189, 27, 137, "Text",
   CellTags->{"Cycles", "i:42"}]},
 "i:43"->{
  Cell[96368, 3949, 572, 14, 72, "Text",
   CellTags->{"Cycles", "i:43"}]},
 "i:11"->{
  Cell[96943, 3965, 4797, 160, 92, "DefinitionBox",
   CellTags->{"Cycles", "i:11"}]},
 "i:12"->{
  Cell[101829, 4130, 6639, 216, 92, "DefinitionBox3Col",
   CellTags->{"Cycles", "i:12"}]},
 "CycleOperations"->{
  Cell[117345, 4689, 87, 1, 30, "Subsubsection",
   CellTags->{"CycleOperations", "i:13"}],
  Cell[117435, 4692, 381, 10, 33, "Text",
   CellTags->"CycleOperations"],
  Cell[117819, 4704, 12016, 402, 225, "DefinitionBox",
   CellTags->{"CycleOperations", "i:14"}],
  Cell[129838, 5108, 151, 6, 15, "Caption",
   CellTags->"CycleOperations"],
  Cell[129992, 5116, 175, 4, 49, "MathCaption",
   CellTags->"CycleOperations"],
  Cell[130192, 5124, 451, 14, 39, "Input",
   CellTags->"CycleOperations"],
  Cell[130646, 5140, 263, 8, 22, "Output",
   CellTags->"CycleOperations"],
  Cell[130924, 5151, 261, 6, 62, "MathCaption",
   CellTags->"CycleOperations"],
  Cell[131210, 5161, 241, 7, 23, "Input",
   CellTags->"CycleOperations"],
  Cell[131454, 5170, 367, 12, 22, "Output",
   CellTags->"CycleOperations"],
  Cell[131836, 5185, 162, 4, 49, "MathCaption",
   CellTags->"CycleOperations"],
  Cell[132023, 5193, 411, 12, 54, "Input",
   CellTags->"CycleOperations"],
  Cell[132437, 5207, 193, 6, 22, "Output",
   CellTags->"CycleOperations"],
  Cell[132645, 5216, 182, 5, 49, "MathCaption",
   CellTags->"CycleOperations"],
  Cell[132852, 5225, 152, 4, 23, "Input",
   CellTags->"CycleOperations"],
  Cell[133007, 5231, 193, 6, 22, "Output",
   CellTags->"CycleOperations"],
  Cell[133215, 5240, 250, 9, 49, "MathCaption",
   CellTags->"CycleOperations"],
  Cell[133490, 5253, 280, 8, 23, "Input",
   CellTags->"CycleOperations"],
  Cell[133773, 5263, 204, 6, 22, "Output",
   CellTags->"CycleOperations"],
  Cell[133992, 5272, 145, 4, 36, "MathCaption",
   CellTags->"CycleOperations"],
  Cell[134162, 5280, 819, 24, 39, "Input",
   CellTags->"CycleOperations"],
  Cell[134984, 5306, 312, 10, 22, "Output",
   CellTags->"CycleOperations"],
  Cell[135311, 5319, 141, 4, 36, "MathCaption",
   CellTags->"CycleOperations"],
  Cell[135477, 5327, 606, 18, 39, "Input",
   CellTags->"CycleOperations"],
  Cell[136086, 5347, 85, 2, 22, "Output",
   CellTags->"CycleOperations"]},
 "i:13"->{
  Cell[117345, 4689, 87, 1, 30, "Subsubsection",
   CellTags->{"CycleOperations", "i:13"}]},
 "i:14"->{
  Cell[117819, 4704, 12016, 402, 225, "DefinitionBox",
   CellTags->{"CycleOperations", "i:14"}]},
 "OtherCycle"->{
  Cell[136220, 5355, 85, 1, 30, "Subsubsection",
   CellTags->"OtherCycle"],
  Cell[136308, 5358, 190, 6, 49, "MathCaption",
   CellTags->"OtherCycle"],
  Cell[136523, 5368, 314, 9, 23, "Input",
   CellTags->"OtherCycle"],
  Cell[136840, 5379, 80, 2, 22, "Output",
   CellTags->"OtherCycle"],
  Cell[136935, 5384, 6069, 207, 122, "DefinitionBox",
   CellTags->{"OtherCycle", "i:15"}],
  Cell[143007, 5593, 78, 1, 15, "Caption",
   CellTags->"OtherCycle"],
  Cell[143088, 5596, 243, 5, 49, "MathCaption",
   CellTags->"OtherCycle"],
  Cell[143356, 5605, 1008, 32, 39, "Input",
   CellTags->"OtherCycle"],
  Cell[144367, 5639, 128, 4, 22, "Output",
   CellTags->"OtherCycle"],
  Cell[144510, 5646, 376, 8, 59, "Text",
   CellTags->{"OtherCycle", "i:16"}],
  Cell[144889, 5656, 1844, 61, 72, "DefinitionBox",
   CellTags->{"OtherCycle", "i:17"}],
  Cell[146736, 5719, 73, 1, 15, "Caption",
   CellTags->"OtherCycle"],
  Cell[146812, 5722, 127, 3, 36, "MathCaption",
   CellTags->"OtherCycle"],
  Cell[146964, 5729, 196, 5, 23, "Input",
   CellTags->"OtherCycle"],
  Cell[147163, 5736, 442, 14, 22, "Output",
   CellTags->"OtherCycle"],
  Cell[147620, 5753, 168, 4, 49, "MathCaption",
   CellTags->"OtherCycle"],
  Cell[147813, 5761, 179, 5, 23, "Input",
   CellTags->"OtherCycle"],
  Cell[147995, 5768, 476, 15, 22, "Output",
   CellTags->"OtherCycle"],
  Cell[148486, 5786, 288, 6, 46, "Text",
   CellTags->"OtherCycle"],
  Cell[148777, 5794, 2965, 100, 78, "DefinitionBox",
   CellTags->{"OtherCycle", "i:18"}],
  Cell[151745, 5896, 95, 1, 15, "Caption",
   CellTags->"OtherCycle"],
  Cell[151843, 5899, 132, 3, 36, "MathCaption",
   CellTags->"OtherCycle"],
  Cell[152000, 5906, 344, 10, 39, "Input",
   CellTags->"OtherCycle"],
  Cell[152347, 5918, 616, 19, 22, "Output",
   CellTags->"OtherCycle"],
  Cell[152978, 5940, 187, 4, 49, "MathCaption",
   CellTags->"OtherCycle"],
  Cell[153190, 5948, 1096, 29, 39, "Input",
   CellTags->"OtherCycle"],
  Cell[154289, 5979, 1357, 39, 117, "Output",
   CellTags->"OtherCycle"]},
 "i:15"->{
  Cell[136935, 5384, 6069, 207, 122, "DefinitionBox",
   CellTags->{"OtherCycle", "i:15"}]},
 "i:16"->{
  Cell[144510, 5646, 376, 8, 59, "Text",
   CellTags->{"OtherCycle", "i:16"}]},
 "i:17"->{
  Cell[144889, 5656, 1844, 61, 72, "DefinitionBox",
   CellTags->{"OtherCycle", "i:17"}]},
 "i:18"->{
  Cell[148777, 5794, 2965, 100, 78, "DefinitionBox",
   CellTags->{"OtherCycle", "i:18"}]},
 "Stabilizers"->{
  Cell[155695, 6024, 89, 1, 30, "Subsubsection",
   CellTags->{"Stabilizers", "i:19"}],
  Cell[155787, 6027, 420, 13, 46, "Text",
   CellTags->"Stabilizers"],
  Cell[156210, 6042, 5359, 183, 110, "DefinitionBox",
   CellTags->"Stabilizers"],
  Cell[161572, 6227, 182, 8, 15, "Caption",
   CellTags->"Stabilizers"],
  Cell[161757, 6237, 173, 6, 36, "MathCaption",
   CellTags->"Stabilizers"],
  Cell[161955, 6247, 319, 11, 23, "Input",
   CellTags->"Stabilizers"],
  Cell[162277, 6260, 81, 2, 22, "Output",
   CellTags->"Stabilizers"],
  Cell[162373, 6265, 134, 5, 36, "MathCaption",
   CellTags->"Stabilizers"],
  Cell[162532, 6274, 147, 4, 23, "Input",
   CellTags->"Stabilizers"],
  Cell[162682, 6280, 78, 2, 22, "Output",
   CellTags->"Stabilizers"],
  Cell[162775, 6285, 132, 3, 36, "MathCaption",
   CellTags->"Stabilizers"],
  Cell[162932, 6292, 811, 26, 54, "Input",
   CellTags->"Stabilizers"],
  Cell[163746, 6320, 135, 4, 22, "Output",
   CellTags->"Stabilizers"],
  Cell[163896, 6327, 527, 22, 33, "Text",
   CellTags->"Stabilizers"],
  Cell[164426, 6351, 7447, 259, 97, "DefinitionBox",
   CellTags->{"Stabilizers", "i:20"}],
  Cell[171876, 6612, 85, 1, 15, "Caption",
   CellTags->"Stabilizers"],
  Cell[171964, 6615, 437, 18, 49, "MathCaption",
   CellTags->"Stabilizers"],
  Cell[172426, 6637, 1329, 35, 84, "Input",
   CellTags->"Stabilizers"],
  Cell[173758, 6674, 1010, 30, 38, "Output",
   CellTags->"Stabilizers"],
  Cell[174783, 6707, 172, 6, 36, "MathCaption",
   CellTags->"Stabilizers"],
  Cell[174980, 6717, 184, 5, 23, "Input",
   CellTags->"Stabilizers"],
  Cell[175167, 6724, 133, 4, 22, "Output",
   CellTags->"Stabilizers"],
  Cell[175315, 6731, 352, 12, 49, "MathCaption",
   CellTags->"Stabilizers"],
  Cell[175692, 6747, 310, 10, 23, "Input",
   CellTags->"Stabilizers"],
  Cell[176005, 6759, 166, 5, 22, "Output",
   CellTags->"Stabilizers"],
  Cell[176186, 6767, 159, 4, 49, "MathCaption",
   CellTags->"Stabilizers"],
  Cell[176370, 6775, 189, 5, 23, "Input",
   CellTags->"Stabilizers"],
  Cell[176562, 6782, 363, 12, 22, "Output",
   CellTags->"Stabilizers"],
  Cell[176940, 6797, 394, 13, 49, "MathCaption",
   CellTags->"Stabilizers"],
  Cell[177359, 6814, 354, 11, 23, "Input",
   CellTags->"Stabilizers"],
  Cell[177716, 6827, 363, 12, 22, "Output",
   CellTags->"Stabilizers"],
  Cell[178094, 6842, 149, 5, 36, "MathCaption",
   CellTags->"Stabilizers"],
  Cell[178268, 6851, 256, 8, 23, "Input",
   CellTags->"Stabilizers"],
  Cell[178527, 6861, 363, 12, 22, "Output",
   CellTags->"Stabilizers"]},
 "i:19"->{
  Cell[155695, 6024, 89, 1, 30, "Subsubsection",
   CellTags->{"Stabilizers", "i:19"}]},
 "i:20"->{
  Cell[164426, 6351, 7447, 259, 97, "DefinitionBox",
   CellTags->{"Stabilizers", "i:20"}]},
 "BasicZ"->{
  Cell[178951, 6880, 198, 7, 48, "Subsection",
   CellTags->{"BasicZ", "i:21"}],
  Cell[179174, 6891, 123, 2, 20, "Subsubsection",
   CellTags->"BasicZ"],
  Cell[179300, 6895, 847, 23, 93, "Text",
   CellTags->"BasicZ"],
  Cell[180150, 6920, 9196, 312, 265, "DefinitionBox",
   CellTags->{"BasicZ", "i:22"}],
  Cell[189349, 7234, 56, 1, 15, "Caption",
   CellTags->"BasicZ"],
  Cell[189408, 7237, 219, 8, 44, "MathCaption",
   CellTags->"BasicZ"],
  Cell[189652, 7249, 531, 18, 38, "Input",
   CellTags->"BasicZ"],
  Cell[190186, 7269, 184, 6, 22, "Output",
   CellTags->"BasicZ"],
  Cell[190385, 7278, 339, 15, 41, "MathCaption",
   CellTags->"BasicZ"],
  Cell[190749, 7297, 326, 11, 34, "Input",
   CellTags->"BasicZ"],
  Cell[191078, 7310, 241, 9, 30, "Output",
   CellTags->"BasicZ"],
  Cell[191334, 7322, 223, 8, 44, "MathCaption",
   CellTags->"BasicZ"],
  Cell[191582, 7334, 441, 16, 34, "Input",
   CellTags->"BasicZ"],
  Cell[192026, 7352, 151, 4, 22, "Output",
   CellTags->"BasicZ"],
  Cell[192192, 7359, 233, 8, 44, "MathCaption",
   CellTags->"BasicZ"],
  Cell[192450, 7371, 295, 10, 34, "Input",
   CellTags->"BasicZ"],
  Cell[192748, 7383, 149, 6, 27, "Output",
   CellTags->"BasicZ"],
  Cell[192912, 7392, 411, 16, 57, "MathCaption",
   CellTags->"BasicZ"],
  Cell[193348, 7412, 228, 7, 34, "Input",
   CellTags->"BasicZ"],
  Cell[193579, 7421, 76, 2, 22, "Output",
   CellTags->"BasicZ"],
  Cell[193670, 7426, 84, 1, 36, "MathCaption",
   CellTags->"BasicZ"],
  Cell[193779, 7431, 415, 15, 34, "Input",
   CellTags->"BasicZ"],
  Cell[194197, 7448, 138, 4, 22, "Output",
   CellTags->"BasicZ"]},
 "i:21"->{
  Cell[178951, 6880, 198, 7, 48, "Subsection",
   CellTags->{"BasicZ", "i:21"}]},
 "i:22"->{
  Cell[180150, 6920, 9196, 312, 265, "DefinitionBox",
   CellTags->{"BasicZ", "i:22"}]},
 "DivisibilityZ"->{
  Cell[194384, 7458, 81, 1, 30, "Subsubsection",
   CellTags->{"DivisibilityZ", "i:23"}],
  Cell[194468, 7461, 3960, 136, 78, "DefinitionBox",
   CellTags->{"DivisibilityZ", "i:24"}],
  Cell[198431, 7599, 96, 1, 15, "Caption",
   CellTags->"DivisibilityZ"],
  Cell[198530, 7602, 291, 11, 36, "MathCaption",
   CellTags->"DivisibilityZ"],
  Cell[198846, 7617, 256, 8, 23, "Input",
   CellTags->"DivisibilityZ"],
  Cell[199105, 7627, 132, 4, 22, "Output",
   CellTags->"DivisibilityZ"],
  Cell[199252, 7634, 112, 2, 36, "MathCaption",
   CellTags->"DivisibilityZ"],
  Cell[199389, 7640, 202, 5, 23, "Input",
   CellTags->"DivisibilityZ"],
  Cell[199594, 7647, 284, 10, 22, "Output",
   CellTags->"DivisibilityZ"],
  Cell[199893, 7660, 130, 3, 36, "MathCaption",
   CellTags->"DivisibilityZ"],
  Cell[200048, 7667, 301, 9, 23, "Input",
   CellTags->"DivisibilityZ"],
  Cell[200352, 7678, 290, 9, 22, "Output",
   CellTags->"DivisibilityZ"],
  Cell[200657, 7690, 7611, 253, 131, "DefinitionBox",
   CellTags->{"DivisibilityZ", "i:25"}],
  Cell[208271, 7945, 225, 8, 21, "Caption",
   CellTags->"DivisibilityZ"],
  Cell[208499, 7955, 10212, 340, 259, "DefinitionBox3Col",
   CellTags->{"DivisibilityZ", "i:26"}],
  Cell[218714, 8297, 195, 9, 15, "Caption",
   CellTags->"DivisibilityZ"],
  Cell[218912, 8308, 413, 16, 44, "MathCaption",
   CellTags->"DivisibilityZ"],
  Cell[219350, 8328, 309, 10, 34, "Input",
   CellTags->"DivisibilityZ"],
  Cell[219662, 8340, 83, 2, 22, "Output",
   CellTags->"DivisibilityZ"],
  Cell[219760, 8345, 110, 2, 36, "MathCaption",
   CellTags->"DivisibilityZ"],
  Cell[219895, 8351, 264, 9, 34, "Input",
   CellTags->"DivisibilityZ"],
  Cell[220162, 8362, 83, 2, 22, "Output",
   CellTags->"DivisibilityZ"],
  Cell[220260, 8367, 356, 12, 57, "MathCaption",
   CellTags->"DivisibilityZ"],
  Cell[220641, 8383, 233, 8, 34, "Input",
   CellTags->"DivisibilityZ"],
  Cell[220877, 8393, 148, 5, 27, "Output",
   CellTags->"DivisibilityZ"],
  Cell[221040, 8401, 155, 4, 49, "MathCaption",
   CellTags->"DivisibilityZ"],
  Cell[221220, 8409, 275, 6, 23, "Input",
   CellTags->"DivisibilityZ"],
  Cell[221498, 8417, 749, 28, 22, "Output",
   CellTags->"DivisibilityZ"],
  Cell[222262, 8448, 486, 12, 83, "MathCaption",
   CellTags->"DivisibilityZ"],
  Cell[222773, 8464, 233, 6, 23, "Input",
   CellTags->"DivisibilityZ"],
  Cell[223009, 8472, 735, 26, 30, "Output",
   CellTags->"DivisibilityZ"],
  Cell[223759, 8501, 383, 12, 62, "MathCaption",
   CellTags->"DivisibilityZ"],
  Cell[224167, 8517, 374, 9, 23, "Input",
   CellTags->"DivisibilityZ"],
  Cell[224544, 8528, 1351, 52, 30, "Output",
   CellTags->"DivisibilityZ"],
  Cell[225910, 8583, 421, 14, 49, "MathCaption",
   CellTags->"DivisibilityZ"],
  Cell[226356, 8601, 373, 9, 23, "Input",
   CellTags->"DivisibilityZ"],
  Cell[226732, 8612, 1350, 48, 22, "Output",
   CellTags->"DivisibilityZ"],
  Cell[228097, 8663, 100, 1, 36, "MathCaption",
   CellTags->"DivisibilityZ"],
  Cell[228222, 8668, 372, 9, 23, "Input",
   CellTags->"DivisibilityZ"],
  Cell[228597, 8679, 1545, 58, 38, "Output",
   CellTags->"DivisibilityZ"],
  Cell[230157, 8740, 2447, 81, 46, "DefinitionBox",
   CellTags->{"DivisibilityZ", "i:27"}],
  Cell[232607, 8823, 105, 1, 15, "Caption",
   CellTags->"DivisibilityZ"],
  Cell[232737, 8828, 442, 13, 23, "Input",
   CellTags->"DivisibilityZ"],
  Cell[233182, 8843, 501, 18, 22, "Output",
   CellTags->"DivisibilityZ"]},
 "i:23"->{
  Cell[194384, 7458, 81, 1, 30, "Subsubsection",
   CellTags->{"DivisibilityZ", "i:23"}]},
 "i:24"->{
  Cell[194468, 7461, 3960, 136, 78, "DefinitionBox",
   CellTags->{"DivisibilityZ", "i:24"}]},
 "i:25"->{
  Cell[200657, 7690, 7611, 253, 131, "DefinitionBox",
   CellTags->{"DivisibilityZ", "i:25"}]},
 "i:26"->{
  Cell[208499, 7955, 10212, 340, 259, "DefinitionBox3Col",
   CellTags->{"DivisibilityZ", "i:26"}]},
 "i:27"->{
  Cell[230157, 8740, 2447, 81, 46, "DefinitionBox",
   CellTags->{"DivisibilityZ", "i:27"}]},
 "NormZ"->{
  Cell[233732, 8867, 83, 1, 30, "Subsubsection",
   CellTags->{"NormZ", "i:28"}],
  Cell[233818, 8870, 9497, 318, 175, "DefinitionBox",
   CellTags->{"NormZ", "i:29"}],
  Cell[243318, 9190, 58, 1, 15, "Caption",
   CellTags->"NormZ"],
  Cell[243379, 9193, 272, 9, 57, "MathCaption",
   CellTags->"NormZ"],
  Cell[243676, 9206, 615, 20, 23, "Input",
   CellTags->"NormZ"],
  Cell[244294, 9228, 1178, 40, 157, "Output",
   CellTags->"NormZ"],
  Cell[245487, 9271, 154, 4, 49, "MathCaption",
   CellTags->"NormZ"],
  Cell[245666, 9279, 369, 13, 23, "Input",
   CellTags->"NormZ"],
  Cell[246038, 9294, 785, 26, 22, "Output",
   CellTags->"NormZ"],
  Cell[246838, 9323, 116, 3, 36, "MathCaption",
   CellTags->"NormZ"],
  Cell[246979, 9330, 160, 5, 23, "Input",
   CellTags->"NormZ"],
  Cell[247142, 9337, 160, 5, 22, "Output",
   CellTags->"NormZ"],
  Cell[247317, 9345, 979, 32, 99, "MathCaption",
   CellTags->"NormZ"],
  Cell[248321, 9381, 218, 6, 23, "Input",
   CellTags->"NormZ"],
  Cell[248542, 9389, 12083, 783, 135, 9237, 732, "GraphicsData", 
  "PostScript", "Graphics",
   CellTags->"NormZ"],
  Cell[260628, 10174, 336, 8, 22, "Output",
   CellTags->"NormZ"],
  Cell[260979, 10185, 550, 17, 70, "MathCaption",
   CellTags->"NormZ"],
  Cell[261554, 10206, 166, 5, 23, "Input",
   CellTags->"NormZ"],
  Cell[261723, 10213, 473, 18, 30, "Output",
   CellTags->"NormZ"],
  Cell[262211, 10234, 225, 8, 44, "MathCaption",
   CellTags->"NormZ"],
  Cell[262461, 10246, 157, 4, 23, "Input",
   CellTags->"NormZ"],
  Cell[262621, 10252, 1728, 71, 52, "Output",
   CellTags->"NormZ"]},
 "i:28"->{
  Cell[233732, 8867, 83, 1, 30, "Subsubsection",
   CellTags->{"NormZ", "i:28"}]},
 "i:29"->{
  Cell[233818, 8870, 9497, 318, 175, "DefinitionBox",
   CellTags->{"NormZ", "i:29"}]},
 "WorkLists"->{
  Cell[264410, 10330, 73, 1, 34, "Subsection",
   CellTags->"WorkLists"],
  Cell[264508, 10335, 139, 2, 20, "Subsubsection",
   CellTags->{"WorkLists", "i:30"}],
  Cell[264650, 10339, 606, 13, 85, "Text",
   CellTags->"WorkLists"],
  Cell[265259, 10354, 13418, 463, 231, "DefinitionBox",
   CellTags->{"WorkLists", "i:31"}],
  Cell[278680, 10819, 72, 1, 15, "Caption",
   CellTags->"WorkLists"],
  Cell[278755, 10822, 287, 9, 49, "MathCaption",
   CellTags->"WorkLists"],
  Cell[279067, 10835, 203, 5, 68, "Input",
   CellTags->"WorkLists"],
  Cell[279273, 10842, 420, 13, 22, "Output",
   CellTags->"WorkLists"],
  Cell[279708, 10858, 127, 4, 36, "MathCaption",
   CellTags->"WorkLists"],
  Cell[279860, 10866, 234, 6, 38, "Input",
   CellTags->"WorkLists"],
  Cell[280097, 10874, 239, 8, 22, "Output",
   CellTags->"WorkLists"],
  Cell[280351, 10885, 274, 9, 36, "MathCaption",
   CellTags->"WorkLists"],
  Cell[280650, 10898, 310, 10, 23, "Input",
   CellTags->"WorkLists"],
  Cell[280963, 10910, 905, 28, 22, "Output",
   CellTags->"WorkLists"],
  Cell[281883, 10941, 168, 4, 36, "MathCaption",
   CellTags->"WorkLists"],
  Cell[282076, 10949, 506, 14, 23, "Input",
   CellTags->"WorkLists"],
  Cell[282585, 10965, 1769, 53, 84, "Output",
   CellTags->"WorkLists"],
  Cell[284369, 11021, 166, 5, 36, "MathCaption",
   CellTags->"WorkLists"],
  Cell[284560, 11030, 322, 10, 23, "Input",
   CellTags->"WorkLists"],
  Cell[284885, 11042, 1343, 40, 38, "Output",
   CellTags->"WorkLists"],
  Cell[286243, 11085, 182, 5, 36, "MathCaption",
   CellTags->"WorkLists"],
  Cell[286450, 11094, 545, 18, 23, "Input",
   CellTags->"WorkLists"],
  Cell[286998, 11114, 922, 29, 39, "Output",
   CellTags->"WorkLists"],
  Cell[287935, 11146, 129, 3, 36, "MathCaption",
   CellTags->{"WorkLists", "i:44"}],
  Cell[288089, 11153, 526, 15, 23, "Input",
   CellTags->"WorkLists"],
  Cell[288618, 11170, 356, 8, 22, "Output",
   CellTags->"WorkLists"],
  Cell[288989, 11181, 128, 4, 36, "MathCaption",
   CellTags->"WorkLists"],
  Cell[289142, 11189, 114, 3, 23, "Input",
   CellTags->"WorkLists"],
  Cell[289259, 11194, 356, 8, 22, "Output",
   CellTags->"WorkLists"],
  Cell[289630, 11205, 206, 9, 36, "MathCaption",
   CellTags->"WorkLists"],
  Cell[289861, 11218, 783, 23, 23, "Input",
   CellTags->"WorkLists"],
  Cell[290647, 11243, 141, 4, 22, "Output",
   CellTags->"WorkLists"]},
 "i:30"->{
  Cell[264508, 10335, 139, 2, 20, "Subsubsection",
   CellTags->{"WorkLists", "i:30"}]},
 "i:31"->{
  Cell[265259, 10354, 13418, 463, 231, "DefinitionBox",
   CellTags->{"WorkLists", "i:31"}]},
 "i:44"->{
  Cell[287935, 11146, 129, 3, 36, "MathCaption",
   CellTags->{"WorkLists", "i:44"}]},
 "WorkGraphics"->{
  Cell[290837, 11253, 89, 1, 30, "Subsubsection",
   CellTags->{"WorkGraphics", "i:32"}],
  Cell[290929, 11256, 187, 4, 33, "Text",
   CellTags->"WorkGraphics"],
  Cell[291119, 11262, 14259, 480, 219, "DefinitionBox",
   CellTags->{"WorkGraphics", "i:33"}],
  Cell[305381, 11744, 82, 1, 15, "Caption",
   CellTags->"WorkGraphics"],
  Cell[305466, 11747, 212, 7, 49, "MathCaption",
   CellTags->"WorkGraphics"],
  Cell[305703, 11758, 280, 8, 23, "Input",
   CellTags->"WorkGraphics"],
  Cell[305986, 11768, 2627, 99, 186, 1110, 70, "GraphicsData", 
  "PostScript", "Graphics",
   CellTags->"WorkGraphics"],
  Cell[308628, 11870, 243, 8, 49, "MathCaption",
   CellTags->"WorkGraphics"],
  Cell[308896, 11882, 204, 6, 23, "Input",
   CellTags->"WorkGraphics"],
  Cell[309103, 11890, 5599, 216, 137, 2630, 164, "GraphicsData", 
  "PostScript", "Graphics",
   CellTags->"WorkGraphics"],
  Cell[314705, 12108, 222, 3, 34, "Print",
   CellTags->"WorkGraphics"],
  Cell[314930, 12113, 154, 4, 22, "Output",
   CellTags->"WorkGraphics"]},
 "i:32"->{
  Cell[290837, 11253, 89, 1, 30, "Subsubsection",
   CellTags->{"WorkGraphics", "i:32"}]},
 "i:33"->{
  Cell[291119, 11262, 14259, 480, 219, "DefinitionBox",
   CellTags->{"WorkGraphics", "i:33"}]},
 "Adjoin"->{
  Cell[315133, 12123, 68, 1, 30, "Subsubsection",
   CellTags->{"Adjoin", "i:34"}],
  Cell[315204, 12126, 2498, 79, 169, "Text",
   CellTags->"Adjoin"],
  Cell[317705, 12207, 7317, 252, 99, "DefinitionBox",
   CellTags->"Adjoin"],
  Cell[325025, 12461, 128, 6, 15, "Caption",
   CellTags->"Adjoin"],
  Cell[325156, 12469, 164, 7, 41, "MathCaption",
   CellTags->"Adjoin"],
  Cell[325345, 12480, 204, 7, 34, "Input",
   CellTags->"Adjoin"],
  Cell[325552, 12489, 764, 31, 30, "Output",
   CellTags->"Adjoin"],
  Cell[326331, 12523, 91, 1, 36, "MathCaption",
   CellTags->"Adjoin"],
  Cell[326447, 12528, 298, 10, 44, "Input",
   CellTags->"Adjoin"],
  Cell[326748, 12540, 1714, 60, 28, "Output",
   CellTags->"Adjoin"],
  Cell[328477, 12603, 257, 7, 49, "MathCaption",
   CellTags->"Adjoin"],
  Cell[328759, 12614, 250, 9, 34, "Input",
   CellTags->"Adjoin"],
  Cell[329012, 12625, 915, 39, 52, "Output",
   CellTags->"Adjoin"],
  Cell[329942, 12667, 99, 1, 36, "MathCaption",
   CellTags->"Adjoin"],
  Cell[330066, 12672, 206, 7, 29, "Input",
   CellTags->"Adjoin"],
  Cell[330275, 12681, 5885, 206, 84, "Output",
   CellTags->"Adjoin"],
  Cell[336175, 12890, 178, 4, 49, "MathCaption",
   CellTags->"Adjoin"],
  Cell[336378, 12898, 249, 9, 23, "Input",
   CellTags->"Adjoin"],
  Cell[336630, 12909, 443, 12, 28, "Output",
   CellTags->"Adjoin"],
  Cell[337088, 12924, 435, 12, 62, "MathCaption",
   CellTags->"Adjoin"],
  Cell[337548, 12940, 263, 8, 23, "Input",
   CellTags->"Adjoin"],
  Cell[337814, 12950, 8156, 265, 138, "Output",
   CellTags->"Adjoin"]},
 "i:34"->{
  Cell[315133, 12123, 68, 1, 30, "Subsubsection",
   CellTags->{"Adjoin", "i:34"}]},
 "Disguising"->{
  Cell[346019, 13221, 93, 1, 30, "Subsubsection",
   CellTags->{"Disguising", "i:35"}],
  Cell[346115, 13224, 458, 12, 59, "Text",
   CellTags->"Disguising"],
  Cell[346576, 13238, 4889, 159, 123, "DefinitionBox",
   CellTags->{"Disguising", "i:36"}],
  Cell[351468, 13399, 77, 1, 15, "Caption",
   CellTags->"Disguising"],
  Cell[351570, 13404, 1281, 36, 39, "Input",
   CellTags->"Disguising"],
  Cell[352854, 13442, 15818, 717, 157, 10874, 632, "GraphicsData", 
  "PostScript", "Graphics",
   CellTags->"Disguising"]},
 "i:35"->{
  Cell[346019, 13221, 93, 1, 30, "Subsubsection",
   CellTags->{"Disguising", "i:35"}]},
 "i:36"->{
  Cell[346576, 13238, 4889, 159, 123, "DefinitionBox",
   CellTags->{"Disguising", "i:36"}]},
 "LabCode"->{
  Cell[368721, 14165, 153, 5, 30, "Subsubsection",
   CellTags->{"LabCode", "i:37"}],
  Cell[368877, 14172, 5790, 192, 104, "DefinitionBox",
   CellTags->{"LabCode", "i:38"}],
  Cell[374670, 14366, 162, 6, 15, "Caption",
   CellTags->"LabCode"],
  Cell[374835, 14374, 235, 7, 38, "MathCaption",
   CellTags->"LabCode"],
  Cell[375095, 14385, 176, 5, 23, "Input",
   CellTags->"LabCode"],
  Cell[375274, 14392, 622, 21, 22, "Output",
   CellTags->"LabCode"],
  Cell[375911, 14416, 114, 3, 36, "MathCaption",
   CellTags->"LabCode"],
  Cell[376050, 14423, 186, 5, 23, "Input",
   CellTags->"LabCode"],
  Cell[376261, 14432, 5416, 270, 184, 4175, 245, "GraphicsData", 
  "PostScript", "Graphics",
   CellTags->"LabCode"],
  Cell[381680, 14704, 3837, 185, 294, 2363, 156, "GraphicsData", 
  "PostScript", "Graphics",
   CellTags->"LabCode"]},
 "i:37"->{
  Cell[368721, 14165, 153, 5, 30, "Subsubsection",
   CellTags->{"LabCode", "i:37"}]},
 "i:38"->{
  Cell[368877, 14172, 5790, 192, 104, "DefinitionBox",
   CellTags->{"LabCode", "i:38"}]},
 "Potpourri"->{
  Cell[385578, 14896, 64, 1, 30, "Subsubsection",
   CellTags->"Potpourri"],
  Cell[385645, 14899, 6223, 211, 97, "DefinitionBox",
   CellTags->{"Potpourri", "i:39"}],
  Cell[391871, 15112, 67, 1, 15, "Caption",
   CellTags->"Potpourri"],
  Cell[391941, 15115, 141, 4, 36, "MathCaption",
   CellTags->"Potpourri"],
  Cell[392107, 15123, 425, 13, 23, "Input",
   CellTags->"Potpourri"],
  Cell[392535, 15138, 155, 4, 22, "Output",
   CellTags->"Potpourri"],
  Cell[392705, 15145, 118, 3, 36, "MathCaption",
   CellTags->"Potpourri"],
  Cell[392848, 15152, 149, 4, 23, "Input",
   CellTags->"Potpourri"],
  Cell[393000, 15158, 548, 20, 22, "Output",
   CellTags->"Potpourri"],
  Cell[393563, 15181, 149, 5, 36, "MathCaption",
   CellTags->"Potpourri"],
  Cell[393737, 15190, 607, 18, 23, "Input",
   CellTags->"Potpourri"],
  Cell[394347, 15210, 1722, 86, 114, 1265, 74, "GraphicsData", 
  "PostScript", "Graphics",
   CellTags->"Potpourri"],
  Cell[396084, 15299, 248, 7, 49, "MathCaption",
   CellTags->"Potpourri"],
  Cell[396357, 15310, 189, 6, 23, "Input",
   CellTags->"Potpourri"],
  Cell[396549, 15318, 564, 18, 22, "Output",
   CellTags->"Potpourri"]},
 "i:39"->{
  Cell[385645, 14899, 6223, 211, 97, "DefinitionBox",
   CellTags->{"Potpourri", "i:39"}]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Global", 402023, 15431},
 {"First", 403951, 15488},
 {"i:1", 404332, 15501},
 {"i:2", 404419, 15504},
 {"PermIntroduction", 404531, 15507},
 {"i:3", 406903, 15568},
 {"i:40", 407004, 15571},
 {"i:4", 407101, 15574},
 {"PermOperations", 407217, 15577},
 {"i:5", 409683, 15642},
 {"i:6", 409783, 15645},
 {"i:41", 409889, 15648},
 {"i:7", 409990, 15651},
 {"PermRepresent", 410105, 15654},
 {"i:8", 410888, 15675},
 {"i:9", 410987, 15678},
 {"Cycles", 411094, 15681},
 {"i:10", 413570, 15752},
 {"i:42", 413664, 15755},
 {"i:43", 413753, 15758},
 {"i:11", 413840, 15761},
 {"i:12", 413938, 15764},
 {"CycleOperations", 414052, 15767},
 {"i:13", 416035, 15818},
 {"i:14", 416139, 15821},
 {"OtherCycle", 416255, 15824},
 {"i:15", 418290, 15879},
 {"i:16", 418394, 15882},
 {"i:17", 418485, 15885},
 {"i:18", 418587, 15888},
 {"Stabilizers", 418697, 15891},
 {"i:19", 421251, 15960},
 {"i:20", 421351, 15963},
 {"BasicZ", 421457, 15966},
 {"i:21", 423080, 16013},
 {"i:22", 423173, 16016},
 {"DivisibilityZ", 423282, 16019},
 {"i:23", 426714, 16108},
 {"i:24", 426816, 16111},
 {"i:25", 426922, 16114},
 {"i:26", 427029, 16117},
 {"i:27", 427141, 16120},
 {"NormZ", 427247, 16123},
 {"i:28", 428841, 16169},
 {"i:29", 428935, 16172},
 {"WorkLists", 429039, 16175},
 {"i:30", 431423, 16240},
 {"i:31", 431523, 16243},
 {"i:44", 431628, 16246},
 {"WorkGraphics", 431734, 16249},
 {"i:32", 432775, 16276},
 {"i:33", 432877, 16279},
 {"Adjoin", 432987, 16282},
 {"i:34", 434559, 16327},
 {"Disguising", 434661, 16330},
 {"i:35", 435194, 16344},
 {"i:36", 435294, 16347},
 {"LabCode", 435402, 16350},
 {"i:37", 436252, 16373},
 {"i:38", 436350, 16376},
 {"Potpourri", 436457, 16379},
 {"i:39", 437628, 16411}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[590, 23, 781, 30, 86, "Subsubtitle",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[1396, 57, 191, 8, 78, "Section",
 Evaluatable->False,
 CellTags->"Global"],
Cell[1590, 67, 191, 4, 33, "Text",
 CellTags->"Global"],
Cell[CellGroupData[{
Cell[1806, 75, 59, 1, 34, "Subsection",
 CellTags->"First"],
Cell[1868, 78, 174, 5, 33, "Text",
 CellTags->"First"],
Cell[2045, 85, 155, 4, 23, "Input",
 CellTags->"First"],
Cell[2203, 91, 159, 5, 33, "Text",
 CellTags->"First"],
Cell[CellGroupData[{
Cell[2387, 100, 117, 3, 23, "Input",
 CellTags->"First"],
Cell[2507, 105, 75, 2, 22, "Output",
 CellTags->"First"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2631, 113, 84, 1, 34, "Subsection",
 CellTags->{"Global", "i:1"}],
Cell[2718, 116, 115, 3, 20, "Text",
 CellTags->"Global"],
Cell[2836, 121, 4426, 141, 187, "DefinitionBox3Col",
 CellTags->{"Global", "i:2"}],
Cell[7265, 264, 62, 1, 15, "Caption",
 CellTags->"Global"],
Cell[7330, 267, 1169, 21, 77, "DefinitionBox",
 CellTags->"Global"],
Cell[8502, 290, 112, 5, 15, "Caption",
 CellTags->"Global"],
Cell[8617, 297, 114, 3, 36, "MathCaption",
 CellTags->"Global"],
Cell[CellGroupData[{
Cell[8756, 304, 86, 2, 23, "Input",
 CellTags->"Global"],
Cell[8845, 308, 76, 2, 22, "Output",
 CellTags->"Global"]
}, Open  ]],
Cell[8936, 313, 244, 5, 49, "MathCaption",
 CellTags->"Global"],
Cell[CellGroupData[{
Cell[9205, 322, 118, 3, 23, "Input",
 CellTags->"Global"],
Cell[9326, 327, 76, 2, 22, "Output",
 CellTags->"Global"]
}, Open  ]],
Cell[9417, 332, 175, 5, 49, "MathCaption",
 CellTags->"Global"],
Cell[CellGroupData[{
Cell[9617, 341, 213, 6, 23, "Input",
 CellTags->"Global"],
Cell[9833, 349, 10065, 511, 196, 7864, 470, "GraphicsData", "PostScript", \
"Graphics",
 CellTags->"Global"],
Cell[19901, 862, 714, 22, 22, "Output",
 CellTags->"Global"]
}, Open  ]],
Cell[20630, 887, 263, 8, 49, "MathCaption",
 CellTags->"Global"],
Cell[CellGroupData[{
Cell[20918, 899, 319, 8, 23, "Input",
 CellTags->"Global"],
Cell[21240, 909, 7033, 341, 201, 5278, 308, "GraphicsData", "PostScript", \
"Graphics",
 CellTags->"Global"],
Cell[28276, 1252, 178, 6, 22, "Output",
 CellTags->"Global"]
}, Open  ]],
Cell[28469, 1261, 167, 5, 36, "MathCaption",
 CellTags->"Global"],
Cell[CellGroupData[{
Cell[28661, 1270, 652, 20, 39, "Input",
 CellTags->"Global"],
Cell[29316, 1292, 22020, 1086, 157, 16536, 992, "GraphicsData", "PostScript", \
"Graphics",
 CellTags->"Global"],
Cell[51339, 2380, 183, 6, 22, "Output",
 CellTags->"Global"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[51571, 2392, 102, 1, 34, "Subsection",
 CellTags->{"PermIntroduction", "i:3"}],
Cell[CellGroupData[{
Cell[51698, 2397, 130, 2, 20, "Subsubsection",
 CellTags->"PermIntroduction"],
Cell[51831, 2401, 1147, 35, 46, "Text",
 CellTags->{"PermIntroduction", "i:40"}],
Cell[52981, 2438, 826, 33, 36, "MathCaption",
 CellTags->"PermIntroduction"],
Cell[CellGroupData[{
Cell[53832, 2475, 206, 6, 23, "Input",
 CellTags->"PermIntroduction"],
Cell[54041, 2483, 147, 4, 22, "Output",
 CellTags->"PermIntroduction"]
}, Open  ]],
Cell[54203, 2490, 244, 6, 49, "MathCaption",
 CellTags->"PermIntroduction"],
Cell[CellGroupData[{
Cell[54472, 2500, 131, 3, 23, "Input",
 CellTags->"PermIntroduction"],
Cell[54606, 2505, 212, 8, 52, "Output",
 CellTags->"PermIntroduction"]
}, Open  ]],
Cell[54833, 2516, 425, 12, 62, "MathCaption",
 CellTags->"PermIntroduction"],
Cell[CellGroupData[{
Cell[55283, 2532, 205, 6, 23, "Input",
 CellTags->"PermIntroduction"],
Cell[55491, 2540, 87, 2, 22, "Output",
 CellTags->"PermIntroduction"]
}, Open  ]],
Cell[55593, 2545, 418, 9, 46, "Text",
 CellTags->"PermIntroduction"],
Cell[56014, 2556, 261, 7, 49, "MathCaption",
 CellTags->"PermIntroduction"],
Cell[CellGroupData[{
Cell[56300, 2567, 236, 6, 23, "Input",
 CellTags->"PermIntroduction"],
Cell[56539, 2575, 1001, 16, 68, "Output",
 CellTags->"PermIntroduction"]
}, Open  ]],
Cell[57555, 2594, 2118, 70, 78, "DefinitionBox",
 CellTags->{"PermIntroduction", "i:4"}],
Cell[59676, 2666, 226, 7, 24, "Caption",
 CellTags->"PermIntroduction"],
Cell[59905, 2675, 340, 10, 62, "MathCaption",
 CellTags->"PermIntroduction"],
Cell[CellGroupData[{
Cell[60270, 2689, 226, 7, 23, "Input",
 CellTags->"PermIntroduction"],
Cell[60499, 2698, 138, 4, 22, "Output",
 CellTags->"PermIntroduction"]
}, Open  ]],
Cell[60652, 2705, 185, 5, 49, "MathCaption",
 CellTags->"PermIntroduction"],
Cell[CellGroupData[{
Cell[60862, 2714, 234, 7, 23, "Input",
 CellTags->"PermIntroduction"],
Cell[61099, 2723, 138, 4, 22, "Output",
 CellTags->"PermIntroduction"]
}, Open  ]],
Cell[61252, 2730, 226, 9, 36, "MathCaption",
 CellTags->"PermIntroduction"],
Cell[CellGroupData[{
Cell[61503, 2743, 158, 4, 23, "Input",
 CellTags->"PermIntroduction"],
Cell[61664, 2749, 138, 4, 22, "Output",
 CellTags->"PermIntroduction"]
}, Open  ]],
Cell[61817, 2756, 94, 1, 36, "MathCaption",
 CellTags->"PermIntroduction"],
Cell[CellGroupData[{
Cell[61936, 2761, 160, 4, 23, "Input",
 CellTags->"PermIntroduction"],
Cell[62099, 2767, 86, 2, 22, "Output",
 CellTags->"PermIntroduction"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[62234, 2775, 91, 1, 30, "Subsubsection",
 CellTags->{"PermOperations", "i:5"}],
Cell[62328, 2778, 857, 28, 46, "Text",
 CellTags->"PermOperations"],
Cell[63188, 2808, 4898, 162, 104, "DefinitionBox",
 CellTags->{"PermOperations", "i:6"}],
Cell[68089, 2972, 91, 1, 15, "Caption",
 CellTags->"PermOperations"],
Cell[68183, 2975, 142, 4, 36, "MathCaption",
 CellTags->"PermOperations"],
Cell[CellGroupData[{
Cell[68350, 2983, 285, 8, 23, "Input",
 CellTags->"PermOperations"],
Cell[68638, 2993, 315, 10, 22, "Output",
 CellTags->"PermOperations"]
}, Open  ]],
Cell[68968, 3006, 647, 24, 49, "MathCaption",
 CellTags->"PermOperations"],
Cell[CellGroupData[{
Cell[69640, 3034, 231, 7, 23, "Input",
 CellTags->"PermOperations"],
Cell[69874, 3043, 578, 18, 39, "Output",
 CellTags->"PermOperations"]
}, Open  ]],
Cell[70467, 3064, 388, 12, 36, "MathCaption",
 CellTags->{"PermOperations", "i:41"}],
Cell[CellGroupData[{
Cell[70880, 3080, 154, 4, 23, "Input",
 CellTags->"PermOperations"],
Cell[71037, 3086, 192, 6, 22, "Output",
 CellTags->"PermOperations"]
}, Open  ]],
Cell[71244, 3095, 184, 4, 36, "MathCaption",
 CellTags->"PermOperations"],
Cell[CellGroupData[{
Cell[71453, 3103, 233, 6, 23, "Input",
 CellTags->"PermOperations"],
Cell[71689, 3111, 192, 6, 22, "Output",
 CellTags->"PermOperations"]
}, Open  ]],
Cell[71896, 3120, 351, 9, 49, "MathCaption",
 CellTags->"PermOperations"],
Cell[CellGroupData[{
Cell[72272, 3133, 596, 14, 23, "Input",
 CellTags->"PermOperations"],
Cell[72871, 3149, 111, 2, 18, "Print",
 CellTags->"PermOperations"],
Cell[72985, 3153, 250, 7, 18, "Print",
 CellTags->"PermOperations"],
Cell[73238, 3162, 74, 1, 18, "Print",
 CellTags->"PermOperations"],
Cell[73315, 3165, 448, 12, 18, "Print",
 CellTags->"PermOperations"],
Cell[73766, 3179, 79, 1, 18, "Print",
 CellTags->"PermOperations"],
Cell[73848, 3182, 448, 12, 18, "Print",
 CellTags->"PermOperations"],
Cell[74299, 3196, 68, 1, 18, "Print",
 CellTags->"PermOperations"],
Cell[74370, 3199, 156, 4, 22, "Output",
 CellTags->"PermOperations"]
}, Open  ]],
Cell[74541, 3206, 177, 4, 33, "Text",
 CellTags->"PermOperations"],
Cell[74721, 3212, 9207, 312, 123, "DefinitionBox",
 CellTags->{"PermOperations", "i:7"}],
Cell[83931, 3526, 72, 1, 15, "Caption",
 CellTags->"PermOperations"],
Cell[84006, 3529, 236, 6, 49, "MathCaption",
 CellTags->"PermOperations"],
Cell[CellGroupData[{
Cell[84267, 3539, 721, 21, 29, "Input",
 CellTags->"PermOperations"],
Cell[84991, 3562, 1530, 48, 135, "Output",
 CellTags->"PermOperations"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[86570, 3616, 93, 1, 30, "Subsubsection",
 CellTags->{"PermRepresent", "i:8"}],
Cell[86666, 3619, 307, 10, 33, "Text",
 CellTags->"PermRepresent"],
Cell[86976, 3631, 6617, 222, 111, "DefinitionBox",
 CellTags->{"PermRepresent", "i:9"}],
Cell[93596, 3855, 90, 1, 15, "Caption",
 CellTags->"PermRepresent"],
Cell[93689, 3858, 152, 4, 49, "MathCaption",
 CellTags->"PermRepresent"],
Cell[CellGroupData[{
Cell[93866, 3866, 279, 8, 23, "Input",
 CellTags->"PermRepresent"],
Cell[94148, 3876, 391, 12, 22, "Output",
 CellTags->"PermRepresent"]
}, Open  ]],
Cell[94554, 3891, 231, 7, 49, "MathCaption",
 CellTags->"PermRepresent"],
Cell[CellGroupData[{
Cell[94810, 3902, 160, 5, 23, "Input",
 CellTags->"PermRepresent"],
Cell[94973, 3909, 83, 2, 22, "Output",
 CellTags->"PermRepresent"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[95105, 3917, 68, 1, 30, "Subsubsection",
 CellTags->{"Cycles", "i:10"}],
Cell[95176, 3920, 1189, 27, 137, "Text",
 CellTags->{"Cycles", "i:42"}],
Cell[96368, 3949, 572, 14, 72, "Text",
 CellTags->{"Cycles", "i:43"}],
Cell[96943, 3965, 4797, 160, 92, "DefinitionBox",
 CellTags->{"Cycles", "i:11"}],
Cell[101743, 4127, 83, 1, 15, "Caption",
 CellTags->"Cycles"],
Cell[101829, 4130, 6639, 216, 92, "DefinitionBox3Col",
 CellTags->{"Cycles", "i:12"}],
Cell[108471, 4348, 121, 6, 15, "Caption",
 CellTags->"Cycles"],
Cell[108595, 4356, 93, 1, 36, "MathCaption",
 CellTags->"Cycles"],
Cell[CellGroupData[{
Cell[108713, 4361, 302, 8, 23, "Input",
 CellTags->"Cycles"],
Cell[109018, 4371, 217, 6, 22, "Output",
 CellTags->"Cycles"]
}, Open  ]],
Cell[109250, 4380, 168, 7, 36, "MathCaption",
 CellTags->"Cycles"],
Cell[CellGroupData[{
Cell[109443, 4391, 183, 5, 23, "Input",
 CellTags->"Cycles"],
Cell[109629, 4398, 360, 11, 22, "Output",
 CellTags->"Cycles"]
}, Open  ]],
Cell[110004, 4412, 365, 8, 49, "MathCaption",
 CellTags->"Cycles"],
Cell[CellGroupData[{
Cell[110394, 4424, 145, 4, 23, "Input",
 CellTags->"Cycles"],
Cell[110542, 4430, 318, 9, 22, "Output",
 CellTags->"Cycles"]
}, Open  ]],
Cell[110875, 4442, 288, 11, 36, "MathCaption",
 CellTags->"Cycles"],
Cell[CellGroupData[{
Cell[111188, 4457, 186, 5, 23, "Input",
 CellTags->"Cycles"],
Cell[111377, 4464, 405, 11, 22, "Output",
 CellTags->"Cycles"]
}, Open  ]],
Cell[111797, 4478, 169, 6, 36, "MathCaption",
 CellTags->"Cycles"],
Cell[CellGroupData[{
Cell[111991, 4488, 663, 20, 54, "Input",
 CellTags->"Cycles"],
Cell[112657, 4510, 137, 4, 22, "Output",
 CellTags->"Cycles"]
}, Open  ]],
Cell[112809, 4517, 263, 6, 36, "MathCaption",
 CellTags->"Cycles"],
Cell[CellGroupData[{
Cell[113097, 4527, 280, 9, 23, "Input",
 CellTags->"Cycles"],
Cell[113380, 4538, 271, 7, 18, "Message",
 CellTags->"Cycles"],
Cell[113654, 4547, 79, 2, 22, "Output",
 CellTags->"Cycles"]
}, Open  ]],
Cell[113748, 4552, 214, 7, 36, "MathCaption",
 CellTags->"Cycles"],
Cell[CellGroupData[{
Cell[113987, 4563, 285, 9, 23, "Input",
 CellTags->"Cycles"],
Cell[114275, 4574, 869, 29, 39, "Output",
 CellTags->"Cycles"]
}, Open  ]],
Cell[115159, 4606, 170, 5, 36, "MathCaption",
 CellTags->"Cycles"],
Cell[CellGroupData[{
Cell[115354, 4615, 928, 29, 23, "Input",
 CellTags->"Cycles"],
Cell[116285, 4646, 443, 14, 22, "Output",
 CellTags->"Cycles"]
}, Open  ]],
Cell[116743, 4663, 190, 5, 36, "MathCaption",
 CellTags->"Cycles"],
Cell[CellGroupData[{
Cell[116958, 4672, 187, 5, 23, "Input",
 CellTags->"Cycles"],
Cell[117148, 4679, 148, 4, 22, "Output",
 CellTags->"Cycles"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[117345, 4689, 87, 1, 30, "Subsubsection",
 CellTags->{"CycleOperations", "i:13"}],
Cell[117435, 4692, 381, 10, 33, "Text",
 CellTags->"CycleOperations"],
Cell[117819, 4704, 12016, 402, 225, "DefinitionBox",
 CellTags->{"CycleOperations", "i:14"}],
Cell[129838, 5108, 151, 6, 15, "Caption",
 CellTags->"CycleOperations"],
Cell[129992, 5116, 175, 4, 49, "MathCaption",
 CellTags->"CycleOperations"],
Cell[CellGroupData[{
Cell[130192, 5124, 451, 14, 39, "Input",
 CellTags->"CycleOperations"],
Cell[130646, 5140, 263, 8, 22, "Output",
 CellTags->"CycleOperations"]
}, Open  ]],
Cell[130924, 5151, 261, 6, 62, "MathCaption",
 CellTags->"CycleOperations"],
Cell[CellGroupData[{
Cell[131210, 5161, 241, 7, 23, "Input",
 CellTags->"CycleOperations"],
Cell[131454, 5170, 367, 12, 22, "Output",
 CellTags->"CycleOperations"]
}, Open  ]],
Cell[131836, 5185, 162, 4, 49, "MathCaption",
 CellTags->"CycleOperations"],
Cell[CellGroupData[{
Cell[132023, 5193, 411, 12, 54, "Input",
 CellTags->"CycleOperations"],
Cell[132437, 5207, 193, 6, 22, "Output",
 CellTags->"CycleOperations"]
}, Open  ]],
Cell[132645, 5216, 182, 5, 49, "MathCaption",
 CellTags->"CycleOperations"],
Cell[CellGroupData[{
Cell[132852, 5225, 152, 4, 23, "Input",
 CellTags->"CycleOperations"],
Cell[133007, 5231, 193, 6, 22, "Output",
 CellTags->"CycleOperations"]
}, Open  ]],
Cell[133215, 5240, 250, 9, 49, "MathCaption",
 CellTags->"CycleOperations"],
Cell[CellGroupData[{
Cell[133490, 5253, 280, 8, 23, "Input",
 CellTags->"CycleOperations"],
Cell[133773, 5263, 204, 6, 22, "Output",
 CellTags->"CycleOperations"]
}, Open  ]],
Cell[133992, 5272, 145, 4, 36, "MathCaption",
 CellTags->"CycleOperations"],
Cell[CellGroupData[{
Cell[134162, 5280, 819, 24, 39, "Input",
 CellTags->"CycleOperations"],
Cell[134984, 5306, 312, 10, 22, "Output",
 CellTags->"CycleOperations"]
}, Open  ]],
Cell[135311, 5319, 141, 4, 36, "MathCaption",
 CellTags->"CycleOperations"],
Cell[CellGroupData[{
Cell[135477, 5327, 606, 18, 39, "Input",
 CellTags->"CycleOperations"],
Cell[136086, 5347, 85, 2, 22, "Output",
 CellTags->"CycleOperations"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[136220, 5355, 85, 1, 30, "Subsubsection",
 CellTags->"OtherCycle"],
Cell[136308, 5358, 190, 6, 49, "MathCaption",
 CellTags->"OtherCycle"],
Cell[CellGroupData[{
Cell[136523, 5368, 314, 9, 23, "Input",
 CellTags->"OtherCycle"],
Cell[136840, 5379, 80, 2, 22, "Output",
 CellTags->"OtherCycle"]
}, Open  ]],
Cell[136935, 5384, 6069, 207, 122, "DefinitionBox",
 CellTags->{"OtherCycle", "i:15"}],
Cell[143007, 5593, 78, 1, 15, "Caption",
 CellTags->"OtherCycle"],
Cell[143088, 5596, 243, 5, 49, "MathCaption",
 CellTags->"OtherCycle"],
Cell[CellGroupData[{
Cell[143356, 5605, 1008, 32, 39, "Input",
 CellTags->"OtherCycle"],
Cell[144367, 5639, 128, 4, 22, "Output",
 CellTags->"OtherCycle"]
}, Open  ]],
Cell[144510, 5646, 376, 8, 59, "Text",
 CellTags->{"OtherCycle", "i:16"}],
Cell[144889, 5656, 1844, 61, 72, "DefinitionBox",
 CellTags->{"OtherCycle", "i:17"}],
Cell[146736, 5719, 73, 1, 15, "Caption",
 CellTags->"OtherCycle"],
Cell[146812, 5722, 127, 3, 36, "MathCaption",
 CellTags->"OtherCycle"],
Cell[CellGroupData[{
Cell[146964, 5729, 196, 5, 23, "Input",
 CellTags->"OtherCycle"],
Cell[147163, 5736, 442, 14, 22, "Output",
 CellTags->"OtherCycle"]
}, Open  ]],
Cell[147620, 5753, 168, 4, 49, "MathCaption",
 CellTags->"OtherCycle"],
Cell[CellGroupData[{
Cell[147813, 5761, 179, 5, 23, "Input",
 CellTags->"OtherCycle"],
Cell[147995, 5768, 476, 15, 22, "Output",
 CellTags->"OtherCycle"]
}, Open  ]],
Cell[148486, 5786, 288, 6, 46, "Text",
 CellTags->"OtherCycle"],
Cell[148777, 5794, 2965, 100, 78, "DefinitionBox",
 CellTags->{"OtherCycle", "i:18"}],
Cell[151745, 5896, 95, 1, 15, "Caption",
 CellTags->"OtherCycle"],
Cell[151843, 5899, 132, 3, 36, "MathCaption",
 CellTags->"OtherCycle"],
Cell[CellGroupData[{
Cell[152000, 5906, 344, 10, 39, "Input",
 CellTags->"OtherCycle"],
Cell[152347, 5918, 616, 19, 22, "Output",
 CellTags->"OtherCycle"]
}, Open  ]],
Cell[152978, 5940, 187, 4, 49, "MathCaption",
 CellTags->"OtherCycle"],
Cell[CellGroupData[{
Cell[153190, 5948, 1096, 29, 39, "Input",
 CellTags->"OtherCycle"],
Cell[154289, 5979, 1357, 39, 117, "Output",
 CellTags->"OtherCycle"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[155695, 6024, 89, 1, 30, "Subsubsection",
 CellTags->{"Stabilizers", "i:19"}],
Cell[155787, 6027, 420, 13, 46, "Text",
 CellTags->"Stabilizers"],
Cell[156210, 6042, 5359, 183, 110, "DefinitionBox",
 CellTags->"Stabilizers"],
Cell[161572, 6227, 182, 8, 15, "Caption",
 CellTags->"Stabilizers"],
Cell[161757, 6237, 173, 6, 36, "MathCaption",
 CellTags->"Stabilizers"],
Cell[CellGroupData[{
Cell[161955, 6247, 319, 11, 23, "Input",
 CellTags->"Stabilizers"],
Cell[162277, 6260, 81, 2, 22, "Output",
 CellTags->"Stabilizers"]
}, Open  ]],
Cell[162373, 6265, 134, 5, 36, "MathCaption",
 CellTags->"Stabilizers"],
Cell[CellGroupData[{
Cell[162532, 6274, 147, 4, 23, "Input",
 CellTags->"Stabilizers"],
Cell[162682, 6280, 78, 2, 22, "Output",
 CellTags->"Stabilizers"]
}, Open  ]],
Cell[162775, 6285, 132, 3, 36, "MathCaption",
 CellTags->"Stabilizers"],
Cell[CellGroupData[{
Cell[162932, 6292, 811, 26, 54, "Input",
 CellTags->"Stabilizers"],
Cell[163746, 6320, 135, 4, 22, "Output",
 CellTags->"Stabilizers"]
}, Open  ]],
Cell[163896, 6327, 527, 22, 33, "Text",
 CellTags->"Stabilizers"],
Cell[164426, 6351, 7447, 259, 97, "DefinitionBox",
 CellTags->{"Stabilizers", "i:20"}],
Cell[171876, 6612, 85, 1, 15, "Caption",
 CellTags->"Stabilizers"],
Cell[171964, 6615, 437, 18, 49, "MathCaption",
 CellTags->"Stabilizers"],
Cell[CellGroupData[{
Cell[172426, 6637, 1329, 35, 84, "Input",
 CellTags->"Stabilizers"],
Cell[173758, 6674, 1010, 30, 38, "Output",
 CellTags->"Stabilizers"]
}, Open  ]],
Cell[174783, 6707, 172, 6, 36, "MathCaption",
 CellTags->"Stabilizers"],
Cell[CellGroupData[{
Cell[174980, 6717, 184, 5, 23, "Input",
 CellTags->"Stabilizers"],
Cell[175167, 6724, 133, 4, 22, "Output",
 CellTags->"Stabilizers"]
}, Open  ]],
Cell[175315, 6731, 352, 12, 49, "MathCaption",
 CellTags->"Stabilizers"],
Cell[CellGroupData[{
Cell[175692, 6747, 310, 10, 23, "Input",
 CellTags->"Stabilizers"],
Cell[176005, 6759, 166, 5, 22, "Output",
 CellTags->"Stabilizers"]
}, Open  ]],
Cell[176186, 6767, 159, 4, 49, "MathCaption",
 CellTags->"Stabilizers"],
Cell[CellGroupData[{
Cell[176370, 6775, 189, 5, 23, "Input",
 CellTags->"Stabilizers"],
Cell[176562, 6782, 363, 12, 22, "Output",
 CellTags->"Stabilizers"]
}, Open  ]],
Cell[176940, 6797, 394, 13, 49, "MathCaption",
 CellTags->"Stabilizers"],
Cell[CellGroupData[{
Cell[177359, 6814, 354, 11, 23, "Input",
 CellTags->"Stabilizers"],
Cell[177716, 6827, 363, 12, 22, "Output",
 CellTags->"Stabilizers"]
}, Open  ]],
Cell[178094, 6842, 149, 5, 36, "MathCaption",
 CellTags->"Stabilizers"],
Cell[CellGroupData[{
Cell[178268, 6851, 256, 8, 23, "Input",
 CellTags->"Stabilizers"],
Cell[178527, 6861, 363, 12, 22, "Output",
 CellTags->"Stabilizers"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[178951, 6880, 198, 7, 48, "Subsection",
 CellTags->{"BasicZ", "i:21"}],
Cell[CellGroupData[{
Cell[179174, 6891, 123, 2, 20, "Subsubsection",
 CellTags->"BasicZ"],
Cell[179300, 6895, 847, 23, 93, "Text",
 CellTags->"BasicZ"],
Cell[180150, 6920, 9196, 312, 265, "DefinitionBox",
 CellTags->{"BasicZ", "i:22"}],
Cell[189349, 7234, 56, 1, 15, "Caption",
 CellTags->"BasicZ"],
Cell[189408, 7237, 219, 8, 44, "MathCaption",
 CellTags->"BasicZ"],
Cell[CellGroupData[{
Cell[189652, 7249, 531, 18, 38, "Input",
 CellTags->"BasicZ"],
Cell[190186, 7269, 184, 6, 22, "Output",
 CellTags->"BasicZ"]
}, Open  ]],
Cell[190385, 7278, 339, 15, 41, "MathCaption",
 CellTags->"BasicZ"],
Cell[CellGroupData[{
Cell[190749, 7297, 326, 11, 34, "Input",
 CellTags->"BasicZ"],
Cell[191078, 7310, 241, 9, 30, "Output",
 CellTags->"BasicZ"]
}, Open  ]],
Cell[191334, 7322, 223, 8, 44, "MathCaption",
 CellTags->"BasicZ"],
Cell[CellGroupData[{
Cell[191582, 7334, 441, 16, 34, "Input",
 CellTags->"BasicZ"],
Cell[192026, 7352, 151, 4, 22, "Output",
 CellTags->"BasicZ"]
}, Open  ]],
Cell[192192, 7359, 233, 8, 44, "MathCaption",
 CellTags->"BasicZ"],
Cell[CellGroupData[{
Cell[192450, 7371, 295, 10, 34, "Input",
 CellTags->"BasicZ"],
Cell[192748, 7383, 149, 6, 27, "Output",
 CellTags->"BasicZ"]
}, Open  ]],
Cell[192912, 7392, 411, 16, 57, "MathCaption",
 CellTags->"BasicZ"],
Cell[CellGroupData[{
Cell[193348, 7412, 228, 7, 34, "Input",
 CellTags->"BasicZ"],
Cell[193579, 7421, 76, 2, 22, "Output",
 CellTags->"BasicZ"]
}, Open  ]],
Cell[193670, 7426, 84, 1, 36, "MathCaption",
 CellTags->"BasicZ"],
Cell[CellGroupData[{
Cell[193779, 7431, 415, 15, 34, "Input",
 CellTags->"BasicZ"],
Cell[194197, 7448, 138, 4, 22, "Output",
 CellTags->"BasicZ"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[194384, 7458, 81, 1, 30, "Subsubsection",
 CellTags->{"DivisibilityZ", "i:23"}],
Cell[194468, 7461, 3960, 136, 78, "DefinitionBox",
 CellTags->{"DivisibilityZ", "i:24"}],
Cell[198431, 7599, 96, 1, 15, "Caption",
 CellTags->"DivisibilityZ"],
Cell[198530, 7602, 291, 11, 36, "MathCaption",
 CellTags->"DivisibilityZ"],
Cell[CellGroupData[{
Cell[198846, 7617, 256, 8, 23, "Input",
 CellTags->"DivisibilityZ"],
Cell[199105, 7627, 132, 4, 22, "Output",
 CellTags->"DivisibilityZ"]
}, Open  ]],
Cell[199252, 7634, 112, 2, 36, "MathCaption",
 CellTags->"DivisibilityZ"],
Cell[CellGroupData[{
Cell[199389, 7640, 202, 5, 23, "Input",
 CellTags->"DivisibilityZ"],
Cell[199594, 7647, 284, 10, 22, "Output",
 CellTags->"DivisibilityZ"]
}, Open  ]],
Cell[199893, 7660, 130, 3, 36, "MathCaption",
 CellTags->"DivisibilityZ"],
Cell[CellGroupData[{
Cell[200048, 7667, 301, 9, 23, "Input",
 CellTags->"DivisibilityZ"],
Cell[200352, 7678, 290, 9, 22, "Output",
 CellTags->"DivisibilityZ"]
}, Open  ]],
Cell[200657, 7690, 7611, 253, 131, "DefinitionBox",
 CellTags->{"DivisibilityZ", "i:25"}],
Cell[208271, 7945, 225, 8, 21, "Caption",
 CellTags->"DivisibilityZ"],
Cell[208499, 7955, 10212, 340, 259, "DefinitionBox3Col",
 CellTags->{"DivisibilityZ", "i:26"}],
Cell[218714, 8297, 195, 9, 15, "Caption",
 CellTags->"DivisibilityZ"],
Cell[218912, 8308, 413, 16, 44, "MathCaption",
 CellTags->"DivisibilityZ"],
Cell[CellGroupData[{
Cell[219350, 8328, 309, 10, 34, "Input",
 CellTags->"DivisibilityZ"],
Cell[219662, 8340, 83, 2, 22, "Output",
 CellTags->"DivisibilityZ"]
}, Open  ]],
Cell[219760, 8345, 110, 2, 36, "MathCaption",
 CellTags->"DivisibilityZ"],
Cell[CellGroupData[{
Cell[219895, 8351, 264, 9, 34, "Input",
 CellTags->"DivisibilityZ"],
Cell[220162, 8362, 83, 2, 22, "Output",
 CellTags->"DivisibilityZ"]
}, Open  ]],
Cell[220260, 8367, 356, 12, 57, "MathCaption",
 CellTags->"DivisibilityZ"],
Cell[CellGroupData[{
Cell[220641, 8383, 233, 8, 34, "Input",
 CellTags->"DivisibilityZ"],
Cell[220877, 8393, 148, 5, 27, "Output",
 CellTags->"DivisibilityZ"]
}, Open  ]],
Cell[221040, 8401, 155, 4, 49, "MathCaption",
 CellTags->"DivisibilityZ"],
Cell[CellGroupData[{
Cell[221220, 8409, 275, 6, 23, "Input",
 CellTags->"DivisibilityZ"],
Cell[221498, 8417, 749, 28, 22, "Output",
 CellTags->"DivisibilityZ"]
}, Open  ]],
Cell[222262, 8448, 486, 12, 83, "MathCaption",
 CellTags->"DivisibilityZ"],
Cell[CellGroupData[{
Cell[222773, 8464, 233, 6, 23, "Input",
 CellTags->"DivisibilityZ"],
Cell[223009, 8472, 735, 26, 30, "Output",
 CellTags->"DivisibilityZ"]
}, Open  ]],
Cell[223759, 8501, 383, 12, 62, "MathCaption",
 CellTags->"DivisibilityZ"],
Cell[CellGroupData[{
Cell[224167, 8517, 374, 9, 23, "Input",
 CellTags->"DivisibilityZ"],
Cell[224544, 8528, 1351, 52, 30, "Output",
 CellTags->"DivisibilityZ"]
}, Open  ]],
Cell[225910, 8583, 421, 14, 49, "MathCaption",
 CellTags->"DivisibilityZ"],
Cell[CellGroupData[{
Cell[226356, 8601, 373, 9, 23, "Input",
 CellTags->"DivisibilityZ"],
Cell[226732, 8612, 1350, 48, 22, "Output",
 CellTags->"DivisibilityZ"]
}, Open  ]],
Cell[228097, 8663, 100, 1, 36, "MathCaption",
 CellTags->"DivisibilityZ"],
Cell[CellGroupData[{
Cell[228222, 8668, 372, 9, 23, "Input",
 CellTags->"DivisibilityZ"],
Cell[228597, 8679, 1545, 58, 38, "Output",
 CellTags->"DivisibilityZ"]
}, Open  ]],
Cell[230157, 8740, 2447, 81, 46, "DefinitionBox",
 CellTags->{"DivisibilityZ", "i:27"}],
Cell[232607, 8823, 105, 1, 15, "Caption",
 CellTags->"DivisibilityZ"],
Cell[CellGroupData[{
Cell[232737, 8828, 442, 13, 23, "Input",
 CellTags->"DivisibilityZ"],
Cell[233182, 8843, 501, 18, 22, "Output",
 CellTags->"DivisibilityZ"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[233732, 8867, 83, 1, 30, "Subsubsection",
 CellTags->{"NormZ", "i:28"}],
Cell[233818, 8870, 9497, 318, 175, "DefinitionBox",
 CellTags->{"NormZ", "i:29"}],
Cell[243318, 9190, 58, 1, 15, "Caption",
 CellTags->"NormZ"],
Cell[243379, 9193, 272, 9, 57, "MathCaption",
 CellTags->"NormZ"],
Cell[CellGroupData[{
Cell[243676, 9206, 615, 20, 23, "Input",
 CellTags->"NormZ"],
Cell[244294, 9228, 1178, 40, 157, "Output",
 CellTags->"NormZ"]
}, Open  ]],
Cell[245487, 9271, 154, 4, 49, "MathCaption",
 CellTags->"NormZ"],
Cell[CellGroupData[{
Cell[245666, 9279, 369, 13, 23, "Input",
 CellTags->"NormZ"],
Cell[246038, 9294, 785, 26, 22, "Output",
 CellTags->"NormZ"]
}, Open  ]],
Cell[246838, 9323, 116, 3, 36, "MathCaption",
 CellTags->"NormZ"],
Cell[CellGroupData[{
Cell[246979, 9330, 160, 5, 23, "Input",
 CellTags->"NormZ"],
Cell[247142, 9337, 160, 5, 22, "Output",
 CellTags->"NormZ"]
}, Open  ]],
Cell[247317, 9345, 979, 32, 99, "MathCaption",
 CellTags->"NormZ"],
Cell[CellGroupData[{
Cell[248321, 9381, 218, 6, 23, "Input",
 CellTags->"NormZ"],
Cell[248542, 9389, 12083, 783, 135, 9237, 732, "GraphicsData", "PostScript", \
"Graphics",
 CellTags->"NormZ"],
Cell[260628, 10174, 336, 8, 22, "Output",
 CellTags->"NormZ"]
}, Open  ]],
Cell[260979, 10185, 550, 17, 70, "MathCaption",
 CellTags->"NormZ"],
Cell[CellGroupData[{
Cell[261554, 10206, 166, 5, 23, "Input",
 CellTags->"NormZ"],
Cell[261723, 10213, 473, 18, 30, "Output",
 CellTags->"NormZ"]
}, Open  ]],
Cell[262211, 10234, 225, 8, 44, "MathCaption",
 CellTags->"NormZ"],
Cell[CellGroupData[{
Cell[262461, 10246, 157, 4, 23, "Input",
 CellTags->"NormZ"],
Cell[262621, 10252, 1728, 71, 52, "Output",
 CellTags->"NormZ"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[264410, 10330, 73, 1, 34, "Subsection",
 CellTags->"WorkLists"],
Cell[CellGroupData[{
Cell[264508, 10335, 139, 2, 20, "Subsubsection",
 CellTags->{"WorkLists", "i:30"}],
Cell[264650, 10339, 606, 13, 85, "Text",
 CellTags->"WorkLists"],
Cell[265259, 10354, 13418, 463, 231, "DefinitionBox",
 CellTags->{"WorkLists", "i:31"}],
Cell[278680, 10819, 72, 1, 15, "Caption",
 CellTags->"WorkLists"],
Cell[278755, 10822, 287, 9, 49, "MathCaption",
 CellTags->"WorkLists"],
Cell[CellGroupData[{
Cell[279067, 10835, 203, 5, 68, "Input",
 CellTags->"WorkLists"],
Cell[279273, 10842, 420, 13, 22, "Output",
 CellTags->"WorkLists"]
}, Open  ]],
Cell[279708, 10858, 127, 4, 36, "MathCaption",
 CellTags->"WorkLists"],
Cell[CellGroupData[{
Cell[279860, 10866, 234, 6, 38, "Input",
 CellTags->"WorkLists"],
Cell[280097, 10874, 239, 8, 22, "Output",
 CellTags->"WorkLists"]
}, Open  ]],
Cell[280351, 10885, 274, 9, 36, "MathCaption",
 CellTags->"WorkLists"],
Cell[CellGroupData[{
Cell[280650, 10898, 310, 10, 23, "Input",
 CellTags->"WorkLists"],
Cell[280963, 10910, 905, 28, 22, "Output",
 CellTags->"WorkLists"]
}, Open  ]],
Cell[281883, 10941, 168, 4, 36, "MathCaption",
 CellTags->"WorkLists"],
Cell[CellGroupData[{
Cell[282076, 10949, 506, 14, 23, "Input",
 CellTags->"WorkLists"],
Cell[282585, 10965, 1769, 53, 84, "Output",
 CellTags->"WorkLists"]
}, Open  ]],
Cell[284369, 11021, 166, 5, 36, "MathCaption",
 CellTags->"WorkLists"],
Cell[CellGroupData[{
Cell[284560, 11030, 322, 10, 23, "Input",
 CellTags->"WorkLists"],
Cell[284885, 11042, 1343, 40, 38, "Output",
 CellTags->"WorkLists"]
}, Open  ]],
Cell[286243, 11085, 182, 5, 36, "MathCaption",
 CellTags->"WorkLists"],
Cell[CellGroupData[{
Cell[286450, 11094, 545, 18, 23, "Input",
 CellTags->"WorkLists"],
Cell[286998, 11114, 922, 29, 39, "Output",
 CellTags->"WorkLists"]
}, Open  ]],
Cell[287935, 11146, 129, 3, 36, "MathCaption",
 CellTags->{"WorkLists", "i:44"}],
Cell[CellGroupData[{
Cell[288089, 11153, 526, 15, 23, "Input",
 CellTags->"WorkLists"],
Cell[288618, 11170, 356, 8, 22, "Output",
 CellTags->"WorkLists"]
}, Open  ]],
Cell[288989, 11181, 128, 4, 36, "MathCaption",
 CellTags->"WorkLists"],
Cell[CellGroupData[{
Cell[289142, 11189, 114, 3, 23, "Input",
 CellTags->"WorkLists"],
Cell[289259, 11194, 356, 8, 22, "Output",
 CellTags->"WorkLists"]
}, Open  ]],
Cell[289630, 11205, 206, 9, 36, "MathCaption",
 CellTags->"WorkLists"],
Cell[CellGroupData[{
Cell[289861, 11218, 783, 23, 23, "Input",
 CellTags->"WorkLists"],
Cell[290647, 11243, 141, 4, 22, "Output",
 CellTags->"WorkLists"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[290837, 11253, 89, 1, 30, "Subsubsection",
 CellTags->{"WorkGraphics", "i:32"}],
Cell[290929, 11256, 187, 4, 33, "Text",
 CellTags->"WorkGraphics"],
Cell[291119, 11262, 14259, 480, 219, "DefinitionBox",
 CellTags->{"WorkGraphics", "i:33"}],
Cell[305381, 11744, 82, 1, 15, "Caption",
 CellTags->"WorkGraphics"],
Cell[305466, 11747, 212, 7, 49, "MathCaption",
 CellTags->"WorkGraphics"],
Cell[CellGroupData[{
Cell[305703, 11758, 280, 8, 23, "Input",
 CellTags->"WorkGraphics"],
Cell[305986, 11768, 2627, 99, 186, 1110, 70, "GraphicsData", "PostScript", \
"Graphics",
 CellTags->"WorkGraphics"]
}, Open  ]],
Cell[308628, 11870, 243, 8, 49, "MathCaption",
 CellTags->"WorkGraphics"],
Cell[CellGroupData[{
Cell[308896, 11882, 204, 6, 23, "Input",
 CellTags->"WorkGraphics"],
Cell[309103, 11890, 5599, 216, 137, 2630, 164, "GraphicsData", "PostScript", \
"Graphics",
 CellTags->"WorkGraphics"],
Cell[314705, 12108, 222, 3, 34, "Print",
 CellTags->"WorkGraphics"],
Cell[314930, 12113, 154, 4, 22, "Output",
 CellTags->"WorkGraphics"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[315133, 12123, 68, 1, 30, "Subsubsection",
 CellTags->{"Adjoin", "i:34"}],
Cell[315204, 12126, 2498, 79, 169, "Text",
 CellTags->"Adjoin"],
Cell[317705, 12207, 7317, 252, 99, "DefinitionBox",
 CellTags->"Adjoin"],
Cell[325025, 12461, 128, 6, 15, "Caption",
 CellTags->"Adjoin"],
Cell[325156, 12469, 164, 7, 41, "MathCaption",
 CellTags->"Adjoin"],
Cell[CellGroupData[{
Cell[325345, 12480, 204, 7, 34, "Input",
 CellTags->"Adjoin"],
Cell[325552, 12489, 764, 31, 30, "Output",
 CellTags->"Adjoin"]
}, Open  ]],
Cell[326331, 12523, 91, 1, 36, "MathCaption",
 CellTags->"Adjoin"],
Cell[CellGroupData[{
Cell[326447, 12528, 298, 10, 44, "Input",
 CellTags->"Adjoin"],
Cell[326748, 12540, 1714, 60, 28, "Output",
 CellTags->"Adjoin"]
}, Open  ]],
Cell[328477, 12603, 257, 7, 49, "MathCaption",
 CellTags->"Adjoin"],
Cell[CellGroupData[{
Cell[328759, 12614, 250, 9, 34, "Input",
 CellTags->"Adjoin"],
Cell[329012, 12625, 915, 39, 52, "Output",
 CellTags->"Adjoin"]
}, Open  ]],
Cell[329942, 12667, 99, 1, 36, "MathCaption",
 CellTags->"Adjoin"],
Cell[CellGroupData[{
Cell[330066, 12672, 206, 7, 29, "Input",
 CellTags->"Adjoin"],
Cell[330275, 12681, 5885, 206, 84, "Output",
 CellTags->"Adjoin"]
}, Open  ]],
Cell[336175, 12890, 178, 4, 49, "MathCaption",
 CellTags->"Adjoin"],
Cell[CellGroupData[{
Cell[336378, 12898, 249, 9, 23, "Input",
 CellTags->"Adjoin"],
Cell[336630, 12909, 443, 12, 28, "Output",
 CellTags->"Adjoin"]
}, Open  ]],
Cell[337088, 12924, 435, 12, 62, "MathCaption",
 CellTags->"Adjoin"],
Cell[CellGroupData[{
Cell[337548, 12940, 263, 8, 23, "Input",
 CellTags->"Adjoin"],
Cell[337814, 12950, 8156, 265, 138, "Output",
 CellTags->"Adjoin"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[346019, 13221, 93, 1, 30, "Subsubsection",
 CellTags->{"Disguising", "i:35"}],
Cell[346115, 13224, 458, 12, 59, "Text",
 CellTags->"Disguising"],
Cell[346576, 13238, 4889, 159, 123, "DefinitionBox",
 CellTags->{"Disguising", "i:36"}],
Cell[351468, 13399, 77, 1, 15, "Caption",
 CellTags->"Disguising"],
Cell[CellGroupData[{
Cell[351570, 13404, 1281, 36, 39, "Input",
 CellTags->"Disguising"],
Cell[352854, 13442, 15818, 717, 157, 10874, 632, "GraphicsData", \
"PostScript", "Graphics",
 CellTags->"Disguising"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[368721, 14165, 153, 5, 30, "Subsubsection",
 CellTags->{"LabCode", "i:37"}],
Cell[368877, 14172, 5790, 192, 104, "DefinitionBox",
 CellTags->{"LabCode", "i:38"}],
Cell[374670, 14366, 162, 6, 15, "Caption",
 CellTags->"LabCode"],
Cell[374835, 14374, 235, 7, 38, "MathCaption",
 CellTags->"LabCode"],
Cell[CellGroupData[{
Cell[375095, 14385, 176, 5, 23, "Input",
 CellTags->"LabCode"],
Cell[375274, 14392, 622, 21, 22, "Output",
 CellTags->"LabCode"]
}, Open  ]],
Cell[375911, 14416, 114, 3, 36, "MathCaption",
 CellTags->"LabCode"],
Cell[CellGroupData[{
Cell[376050, 14423, 186, 5, 23, "Input",
 CellTags->"LabCode"],
Cell[CellGroupData[{
Cell[376261, 14432, 5416, 270, 184, 4175, 245, "GraphicsData", "PostScript", \
"Graphics",
 CellTags->"LabCode"],
Cell[381680, 14704, 3837, 185, 294, 2363, 156, "GraphicsData", "PostScript", \
"Graphics",
 CellTags->"LabCode"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[385578, 14896, 64, 1, 30, "Subsubsection",
 CellTags->"Potpourri"],
Cell[385645, 14899, 6223, 211, 97, "DefinitionBox",
 CellTags->{"Potpourri", "i:39"}],
Cell[391871, 15112, 67, 1, 15, "Caption",
 CellTags->"Potpourri"],
Cell[391941, 15115, 141, 4, 36, "MathCaption",
 CellTags->"Potpourri"],
Cell[CellGroupData[{
Cell[392107, 15123, 425, 13, 23, "Input",
 CellTags->"Potpourri"],
Cell[392535, 15138, 155, 4, 22, "Output",
 CellTags->"Potpourri"]
}, Open  ]],
Cell[392705, 15145, 118, 3, 36, "MathCaption",
 CellTags->"Potpourri"],
Cell[CellGroupData[{
Cell[392848, 15152, 149, 4, 23, "Input",
 CellTags->"Potpourri"],
Cell[393000, 15158, 548, 20, 22, "Output",
 CellTags->"Potpourri"]
}, Open  ]],
Cell[393563, 15181, 149, 5, 36, "MathCaption",
 CellTags->"Potpourri"],
Cell[CellGroupData[{
Cell[393737, 15190, 607, 18, 23, "Input",
 CellTags->"Potpourri"],
Cell[394347, 15210, 1722, 86, 114, 1265, 74, "GraphicsData", "PostScript", \
"Graphics",
 CellTags->"Potpourri"]
}, Open  ]],
Cell[396084, 15299, 248, 7, 49, "MathCaption",
 CellTags->"Potpourri"],
Cell[CellGroupData[{
Cell[396357, 15310, 189, 6, 23, "Input",
 CellTags->"Potpourri"],
Cell[396549, 15318, 564, 18, 22, "Output",
 CellTags->"Potpourri"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

