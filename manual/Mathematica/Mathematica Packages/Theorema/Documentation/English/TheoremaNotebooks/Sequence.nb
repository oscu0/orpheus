(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    373765,       8232]
NotebookOptionsPosition[    332014,       7213]
NotebookOutlinePosition[    365345,       7964]
CellTagsIndexPosition[    364602,       7938]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Sequence Variables in Theorema 2\
\>", "Title",
 CellChangeTimes->{{3.599302556413296*^9, 3.599302562219023*^9}},
 CellID->1798432929],

Cell[CellGroupData[{

Cell["Overview", "Section",
 CellChangeTimes->{{3.599302618372277*^9, 3.599302619828641*^9}},
 CellID->1536902489],

Cell[TextData[{
 "In Theorema 2, sequence variables are denoted by dots at the end of their \
name, namely by ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", ".."}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "..."}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.599303533031844*^9, 3.599303572274164*^9}, {
  3.599303764761318*^9, 3.599303768585395*^9}},
 CellID->1916901455],

Cell[TextData[{
 "The difference between 2 and 3 dots is the same as in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " (with underscores): 2 dots mean that the variable can be instantiated by \
any sequence of at least 1 expressions, whereas 3 dots mean that the variable \
can also be instantiated by the empty sequence.\nUnlike in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", the dots are part of the name of the variable, and hence ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", ".."}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "..."}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " really denote 3 different variables."
}], "Text",
 CellChangeTimes->{{3.599303578273176*^9, 3.599303732413559*^9}, {
  3.599303786656735*^9, 3.599303787660202*^9}},
 CellID->133360773]
}, Closed]],

Cell[CellGroupData[{

Cell["Examples", "Section",
 CellChangeTimes->{{3.599302625163901*^9, 3.599302630702542*^9}, 
   3.599303796761867*^9},
 CellID->499682955],

Cell["", "OpenEnvironment",
 CellID->1935628522],

Cell[CellGroupData[{

Cell["Definition: Len", "EnvironmentHeader",
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      ButtonBox[
      "\[Times]", Evaluator -> Automatic, Appearance -> None, ButtonFunction :> 
       Theorema`Language`Session`Private`removeEnvironment[
         ButtonNotebook[]]]]]}, {None, None}},
 CellChangeTimes->{{3.58676532945605*^9, 3.586765330274881*^9}},
 CellID->1300838807],

Cell[BoxData[
 RowBox[{
  TagBox["(",
   "AutoParentheses"], 
  RowBox[{
   UnderscriptBox["\[ForAll]", 
    RowBox[{"h", ",", 
     RowBox[{"r", "..."}]}]], 
   RowBox[{
    TagBox["(",
     "AutoParentheses"], 
    RowBox[{
     RowBox[{"Len", "[", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"h", ",", 
        RowBox[{"r", "..."}]}], "\[RightAngleBracket]"}], "]"}], ":=", 
     RowBox[{"1", "+", 
      RowBox[{"Len", "[", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"r", "..."}], "\[RightAngleBracket]"}], "]"}]}]}], 
    TagBox[")",
     "AutoParentheses"]}]}], 
  TagBox[")",
   "AutoParentheses"]}]], "FormalTextInputFormula",
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      RowBox[{
        StyleBox["(3)", "FrameLabel"], "  ", 
        ButtonBox[
        "\[Times]", Evaluator -> Automatic, Appearance -> None, 
         ButtonFunction :> 
         Theorema`Language`Session`Private`removeFormula[{
           "ID:1520803150", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}]]}]]]}, {None, None}},
 ShowCellTags->False,
 CellChangeTimes->{{3.5867653355418*^9, 3.586765363356802*^9}},
 CellTags->{
  "ID:1520803150", 
   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", "3"},
 CellID->1520803150],

Cell[BoxData[
 RowBox[{
  TagBox["(",
   "AutoParentheses"], 
  RowBox[{
   RowBox[{"Len", "[", 
    RowBox[{"\[LeftAngleBracket]", "\[RightAngleBracket]"}], "]"}], ":=", 
   "0"}], 
  TagBox[")",
   "AutoParentheses"]}]], "FormalTextInputFormula",
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      RowBox[{
        StyleBox["(4)", "FrameLabel"], "  ", 
        ButtonBox[
        "\[Times]", Evaluator -> Automatic, Appearance -> None, 
         ButtonFunction :> 
         Theorema`Language`Session`Private`removeFormula[{
           "ID:1324154882", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}]]}]]]}, {None, None}},
 ShowCellTags->False,
 CellChangeTimes->{{3.586765431372689*^9, 3.586765437255052*^9}},
 CellTags->{
  "ID:1324154882", 
   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", "4"},
 CellID->1324154882],

Cell["\[GraySquare]", "EndEnvironmentMarker",
 CellID->1196850561]
}, Open  ]],

Cell["", "CloseEnvironment",
 CellID->1262707458],

Cell["", "OpenEnvironment",
 CellID->895459919],

Cell[CellGroupData[{

Cell["Definition: ElementOf", "EnvironmentHeader",
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      ButtonBox[
      "\[Times]", Evaluator -> Automatic, Appearance -> None, ButtonFunction :> 
       Theorema`Language`Session`Private`removeEnvironment[
         ButtonNotebook[]]]]]}, {None, None}},
 CellChangeTimes->{{3.58676545395914*^9, 3.586765458962831*^9}},
 CellID->1071626981],

Cell[BoxData[
 RowBox[{
  TagBox["(",
   "AutoParentheses"], 
  RowBox[{
   UnderscriptBox["\[ForAll]", 
    RowBox[{
     RowBox[{"f", "..."}], ",", "x", ",", 
     RowBox[{"l", "..."}]}]], 
   RowBox[{
    TagBox["(",
     "AutoParentheses"], 
    RowBox[{
     RowBox[{"ElementOf", "[", 
      RowBox[{"x", ",", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{
         RowBox[{"f", "..."}], ",", "x", ",", 
         RowBox[{"l", "..."}]}], "\[RightAngleBracket]"}]}], "]"}], 
     TagBox[
      RowBox[{
      ":", "\[NegativeThickSpace]\[NegativeThinSpace]", 
       "\[DoubleLongLeftRightArrow]"}],
      Identity,
      SyntaxForm->"a\[Implies]b"], "True"}], 
    TagBox[")",
     "AutoParentheses"]}]}], 
  TagBox[")",
   "AutoParentheses"]}]], "FormalTextInputFormula",
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      RowBox[{
        StyleBox["(1)", "FrameLabel"], "  ", 
        ButtonBox[
        "\[Times]", Evaluator -> Automatic, Appearance -> None, 
         ButtonFunction :> 
         Theorema`Language`Session`Private`removeFormula[{
           "ID:683991833", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}]]}]]]}, {None, None}},
 ShowCellTags->False,
 CellChangeTimes->{{3.58676546997417*^9, 3.586765542946222*^9}, 
   3.58676572260207*^9},
 CellTags->{
  "ID:683991833", 
   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", "1"},
 CellID->683991833],

Cell[BoxData[
 RowBox[{
  TagBox["(",
   "AutoParentheses"], 
  RowBox[{
   UnderscriptBox["\[ForAll]", 
    RowBox[{"x", ",", "y"}]], 
   RowBox[{
    TagBox["(",
     "AutoParentheses"], 
    RowBox[{
     RowBox[{"ElementOf", "[", 
      RowBox[{"x", ",", "y"}], "]"}], 
     TagBox[
      RowBox[{
      ":", "\[NegativeThickSpace]\[NegativeThinSpace]", 
       "\[DoubleLongLeftRightArrow]"}],
      Identity,
      SyntaxForm->"a\[Implies]b"], "False"}], 
    TagBox[")",
     "AutoParentheses"]}]}], 
  TagBox[")",
   "AutoParentheses"]}]], "FormalTextInputFormula",
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      RowBox[{
        StyleBox["(2)", "FrameLabel"], "  ", 
        ButtonBox[
        "\[Times]", Evaluator -> Automatic, Appearance -> None, 
         ButtonFunction :> 
         Theorema`Language`Session`Private`removeFormula[{
           "ID:1207637328", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}]]}]]]}, {None, None}},
 ShowCellTags->False,
 CellChangeTimes->{{3.586765557565784*^9, 3.586765568204338*^9}},
 CellTags->{
  "ID:1207637328", 
   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", "2"},
 CellID->1207637328],

Cell["\[GraySquare]", "EndEnvironmentMarker",
 CellID->734249627]
}, Open  ]],

Cell["", "CloseEnvironment",
 CellID->748773727],

Cell["", "OpenEnvironment",
 CellID->1264240320],

Cell[CellGroupData[{

Cell["Definition: IsEmpty", "EnvironmentHeader",
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      ButtonBox[
      "\[Times]", Evaluator -> Automatic, Appearance -> None, ButtonFunction :> 
       Theorema`Language`Session`Private`removeEnvironment[
         ButtonNotebook[]]]]]}, {None, None}},
 CellChangeTimes->{{3.587178985460601*^9, 3.587178987865488*^9}},
 CellID->816766265],

Cell[BoxData[
 RowBox[{
  TagBox["(",
   "AutoParentheses"], 
  RowBox[{
   UnderscriptBox["\[ForAll]", 
    RowBox[{"l", ".."}]], 
   RowBox[{
    TagBox["(",
     "AutoParentheses"], 
    RowBox[{
     RowBox[{"IsEmpty", "[", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"l", ".."}], "\[RightAngleBracket]"}], "]"}], 
     TagBox[
      RowBox[{
      ":", "\[NegativeThickSpace]\[NegativeThinSpace]", 
       "\[DoubleLongLeftRightArrow]"}],
      Identity,
      SyntaxForm->"a\[Implies]b"], "False"}], 
    TagBox[")",
     "AutoParentheses"]}]}], 
  TagBox[")",
   "AutoParentheses"]}]], "FormalTextInputFormula",
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      RowBox[{
        StyleBox["(6)", "FrameLabel"], "  ", 
        ButtonBox[
        "\[Times]", Evaluator -> Automatic, Appearance -> None, 
         ButtonFunction :> 
         Theorema`Language`Session`Private`removeFormula[{
           "ID:2072579713", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}]]}]]]}, {None, None}},
 ShowCellTags->False,
 CellChangeTimes->{{3.587178993339831*^9, 3.587179013119977*^9}},
 CellTags->{
  "ID:2072579713", 
   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", "6"},
 CellID->2072579713],

Cell["\[GraySquare]", "EndEnvironmentMarker",
 CellID->550610118]
}, Open  ]],

Cell["", "CloseEnvironment",
 CellID->791201165],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ElementOf", "[", 
  RowBox[{"0", ",", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "\[RightAngleBracket]"}]}], 
  "]"}]], "Computation",
 CellChangeTimes->{{3.586765586402757*^9, 3.586765597129557*^9}},
 CellID->1656730105],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"3\"\>", ",", "\<\"2\"\>", ",", "\<\"1\"\>", 
                    ",", "\<\"4\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{"3", "2", "1", "4"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", 
                    ",", "\<\"CaseDistinction\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Equal\"\>", 
                    ",", "\<\"Exists\"\>", ",", "\<\"For\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Insert\"\>", 
                    ",", "\<\"Intersection\"\>", ",", "\<\"IsElement\"\>", 
                    ",", "\<\"isInteger\"\>", ",", "\<\"isRational\"\>", 
                    ",", "\<\"isSet\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"Power\"\>", 
                    ",", "\<\"PowerSet\"\>", ",", "\<\"Prepend\"\>", 
                    ",", "\<\"ProductOf\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"SumOf\"\>", 
                    ",", "\<\"Superset\"\>", ",", "\<\"SupersetEqual\"\>", 
                    ",", "\<\"Switch\"\>", ",", "\<\"SymmetricDifference\"\>",
                     ",", "\<\"Times\"\>", ",", "\<\"TupleEqual\"\>", 
                    ",", "\<\"Union\"\>", ",", "\<\"Which\"\>", 
                    ",", "\<\"While\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "CaseDistinction", "Delete", "DeleteAt", "Difference", 
                    "Do", "Equal", "Exists", "For", "Forall", "Greater", 
                    "GreaterEqual", "Iff", "Implies", "Insert", 
                    "Intersection", "IsElement", "isInteger", "isRational", 
                    "isSet", "Join", "Length", "Less", "LessEqual", "Max", 
                    "MaximumElementSet", "Min", "MinimumElementSet", "Module",
                     "Not", "Or", "Plus", "Power", "PowerSet", "Prepend", 
                    "ProductOf", "Replace", "ReplacePart", "SetEqual", 
                    "Subscript", "Subset", "SubsetEqual", "SumOf", "Superset",
                     "SupersetEqual", "Switch", "SymmetricDifference", 
                    "Times", "TupleEqual", "Union", "Which", "While"}, 
                   "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Restore environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{{{
                  "ID:1207637328", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}, {{
                  "ID:1324154882", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}, {{
                  "ID:1520803150", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}, {{
                  "ID:683991833", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}}, {{"And", True}, {"Append", True}, {
                 "Cardinality", True}, {"CartesianProduct", True}, {
                 "CaseDistinction", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", True}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {
                 "isInteger", True}, {"isRational", True}, {"isSet", True}, {
                 "Join", True}, {"Length", True}, {"Less", True}, {
                 "LessEqual", True}, {"Max", True}, {
                 "MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "Power", True}, {"PowerSet", True}, {"Prepend", True}, {
                 "ProductOf", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"SumOf", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           DefaultBaseStyle->"Column",
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{"3", "2", "1", "4"}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", 
           "CaseDistinction", "Delete", "DeleteAt", "Difference", "Do", 
           "Equal", "Exists", "For", "Forall", "Greater", "GreaterEqual", 
           "Iff", "Implies", "Insert", "Intersection", "IsElement", 
           "isInteger", "isRational", "isSet", "Join", "Length", "Less", 
           "LessEqual", "Max", "MaximumElementSet", "Min", 
           "MinimumElementSet", "Module", "Not", "Or", "Plus", "Power", 
           "PowerSet", "Prepend", "ProductOf", "Replace", "ReplacePart", 
           "SetEqual", "Subscript", "Subset", "SubsetEqual", "SumOf", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Restore environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{{{
           "ID:1207637328", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}, {{
           "ID:1324154882", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}, {{
           "ID:1520803150", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}, {{
           "ID:683991833", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}}, {{"And", True}, {"Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"CaseDistinction", True}, {
          "Delete", True}, {"DeleteAt", True}, {"Difference", True}, {
          "Do", True}, {"Equal", True}, {"Exists", True}, {"For", True}, {
          "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
          "Iff", True}, {"Implies", True}, {"Insert", True}, {
          "Intersection", True}, {"IsElement", True}, {"isInteger", True}, {
          "isRational", True}, {"isSet", True}, {"Join", True}, {
          "Length", True}, {"Less", True}, {"LessEqual", True}, {
          "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"Power", True}, {"PowerSet", True}, {
          "Prepend", True}, {"ProductOf", True}, {"Replace", True}, {
          "ReplacePart", True}, {"SetEqual", True}, {"Subscript", True}, {
          "Subset", True}, {"SubsetEqual", True}, {"SumOf", True}, {
          "Superset", True}, {"SupersetEqual", True}, {"Switch", True}, {
          "SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.587178858131488*^9},
 CellID->1764826867],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.586765608558867*^9, {3.58676583929313*^9, 3.586765855658195*^9}, 
   3.587178858139191*^9},
 CellID->1477646875]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ElementOf", "[", 
  RowBox[{"1", ",", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "\[RightAngleBracket]"}]}], 
  "]"}]], "Computation",
 CellChangeTimes->{{3.586765615015843*^9, 3.586765626199199*^9}, {
  3.586765671442422*^9, 3.586765697306761*^9}},
 CellID->255419321],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"3\"\>", ",", "\<\"2\"\>", ",", "\<\"1\"\>", 
                    ",", "\<\"4\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{"3", "2", "1", "4"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", 
                    ",", "\<\"CaseDistinction\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Equal\"\>", 
                    ",", "\<\"Exists\"\>", ",", "\<\"For\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Insert\"\>", 
                    ",", "\<\"Intersection\"\>", ",", "\<\"IsElement\"\>", 
                    ",", "\<\"isInteger\"\>", ",", "\<\"isRational\"\>", 
                    ",", "\<\"isSet\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"Power\"\>", 
                    ",", "\<\"PowerSet\"\>", ",", "\<\"Prepend\"\>", 
                    ",", "\<\"ProductOf\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"SumOf\"\>", 
                    ",", "\<\"Superset\"\>", ",", "\<\"SupersetEqual\"\>", 
                    ",", "\<\"Switch\"\>", ",", "\<\"SymmetricDifference\"\>",
                     ",", "\<\"Times\"\>", ",", "\<\"TupleEqual\"\>", 
                    ",", "\<\"Union\"\>", ",", "\<\"Which\"\>", 
                    ",", "\<\"While\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "CaseDistinction", "Delete", "DeleteAt", "Difference", 
                    "Do", "Equal", "Exists", "For", "Forall", "Greater", 
                    "GreaterEqual", "Iff", "Implies", "Insert", 
                    "Intersection", "IsElement", "isInteger", "isRational", 
                    "isSet", "Join", "Length", "Less", "LessEqual", "Max", 
                    "MaximumElementSet", "Min", "MinimumElementSet", "Module",
                     "Not", "Or", "Plus", "Power", "PowerSet", "Prepend", 
                    "ProductOf", "Replace", "ReplacePart", "SetEqual", 
                    "Subscript", "Subset", "SubsetEqual", "SumOf", "Superset",
                     "SupersetEqual", "Switch", "SymmetricDifference", 
                    "Times", "TupleEqual", "Union", "Which", "While"}, 
                   "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Restore environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{{{
                  "ID:1207637328", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}, {{
                  "ID:1324154882", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}, {{
                  "ID:1520803150", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}, {{
                  "ID:683991833", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}}, {{"And", True}, {"Append", True}, {
                 "Cardinality", True}, {"CartesianProduct", True}, {
                 "CaseDistinction", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", True}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {
                 "isInteger", True}, {"isRational", True}, {"isSet", True}, {
                 "Join", True}, {"Length", True}, {"Less", True}, {
                 "LessEqual", True}, {"Max", True}, {
                 "MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "Power", True}, {"PowerSet", True}, {"Prepend", True}, {
                 "ProductOf", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"SumOf", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           DefaultBaseStyle->"Column",
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{"3", "2", "1", "4"}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", 
           "CaseDistinction", "Delete", "DeleteAt", "Difference", "Do", 
           "Equal", "Exists", "For", "Forall", "Greater", "GreaterEqual", 
           "Iff", "Implies", "Insert", "Intersection", "IsElement", 
           "isInteger", "isRational", "isSet", "Join", "Length", "Less", 
           "LessEqual", "Max", "MaximumElementSet", "Min", 
           "MinimumElementSet", "Module", "Not", "Or", "Plus", "Power", 
           "PowerSet", "Prepend", "ProductOf", "Replace", "ReplacePart", 
           "SetEqual", "Subscript", "Subset", "SubsetEqual", "SumOf", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Restore environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{{{
           "ID:1207637328", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}, {{
           "ID:1324154882", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}, {{
           "ID:1520803150", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}, {{
           "ID:683991833", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}}, {{"And", True}, {"Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"CaseDistinction", True}, {
          "Delete", True}, {"DeleteAt", True}, {"Difference", True}, {
          "Do", True}, {"Equal", True}, {"Exists", True}, {"For", True}, {
          "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
          "Iff", True}, {"Implies", True}, {"Insert", True}, {
          "Intersection", True}, {"IsElement", True}, {"isInteger", True}, {
          "isRational", True}, {"isSet", True}, {"Join", True}, {
          "Length", True}, {"Less", True}, {"LessEqual", True}, {
          "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"Power", True}, {"PowerSet", True}, {
          "Prepend", True}, {"ProductOf", True}, {"Replace", True}, {
          "ReplacePart", True}, {"SetEqual", True}, {"Subscript", True}, {
          "Subset", True}, {"SubsetEqual", True}, {"SumOf", True}, {
          "Superset", True}, {"SupersetEqual", True}, {"Switch", True}, {
          "SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.587178861655975*^9},
 CellID->1519163807],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.586765742169353*^9, 3.586765749934011*^9}, 
   3.586765863996304*^9, 3.587178861685614*^9},
 CellID->1167465046]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ElementOf", "[", 
  RowBox[{"2", ",", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "\[RightAngleBracket]"}]}], 
  "]"}]], "Computation",
 CellChangeTimes->{{3.586765887352429*^9, 3.586765895844342*^9}},
 CellID->959058670],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"3\"\>", ",", "\<\"2\"\>", ",", "\<\"1\"\>", 
                    ",", "\<\"4\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{"3", "2", "1", "4"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", 
                    ",", "\<\"CaseDistinction\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Equal\"\>", 
                    ",", "\<\"Exists\"\>", ",", "\<\"For\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Insert\"\>", 
                    ",", "\<\"Intersection\"\>", ",", "\<\"IsElement\"\>", 
                    ",", "\<\"isInteger\"\>", ",", "\<\"isRational\"\>", 
                    ",", "\<\"isSet\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"Power\"\>", 
                    ",", "\<\"PowerSet\"\>", ",", "\<\"Prepend\"\>", 
                    ",", "\<\"ProductOf\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"SumOf\"\>", 
                    ",", "\<\"Superset\"\>", ",", "\<\"SupersetEqual\"\>", 
                    ",", "\<\"Switch\"\>", ",", "\<\"SymmetricDifference\"\>",
                     ",", "\<\"Times\"\>", ",", "\<\"TupleEqual\"\>", 
                    ",", "\<\"Union\"\>", ",", "\<\"Which\"\>", 
                    ",", "\<\"While\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "CaseDistinction", "Delete", "DeleteAt", "Difference", 
                    "Do", "Equal", "Exists", "For", "Forall", "Greater", 
                    "GreaterEqual", "Iff", "Implies", "Insert", 
                    "Intersection", "IsElement", "isInteger", "isRational", 
                    "isSet", "Join", "Length", "Less", "LessEqual", "Max", 
                    "MaximumElementSet", "Min", "MinimumElementSet", "Module",
                     "Not", "Or", "Plus", "Power", "PowerSet", "Prepend", 
                    "ProductOf", "Replace", "ReplacePart", "SetEqual", 
                    "Subscript", "Subset", "SubsetEqual", "SumOf", "Superset",
                     "SupersetEqual", "Switch", "SymmetricDifference", 
                    "Times", "TupleEqual", "Union", "Which", "While"}, 
                   "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Restore environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{{{
                  "ID:1207637328", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}, {{
                  "ID:1324154882", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}, {{
                  "ID:1520803150", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}, {{
                  "ID:683991833", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}}, {{"And", True}, {"Append", True}, {
                 "Cardinality", True}, {"CartesianProduct", True}, {
                 "CaseDistinction", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", True}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {
                 "isInteger", True}, {"isRational", True}, {"isSet", True}, {
                 "Join", True}, {"Length", True}, {"Less", True}, {
                 "LessEqual", True}, {"Max", True}, {
                 "MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "Power", True}, {"PowerSet", True}, {"Prepend", True}, {
                 "ProductOf", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"SumOf", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           DefaultBaseStyle->"Column",
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{"3", "2", "1", "4"}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", 
           "CaseDistinction", "Delete", "DeleteAt", "Difference", "Do", 
           "Equal", "Exists", "For", "Forall", "Greater", "GreaterEqual", 
           "Iff", "Implies", "Insert", "Intersection", "IsElement", 
           "isInteger", "isRational", "isSet", "Join", "Length", "Less", 
           "LessEqual", "Max", "MaximumElementSet", "Min", 
           "MinimumElementSet", "Module", "Not", "Or", "Plus", "Power", 
           "PowerSet", "Prepend", "ProductOf", "Replace", "ReplacePart", 
           "SetEqual", "Subscript", "Subset", "SubsetEqual", "SumOf", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Restore environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{{{
           "ID:1207637328", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}, {{
           "ID:1324154882", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}, {{
           "ID:1520803150", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}, {{
           "ID:683991833", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}}, {{"And", True}, {"Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"CaseDistinction", True}, {
          "Delete", True}, {"DeleteAt", True}, {"Difference", True}, {
          "Do", True}, {"Equal", True}, {"Exists", True}, {"For", True}, {
          "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
          "Iff", True}, {"Implies", True}, {"Insert", True}, {
          "Intersection", True}, {"IsElement", True}, {"isInteger", True}, {
          "isRational", True}, {"isSet", True}, {"Join", True}, {
          "Length", True}, {"Less", True}, {"LessEqual", True}, {
          "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"Power", True}, {"PowerSet", True}, {
          "Prepend", True}, {"ProductOf", True}, {"Replace", True}, {
          "ReplacePart", True}, {"SetEqual", True}, {"Subscript", True}, {
          "Subset", True}, {"SubsetEqual", True}, {"SumOf", True}, {
          "Superset", True}, {"SupersetEqual", True}, {"Switch", True}, {
          "SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.587178863703545*^9},
 CellID->1526131031],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.586765897055*^9, 3.587178863727822*^9},
 CellID->2145662583]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ElementOf", "[", 
  RowBox[{"3", ",", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "\[RightAngleBracket]"}]}], 
  "]"}]], "Computation",
 CellChangeTimes->{{3.586765901762322*^9, 3.586765909914456*^9}},
 CellID->2059232044],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"3\"\>", ",", "\<\"2\"\>", ",", "\<\"1\"\>", 
                    ",", "\<\"4\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{"3", "2", "1", "4"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", 
                    ",", "\<\"CaseDistinction\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Equal\"\>", 
                    ",", "\<\"Exists\"\>", ",", "\<\"For\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Insert\"\>", 
                    ",", "\<\"Intersection\"\>", ",", "\<\"IsElement\"\>", 
                    ",", "\<\"isInteger\"\>", ",", "\<\"isRational\"\>", 
                    ",", "\<\"isSet\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"Power\"\>", 
                    ",", "\<\"PowerSet\"\>", ",", "\<\"Prepend\"\>", 
                    ",", "\<\"ProductOf\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"SumOf\"\>", 
                    ",", "\<\"Superset\"\>", ",", "\<\"SupersetEqual\"\>", 
                    ",", "\<\"Switch\"\>", ",", "\<\"SymmetricDifference\"\>",
                     ",", "\<\"Times\"\>", ",", "\<\"TupleEqual\"\>", 
                    ",", "\<\"Union\"\>", ",", "\<\"Which\"\>", 
                    ",", "\<\"While\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "CaseDistinction", "Delete", "DeleteAt", "Difference", 
                    "Do", "Equal", "Exists", "For", "Forall", "Greater", 
                    "GreaterEqual", "Iff", "Implies", "Insert", 
                    "Intersection", "IsElement", "isInteger", "isRational", 
                    "isSet", "Join", "Length", "Less", "LessEqual", "Max", 
                    "MaximumElementSet", "Min", "MinimumElementSet", "Module",
                     "Not", "Or", "Plus", "Power", "PowerSet", "Prepend", 
                    "ProductOf", "Replace", "ReplacePart", "SetEqual", 
                    "Subscript", "Subset", "SubsetEqual", "SumOf", "Superset",
                     "SupersetEqual", "Switch", "SymmetricDifference", 
                    "Times", "TupleEqual", "Union", "Which", "While"}, 
                   "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Restore environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{{{
                  "ID:1207637328", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}, {{
                  "ID:1324154882", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}, {{
                  "ID:1520803150", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}, {{
                  "ID:683991833", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}}, {{"And", True}, {"Append", True}, {
                 "Cardinality", True}, {"CartesianProduct", True}, {
                 "CaseDistinction", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", True}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {
                 "isInteger", True}, {"isRational", True}, {"isSet", True}, {
                 "Join", True}, {"Length", True}, {"Less", True}, {
                 "LessEqual", True}, {"Max", True}, {
                 "MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "Power", True}, {"PowerSet", True}, {"Prepend", True}, {
                 "ProductOf", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"SumOf", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           DefaultBaseStyle->"Column",
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{"3", "2", "1", "4"}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", 
           "CaseDistinction", "Delete", "DeleteAt", "Difference", "Do", 
           "Equal", "Exists", "For", "Forall", "Greater", "GreaterEqual", 
           "Iff", "Implies", "Insert", "Intersection", "IsElement", 
           "isInteger", "isRational", "isSet", "Join", "Length", "Less", 
           "LessEqual", "Max", "MaximumElementSet", "Min", 
           "MinimumElementSet", "Module", "Not", "Or", "Plus", "Power", 
           "PowerSet", "Prepend", "ProductOf", "Replace", "ReplacePart", 
           "SetEqual", "Subscript", "Subset", "SubsetEqual", "SumOf", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Restore environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{{{
           "ID:1207637328", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}, {{
           "ID:1324154882", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}, {{
           "ID:1520803150", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}, {{
           "ID:683991833", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}}, {{"And", True}, {"Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"CaseDistinction", True}, {
          "Delete", True}, {"DeleteAt", True}, {"Difference", True}, {
          "Do", True}, {"Equal", True}, {"Exists", True}, {"For", True}, {
          "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
          "Iff", True}, {"Implies", True}, {"Insert", True}, {
          "Intersection", True}, {"IsElement", True}, {"isInteger", True}, {
          "isRational", True}, {"isSet", True}, {"Join", True}, {
          "Length", True}, {"Less", True}, {"LessEqual", True}, {
          "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"Power", True}, {"PowerSet", True}, {
          "Prepend", True}, {"ProductOf", True}, {"Replace", True}, {
          "ReplacePart", True}, {"SetEqual", True}, {"Subscript", True}, {
          "Subset", True}, {"SubsetEqual", True}, {"SumOf", True}, {
          "Superset", True}, {"SupersetEqual", True}, {"Switch", True}, {
          "SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.587178865438579*^9},
 CellID->920702413],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.586765910468309*^9, 3.587178865444734*^9},
 CellID->1036424883]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ElementOf", "[", 
  RowBox[{"4", ",", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "\[RightAngleBracket]"}]}], 
  "]"}]], "Computation",
 CellChangeTimes->{{3.586765913445229*^9, 3.586765924659546*^9}},
 CellID->1629913276],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"3\"\>", ",", "\<\"2\"\>", ",", "\<\"1\"\>", 
                    ",", "\<\"4\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{"3", "2", "1", "4"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", 
                    ",", "\<\"CaseDistinction\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Equal\"\>", 
                    ",", "\<\"Exists\"\>", ",", "\<\"For\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Insert\"\>", 
                    ",", "\<\"Intersection\"\>", ",", "\<\"IsElement\"\>", 
                    ",", "\<\"isInteger\"\>", ",", "\<\"isRational\"\>", 
                    ",", "\<\"isSet\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"Power\"\>", 
                    ",", "\<\"PowerSet\"\>", ",", "\<\"Prepend\"\>", 
                    ",", "\<\"ProductOf\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"SumOf\"\>", 
                    ",", "\<\"Superset\"\>", ",", "\<\"SupersetEqual\"\>", 
                    ",", "\<\"Switch\"\>", ",", "\<\"SymmetricDifference\"\>",
                     ",", "\<\"Times\"\>", ",", "\<\"TupleEqual\"\>", 
                    ",", "\<\"Union\"\>", ",", "\<\"Which\"\>", 
                    ",", "\<\"While\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "CaseDistinction", "Delete", "DeleteAt", "Difference", 
                    "Do", "Equal", "Exists", "For", "Forall", "Greater", 
                    "GreaterEqual", "Iff", "Implies", "Insert", 
                    "Intersection", "IsElement", "isInteger", "isRational", 
                    "isSet", "Join", "Length", "Less", "LessEqual", "Max", 
                    "MaximumElementSet", "Min", "MinimumElementSet", "Module",
                     "Not", "Or", "Plus", "Power", "PowerSet", "Prepend", 
                    "ProductOf", "Replace", "ReplacePart", "SetEqual", 
                    "Subscript", "Subset", "SubsetEqual", "SumOf", "Superset",
                     "SupersetEqual", "Switch", "SymmetricDifference", 
                    "Times", "TupleEqual", "Union", "Which", "While"}, 
                   "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Restore environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{{{
                  "ID:1207637328", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}, {{
                  "ID:1324154882", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}, {{
                  "ID:1520803150", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}, {{
                  "ID:683991833", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}}, {{"And", True}, {"Append", True}, {
                 "Cardinality", True}, {"CartesianProduct", True}, {
                 "CaseDistinction", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", True}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {
                 "isInteger", True}, {"isRational", True}, {"isSet", True}, {
                 "Join", True}, {"Length", True}, {"Less", True}, {
                 "LessEqual", True}, {"Max", True}, {
                 "MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "Power", True}, {"PowerSet", True}, {"Prepend", True}, {
                 "ProductOf", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"SumOf", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           DefaultBaseStyle->"Column",
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{"3", "2", "1", "4"}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", 
           "CaseDistinction", "Delete", "DeleteAt", "Difference", "Do", 
           "Equal", "Exists", "For", "Forall", "Greater", "GreaterEqual", 
           "Iff", "Implies", "Insert", "Intersection", "IsElement", 
           "isInteger", "isRational", "isSet", "Join", "Length", "Less", 
           "LessEqual", "Max", "MaximumElementSet", "Min", 
           "MinimumElementSet", "Module", "Not", "Or", "Plus", "Power", 
           "PowerSet", "Prepend", "ProductOf", "Replace", "ReplacePart", 
           "SetEqual", "Subscript", "Subset", "SubsetEqual", "SumOf", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Restore environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{{{
           "ID:1207637328", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}, {{
           "ID:1324154882", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}, {{
           "ID:1520803150", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}, {{
           "ID:683991833", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}}, {{"And", True}, {"Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"CaseDistinction", True}, {
          "Delete", True}, {"DeleteAt", True}, {"Difference", True}, {
          "Do", True}, {"Equal", True}, {"Exists", True}, {"For", True}, {
          "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
          "Iff", True}, {"Implies", True}, {"Insert", True}, {
          "Intersection", True}, {"IsElement", True}, {"isInteger", True}, {
          "isRational", True}, {"isSet", True}, {"Join", True}, {
          "Length", True}, {"Less", True}, {"LessEqual", True}, {
          "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"Power", True}, {"PowerSet", True}, {
          "Prepend", True}, {"ProductOf", True}, {"Replace", True}, {
          "ReplacePart", True}, {"SetEqual", True}, {"Subscript", True}, {
          "Subset", True}, {"SubsetEqual", True}, {"SumOf", True}, {
          "Superset", True}, {"SupersetEqual", True}, {"Switch", True}, {
          "SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.587178867037511*^9},
 CellID->83244821],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.586765921895257*^9, 3.586765924964007*^9}, 
   3.587178867054887*^9},
 CellID->389325035]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ElementOf", "[", 
  RowBox[{"5", ",", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "\[RightAngleBracket]"}]}], 
  "]"}]], "Computation",
 CellChangeTimes->{{3.586765928425349*^9, 3.586765937786667*^9}},
 CellID->1613881432],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"3\"\>", ",", "\<\"2\"\>", ",", "\<\"1\"\>", 
                    ",", "\<\"4\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{"3", "2", "1", "4"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", 
                    ",", "\<\"CaseDistinction\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Equal\"\>", 
                    ",", "\<\"Exists\"\>", ",", "\<\"For\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Insert\"\>", 
                    ",", "\<\"Intersection\"\>", ",", "\<\"IsElement\"\>", 
                    ",", "\<\"isInteger\"\>", ",", "\<\"isRational\"\>", 
                    ",", "\<\"isSet\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"Power\"\>", 
                    ",", "\<\"PowerSet\"\>", ",", "\<\"Prepend\"\>", 
                    ",", "\<\"ProductOf\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"SumOf\"\>", 
                    ",", "\<\"Superset\"\>", ",", "\<\"SupersetEqual\"\>", 
                    ",", "\<\"Switch\"\>", ",", "\<\"SymmetricDifference\"\>",
                     ",", "\<\"Times\"\>", ",", "\<\"TupleEqual\"\>", 
                    ",", "\<\"Union\"\>", ",", "\<\"Which\"\>", 
                    ",", "\<\"While\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "CaseDistinction", "Delete", "DeleteAt", "Difference", 
                    "Do", "Equal", "Exists", "For", "Forall", "Greater", 
                    "GreaterEqual", "Iff", "Implies", "Insert", 
                    "Intersection", "IsElement", "isInteger", "isRational", 
                    "isSet", "Join", "Length", "Less", "LessEqual", "Max", 
                    "MaximumElementSet", "Min", "MinimumElementSet", "Module",
                     "Not", "Or", "Plus", "Power", "PowerSet", "Prepend", 
                    "ProductOf", "Replace", "ReplacePart", "SetEqual", 
                    "Subscript", "Subset", "SubsetEqual", "SumOf", "Superset",
                     "SupersetEqual", "Switch", "SymmetricDifference", 
                    "Times", "TupleEqual", "Union", "Which", "While"}, 
                   "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Restore environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{{{
                  "ID:1207637328", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}, {{
                  "ID:1324154882", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}, {{
                  "ID:1520803150", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}, {{
                  "ID:683991833", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}}, {{"And", True}, {"Append", True}, {
                 "Cardinality", True}, {"CartesianProduct", True}, {
                 "CaseDistinction", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", True}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {
                 "isInteger", True}, {"isRational", True}, {"isSet", True}, {
                 "Join", True}, {"Length", True}, {"Less", True}, {
                 "LessEqual", True}, {"Max", True}, {
                 "MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "Power", True}, {"PowerSet", True}, {"Prepend", True}, {
                 "ProductOf", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"SumOf", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           DefaultBaseStyle->"Column",
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{"3", "2", "1", "4"}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", 
           "CaseDistinction", "Delete", "DeleteAt", "Difference", "Do", 
           "Equal", "Exists", "For", "Forall", "Greater", "GreaterEqual", 
           "Iff", "Implies", "Insert", "Intersection", "IsElement", 
           "isInteger", "isRational", "isSet", "Join", "Length", "Less", 
           "LessEqual", "Max", "MaximumElementSet", "Min", 
           "MinimumElementSet", "Module", "Not", "Or", "Plus", "Power", 
           "PowerSet", "Prepend", "ProductOf", "Replace", "ReplacePart", 
           "SetEqual", "Subscript", "Subset", "SubsetEqual", "SumOf", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Restore environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{{{
           "ID:1207637328", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}, {{
           "ID:1324154882", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}, {{
           "ID:1520803150", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}, {{
           "ID:683991833", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}}, {{"And", True}, {"Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"CaseDistinction", True}, {
          "Delete", True}, {"DeleteAt", True}, {"Difference", True}, {
          "Do", True}, {"Equal", True}, {"Exists", True}, {"For", True}, {
          "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
          "Iff", True}, {"Implies", True}, {"Insert", True}, {
          "Intersection", True}, {"IsElement", True}, {"isInteger", True}, {
          "isRational", True}, {"isSet", True}, {"Join", True}, {
          "Length", True}, {"Less", True}, {"LessEqual", True}, {
          "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"Power", True}, {"PowerSet", True}, {
          "Prepend", True}, {"ProductOf", True}, {"Replace", True}, {
          "ReplacePart", True}, {"SetEqual", True}, {"Subscript", True}, {
          "Subset", True}, {"SubsetEqual", True}, {"SumOf", True}, {
          "Superset", True}, {"SupersetEqual", True}, {"Switch", True}, {
          "SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.587178868834322*^9},
 CellID->1561626806],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.586765938484574*^9, 3.587178868850463*^9},
 CellID->1304418964]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IsEmpty", "[", 
  RowBox[{"\[LeftAngleBracket]", "\[RightAngleBracket]"}], 
  "]"}]], "Computation",
 CellChangeTimes->{{3.587179031254736*^9, 3.587179050010579*^9}},
 CellID->1276343409],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "\<\"6\"\>", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{"6"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", 
                    ",", "\<\"CaseDistinction\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Equal\"\>", 
                    ",", "\<\"Exists\"\>", ",", "\<\"For\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Insert\"\>", 
                    ",", "\<\"Intersection\"\>", ",", "\<\"IsElement\"\>", 
                    ",", "\<\"isInteger\"\>", ",", "\<\"isRational\"\>", 
                    ",", "\<\"isSet\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"Power\"\>", 
                    ",", "\<\"PowerSet\"\>", ",", "\<\"Prepend\"\>", 
                    ",", "\<\"ProductOf\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"SumOf\"\>", 
                    ",", "\<\"Superset\"\>", ",", "\<\"SupersetEqual\"\>", 
                    ",", "\<\"Switch\"\>", ",", "\<\"SymmetricDifference\"\>",
                     ",", "\<\"Times\"\>", ",", "\<\"TupleEqual\"\>", 
                    ",", "\<\"Union\"\>", ",", "\<\"Which\"\>", 
                    ",", "\<\"While\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "CaseDistinction", "Delete", "DeleteAt", "Difference", 
                    "Do", "Equal", "Exists", "For", "Forall", "Greater", 
                    "GreaterEqual", "Iff", "Implies", "Insert", 
                    "Intersection", "IsElement", "isInteger", "isRational", 
                    "isSet", "Join", "Length", "Less", "LessEqual", "Max", 
                    "MaximumElementSet", "Min", "MinimumElementSet", "Module",
                     "Not", "Or", "Plus", "Power", "PowerSet", "Prepend", 
                    "ProductOf", "Replace", "ReplacePart", "SetEqual", 
                    "Subscript", "Subset", "SubsetEqual", "SumOf", "Superset",
                     "SupersetEqual", "Switch", "SymmetricDifference", 
                    "Times", "TupleEqual", "Union", "Which", "While"}, 
                   "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Restore environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{{{
                  "ID:1207637328", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, False}, {{
                  "ID:1324154882", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, False}, {{
                  "ID:1520803150", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, False}, {{
                  "ID:2072579713", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}, {{
                  "ID:683991833", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, False}}, {{"And", True}, {"Append", True}, {
                 "Cardinality", True}, {"CartesianProduct", True}, {
                 "CaseDistinction", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", True}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {
                 "isInteger", True}, {"isRational", True}, {"isSet", True}, {
                 "Join", True}, {"Length", True}, {"Less", True}, {
                 "LessEqual", True}, {"Max", True}, {
                 "MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "Power", True}, {"PowerSet", True}, {"Prepend", True}, {
                 "ProductOf", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"SumOf", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           DefaultBaseStyle->"Column",
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{"6"}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", 
           "CaseDistinction", "Delete", "DeleteAt", "Difference", "Do", 
           "Equal", "Exists", "For", "Forall", "Greater", "GreaterEqual", 
           "Iff", "Implies", "Insert", "Intersection", "IsElement", 
           "isInteger", "isRational", "isSet", "Join", "Length", "Less", 
           "LessEqual", "Max", "MaximumElementSet", "Min", 
           "MinimumElementSet", "Module", "Not", "Or", "Plus", "Power", 
           "PowerSet", "Prepend", "ProductOf", "Replace", "ReplacePart", 
           "SetEqual", "Subscript", "Subset", "SubsetEqual", "SumOf", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Restore environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{{{
           "ID:1207637328", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, False}, {{
           "ID:1324154882", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, False}, {{
           "ID:1520803150", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, False}, {{
           "ID:2072579713", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}, {{
           "ID:683991833", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, False}}, {{"And", True}, {"Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"CaseDistinction", True}, {
          "Delete", True}, {"DeleteAt", True}, {"Difference", True}, {
          "Do", True}, {"Equal", True}, {"Exists", True}, {"For", True}, {
          "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
          "Iff", True}, {"Implies", True}, {"Insert", True}, {
          "Intersection", True}, {"IsElement", True}, {"isInteger", True}, {
          "isRational", True}, {"isSet", True}, {"Join", True}, {
          "Length", True}, {"Less", True}, {"LessEqual", True}, {
          "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"Power", True}, {"PowerSet", True}, {
          "Prepend", True}, {"ProductOf", True}, {"Replace", True}, {
          "ReplacePart", True}, {"SetEqual", True}, {"Subscript", True}, {
          "Subset", True}, {"SubsetEqual", True}, {"SumOf", True}, {
          "Superset", True}, {"SupersetEqual", True}, {"Switch", True}, {
          "SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.587179050361797*^9},
 CellID->1576009430],

Cell[BoxData[
 FormBox[
  RowBox[{"IsEmpty", "[", 
   RowBox[{"\[LeftAngleBracket]", "\[RightAngleBracket]"}], "]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.587179044184635*^9, 3.587179050384481*^9}},
 CellID->2132637668]
}, Open  ]],

Cell["", "OpenEnvironment",
 CellID->472093504],

Cell[CellGroupData[{

Cell["Lemma: ElementOf", "EnvironmentHeader",
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      ButtonBox[
      "\[Times]", Evaluator -> Automatic, Appearance -> None, ButtonFunction :> 
       Theorema`Language`Session`Private`removeEnvironment[
         ButtonNotebook[]]]]]}, {None, None}},
 CellChangeTimes->{{3.599303930820576*^9, 3.599303933282846*^9}},
 CellID->1500614048],

Cell[BoxData[
 RowBox[{"ElementOf", "[", 
  RowBox[{"2", ",", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "\[RightAngleBracket]"}]}], 
  "]"}]], "FormalTextInputFormula",
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      RowBox[{
        StyleBox["(5)", "FrameLabel"], "  ", 
        ButtonBox[
        "\[Times]", Evaluator -> Automatic, Appearance -> None, 
         ButtonFunction :> 
         Theorema`Language`Session`Private`removeFormula[{
           "ID:514433530", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}]]}]]]}, {None, None}},
 ShowCellTags->False,
 CellChangeTimes->{{3.586766441762586*^9, 3.58676644972597*^9}},
 CellTags->{
  "ID:514433530", 
   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", "5"},
 CellID->514433530],

Cell["\[GraySquare]", "EndEnvironmentMarker",
 CellID->1529663339]
}, Open  ]],

Cell["", "CloseEnvironment",
 CellID->1986805045],

Cell[CellGroupData[{

Cell[TextData[{
 "Proof of ",
 Cell[BoxData[
  ButtonBox[
   TagBox[
    TooltipBox[
     PaneSelectorBox[{False->
      StyleBox["\<\"(5)\"\>", "FormReference",
       StripOnInput->False], True->
      StyleBox["\<\"(5)\"\>", "FormReferenceHover",
       StripOnInput->False]}, Dynamic[
       CurrentValue["MouseOver"]],
      FrameMargins->0,
      ImageSize->Automatic],
     TagBox[
      FormBox[
       RowBox[{"ElementOf", "[", 
         RowBox[{"2", ",", 
           RowBox[{"\[LeftAngleBracket]", 
             RowBox[{"1", ",", "2", ",", "3", ",", "4"}], 
             "\[RightAngleBracket]"}]}], "]"}], TheoremaForm], DisplayForm]],
    Annotation[#, 
     DisplayForm[
      FormBox[
       RowBox[{"ElementOf", "[", 
         RowBox[{"2", ",", 
           RowBox[{"\[LeftAngleBracket]", 
             RowBox[{"1", ",", "2", ",", "3", ",", "4"}], 
             "\[RightAngleBracket]"}]}], "]"}], TheoremaForm]], "Tooltip"]& ],
   
   Appearance->None,
   ButtonFunction:>NotebookLocate["ID:514433530"],
   Evaluator->Automatic,
   Method->"Preemptive"]]],
 ": ",
 Cell[BoxData[
  StyleBox["\<\"\[CheckmarkedBox]\"\>",
   StripOnInput->False,
   ShowStringCharacters->False]]]
}], "OpenProof",
 CellTags->
  "Proof|ID:514433530|Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb",
 CellID->1052310693],

Cell[CellGroupData[{

Cell[BoxData[
 ButtonBox["\<\"Show proof\"\>",
  Appearance->Automatic,
  ButtonFunction:>Theorema`Common`displayProof[
    Theorema`Common`PRFOBJ$[
     Theorema`Provers`Common`Private`PRFINFO$[
     Theorema`Provers`initialProofSituation, {}, {{
        Theorema`Common`FML$[{
         "ID:514433530", 
          "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb"}\
, 
         Theorema`Knowledge`ElementOf$TM[2, 
          Theorema`Language`Tuple$TM[1, 2, 3, 4]], "5"], 
        Theorema`Common`FML$[{
         "ID:683991833", 
          "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb"}\
, 
         Theorema`Language`Forall$TM[
          Theorema`Language`RNG$[
           Theorema`Language`SIMPRNG$[
            Theorema`Language`VAR$[
             Theorema`Language`SEQ0$[Theorema`Knowledge`f$TM]]], 
           Theorema`Language`SIMPRNG$[
            Theorema`Language`VAR$[Theorema`Knowledge`x$TM]], 
           Theorema`Language`SIMPRNG$[
            Theorema`Language`VAR$[
             Theorema`Language`SEQ0$[Theorema`Knowledge`l$TM]]]], True, 
          Theorema`Language`IffDef$TM[
           Theorema`Knowledge`ElementOf$TM[
            Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 
            Theorema`Language`Tuple$TM[
             Theorema`Language`VAR$[
              Theorema`Language`SEQ0$[Theorema`Knowledge`f$TM]], 
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 
             Theorema`Language`VAR$[
              Theorema`Language`SEQ0$[Theorema`Knowledge`l$TM]]]], True]], 
         "1"], 
        Theorema`Common`FML$[{
         "ID:1207637328", 
          "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb"}\
, 
         Theorema`Language`Forall$TM[
          Theorema`Language`RNG$[
           Theorema`Language`SIMPRNG$[
            Theorema`Language`VAR$[Theorema`Knowledge`x$TM]], 
           Theorema`Language`SIMPRNG$[
            Theorema`Language`VAR$[Theorema`Knowledge`y$TM]]], True, 
          Theorema`Language`IffDef$TM[
           Theorema`Knowledge`ElementOf$TM[
            Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 
            Theorema`Language`VAR$[Theorema`Knowledge`y$TM]], False]], "2"]}},
       "OriginalPS"], 
     Theorema`Provers`Common`Private`ANDNODE$[
      Theorema`Provers`Common`Private`PRFINFO$[Theorema`Provers`expandDef, {{
         Theorema`Common`FML$[{
          "ID:514433530", 
           "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, 
          Theorema`Knowledge`ElementOf$TM[2, 
           Theorema`Language`Tuple$TM[1, 2, 3, 4]], "5"]}, {}}, {{
         Theorema`Common`FML$[{"ID:formula7", "Source:none"}, True, "1"]}, {
        True}}, "Theorema`Provers`expandDef$5692", "usedDefs" -> {{
          
          Theorema`Common`FML$[{
           "ID:683991833", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, 
           Theorema`Language`Forall$TM[
            Theorema`Language`RNG$[
             Theorema`Language`SIMPRNG$[
              Theorema`Language`VAR$[
               Theorema`Language`SEQ0$[Theorema`Knowledge`f$TM]]], 
             Theorema`Language`SIMPRNG$[
              Theorema`Language`VAR$[Theorema`Knowledge`x$TM]], 
             Theorema`Language`SIMPRNG$[
              Theorema`Language`VAR$[
               Theorema`Language`SEQ0$[Theorema`Knowledge`l$TM]]]], True, 
            Theorema`Language`IffDef$TM[
             Theorema`Knowledge`ElementOf$TM[
              Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 
              Theorema`Language`Tuple$TM[
               Theorema`Language`VAR$[
                Theorema`Language`SEQ0$[Theorema`Knowledge`f$TM]], 
               Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 
               Theorema`Language`VAR$[
                Theorema`Language`SEQ0$[Theorema`Knowledge`l$TM]]]], True]], 
           "1"]}}], 
      Theorema`Provers`Common`Private`TERMINALNODE$[
       Theorema`Provers`Common`Private`PRFINFO$[Theorema`Provers`trueGoal, {{
          
          Theorema`Common`FML$[{"ID:formula7", "Source:none"}, True, 
           "1"]}}, {}, "Theorema`Provers`trueGoal$5690"], 
       Theorema`Common`proved], Theorema`Common`proved], 
     Theorema`Common`proved]],
  Evaluator->Automatic,
  ImageSize->Automatic,
  Method->"Queued"]], "ProofDisplay",
 CellID->345321909],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], 
        InterpretationBox[
         StyleBox[
          GraphicsBox[{},
           BaselinePosition->Baseline,
           ImageSize->{10, 0}],
          CacheGraphics->False],
         Spacer[10]]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], 
        InterpretationBox[
         StyleBox[
          GraphicsBox[{},
           BaselinePosition->Baseline,
           ImageSize->{10, 0}],
          CacheGraphics->False],
         Spacer[10]]},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Proof goal\"\>", "PIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Proof goal\"\>", "PIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox["\<\"(5)\"\>", "PIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Proof goal", "PIContent"], 
                  Style["(5)", "PIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Knowledge used in proof\"\>", "PIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Knowledge used in proof\"\>", "PIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    RowBox[{"\<\"(1)\"\>", ",", "\<\"(2)\"\>"}], "}"}], 
                    "PIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in proof", "PIContent"], 
                  Style[{"(1)", "(2)"}, "PIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Builtins used in proof\"\>", "PIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Builtins used in proof\"\>", "PIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "PIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in proof", "PIContent"], 
                  Style[{}, "PIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Selected Prover\"\>", "PIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Selected Prover\"\>", "PIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "Hold", "[", 
                    "Theorema`Provers`basicTheoremaLanguageRules", "]"}], ",",
                     "Theorema`Provers`applyOnceAndLevelSaturation"}], "}"}], 
                    "PIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Selected Prover", "PIContent"], 
                  Style[{
                    Hold[Theorema`Provers`basicTheoremaLanguageRules], 
                    Theorema`Provers`applyOnceAndLevelSaturation}, 
                   "PIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Restore environment\"\>",
              Appearance->Automatic,
              ButtonFunction:>Theorema`Interface`GUI`Private`setProveEnv[
                
                Theorema`Common`FML$[{
                 "ID:514433530", 
                  "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, 
                 Theorema`Knowledge`ElementOf$TM[2, 
                  Theorema`Language`Tuple$TM[1, 2, 3, 4]], 
                 "5"], {{{
                  "ID:1207637328", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}, {{
                  "ID:683991833", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}}, {{"And", False}, {"Append", False}, {
                 "Cardinality", False}, {"CartesianProduct", False}, {
                 "CaseDistinction", False}, {"Delete", False}, {
                 "DeleteAt", False}, {"Difference", False}, {"Do", False}, {
                 "Equal", False}, {"Exists", False}, {"For", False}, {
                 "Forall", False}, {"Greater", False}, {
                 "GreaterEqual", False}, {"Iff", False}, {"Implies", False}, {
                 "Insert", False}, {"Intersection", False}, {
                 "IsElement", False}, {"isInteger", False}, {
                 "isRational", False}, {"isSet", False}, {"Join", False}, {
                 "Length", False}, {"Less", False}, {"LessEqual", False}, {
                 "Max", False}, {"MaximumElementSet", False}, {
                 "Min", False}, {"MinimumElementSet", False}, {
                 "Module", False}, {"Not", False}, {"Or", False}, {
                 "Plus", False}, {"Power", False}, {"PowerSet", False}, {
                 "Prepend", False}, {"ProductOf", False}, {
                 "Replace", False}, {"ReplacePart", False}, {
                 "SetEqual", False}, {"Subscript", False}, {"Subset", False},
                  {"SubsetEqual", False}, {"SumOf", False}, {
                 "Superset", False}, {"SupersetEqual", False}, {
                 "Switch", False}, {"SymmetricDifference", False}, {
                 "Times", False}, {"TupleEqual", False}, {"Union", False}, {
                 "Which", False}, {"While", False}}, 
                Hold[Theorema`Provers`basicTheoremaLanguageRules], 
                Theorema`Provers`applyOnceAndLevelSaturation, {{
                 Theorema`Provers`andGoal, True}, {
                 Theorema`Provers`andKB, True}, {
                 Theorema`Provers`contradiction, False}, {
                 Theorema`Provers`contradictionKB, True}, {
                 Theorema`Provers`elementarySubstitution, True}, {
                 Theorema`Provers`eqGoal, False}, {
                 Theorema`Provers`eqIffKB, True}, {
                 Theorema`Provers`equivGoal, True}, {
                 Theorema`Provers`existsGoal, True}, {
                 Theorema`Provers`existsKB, True}, {
                 Theorema`Provers`expandDef, True}, {
                 Theorema`Provers`falseInKB, True}, {
                 Theorema`Provers`forallGoal, True}, {
                 Theorema`Provers`forallKB, True}, {
                 Theorema`Provers`goalInKB, True}, {
                 Theorema`Provers`implGoalCP, False}, {
                 Theorema`Provers`implGoalDirect, True}, {
                 Theorema`Provers`instantiate, True}, {
                 Theorema`Provers`modusPonens, True}, {
                 Theorema`Provers`notGoal, True}, {
                 Theorema`Provers`orGoal, True}, {
                 Theorema`Provers`orKB, True}, {
                 Theorema`Provers`trueGoal, True}}, 30],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           DefaultBaseStyle->"Column",
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{
     Spacer[10], 
     Column[{
       OpenerView[{
         Style["Proof goal", "PIContent"], 
         Style["(5)", "PIContent"]}], 
       OpenerView[{
         Style["Knowledge used in proof", "PIContent"], 
         Style[{"(1)", "(2)"}, "PIContent"]}], 
       OpenerView[{
         Style["Builtins used in proof", "PIContent"], 
         Style[{}, "PIContent"]}], 
       OpenerView[{
         Style["Selected Prover", "PIContent"], 
         Style[{
           Hold[Theorema`Provers`basicTheoremaLanguageRules], 
           Theorema`Provers`applyOnceAndLevelSaturation}, "PIContent"]}], 
       Button["Restore environment", 
        Theorema`Interface`GUI`Private`setProveEnv[
         Theorema`Common`FML$[{
          "ID:514433530", 
           "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, 
          Theorema`Knowledge`ElementOf$TM[2, 
           Theorema`Language`Tuple$TM[1, 2, 3, 4]], 
          "5"], {{{
           "ID:1207637328", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}, {{
           "ID:683991833", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}}, {{"And", False}, {"Append", False}, {"Cardinality", False}, {
          "CartesianProduct", False}, {"CaseDistinction", False}, {
          "Delete", False}, {"DeleteAt", False}, {"Difference", False}, {
          "Do", False}, {"Equal", False}, {"Exists", False}, {"For", False}, {
          "Forall", False}, {"Greater", False}, {"GreaterEqual", False}, {
          "Iff", False}, {"Implies", False}, {"Insert", False}, {
          "Intersection", False}, {"IsElement", False}, {
          "isInteger", False}, {"isRational", False}, {"isSet", False}, {
          "Join", False}, {"Length", False}, {"Less", False}, {
          "LessEqual", False}, {"Max", False}, {"MaximumElementSet", False}, {
          "Min", False}, {"MinimumElementSet", False}, {"Module", False}, {
          "Not", False}, {"Or", False}, {"Plus", False}, {"Power", False}, {
          "PowerSet", False}, {"Prepend", False}, {"ProductOf", False}, {
          "Replace", False}, {"ReplacePart", False}, {"SetEqual", False}, {
          "Subscript", False}, {"Subset", False}, {"SubsetEqual", False}, {
          "SumOf", False}, {"Superset", False}, {"SupersetEqual", False}, {
          "Switch", False}, {"SymmetricDifference", False}, {
          "Times", False}, {"TupleEqual", False}, {"Union", False}, {
          "Which", False}, {"While", False}}, 
         Hold[Theorema`Provers`basicTheoremaLanguageRules], 
         Theorema`Provers`applyOnceAndLevelSaturation, {{
          Theorema`Provers`andGoal, True}, {Theorema`Provers`andKB, True}, {
          Theorema`Provers`contradiction, False}, {
          Theorema`Provers`contradictionKB, True}, {
          Theorema`Provers`elementarySubstitution, True}, {
          Theorema`Provers`eqGoal, False}, {Theorema`Provers`eqIffKB, True}, {
          Theorema`Provers`equivGoal, True}, {
          Theorema`Provers`existsGoal, True}, {
          Theorema`Provers`existsKB, True}, {
          Theorema`Provers`expandDef, True}, {
          Theorema`Provers`falseInKB, True}, {
          Theorema`Provers`forallGoal, True}, {
          Theorema`Provers`forallKB, True}, {
          Theorema`Provers`goalInKB, True}, {
          Theorema`Provers`implGoalCP, False}, {
          Theorema`Provers`implGoalDirect, True}, {
          Theorema`Provers`instantiate, True}, {
          Theorema`Provers`modusPonens, True}, {
          Theorema`Provers`notGoal, True}, {Theorema`Provers`orGoal, True}, {
          Theorema`Provers`orKB, True}, {Theorema`Provers`trueGoal, True}}, 
         30], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ProofInfo",
 CellID->755521802]
}, Open  ]],

Cell["\[EmptySquare]", "CloseProof",
 CellID->916349642]
}, Open  ]],

Cell["\<\
For stating that every expression in an instantiation of a sequence variable \
needs to fulfil a certain property, the \[OpenCurlyDoubleQuote]Componentwise\
\[CloseCurlyDoubleQuote]-operator (\[OpenCurlyDoubleQuote]@\
\[CloseCurlyDoubleQuote]) has to be used:\
\>", "Text",
 CellChangeTimes->{{3.599302701758505*^9, 3.599302782746873*^9}},
 CellID->1086688829],

Cell["", "OpenEnvironment",
 CellID->646505442],

Cell[CellGroupData[{

Cell["Definition: transpose", "EnvironmentHeader",
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      ButtonBox[
      "\[Times]", Evaluator -> Automatic, Appearance -> None, ButtonFunction :> 
       Theorema`Language`Session`Private`removeEnvironment[
         ButtonNotebook[]]]]]}, {None, None}},
 CellChangeTimes->{{3.599303924157602*^9, 3.599303926363278*^9}},
 CellID->1280631388],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", "x"], 
  RowBox[{
   TagBox["(",
    "AutoParentheses"], 
   RowBox[{
    RowBox[{"isPair", "[", "x", "]"}], 
    TagBox[
     RowBox[{
     ":", "\[NegativeThickSpace]\[NegativeThinSpace]", 
      "\[DoubleLongLeftRightArrow]"}],
     Identity,
     SyntaxForm->"a\[Implies]b"], 
    RowBox[{"\[And]", 
     RowBox[{"\[Piecewise]", GridBox[{
        {
         RowBox[{"isTuple", "[", "x", "]"}]},
        {
         RowBox[{
          RowBox[{"\[LeftBracketingBar]", "x", "\[RightBracketingBar]"}], 
          "\[Equal]", "2"}]}
       }]}]}]}], 
   TagBox[")",
    "AutoParentheses"]}]}]], "FormalTextInputFormula",
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      RowBox[{
        StyleBox["(10)", "FrameLabel"], "  ", 
        ButtonBox[
        "\[Times]", Evaluator -> Automatic, Appearance -> None, 
         ButtonFunction :> 
         Theorema`Language`Session`Private`removeFormula[{
           "ID:1712066704", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}]]}]]]}, {None, None}},
 ShowCellTags->False,
 CellChangeTimes->{{3.599302892832969*^9, 3.599302916577213*^9}},
 CellTags->{
  "ID:1712066704", 
   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", "10"},
 
 CellID->1712066704],

Cell[BoxData[
 RowBox[{
  UnderscriptBox[
   UnderscriptBox["\[ForAll]", 
    RowBox[{"p", "..."}]], 
   RowBox[{"isPair", "@", 
    RowBox[{"(", 
     RowBox[{"p", "..."}], ")"}]}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"transpose", "[", 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"p", "..."}], "\[RightAngleBracket]"}], "]"}], ":=", 
    RowBox[{
     UnderscriptBox["let", 
      RowBox[{"P", "=", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"p", "..."}], "\[RightAngleBracket]"}]}]], 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{
         SubscriptBox["P", 
          RowBox[{"i", ",", "1"}]], 
         UnderscriptBox["|", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", "\[Ellipsis]", ",", 
           RowBox[{
           "\[LeftBracketingBar]", "P", "\[RightBracketingBar]"}]}]]}], 
        "\[RightAngleBracket]"}], ",", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{
         SubscriptBox["P", 
          RowBox[{"i", ",", "2"}]], 
         UnderscriptBox["|", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", "\[Ellipsis]", ",", 
           RowBox[{
           "\[LeftBracketingBar]", "P", "\[RightBracketingBar]"}]}]]}], 
        "\[RightAngleBracket]"}]}], "\[RightAngleBracket]"}]}]}], 
   ")"}]}]], "FormalTextInputFormula",
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      RowBox[{
        StyleBox["(11)", "FrameLabel"], "  ", 
        ButtonBox[
        "\[Times]", Evaluator -> Automatic, Appearance -> None, 
         ButtonFunction :> 
         Theorema`Language`Session`Private`removeFormula[{
           "ID:1129737817", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}]]}]]]}, {None, None}},
 ShowCellTags->False,
 CellChangeTimes->{{3.599302941625518*^9, 3.599303022700947*^9}, {
  3.599303118439646*^9, 3.599303121031288*^9}, {3.599303341008777*^9, 
  3.599303343218975*^9}},
 CellTags->{
  "ID:1129737817", 
   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", "11"},
 
 CellID->1129737817],

Cell["\[GraySquare]", "EndEnvironmentMarker",
 CellID->154042773]
}, Open  ]],

Cell["", "CloseEnvironment",
 CellID->1453800142],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"isPair", "[", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "2"}], "\[RightAngleBracket]"}], "]"}]], "Computation",
 CellChangeTimes->{{3.599303094027392*^9, 3.599303101421342*^9}},
 CellID->1954597986],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    RowBox[{"\<\"10\"\>", ",", "\<\"11\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{"10", "11"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"AbsValue\"\>", ",", "\<\"And\"\>", 
                    ",", "\<\"AnElement\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", 
                    ",", "\<\"CaseDistinction\"\>", 
                    ",", "\<\"Componentwise\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Equal\"\>", 
                    ",", "\<\"Exists\"\>", ",", "\<\"Factorial\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"IntegerInterval\"\>", 
                    ",", "\<\"IntegerQuotientRing\"\>", 
                    ",", "\<\"IntegerQuotientRingPM\"\>", 
                    ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IntersectionOf\"\>", ",", "\<\"isComplex\"\>", 
                    ",", "\<\"isComplexP\"\>", ",", "\<\"IsElement\"\>", 
                    ",", "\<\"isInteger\"\>", ",", "\<\"isRational\"\>", 
                    ",", "\<\"isReal\"\>", ",", "\<\"isSet\"\>", 
                    ",", "\<\"isTuple\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Let\"\>", 
                    ",", "\<\"Max\"\>", ",", "\<\"MaximumElementSet\"\>", 
                    ",", "\<\"MaximumOf\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", 
                    ",", "\<\"MinimumOf\"\>", ",", "\<\"Minus\"\>", 
                    ",", "\<\"Module\"\>", ",", "\<\"MultInverse\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"Power\"\>", 
                    ",", "\<\"PowerSet\"\>", ",", "\<\"Prepend\"\>", 
                    ",", "\<\"ProductOf\"\>", ",", "\<\"Radical\"\>", 
                    ",", "\<\"RationalInterval\"\>", 
                    ",", "\<\"RealInterval\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"SumOf\"\>", 
                    ",", "\<\"Superset\"\>", ",", "\<\"SupersetEqual\"\>", 
                    ",", "\<\"Switch\"\>", ",", "\<\"SymmetricDifference\"\>",
                     ",", "\<\"Times\"\>", ",", "\<\"TupleEqual\"\>", 
                    ",", "\<\"Union\"\>", ",", "\<\"UnionOf\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>", 
                    ",", "\<\"\[DoubleStruckCapitalC]\"\>", 
                    ",", "\<\"\[DoubleStruckCapitalC]P\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"AbsValue", "And", "AnElement", "Append", 
                    "Cardinality", "CartesianProduct", "CaseDistinction", 
                    "Componentwise", "Delete", "DeleteAt", "Difference", "Do",
                     "Equal", "Exists", "Factorial", "For", "Forall", 
                    "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
                    "IntegerInterval", "IntegerQuotientRing", 
                    "IntegerQuotientRingPM", "Intersection", "IntersectionOf",
                     "isComplex", "isComplexP", "IsElement", "isInteger", 
                    "isRational", "isReal", "isSet", "isTuple", "Join", 
                    "Length", "Less", "LessEqual", "Let", "Max", 
                    "MaximumElementSet", "MaximumOf", "Min", 
                    "MinimumElementSet", "MinimumOf", "Minus", "Module", 
                    "MultInverse", "Not", "Or", "Plus", "Power", "PowerSet", 
                    "Prepend", "ProductOf", "Radical", "RationalInterval", 
                    "RealInterval", "Replace", "ReplacePart", "SetEqual", 
                    "Subscript", "Subset", "SubsetEqual", "SumOf", "Superset",
                     "SupersetEqual", "Switch", "SymmetricDifference", 
                    "Times", "TupleEqual", "Union", "UnionOf", "Which", 
                    "While", "\[DoubleStruckCapitalC]", 
                    "\[DoubleStruckCapitalC]P"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Restore environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{{{
                  "ID:1129737817", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}, {{
                  "ID:1712066704", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}}, {{"AbsValue", True}, {"And", True}, {
                 "AnElement", True}, {"Append", True}, {
                 "Cardinality", True}, {"CartesianProduct", True}, {
                 "CaseDistinction", True}, {"Componentwise", True}, {
                 "Delete", True}, {"DeleteAt", True}, {"Difference", True}, {
                 "Do", True}, {"Equal", True}, {"Exists", True}, {
                 "Factorial", True}, {"For", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Insert", True}, {
                 "IntegerInterval", True}, {"IntegerQuotientRing", True}, {
                 "IntegerQuotientRingPM", True}, {"Intersection", True}, {
                 "IntersectionOf", True}, {"isComplex", True}, {
                 "isComplexP", True}, {"IsElement", True}, {
                 "isInteger", True}, {"isRational", True}, {"isReal", True}, {
                 "isSet", True}, {"isTuple", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Let", True}, {"Max", True}, {"MaximumElementSet", True}, {
                 "MaximumOf", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"MinimumOf", True}, {
                 "Minus", True}, {"Module", True}, {"MultInverse", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "Power", True}, {"PowerSet", True}, {"Prepend", True}, {
                 "ProductOf", True}, {"Radical", True}, {
                 "RationalInterval", True}, {"RealInterval", True}, {
                 "Replace", True}, {"ReplacePart", True}, {
                 "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"SumOf", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"UnionOf", True}, {
                 "Which", True}, {"While", True}, {
                 "\[DoubleStruckCapitalC]", True}, {
                 "\[DoubleStruckCapitalC]P", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           DefaultBaseStyle->"Column",
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{"10", "11"}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "AbsValue", "And", "AnElement", "Append", "Cardinality", 
           "CartesianProduct", "CaseDistinction", "Componentwise", "Delete", 
           "DeleteAt", "Difference", "Do", "Equal", "Exists", "Factorial", 
           "For", "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
           "Insert", "IntegerInterval", "IntegerQuotientRing", 
           "IntegerQuotientRingPM", "Intersection", "IntersectionOf", 
           "isComplex", "isComplexP", "IsElement", "isInteger", "isRational", 
           "isReal", "isSet", "isTuple", "Join", "Length", "Less", 
           "LessEqual", "Let", "Max", "MaximumElementSet", "MaximumOf", "Min",
            "MinimumElementSet", "MinimumOf", "Minus", "Module", 
           "MultInverse", "Not", "Or", "Plus", "Power", "PowerSet", "Prepend",
            "ProductOf", "Radical", "RationalInterval", "RealInterval", 
           "Replace", "ReplacePart", "SetEqual", "Subscript", "Subset", 
           "SubsetEqual", "SumOf", "Superset", "SupersetEqual", "Switch", 
           "SymmetricDifference", "Times", "TupleEqual", "Union", "UnionOf", 
           "Which", "While", "\[DoubleStruckCapitalC]", 
           "\[DoubleStruckCapitalC]P"}, "CIContent"]}], 
       Button["Restore environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{{{
           "ID:1129737817", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}, {{
           "ID:1712066704", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}}, {{"AbsValue", True}, {"And", True}, {"AnElement", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"CaseDistinction", True}, {
          "Componentwise", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", True}, {
          "Exists", True}, {"Factorial", True}, {"For", True}, {
          "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
          "Iff", True}, {"Implies", True}, {"Insert", True}, {
          "IntegerInterval", True}, {"IntegerQuotientRing", True}, {
          "IntegerQuotientRingPM", True}, {"Intersection", True}, {
          "IntersectionOf", True}, {"isComplex", True}, {
          "isComplexP", True}, {"IsElement", True}, {"isInteger", True}, {
          "isRational", True}, {"isReal", True}, {"isSet", True}, {
          "isTuple", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Let", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"MaximumOf", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"MinimumOf", True}, {"Minus", True}, {
          "Module", True}, {"MultInverse", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"Power", True}, {"PowerSet", True}, {
          "Prepend", True}, {"ProductOf", True}, {"Radical", True}, {
          "RationalInterval", True}, {"RealInterval", True}, {
          "Replace", True}, {"ReplacePart", True}, {"SetEqual", True}, {
          "Subscript", True}, {"Subset", True}, {"SubsetEqual", True}, {
          "SumOf", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"UnionOf", True}, {
          "Which", True}, {"While", True}, {
          "\[DoubleStruckCapitalC]", True}, {
          "\[DoubleStruckCapitalC]P", True}}], ImageSize -> Automatic]}]}, 
    False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.599303372234804*^9},
 CellID->418323041],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.599303101889177*^9, 3.599303190953071*^9, 
  3.599303372262286*^9},
 CellID->262221515]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"isPair", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "2"}], "\[RightAngleBracket]"}], ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"3", ",", "4"}], "\[RightAngleBracket]"}]}], 
   ")"}]}]], "Computation",
 CellChangeTimes->{{3.599303216410952*^9, 3.599303243054238*^9}},
 CellID->189176158],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    RowBox[{"\<\"10\"\>", ",", "\<\"11\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{"10", "11"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"AbsValue\"\>", ",", "\<\"And\"\>", 
                    ",", "\<\"AnElement\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", 
                    ",", "\<\"CaseDistinction\"\>", 
                    ",", "\<\"Componentwise\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Equal\"\>", 
                    ",", "\<\"Exists\"\>", ",", "\<\"Factorial\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"IntegerInterval\"\>", 
                    ",", "\<\"IntegerQuotientRing\"\>", 
                    ",", "\<\"IntegerQuotientRingPM\"\>", 
                    ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IntersectionOf\"\>", ",", "\<\"isComplex\"\>", 
                    ",", "\<\"isComplexP\"\>", ",", "\<\"IsElement\"\>", 
                    ",", "\<\"isInteger\"\>", ",", "\<\"isRational\"\>", 
                    ",", "\<\"isReal\"\>", ",", "\<\"isSet\"\>", 
                    ",", "\<\"isTuple\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Let\"\>", 
                    ",", "\<\"Max\"\>", ",", "\<\"MaximumElementSet\"\>", 
                    ",", "\<\"MaximumOf\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", 
                    ",", "\<\"MinimumOf\"\>", ",", "\<\"Minus\"\>", 
                    ",", "\<\"Module\"\>", ",", "\<\"MultInverse\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"Power\"\>", 
                    ",", "\<\"PowerSet\"\>", ",", "\<\"Prepend\"\>", 
                    ",", "\<\"ProductOf\"\>", ",", "\<\"Radical\"\>", 
                    ",", "\<\"RationalInterval\"\>", 
                    ",", "\<\"RealInterval\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"SumOf\"\>", 
                    ",", "\<\"Superset\"\>", ",", "\<\"SupersetEqual\"\>", 
                    ",", "\<\"Switch\"\>", ",", "\<\"SymmetricDifference\"\>",
                     ",", "\<\"Times\"\>", ",", "\<\"TupleEqual\"\>", 
                    ",", "\<\"Union\"\>", ",", "\<\"UnionOf\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>", 
                    ",", "\<\"\[DoubleStruckCapitalC]\"\>", 
                    ",", "\<\"\[DoubleStruckCapitalC]P\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"AbsValue", "And", "AnElement", "Append", 
                    "Cardinality", "CartesianProduct", "CaseDistinction", 
                    "Componentwise", "Delete", "DeleteAt", "Difference", "Do",
                     "Equal", "Exists", "Factorial", "For", "Forall", 
                    "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
                    "IntegerInterval", "IntegerQuotientRing", 
                    "IntegerQuotientRingPM", "Intersection", "IntersectionOf",
                     "isComplex", "isComplexP", "IsElement", "isInteger", 
                    "isRational", "isReal", "isSet", "isTuple", "Join", 
                    "Length", "Less", "LessEqual", "Let", "Max", 
                    "MaximumElementSet", "MaximumOf", "Min", 
                    "MinimumElementSet", "MinimumOf", "Minus", "Module", 
                    "MultInverse", "Not", "Or", "Plus", "Power", "PowerSet", 
                    "Prepend", "ProductOf", "Radical", "RationalInterval", 
                    "RealInterval", "Replace", "ReplacePart", "SetEqual", 
                    "Subscript", "Subset", "SubsetEqual", "SumOf", "Superset",
                     "SupersetEqual", "Switch", "SymmetricDifference", 
                    "Times", "TupleEqual", "Union", "UnionOf", "Which", 
                    "While", "\[DoubleStruckCapitalC]", 
                    "\[DoubleStruckCapitalC]P"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Restore environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{{{
                  "ID:1129737817", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}, {{
                  "ID:1712066704", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}}, {{"AbsValue", True}, {"And", True}, {
                 "AnElement", True}, {"Append", True}, {
                 "Cardinality", True}, {"CartesianProduct", True}, {
                 "CaseDistinction", True}, {"Componentwise", True}, {
                 "Delete", True}, {"DeleteAt", True}, {"Difference", True}, {
                 "Do", True}, {"Equal", True}, {"Exists", True}, {
                 "Factorial", True}, {"For", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Insert", True}, {
                 "IntegerInterval", True}, {"IntegerQuotientRing", True}, {
                 "IntegerQuotientRingPM", True}, {"Intersection", True}, {
                 "IntersectionOf", True}, {"isComplex", True}, {
                 "isComplexP", True}, {"IsElement", True}, {
                 "isInteger", True}, {"isRational", True}, {"isReal", True}, {
                 "isSet", True}, {"isTuple", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Let", True}, {"Max", True}, {"MaximumElementSet", True}, {
                 "MaximumOf", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"MinimumOf", True}, {
                 "Minus", True}, {"Module", True}, {"MultInverse", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "Power", True}, {"PowerSet", True}, {"Prepend", True}, {
                 "ProductOf", True}, {"Radical", True}, {
                 "RationalInterval", True}, {"RealInterval", True}, {
                 "Replace", True}, {"ReplacePart", True}, {
                 "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"SumOf", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"UnionOf", True}, {
                 "Which", True}, {"While", True}, {
                 "\[DoubleStruckCapitalC]", True}, {
                 "\[DoubleStruckCapitalC]P", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           DefaultBaseStyle->"Column",
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{"10", "11"}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "AbsValue", "And", "AnElement", "Append", "Cardinality", 
           "CartesianProduct", "CaseDistinction", "Componentwise", "Delete", 
           "DeleteAt", "Difference", "Do", "Equal", "Exists", "Factorial", 
           "For", "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
           "Insert", "IntegerInterval", "IntegerQuotientRing", 
           "IntegerQuotientRingPM", "Intersection", "IntersectionOf", 
           "isComplex", "isComplexP", "IsElement", "isInteger", "isRational", 
           "isReal", "isSet", "isTuple", "Join", "Length", "Less", 
           "LessEqual", "Let", "Max", "MaximumElementSet", "MaximumOf", "Min",
            "MinimumElementSet", "MinimumOf", "Minus", "Module", 
           "MultInverse", "Not", "Or", "Plus", "Power", "PowerSet", "Prepend",
            "ProductOf", "Radical", "RationalInterval", "RealInterval", 
           "Replace", "ReplacePart", "SetEqual", "Subscript", "Subset", 
           "SubsetEqual", "SumOf", "Superset", "SupersetEqual", "Switch", 
           "SymmetricDifference", "Times", "TupleEqual", "Union", "UnionOf", 
           "Which", "While", "\[DoubleStruckCapitalC]", 
           "\[DoubleStruckCapitalC]P"}, "CIContent"]}], 
       Button["Restore environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{{{
           "ID:1129737817", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}, {{
           "ID:1712066704", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}}, {{"AbsValue", True}, {"And", True}, {"AnElement", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"CaseDistinction", True}, {
          "Componentwise", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", True}, {
          "Exists", True}, {"Factorial", True}, {"For", True}, {
          "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
          "Iff", True}, {"Implies", True}, {"Insert", True}, {
          "IntegerInterval", True}, {"IntegerQuotientRing", True}, {
          "IntegerQuotientRingPM", True}, {"Intersection", True}, {
          "IntersectionOf", True}, {"isComplex", True}, {
          "isComplexP", True}, {"IsElement", True}, {"isInteger", True}, {
          "isRational", True}, {"isReal", True}, {"isSet", True}, {
          "isTuple", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Let", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"MaximumOf", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"MinimumOf", True}, {"Minus", True}, {
          "Module", True}, {"MultInverse", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"Power", True}, {"PowerSet", True}, {
          "Prepend", True}, {"ProductOf", True}, {"Radical", True}, {
          "RationalInterval", True}, {"RealInterval", True}, {
          "Replace", True}, {"ReplacePart", True}, {"SetEqual", True}, {
          "Subscript", True}, {"Subset", True}, {"SubsetEqual", True}, {
          "SumOf", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"UnionOf", True}, {
          "Which", True}, {"While", True}, {
          "\[DoubleStruckCapitalC]", True}, {
          "\[DoubleStruckCapitalC]P", True}}], ImageSize -> Automatic]}]}, 
    False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.599303374419883*^9},
 CellID->687693211],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.599303234853271*^9, 3.599303243499213*^9}, 
   3.599303374438375*^9},
 CellID->197588762]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"transpose", "[", 
  RowBox[{"\[LeftAngleBracket]", "\[RightAngleBracket]"}], 
  "]"}]], "Computation",
 CellChangeTimes->{{3.599303049612552*^9, 3.599303054259583*^9}},
 CellID->506370155],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    RowBox[{"\<\"10\"\>", ",", "\<\"11\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{"10", "11"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"AbsValue\"\>", ",", "\<\"And\"\>", 
                    ",", "\<\"AnElement\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", 
                    ",", "\<\"CaseDistinction\"\>", 
                    ",", "\<\"Componentwise\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Equal\"\>", 
                    ",", "\<\"Exists\"\>", ",", "\<\"Factorial\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"IntegerInterval\"\>", 
                    ",", "\<\"IntegerQuotientRing\"\>", 
                    ",", "\<\"IntegerQuotientRingPM\"\>", 
                    ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IntersectionOf\"\>", ",", "\<\"isComplex\"\>", 
                    ",", "\<\"isComplexP\"\>", ",", "\<\"IsElement\"\>", 
                    ",", "\<\"isInteger\"\>", ",", "\<\"isRational\"\>", 
                    ",", "\<\"isReal\"\>", ",", "\<\"isSet\"\>", 
                    ",", "\<\"isTuple\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Let\"\>", 
                    ",", "\<\"Max\"\>", ",", "\<\"MaximumElementSet\"\>", 
                    ",", "\<\"MaximumOf\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", 
                    ",", "\<\"MinimumOf\"\>", ",", "\<\"Minus\"\>", 
                    ",", "\<\"Module\"\>", ",", "\<\"MultInverse\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"Power\"\>", 
                    ",", "\<\"PowerSet\"\>", ",", "\<\"Prepend\"\>", 
                    ",", "\<\"ProductOf\"\>", ",", "\<\"Radical\"\>", 
                    ",", "\<\"RationalInterval\"\>", 
                    ",", "\<\"RealInterval\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"SumOf\"\>", 
                    ",", "\<\"Superset\"\>", ",", "\<\"SupersetEqual\"\>", 
                    ",", "\<\"Switch\"\>", ",", "\<\"SymmetricDifference\"\>",
                     ",", "\<\"Times\"\>", ",", "\<\"TupleEqual\"\>", 
                    ",", "\<\"Union\"\>", ",", "\<\"UnionOf\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>", 
                    ",", "\<\"\[DoubleStruckCapitalC]\"\>", 
                    ",", "\<\"\[DoubleStruckCapitalC]P\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"AbsValue", "And", "AnElement", "Append", 
                    "Cardinality", "CartesianProduct", "CaseDistinction", 
                    "Componentwise", "Delete", "DeleteAt", "Difference", "Do",
                     "Equal", "Exists", "Factorial", "For", "Forall", 
                    "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
                    "IntegerInterval", "IntegerQuotientRing", 
                    "IntegerQuotientRingPM", "Intersection", "IntersectionOf",
                     "isComplex", "isComplexP", "IsElement", "isInteger", 
                    "isRational", "isReal", "isSet", "isTuple", "Join", 
                    "Length", "Less", "LessEqual", "Let", "Max", 
                    "MaximumElementSet", "MaximumOf", "Min", 
                    "MinimumElementSet", "MinimumOf", "Minus", "Module", 
                    "MultInverse", "Not", "Or", "Plus", "Power", "PowerSet", 
                    "Prepend", "ProductOf", "Radical", "RationalInterval", 
                    "RealInterval", "Replace", "ReplacePart", "SetEqual", 
                    "Subscript", "Subset", "SubsetEqual", "SumOf", "Superset",
                     "SupersetEqual", "Switch", "SymmetricDifference", 
                    "Times", "TupleEqual", "Union", "UnionOf", "Which", 
                    "While", "\[DoubleStruckCapitalC]", 
                    "\[DoubleStruckCapitalC]P"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Restore environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{{{
                  "ID:1129737817", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}, {{
                  "ID:1712066704", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}}, {{"AbsValue", True}, {"And", True}, {
                 "AnElement", True}, {"Append", True}, {
                 "Cardinality", True}, {"CartesianProduct", True}, {
                 "CaseDistinction", True}, {"Componentwise", True}, {
                 "Delete", True}, {"DeleteAt", True}, {"Difference", True}, {
                 "Do", True}, {"Equal", True}, {"Exists", True}, {
                 "Factorial", True}, {"For", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Insert", True}, {
                 "IntegerInterval", True}, {"IntegerQuotientRing", True}, {
                 "IntegerQuotientRingPM", True}, {"Intersection", True}, {
                 "IntersectionOf", True}, {"isComplex", True}, {
                 "isComplexP", True}, {"IsElement", True}, {
                 "isInteger", True}, {"isRational", True}, {"isReal", True}, {
                 "isSet", True}, {"isTuple", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Let", True}, {"Max", True}, {"MaximumElementSet", True}, {
                 "MaximumOf", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"MinimumOf", True}, {
                 "Minus", True}, {"Module", True}, {"MultInverse", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "Power", True}, {"PowerSet", True}, {"Prepend", True}, {
                 "ProductOf", True}, {"Radical", True}, {
                 "RationalInterval", True}, {"RealInterval", True}, {
                 "Replace", True}, {"ReplacePart", True}, {
                 "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"SumOf", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"UnionOf", True}, {
                 "Which", True}, {"While", True}, {
                 "\[DoubleStruckCapitalC]", True}, {
                 "\[DoubleStruckCapitalC]P", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           DefaultBaseStyle->"Column",
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{"10", "11"}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "AbsValue", "And", "AnElement", "Append", "Cardinality", 
           "CartesianProduct", "CaseDistinction", "Componentwise", "Delete", 
           "DeleteAt", "Difference", "Do", "Equal", "Exists", "Factorial", 
           "For", "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
           "Insert", "IntegerInterval", "IntegerQuotientRing", 
           "IntegerQuotientRingPM", "Intersection", "IntersectionOf", 
           "isComplex", "isComplexP", "IsElement", "isInteger", "isRational", 
           "isReal", "isSet", "isTuple", "Join", "Length", "Less", 
           "LessEqual", "Let", "Max", "MaximumElementSet", "MaximumOf", "Min",
            "MinimumElementSet", "MinimumOf", "Minus", "Module", 
           "MultInverse", "Not", "Or", "Plus", "Power", "PowerSet", "Prepend",
            "ProductOf", "Radical", "RationalInterval", "RealInterval", 
           "Replace", "ReplacePart", "SetEqual", "Subscript", "Subset", 
           "SubsetEqual", "SumOf", "Superset", "SupersetEqual", "Switch", 
           "SymmetricDifference", "Times", "TupleEqual", "Union", "UnionOf", 
           "Which", "While", "\[DoubleStruckCapitalC]", 
           "\[DoubleStruckCapitalC]P"}, "CIContent"]}], 
       Button["Restore environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{{{
           "ID:1129737817", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}, {{
           "ID:1712066704", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}}, {{"AbsValue", True}, {"And", True}, {"AnElement", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"CaseDistinction", True}, {
          "Componentwise", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", True}, {
          "Exists", True}, {"Factorial", True}, {"For", True}, {
          "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
          "Iff", True}, {"Implies", True}, {"Insert", True}, {
          "IntegerInterval", True}, {"IntegerQuotientRing", True}, {
          "IntegerQuotientRingPM", True}, {"Intersection", True}, {
          "IntersectionOf", True}, {"isComplex", True}, {
          "isComplexP", True}, {"IsElement", True}, {"isInteger", True}, {
          "isRational", True}, {"isReal", True}, {"isSet", True}, {
          "isTuple", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Let", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"MaximumOf", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"MinimumOf", True}, {"Minus", True}, {
          "Module", True}, {"MultInverse", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"Power", True}, {"PowerSet", True}, {
          "Prepend", True}, {"ProductOf", True}, {"Radical", True}, {
          "RationalInterval", True}, {"RealInterval", True}, {
          "Replace", True}, {"ReplacePart", True}, {"SetEqual", True}, {
          "Subscript", True}, {"Subset", True}, {"SubsetEqual", True}, {
          "SumOf", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"UnionOf", True}, {
          "Which", True}, {"While", True}, {
          "\[DoubleStruckCapitalC]", True}, {
          "\[DoubleStruckCapitalC]P", True}}], ImageSize -> Automatic]}]}, 
    False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.599303376335355*^9},
 CellID->1218593978],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", "\[RightAngleBracket]"}], ",", 
    RowBox[{"\[LeftAngleBracket]", "\[RightAngleBracket]"}]}], 
   "\[RightAngleBracket]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.599303071534616*^9, {3.599303107062903*^9, 3.599303123731273*^9}, 
   3.59930319314009*^9, 3.599303376351003*^9},
 CellID->1738627524]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"transpose", "[", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "2"}], "\[RightAngleBracket]"}], ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"3", ",", "4"}], "\[RightAngleBracket]"}]}], 
   "\[RightAngleBracket]"}], "]"}]], "Computation",
 CellChangeTimes->{{3.599303031392246*^9, 3.599303046311009*^9}},
 CellID->1475921762],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    RowBox[{"\<\"10\"\>", ",", "\<\"11\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{"10", "11"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"AbsValue\"\>", ",", "\<\"And\"\>", 
                    ",", "\<\"AnElement\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", 
                    ",", "\<\"CaseDistinction\"\>", 
                    ",", "\<\"Componentwise\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Equal\"\>", 
                    ",", "\<\"Exists\"\>", ",", "\<\"Factorial\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"IntegerInterval\"\>", 
                    ",", "\<\"IntegerQuotientRing\"\>", 
                    ",", "\<\"IntegerQuotientRingPM\"\>", 
                    ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IntersectionOf\"\>", ",", "\<\"isComplex\"\>", 
                    ",", "\<\"isComplexP\"\>", ",", "\<\"IsElement\"\>", 
                    ",", "\<\"isInteger\"\>", ",", "\<\"isRational\"\>", 
                    ",", "\<\"isReal\"\>", ",", "\<\"isSet\"\>", 
                    ",", "\<\"isTuple\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Let\"\>", 
                    ",", "\<\"Max\"\>", ",", "\<\"MaximumElementSet\"\>", 
                    ",", "\<\"MaximumOf\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", 
                    ",", "\<\"MinimumOf\"\>", ",", "\<\"Minus\"\>", 
                    ",", "\<\"Module\"\>", ",", "\<\"MultInverse\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"Power\"\>", 
                    ",", "\<\"PowerSet\"\>", ",", "\<\"Prepend\"\>", 
                    ",", "\<\"ProductOf\"\>", ",", "\<\"Radical\"\>", 
                    ",", "\<\"RationalInterval\"\>", 
                    ",", "\<\"RealInterval\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"SumOf\"\>", 
                    ",", "\<\"Superset\"\>", ",", "\<\"SupersetEqual\"\>", 
                    ",", "\<\"Switch\"\>", ",", "\<\"SymmetricDifference\"\>",
                     ",", "\<\"Times\"\>", ",", "\<\"TupleEqual\"\>", 
                    ",", "\<\"Union\"\>", ",", "\<\"UnionOf\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>", 
                    ",", "\<\"\[DoubleStruckCapitalC]\"\>", 
                    ",", "\<\"\[DoubleStruckCapitalC]P\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"AbsValue", "And", "AnElement", "Append", 
                    "Cardinality", "CartesianProduct", "CaseDistinction", 
                    "Componentwise", "Delete", "DeleteAt", "Difference", "Do",
                     "Equal", "Exists", "Factorial", "For", "Forall", 
                    "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
                    "IntegerInterval", "IntegerQuotientRing", 
                    "IntegerQuotientRingPM", "Intersection", "IntersectionOf",
                     "isComplex", "isComplexP", "IsElement", "isInteger", 
                    "isRational", "isReal", "isSet", "isTuple", "Join", 
                    "Length", "Less", "LessEqual", "Let", "Max", 
                    "MaximumElementSet", "MaximumOf", "Min", 
                    "MinimumElementSet", "MinimumOf", "Minus", "Module", 
                    "MultInverse", "Not", "Or", "Plus", "Power", "PowerSet", 
                    "Prepend", "ProductOf", "Radical", "RationalInterval", 
                    "RealInterval", "Replace", "ReplacePart", "SetEqual", 
                    "Subscript", "Subset", "SubsetEqual", "SumOf", "Superset",
                     "SupersetEqual", "Switch", "SymmetricDifference", 
                    "Times", "TupleEqual", "Union", "UnionOf", "Which", 
                    "While", "\[DoubleStruckCapitalC]", 
                    "\[DoubleStruckCapitalC]P"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Restore environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{{{
                  "ID:1129737817", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}, {{
                  "ID:1712066704", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}}, {{"AbsValue", True}, {"And", True}, {
                 "AnElement", True}, {"Append", True}, {
                 "Cardinality", True}, {"CartesianProduct", True}, {
                 "CaseDistinction", True}, {"Componentwise", True}, {
                 "Delete", True}, {"DeleteAt", True}, {"Difference", True}, {
                 "Do", True}, {"Equal", True}, {"Exists", True}, {
                 "Factorial", True}, {"For", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Insert", True}, {
                 "IntegerInterval", True}, {"IntegerQuotientRing", True}, {
                 "IntegerQuotientRingPM", True}, {"Intersection", True}, {
                 "IntersectionOf", True}, {"isComplex", True}, {
                 "isComplexP", True}, {"IsElement", True}, {
                 "isInteger", True}, {"isRational", True}, {"isReal", True}, {
                 "isSet", True}, {"isTuple", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Let", True}, {"Max", True}, {"MaximumElementSet", True}, {
                 "MaximumOf", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"MinimumOf", True}, {
                 "Minus", True}, {"Module", True}, {"MultInverse", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "Power", True}, {"PowerSet", True}, {"Prepend", True}, {
                 "ProductOf", True}, {"Radical", True}, {
                 "RationalInterval", True}, {"RealInterval", True}, {
                 "Replace", True}, {"ReplacePart", True}, {
                 "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"SumOf", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"UnionOf", True}, {
                 "Which", True}, {"While", True}, {
                 "\[DoubleStruckCapitalC]", True}, {
                 "\[DoubleStruckCapitalC]P", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           DefaultBaseStyle->"Column",
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{"10", "11"}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "AbsValue", "And", "AnElement", "Append", "Cardinality", 
           "CartesianProduct", "CaseDistinction", "Componentwise", "Delete", 
           "DeleteAt", "Difference", "Do", "Equal", "Exists", "Factorial", 
           "For", "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
           "Insert", "IntegerInterval", "IntegerQuotientRing", 
           "IntegerQuotientRingPM", "Intersection", "IntersectionOf", 
           "isComplex", "isComplexP", "IsElement", "isInteger", "isRational", 
           "isReal", "isSet", "isTuple", "Join", "Length", "Less", 
           "LessEqual", "Let", "Max", "MaximumElementSet", "MaximumOf", "Min",
            "MinimumElementSet", "MinimumOf", "Minus", "Module", 
           "MultInverse", "Not", "Or", "Plus", "Power", "PowerSet", "Prepend",
            "ProductOf", "Radical", "RationalInterval", "RealInterval", 
           "Replace", "ReplacePart", "SetEqual", "Subscript", "Subset", 
           "SubsetEqual", "SumOf", "Superset", "SupersetEqual", "Switch", 
           "SymmetricDifference", "Times", "TupleEqual", "Union", "UnionOf", 
           "Which", "While", "\[DoubleStruckCapitalC]", 
           "\[DoubleStruckCapitalC]P"}, "CIContent"]}], 
       Button["Restore environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{{{
           "ID:1129737817", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}, {{
           "ID:1712066704", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}}, {{"AbsValue", True}, {"And", True}, {"AnElement", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"CaseDistinction", True}, {
          "Componentwise", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", True}, {
          "Exists", True}, {"Factorial", True}, {"For", True}, {
          "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
          "Iff", True}, {"Implies", True}, {"Insert", True}, {
          "IntegerInterval", True}, {"IntegerQuotientRing", True}, {
          "IntegerQuotientRingPM", True}, {"Intersection", True}, {
          "IntersectionOf", True}, {"isComplex", True}, {
          "isComplexP", True}, {"IsElement", True}, {"isInteger", True}, {
          "isRational", True}, {"isReal", True}, {"isSet", True}, {
          "isTuple", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Let", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"MaximumOf", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"MinimumOf", True}, {"Minus", True}, {
          "Module", True}, {"MultInverse", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"Power", True}, {"PowerSet", True}, {
          "Prepend", True}, {"ProductOf", True}, {"Radical", True}, {
          "RationalInterval", True}, {"RealInterval", True}, {
          "Replace", True}, {"ReplacePart", True}, {"SetEqual", True}, {
          "Subscript", True}, {"Subset", True}, {"SubsetEqual", True}, {
          "SumOf", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"UnionOf", True}, {
          "Which", True}, {"While", True}, {
          "\[DoubleStruckCapitalC]", True}, {
          "\[DoubleStruckCapitalC]P", True}}], ImageSize -> Automatic]}]}, 
    False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.599303383359338*^9},
 CellID->1154692815],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "3"}], "\[RightAngleBracket]"}], ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "4"}], "\[RightAngleBracket]"}]}], 
   "\[RightAngleBracket]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.599303087597806*^9, 3.599303383374909*^9},
 CellID->233529633]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"transpose", "[", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "2"}], "\[RightAngleBracket]"}], ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"3", ",", "4"}], "\[RightAngleBracket]"}], ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"5", ",", "6"}], "\[RightAngleBracket]"}]}], 
   "\[RightAngleBracket]"}], "]"}]], "Computation",
 CellChangeTimes->{{3.599303406123386*^9, 3.599303409022571*^9}},
 CellID->868134108],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    RowBox[{"\<\"10\"\>", ",", "\<\"11\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{"10", "11"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"AbsValue\"\>", ",", "\<\"And\"\>", 
                    ",", "\<\"AnElement\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", 
                    ",", "\<\"CaseDistinction\"\>", 
                    ",", "\<\"Componentwise\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Equal\"\>", 
                    ",", "\<\"Exists\"\>", ",", "\<\"Factorial\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"IntegerInterval\"\>", 
                    ",", "\<\"IntegerQuotientRing\"\>", 
                    ",", "\<\"IntegerQuotientRingPM\"\>", 
                    ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IntersectionOf\"\>", ",", "\<\"isComplex\"\>", 
                    ",", "\<\"isComplexP\"\>", ",", "\<\"IsElement\"\>", 
                    ",", "\<\"isInteger\"\>", ",", "\<\"isRational\"\>", 
                    ",", "\<\"isReal\"\>", ",", "\<\"isSet\"\>", 
                    ",", "\<\"isTuple\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Let\"\>", 
                    ",", "\<\"Max\"\>", ",", "\<\"MaximumElementSet\"\>", 
                    ",", "\<\"MaximumOf\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", 
                    ",", "\<\"MinimumOf\"\>", ",", "\<\"Minus\"\>", 
                    ",", "\<\"Module\"\>", ",", "\<\"MultInverse\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"Power\"\>", 
                    ",", "\<\"PowerSet\"\>", ",", "\<\"Prepend\"\>", 
                    ",", "\<\"ProductOf\"\>", ",", "\<\"Radical\"\>", 
                    ",", "\<\"RationalInterval\"\>", 
                    ",", "\<\"RealInterval\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"SumOf\"\>", 
                    ",", "\<\"Superset\"\>", ",", "\<\"SupersetEqual\"\>", 
                    ",", "\<\"Switch\"\>", ",", "\<\"SymmetricDifference\"\>",
                     ",", "\<\"Times\"\>", ",", "\<\"TupleEqual\"\>", 
                    ",", "\<\"Union\"\>", ",", "\<\"UnionOf\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>", 
                    ",", "\<\"\[DoubleStruckCapitalC]\"\>", 
                    ",", "\<\"\[DoubleStruckCapitalC]P\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"AbsValue", "And", "AnElement", "Append", 
                    "Cardinality", "CartesianProduct", "CaseDistinction", 
                    "Componentwise", "Delete", "DeleteAt", "Difference", "Do",
                     "Equal", "Exists", "Factorial", "For", "Forall", 
                    "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
                    "IntegerInterval", "IntegerQuotientRing", 
                    "IntegerQuotientRingPM", "Intersection", "IntersectionOf",
                     "isComplex", "isComplexP", "IsElement", "isInteger", 
                    "isRational", "isReal", "isSet", "isTuple", "Join", 
                    "Length", "Less", "LessEqual", "Let", "Max", 
                    "MaximumElementSet", "MaximumOf", "Min", 
                    "MinimumElementSet", "MinimumOf", "Minus", "Module", 
                    "MultInverse", "Not", "Or", "Plus", "Power", "PowerSet", 
                    "Prepend", "ProductOf", "Radical", "RationalInterval", 
                    "RealInterval", "Replace", "ReplacePart", "SetEqual", 
                    "Subscript", "Subset", "SubsetEqual", "SumOf", "Superset",
                     "SupersetEqual", "Switch", "SymmetricDifference", 
                    "Times", "TupleEqual", "Union", "UnionOf", "Which", 
                    "While", "\[DoubleStruckCapitalC]", 
                    "\[DoubleStruckCapitalC]P"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Restore environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{{{
                  "ID:1129737817", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}, {{
                  "ID:1712066704", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}}, {{"AbsValue", True}, {"And", True}, {
                 "AnElement", True}, {"Append", True}, {
                 "Cardinality", True}, {"CartesianProduct", True}, {
                 "CaseDistinction", True}, {"Componentwise", True}, {
                 "Delete", True}, {"DeleteAt", True}, {"Difference", True}, {
                 "Do", True}, {"Equal", True}, {"Exists", True}, {
                 "Factorial", True}, {"For", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Insert", True}, {
                 "IntegerInterval", True}, {"IntegerQuotientRing", True}, {
                 "IntegerQuotientRingPM", True}, {"Intersection", True}, {
                 "IntersectionOf", True}, {"isComplex", True}, {
                 "isComplexP", True}, {"IsElement", True}, {
                 "isInteger", True}, {"isRational", True}, {"isReal", True}, {
                 "isSet", True}, {"isTuple", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Let", True}, {"Max", True}, {"MaximumElementSet", True}, {
                 "MaximumOf", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"MinimumOf", True}, {
                 "Minus", True}, {"Module", True}, {"MultInverse", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "Power", True}, {"PowerSet", True}, {"Prepend", True}, {
                 "ProductOf", True}, {"Radical", True}, {
                 "RationalInterval", True}, {"RealInterval", True}, {
                 "Replace", True}, {"ReplacePart", True}, {
                 "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"SumOf", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"UnionOf", True}, {
                 "Which", True}, {"While", True}, {
                 "\[DoubleStruckCapitalC]", True}, {
                 "\[DoubleStruckCapitalC]P", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           DefaultBaseStyle->"Column",
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{"10", "11"}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "AbsValue", "And", "AnElement", "Append", "Cardinality", 
           "CartesianProduct", "CaseDistinction", "Componentwise", "Delete", 
           "DeleteAt", "Difference", "Do", "Equal", "Exists", "Factorial", 
           "For", "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
           "Insert", "IntegerInterval", "IntegerQuotientRing", 
           "IntegerQuotientRingPM", "Intersection", "IntersectionOf", 
           "isComplex", "isComplexP", "IsElement", "isInteger", "isRational", 
           "isReal", "isSet", "isTuple", "Join", "Length", "Less", 
           "LessEqual", "Let", "Max", "MaximumElementSet", "MaximumOf", "Min",
            "MinimumElementSet", "MinimumOf", "Minus", "Module", 
           "MultInverse", "Not", "Or", "Plus", "Power", "PowerSet", "Prepend",
            "ProductOf", "Radical", "RationalInterval", "RealInterval", 
           "Replace", "ReplacePart", "SetEqual", "Subscript", "Subset", 
           "SubsetEqual", "SumOf", "Superset", "SupersetEqual", "Switch", 
           "SymmetricDifference", "Times", "TupleEqual", "Union", "UnionOf", 
           "Which", "While", "\[DoubleStruckCapitalC]", 
           "\[DoubleStruckCapitalC]P"}, "CIContent"]}], 
       Button["Restore environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{{{
           "ID:1129737817", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}, {{
           "ID:1712066704", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}}, {{"AbsValue", True}, {"And", True}, {"AnElement", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"CaseDistinction", True}, {
          "Componentwise", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", True}, {
          "Exists", True}, {"Factorial", True}, {"For", True}, {
          "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
          "Iff", True}, {"Implies", True}, {"Insert", True}, {
          "IntegerInterval", True}, {"IntegerQuotientRing", True}, {
          "IntegerQuotientRingPM", True}, {"Intersection", True}, {
          "IntersectionOf", True}, {"isComplex", True}, {
          "isComplexP", True}, {"IsElement", True}, {"isInteger", True}, {
          "isRational", True}, {"isReal", True}, {"isSet", True}, {
          "isTuple", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Let", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"MaximumOf", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"MinimumOf", True}, {"Minus", True}, {
          "Module", True}, {"MultInverse", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"Power", True}, {"PowerSet", True}, {
          "Prepend", True}, {"ProductOf", True}, {"Radical", True}, {
          "RationalInterval", True}, {"RealInterval", True}, {
          "Replace", True}, {"ReplacePart", True}, {"SetEqual", True}, {
          "Subscript", True}, {"Subset", True}, {"SubsetEqual", True}, {
          "SumOf", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"UnionOf", True}, {
          "Which", True}, {"While", True}, {
          "\[DoubleStruckCapitalC]", True}, {
          "\[DoubleStruckCapitalC]P", True}}], ImageSize -> Automatic]}]}, 
    False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.599303409514629*^9},
 CellID->1855823386],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "3", ",", "5"}], "\[RightAngleBracket]"}], ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "4", ",", "6"}], "\[RightAngleBracket]"}]}], 
   "\[RightAngleBracket]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.599303409561974*^9},
 CellID->578189640]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"transpose", "[", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", "1", "\[RightAngleBracket]"}], ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"3", ",", "4"}], "\[RightAngleBracket]"}]}], 
   "\[RightAngleBracket]"}], "]"}]], "Computation",
 CellChangeTimes->{{3.599303399995246*^9, 3.599303400143593*^9}},
 CellID->2132214555],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    RowBox[{"\<\"10\"\>", ",", "\<\"11\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{"10", "11"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"AbsValue\"\>", ",", "\<\"And\"\>", 
                    ",", "\<\"AnElement\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", 
                    ",", "\<\"CaseDistinction\"\>", 
                    ",", "\<\"Componentwise\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Equal\"\>", 
                    ",", "\<\"Exists\"\>", ",", "\<\"Factorial\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"IntegerInterval\"\>", 
                    ",", "\<\"IntegerQuotientRing\"\>", 
                    ",", "\<\"IntegerQuotientRingPM\"\>", 
                    ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IntersectionOf\"\>", ",", "\<\"isComplex\"\>", 
                    ",", "\<\"isComplexP\"\>", ",", "\<\"IsElement\"\>", 
                    ",", "\<\"isInteger\"\>", ",", "\<\"isRational\"\>", 
                    ",", "\<\"isReal\"\>", ",", "\<\"isSet\"\>", 
                    ",", "\<\"isTuple\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Let\"\>", 
                    ",", "\<\"Max\"\>", ",", "\<\"MaximumElementSet\"\>", 
                    ",", "\<\"MaximumOf\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", 
                    ",", "\<\"MinimumOf\"\>", ",", "\<\"Minus\"\>", 
                    ",", "\<\"Module\"\>", ",", "\<\"MultInverse\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"Power\"\>", 
                    ",", "\<\"PowerSet\"\>", ",", "\<\"Prepend\"\>", 
                    ",", "\<\"ProductOf\"\>", ",", "\<\"Radical\"\>", 
                    ",", "\<\"RationalInterval\"\>", 
                    ",", "\<\"RealInterval\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"SumOf\"\>", 
                    ",", "\<\"Superset\"\>", ",", "\<\"SupersetEqual\"\>", 
                    ",", "\<\"Switch\"\>", ",", "\<\"SymmetricDifference\"\>",
                     ",", "\<\"Times\"\>", ",", "\<\"TupleEqual\"\>", 
                    ",", "\<\"Union\"\>", ",", "\<\"UnionOf\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>", 
                    ",", "\<\"\[DoubleStruckCapitalC]\"\>", 
                    ",", "\<\"\[DoubleStruckCapitalC]P\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"AbsValue", "And", "AnElement", "Append", 
                    "Cardinality", "CartesianProduct", "CaseDistinction", 
                    "Componentwise", "Delete", "DeleteAt", "Difference", "Do",
                     "Equal", "Exists", "Factorial", "For", "Forall", 
                    "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
                    "IntegerInterval", "IntegerQuotientRing", 
                    "IntegerQuotientRingPM", "Intersection", "IntersectionOf",
                     "isComplex", "isComplexP", "IsElement", "isInteger", 
                    "isRational", "isReal", "isSet", "isTuple", "Join", 
                    "Length", "Less", "LessEqual", "Let", "Max", 
                    "MaximumElementSet", "MaximumOf", "Min", 
                    "MinimumElementSet", "MinimumOf", "Minus", "Module", 
                    "MultInverse", "Not", "Or", "Plus", "Power", "PowerSet", 
                    "Prepend", "ProductOf", "Radical", "RationalInterval", 
                    "RealInterval", "Replace", "ReplacePart", "SetEqual", 
                    "Subscript", "Subset", "SubsetEqual", "SumOf", "Superset",
                     "SupersetEqual", "Switch", "SymmetricDifference", 
                    "Times", "TupleEqual", "Union", "UnionOf", "Which", 
                    "While", "\[DoubleStruckCapitalC]", 
                    "\[DoubleStruckCapitalC]P"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Restore environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{{{
                  "ID:1129737817", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}, {{
                  "ID:1712066704", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}}, {{"AbsValue", True}, {"And", True}, {
                 "AnElement", True}, {"Append", True}, {
                 "Cardinality", True}, {"CartesianProduct", True}, {
                 "CaseDistinction", True}, {"Componentwise", True}, {
                 "Delete", True}, {"DeleteAt", True}, {"Difference", True}, {
                 "Do", True}, {"Equal", True}, {"Exists", True}, {
                 "Factorial", True}, {"For", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Insert", True}, {
                 "IntegerInterval", True}, {"IntegerQuotientRing", True}, {
                 "IntegerQuotientRingPM", True}, {"Intersection", True}, {
                 "IntersectionOf", True}, {"isComplex", True}, {
                 "isComplexP", True}, {"IsElement", True}, {
                 "isInteger", True}, {"isRational", True}, {"isReal", True}, {
                 "isSet", True}, {"isTuple", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Let", True}, {"Max", True}, {"MaximumElementSet", True}, {
                 "MaximumOf", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"MinimumOf", True}, {
                 "Minus", True}, {"Module", True}, {"MultInverse", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "Power", True}, {"PowerSet", True}, {"Prepend", True}, {
                 "ProductOf", True}, {"Radical", True}, {
                 "RationalInterval", True}, {"RealInterval", True}, {
                 "Replace", True}, {"ReplacePart", True}, {
                 "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"SumOf", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"UnionOf", True}, {
                 "Which", True}, {"While", True}, {
                 "\[DoubleStruckCapitalC]", True}, {
                 "\[DoubleStruckCapitalC]P", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           DefaultBaseStyle->"Column",
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{"10", "11"}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "AbsValue", "And", "AnElement", "Append", "Cardinality", 
           "CartesianProduct", "CaseDistinction", "Componentwise", "Delete", 
           "DeleteAt", "Difference", "Do", "Equal", "Exists", "Factorial", 
           "For", "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
           "Insert", "IntegerInterval", "IntegerQuotientRing", 
           "IntegerQuotientRingPM", "Intersection", "IntersectionOf", 
           "isComplex", "isComplexP", "IsElement", "isInteger", "isRational", 
           "isReal", "isSet", "isTuple", "Join", "Length", "Less", 
           "LessEqual", "Let", "Max", "MaximumElementSet", "MaximumOf", "Min",
            "MinimumElementSet", "MinimumOf", "Minus", "Module", 
           "MultInverse", "Not", "Or", "Plus", "Power", "PowerSet", "Prepend",
            "ProductOf", "Radical", "RationalInterval", "RealInterval", 
           "Replace", "ReplacePart", "SetEqual", "Subscript", "Subset", 
           "SubsetEqual", "SumOf", "Superset", "SupersetEqual", "Switch", 
           "SymmetricDifference", "Times", "TupleEqual", "Union", "UnionOf", 
           "Which", "While", "\[DoubleStruckCapitalC]", 
           "\[DoubleStruckCapitalC]P"}, "CIContent"]}], 
       Button["Restore environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{{{
           "ID:1129737817", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}, {{
           "ID:1712066704", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}}, {{"AbsValue", True}, {"And", True}, {"AnElement", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"CaseDistinction", True}, {
          "Componentwise", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", True}, {
          "Exists", True}, {"Factorial", True}, {"For", True}, {
          "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
          "Iff", True}, {"Implies", True}, {"Insert", True}, {
          "IntegerInterval", True}, {"IntegerQuotientRing", True}, {
          "IntegerQuotientRingPM", True}, {"Intersection", True}, {
          "IntersectionOf", True}, {"isComplex", True}, {
          "isComplexP", True}, {"IsElement", True}, {"isInteger", True}, {
          "isRational", True}, {"isReal", True}, {"isSet", True}, {
          "isTuple", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Let", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"MaximumOf", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"MinimumOf", True}, {"Minus", True}, {
          "Module", True}, {"MultInverse", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"Power", True}, {"PowerSet", True}, {
          "Prepend", True}, {"ProductOf", True}, {"Radical", True}, {
          "RationalInterval", True}, {"RealInterval", True}, {
          "Replace", True}, {"ReplacePart", True}, {"SetEqual", True}, {
          "Subscript", True}, {"Subset", True}, {"SubsetEqual", True}, {
          "SumOf", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"UnionOf", True}, {
          "Which", True}, {"While", True}, {
          "\[DoubleStruckCapitalC]", True}, {
          "\[DoubleStruckCapitalC]P", True}}], ImageSize -> Automatic]}]}, 
    False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.599303400460623*^9},
 CellID->135928522],

Cell[BoxData[
 FormBox[
  RowBox[{"transpose", "[", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{
     RowBox[{"\[LeftAngleBracket]", "1", "\[RightAngleBracket]"}], ",", 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"3", ",", "4"}], "\[RightAngleBracket]"}]}], 
    "\[RightAngleBracket]"}], "]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.599303400504624*^9},
 CellID->2081042366]
}, Open  ]],

Cell[TextData[{
 "Note that there is no possibility to state properties about the ",
 StyleBox["length",
  FontSlant->"Italic"],
 " of the instantiating sequence of expressions, unless a tuple is wrapped \
around the variable:"
}], "Text",
 CellChangeTimes->{{3.599303841755615*^9, 3.599303895007438*^9}, {
  3.599303965405733*^9, 3.599303967571728*^9}},
 CellID->2093452402],

Cell["", "OpenEnvironment",
 CellID->1713907510],

Cell[CellGroupData[{

Cell["Definition: fillWithZeros", "EnvironmentHeader",
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      ButtonBox[
      "\[Times]", Evaluator -> Automatic, Appearance -> None, ButtonFunction :> 
       Theorema`Language`Session`Private`removeEnvironment[
         ButtonNotebook[]]]]]}, {None, None}},
 CellChangeTimes->{{3.599303906492596*^9, 3.599303906716908*^9}, {
   3.599304047110996*^9, 3.599304051379883*^9}, 3.599304092522143*^9},
 CellID->810757233],

Cell[BoxData[
 RowBox[{
  UnderscriptBox[
   UnderscriptBox["\[ForAll]", 
    RowBox[{"x", "..."}]], 
   RowBox[{
    RowBox[{"\[LeftBracketingBar]", 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"x", "..."}], "\[RightAngleBracket]"}], 
     "\[RightBracketingBar]"}], "<", "10"}]], 
  RowBox[{
   TagBox["(",
    "AutoParentheses"], 
   RowBox[{
    RowBox[{"fillWithZeros", "[", 
     RowBox[{"x", "..."}], "]"}], ":=", 
    RowBox[{
     UnderscriptBox["let", 
      RowBox[{"X", "=", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"x", "..."}], "\[RightAngleBracket]"}]}]], 
     RowBox[{"(", 
      RowBox[{"X", "\[CupCap]", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"0", 
         UnderscriptBox["|", 
          RowBox[{
           RowBox[{"i", "=", 
            RowBox[{
             RowBox[{"\[LeftBracketingBar]", "X", "\[RightBracketingBar]"}], 
             "+", "1"}]}], ",", "\[Ellipsis]", ",", "10"}]]}], 
        "\[RightAngleBracket]"}]}], ")"}]}]}], 
   TagBox[")",
    "AutoParentheses"]}]}]], "FormalTextInputFormula",
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      RowBox[{
        StyleBox["(12)", "FrameLabel"], "  ", 
        ButtonBox[
        "\[Times]", Evaluator -> Automatic, Appearance -> None, 
         ButtonFunction :> 
         Theorema`Language`Session`Private`removeFormula[{
           "ID:281007089", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}]]}]]]}, {None, None}},
 ShowCellTags->False,
 CellChangeTimes->{{3.599304057110552*^9, 3.59930412070434*^9}, {
  3.59930415631968*^9, 3.599304203319853*^9}, {3.599304243793662*^9, 
  3.599304259036112*^9}},
 CellTags->{
  "ID:281007089", 
   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", "12"},
 
 CellID->281007089],

Cell["\[GraySquare]", "EndEnvironmentMarker",
 CellID->282724972]
}, Open  ]],

Cell["", "CloseEnvironment",
 CellID->1301683811],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fillWithZeros", "[", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "]"}]], "Computation",
 CellChangeTimes->{{3.599304210012951*^9, 3.599304223907702*^9}},
 CellID->1921709458],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "\<\"12\"\>", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{"12"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"AbsValue\"\>", ",", "\<\"And\"\>", 
                    ",", "\<\"AnElement\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", 
                    ",", "\<\"CaseDistinction\"\>", 
                    ",", "\<\"Componentwise\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Factorial\"\>", ",", "\<\"For\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Insert\"\>", 
                    ",", "\<\"IntegerInterval\"\>", 
                    ",", "\<\"IntegerQuotientRing\"\>", 
                    ",", "\<\"IntegerQuotientRingPM\"\>", 
                    ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IntersectionOf\"\>", ",", "\<\"isComplex\"\>", 
                    ",", "\<\"isComplexP\"\>", ",", "\<\"IsElement\"\>", 
                    ",", "\<\"isInteger\"\>", ",", "\<\"isRational\"\>", 
                    ",", "\<\"isReal\"\>", ",", "\<\"isSet\"\>", 
                    ",", "\<\"isTuple\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Let\"\>", 
                    ",", "\<\"Max\"\>", ",", "\<\"MaximumElementSet\"\>", 
                    ",", "\<\"MaximumOf\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", 
                    ",", "\<\"MinimumOf\"\>", ",", "\<\"Minus\"\>", 
                    ",", "\<\"Module\"\>", ",", "\<\"MultInverse\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"Power\"\>", 
                    ",", "\<\"PowerSet\"\>", ",", "\<\"Prepend\"\>", 
                    ",", "\<\"ProductOf\"\>", ",", "\<\"Radical\"\>", 
                    ",", "\<\"RationalInterval\"\>", 
                    ",", "\<\"RealInterval\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"SumOf\"\>", 
                    ",", "\<\"Superset\"\>", ",", "\<\"SupersetEqual\"\>", 
                    ",", "\<\"Switch\"\>", ",", "\<\"SymmetricDifference\"\>",
                     ",", "\<\"Times\"\>", ",", "\<\"TupleEqual\"\>", 
                    ",", "\<\"Union\"\>", ",", "\<\"UnionOf\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>", 
                    ",", "\<\"\[DoubleStruckCapitalC]\"\>", 
                    ",", "\<\"\[DoubleStruckCapitalC]P\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"AbsValue", "And", "AnElement", "Append", 
                    "Cardinality", "CartesianProduct", "CaseDistinction", 
                    "Componentwise", "Delete", "DeleteAt", "Difference", "Do",
                     "Exists", "Factorial", "For", "Forall", "Greater", 
                    "GreaterEqual", "Iff", "Implies", "Insert", 
                    "IntegerInterval", "IntegerQuotientRing", 
                    "IntegerQuotientRingPM", "Intersection", "IntersectionOf",
                     "isComplex", "isComplexP", "IsElement", "isInteger", 
                    "isRational", "isReal", "isSet", "isTuple", "Join", 
                    "Length", "Less", "LessEqual", "Let", "Max", 
                    "MaximumElementSet", "MaximumOf", "Min", 
                    "MinimumElementSet", "MinimumOf", "Minus", "Module", 
                    "MultInverse", "Not", "Or", "Plus", "Power", "PowerSet", 
                    "Prepend", "ProductOf", "Radical", "RationalInterval", 
                    "RealInterval", "Replace", "ReplacePart", "SetEqual", 
                    "Subscript", "Subset", "SubsetEqual", "SumOf", "Superset",
                     "SupersetEqual", "Switch", "SymmetricDifference", 
                    "Times", "TupleEqual", "Union", "UnionOf", "Which", 
                    "While", "\[DoubleStruckCapitalC]", 
                    "\[DoubleStruckCapitalC]P"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Restore environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{{{
                  "ID:281007089", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}}, {{"AbsValue", True}, {"And", True}, {
                 "AnElement", True}, {"Append", True}, {
                 "Cardinality", True}, {"CartesianProduct", True}, {
                 "CaseDistinction", True}, {"Componentwise", True}, {
                 "Delete", True}, {"DeleteAt", True}, {"Difference", True}, {
                 "Do", True}, {"Equal", False}, {"Exists", True}, {
                 "Factorial", True}, {"For", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Insert", True}, {
                 "IntegerInterval", True}, {"IntegerQuotientRing", True}, {
                 "IntegerQuotientRingPM", True}, {"Intersection", True}, {
                 "IntersectionOf", True}, {"isComplex", True}, {
                 "isComplexP", True}, {"IsElement", True}, {
                 "isInteger", True}, {"isRational", True}, {"isReal", True}, {
                 "isSet", True}, {"isTuple", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Let", True}, {"Max", True}, {"MaximumElementSet", True}, {
                 "MaximumOf", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"MinimumOf", True}, {
                 "Minus", True}, {"Module", True}, {"MultInverse", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "Power", True}, {"PowerSet", True}, {"Prepend", True}, {
                 "ProductOf", True}, {"Radical", True}, {
                 "RationalInterval", True}, {"RealInterval", True}, {
                 "Replace", True}, {"ReplacePart", True}, {
                 "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"SumOf", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"UnionOf", True}, {
                 "Which", True}, {"While", True}, {
                 "\[DoubleStruckCapitalC]", True}, {
                 "\[DoubleStruckCapitalC]P", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           DefaultBaseStyle->"Column",
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{"12"}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "AbsValue", "And", "AnElement", "Append", "Cardinality", 
           "CartesianProduct", "CaseDistinction", "Componentwise", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "Factorial", "For", 
           "Forall", "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "IntegerInterval", "IntegerQuotientRing", "IntegerQuotientRingPM", 
           "Intersection", "IntersectionOf", "isComplex", "isComplexP", 
           "IsElement", "isInteger", "isRational", "isReal", "isSet", 
           "isTuple", "Join", "Length", "Less", "LessEqual", "Let", "Max", 
           "MaximumElementSet", "MaximumOf", "Min", "MinimumElementSet", 
           "MinimumOf", "Minus", "Module", "MultInverse", "Not", "Or", "Plus",
            "Power", "PowerSet", "Prepend", "ProductOf", "Radical", 
           "RationalInterval", "RealInterval", "Replace", "ReplacePart", 
           "SetEqual", "Subscript", "Subset", "SubsetEqual", "SumOf", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "UnionOf", "Which", "While", 
           "\[DoubleStruckCapitalC]", "\[DoubleStruckCapitalC]P"}, 
          "CIContent"]}], 
       Button["Restore environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{{{
           "ID:281007089", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}}, {{"AbsValue", True}, {"And", True}, {"AnElement", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"CaseDistinction", True}, {
          "Componentwise", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"Factorial", True}, {"For", True}, {
          "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
          "Iff", True}, {"Implies", True}, {"Insert", True}, {
          "IntegerInterval", True}, {"IntegerQuotientRing", True}, {
          "IntegerQuotientRingPM", True}, {"Intersection", True}, {
          "IntersectionOf", True}, {"isComplex", True}, {
          "isComplexP", True}, {"IsElement", True}, {"isInteger", True}, {
          "isRational", True}, {"isReal", True}, {"isSet", True}, {
          "isTuple", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Let", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"MaximumOf", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"MinimumOf", True}, {"Minus", True}, {
          "Module", True}, {"MultInverse", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"Power", True}, {"PowerSet", True}, {
          "Prepend", True}, {"ProductOf", True}, {"Radical", True}, {
          "RationalInterval", True}, {"RealInterval", True}, {
          "Replace", True}, {"ReplacePart", True}, {"SetEqual", True}, {
          "Subscript", True}, {"Subset", True}, {"SubsetEqual", True}, {
          "SumOf", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"UnionOf", True}, {
          "Which", True}, {"While", True}, {
          "\[DoubleStruckCapitalC]", True}, {
          "\[DoubleStruckCapitalC]P", True}}], ImageSize -> Automatic]}]}, 
    False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.599304276843069*^9},
 CellID->542266795],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
   "1", ",", "2", ",", "3", ",", "4", ",", "0", ",", "0", ",", "0", ",", "0", 
    ",", "0", ",", "0"}], "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.599304229727451*^9, 3.599304276854934*^9}},
 CellID->358559730]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fillWithZeros", "[", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "\[RightAngleBracket]"}], 
  "]"}]], "Computation",
 CellChangeTimes->{{3.599304280630514*^9, 3.599304290913894*^9}},
 CellID->1382083937],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "\<\"12\"\>", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{"12"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"AbsValue\"\>", ",", "\<\"And\"\>", 
                    ",", "\<\"AnElement\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", 
                    ",", "\<\"CaseDistinction\"\>", 
                    ",", "\<\"Componentwise\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Factorial\"\>", ",", "\<\"For\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Insert\"\>", 
                    ",", "\<\"IntegerInterval\"\>", 
                    ",", "\<\"IntegerQuotientRing\"\>", 
                    ",", "\<\"IntegerQuotientRingPM\"\>", 
                    ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IntersectionOf\"\>", ",", "\<\"isComplex\"\>", 
                    ",", "\<\"isComplexP\"\>", ",", "\<\"IsElement\"\>", 
                    ",", "\<\"isInteger\"\>", ",", "\<\"isRational\"\>", 
                    ",", "\<\"isReal\"\>", ",", "\<\"isSet\"\>", 
                    ",", "\<\"isTuple\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Let\"\>", 
                    ",", "\<\"Max\"\>", ",", "\<\"MaximumElementSet\"\>", 
                    ",", "\<\"MaximumOf\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", 
                    ",", "\<\"MinimumOf\"\>", ",", "\<\"Minus\"\>", 
                    ",", "\<\"Module\"\>", ",", "\<\"MultInverse\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"Power\"\>", 
                    ",", "\<\"PowerSet\"\>", ",", "\<\"Prepend\"\>", 
                    ",", "\<\"ProductOf\"\>", ",", "\<\"Radical\"\>", 
                    ",", "\<\"RationalInterval\"\>", 
                    ",", "\<\"RealInterval\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"SumOf\"\>", 
                    ",", "\<\"Superset\"\>", ",", "\<\"SupersetEqual\"\>", 
                    ",", "\<\"Switch\"\>", ",", "\<\"SymmetricDifference\"\>",
                     ",", "\<\"Times\"\>", ",", "\<\"TupleEqual\"\>", 
                    ",", "\<\"Union\"\>", ",", "\<\"UnionOf\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>", 
                    ",", "\<\"\[DoubleStruckCapitalC]\"\>", 
                    ",", "\<\"\[DoubleStruckCapitalC]P\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"AbsValue", "And", "AnElement", "Append", 
                    "Cardinality", "CartesianProduct", "CaseDistinction", 
                    "Componentwise", "Delete", "DeleteAt", "Difference", "Do",
                     "Exists", "Factorial", "For", "Forall", "Greater", 
                    "GreaterEqual", "Iff", "Implies", "Insert", 
                    "IntegerInterval", "IntegerQuotientRing", 
                    "IntegerQuotientRingPM", "Intersection", "IntersectionOf",
                     "isComplex", "isComplexP", "IsElement", "isInteger", 
                    "isRational", "isReal", "isSet", "isTuple", "Join", 
                    "Length", "Less", "LessEqual", "Let", "Max", 
                    "MaximumElementSet", "MaximumOf", "Min", 
                    "MinimumElementSet", "MinimumOf", "Minus", "Module", 
                    "MultInverse", "Not", "Or", "Plus", "Power", "PowerSet", 
                    "Prepend", "ProductOf", "Radical", "RationalInterval", 
                    "RealInterval", "Replace", "ReplacePart", "SetEqual", 
                    "Subscript", "Subset", "SubsetEqual", "SumOf", "Superset",
                     "SupersetEqual", "Switch", "SymmetricDifference", 
                    "Times", "TupleEqual", "Union", "UnionOf", "Which", 
                    "While", "\[DoubleStruckCapitalC]", 
                    "\[DoubleStruckCapitalC]P"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Restore environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{{{
                  "ID:281007089", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}}, {{"AbsValue", True}, {"And", True}, {
                 "AnElement", True}, {"Append", True}, {
                 "Cardinality", True}, {"CartesianProduct", True}, {
                 "CaseDistinction", True}, {"Componentwise", True}, {
                 "Delete", True}, {"DeleteAt", True}, {"Difference", True}, {
                 "Do", True}, {"Equal", False}, {"Exists", True}, {
                 "Factorial", True}, {"For", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Insert", True}, {
                 "IntegerInterval", True}, {"IntegerQuotientRing", True}, {
                 "IntegerQuotientRingPM", True}, {"Intersection", True}, {
                 "IntersectionOf", True}, {"isComplex", True}, {
                 "isComplexP", True}, {"IsElement", True}, {
                 "isInteger", True}, {"isRational", True}, {"isReal", True}, {
                 "isSet", True}, {"isTuple", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Let", True}, {"Max", True}, {"MaximumElementSet", True}, {
                 "MaximumOf", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"MinimumOf", True}, {
                 "Minus", True}, {"Module", True}, {"MultInverse", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "Power", True}, {"PowerSet", True}, {"Prepend", True}, {
                 "ProductOf", True}, {"Radical", True}, {
                 "RationalInterval", True}, {"RealInterval", True}, {
                 "Replace", True}, {"ReplacePart", True}, {
                 "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"SumOf", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"UnionOf", True}, {
                 "Which", True}, {"While", True}, {
                 "\[DoubleStruckCapitalC]", True}, {
                 "\[DoubleStruckCapitalC]P", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           DefaultBaseStyle->"Column",
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{"12"}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "AbsValue", "And", "AnElement", "Append", "Cardinality", 
           "CartesianProduct", "CaseDistinction", "Componentwise", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "Factorial", "For", 
           "Forall", "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "IntegerInterval", "IntegerQuotientRing", "IntegerQuotientRingPM", 
           "Intersection", "IntersectionOf", "isComplex", "isComplexP", 
           "IsElement", "isInteger", "isRational", "isReal", "isSet", 
           "isTuple", "Join", "Length", "Less", "LessEqual", "Let", "Max", 
           "MaximumElementSet", "MaximumOf", "Min", "MinimumElementSet", 
           "MinimumOf", "Minus", "Module", "MultInverse", "Not", "Or", "Plus",
            "Power", "PowerSet", "Prepend", "ProductOf", "Radical", 
           "RationalInterval", "RealInterval", "Replace", "ReplacePart", 
           "SetEqual", "Subscript", "Subset", "SubsetEqual", "SumOf", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "UnionOf", "Which", "While", 
           "\[DoubleStruckCapitalC]", "\[DoubleStruckCapitalC]P"}, 
          "CIContent"]}], 
       Button["Restore environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{{{
           "ID:281007089", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}}, {{"AbsValue", True}, {"And", True}, {"AnElement", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"CaseDistinction", True}, {
          "Componentwise", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"Factorial", True}, {"For", True}, {
          "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
          "Iff", True}, {"Implies", True}, {"Insert", True}, {
          "IntegerInterval", True}, {"IntegerQuotientRing", True}, {
          "IntegerQuotientRingPM", True}, {"Intersection", True}, {
          "IntersectionOf", True}, {"isComplex", True}, {
          "isComplexP", True}, {"IsElement", True}, {"isInteger", True}, {
          "isRational", True}, {"isReal", True}, {"isSet", True}, {
          "isTuple", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Let", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"MaximumOf", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"MinimumOf", True}, {"Minus", True}, {
          "Module", True}, {"MultInverse", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"Power", True}, {"PowerSet", True}, {
          "Prepend", True}, {"ProductOf", True}, {"Radical", True}, {
          "RationalInterval", True}, {"RealInterval", True}, {
          "Replace", True}, {"ReplacePart", True}, {"SetEqual", True}, {
          "Subscript", True}, {"Subset", True}, {"SubsetEqual", True}, {
          "SumOf", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"UnionOf", True}, {
          "Which", True}, {"While", True}, {
          "\[DoubleStruckCapitalC]", True}, {
          "\[DoubleStruckCapitalC]P", True}}], ImageSize -> Automatic]}]}, 
    False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.59930429134721*^9},
 CellID->804893329],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "\[RightAngleBracket]"}], 
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
     "0", ",", "0"}], "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.599304291390255*^9},
 CellID->279407137]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fillWithZeros", "[", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "]"}]], "Computation",
 CellChangeTimes->{{3.599304294349652*^9, 3.599304305968535*^9}},
 CellID->988984248],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "\<\"12\"\>", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{"12"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"AbsValue\"\>", ",", "\<\"And\"\>", 
                    ",", "\<\"AnElement\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", 
                    ",", "\<\"CaseDistinction\"\>", 
                    ",", "\<\"Componentwise\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Factorial\"\>", ",", "\<\"For\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Insert\"\>", 
                    ",", "\<\"IntegerInterval\"\>", 
                    ",", "\<\"IntegerQuotientRing\"\>", 
                    ",", "\<\"IntegerQuotientRingPM\"\>", 
                    ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IntersectionOf\"\>", ",", "\<\"isComplex\"\>", 
                    ",", "\<\"isComplexP\"\>", ",", "\<\"IsElement\"\>", 
                    ",", "\<\"isInteger\"\>", ",", "\<\"isRational\"\>", 
                    ",", "\<\"isReal\"\>", ",", "\<\"isSet\"\>", 
                    ",", "\<\"isTuple\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Let\"\>", 
                    ",", "\<\"Max\"\>", ",", "\<\"MaximumElementSet\"\>", 
                    ",", "\<\"MaximumOf\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", 
                    ",", "\<\"MinimumOf\"\>", ",", "\<\"Minus\"\>", 
                    ",", "\<\"Module\"\>", ",", "\<\"MultInverse\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"Power\"\>", 
                    ",", "\<\"PowerSet\"\>", ",", "\<\"Prepend\"\>", 
                    ",", "\<\"ProductOf\"\>", ",", "\<\"Radical\"\>", 
                    ",", "\<\"RationalInterval\"\>", 
                    ",", "\<\"RealInterval\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"SumOf\"\>", 
                    ",", "\<\"Superset\"\>", ",", "\<\"SupersetEqual\"\>", 
                    ",", "\<\"Switch\"\>", ",", "\<\"SymmetricDifference\"\>",
                     ",", "\<\"Times\"\>", ",", "\<\"TupleEqual\"\>", 
                    ",", "\<\"Union\"\>", ",", "\<\"UnionOf\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>", 
                    ",", "\<\"\[DoubleStruckCapitalC]\"\>", 
                    ",", "\<\"\[DoubleStruckCapitalC]P\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"AbsValue", "And", "AnElement", "Append", 
                    "Cardinality", "CartesianProduct", "CaseDistinction", 
                    "Componentwise", "Delete", "DeleteAt", "Difference", "Do",
                     "Exists", "Factorial", "For", "Forall", "Greater", 
                    "GreaterEqual", "Iff", "Implies", "Insert", 
                    "IntegerInterval", "IntegerQuotientRing", 
                    "IntegerQuotientRingPM", "Intersection", "IntersectionOf",
                     "isComplex", "isComplexP", "IsElement", "isInteger", 
                    "isRational", "isReal", "isSet", "isTuple", "Join", 
                    "Length", "Less", "LessEqual", "Let", "Max", 
                    "MaximumElementSet", "MaximumOf", "Min", 
                    "MinimumElementSet", "MinimumOf", "Minus", "Module", 
                    "MultInverse", "Not", "Or", "Plus", "Power", "PowerSet", 
                    "Prepend", "ProductOf", "Radical", "RationalInterval", 
                    "RealInterval", "Replace", "ReplacePart", "SetEqual", 
                    "Subscript", "Subset", "SubsetEqual", "SumOf", "Superset",
                     "SupersetEqual", "Switch", "SymmetricDifference", 
                    "Times", "TupleEqual", "Union", "UnionOf", "Which", 
                    "While", "\[DoubleStruckCapitalC]", 
                    "\[DoubleStruckCapitalC]P"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Restore environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{{{
                  "ID:281007089", 
                   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"}, True}}, {{"AbsValue", True}, {"And", True}, {
                 "AnElement", True}, {"Append", True}, {
                 "Cardinality", True}, {"CartesianProduct", True}, {
                 "CaseDistinction", True}, {"Componentwise", True}, {
                 "Delete", True}, {"DeleteAt", True}, {"Difference", True}, {
                 "Do", True}, {"Equal", False}, {"Exists", True}, {
                 "Factorial", True}, {"For", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Insert", True}, {
                 "IntegerInterval", True}, {"IntegerQuotientRing", True}, {
                 "IntegerQuotientRingPM", True}, {"Intersection", True}, {
                 "IntersectionOf", True}, {"isComplex", True}, {
                 "isComplexP", True}, {"IsElement", True}, {
                 "isInteger", True}, {"isRational", True}, {"isReal", True}, {
                 "isSet", True}, {"isTuple", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Let", True}, {"Max", True}, {"MaximumElementSet", True}, {
                 "MaximumOf", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"MinimumOf", True}, {
                 "Minus", True}, {"Module", True}, {"MultInverse", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "Power", True}, {"PowerSet", True}, {"Prepend", True}, {
                 "ProductOf", True}, {"Radical", True}, {
                 "RationalInterval", True}, {"RealInterval", True}, {
                 "Replace", True}, {"ReplacePart", True}, {
                 "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"SumOf", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"UnionOf", True}, {
                 "Which", True}, {"While", True}, {
                 "\[DoubleStruckCapitalC]", True}, {
                 "\[DoubleStruckCapitalC]P", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           DefaultBaseStyle->"Column",
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{"12"}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "AbsValue", "And", "AnElement", "Append", "Cardinality", 
           "CartesianProduct", "CaseDistinction", "Componentwise", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "Factorial", "For", 
           "Forall", "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "IntegerInterval", "IntegerQuotientRing", "IntegerQuotientRingPM", 
           "Intersection", "IntersectionOf", "isComplex", "isComplexP", 
           "IsElement", "isInteger", "isRational", "isReal", "isSet", 
           "isTuple", "Join", "Length", "Less", "LessEqual", "Let", "Max", 
           "MaximumElementSet", "MaximumOf", "Min", "MinimumElementSet", 
           "MinimumOf", "Minus", "Module", "MultInverse", "Not", "Or", "Plus",
            "Power", "PowerSet", "Prepend", "ProductOf", "Radical", 
           "RationalInterval", "RealInterval", "Replace", "ReplacePart", 
           "SetEqual", "Subscript", "Subset", "SubsetEqual", "SumOf", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "UnionOf", "Which", "While", 
           "\[DoubleStruckCapitalC]", "\[DoubleStruckCapitalC]P"}, 
          "CIContent"]}], 
       Button["Restore environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{{{
           "ID:281007089", 
            "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.\
nb"}, True}}, {{"AbsValue", True}, {"And", True}, {"AnElement", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"CaseDistinction", True}, {
          "Componentwise", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"Factorial", True}, {"For", True}, {
          "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
          "Iff", True}, {"Implies", True}, {"Insert", True}, {
          "IntegerInterval", True}, {"IntegerQuotientRing", True}, {
          "IntegerQuotientRingPM", True}, {"Intersection", True}, {
          "IntersectionOf", True}, {"isComplex", True}, {
          "isComplexP", True}, {"IsElement", True}, {"isInteger", True}, {
          "isRational", True}, {"isReal", True}, {"isSet", True}, {
          "isTuple", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Let", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"MaximumOf", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"MinimumOf", True}, {"Minus", True}, {
          "Module", True}, {"MultInverse", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"Power", True}, {"PowerSet", True}, {
          "Prepend", True}, {"ProductOf", True}, {"Radical", True}, {
          "RationalInterval", True}, {"RealInterval", True}, {
          "Replace", True}, {"ReplacePart", True}, {"SetEqual", True}, {
          "Subscript", True}, {"Subset", True}, {"SubsetEqual", True}, {
          "SumOf", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"UnionOf", True}, {
          "Which", True}, {"While", True}, {
          "\[DoubleStruckCapitalC]", True}, {
          "\[DoubleStruckCapitalC]P", True}}], ImageSize -> Automatic]}]}, 
    False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.599304307097071*^9},
 CellID->611798092],

Cell[BoxData[
 FormBox[
  RowBox[{"fillWithZeros", "[", 
   RowBox[{
   "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
    ",", "9", ",", "10"}], "]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.599304307140439*^9},
 CellID->2085922328]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{740, 829},
WindowMargins->{{518, Automatic}, {Automatic, 5}},
CounterAssignments->{{"TheoremaFormulaCounter" -> 12}},
FrontEndVersion->"9.0 for Linux x86 (32-bit) (February 7, 2013)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Theorema"}, "TheoremaCore.nb"]]], 
   
   Cell["Modify the definitions below to change the default appearance of all \
cells in a given style. \nMake modifications to any definition using commands \
in the Format menu.", "Text"], 
   Cell[
    CellGroupData[{
      Cell["Notebook Options Settings", "Section"], 
      Cell[
      "The options defined for the style below will be used at the Notebook \
level.", "Text"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Notebook"], InputAliases -> {"and" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               
               RowBox[{
                "\[SelectionPlaceholder]", "\[And]", "\[Placeholder]"}], 
               TagBox[")", "AutoParentheses"]}], "or" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               RowBox[{"\[SelectionPlaceholder]", "\[Or]", "\[Placeholder]"}], 
               TagBox[")", "AutoParentheses"]}], "not" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               RowBox[{"\[Not]", "\[SelectionPlaceholder]"}], 
               TagBox[")", "AutoParentheses"]}], "impl" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               
               RowBox[{
                "\[SelectionPlaceholder]", "\[Implies]", "\[Placeholder]"}], 
               TagBox[")", "AutoParentheses"]}], "equiv" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               RowBox[{"\[SelectionPlaceholder]", 
                 TagBox[
                 "\[DoubleLeftRightArrow]", Identity, SyntaxForm -> 
                  "a\[Implies]b"], "\[Placeholder]"}], 
               TagBox[")", "AutoParentheses"]}], "eq" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               
               RowBox[{
                "\[SelectionPlaceholder]", "\[Equal]", "\[Placeholder]"}], 
               TagBox[")", "AutoParentheses"]}], ":equiv" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               RowBox[{"\[SelectionPlaceholder]", 
                 TagBox[
                  
                  RowBox[{
                   ":", "\[NegativeThickSpace]\[NegativeThinSpace]", 
                    "\[DoubleLongLeftRightArrow]"}], Identity, SyntaxForm -> 
                  "a\[Implies]b"], "\[Placeholder]"}], 
               TagBox[")", "AutoParentheses"]}], ":eq" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               RowBox[{"\[SelectionPlaceholder]", ":=", "\[Placeholder]"}], 
               TagBox[")", "AutoParentheses"]}], "far" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               RowBox[{
                 UnderscriptBox["\[ForAll]", "\[Placeholder]"], 
                 "\[SelectionPlaceholder]"}], 
               TagBox[")", "AutoParentheses"]}], "exr" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               RowBox[{
                 UnderscriptBox["\[Exists]", "\[Placeholder]"], 
                 "\[SelectionPlaceholder]"}], 
               TagBox[")", "AutoParentheses"]}], "farc" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               RowBox[{
                 UnderscriptBox[
                  UnderscriptBox["\[ForAll]", "\[Placeholder]"], 
                  "\[Placeholder]"], "\[SelectionPlaceholder]"}], 
               TagBox[")", "AutoParentheses"]}], "exrc" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               RowBox[{
                 UnderscriptBox[
                  UnderscriptBox["\[Exists]", "\[Placeholder]"], 
                  "\[Placeholder]"], "\[SelectionPlaceholder]"}], 
               TagBox[")", "AutoParentheses"]}], "andn" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               RowBox[{"\[And]", "\[Piecewise]", 
                 GridBox[{{"\[SelectionPlaceholder]"}, {"\[Placeholder]"}}]}], 
               TagBox[")", "AutoParentheses"]}], "orn" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               RowBox[{"\[Or]", "\[Piecewise]", 
                 GridBox[{{"\[SelectionPlaceholder]"}, {"\[Placeholder]"}}]}], 
               TagBox[")", "AutoParentheses"]}], "equivn" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               RowBox[{"\[DoubleLeftRightArrow]", "\[Piecewise]", 
                 GridBox[{{"\[SelectionPlaceholder]"}, {"\[Placeholder]"}}]}], 
               TagBox[")", "AutoParentheses"]}], "cdist" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               RowBox[{"\[Piecewise]", 
                 
                 GridBox[{{
                   "\[SelectionPlaceholder]", "\[DoubleLeftArrow]", 
                    "\[Placeholder]"}, {
                   "\[Placeholder]", "\[DoubleLeftArrow]", 
                    "\[Placeholder]"}}]}], 
               TagBox[")", "AutoParentheses"]}], "let" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               RowBox[{
                 UnderscriptBox["let", 
                  RowBox[{"\[Placeholder]", "=", "\[Placeholder]"}]], 
                 "\[SelectionPlaceholder]"}], 
               TagBox[")", "AutoParentheses"]}], "subop" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               SubscriptBox["\[SelectionPlaceholder]", "\[Placeholder]"], 
               TagBox[")", "AutoParentheses"]}], "supop" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               SuperscriptBox["\[SelectionPlaceholder]", "\[Placeholder]"], 
               TagBox[")", "AutoParentheses"]}], "subsupop" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               SubsuperscriptBox[
               "\[SelectionPlaceholder]", "\[Placeholder]", "\[Placeholder]"], 
               TagBox[")", "AutoParentheses"]}], "oop" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               OverscriptBox["\[SelectionPlaceholder]", "\[Placeholder]"], 
               TagBox[")", "AutoParentheses"]}], "uoop" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               UnderoverscriptBox[
               "\[SelectionPlaceholder]", "\[Placeholder]", "\[Placeholder]"], 
               TagBox[")", "AutoParentheses"]}], "osop" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               SubscriptBox[
                OverscriptBox["\[SelectionPlaceholder]", "\[Placeholder]"], 
                "\[Placeholder]"], 
               TagBox[")", "AutoParentheses"]}], "op" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               TagBox["\[SelectionPlaceholder]", Identity], 
               TagBox[")", "AutoParentheses"]}], "(" -> 
            TagBox["(", "AutoParentheses"], ")" -> 
            TagBox[")", "AutoParentheses"]}, Background -> 
          RGBColor[0.957, 0.96, 0.97]], 
         Cell[
          StyleData["Notebook", "Printout"], Background -> None]}, Open]]}, 
     Open]], 
   Cell[
    CellGroupData[{
      Cell["Style Environment Names", "Section"], 
      Cell[
       StyleData[All, "Working"], DockedCells -> {
         Cell[
         "T h e o r e m a   2", "SBO", CellMargins -> {{0, 0}, {0, 0}}, 
          CellFrameMargins -> {{0, 50}, {0, 0}}, FontSize -> 28, FontSlant -> 
          "Plain", FontColor -> RGBColor[0.29, 0.46, 0.6], TextAlignment -> 
          Right, Background -> RGBColor[0.36, 0.54, 0.69]]}], 
      Cell[
       StyleData[
       All, "Layout", StyleDefinitions -> StyleData[All, "Working"]], 
       MenuSortingValue -> 1200], 
      Cell[
       StyleData[All, "Presentation"], DockedCells -> {
         Cell[
         "T h e o r e m a . 2", "SBO", CellMargins -> {{0, 0}, {0, 0}}, 
          CellFrameMargins -> {{0, 50}, {0, 0}}, FontSize -> 28, FontSlant -> 
          "Plain", FontColor -> RGBColor[0.289412, 0.458824, 0.6], 
          TextAlignment -> Right, Background -> 
          RGBColor[0.364705882, 0.541176471, 0.694117647]]}], 
      Cell[
       StyleData[
       All, "SlideShow", StyleDefinitions -> StyleData[All, "Presentation"]], 
       PageWidth -> WindowWidth, DockedCells -> {
         FEPrivate`FrontEndResource["FEExpressions", "SlideshowToolbar"], 
         Cell[
         "T h e o r e m a . 2", "SBO", CellMargins -> {{0, 0}, {0, 0}}, 
          CellFrameMargins -> {{0, 50}, {0, 0}}, FontSize -> 28, FontSlant -> 
          "Plain", FontColor -> RGBColor[0.289412, 0.458824, 0.6], 
          TextAlignment -> Right, Background -> 
          RGBColor[0.364705882, 0.541176471, 0.694117647]]}, 
       ScrollingOptions -> {
        "PagewiseDisplay" -> True, "VerticalScrollRange" -> Fit}, 
       MenuSortingValue -> 1300], 
      Cell[
       StyleData[All, "Printout"], DockedCells -> {
         Cell[
         "T h e o r e m a . 2", "SBO", CellMargins -> {{0, 0}, {0, 0}}, 
          CellFrameMargins -> {{0, 50}, {0, 0}}, FontSize -> 28, FontSlant -> 
          "Plain", FontColor -> RGBColor[0.289412, 0.458824, 0.6], 
          TextAlignment -> Right, Background -> 
          RGBColor[0.364705882, 0.541176471, 0.694117647]]}]}, Open]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Title and Section Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell["Title", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], CellMargins -> {{27, Inherited}, {0, 30}}, 
             MenuSortingValue -> 1100, MenuCommandKey -> "1", FontColor -> 
             RGBColor[0.23, 0.25, 0.34]], 
            Cell[
             StyleData["Title", "SlideShow"], 
             CellMargins -> {{27, 10}, {0, 45}}], 
            Cell[
             StyleData["Title", "Printout"], ShowGroupOpener -> False, 
             CellMargins -> {{6, 10}, {5, 30}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], CellMargins -> {{27, Inherited}, {0, 2}}, 
             MenuSortingValue -> 1150, FontColor -> 
             RGBColor[0.23, 0.25, 0.34]], 
            Cell[
             StyleData["Subtitle", "SlideShow"], 
             CellMargins -> {{27, 10}, {0, 3}}], 
            Cell[
             StyleData["Subtitle", "Printout"], 
             CellMargins -> {{6, 10}, {5, 0}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubtitle"], MenuSortingValue -> 1200, FontColor -> 
             RGBColor[0.23, 0.25, 0.34]], 
            Cell[
             StyleData["Subsubtitle", "SlideShow"], 
             CellMargins -> {{27, 10}, {12, 3}}], 
            Cell[
             StyleData["Subsubtitle", "Printout"], 
             CellMargins -> {{6, 10}, {0, 0}}]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Sectioning", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], ShowGroupOpener -> True, MenuSortingValue -> 
             1250, MenuCommandKey -> "4", FontColor -> 
             RGBColor[0.3, 0.3, 0.3]], 
            Cell[
             StyleData["Section", "SlideShow"], 
             CellMargins -> {{27, 10}, {12, 51}}], 
            Cell[
             StyleData["Section", "Printout"], ShowGroupOpener -> False, 
             CellMargins -> {{2, 0}, {7, 22}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], CellDingbat -> None, ShowGroupOpener -> 
             True, CellMargins -> {{48, Inherited}, {8, 12}}, 
             MenuSortingValue -> 1300, MenuCommandKey -> "5", FontColor -> 
             RGBColor[0.3, 0.3, 0.3]], 
            Cell[
             StyleData["Subsection", "SlideShow"], 
             CellMargins -> {{48, 10}, {12, 18}}], 
            Cell[
             StyleData["Subsection", "Printout"], ShowGroupOpener -> False, 
             CellMargins -> {{9, 0}, {7, 22}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], CellDingbat -> None, ShowGroupOpener -> 
             True, CellMargins -> {{60, Inherited}, {2, 10}}, 
             MenuSortingValue -> 1350, MenuCommandKey -> "6", FontSlant -> 
             "Italic", FontColor -> RGBColor[0.4, 0.4, 0.4]], 
            Cell[
             StyleData["Subsubsection", "SlideShow"], 
             CellMargins -> {{60, 10}, {3, 15}}], 
            Cell[
             StyleData["Subsubsection", "Printout"], ShowGroupOpener -> False,
              CellMargins -> {{35, 0}, {7, 14}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsubsection"], CellDingbat -> None, 
             ShowGroupOpener -> True, 
             CellMargins -> {{92, Inherited}, {Inherited, Inherited}}, 
             FontColor -> RGBColor[0.4, 0.4, 0.4]], 
            Cell[
             StyleData["Subsubsubsection", "SlideShow"], 
             CellMargins -> {{92, 10}, {3, 15}}, LineSpacing -> {1, 0}], 
            Cell[
             StyleData["Subsubsubsection", "Printout"], 
             CellMargins -> {{50, 0}, {7, 14}}]}, Closed]]}, Closed]]}, 
     Open]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Publication\[Hyphen]ready Documents", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Author"], CellMargins -> {{27, 30}, {20, 5}}, 
          MenuSortingValue -> 1900, FontFamily -> "Helvetica", FontSize -> 14,
           FontSlant -> "Italic"], 
         Cell[
          StyleData["Author", "SlideShow"], 
          CellMargins -> {{27, 30}, {30, 8}}, FontSize -> 28], 
         Cell[
          StyleData["Author", "Printout"], CellMargins -> {{6, 10}, {0, 10}}, 
          FontSize -> 10]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Abstract"], CellFrame -> {{0, 0}, {0.5, 0.5}}, 
          CellMargins -> {{27, 140}, {20, 20}}, LineSpacing -> {0.9, 0}, 
          MenuSortingValue -> 2050, FontFamily -> "Times", FontSize -> 12], 
         Cell[
          StyleData["Abstract", "SlideShow"], CellFrame -> {{0, 0}, {1, 1}}, 
          CellMargins -> {{27, 140}, {30, 30}}, FontSize -> 24], 
         Cell[
          StyleData["Abstract", "Printout"], Hyphenation -> True, 
          LineSpacing -> {1, 2}, FontSize -> 10]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Text", "Section"], 
      Cell[
       StyleData["EnvironmentText"], 
       CellMargins -> {{82, Inherited}, {Inherited, Inherited}}, 
       MenuSortingValue -> 1480, MenuCommandKey -> "T"]}, Open]], 
   Cell[
    CellGroupData[{
      Cell["Theorema", "Section"], 
      Cell[
       StyleData["GlobalDeclaration"], CellFrame -> {{0, 2}, {0, 0}}, 
       ShowCellBracket -> Automatic, CellMargins -> {{76, 10}, {2, 2}}, 
       CellBracketOptions -> {"Color" -> RGBColor[0.73, 0.74, 0.84]}, 
       InitializationCell -> True, CellFrameMargins -> 10, CellFrameColor -> 
       RGBColor[0.73, 0.65, 0.61], CellFrameLabelMargins -> 22, 
       ShowAutoStyles -> False, MenuSortingValue -> 1441, MenuCommandKey -> 
       "G", FontSize -> 14], 
      Cell[
       StyleData["OpenEnvironment"], Editable -> False, Selectable -> False, 
       CellFrame -> {{False, False}, {True, False}}, ShowCellBracket -> True, 
       CellMargins -> {{76, 6}, {-4, Inherited}}, 
       CellBracketOptions -> {"Color" -> RGBColor[0.73, 0.74, 0.84]}, 
       CellFrameMargins -> 2, CellFrameColor -> RGBColor[0.4, 0.4, 0.4], 
       MenuSortingValue -> 1485], 
      Cell[
       StyleData["EnvironmentHeader"], 
       CellFrame -> {{False, False}, {False, False}}, 
       CellMargins -> {{76, Inherited}, {Inherited, Inherited}}, 
       CellBracketOptions -> {"Color" -> RGBColor[0.73, 0.74, 0.84]}, 
       CellFrameMargins -> 6, CellFrameColor -> RGBColor[0.4, 0.4, 0.4], 
       ShowAutoStyles -> False, MenuSortingValue -> 1450, FontSize -> 14, 
       FontWeight -> "Bold", FontVariations -> {"CapsType" -> "SmallCaps"}, 
       Background -> RGBColor[0.89, 0.8, 0.69]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["FormalTextInputFormula"], ShowCellBracket -> Automatic, 
          CellMargins -> {{96, 10}, {2, 2}}, 
          CellBracketOptions -> {"Color" -> RGBColor[0.73, 0.74, 0.84]}, 
          InitializationCell -> True, CellFrameLabelMargins -> 53, 
          ShowAutoStyles -> False, MenuSortingValue -> 1470, MenuCommandKey -> 
          "F", FontWeight -> "Bold", FontColor -> RGBColor[0.25, 0.19, 0.2]], 
         
         Cell[
          StyleData["FormalTextInputFormula", "Layout"], Editable -> False], 
         Cell[
          StyleData["FormalTextInputFormula", "Presentation"], Editable -> 
          False]}, Open]], 
      Cell[
       StyleData["EndEnvironmentMarker"], 
       CellBracketOptions -> {"Color" -> RGBColor[0.73, 0.74, 0.84]}, 
       TextAlignment -> Right, MenuSortingValue -> 1480], 
      Cell[
       StyleData["CloseEnvironment"], Editable -> False, Selectable -> False, 
       CellFrame -> {{False, False}, {False, True}}, ShowCellBracket -> True, 
       CellMargins -> {{76, 6}, {Inherited, 0}}, 
       CellBracketOptions -> {"Color" -> RGBColor[0.73, 0.74, 0.84]}, 
       CellFrameMargins -> 2, CellFrameColor -> RGBColor[0.4, 0.4, 0.4], 
       MenuSortingValue -> 1485], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Computation"], CellFrame -> {{1.5, 0}, {0, 0}}, 
          ShowCellBracket -> Automatic, ShowGroupOpener -> True, 
          CellMargins -> {{76, 0}, {-5, 10}}, 
          CellBracketOptions -> {"Color" -> RGBColor[0.23, 0.25, 0.34]}, 
          CellFrameColor -> RGBColor[0.486, 0.33, 0.32], 
          CellFrameLabels -> {{None, 
             Cell["\[MathematicaIcon]", "CILabel"]}, {None, None}}, 
          CellFrameLabelMargins -> {{12, 10}, {0, 0}}, ShowAutoStyles -> 
          False, MenuSortingValue -> 1510, MenuCommandKey -> "C", FontWeight -> 
          "Bold", FontColor -> RGBColor[0.23, 0.25, 0.34]], 
         Cell[
          StyleData["Computation", "Layout"], Editable -> False], 
         Cell[
          StyleData["Computation", "Presentation"], Editable -> False], 
         Cell[
          StyleData["Computation", "SlideShow"], 
          CellMargins -> {{74, 0}, {-10, 15}}]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ComputationResult"], CellFrame -> {{1.5, 0}, {0, 0}}, 
          ShowCellBracket -> Automatic, CellMargins -> {{76, 60}, {5, -5}}, 
          CellBracketOptions -> {"Color" -> RGBColor[0.23, 0.25, 0.34]}, 
          CellFrameMargins -> {{8, 8}, {2, 0}}, CellFrameColor -> 
          RGBColor[0.486, 0.33, 0.32], 
          CellFrameLabels -> {{None, ""}, {None, None}}, 
          CellFrameLabelMargins -> {{12, 5}, {0, 0}}, StyleMenuListing -> 
          None, FontColor -> RGBColor[0.23, 0.25, 0.34]], 
         Cell[
          StyleData["ComputationResult", "SlideShow"], 
          CellMargins -> {{92, 10}, {15, -10}}]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ComputationInfo"], ShowCellBracket -> Automatic, 
          CellMargins -> {{74, 30}, {0, 0}}, CellFrameLabels -> {{None, 
             Cell["...?", "CIContent"]}, {None, None}}, TextAlignment -> 
          Right, StyleMenuListing -> None], 
         Cell[
          StyleData["ComputationInfo", "SlideShow"], 
          CellMargins -> {{74, 30}, {0, 0}}]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ProofInfo"], ShowCellBracket -> Automatic, 
          CellMargins -> {{74, 30}, {0, 0}}, CellFrameLabels -> {{None, 
             Cell["...?", "PIContent"]}, {None, None}}, TextAlignment -> 
          Right, StyleMenuListing -> None], 
         Cell[
          StyleData["ProofInfo", "SlideShow"], 
          CellMargins -> {{74, 30}, {0, 0}}]}, Open]], 
      Cell[
       StyleData["OpenProof"], ShowCellBracket -> Automatic, 
       CellMargins -> {{66, Inherited}, {Inherited, Inherited}}, 
       StyleMenuListing -> None, FontFamily -> "Arial", FontSize -> 11, 
       FontWeight -> "Plain", FontSlant -> "Italic", 
       FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
      Cell[
       StyleData["ProofDisplay"], ShowCellBracket -> Automatic], 
      Cell[
       StyleData["CloseProof"], ShowCellBracket -> Automatic, TextAlignment -> 
       Right, StyleMenuListing -> None], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["FrameLabel"], LanguageCategory -> None, StyleMenuListing -> 
          None, FontFamily -> "Times New Roman", FontSize -> 10, FontWeight -> 
          "Plain", FontSlant -> "Italic", FontTracking -> "Plain", 
          FontVariations -> {
           "Masked" -> False, "Outline" -> False, "Shadow" -> False, 
            "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
          RGBColor[0.55, 0.44, 0.42], Background -> None], 
         Cell[
          StyleData["FrameLabel", "SlideShow"], FontSize -> 18], 
         Cell[
          StyleData["FrameLabel", "Printout"]]}, Closed]], 
      Cell[
       StyleData["CILabel"], FontSize -> 14, FontWeight -> "Plain", FontSlant -> 
       "Plain", FontTracking -> "Plain", 
       FontVariations -> {
        "Masked" -> False, "Outline" -> False, "Shadow" -> False, 
         "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
       RGBColor[0.404, 0.43, 0.545]], 
      Cell[
       StyleData["CIContent"], FontFamily -> "Times New Roman", FontSize -> 
       10, FontWeight -> "Plain", FontSlant -> "Plain", 
       FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}, 
       FontColor -> RGBColor[0.23, 0.25, 0.34]], 
      Cell[
       StyleData["PILabel"], FontSize -> 14, FontWeight -> "Plain", FontSlant -> 
       "Plain", FontTracking -> "Plain", 
       FontVariations -> {
        "Masked" -> False, "Outline" -> False, "Shadow" -> False, 
         "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
       RGBColor[0.404, 0.43, 0.545]], 
      Cell[
       StyleData["PIContent"], FontFamily -> "Times New Roman", FontSize -> 
       10, FontWeight -> "Plain", FontSlant -> "Plain", 
       FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}, 
       FontColor -> RGBColor[0.23, 0.25, 0.34]], 
      Cell[
       StyleData["OpenArchive"], CellFrame -> {{False, False}, {False, True}},
        ShowCellBracket -> Automatic, CellMargins -> {{70, 70}, {0, 10}}, 
       CellBracketOptions -> {"Color" -> RGBColor[0.73, 0.74, 0.84]}, 
       CellGroupingRules -> {"SectionGrouping", 20}, CellFrameMargins -> 3, 
       CellFrameColor -> RGBColor[0.4, 0.4, 0.4], CellFrameLabelMargins -> 1, 
       DefaultFormatType -> DefaultInputFormatType, ShowAutoStyles -> False, 
       MenuSortingValue -> 1210, FontWeight -> Bold, Background -> 
       RGBColor[0.73, 0.74, 0.84]], 
      Cell[
       StyleData["ArchiveInfo"], ShowCellBracket -> Automatic, 
       CellMargins -> {{70, 70}, {0, 0}}, 
       CellBracketOptions -> {"Color" -> RGBColor[0.73, 0.74, 0.84]}, 
       CellFrameMargins -> 5, CellFrameLabelMargins -> 3, ShowCellTags -> 
       False, ShowAutoStyles -> False, MenuSortingValue -> 1220, FontWeight -> 
       "Bold", Background -> RGBColor[0.88, 0.88, 0.92]], 
      Cell[
       StyleData["CloseArchive"], 
       CellFrame -> {{False, False}, {True, False}}, ShowCellBracket -> 
       Automatic, CellMargins -> {{0, 0}, {5, 10}}, 
       CellBracketOptions -> {"Color" -> RGBColor[0.73, 0.74, 0.84]}, 
       CellGroupingRules -> {"SectionGrouping", 25}, CellFrameMargins -> 2, 
       CellFrameColor -> RGBColor[0.4, 0.4, 0.4], TextAlignment -> Center, 
       MenuSortingValue -> 1230, FontFamily -> "Arial Black", FontSize -> 24, 
       FontWeight -> "Plain", FontSlant -> "Plain", 
       FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}, 
       Background -> RGBColor[0.73, 0.65, 0.61]], 
      Cell[
       StyleData["IncludeArchive"], CellFrame -> {{4, 0}, {False, False}}, 
       ShowCellBracket -> Automatic, 
       CellMargins -> {{81, 100}, {Inherited, Inherited}}, 
       CellBracketOptions -> {"Color" -> RGBColor[0.73, 0.74, 0.84]}, 
       CellFrameColor -> RGBColor[0.55, 0.44, 0.42], 
       CellFrameLabels -> {{"\[RightSkeleton]", None}, {None, None}}, 
       CellFrameLabelMargins -> 25, MenuSortingValue -> 1445], 
      Cell[
       StyleData["ExpressionVariable"], SingleLetterItalics -> True, 
       MultiLetterItalics -> True, FontColor -> RGBColor[0.29, 0.46, 0.6]], 
      Cell[
       StyleData["ExpressionABF"], SingleLetterItalics -> True, 
       MultiLetterItalics -> True, FontColor -> RGBColor[0.29, 0.46, 0.6]], 
      Cell[
       StyleData["ExpressionMeta"], SingleLetterItalics -> True, 
       MultiLetterItalics -> True, FontColor -> RGBColor[0.29, 0.46, 0.6]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["AutoParentheses"], SpanMaxSize -> 3, FontOpacity -> 
          0.15], 
         Cell[
          StyleData["AutoParentheses", "Layout"], FontOpacity -> 0], 
         Cell[
          StyleData["AutoParentheses", "SlideShow"], FontOpacity -> 0]}, 
        Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Emphasized"], MenuCommandKey -> "E", FontSlant -> 
          "Italic"], 
         Cell[
          StyleData["Emphasized", "SlideShow"], FontSlant -> "Plain", 
          FontColor -> RGBColor[0.36, 0.54, 0.69]]}, Open]], 
      Cell[
       StyleData["GenericButton"], FontFamily -> "Courier", FontSize -> 10, 
       FontWeight -> "Plain", FontSlant -> "Plain", FontTracking -> "Plain", 
       FontVariations -> {
        "Masked" -> False, "Outline" -> False, "Shadow" -> False, 
         "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
       RGBColor[0.404, 0.43, 0.545]], 
      Cell[
       StyleData["TheoremaForm"], "TwoByteSyntaxCharacterAutoReplacement" -> 
       True, LineSpacing -> {1.25, 0, 2}, SingleLetterItalics -> True, 
       StyleMenuListing -> None, FontFamily -> "Courier"]}, Open]]}, Visible -> 
  False, FrontEndVersion -> "9.0 for Linux x86 (32-bit) (February 7, 2013)", 
  StyleDefinitions -> "StylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ID:1129737817"->{
  Cell[155119, 3559, 2101, 61, 116, "FormalTextInputFormula",
   CellTags->{
    "ID:1129737817", 
     "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", 
     "11"},
   CellID->1129737817]},
 "ID:1207637328"->{
  Cell[7168, 248, 1211, 40, 39, "FormalTextInputFormula",
   CellTags->{
    "ID:1207637328", 
     "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", "2"},
   CellID->1207637328]},
 "ID:1324154882"->{
  Cell[4231, 147, 886, 27, 21, "FormalTextInputFormula",
   CellTags->{
    "ID:1324154882", 
     "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", "4"},
   CellID->1324154882]},
 "ID:1520803150"->{
  Cell[2935, 104, 1293, 41, 39, "FormalTextInputFormula",
   CellTags->{
    "ID:1520803150", 
     "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", "3"},
   CellID->1520803150]},
 "ID:1712066704"->{
  Cell[153802, 3514, 1314, 43, 38, "FormalTextInputFormula",
   CellTags->{
    "ID:1712066704", 
     "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", 
     "10"},
   CellID->1712066704]},
 "ID:2072579713"->{
  Cell[8979, 313, 1266, 41, 37, "FormalTextInputFormula",
   CellTags->{
    "ID:2072579713", 
     "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", "6"},
   CellID->2072579713]},
 "ID:281007089"->{
  Cell[273780, 6006, 1801, 54, 109, "FormalTextInputFormula",
   CellTags->{
    "ID:281007089", 
     "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", 
     "12"},
   CellID->281007089]},
 "ID:514433530"->{
  Cell[125143, 2831, 845, 23, 21, "FormalTextInputFormula",
   CellTags->{
    "ID:514433530", 
     "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", "5"},
   CellID->514433530]},
 "ID:683991833"->{
  Cell[5720, 199, 1445, 47, 38, "FormalTextInputFormula",
   CellTags->{
    "ID:683991833", 
     "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", "1"},
   CellID->683991833]},
 "Proof|ID:514433530|Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb"->{
  Cell[126146, 2865, 1331, 43, 23, "OpenProof",
   CellTags->
    "Proof|ID:514433530|Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb",
   CellID->1052310693]},
 "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb"->{
  Cell[2935, 104, 1293, 41, 39, "FormalTextInputFormula",
   CellTags->{
    "ID:1520803150", 
     "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", "3"},
   CellID->1520803150],
  Cell[4231, 147, 886, 27, 21, "FormalTextInputFormula",
   CellTags->{
    "ID:1324154882", 
     "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", "4"},
   CellID->1324154882],
  Cell[5720, 199, 1445, 47, 38, "FormalTextInputFormula",
   CellTags->{
    "ID:683991833", 
     "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", "1"},
   CellID->683991833],
  Cell[7168, 248, 1211, 40, 39, "FormalTextInputFormula",
   CellTags->{
    "ID:1207637328", 
     "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", "2"},
   CellID->1207637328],
  Cell[8979, 313, 1266, 41, 37, "FormalTextInputFormula",
   CellTags->{
    "ID:2072579713", 
     "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", "6"},
   CellID->2072579713],
  Cell[125143, 2831, 845, 23, 21, "FormalTextInputFormula",
   CellTags->{
    "ID:514433530", 
     "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", "5"},
   CellID->514433530],
  Cell[153802, 3514, 1314, 43, 38, "FormalTextInputFormula",
   CellTags->{
    "ID:1712066704", 
     "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", 
     "10"},
   CellID->1712066704],
  Cell[155119, 3559, 2101, 61, 116, "FormalTextInputFormula",
   CellTags->{
    "ID:1129737817", 
     "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", 
     "11"},
   CellID->1129737817],
  Cell[273780, 6006, 1801, 54, 109, "FormalTextInputFormula",
   CellTags->{
    "ID:281007089", 
     "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", 
     "12"},
   CellID->281007089]},
 "1"->{
  Cell[5720, 199, 1445, 47, 38, "FormalTextInputFormula",
   CellTags->{
    "ID:683991833", 
     "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", "1"},
   CellID->683991833]},
 "10"->{
  Cell[153802, 3514, 1314, 43, 38, "FormalTextInputFormula",
   CellTags->{
    "ID:1712066704", 
     "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", 
     "10"},
   CellID->1712066704]},
 "11"->{
  Cell[155119, 3559, 2101, 61, 116, "FormalTextInputFormula",
   CellTags->{
    "ID:1129737817", 
     "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", 
     "11"},
   CellID->1129737817]},
 "12"->{
  Cell[273780, 6006, 1801, 54, 109, "FormalTextInputFormula",
   CellTags->{
    "ID:281007089", 
     "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", 
     "12"},
   CellID->281007089]},
 "2"->{
  Cell[7168, 248, 1211, 40, 39, "FormalTextInputFormula",
   CellTags->{
    "ID:1207637328", 
     "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", "2"},
   CellID->1207637328]},
 "3"->{
  Cell[2935, 104, 1293, 41, 39, "FormalTextInputFormula",
   CellTags->{
    "ID:1520803150", 
     "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", "3"},
   CellID->1520803150]},
 "4"->{
  Cell[4231, 147, 886, 27, 21, "FormalTextInputFormula",
   CellTags->{
    "ID:1324154882", 
     "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", "4"},
   CellID->1324154882]},
 "5"->{
  Cell[125143, 2831, 845, 23, 21, "FormalTextInputFormula",
   CellTags->{
    "ID:514433530", 
     "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", "5"},
   CellID->514433530]},
 "6"->{
  Cell[8979, 313, 1266, 41, 37, "FormalTextInputFormula",
   CellTags->{
    "ID:2072579713", 
     "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", "6"},
   CellID->2072579713]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ID:1129737817", 358528, 7765},
 {"ID:1207637328", 358759, 7772},
 {"ID:1324154882", 358979, 7778},
 {"ID:1520803150", 359198, 7784},
 {"ID:1712066704", 359418, 7790},
 {"ID:2072579713", 359648, 7797},
 {"ID:281007089", 359867, 7803},
 {"ID:514433530", 360095, 7810},
 {"ID:683991833", 360314, 7816},
 {"Proof|ID:514433530|Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb", 360605, 7823},
 {"Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", \
360858, 7829},
 {"1", 362685, 7878},
 {"10", 362892, 7884},
 {"11", 363111, 7891},
 {"12", 363331, 7898},
 {"2", 363548, 7905},
 {"3", 363756, 7911},
 {"4", 363964, 7917},
 {"5", 364171, 7923},
 {"6", 364379, 7929}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 144, 4, 140, "Title",
 CellID->1798432929],
Cell[CellGroupData[{
Cell[748, 30, 114, 2, 81, "Section",
 CellID->1536902489],
Cell[865, 34, 475, 15, 51, "Text",
 CellID->1916901455],
Cell[1343, 51, 951, 27, 131, "Text",
 CellID->133360773]
}, Closed]],
Cell[CellGroupData[{
Cell[2331, 83, 139, 3, 51, "Section",
 CellID->499682955],
Cell[2473, 88, 48, 1, 12, "OpenEnvironment",
 CellID->1935628522],
Cell[CellGroupData[{
Cell[2546, 93, 386, 9, 40, "EnvironmentHeader",
 CellID->1300838807],
Cell[2935, 104, 1293, 41, 39, "FormalTextInputFormula",
 CellTags->{
  "ID:1520803150", 
   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", "3"},
 CellID->1520803150],
Cell[4231, 147, 886, 27, 21, "FormalTextInputFormula",
 CellTags->{
  "ID:1324154882", 
   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", "4"},
 CellID->1324154882],
Cell[5120, 176, 66, 1, 24, "EndEnvironmentMarker",
 CellID->1196850561]
}, Open  ]],
Cell[5201, 180, 49, 1, 16, "CloseEnvironment",
 CellID->1262707458],
Cell[5253, 183, 47, 1, 12, "OpenEnvironment",
 CellID->895459919],
Cell[CellGroupData[{
Cell[5325, 188, 392, 9, 40, "EnvironmentHeader",
 CellID->1071626981],
Cell[5720, 199, 1445, 47, 38, "FormalTextInputFormula",
 CellTags->{
  "ID:683991833", 
   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", "1"},
 CellID->683991833],
Cell[7168, 248, 1211, 40, 39, "FormalTextInputFormula",
 CellTags->{
  "ID:1207637328", 
   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", "2"},
 CellID->1207637328],
Cell[8382, 290, 65, 1, 24, "EndEnvironmentMarker",
 CellID->734249627]
}, Open  ]],
Cell[8462, 294, 48, 1, 16, "CloseEnvironment",
 CellID->748773727],
Cell[8513, 297, 48, 1, 12, "OpenEnvironment",
 CellID->1264240320],
Cell[CellGroupData[{
Cell[8586, 302, 390, 9, 40, "EnvironmentHeader",
 CellID->816766265],
Cell[8979, 313, 1266, 41, 37, "FormalTextInputFormula",
 CellTags->{
  "ID:2072579713", 
   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", "6"},
 CellID->2072579713],
Cell[10248, 356, 65, 1, 24, "EndEnvironmentMarker",
 CellID->550610118]
}, Open  ]],
Cell[10328, 360, 48, 1, 16, "CloseEnvironment",
 CellID->791201165],
Cell[CellGroupData[{
Cell[10401, 365, 287, 7, 24, "Computation",
 CellID->1656730105],
Cell[10691, 374, 15804, 330, 15, "ComputationInfo",
 CellID->1764826867],
Cell[26498, 706, 205, 5, 17, "ComputationResult",
 CellID->1477646875]
}, Open  ]],
Cell[CellGroupData[{
Cell[26740, 716, 335, 8, 24, "Computation",
 CellID->255419321],
Cell[27078, 726, 15804, 330, 15, "ComputationInfo",
 CellID->1519163807],
Cell[42885, 1058, 202, 4, 17, "ComputationResult",
 CellID->1167465046]
}, Open  ]],
Cell[CellGroupData[{
Cell[43124, 1067, 286, 7, 24, "Computation",
 CellID->959058670],
Cell[43413, 1076, 15804, 330, 15, "ComputationInfo",
 CellID->1526131031],
Cell[59220, 1408, 149, 3, 17, "ComputationResult",
 CellID->2145662583]
}, Open  ]],
Cell[CellGroupData[{
Cell[59406, 1416, 287, 7, 24, "Computation",
 CellID->2059232044],
Cell[59696, 1425, 15803, 330, 15, "ComputationInfo",
 CellID->920702413],
Cell[75502, 1757, 152, 3, 17, "ComputationResult",
 CellID->1036424883]
}, Open  ]],
Cell[CellGroupData[{
Cell[75691, 1765, 287, 7, 24, "Computation",
 CellID->1629913276],
Cell[75981, 1774, 15802, 330, 15, "ComputationInfo",
 CellID->83244821],
Cell[91786, 2106, 179, 4, 17, "ComputationResult",
 CellID->389325035]
}, Open  ]],
Cell[CellGroupData[{
Cell[92002, 2115, 287, 7, 24, "Computation",
 CellID->1613881432],
Cell[92292, 2124, 15804, 330, 15, "ComputationInfo",
 CellID->1561626806],
Cell[108099, 2456, 153, 3, 17, "ComputationResult",
 CellID->1304418964]
}, Open  ]],
Cell[CellGroupData[{
Cell[108289, 2464, 211, 5, 24, "Computation",
 CellID->1276343409],
Cell[108503, 2471, 15915, 333, 15, "ComputationInfo",
 CellID->1576009430],
Cell[124421, 2806, 244, 6, 17, "ComputationResult",
 CellID->2132637668]
}, Open  ]],
Cell[124680, 2815, 47, 1, 12, "OpenEnvironment",
 CellID->472093504],
Cell[CellGroupData[{
Cell[124752, 2820, 388, 9, 40, "EnvironmentHeader",
 CellID->1500614048],
Cell[125143, 2831, 845, 23, 21, "FormalTextInputFormula",
 CellTags->{
  "ID:514433530", 
   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", "5"},
 CellID->514433530],
Cell[125991, 2856, 66, 1, 24, "EndEnvironmentMarker",
 CellID->1529663339]
}, Open  ]],
Cell[126072, 2860, 49, 1, 16, "CloseEnvironment",
 CellID->1986805045],
Cell[CellGroupData[{
Cell[126146, 2865, 1331, 43, 23, "OpenProof",
 CellTags->
  "Proof|ID:514433530|Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/\
Sequence.nb",
 CellID->1052310693],
Cell[CellGroupData[{
Cell[127502, 2912, 4379, 97, 33, "ProofDisplay",
 CellID->345321909],
Cell[131884, 3011, 20991, 471, 15, "ProofInfo",
 CellID->755521802]
}, Open  ]],
Cell[152890, 3485, 56, 1, 24, "CloseProof",
 CellID->916349642]
}, Open  ]],
Cell[152961, 3489, 370, 7, 51, "Text",
 CellID->1086688829],
Cell[153334, 3498, 47, 1, 12, "OpenEnvironment",
 CellID->646505442],
Cell[CellGroupData[{
Cell[153406, 3503, 393, 9, 40, "EnvironmentHeader",
 CellID->1280631388],
Cell[153802, 3514, 1314, 43, 38, "FormalTextInputFormula",
 CellTags->{
  "ID:1712066704", 
   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", "10"},
 
 CellID->1712066704],
Cell[155119, 3559, 2101, 61, 116, "FormalTextInputFormula",
 CellTags->{
  "ID:1129737817", 
   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", "11"},
 
 CellID->1129737817],
Cell[157223, 3622, 65, 1, 24, "EndEnvironmentMarker",
 CellID->154042773]
}, Open  ]],
Cell[157303, 3626, 49, 1, 16, "CloseEnvironment",
 CellID->1453800142],
Cell[CellGroupData[{
Cell[157377, 3631, 236, 5, 24, "Computation",
 CellID->1954597986],
Cell[157616, 3638, 18514, 366, 15, "ComputationInfo",
 CellID->418323041],
Cell[176133, 4006, 176, 4, 17, "ComputationResult",
 CellID->262221515]
}, Open  ]],
Cell[CellGroupData[{
Cell[176346, 4015, 373, 10, 24, "Computation",
 CellID->189176158],
Cell[176722, 4027, 18514, 366, 15, "ComputationInfo",
 CellID->687693211],
Cell[195239, 4395, 179, 4, 17, "ComputationResult",
 CellID->197588762]
}, Open  ]],
Cell[CellGroupData[{
Cell[195455, 4404, 212, 5, 24, "Computation",
 CellID->506370155],
Cell[195670, 4411, 18515, 366, 15, "ComputationInfo",
 CellID->1218593978],
Cell[214188, 4779, 425, 10, 17, "ComputationResult",
 CellID->1738627524]
}, Open  ]],
Cell[CellGroupData[{
Cell[214650, 4794, 419, 10, 24, "Computation",
 CellID->1475921762],
Cell[215072, 4806, 18515, 366, 15, "ComputationInfo",
 CellID->1154692815],
Cell[233590, 5174, 412, 10, 17, "ComputationResult",
 CellID->233529633]
}, Open  ]],
Cell[CellGroupData[{
Cell[234039, 5189, 516, 12, 24, "Computation",
 CellID->868134108],
Cell[234558, 5203, 18515, 366, 15, "ComputationInfo",
 CellID->1855823386],
Cell[253076, 5571, 410, 10, 17, "ComputationResult",
 CellID->578189640]
}, Open  ]],
Cell[CellGroupData[{
Cell[253523, 5586, 393, 9, 24, "Computation",
 CellID->2132214555],
Cell[253919, 5597, 18514, 366, 15, "ComputationInfo",
 CellID->135928522],
Cell[272436, 5965, 407, 10, 17, "ComputationResult",
 CellID->2081042366]
}, Open  ]],
Cell[272858, 5978, 375, 9, 51, "Text",
 CellID->2093452402],
Cell[273236, 5989, 48, 1, 12, "OpenEnvironment",
 CellID->1713907510],
Cell[CellGroupData[{
Cell[273309, 5994, 468, 10, 40, "EnvironmentHeader",
 CellID->810757233],
Cell[273780, 6006, 1801, 54, 109, "FormalTextInputFormula",
 CellTags->{
  "ID:281007089", 
   "Source:/home/amaletzk/WolframWorkspaces/Base/Theorema/Sequence.nb", "12"},
 
 CellID->281007089],
Cell[275584, 6062, 65, 1, 24, "EndEnvironmentMarker",
 CellID->282724972]
}, Open  ]],
Cell[275664, 6066, 49, 1, 16, "CloseEnvironment",
 CellID->1301683811],
Cell[CellGroupData[{
Cell[275738, 6071, 202, 4, 24, "Computation",
 CellID->1921709458],
Cell[275943, 6077, 18130, 358, 15, "ComputationInfo",
 CellID->542266795],
Cell[294076, 6437, 326, 8, 17, "ComputationResult",
 CellID->358559730]
}, Open  ]],
Cell[CellGroupData[{
Cell[294439, 6450, 266, 6, 24, "Computation",
 CellID->1382083937],
Cell[294708, 6458, 18129, 358, 15, "ComputationInfo",
 CellID->804893329],
Cell[312840, 6818, 411, 10, 17, "ComputationResult",
 CellID->279407137]
}, Open  ]],
Cell[CellGroupData[{
Cell[313288, 6833, 269, 6, 24, "Computation",
 CellID->988984248],
Cell[313560, 6841, 18130, 358, 15, "ComputationInfo",
 CellID->611798092],
Cell[331693, 7201, 281, 7, 17, "ComputationResult",
 CellID->2085922328]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
