(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[   2162156,      47689]
NotebookOptionsPosition[   2102413,      46021]
NotebookOutlinePosition[   2124774,      46506]
CellTagsIndexPosition[   2124731,      46503]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Get", "[", "\"\<Theorema`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.563025610806635*^9, 3.563025611435881*^9}, {
  3.568012565663391*^9, 3.568012566877587*^9}},
 CellID->417971902],

Cell[CellGroupData[{

Cell["Tuples :", "Title",
 CellChangeTimes->{{3.564974351453916*^9, 3.564974383115651*^9}, 
   3.564975390711225*^9, 3.567401285701908*^9},
 CellID->983226324],

Cell["Representation of tuples", "Subtitle",
 CellChangeTimes->{{3.564974386059738*^9, 3.564974393118799*^9}, 
   3.564975398089542*^9},
 CellID->650892238],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[LeftAngleBracket]", "\[RightAngleBracket]"}]], "Computation",
 CellChangeTimes->{3.564974405572779*^9},
 CellID->1888817233],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616236059348*^9},
 CellID->15802510],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567667913149071*^9, 3.567999577147154*^9, 
  3.568079810604472*^9, 3.568099652617031*^9, 3.568101956704915*^9, 
  3.568103094616476*^9, 3.568347561652553*^9, 3.568347671720602*^9, 
  3.568616236073512*^9},
 CellID->774898141]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[LeftAngleBracket]", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], 
  "\[RightAngleBracket]"}]], "Computation",
 CellChangeTimes->{3.56497442533394*^9},
 CellID->128728937],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616238653601*^9},
 CellID->403658551],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], 
   "\[RightAngleBracket]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.564974426916805*^9, 3.564984600256457*^9, 
  3.564985221882454*^9, 3.567309837488707*^9, 3.567309928325606*^9, 
  3.56732233151232*^9, 3.567323230304667*^9, 3.567397770921408*^9, 
  3.567477942376792*^9, 3.56756515907533*^9, 3.567581067603903*^9, 
  3.567582582686714*^9, 3.567593138116048*^9, 3.567999586307718*^9, 
  3.568079815353053*^9, 3.568099655693133*^9, 3.568347563970854*^9, 
  3.568347673849102*^9, 3.568616238687903*^9},
 CellID->143088721]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[LeftAngleBracket]", 
  RowBox[{"3", ",", 
   RowBox[{"Theorema`Language`VAR$", "[", "Theorema`Knowledge`x$TM", "]"}], 
   ",", "6", ",", "34"}], "\[RightAngleBracket]"}]], "Computation",
 CellChangeTimes->{
  3.564974437260246*^9, {3.568015745095447*^9, 3.568015747618398*^9}},
 CellID->965336052],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616240801509*^9},
 CellID->444270191],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"3", ",", 
    StyleBox["x", "ExpressionVariable"], ",", "6", ",", "34"}], 
   "\[RightAngleBracket]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.564974438977486*^9, 3.567309850710884*^9, 
  3.56732233392088*^9, 3.567323234445764*^9, 3.567477948936709*^9, 
  3.567498666399309*^9, 3.567565163974818*^9, 3.567581070129732*^9, 
  3.567582590582733*^9, 3.567593140568015*^9, 3.56801575255572*^9, 
  3.568079824156122*^9, 3.568099659017217*^9, 3.568101961230936*^9, 
  3.568347566307458*^9, 3.568347675723309*^9, 3.568616240841995*^9},
 CellID->977791552]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[LeftAngleBracket]", 
  RowBox[{"3", ",", "y", ",", "6", ",", "34"}], 
  "\[RightAngleBracket]"}]], "Computation",
 CellChangeTimes->{{3.568079838576594*^9, 3.568079843545556*^9}},
 CellID->409076341],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616242774813*^9},
 CellID->917069211],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"3", ",", "y", ",", "6", ",", "34"}], "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568079846711033*^9, 3.568099662224225*^9, 
  3.568103098056323*^9, 3.568347568332163*^9, 3.568347685994379*^9, 
  3.568616242800254*^9},
 CellID->672118868]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[LeftAngleBracket]", 
  RowBox[{
   RowBox[{"x", "\[Element]", 
    StyleBox[
     RowBox[{"{", 
      RowBox[{
      "3", ",", "6", ",", "7", ",", "9", ",", "10", ",", "13", ",", "16", ",",
        "17"}], "}"}], "Text"]}], "|", 
   RowBox[{"x", "<", " ", "10"}]}], "\[RightAngleBracket]"}]], "Computation",
 CellChangeTimes->{
  3.564974448468174*^9, 3.567310451868833*^9, {3.567310485551554*^9, 
   3.567310498854003*^9}},
 CellID->338566344],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.56861624533405*^9},
 CellID->1239952255],

Cell[BoxData[
 FormBox["$Failed", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567477961455866*^9, 3.567498662815181*^9, 
  3.567499571756073*^9, 3.567500013979758*^9, 3.567565171057443*^9, 
  3.567581072900956*^9, 3.56758259314329*^9, 3.567593143230546*^9, 
  3.568079853073498*^9, 3.56809966796768*^9, 3.568347570619453*^9, 
  3.568347689947237*^9, 3.568616245545147*^9},
 CellID->1624498698]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[LeftAngleBracket]", 
  RowBox[{
   RowBox[{"x", "\[Element]", "\[DoubleStruckCapitalN]"}], "|", 
   RowBox[{"x", ">", " ", "10"}]}], "\[RightAngleBracket]"}]], "Computation",
 CellChangeTimes->{3.564974474533771*^9},
 CellID->1250395039],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616249052012*^9},
 CellID->781759990],

Cell[BoxData[
 FormBox["$Failed", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.564974476276207*^9, 3.567310769144542*^9, 
  3.567322379443879*^9, 3.567323255047265*^9, 3.567328625072928*^9, 
  3.567477970283887*^9, 3.567498658116542*^9, 3.567499283260222*^9, 
  3.567565181179181*^9, 3.567581076953372*^9, 3.567582598182585*^9, 
  3.567593145887687*^9, 3.568079858549195*^9, 3.56809967292452*^9, 
  3.56834769478046*^9, 3.568616249219813*^9},
 CellID->1226432453]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[LeftAngleBracket]", 
  RowBox[{"x", "|", 
   RowBox[{"x", ">", " ", "10"}]}], "\[RightAngleBracket]"}]], "Computation",
 CellChangeTimes->{{3.568347371421265*^9, 3.568347373928016*^9}},
 CellID->132786175],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.56861625305558*^9},
 CellID->1215613603],

Cell[BoxData[
 FormBox["$Failed", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568347375968788*^9, 3.568347700042678*^9, 
  3.568616253210757*^9},
 CellID->1619631143]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[LeftAngleBracket]", 
  RowBox[{
   RowBox[{
    RowBox[{"3", "*", "x", "*", "x"}], "+", "1"}], 
   UnderscriptBox["|", 
    RowBox[{"even", "[", "x", "]"}]], 
   RowBox[{"x", "<", "10"}]}], "\[RightAngleBracket]"}]], "Computation",
 CellChangeTimes->{{3.567581138986033*^9, 3.567581207580877*^9}, {
  3.567581332986462*^9, 3.567581380025907*^9}, {3.567581474570286*^9, 
  3.567581484941216*^9}},
 CellID->1590089604],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616256488089*^9},
 CellID->877855097],

Cell[BoxData[
 FormBox["$Failed", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.567581182164453*^9, 3.567581209605948*^9}, {
   3.567581365520981*^9, 3.567581381717511*^9}, 3.567581487348949*^9, 
   3.567582632854873*^9, 3.56759315235864*^9, 3.568079894768684*^9, 
   3.568099678722419*^9, 3.568347718296418*^9, 3.568616256633934*^9},
 CellID->940429948]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[LeftAngleBracket]", 
  RowBox[{
   RowBox[{
    RowBox[{"3", "*", "x", "*", "x"}], "+", "1"}], 
   UnderscriptBox["|", "x"], 
   RowBox[{"x", ">", "10"}]}], "\[RightAngleBracket]"}]], "Computation",
 CellChangeTimes->{{3.567581401893968*^9, 3.567581440107504*^9}},
 CellID->1059045043],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616260634756*^9},
 CellID->934054599],

Cell[BoxData[
 FormBox["$Failed", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.567581419338673*^9, 3.56758144173328*^9}, 
   3.567582636430226*^9, 3.567593155920556*^9, 3.568079903142553*^9, 
   3.568099684149489*^9, 3.568347392561664*^9, 3.568347722081184*^9, 
   3.568616260816675*^9},
 CellID->1966825647]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[LeftAngleBracket]", 
  RowBox[{
   RowBox[{
    RowBox[{"3", "*", "x", "*", "x"}], "+", "1"}], 
   UnderscriptBox["|", 
    RowBox[{
     RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "5"}]]}], 
  "\[RightAngleBracket]"}]], "Computation",
 CellChangeTimes->{{3.567328483858117*^9, 3.567328510797042*^9}, {
  3.567335204632845*^9, 3.567335205374464*^9}},
 CellID->940320398],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616264143642*^9},
 CellID->1342747707],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"4", ",", "13", ",", "28", ",", "49", ",", "76"}], 
   "\[RightAngleBracket]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.567328491230583*^9, 3.567328512943201*^9}, 
   3.567328846671728*^9, 3.567328889205571*^9, 3.567335207801239*^9, {
   3.567397796758407*^9, 3.56739780379847*^9}, 3.567477979480529*^9, 
   3.567565192478521*^9, 3.567581110514323*^9, 3.567582640178547*^9, 
   3.567593161131519*^9, 3.567593770652562*^9, 3.56807991051915*^9, 
   3.568099688461929*^9, 3.568347726100348*^9, 3.56861626416525*^9},
 CellID->800729629]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[LeftAngleBracket]", 
  RowBox[{
   RowBox[{
    RowBox[{"3", "*", "x"}], "+", "1"}], 
   UnderscriptBox["|", 
    RowBox[{
     RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "5"}]]}], 
  "\[RightAngleBracket]"}]], "Computation",
 CellChangeTimes->{
  3.564974491307099*^9, {3.564987539582984*^9, 3.564987557713074*^9}, {
   3.567328432309595*^9, 3.567328432615654*^9}},
 CellID->209149821],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616266287938*^9},
 CellID->1564166162],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"4", ",", "7", ",", "10", ",", "13", ",", "16"}], 
   "\[RightAngleBracket]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.564974493317966*^9, 3.564987458996568*^9, 3.564987585038215*^9, 
   3.567309959659547*^9, 3.567317768001786*^9, {3.567322399183523*^9, 
   3.567322403152505*^9}, 3.567323260083292*^9, 3.56732843543603*^9, 
   3.567477982453124*^9, 3.567565195849988*^9, 3.567581113488513*^9, 
   3.567582646248508*^9, 3.567593164442221*^9, 3.56807991435619*^9, 
   3.568099692554791*^9, 3.568347728242323*^9, 3.568616266304962*^9},
 CellID->1986060083]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[LeftAngleBracket]", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "*", "5"}], "+", "y"}], 
   UnderscriptBox[":", 
    RowBox[{
     RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "5"}]], 
   RowBox[{
    RowBox[{"x", ">", "2"}], "\[And]", 
    RowBox[{"x", "<", "5"}]}]}], "\[RightAngleBracket]"}]], "Computation",
 CellChangeTimes->{{3.567478062748657*^9, 3.567478079006577*^9}, {
  3.567581668669403*^9, 3.567581669644451*^9}, {3.568613676079674*^9, 
  3.568613704754037*^9}},
 CellID->407045443],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616269067479*^9},
 CellID->359655608],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{"15", "+", "y"}], ",", 
    RowBox[{"20", "+", "y"}]}], "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.567478084236663*^9, 3.567565199835744*^9, 3.567581121061804*^9, {
   3.567581644591042*^9, 3.567581672152714*^9}, 3.567582649190399*^9, 
   3.567593168563422*^9, 3.567953751355512*^9, 3.568079918938024*^9, 
   3.568099695373988*^9, 3.568347730329633*^9, 3.568616269102475*^9},
 CellID->1734984377]
}, Open  ]],

Cell[CellGroupData[{

Cell["Equality of tuples", "Subtitle",
 CellChangeTimes->{{3.564974536905344*^9, 3.564974565813764*^9}, 
   3.564975412769499*^9},
 CellID->1717794750],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"2", ",", "3", ",", "5"}], "\[RightAngleBracket]"}], "==", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"2", ",", "3", ",", "5"}], 
   "\[RightAngleBracket]"}]}]], "Computation",
 CellChangeTimes->{
  3.564974576413037*^9, {3.567443440466471*^9, 3.56744347201717*^9}, 
   3.567443768134105*^9, {3.567446758958143*^9, 3.56744676719038*^9}, 
   3.567447533243965*^9, 3.567489074206319*^9, 3.567500869868854*^9},
 CellID->785522644],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616305899*^9},
 CellID->1629356658],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.56749863601848*^9, 3.567565203938111*^9, 
  3.567581650965391*^9, 3.567582654782098*^9, 3.567593171856011*^9, 
  3.567600382379135*^9, 3.567600415895616*^9, 3.567600554646806*^9, 
  3.567649422822365*^9, 3.567649535204796*^9, 3.567650719811779*^9, 
  3.567651618872677*^9, 3.567651772712896*^9, 3.567651979423143*^9, 
  3.56766792656133*^9, 3.567953757283275*^9, 3.568016136908511*^9, 
  3.568016416890217*^9, 3.568079990662826*^9, 3.568099703567369*^9, 
  3.568101968266383*^9, 3.568103117025398*^9, 3.568347736057418*^9, 
  3.568616305911344*^9},
 CellID->196916688]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"2", ",", "3", ",", "5"}], "\[RightAngleBracket]"}], "==", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"2", ",", "3", ",", "5"}], "\[RightAngleBracket]"}], "==", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"2", ",", "3", ",", "5"}], "\[RightAngleBracket]"}], "==", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"2", ",", "3", ",", "5"}], 
   "\[RightAngleBracket]"}]}]], "Computation",
 CellChangeTimes->{{3.567649699389276*^9, 3.567649704266586*^9}},
 CellID->826056220],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616308283784*^9},
 CellID->204740551],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567649706535545*^9, 3.567650722608865*^9, 
  3.567651621163934*^9, 3.567651775907148*^9, 3.567651982002603*^9, 
  3.568016139786203*^9, 3.56801641916099*^9, 3.568079994781778*^9, 
  3.568099706166188*^9, 3.56834773835683*^9, 3.568616308313849*^9},
 CellID->1278042172]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"2", ",", "3", ",", "5"}], "\[RightAngleBracket]"}], "==", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"2", ",", "3", ",", "5"}], "\[RightAngleBracket]"}], "==", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"2", ",", "4", ",", "5"}], "\[RightAngleBracket]"}], "==", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"2", ",", "3", ",", "5"}], 
   "\[RightAngleBracket]"}]}]], "Computation",
 CellChangeTimes->{{3.567649720813102*^9, 3.567649723187996*^9}},
 CellID->1577122453],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616310847436*^9},
 CellID->668780062],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567649725106529*^9, 3.567650725467181*^9, 
  3.56765162374145*^9, 3.567651984818296*^9, 3.568016421718185*^9, 
  3.568029701877907*^9, 3.568079999028867*^9, 3.568099714096237*^9, 
  3.568101970855713*^9, 3.568103111490703*^9, 3.568347741595058*^9, 
  3.568616310864895*^9},
 CellID->1855271320]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"2", ",", "3", ",", "5"}], "\[RightAngleBracket]"}], "==", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"2", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"4", ",", "3", ",", "1"}], "\[RightAngleBracket]"}], ",", "5"}], 
   "\[RightAngleBracket]"}]}]], "Computation",
 CellChangeTimes->{{3.567397708090842*^9, 3.56739772203723*^9}, 
   3.567444297136236*^9, 3.56744754182743*^9, 3.567489085900334*^9, 
   3.567565207779952*^9},
 CellID->825788490],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616314288873*^9},
 CellID->1228341704],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567397725855803*^9, 3.56744418833202*^9, 
  3.567444298902667*^9, 3.567446590989134*^9, 3.567447774039896*^9, 
  3.567478127290921*^9, 3.567489087406825*^9, 3.567489822564832*^9, 
  3.567498624926236*^9, 3.567565209157144*^9, 3.567581653993656*^9, 
  3.567582657995937*^9, 3.567593174927193*^9, 3.567600385623571*^9, 
  3.56760041899804*^9, 3.567649427682124*^9, 3.567649537797098*^9, 
  3.567651642117968*^9, 3.568016428620232*^9, 3.56803122822967*^9, 
  3.568080007604827*^9, 3.568099717798333*^9, 3.568347744385023*^9, 
  3.568616314317942*^9},
 CellID->581065191]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"x", ",", "3", ",", "5"}], "\[RightAngleBracket]"}], "==", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"2", ",", "y", ",", "5"}], 
   "\[RightAngleBracket]"}]}]], "Computation",
 CellChangeTimes->{
  3.564974576413037*^9, {3.564987843056605*^9, 3.564987854341776*^9}, 
   3.567444303394963*^9, 3.567447545820614*^9, 3.567489092813672*^9, 
   3.567565213194971*^9},
 CellID->1760126863],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616316870143*^9},
 CellID->573899271],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.56744777937304*^9, 3.56747814122322*^9, 
  3.567489094026355*^9, 3.567489824835534*^9, 3.567498622537509*^9, 
  3.567565214378372*^9, 3.567581656844318*^9, 3.567582660725407*^9, 
  3.567593180746584*^9, 3.567600422706211*^9, 3.567649553128405*^9, 
  3.567651648194636*^9, 3.568016155110723*^9, 3.568016431914663*^9, 
  3.568080022128382*^9, 3.568099721495755*^9, 3.568347747754257*^9, 
  3.568616316903965*^9},
 CellID->2106335540]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{"Theorema`Language`VAR$", "[", "Theorema`Knowledge`x$TM", "]"}], 
    ",", "3", ",", "5"}], "\[RightAngleBracket]"}], "==", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"2", ",", "3", ",", "5"}], 
   "\[RightAngleBracket]"}]}]], "Computation",
 CellChangeTimes->{{3.567582732120658*^9, 3.567582734936482*^9}, 
   3.567651187129762*^9},
 CellID->445388483],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616319111674*^9},
 CellID->596847371],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{
     StyleBox["x", "ExpressionVariable"], ",", "3", ",", "5"}], 
    "\[RightAngleBracket]"}], "\[Equal]", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"2", ",", "3", ",", "5"}], "\[RightAngleBracket]"}]}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567582736980626*^9, 3.567593188258775*^9, 
  3.567649557705058*^9, 3.567651191322627*^9, 3.567651653165717*^9, 
  3.567651780099425*^9, 3.567651994697442*^9, 3.568015769952729*^9, 
  3.568016146451938*^9, 3.568016435062236*^9, 3.568080032196334*^9, 
  3.568099725122996*^9, 3.568101975549514*^9, 3.568347750841975*^9, 
  3.568616319132373*^9},
 CellID->97600014]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", "x"], 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"x", ",", "3", ",", "5"}], "\[RightAngleBracket]"}], "==", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"2", ",", "y", ",", "5"}], 
    "\[RightAngleBracket]"}]}]}]], "Computation",
 CellChangeTimes->{
  3.564974576413037*^9, {3.564987843056605*^9, 3.564987854341776*^9}, {
   3.564987891145183*^9, 3.564987894639421*^9}, {3.567397236349435*^9, 
   3.567397245085938*^9}, 3.567444309027882*^9, 3.567447549433023*^9, 
   3.567489097831244*^9, 3.56756522327467*^9},
 CellID->1006302492],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616322101044*^9},
 CellID->1068577038],

Cell[BoxData[
 FormBox[
  RowBox[{
   UnderscriptBox["\[ForAll]", 
    StyleBox["x", "ExpressionVariable"]], 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{
      StyleBox["x", "ExpressionVariable"], ",", "3", ",", "5"}], 
     "\[RightAngleBracket]"}], "\[Equal]", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "y", ",", "5"}], "\[RightAngleBracket]"}]}]}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.564987900252921*^9, 3.567397004730824*^9, 3.56739716512751*^9, 
   3.567397248103441*^9, 3.567444310179742*^9, 3.567446596453978*^9, 
   3.56744778903159*^9, 3.567478143989343*^9, 3.567489099242558*^9, 
   3.567489827100214*^9, 3.567498616365566*^9, {3.567565219187265*^9, 
   3.567565224546809*^9}, 3.567581681975406*^9, 3.567582665787908*^9, 
   3.567593191601896*^9, 3.567600426913005*^9, 3.567649436340839*^9, 
   3.5676495602806*^9, 3.567650773740287*^9, 3.567651797423296*^9, 
   3.56765200479981*^9, 3.568016441701434*^9, {3.568080040126466*^9, 
   3.568080046730794*^9}, 3.56809972797655*^9, 3.568347753721271*^9, 
   3.568616322144309*^9},
 CellID->9723635]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", "x"], 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"2", ",", "x", ",", "5"}], "\[RightAngleBracket]"}], "==", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"2", ",", "1", ",", "5"}], 
    "\[RightAngleBracket]"}]}]}]], "Computation",
 CellChangeTimes->{{3.567397259291223*^9, 3.567397272261218*^9}, 
   3.56744432032507*^9, 3.567447552790912*^9, 3.567489118990308*^9, 
   3.567565228613115*^9},
 CellID->1738900394],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616324491017*^9},
 CellID->550450048],

Cell[BoxData[
 FormBox[
  RowBox[{
   UnderscriptBox["\[ForAll]", 
    StyleBox["x", "ExpressionVariable"]], 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", 
      StyleBox["x", "ExpressionVariable"], ",", "5"}], 
     "\[RightAngleBracket]"}], "\[Equal]", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "1", ",", "5"}], "\[RightAngleBracket]"}]}]}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567397277536589*^9, 3.567444322181815*^9, 
  3.567446599932502*^9, 3.567447792407673*^9, 3.567478146489128*^9, 
  3.567489120340838*^9, 3.567498619436913*^9, 3.567565230047835*^9, 
  3.56758168516728*^9, 3.567582669230735*^9, 3.567593194483308*^9, 
  3.567600429646539*^9, 3.56764956264769*^9, 3.567650776464427*^9, 
  3.56765200726073*^9, 3.568080053257857*^9, 3.568099732752796*^9, 
  3.568347756700599*^9, 3.568616324528456*^9},
 CellID->206640323]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", "x"], 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"2", ",", "x", ",", "5"}], "\[RightAngleBracket]"}], "==", 
   RowBox[{
    UnderscriptBox["\[ForAll]", "x"], 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "x", ",", "5"}], 
     "\[RightAngleBracket]"}]}]}]}]], "Computation",
 CellChangeTimes->{{3.567649748692662*^9, 3.567649763314618*^9}},
 CellID->1270246997],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616327075558*^9},
 CellID->1641493124],

Cell[BoxData[
 FormBox[
  RowBox[{
   UnderscriptBox["\[ForAll]", 
    StyleBox["x", "ExpressionVariable"]], 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", 
      StyleBox["x", "ExpressionVariable"], ",", "5"}], 
     "\[RightAngleBracket]"}], "\[Equal]", 
    RowBox[{
     UnderscriptBox["\[ForAll]", 
      StyleBox["x", "ExpressionVariable"]], 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"2", ",", 
       StyleBox["x", "ExpressionVariable"], ",", "5"}], 
      "\[RightAngleBracket]"}]}]}]}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567649765245513*^9, 3.567650779977137*^9, 
  3.567652010314756*^9, 3.568080057755524*^9, 3.568099735529926*^9, 
  3.568347758967373*^9, 3.568616327099686*^9},
 CellID->847012156]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Exists]", "x"], 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"2", ",", "x", ",", "5"}], "\[RightAngleBracket]"}], "==", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"2", ",", "1", ",", "5"}], 
    "\[RightAngleBracket]"}]}]}]], "Computation",
 CellChangeTimes->{{3.567397286809075*^9, 3.567397312652654*^9}, {
  3.567397568806383*^9, 3.567397570330335*^9}, {3.567444327780539*^9, 
  3.56744433235096*^9}},
 CellID->2087934225],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616329384862*^9},
 CellID->590155842],

Cell[BoxData[
 FormBox[
  RowBox[{
   UnderscriptBox["\[Exists]", 
    StyleBox["x", "ExpressionVariable"]], 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", 
      StyleBox["x", "ExpressionVariable"], ",", "5"}], 
     "\[RightAngleBracket]"}], "\[Equal]", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "1", ",", "5"}], "\[RightAngleBracket]"}]}]}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567649589419876*^9, 3.567650782715605*^9, 
  3.567652013844166*^9, 3.56808006933215*^9, 3.568099738369764*^9, 
  3.568347761341337*^9, 3.56861632939962*^9},
 CellID->1760442393]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "5"}]], 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"2", ",", "x", ",", "5"}], "\[RightAngleBracket]"}], "==", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"2", ",", "1", ",", "5"}], 
    "\[RightAngleBracket]"}]}]}]], "Computation",
 CellChangeTimes->{3.567397598392767*^9, 3.567397638692605*^9, 
  3.567444341137608*^9, 3.567447557313571*^9, 3.567489243323752*^9, 
  3.567565239189884*^9},
 CellID->1368748332],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616333986783*^9},
 CellID->1933382880],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567397643752516*^9, 3.567397843412935*^9, 
  3.567444342614149*^9, 3.567446606712127*^9, 3.56744779862785*^9, 
  3.567478153588286*^9, 3.567489244995894*^9, 3.567489836174849*^9, 
  3.567565240543126*^9, 3.567581694532813*^9, 3.567581794642279*^9, 
  3.567582812042601*^9, 3.567593200223053*^9, 3.567593778619877*^9, 
  3.567649593205033*^9, 3.56808007649346*^9, 3.568099741169287*^9, 
  3.568347763894899*^9, 3.568616334050948*^9},
 CellID->631030184]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Exists]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "5"}]], 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"2", ",", "x", ",", "5"}], "\[RightAngleBracket]"}], "==", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"2", ",", "1", ",", "5"}], 
    "\[RightAngleBracket]"}]}]}]], "Computation",
 CellChangeTimes->{{3.567397656494939*^9, 3.567397671936957*^9}, 
   3.567444482632549*^9, 3.567447560695589*^9},
 CellID->156054747],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616337064999*^9},
 CellID->151128397],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.56739767577271*^9, 3.567397848221741*^9, 3.567444437342673*^9, 
   3.567444485349401*^9, 3.567447802125578*^9, 3.567478155985411*^9, 
   3.567565244268583*^9, 3.567581729872576*^9, 3.567582691170102*^9, 
   3.567582893131001*^9, {3.567582973856769*^9, 3.567582990263125*^9}, 
   3.567593209361103*^9, 3.567600440068445*^9, 3.56764944256544*^9, 
   3.567649595618891*^9, 3.567649869124668*^9, 3.567650786435954*^9, 
   3.567652019196223*^9, {3.568080080727065*^9, 3.568080085334961*^9}, 
   3.568099744046386*^9, 3.568347767184867*^9, 3.568616337122232*^9},
 CellID->1576997098]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Exists]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "5"}]], 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"2", ",", "x", ",", "5"}], "\[RightAngleBracket]"}], "==", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"2", ",", "1", ",", "1"}], 
    "\[RightAngleBracket]"}]}]}]], "Computation",
 CellChangeTimes->{{3.568080414191184*^9, 3.568080417455185*^9}},
 CellID->981938983],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616339886328*^9},
 CellID->1299810246],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568080420076953*^9, 3.568099747419149*^9, 
  3.5683477700091*^9, 3.568616339939437*^9},
 CellID->2006399717]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Exists]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "5"}]], 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"2", ",", "x", ",", "5"}], "\[RightAngleBracket]"}], "==", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"2", ",", "1", ",", "y"}], "\[RightAngleBracket]"}], "==", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"2", ",", "2", ",", "2"}], 
    "\[RightAngleBracket]"}]}]}]], "Computation",
 CellChangeTimes->{{3.568080958387373*^9, 3.568080987982733*^9}},
 CellID->1172407024],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616342939386*^9},
 CellID->1050940656],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.568080964699465*^9, 3.5680809897928*^9}, 
   3.568099750274253*^9, 3.568347772900954*^9, 3.568616342991577*^9},
 CellID->2020130549]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Exists]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "5"}]], 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"2", ",", "x", ",", "5"}], "\[RightAngleBracket]"}], "==", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"2", ",", "1", ",", "5"}], "\[RightAngleBracket]"}], "\[Equal]", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"2", ",", "1", ",", "5"}], 
    "\[RightAngleBracket]"}]}]}]], "Computation",
 CellChangeTimes->{3.567650515577688*^9},
 CellID->1192346770],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.56861634523751*^9},
 CellID->18018877],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567650530975181*^9, 3.567650789464952*^9, 
  3.567652021445327*^9, 3.568080089162924*^9, 3.568099753994591*^9, 
  3.568347775257642*^9, 3.568616345283135*^9},
 CellID->350065503]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Exists]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "5"}]], 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"3", ",", "x", ",", "5"}], "\[RightAngleBracket]"}], "==", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"x", ",", "3", ",", "5"}], 
    "\[RightAngleBracket]"}]}]}]], "Computation",
 CellChangeTimes->{{3.568082952625956*^9, 3.568082987682199*^9}},
 CellID->1482049681],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616347735098*^9},
 CellID->1189522846],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.568082958411806*^9, 3.568082989698797*^9}, 
   3.56809975666577*^9, 3.568347777403355*^9, 3.568616347764481*^9},
 CellID->1246360581]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{
    RowBox[{"y", "=", "1"}], ",", "\[Ellipsis]", ",", "2"}]], 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"2", ",", "1", ",", "5"}], "\[RightAngleBracket]"}], "==", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"y", ",", "1", ",", "5"}], 
    "\[RightAngleBracket]"}]}]}]], "Computation",
 CellChangeTimes->{{3.568083054169864*^9, 3.56808306483221*^9}},
 CellID->2141330312],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616350456916*^9},
 CellID->931130694],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.56808306692713*^9, 3.568099760086869*^9, 
  3.568347780143707*^9, 3.568616350489871*^9},
 CellID->108878743]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "*", "5"}], "+", "y"}], 
    UnderscriptBox["|", 
     RowBox[{
      RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "5"}]], 
    RowBox[{
     RowBox[{"x", ">", "2"}], "\[And]", 
     RowBox[{"x", "<", "5"}]}]}], "\[RightAngleBracket]"}], "==", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"25", ",", "24", ",", "4"}], 
   "\[RightAngleBracket]"}]}]], "Computation",
 CellChangeTimes->{{3.568083162817627*^9, 3.568083177910369*^9}},
 CellID->830234064],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616352642662*^9},
 CellID->1820259852],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568083180269731*^9, 3.568099763321173*^9, 
  3.568616352670353*^9},
 CellID->889982586]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Exists]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "5"}]], 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"2", ",", "x", ",", "5"}], "\[RightAngleBracket]"}], "==", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"2", ",", "y", ",", "5"}], 
    "\[RightAngleBracket]"}]}]}]], "Computation",
 CellChangeTimes->{{3.568482645994736*^9, 3.56848264991572*^9}, {
  3.568482699511257*^9, 3.568482702084934*^9}, {3.568482739544533*^9, 
  3.568482928681515*^9}},
 CellID->2100430138],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616355996151*^9},
 CellID->705726114],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568613113194038*^9, 3.568616356039191*^9},
 CellID->1917859867]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"5", ",", "3", ",", "2"}], "\[RightAngleBracket]"}], "==", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"2", ",", "2", ",", "3", ",", "5", ",", "5", ",", "5"}], 
   "\[RightAngleBracket]"}]}]], "Computation",
 CellChangeTimes->{
  3.564974589601564*^9, {3.567444475430804*^9, 3.567444476961127*^9}, 
   3.567447809926966*^9},
 CellID->7342953],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616358532938*^9},
 CellID->1598087816],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567582700883375*^9, 3.567593217119869*^9, 
  3.567649599238772*^9, 3.568080104580014*^9, 3.568099766119673*^9, 
  3.568616358561199*^9},
 CellID->1210109692]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Operations on lists: Insert, Delete, DeleteAt, Replace, ReplaceAt, Join, \
Append, Prepend, ValueAtPosition\
\>", "Subtitle",
 CellChangeTimes->{{3.5648002085994406`*^9, 3.564800213279449*^9}, 
   3.564819591050637*^9, {3.564820126587792*^9, 3.564820173299366*^9}, {
   3.564823636806193*^9, 3.564823644924546*^9}, {3.56489906426361*^9, 
   3.564899065349232*^9}, {3.564899352551002*^9, 3.564899363102742*^9}, {
   3.564899423591037*^9, 3.564899500951277*^9}, {3.564901000623244*^9, 
   3.56490103147116*^9}, {3.564901625210211*^9, 3.564901627458124*^9}, 
   3.567324134145166*^9},
 CellID->1663972064],

Cell["Insert", "Text",
 CellChangeTimes->{{3.568613805532431*^9, 3.568613814217313*^9}, {
  3.568613867255014*^9, 3.568613880034082*^9}},
 CellID->82843054],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"4", ",", 
    RowBox[{"Theorema`Language`VAR$", "[", "Theorema`Knowledge`x$TM", "]"}], 
    ",", "2", ",", "3"}], "\[RightAngleBracket]"}], 
  RowBox[{"1", "\[Rule]", "1", " "}]]], "Computation",
 CellChangeTimes->{{3.567567997992591*^9, 3.567568002586153*^9}, {
  3.567568243456368*^9, 3.567568246253847*^9}, {3.567568901907957*^9, 
  3.567568906879733*^9}, {3.567569039387654*^9, 3.567569041890591*^9}, {
  3.567575689783144*^9, 3.567575701588181*^9}, {3.567581021372326*^9, 
  3.567581022255255*^9}, {3.567911517388241*^9, 3.567911521597397*^9}, {
  3.56801578157437*^9, 3.56801578370121*^9}},
 CellID->400256011],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616361945841*^9},
 CellID->838953257],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "4", ",", 
    StyleBox["x", "ExpressionVariable"], ",", "2", ",", "3"}], 
   "\[RightAngleBracket]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567575410973074*^9, 3.567575704057605*^9, 
  3.567581024303029*^9, 3.567650952884681*^9, 3.56765960840039*^9, 
  3.567667941768653*^9, 3.567910507049696*^9, 3.567911592335961*^9, 
  3.567951770975739*^9, 3.567953764195648*^9, 3.568000093057216*^9, 
  3.568000392337856*^9, 3.56800058557767*^9, 3.568000708086039*^9, 
  3.568015791066756*^9, 3.568081209014873*^9, 3.568099775276714*^9, 
  3.568101982134292*^9, 3.568347788075074*^9, 3.568616361995667*^9},
 CellID->1607811451]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "26"}], "\[RightAngleBracket]"}], ",", "3"}], 
   "\[RightAngleBracket]"}], 
  RowBox[{"5", " ", "\[Rule]", " ", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{
     RowBox[{"\[LeftAngleBracket]", "1", "\[RightAngleBracket]"}], ",", 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"2", ",", "1"}], "\[RightAngleBracket]"}], ",", 
     RowBox[{"\[LeftAngleBracket]", "3", "\[RightAngleBracket]"}]}], 
    "\[RightAngleBracket]"}], " "}]]], "Computation",
 CellChangeTimes->{{3.564995290360268*^9, 3.564995299779393*^9}, {
   3.56731360631647*^9, 3.567313607692922*^9}, {3.56731414180833*^9, 
   3.567314156112321*^9}, {3.567314306045426*^9, 3.567314309869728*^9}, {
   3.56731488387098*^9, 3.567314887220428*^9}, {3.567314964934246*^9, 
   3.567314969092824*^9}, 3.567335306614696*^9, {3.567569379611782*^9, 
   3.567569405871385*^9}, {3.567575250964121*^9, 3.567575299545412*^9}, 
   3.567911538232217*^9},
 CellID->693071256],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616364529476*^9},
 CellID->691272090],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"5", ",", "1", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"5", ",", "2", ",", "26"}], "\[RightAngleBracket]"}], ",", "5", 
    ",", "3"}], "\[RightAngleBracket]"}], TheoremaForm]], "ComputationResult",\

 CellChangeTimes->{
  3.567313609604147*^9, 3.567314109060288*^9, {3.56731414523417*^9, 
   3.567314172586582*^9}, 3.567314238593079*^9, 3.567314312394017*^9, 
   3.567314542613662*^9, 3.567314889955548*^9, {3.567314943213967*^9, 
   3.567314970975043*^9}, 3.567569408002651*^9, 3.56757089046815*^9, 
   3.567570941862905*^9, 3.567571043996841*^9, 3.567571258739072*^9, 
   3.567575217695817*^9, 3.567575255449158*^9, {3.567575287015342*^9, 
   3.567575301346009*^9}, 3.567575437268927*^9, 3.567650959156477*^9, 
   3.567911595639225*^9, 3.56795177424309*^9, 3.568081217659548*^9, 
   3.568099778273448*^9, 3.568101988159544*^9, 3.568616364566006*^9},
 CellID->1389403306]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], 
  RowBox[{"2", " ", "\[Rule]", " ", "2", " "}]]], "Computation",
 CellChangeTimes->{{3.567314337319215*^9, 3.567314343830038*^9}, 
   3.56744325537367*^9, 3.567911541296631*^9, {3.568081551962373*^9, 
   3.568081554635204*^9}},
 CellID->740118880],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616366801805*^9},
 CellID->1814451774],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "2", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.567314345396819*^9, 3.567314533229556*^9, 3.567314948059237*^9, 
   3.56741758520618*^9, 3.567442761361004*^9, {3.567443237457712*^9, 
   3.567443258269768*^9}, 3.567569463927998*^9, 3.567570895619609*^9, 
   3.567571321020091*^9, 3.567575443797005*^9, 3.567650973271443*^9, 
   3.567911598553727*^9, 3.56808124020595*^9, 3.568081556524439*^9, 
   3.568099782626368*^9, 3.568103124164542*^9, 3.568616366810088*^9},
 CellID->185281566]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "*", "5"}], "+", "y"}], 
    UnderscriptBox["|", 
     RowBox[{
      RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "5"}]], 
    RowBox[{
     RowBox[{"x", ">", "2"}], "\[And]", 
     RowBox[{"x", "<", "5"}]}]}], "\[RightAngleBracket]"}], 
  RowBox[{"2", " ", "\[Rule]", " ", "2", " "}]]], "Computation",
 CellChangeTimes->{{3.568083207247375*^9, 3.568083223355075*^9}},
 CellID->132121949],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616381639677*^9},
 CellID->684275112],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{"15", "+", "y"}], ",", "2", ",", 
    RowBox[{"20", "+", "y"}]}], "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568083227513855*^9, 3.56809979069949*^9, 
  3.568347793255384*^9, 3.568616381688849*^9},
 CellID->410401565]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], 
  RowBox[{"2", " ", "\[Rule]", " ", 
   RowBox[{"\[LeftAngleBracket]", "2", "\[RightAngleBracket]"}], 
   " "}]]], "Computation",
 CellChangeTimes->{{3.568081560731243*^9, 3.568081576782902*^9}},
 CellID->472321466],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616384497124*^9},
 CellID->698995919],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "2", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568081578490938*^9, 3.568099795790751*^9, 
  3.568616384548085*^9},
 CellID->1464228590]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], 
  RowBox[{"y", " ", "\[Rule]", " ", 
   RowBox[{"\[LeftAngleBracket]", "2", "\[RightAngleBracket]"}], 
   " "}]]], "Computation",
 CellChangeTimes->{{3.568081708330003*^9, 3.56808171423573*^9}},
 CellID->856924406],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616386918856*^9},
 CellID->382347894],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "y", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.56808171779803*^9, 3.568099798320448*^9, 
  3.568616386957596*^9},
 CellID->1324222721]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"1", ",", "3"}], "\[RightAngleBracket]"}], " ", "\[Rule]", " ", 
   RowBox[{"\[LeftAngleBracket]", "2", "\[RightAngleBracket]"}], 
   " "}]]], "Computation",
 CellChangeTimes->{{3.56808167509868*^9, 3.568081681585891*^9}},
 CellID->779671799],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616389306351*^9},
 CellID->1413779852],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "3"}], "\[RightAngleBracket]"}], ",", "2", ",", "3"}], 
   "\[RightAngleBracket]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568081684439702*^9, 3.568099801088513*^9, 
  3.568347797274959*^9, 3.568616389338945*^9},
 CellID->929840690]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "5", ",", "3"}], "\[RightAngleBracket]"}], ",", "2", 
    ",", "3", ",", "1", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "26"}], "\[RightAngleBracket]"}], ",", "3"}], 
   "\[RightAngleBracket]"}], 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"5", ",", "1", ",", 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"37", ",", 
       RowBox[{"z", "+", "1"}]}], "\[RightAngleBracket]"}]}], 
    "\[RightAngleBracket]"}], " ", "\[Rule]", " ", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{
     RowBox[{"\[LeftAngleBracket]", "1", "\[RightAngleBracket]"}], ",", 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"1", ",", "3"}], "\[RightAngleBracket]"}], ",", 
     RowBox[{"\[LeftAngleBracket]", "4", "\[RightAngleBracket]"}]}], 
    "\[RightAngleBracket]"}], " "}]]], "Computation",
 CellChangeTimes->{{3.568484791053285*^9, 3.568484859816493*^9}, {
  3.568484905434146*^9, 3.568484943552311*^9}},
 CellID->116260140],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616392900409*^9},
 CellID->2082369523],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"5", ",", "1", ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"37", ",", 
        RowBox[{"1", "+", "z"}]}], "\[RightAngleBracket]"}]}], 
     "\[RightAngleBracket]"}], ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "5", ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"5", ",", "1", ",", 
        RowBox[{"\[LeftAngleBracket]", 
         RowBox[{"37", ",", 
          RowBox[{"1", "+", "z"}]}], "\[RightAngleBracket]"}]}], 
       "\[RightAngleBracket]"}], ",", "3"}], "\[RightAngleBracket]"}], ",", 
    "2", ",", "3", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"5", ",", "1", ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"37", ",", 
        RowBox[{"1", "+", "z"}]}], "\[RightAngleBracket]"}]}], 
     "\[RightAngleBracket]"}], ",", "1", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "26"}], "\[RightAngleBracket]"}], ",", "3"}], 
   "\[RightAngleBracket]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568532678303013*^9, 3.568613128401567*^9, 
  3.568616392942821*^9},
 CellID->1021559997]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"(", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "\[RightAngleBracket]"}], 
    "\[CupCap]", " ", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{
      RowBox[{
       RowBox[{"3", "*", "x"}], "+", "1"}], 
      UnderscriptBox["|", 
       RowBox[{
        RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "5"}]]}], 
     "\[RightAngleBracket]"}]}], ")"}], 
  RowBox[{"23", " ", "\[Rule]", " ", "2", " "}]]], "Computation",
 CellChangeTimes->{{3.568485306052745*^9, 3.568485358751169*^9}, 
   3.568517062946908*^9},
 CellID->574343066],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616395937684*^9},
 CellID->1200822377],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
   "2", ",", "23", ",", "3", ",", "4", ",", "5", ",", "4", ",", "7", ",", 
    "10", ",", "13", ",", "16"}], "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568613126372747*^9, 3.568616395965702*^9},
 CellID->879813780]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "3"}], "\[RightAngleBracket]"}], ",", "2", ",", "3"}], 
   "\[RightAngleBracket]"}], 
  RowBox[{"5", " ", "\[Rule]", " ", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"1", ",", "2"}], "\[RightAngleBracket]"}], " "}]]], "Computation",\

 CellChangeTimes->{
  3.564974682265874*^9, {3.567569484400611*^9, 3.567569535230347*^9}, 
   3.567575325254777*^9, 3.567911546555832*^9},
 CellID->1515610032],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616398242609*^9},
 CellID->1983570534],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "5", ",", "3"}], "\[RightAngleBracket]"}], ",", "2", 
    ",", "3"}], "\[RightAngleBracket]"}], TheoremaForm]], "ComputationResult",\

 CellChangeTimes->{3.568616398318129*^9},
 CellID->785229230]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "3"}], "\[RightAngleBracket]"}], ",", "2", ",", "3"}], 
   "\[RightAngleBracket]"}], 
  RowBox[{"5", " ", "\[Rule]", " ", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"1", ",", "2"}], "\[RightAngleBracket]"}], ",", 
     RowBox[{"\[LeftAngleBracket]", "3", "\[RightAngleBracket]"}]}], 
    "\[RightAngleBracket]"}], " "}]]], "Computation",
 CellChangeTimes->{{3.567575121162267*^9, 3.56757517699341*^9}, {
   3.567575502373926*^9, 3.567575514762821*^9}, 3.567911548993758*^9},
 CellID->1695000523],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616401465405*^9},
 CellID->1753401141],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "5", ",", "3"}], "\[RightAngleBracket]"}], ",", "2", 
    ",", "5", ",", "3"}], "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.567575150526477*^9, 3.567575181280921*^9}, 
   3.567575516797544*^9, 3.567650982676908*^9, 3.567659611538266*^9, 
   3.567683368105504*^9, 3.567911606698394*^9, 3.568081253820681*^9, 
   3.568099813127559*^9, 3.56810312901518*^9, 3.568616401505771*^9},
 CellID->1611769954]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"(", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], "\[Cap]", 
    " ", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "\[RightAngleBracket]"}]}], 
   ")"}], 
  RowBox[{"1", "\[Rule]", " ", "5"}]]], "Computation",
 CellChangeTimes->{{3.568081490016256*^9, 3.568081497599541*^9}, 
   3.568081530877869*^9},
 CellID->2097465973],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616404273382*^9},
 CellID->336684972],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], ",", "2", 
    ",", "3", ",", "4", ",", "1", ",", "5"}], "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.568081519276278*^9, 3.568081534910608*^9}, 
   3.568099816067101*^9, 3.568616404297874*^9},
 CellID->497096125]
}, Open  ]],

Cell["Delete", "Text",
 CellChangeTimes->{{3.568613852470228*^9, 3.568613860297471*^9}},
 CellID->518649353],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"2", ",", "3", ",", "1"}], "\[RightAngleBracket]"}], 
  RowBox[{"2", "\[LeftArrow]"}]]], "Computation",
 CellChangeTimes->{
  3.564974761420539*^9, {3.564996904926573*^9, 3.564996907080133*^9}, {
   3.564997322103865*^9, 3.5649973481563*^9}, {3.567326391893444*^9, 
   3.567326393168572*^9}, {3.56732669457182*^9, 3.567326701139605*^9}, 
   3.567326763898838*^9, {3.567402929748433*^9, 3.567402932085538*^9}, {
   3.567403714883986*^9, 3.567403716770345*^9}, {3.567403990567323*^9, 
   3.567403996503308*^9}},
 CellID->423748017],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616407495924*^9},
 CellID->163282225],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"2", ",", "1"}], "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567481597597958*^9, 3.567481735332761*^9, 
  3.567481948214236*^9, 3.567482095986122*^9, 3.567482808426409*^9, 
  3.567483127739384*^9, 3.567483244565595*^9, 3.567483397319831*^9, 
  3.567483815157004*^9, 3.56748512406596*^9, 3.567485363379262*^9, 
  3.567485611604633*^9, 3.567489874219897*^9, 3.567498881203663*^9, 
  3.567565892115213*^9, 3.567951784925742*^9, 3.568000101289173*^9, 
  3.568000397185749*^9, 3.568081867779718*^9, 3.568091550402349*^9, 
  3.568099833846226*^9, 3.568101997743488*^9, 3.568616407539785*^9},
 CellID->1800913563]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"2", ",", "2", ",", "3", ",", "5", ",", "5", ",", "5"}], 
   "\[RightAngleBracket]"}], 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{
     RowBox[{"\[LeftAngleBracket]", "1", "\[RightAngleBracket]"}], ",", 
     RowBox[{"\[LeftAngleBracket]", "2", "\[RightAngleBracket]"}]}], 
    "\[RightAngleBracket]"}], "\[LeftArrow]"}]]], "Computation",
 CellChangeTimes->{
  3.567403938806684*^9, 3.567403977471208*^9, {3.567417242355319*^9, 
   3.567417245162655*^9}, {3.567417304997357*^9, 3.56741730537254*^9}, {
   3.567485385529504*^9, 3.567485387454246*^9}, {3.567565910285518*^9, 
   3.567565965699207*^9}},
 CellID->1629228051],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616410001349*^9},
 CellID->1921087475],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"3", ",", "5", ",", "5", ",", "5"}], "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.567404319859326*^9, 3.567405419308587*^9, 3.567405582812642*^9, 
   3.567407852974699*^9, 3.56740819681562*^9, 3.567408752894739*^9, 
   3.567408872043574*^9, 3.567416996696645*^9, {3.567417234854458*^9, 
   3.567417247567292*^9}, 3.567417307295147*^9, 3.56748539121552*^9, 
   3.56756599687688*^9, 3.567659615769771*^9, 3.56795179204711*^9, 
   3.568000592451876*^9, 3.56808187243212*^9, 3.568099837260072*^9, 
   3.568347803185831*^9, 3.568616410030669*^9},
 CellID->1063284837]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{"Theorema`Language`VAR$", "[", "Theorema`Knowledge`x$TM", "]"}], 
    ",", 
    RowBox[{"Theorema`Language`VAR$", "[", "Theorema`Knowledge`x$TM", "]"}], 
    ",", "3"}], "\[RightAngleBracket]"}], 
  RowBox[{"2", "\[LeftArrow]"}]]], "Computation",
 CellChangeTimes->{
  3.567403946030796*^9, {3.567441570396591*^9, 3.567441572040317*^9}, {
   3.567441605741151*^9, 3.567441611321225*^9}, {3.56801581111103*^9, 
   3.56801581946427*^9}},
 CellID->470867308],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616413403531*^9},
 CellID->467087250],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    StyleBox["x", "ExpressionVariable"], ",", "3"}], "\[RightAngleBracket]"}],
   TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.567481981835335*^9, 3.567482103062851*^9, 3.567483249617002*^9, 
   3.567484188482376*^9, 3.56749889191919*^9, 3.567566007683283*^9, 
   3.567653996641844*^9, 3.567667952858074*^9, 3.567953769977806*^9, {
   3.568015816036551*^9, 3.568015823264951*^9}, 3.568081884018447*^9, 
   3.56809984035424*^9, 3.568616413441346*^9},
 CellID->729175878]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], ",", "3"}], 
   "\[RightAngleBracket]"}], 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", "2", "\[RightAngleBracket]"}], 
   "\[LeftArrow]"}]]], "Computation",
 CellChangeTimes->{{3.567407888612815*^9, 3.567407896198333*^9}, {
  3.568081895320392*^9, 3.568081908287455*^9}},
 CellID->1862732819],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616415791387*^9},
 CellID->1445632732],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "3"}], "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568616415867485*^9},
 CellID->1791309971]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], ",", "3"}], 
   "\[RightAngleBracket]"}], 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"2", ",", "1"}], "\[RightAngleBracket]"}], 
   "\[LeftArrow]"}]]], "Computation",
 CellChangeTimes->{{3.567407916853297*^9, 3.567407929516731*^9}, {
  3.567482183392483*^9, 3.567482203043247*^9}},
 CellID->1439653550],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616426530686*^9},
 CellID->377520447],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "3"}], "\[RightAngleBracket]"}], ",", "3"}], 
   "\[RightAngleBracket]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567407931823206*^9, 3.567408209407547*^9, 
  3.567408760053611*^9, 3.567408887277701*^9, 3.567482003449061*^9, 
  3.567482130250943*^9, 3.567482816529776*^9, 3.567483140260061*^9, 
  3.567483257341139*^9, 3.567483405555888*^9, 3.567483822063608*^9, 
  3.567484197757052*^9, 3.56748537513619*^9, 3.567498899651045*^9, 
  3.567566022360309*^9, 3.568081917913644*^9, 3.568099846319045*^9, 
  3.568102001522541*^9, 3.568616426582233*^9},
 CellID->1190945433]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], ",", "3"}], 
   "\[RightAngleBracket]"}], 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{
     RowBox[{"\[LeftAngleBracket]", "1", "\[RightAngleBracket]"}], ",", 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"2", ",", "1"}], "\[RightAngleBracket]"}]}], 
    "\[RightAngleBracket]"}], "\[LeftArrow]"}]]], "Computation",
 CellChangeTimes->{{3.567484233104611*^9, 3.567484242467682*^9}, 
   3.567566036783442*^9, {3.567566072602337*^9, 3.567566100022163*^9}},
 CellID->1995028132],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.5686164290892*^9},
 CellID->1797445300],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "3"}], "\[RightAngleBracket]"}], ",", "3"}], 
   "\[RightAngleBracket]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.567484251621167*^9, {3.56756607818965*^9, 3.567566102543447*^9}, 
   3.568081923912501*^9, 3.568099849458632*^9, 3.568102004410837*^9, 
   3.568103134296797*^9, 3.568347806069683*^9, 3.568616429117594*^9},
 CellID->1577779614]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], ",", "3"}], 
   "\[RightAngleBracket]"}], 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{
     RowBox[{"\[LeftAngleBracket]", "1", "\[RightAngleBracket]"}], ",", 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"2", ",", "1"}], "\[RightAngleBracket]"}], ",", 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"2", ",", "2"}], "\[RightAngleBracket]"}], ",", 
     RowBox[{"\[LeftAngleBracket]", "3", "\[RightAngleBracket]"}]}], 
    "\[RightAngleBracket]"}], "\[LeftArrow]"}]]], "Computation",
 CellChangeTimes->{{3.567579013803254*^9, 3.567579017949264*^9}},
 CellID->7774277],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616432067393*^9},
 CellID->1192105833],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"\[LeftAngleBracket]", "3", "\[RightAngleBracket]"}], 
   "\[RightAngleBracket]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567579019402102*^9, 3.567659620065245*^9, 
  3.567683372944231*^9, 3.567772165435617*^9, 3.568081931053646*^9, 
  3.568099852293449*^9, 3.568616432089597*^9},
 CellID->492414884]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], ",", "3"}], 
   "\[RightAngleBracket]"}], 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{
     RowBox[{"\[LeftAngleBracket]", "1", "\[RightAngleBracket]"}], ",", 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"2", ",", "1"}], "\[RightAngleBracket]"}], ",", 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"2", ",", "2"}], "\[RightAngleBracket]"}], ",", 
     RowBox[{"\[LeftAngleBracket]", "3", "\[RightAngleBracket]"}], ",", 
     RowBox[{"\[LeftAngleBracket]", "3", "\[RightAngleBracket]"}]}], 
    "\[RightAngleBracket]"}], "\[LeftArrow]"}]]], "Computation",
 CellChangeTimes->{{3.567566124187014*^9, 3.567566154134959*^9}, {
   3.567566238277357*^9, 3.567566239989722*^9}, 3.567578995783138*^9},
 CellID->106793217],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616436381706*^9},
 CellID->2114968450],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"\[LeftAngleBracket]", "3", "\[RightAngleBracket]"}], 
   "\[RightAngleBracket]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567566156214629*^9, 3.567566242504634*^9, 
  3.567578997731974*^9, 3.567951801950993*^9, 3.5680819363201*^9, 
  3.568099857732457*^9, 3.568616436471494*^9},
 CellID->196100790]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"1", ",", "45", ",", "e", ",", "12"}], 
       "\[RightAngleBracket]"}], ",", "3"}], "\[RightAngleBracket]"}], ",", 
    "3"}], "\[RightAngleBracket]"}], 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{
     RowBox[{"\[LeftAngleBracket]", "1", "\[RightAngleBracket]"}], ",", 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"2", ",", "2", ",", "1"}], "\[RightAngleBracket]"}], ",", 
     RowBox[{"\[LeftAngleBracket]", "3", "\[RightAngleBracket]"}]}], 
    "\[RightAngleBracket]"}], "\[LeftArrow]"}]]], "Computation",
 CellChangeTimes->{{3.568082089034538*^9, 3.568082145051391*^9}, {
  3.568082566454928*^9, 3.568082567359975*^9}},
 CellID->231936767],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.56861643930235*^9},
 CellID->67800378],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"1", ",", 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"45", ",", "e", ",", "12"}], "\[RightAngleBracket]"}], ",", 
     "3"}], "\[RightAngleBracket]"}], "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.568082098187536*^9, 3.568082147324005*^9}, 
   3.568082569374658*^9, 3.568099860475333*^9, 3.568616439382977*^9},
 CellID->1975029045]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"(", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], "\[Cap]", 
    " ", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "\[RightAngleBracket]"}]}], 
   ")"}], 
  RowBox[{"3", "\[LeftArrow]"}]]], "Computation",
 CellChangeTimes->{{3.568082650147493*^9, 3.568082677202192*^9}},
 CellID->237250277],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616441700257*^9},
 CellID->966532757],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], ",", "2", 
    ",", "4", ",", "5"}], "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568082680701171*^9, 3.568099863301953*^9, 
  3.568347808979376*^9, 3.568616441759241*^9},
 CellID->1569417771]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"1", ",", "45", ",", "e", ",", "12"}], 
       "\[RightAngleBracket]"}], ",", "3"}], "\[RightAngleBracket]"}], ",", 
    "3"}], "\[RightAngleBracket]"}], 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{
     RowBox[{"\[LeftAngleBracket]", "1", "\[RightAngleBracket]"}], ",", 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"2", ",", "1"}], "\[RightAngleBracket]"}], ",", 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"2", ",", "2", ",", "2"}], "\[RightAngleBracket]"}], ",", 
     RowBox[{"\[LeftAngleBracket]", "3", "\[RightAngleBracket]"}]}], 
    "\[RightAngleBracket]"}], "\[LeftArrow]"}]]], "Computation",
 CellChangeTimes->{{3.568081967308435*^9, 3.568081973792394*^9}, {
  3.568082006307371*^9, 3.568082051606077*^9}, {3.568082578990608*^9, 
  3.568082579430474*^9}},
 CellID->1591118301],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616449996907*^9},
 CellID->1579364153],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"1", ",", "e", ",", "12"}], "\[RightAngleBracket]"}], ",", 
     "3"}], "\[RightAngleBracket]"}], "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.56808197643681*^9, 3.568082053584682*^9, 
  3.568082581227472*^9, 3.568099869437309*^9, 3.568347811370615*^9, 
  3.568616450045036*^9},
 CellID->1656676364]
}, Open  ]],

Cell["DeleteAt", "Text",
 CellChangeTimes->{{3.568613941531642*^9, 3.568613952033487*^9}},
 CellID->814944926],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "2", ",", "2", ",", "3", ",", "2"}], 
   "\[RightAngleBracket]"}], 
  RowBox[{"2", "\[LeftArrowBar]"}]]], "Computation",
 CellChangeTimes->{
  3.567403950306103*^9, 3.567405265475726*^9, {3.567576808859113*^9, 
   3.567576815229334*^9}, 3.567654061495406*^9, 3.567654188251966*^9, {
   3.567654219609963*^9, 3.567654222671219*^9}, {3.567667134789275*^9, 
   3.567667137636599*^9}, {3.567667516541843*^9, 3.567667518190925*^9}, 
   3.567951498687226*^9},
 CellID->1303642363],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.587118456241308*^9},
 CellID->1180620023],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "3"}], "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.567405454386208*^9, 3.567405515052076*^9, 3.567405587458397*^9, 
   3.567407456437753*^9, {3.56757680563628*^9, 3.567576817124473*^9}, 
   3.567654014446963*^9, 3.567654064420517*^9, {3.567654183501441*^9, 
   3.567654190046326*^9}, 3.567654225004009*^9, 3.567654640332281*^9, 
   3.567655041940278*^9, 3.567655199349578*^9, 3.567659631480193*^9, 
   3.567663206677405*^9, 3.567663421147683*^9, 3.567663592291946*^9, 
   3.567664497056778*^9, 3.567664585163437*^9, 3.567664967060056*^9, 
   3.567665193570178*^9, 3.567666819169194*^9, 3.56766703388569*^9, 
   3.5676671396461*^9, {3.567667511485032*^9, 3.567667519616983*^9}, 
   3.567682311007808*^9, 3.567682422298238*^9, 3.567683377408175*^9, 
   3.567683552710443*^9, 3.567737147943111*^9, 3.567737349354445*^9, 
   3.567772174301467*^9, 3.567922504058234*^9, 3.567951811368466*^9, 
   3.568087583907597*^9, 3.568091559784191*^9, 3.568098179163445*^9, 
   3.568099874084989*^9, 3.568102011222345*^9, 3.568616453809897*^9, 
   3.587118456248023*^9},
 CellID->2083612595]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "2", ",", 
    RowBox[{"Theorema`Language`VAR$", "[", "Theorema`Knowledge`x$TM", "]"}], 
    ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "3"}], "\[RightAngleBracket]"}], ",", "2"}], 
   "\[RightAngleBracket]"}], 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"2", ",", "3"}], "\[RightAngleBracket]"}], 
   "\[LeftArrowBar]"}]]], "Computation",
 CellChangeTimes->{{3.567737222255181*^9, 3.567737232983181*^9}, {
  3.568015835403849*^9, 3.568015836833631*^9}, {3.568087639124384*^9, 
  3.568087646994599*^9}, {3.587118462052994*^9, 3.587118465777741*^9}},
 CellID->46153320],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.587118467680051*^9},
 CellID->1596618322],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "2", ",", 
    StyleBox["x", "ExpressionVariable"], ",", "2"}], "\[RightAngleBracket]"}],
   TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567737235567759*^9, 3.567737339964981*^9, 
  3.567772190545553*^9, 3.567951819161078*^9, 3.567999606339699*^9, 
  3.567999689715596*^9, 3.567999720818498*^9, 3.568000108840964*^9, 
  3.56800040444262*^9, 3.568000598057425*^9, 3.568000718946585*^9, 
  3.568015839838703*^9, 3.568087588983813*^9, 3.568087649439144*^9, 
  3.568091562642662*^9, 3.568098183080557*^9, 3.568099877190356*^9, 
  3.568347814954747*^9, 3.568616456232752*^9, 3.587118467686972*^9},
 CellID->833766668]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "6", ",", "x", ",", "4", ",", "3", ",", "1"}], 
     "\[RightAngleBracket]"}], ",", "x", ",", "3"}], "\[RightAngleBracket]"}], 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"1", ",", "x", ",", "6"}], "\[RightAngleBracket]"}], " ", 
   "\[LeftArrowBar]"}]]], "Computation",
 CellChangeTimes->{
  3.564974840645238*^9, {3.56757684517268*^9, 3.567576857988226*^9}, 
   3.567654237991151*^9, {3.567662955078774*^9, 3.567662970678601*^9}, {
   3.567951664872049*^9, 3.567951712153684*^9}, {3.567952028719721*^9, 
   3.567952032882332*^9}, {3.568087665571103*^9, 3.568087673865262*^9}},
 CellID->2032740975],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.587118481266283*^9},
 CellID->1375341369],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "6", ",", "x", ",", "4", ",", "3", ",", "1"}], 
     "\[RightAngleBracket]"}], ",", "x", ",", "3"}], "\[RightAngleBracket]"}],
   TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567576859947015*^9, 3.567654242265219*^9, 
  3.567654652879052*^9, 3.567655203177691*^9, 3.567659659361359*^9, 
  3.567662973207512*^9, 3.567667526073454*^9, 3.567951829916084*^9, 
  3.567952035480937*^9, 3.568000123617031*^9, 3.568087600864774*^9, 
  3.568087676917126*^9, 3.56809156656671*^9, 3.568098189516259*^9, 
  3.568099882571064*^9, 3.568102015204037*^9, 3.568103140578055*^9, 
  3.568616458819174*^9, 3.587118481275489*^9},
 CellID->1657874565]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "6", ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"1", ",", "3", ",", "5", ",", "1"}], "\[RightAngleBracket]"}], 
      ",", "1", ",", "4", ",", "3", ",", "1"}], "\[RightAngleBracket]"}], ",",
     "3"}], "\[RightAngleBracket]"}], 
  RowBox[{
   RowBox[{"1", " ", "\[LeftArrowBar]"}], " ", ",", 
   RowBox[{"3", "\[LeftArrowBar]", " "}]}]]], "Computation",
 CellChangeTimes->{{3.567654269947152*^9, 3.567654331617842*^9}, {
  3.567772425886952*^9, 3.567772438067509*^9}, {3.567951531473916*^9, 
  3.567951533951432*^9}, {3.587118397378804*^9, 3.587118403834401*^9}},
 CellID->1854442001],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.587118700419242*^9},
 CellID->1398090212],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"2", ",", "6", ",", 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"1", ",", "3", ",", "5", ",", "1"}], "\[RightAngleBracket]"}], 
     ",", "1", ",", "4", ",", "3", ",", "1"}], "\[RightAngleBracket]"}], 
   "\[RightAngleBracket]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.587118504758503*^9, 3.587118700427618*^9},
 CellID->1823501645]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "6", ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"1", ",", "3", ",", "5", ",", "1"}], "\[RightAngleBracket]"}], 
      ",", "1", ",", "4", ",", "3", ",", "1"}], "\[RightAngleBracket]"}], ",",
     "3"}], "\[RightAngleBracket]"}], 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", "1", "\[RightAngleBracket]"}], " ", 
   "\[LeftArrowBar]", " "}]]], "Computation",
 CellChangeTimes->{{3.568091607072357*^9, 3.568091621541574*^9}},
 CellID->239376316],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616464194334*^9},
 CellID->2037919467],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "6", ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"3", ",", "5"}], "\[RightAngleBracket]"}], ",", "4", ",", 
      "3"}], "\[RightAngleBracket]"}], ",", "3"}], "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568091623518064*^9, 3.568099885603942*^9, 
  3.568616464233391*^9},
 CellID->315166795]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "6", ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"1", ",", "3", ",", "5", ",", "1"}], "\[RightAngleBracket]"}], 
      ",", "1", ",", "4", ",", "3", ",", "1"}], "\[RightAngleBracket]"}], ",",
     "3"}], "\[RightAngleBracket]"}], 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"6", ",", "5"}], " ", "\[RightAngleBracket]"}], "\[LeftArrowBar]",
    " "}]]], "Computation",
 CellChangeTimes->{{3.56766324131734*^9, 3.567663266385345*^9}, {
  3.5676633507721*^9, 3.567663352500875*^9}, {3.56766349032762*^9, 
  3.567663494420341*^9}, {3.567667556120996*^9, 3.567667557683942*^9}, {
  3.567951555840218*^9, 3.567951558009913*^9}, {3.568087695180522*^9, 
  3.568087700002553*^9}},
 CellID->536070690],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616466763192*^9},
 CellID->490790874],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"1", ",", "3", ",", "1"}], "\[RightAngleBracket]"}], ",", "1", 
      ",", "4", ",", "3", ",", "1"}], "\[RightAngleBracket]"}], ",", "3"}], 
   "\[RightAngleBracket]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.567663256317115*^9, 3.567663268730447*^9}, 
   3.567663431456291*^9, 3.567663496731424*^9, 3.567663604616892*^9, 
   3.56766451619331*^9, 3.567664594972835*^9, 3.567665247253692*^9, 
   3.567667094264765*^9, {3.567667535293617*^9, 3.567667559464085*^9}, 
   3.567683604520051*^9, 3.567683947989706*^9, 3.56777224055431*^9, 
   3.567951851569406*^9, 3.567952045691858*^9, 3.568087701667254*^9, 
   3.568091577575237*^9, 3.568099890050621*^9, 3.568616466808564*^9},
 CellID->428507435]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"5", ",", "x"}], "\[RightAngleBracket]"}], ",", "6", ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"1", ",", "3", ",", 
        RowBox[{"\[LeftAngleBracket]", 
         RowBox[{"5", ",", "x"}], "\[RightAngleBracket]"}], ",", "1"}], 
       "\[RightAngleBracket]"}], ",", "1", ",", "4", ",", "3", ",", "1"}], 
     "\[RightAngleBracket]"}], ",", "3"}], "\[RightAngleBracket]"}], 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"1", ",", "2", ",", 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"5", ",", "x"}], "\[RightAngleBracket]"}]}], 
    "\[RightAngleBracket]"}], " ", "\[LeftArrowBar]", " "}]]], "Computation",
 CellChangeTimes->{{3.567683734630741*^9, 3.567683838055492*^9}, {
  3.56795157270924*^9, 3.567951576446127*^9}, {3.567952148806983*^9, 
  3.567952175103095*^9}, {3.568087709157544*^9, 3.568087718791761*^9}},
 CellID->2094427294],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616469295518*^9},
 CellID->1971843159],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"6", ",", 
      RowBox[{"\[LeftAngleBracket]", "3", "\[RightAngleBracket]"}], ",", "4", 
      ",", "3"}], "\[RightAngleBracket]"}], ",", "3"}], 
   "\[RightAngleBracket]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567683846194191*^9, 3.567683977488117*^9, 
  3.567772317150778*^9, 3.567952050633263*^9, 3.56795217952776*^9, 
  3.568000128741553*^9, 3.56808772165842*^9, 3.568091581199774*^9, 
  3.568099892685491*^9, 3.568616469332261*^9},
 CellID->875554038]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "6", ",", "4", ",", "3", ",", "1"}], 
     "\[RightAngleBracket]"}], ",", "3"}], "\[RightAngleBracket]"}], 
  RowBox[{"1", " ", "\[LeftArrowBar]", " "}]]], "Computation",
 CellChangeTimes->{3.567654288884992*^9, 3.567951613762716*^9},
 CellID->1379907566],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616471529559*^9},
 CellID->1452797778],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "6", ",", "4", ",", "3"}], "\[RightAngleBracket]"}], 
    ",", "3"}], "\[RightAngleBracket]"}], TheoremaForm]], "ComputationResult",\

 CellChangeTimes->{3.567659690368816*^9, 3.567683678685007*^9, 
  3.567772365299047*^9, 3.567952067447371*^9, 3.568087725514036*^9, 
  3.568091585034455*^9, 3.568099895751227*^9, 3.568347820071971*^9, 
  3.568616471557161*^9},
 CellID->1718525006]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"(", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], "\[Cap]", 
    " ", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "\[RightAngleBracket]"}]}], 
   ")"}], 
  RowBox[{"3", " ", "\[LeftArrowBar]"}]]], "Computation",
 CellChangeTimes->{{3.568087869885106*^9, 3.568087881934037*^9}, {
  3.568088845192377*^9, 3.568088863869329*^9}},
 CellID->229759647],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616474846952*^9},
 CellID->1044571292],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "2"}], "\[RightAngleBracket]"}], ",", "2", ",", "4", 
    ",", "5"}], "\[RightAngleBracket]"}], TheoremaForm]], "ComputationResult",\

 CellChangeTimes->{
  3.568087884089533*^9, {3.568088853312124*^9, 3.568088865986084*^9}, 
   3.568091589012565*^9, 3.568099898739108*^9, 3.568102018968557*^9, 
   3.568616474876725*^9},
 CellID->1957005161]
}, Open  ]],

Cell["Replace", "Text",
 CellChangeTimes->{{3.56861398753609*^9, 3.568613997864811*^9}},
 CellID->1278983252],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{"Theorema`Language`VAR$", "[", "Theorema`Knowledge`x$TM", "]"}], 
    ",", "2", ",", "3"}], "\[RightAngleBracket]"}], 
  RowBox[{"2", " ", "\[LeftArrow]", " ", "5"}]]], "Computation",
 CellChangeTimes->{
  3.564974918447981*^9, {3.567437523336671*^9, 3.56743752440235*^9}, 
   3.567441657683586*^9, {3.567566675378051*^9, 3.56756668092803*^9}, {
   3.568015854672505*^9, 3.568015855725698*^9}},
 CellID->1047740689],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.587118805620205*^9},
 CellID->1880555999],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "5", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.5649749202385*^9, 3.567437526224577*^9, 
  3.567437901696174*^9, 3.567441659374535*^9, 3.567442523538047*^9, 
  3.567566683078771*^9, 3.567954886905016*^9, 3.567956090714258*^9, 
  3.567956189264982*^9, 3.568000490687555*^9, 3.568000732601046*^9, 
  3.568015857101559*^9, 3.568088019564303*^9, 3.5680999122446*^9, 
  3.568616481019197*^9, 3.587118805685147*^9},
 CellID->1195879424]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{"Theorema`Language`VAR$", "[", "Theorema`Knowledge`x$TM", "]"}], 
    ",", "2", ",", "3"}], "\[RightAngleBracket]"}], 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", "2", "\[RightAngleBracket]"}], " ", 
   "\[LeftArrow]", " ", "5"}]]], "Computation",
 CellChangeTimes->{{3.568088088480095*^9, 3.568088103988752*^9}},
 CellID->481771869],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.587118812614334*^9},
 CellID->857413044],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "5", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.5680881057783*^9, 3.568091674253307*^9, 
  3.568099947506152*^9, 3.568616484919369*^9, 3.587118812621322*^9},
 CellID->2048319237]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{
     RowBox[{"\[LeftAngleBracket]", "2", "\[RightAngleBracket]"}], ",", 
     RowBox[{"\[LeftAngleBracket]", "3", "\[RightAngleBracket]"}]}], 
    "\[RightAngleBracket]"}], "\[LeftArrow]", " ", "5"}]]], "Computation",
 CellChangeTimes->{
  3.564974934630544*^9, {3.56756676887705*^9, 3.567566781713766*^9}, {
   3.567566811765368*^9, 3.567566837132791*^9}},
 CellID->1506962924],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.587118818541376*^9},
 CellID->1662928718],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "5", ",", "5"}], "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.564974936058578*^9, 3.567489901979998*^9, {3.567566815271593*^9, 
   3.567566839582714*^9}, 3.567954892439641*^9, 3.56795611112584*^9, 
   3.568000136589446*^9, 3.568000626198826*^9, 3.568088075893623*^9, 
   3.568091678677534*^9, 3.568099953702361*^9, 3.568102025562745*^9, 
   3.568347825357884*^9, 3.56861648874921*^9, 3.587118818606459*^9},
 CellID->852313146]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], ",", "3"}], 
   "\[RightAngleBracket]"}], 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{
     RowBox[{"\[LeftAngleBracket]", "1", "\[RightAngleBracket]"}], ",", 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"2", ",", "1"}], "\[RightAngleBracket]"}], ",", 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"2", ",", "2"}], "\[RightAngleBracket]"}], ",", 
     RowBox[{"\[LeftAngleBracket]", "3", "\[RightAngleBracket]"}]}], 
    "\[RightAngleBracket]"}], "\[LeftArrow]", "2"}]]], "Computation",
 CellChangeTimes->{
  3.564974944690622*^9, {3.567566871192581*^9, 3.567566883346015*^9}},
 CellID->833357690],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616491316742*^9},
 CellID->1606118837],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"2", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], ",", "2"}], 
   "\[RightAngleBracket]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567566885479885*^9, 3.567956114824592*^9, 
  3.568088110912589*^9, 3.568099956856627*^9, 3.568103145156911*^9, 
  3.568616491350348*^9},
 CellID->818167170]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"(", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], "\[Cap]", 
    " ", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "\[RightAngleBracket]"}]}], 
   ")"}], 
  RowBox[{"4", "\[LeftArrow]", " ", "5"}]]], "Computation",
 CellChangeTimes->{{3.568081311982001*^9, 3.568081367943888*^9}},
 CellID->389852928],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616493750076*^9},
 CellID->2007919452],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], ",", "2", 
    ",", "3", ",", "5", ",", "5"}], "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568081344921064*^9, 3.568081394798535*^9, 
  3.568088170984655*^9, 3.568099967035568*^9, 3.568347827721576*^9, 
  3.568616493768556*^9},
 CellID->615782521]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], ",", "3"}], 
   "\[RightAngleBracket]"}], 
  RowBox[{
   RowBox[{"3", "\[LeftArrow]", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"14", ",", "3", ",", "x"}], "\[RightAngleBracket]"}]}], ",", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "2"}], "\[RightAngleBracket]"}], "\[LeftArrow]", "7"}],
    ",", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{
      RowBox[{"\[LeftAngleBracket]", "1", "\[RightAngleBracket]"}], ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"2", ",", "2"}], "\[RightAngleBracket]"}]}], 
     "\[RightAngleBracket]"}], "\[LeftArrow]", "25"}]}]]], "Computation",
 CellChangeTimes->{
  3.567567117417456*^9, {3.567567198708002*^9, 3.567567199084261*^9}},
 CellID->1844974704],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616500103883*^9},
 CellID->645615719],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"25", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "7", ",", "3"}], "\[RightAngleBracket]"}], ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"14", ",", "3", ",", "x"}], "\[RightAngleBracket]"}]}], 
   "\[RightAngleBracket]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567567201156393*^9, 3.568088182767104*^9, 
  3.568098309201003*^9, 3.568099975052964*^9, 3.56861650014405*^9},
 CellID->429279799]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], ",", "3"}], 
   "\[RightAngleBracket]"}], 
  RowBox[{
   RowBox[{"3", "\[LeftArrow]", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"14", ",", "3", ",", "x"}], "\[RightAngleBracket]"}]}], ",", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "2"}], "\[RightAngleBracket]"}], "\[LeftArrow]", 
    "25"}], ",", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{
      RowBox[{"\[LeftAngleBracket]", "1", "\[RightAngleBracket]"}], ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"2", ",", "2"}], "\[RightAngleBracket]"}]}], 
     "\[RightAngleBracket]"}], "\[LeftArrow]", "7"}]}]]], "Computation",
 CellChangeTimes->{{3.567579151498023*^9, 3.567579170014086*^9}},
 CellID->676355522],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.587118839853212*^9},
 CellID->1229060951],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"7", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "25", ",", "3"}], "\[RightAngleBracket]"}], ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"14", ",", "3", ",", "x"}], "\[RightAngleBracket]"}]}], 
   "\[RightAngleBracket]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567579172389276*^9, 3.567956199390615*^9, 
  3.568088205655385*^9, 3.568098304040672*^9, 3.56861650317394*^9, 
  3.587118839897857*^9},
 CellID->293483628]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox[
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], 
   RowBox[{"24", " ", "\[Rule]", " ", "2", " "}]], "\[Cup]", " ", 
  SubscriptBox[
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"1", ",", 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], ",", "3"}],
     "\[RightAngleBracket]"}], 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", "2", "\[RightAngleBracket]"}], 
    "\[LeftArrow]"}]]}]], "Computation",
 CellChangeTimes->{{3.568476547499695*^9, 3.568476637896904*^9}, {
  3.56847671656279*^9, 3.56847673848026*^9}, {3.568477135170194*^9, 
  3.568477172588679*^9}},
 CellID->252185781],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616511091079*^9},
 CellID->810010244],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "24", ",", "2", ",", "3", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "3"}], "\[RightAngleBracket]"}]}], 
   "\[RightAngleBracket]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.56861651116647*^9},
 CellID->1374711876]
}, Open  ]],

Cell["ReplaceAt", "Text",
 CellChangeTimes->{{3.568614046439766*^9, 3.568614056865949*^9}},
 CellID->1888499300],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "\[RightAngleBracket]"}], 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], " ", 
   "\[LeftArrowBar]", "1", " "}]]], "Computation",
 CellChangeTimes->{
  3.564974878062477*^9, 3.567654677202764*^9, {3.568088480232193*^9, 
   3.568088489380183*^9}},
 CellID->2022133219],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616514108703*^9},
 CellID->2032382005],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "1", ",", "1", ",", "4"}], "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567654680263499*^9, 3.56795358643505*^9, 
  3.5679537905741*^9, 3.567954923115541*^9, 3.567956253921129*^9, 
  3.567956794256542*^9, 3.568000143001799*^9, 3.568000498399155*^9, 
  3.568000632148896*^9, 3.56800073897421*^9, 3.568088491852435*^9, 
  3.56809169200473*^9, 3.568092568197169*^9, 3.568094065523794*^9, 
  3.568096517865886*^9, 3.56809660466078*^9, 3.568097696130308*^9, 
  3.568097905666112*^9, 3.568098201744064*^9, 3.568099518313372*^9, 
  3.568099978322614*^9, 3.568103151388744*^9, 3.568616514153537*^9},
 CellID->116124898]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{"Theorema`Language`VAR$", "[", "Theorema`Knowledge`x$TM", "]"}], 
    ",", "4", ",", "3"}], "\[RightAngleBracket]"}], 
  RowBox[{"3", "\[LeftArrowBar]", "4"}]]], "Computation",
 CellChangeTimes->{{3.56743738972009*^9, 3.567437406869885*^9}, {
   3.567438075076357*^9, 3.567438077225038*^9}, {3.567438130252126*^9, 
   3.567438132986454*^9}, 3.567441626620015*^9, 3.567912162855372*^9, 
   3.567912197360989*^9, {3.567913702534918*^9, 3.567913740230016*^9}, {
   3.567914138706181*^9, 3.567914143291539*^9}, {3.567914475981023*^9, 
   3.567914493096908*^9}, {3.568015874088414*^9, 3.568015876119876*^9}},
 CellID->1069569015],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616516441673*^9},
 CellID->1570125551],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    StyleBox["x", "ExpressionVariable"], ",", "4", ",", "4"}], 
   "\[RightAngleBracket]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568088502963787*^9, 3.568091695146258*^9, 
  3.568097919234538*^9, 3.568098206725795*^9, 3.568099521562308*^9, 
  3.56810203971835*^9, 3.568616516474233*^9},
 CellID->1776380065]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "4", ",", "5"}], "\[RightAngleBracket]"}], 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", "4", "\[RightAngleBracket]"}], 
   "\[LeftArrowBar]", "2"}]]], "Computation",
 CellChangeTimes->{{3.567440434332897*^9, 3.567440462547976*^9}, 
   3.567441640921064*^9, 3.56795577110925*^9, {3.568088524277116*^9, 
   3.568088532221544*^9}},
 CellID->2049139854],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616519440492*^9},
 CellID->1825947213],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "2", ",", "5"}], "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.567440440195636*^9, 3.567440464526103*^9}, 
   3.567441643425744*^9, 3.567955774915331*^9, 3.567956210317945*^9, 
   3.567999754606527*^9, 3.567999842369941*^9, 3.568088534681626*^9, 
   3.568091702007056*^9, 3.56809792482728*^9, 3.568098210823329*^9, 
   3.568099524644936*^9, 3.568099984706207*^9, 3.568616519459913*^9},
 CellID->1891497186]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "4", ",", "x", ",", "5"}], "\[RightAngleBracket]"}], 
  RowBox[{"x", "\[LeftArrowBar]", "23"}]]], "Computation",
 CellChangeTimes->{{3.567438388770621*^9, 3.567438405577075*^9}, {
  3.567439722797444*^9, 3.567439744621376*^9}, {3.567440360468574*^9, 
  3.567440374085368*^9}, {3.567441647584247*^9, 3.567441649819086*^9}, {
  3.567956064821887*^9, 3.567956073163732*^9}},
 CellID->1122530022],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.587119895578346*^9},
 CellID->735938263],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "4", ",", "23", ",", "5"}], "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.567438407269592*^9, 3.567439710798826*^9, 3.567439746566997*^9, 
   3.567440376735196*^9, 3.567956074836832*^9, 3.567956213845164*^9, 
   3.568088569423926*^9, 3.568091710937549*^9, 3.568097929782763*^9, 
   3.568098214028788*^9, 3.568099527784013*^9, 3.56834783102705*^9, 
   3.568616522761764*^9, 3.587119477501926*^9, {3.58711957875402*^9, 
   3.587119588228822*^9}, 3.587119895586608*^9},
 CellID->1353377093]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], 
  RowBox[{"2", " ", "\[LeftArrowBar]", " ", "5"}]]], "Computation",
 CellChangeTimes->{3.564974978617104*^9},
 CellID->440861380],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.587119916071291*^9},
 CellID->1890979291],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "5", ",", "3"}], "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.564974980097694*^9, 3.567441678682378*^9, 
  3.56748997698492*^9, 3.56749809645873*^9, 3.567912535787344*^9, 
  3.567956216937345*^9, 3.568088575100288*^9, 3.568091714196118*^9, 
  3.568097934331057*^9, 3.568098216983877*^9, 3.56809953116944*^9, 
  3.56861652543026*^9, 3.587119386570194*^9, 3.587119916078229*^9},
 CellID->313141681]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"(", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], "\[Cap]", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "\[RightAngleBracket]"}]}], 
   ")"}], 
  RowBox[{"4", "\[LeftArrowBar]", "5"}]]], "Computation",
 CellChangeTimes->{{3.568088662282397*^9, 3.568088668955641*^9}, 
   3.568098671665005*^9, 3.568098821446093*^9},
 CellID->413033298],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.5686165280571*^9},
 CellID->1152411444],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], ",", "2", 
    ",", "3", ",", "5", ",", "5"}], "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568099535281512*^9, 3.568616528088462*^9},
 CellID->1648371254]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], ",", "3"}], 
   "\[RightAngleBracket]"}], 
  RowBox[{
   RowBox[{"3", "\[LeftArrowBar]", " ", "1"}], ",", 
   RowBox[{"2", "\[LeftArrowBar]", " ", "7"}], ",", 
   RowBox[{"7", "\[LeftArrowBar]", " ", "25"}]}]]], "Computation",
 CellChangeTimes->{
  3.564974999464608*^9, {3.568097983091443*^9, 3.568098033893141*^9}, {
   3.568098240851696*^9, 3.568098244153414*^9}, {3.587120060488776*^9, 
   3.587120070588936*^9}},
 CellID->1594960447],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.587120071697106*^9},
 CellID->1807856202],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "25", ",", "1"}], "\[RightAngleBracket]"}], ",", "1"}],
    "\[RightAngleBracket]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.568616538160049*^9, 3.587119925972066*^9, {3.587120061956395*^9, 
   3.587120071745996*^9}},
 CellID->52561069]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], ",", "3", 
    ",", "7"}], "\[RightAngleBracket]"}], 
  RowBox[{
   RowBox[{"3", "\[LeftArrowBar]", " ", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "5", ",", "4"}], "\[RightAngleBracket]"}]}], ",", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "7"}], "\[RightAngleBracket]"}], "\[LeftArrowBar]", 
    " ", "25"}], ",", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", "2", "\[RightAngleBracket]"}], 
    "\[LeftArrowBar]", " ", "7"}]}]]], "Computation",
 CellChangeTimes->{{3.5680983946037*^9, 3.568098438236822*^9}, {
  3.568098481409889*^9, 3.568098506528221*^9}, {3.568099582778269*^9, 
  3.568099591161087*^9}},
 CellID->1291938454],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616548086992*^9},
 CellID->929768224],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"25", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"25", ",", "25", ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"1", ",", "5", ",", "4"}], "\[RightAngleBracket]"}]}], 
     "\[RightAngleBracket]"}], ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "5", ",", "4"}], "\[RightAngleBracket]"}], ",", "25"}],
    "\[RightAngleBracket]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.568098440547841*^9, {3.56809848955772*^9, 3.568098509104767*^9}, 
   3.568099561854028*^9, 3.56809959345087*^9, 3.568347835255145*^9, 
   3.568616548148067*^9},
 CellID->214097186]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "\[RightAngleBracket]"}], 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], 
   "\[LeftArrowBar]", " ", "5"}]]], "Computation",
 CellChangeTimes->{
  3.564975009538079*^9, {3.568088588957262*^9, 3.56808859299413*^9}},
 CellID->313236026],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616550872527*^9},
 CellID->1042924553],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"5", ",", "5", ",", "5", ",", "4"}], "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.564975010972366*^9, 3.567956805935316*^9, 
  3.568088594799838*^9, 3.568091732689894*^9, 3.568097950340395*^9, 
  3.568099632569511*^9, 3.568616550919361*^9},
 CellID->2082126674]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "2", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{
     "3", ",", "x", ",", "2", ",", "1", ",", "1", ",", "y", ",", "7"}], 
     "\[RightAngleBracket]"}], ",", "4"}], "\[RightAngleBracket]"}], 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], " ", 
   "\[LeftArrowBar]", " ", "5"}]]], "Computation",
 CellChangeTimes->{{3.567999873471878*^9, 3.567999898305148*^9}, {
  3.568088601307671*^9, 3.568088609881485*^9}},
 CellID->2127687046],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616554782846*^9},
 CellID->499639732],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"5", ",", "5", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{
     "5", ",", "x", ",", "5", ",", "5", ",", "5", ",", "y", ",", "7"}], 
     "\[RightAngleBracket]"}], ",", "4"}], "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567999900834994*^9, 3.568088611774998*^9, 
  3.568091737486858*^9, 3.568097955772985*^9, 3.568099635921481*^9, 
  3.568616554826942*^9},
 CellID->759106028]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[LeftBracketingBar]", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{
     RowBox[{
      RowBox[{"3", "*", "x", "*", "x"}], "+", "1"}], 
     UnderscriptBox["|", 
      RowBox[{
       RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "5"}]]}], 
    "\[RightAngleBracket]"}], "\[RightBracketingBar]"}], "\[Cap]", 
  SubscriptBox[
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"1", ",", 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], ",", "3"}],
     "\[RightAngleBracket]"}], 
   RowBox[{
    RowBox[{"3", "\[LeftArrowBar]", " ", "1"}], ",", 
    RowBox[{
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"1", ",", "2"}], "\[RightAngleBracket]"}], "\[LeftArrowBar]", 
     " ", "25"}]}]]}]], "Computation",
 CellChangeTimes->{
  3.568483930126301*^9, 3.568484028311865*^9, {3.568517689260476*^9, 
   3.568517691454694*^9}},
 CellID->1501444591],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616557528416*^9},
 CellID->1618610855],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"5", ",", "25", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"25", ",", "25", ",", "1"}], "\[RightAngleBracket]"}], ",", 
    "1"}], "\[RightAngleBracket]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568616557600473*^9},
 CellID->344911813]
}, Open  ]],

Cell["Append", "Text",
 CellChangeTimes->{{3.568614094948876*^9, 3.568614109904261*^9}},
 CellID->191300890],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{"Theorema`Language`VAR$", "[", "Theorema`Knowledge`x$TM", "]"}], 
    ",", "2", ",", "3"}], "\[RightAngleBracket]"}], "\[Cup]", " ", 
  "5"}]], "Computation",
 CellChangeTimes->{{3.56731581039905*^9, 3.567315817146147*^9}, {
  3.568015893368054*^9, 3.568015894869721*^9}},
 CellID->607511475],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616612619113*^9},
 CellID->1045116004],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    StyleBox["x", "ExpressionVariable"], ",", "2", ",", "3", ",", "5"}], 
   "\[RightAngleBracket]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.56731581918799*^9, 3.567323391357956*^9, 
  3.567324003608755*^9, 3.567324145263456*^9, 3.567324287919541*^9, 
  3.567324518057449*^9, 3.567479431092667*^9, 3.567565412808325*^9, 
  3.568000749065481*^9, 3.568015896587861*^9, 3.568088952122962*^9, 
  3.568100002325555*^9, 3.568102051211778*^9, 3.568347838954908*^9, 
  3.568616612665179*^9},
 CellID->1646577436]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], "\[Cup]", " ", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"2", ",", "3", ",", "4", ",", "5"}], 
   "\[RightAngleBracket]"}]}]], "Computation",
 CellChangeTimes->{
  3.564975041017219*^9, {3.564984107160745*^9, 3.564984115989259*^9}},
 CellID->656384848],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616615700627*^9},
 CellID->1357166042],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "2", ",", "3", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "\[RightAngleBracket]"}]}], 
   "\[RightAngleBracket]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567565424811169*^9, 3.568088954566818*^9, 
  3.568100004973494*^9, 3.568616615736434*^9},
 CellID->3903171]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "\[RightAngleBracket]"}], 
   "\[Cup]", " ", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{
     RowBox[{
      RowBox[{"3", "*", "x", "*", "x"}], "+", "1"}], 
     UnderscriptBox["|", 
      RowBox[{
       RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "5"}]]}], 
    "\[RightAngleBracket]"}]}]}]], "Computation",
 CellChangeTimes->{{3.567315901402638*^9, 3.567315919247151*^9}, {
  3.567399066903767*^9, 3.567399067293856*^9}},
 CellID->958140562],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616618250395*^9},
 CellID->33832873],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"2", ",", "3", ",", "4", ",", "5", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"4", ",", "13", ",", "28", ",", "49", ",", "76"}], 
     "\[RightAngleBracket]"}]}], "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567315921182027*^9, 3.567399069510536*^9, 
  3.567479436838469*^9, 3.567565428012052*^9, 3.568088957625589*^9, 
  3.56810001022365*^9, 3.568103164143281*^9, 3.56861661827252*^9},
 CellID->1394878861]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox[
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"2", ",", "3", ",", 
     RowBox[{"\[LeftAngleBracket]", "1", "\[RightAngleBracket]"}]}], 
    "\[RightAngleBracket]"}], "3"], "\[Cup]", 
  SubscriptBox[
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"1", ",", "2", ",", 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{
      "3", ",", "x", ",", "2", ",", "1", ",", "1", ",", "y", ",", "7"}], 
      "\[RightAngleBracket]"}], ",", "4"}], "\[RightAngleBracket]"}], 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], " ", 
    "\[LeftArrowBar]", " ", "5"}]]}]], "Computation",
 CellChangeTimes->{3.568484255319279*^9, 3.568484300074073*^9, 
  3.568484350217259*^9},
 CellID->1387755838],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616621247406*^9},
 CellID->891736171],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"5", ",", "5", ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{
       "5", ",", "x", ",", "5", ",", "5", ",", "5", ",", "y", ",", "7"}], 
       "\[RightAngleBracket]"}], ",", "4"}], "\[RightAngleBracket]"}]}], 
   "\[RightAngleBracket]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568616621314818*^9},
 CellID->560048063]
}, Open  ]],

Cell["Prepand", "Text",
 CellChangeTimes->{{3.568614126914517*^9, 3.568614135384611*^9}},
 CellID->15029127],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Theorema`Language`VAR$", "[", "Theorema`Knowledge`x$TM", "]"}], 
  "\[Cap]", " ", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"2", ",", "3", ",", 
    RowBox[{"Theorema`Language`VAR$", "[", "Theorema`Knowledge`x$TM", "]"}], 
    ",", "4", ",", "5"}], "\[RightAngleBracket]"}]}]], "Computation",
 CellChangeTimes->{{3.567315842659647*^9, 3.567315849187443*^9}, {
  3.568015902197659*^9, 3.568015909220453*^9}},
 CellID->49900251],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616626329003*^9},
 CellID->574413437],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    StyleBox["x", "ExpressionVariable"], ",", "2", ",", "3", ",", 
    StyleBox["x", "ExpressionVariable"], ",", "4", ",", "5"}], 
   "\[RightAngleBracket]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568616626415753*^9},
 CellID->286816809]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], "\[Cap]", " ", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"2", ",", "3", ",", "4", ",", "5"}], 
   "\[RightAngleBracket]"}]}]], "Computation",
 CellChangeTimes->{
  3.564975041017219*^9, {3.564984107160745*^9, 3.564984115989259*^9}, {
   3.564984202461095*^9, 3.564984213559095*^9}},
 CellID->950986456],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616635114748*^9},
 CellID->1956369558],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], ",", "2", 
    ",", "3", ",", "4", ",", "5"}], "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567479480780043*^9, 3.567565434352518*^9, 
  3.568000754029214*^9, 3.568088967190421*^9, 3.568100016243565*^9, 
  3.568102055474476*^9, 3.56861663515114*^9},
 CellID->1291834457]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "\[RightAngleBracket]"}], 
  "\[Cap]", " ", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{
     RowBox[{"3", "*", "x", "*", "x"}], "+", "1"}], 
    UnderscriptBox["|", 
     RowBox[{
      RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "5"}]]}], 
   "\[RightAngleBracket]"}]}]], "Computation",
 CellChangeTimes->{{3.567315945797737*^9, 3.567315955669148*^9}, 
   3.567326949475776*^9, {3.56739909462419*^9, 3.567399095217251*^9}},
 CellID->1312973741],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616637982423*^9},
 CellID->1129438150],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "\[RightAngleBracket]"}], 
    ",", "4", ",", "13", ",", "28", ",", "49", ",", "76"}], 
   "\[RightAngleBracket]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567315957657359*^9, 3.567399096312245*^9, 
  3.567479509151793*^9, 3.567565437642171*^9, 3.568088970255286*^9, 
  3.568100018643769*^9, 3.568103161292953*^9, 3.568616638012444*^9},
 CellID->562669533]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{
    RowBox[{"y", "=", "1"}], ",", "\[Ellipsis]", ",", "4"}]], 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"y", ",", "1", ",", "5"}], "\[RightAngleBracket]"}], "\[Cap]", 
   " ", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{
     RowBox[{
      RowBox[{"3", "*", "x", "*", "x"}], "+", "1"}], 
     UnderscriptBox["|", 
      RowBox[{
       RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "5"}]]}], 
    "\[RightAngleBracket]"}]}]}]], "Computation",
 CellChangeTimes->{{3.568088999017577*^9, 3.568089008230137*^9}},
 CellID->830818370],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616640902532*^9},
 CellID->1466716144],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"1", ",", "1", ",", "5"}], "\[RightAngleBracket]"}], ",", "4", 
     ",", "13", ",", "28", ",", "49", ",", "76"}], "\[RightAngleBracket]"}], 
   "\[And]", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"2", ",", "1", ",", "5"}], "\[RightAngleBracket]"}], ",", "4", 
     ",", "13", ",", "28", ",", "49", ",", "76"}], "\[RightAngleBracket]"}], 
   "\[And]", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"3", ",", "1", ",", "5"}], "\[RightAngleBracket]"}], ",", "4", 
     ",", "13", ",", "28", ",", "49", ",", "76"}], "\[RightAngleBracket]"}], 
   "\[And]", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"4", ",", "1", ",", "5"}], "\[RightAngleBracket]"}], ",", "4", 
     ",", "13", ",", "28", ",", "49", ",", "76"}], "\[RightAngleBracket]"}]}],
   TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568089009962285*^9, 3.568100021454216*^9, 
  3.568347844628474*^9, 3.568616640948008*^9},
 CellID->282516319]
}, Open  ]],

Cell["Join", "Text",
 CellChangeTimes->{{3.56861414538105*^9, 3.56861415165625*^9}},
 CellID->708702422],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], "\[CupCap]", 
  " ", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"2", ",", "3", ",", "4", ",", "5"}], 
   "\[RightAngleBracket]"}]}]], "Computation",
 CellChangeTimes->{
  3.564975041017219*^9, {3.564984107160745*^9, 3.564984115989259*^9}, {
   3.564984202461095*^9, 3.564984223641111*^9}},
 CellID->556082349],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616644163233*^9},
 CellID->1094194903],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "2", ",", "3", ",", "2", ",", "3", ",", "4", ",", "5"}], 
   "\[RightAngleBracket]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.564984237903255*^9, 3.567479513867921*^9, 
  3.567565442007035*^9, 3.568088973385966*^9, 3.5681000242195*^9, 
  3.56810206007181*^9, 3.5686166442175*^9},
 CellID->1053061019]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "\[RightAngleBracket]"}], 
  "\[CupCap]", " ", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{
     RowBox[{"3", "*", "x", "*", "x"}], "+", "1"}], 
    UnderscriptBox["|", 
     RowBox[{
      RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "5"}]]}], 
   "\[RightAngleBracket]"}]}]], "Computation",
 CellChangeTimes->{{3.567316085374969*^9, 3.567316089904035*^9}, {
   3.56739910054555*^9, 3.567399101199585*^9}, 3.568353792230728*^9, {
   3.568616669406079*^9, 3.568616684055283*^9}},
 CellID->1121600337],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616687304526*^9},
 CellID->1494389892],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
   "2", ",", "3", ",", "4", ",", "5", ",", "4", ",", "13", ",", "28", ",", 
    "49", ",", "76"}], "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568616687376113*^9},
 CellID->899245082]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "\[RightAngleBracket]"}], 
  "\[CupCap]", " ", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{
     RowBox[{"3", "*", "x", "*", "x"}], "+", "1"}], 
    UnderscriptBox["|", 
     RowBox[{
      RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "5"}]]}], 
   "\[RightAngleBracket]"}], "\[CupCap]", 
  RowBox[{
  "\[LeftAngleBracket]", "5", "\[RightAngleBracket]"}]}]], "Computation",
 CellChangeTimes->{{3.567316110729129*^9, 3.567316142292478*^9}, {
  3.567399109467654*^9, 3.567399111052687*^9}},
 CellID->1078579843],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616690485583*^9},
 CellID->1120873549],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
   "2", ",", "3", ",", "4", ",", "5", ",", "4", ",", "13", ",", "28", ",", 
    "49", ",", "76", ",", "5"}], "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.567316119751345*^9, 3.567316148191742*^9}, 
   3.567399112294042*^9, 3.56747952020268*^9, 3.567565450474864*^9, 
   3.568088979064667*^9, 3.568100030864264*^9, 3.568347847839712*^9, 
   3.568616690521906*^9},
 CellID->455084461]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"2", ",", "3", ",", 
    RowBox[{"Theorema`Language`VAR$", "[", "Theorema`Knowledge`x$TM", "]"}], 
    ",", "4", ",", "5"}], "\[RightAngleBracket]"}], "\[CupCap]", " ", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{
     RowBox[{"3", "*", "x", "*", "x"}], "+", "1"}], 
    UnderscriptBox["|", 
     RowBox[{
      RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "5"}]]}], 
   "\[RightAngleBracket]"}], "\[CupCap]", 
  RowBox[{
  "\[LeftAngleBracket]", "5", "\[RightAngleBracket]"}]}]], "Computation",
 CellChangeTimes->{{3.567316157710921*^9, 3.567316161697151*^9}, {
   3.567399116985917*^9, 3.567399117673733*^9}, 3.567405906832491*^9, {
   3.568015916488078*^9, 3.568015917706822*^9}, 3.568353651949377*^9, {
   3.568616720502487*^9, 3.568616732646309*^9}},
 CellID->2135180245],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616734494265*^9},
 CellID->1568574066],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"2", ",", "3", ",", 
    StyleBox["x", "ExpressionVariable"], ",", "4", ",", "5", ",", "4", ",", 
    "13", ",", "28", ",", "49", ",", "76", ",", "5"}], 
   "\[RightAngleBracket]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.56731616450834*^9, 3.567399118760579*^9, 3.567479524808942*^9, 
   3.567565453780799*^9, 3.568015919609892*^9, 3.56808898281751*^9, 
   3.568100033607618*^9, {3.568616693404531*^9, 3.568616734531474*^9}},
 CellID->815760898]
}, Open  ]],

Cell["ValueAtPosition", "Text",
 CellChangeTimes->{{3.568614163944278*^9, 3.568614175895973*^9}},
 CellID->183977091],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"2", ",", "3", ",", "1"}], "\[RightAngleBracket]"}], 
  "1"]], "Computation",
 CellChangeTimes->{
  3.5649751660145*^9, {3.567400462337642*^9, 3.567400465261737*^9}},
 CellID->1571412960],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.570274430385651*^9},
 CellID->1582897478],

Cell[BoxData[
 FormBox["2", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567400471027634*^9, 3.567401313007762*^9, 
  3.567402084834134*^9, 3.567402349643572*^9, 3.567565600735215*^9, 
  3.567775553517363*^9, 3.567958537891069*^9, 3.568000762423552*^9, 
  3.568089065102496*^9, 3.568100037441352*^9, 3.568102064307039*^9, 
  3.56810316902085*^9, 3.568616741305445*^9, 3.570274043271585*^9, 
  3.570274430447486*^9},
 CellID->1570321036]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"2", ",", "3", ",", "1"}], "\[RightAngleBracket]"}], 
  "3"]], "Computation",
 CellChangeTimes->{{3.567400485121046*^9, 3.567400492116238*^9}},
 CellID->1839398836],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.570274434079455*^9},
 CellID->934896027],

Cell[BoxData[
 FormBox["1", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567565632530546*^9, 3.567775557153654*^9, 
  3.567958541598262*^9, 3.56808907478875*^9, 3.568100042743558*^9, 
  3.568347851981793*^9, 3.568616744026782*^9, 3.570274049021094*^9, 
  3.570274434088075*^9},
 CellID->1608156113]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"2", ",", "3", ",", "1"}], "\[RightAngleBracket]"}], 
  RowBox[{"-", "1"}]]], "Computation",
 CellChangeTimes->{{3.567400500103296*^9, 3.567400505271036*^9}},
 CellID->99102128],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.570274435735058*^9},
 CellID->1114744293],

Cell[BoxData[
 FormBox["1", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567400507595326*^9, 3.567401322770076*^9, 
  3.567402089455397*^9, 3.567402356848041*^9, 3.567565635790668*^9, 
  3.567775569293272*^9, 3.567778394228172*^9, 3.567958545808055*^9, 
  3.567959880247644*^9, 3.568089078369161*^9, 3.568100046851117*^9, 
  3.568616747615818*^9, 3.57027405275889*^9, 3.570274435741024*^9},
 CellID->852778827]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"2", ",", "3", ",", "1"}], "\[RightAngleBracket]"}], 
  RowBox[{
  "Theorema`Language`VAR$", "[", "Theorema`Knowledge`x$TM", 
   "]"}]]], "Computation",
 CellChangeTimes->{{3.567400500103296*^9, 3.567400505271036*^9}, {
  3.57027450572874*^9, 3.570274516550678*^9}},
 CellID->1559062918],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.570274518696351*^9},
 CellID->1155072778],

Cell[BoxData[
 FormBox[
  SubscriptBox[
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"2", ",", "3", ",", "1"}], "\[RightAngleBracket]"}], 
   StyleBox["x", "ExpressionVariable"]], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.570274518771377*^9},
 CellID->235179120]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"2", ",", "3", ",", 
    RowBox[{"Theorema`Language`VAR$", "[", "Theorema`Knowledge`x$TM", "]"}], 
    ",", "1"}], "\[RightAngleBracket]"}], 
  RowBox[{
  "\[LeftAngleBracket]", "3", "\[RightAngleBracket]"}]]], "Computation",
 CellChangeTimes->{{3.56795855970798*^9, 3.567958574478875*^9}, {
  3.56801592294142*^9, 3.568015924002708*^9}},
 CellID->886730863],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.570274446117608*^9},
 CellID->450976688],

Cell[BoxData[
 FormBox[
  StyleBox["x", "ExpressionVariable"], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567958576909854*^9, 3.568015925852092*^9, 
  3.568089084733223*^9, 3.568100049435747*^9, 3.568616750337855*^9, 
  3.570274062381906*^9, 3.570274446124715*^9},
 CellID->1499089661]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "x", ",", "y", ",", "5"}], "\[RightAngleBracket]"}], 
    ",", "3", ",", "1"}], "\[RightAngleBracket]"}], 
  RowBox[{"1", ",", "3"}]]], "Computation",
 CellChangeTimes->{{3.567959441294218*^9, 3.567959479230525*^9}, {
  3.570274115454622*^9, 3.570274117797196*^9}},
 CellID->1751931602],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.570274450464035*^9},
 CellID->341944096],

Cell[BoxData[
 FormBox["y", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567959448320058*^9, 3.567959481034494*^9, 
  3.568000767721342*^9, 3.568089089812869*^9, 3.568616752967886*^9, 
  3.570274119406325*^9, 3.570274450470431*^9},
 CellID->387161218]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "x", ",", "x", ",", "5"}], "\[RightAngleBracket]"}], 
    ",", "3", ",", "1"}], "\[RightAngleBracket]"}], 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"1", ",", "3"}], "\[RightAngleBracket]"}], ",", 
   RowBox[{
   "\[LeftAngleBracket]", "2", "\[RightAngleBracket]"}]}]]], "Computation",
 CellChangeTimes->{{3.567959498863064*^9, 3.567959521631973*^9}, {
  3.567959557805463*^9, 3.567959563532527*^9}, {3.567960319514318*^9, 
  3.567960326057612*^9}, {3.570274134791088*^9, 3.5702741381491*^9}},
 CellID->480180174],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.57027445548649*^9},
 CellID->712612482],

Cell[BoxData[
 FormBox[
  SubscriptBox[
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"2", ",", "x", ",", "x", ",", "5"}], "\[RightAngleBracket]"}], 
     ",", "3", ",", "1"}], "\[RightAngleBracket]"}], 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "3"}], "\[RightAngleBracket]"}], ",", 
    RowBox[{"\[LeftAngleBracket]", "2", "\[RightAngleBracket]"}]}]], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.567959523247699*^9, {3.567959559596773*^9, 3.567959566341504*^9}, 
   3.567959884502428*^9, {3.567960321505867*^9, 3.567960327904019*^9}, 
   3.568089095223811*^9, 3.568102068903315*^9, 3.56834785462093*^9, 
   3.568616756145471*^9, {3.570274128107215*^9, 3.570274143938128*^9}, 
   3.570274455494569*^9},
 CellID->47495183]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "x", ",", "x", ",", "5"}], "\[RightAngleBracket]"}], 
    ",", "3", ",", "1"}], "\[RightAngleBracket]"}], 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "3"}], "\[RightAngleBracket]"}], ",", 
    RowBox[{"\[LeftAngleBracket]", "2", "\[RightAngleBracket]"}]}], 
   "\[RightAngleBracket]"}]]], "Computation",
 CellChangeTimes->{{3.567959498863064*^9, 3.567959521631973*^9}, {
  3.567959557805463*^9, 3.567959563532527*^9}, {3.567960319514318*^9, 
  3.567960326057612*^9}, {3.570274134791088*^9, 3.5702741381491*^9}, {
  3.57027446307821*^9, 3.570274471873272*^9}},
 CellID->572717136],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.570274473118864*^9},
 CellID->885828326],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"x", ",", "3"}], "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.570274473124876*^9},
 CellID->1718573906]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"(", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "\[RightAngleBracket]"}], 
    "\[CupCap]", " ", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{
      RowBox[{
       RowBox[{"3", "*", "x", "*", "x"}], "+", "1"}], 
      UnderscriptBox["|", 
       RowBox[{
        RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "5"}]]}], 
     "\[RightAngleBracket]"}]}], ")"}], "2"]], "Computation",
 CellChangeTimes->{
  3.567399944687569*^9, {3.56740004452978*^9, 3.567400053422509*^9}, {
   3.567400100024654*^9, 3.567400103570863*^9}},
 CellID->721507726],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.570274494548748*^9},
 CellID->1798397824],

Cell[BoxData[
 FormBox["3", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567400058052168*^9, 3.567400107730108*^9, 
  3.567401326413826*^9, 3.567402092073295*^9, 3.567402361123411*^9, 
  3.567565642566997*^9, 3.567958619345087*^9, 3.568089102400591*^9, 
  3.568103172424757*^9, 3.568616759264734*^9, 3.570274494556231*^9},
 CellID->1098555340]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"(", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "\[RightAngleBracket]"}], 
    "\[Cap]", " ", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{
      RowBox[{
       RowBox[{"3", "*", "x", "*", "x"}], "+", "1"}], 
      UnderscriptBox["|", 
       RowBox[{
        RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "5"}]]}], 
     "\[RightAngleBracket]"}]}], ")"}], "1"]], "Computation",
 CellChangeTimes->{{3.567400169443183*^9, 3.567400193178594*^9}},
 CellID->1233019245],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616761792095*^9},
 CellID->729959087],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.56740019685091*^9, 3.567401329903259*^9, 
  3.567402095739759*^9, 3.567402365870751*^9, 3.567565645436868*^9, 
  3.567958623269406*^9, 3.567959893743879*^9, 3.568089105959889*^9, 
  3.568616761827852*^9},
 CellID->2035933856]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"(", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "3", ",", "4", ",", 
      RowBox[{"5", 
       SubscriptBox[
        RowBox[{"\[LeftAngleBracket]", 
         RowBox[{"1", ",", 
          RowBox[{"\[LeftAngleBracket]", 
           RowBox[{"2", ",", "26"}], "\[RightAngleBracket]"}], ",", "3"}], 
         "\[RightAngleBracket]"}], 
        RowBox[{"5", " ", "\[Rule]", " ", 
         RowBox[{"\[LeftAngleBracket]", 
          RowBox[{
           RowBox[{"\[LeftAngleBracket]", "1", "\[RightAngleBracket]"}], ",", 
           
           RowBox[{"\[LeftAngleBracket]", 
            RowBox[{"2", ",", "1"}], "\[RightAngleBracket]"}], ",", 
           RowBox[{"\[LeftAngleBracket]", "3", "\[RightAngleBracket]"}]}], 
          "\[RightAngleBracket]"}], " "}]]}]}], "\[RightAngleBracket]"}], 
    "\[Cap]", " ", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{
      RowBox[{
       RowBox[{"3", "*", "x", "*", "x"}], "+", "1"}], 
      UnderscriptBox["|", 
       RowBox[{
        RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "5"}]]}], 
     "\[RightAngleBracket]"}]}], ")"}], 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "3"}], "\[RightAngleBracket]"}]]], "Computation",
 CellChangeTimes->{{3.567400169443183*^9, 3.567400193178594*^9}, {
   3.567958749048538*^9, 3.56795880369298*^9}, 3.568353652776602*^9},
 CellID->1377556300],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616764245673*^9},
 CellID->72370074],

Cell[BoxData[
 FormBox["4", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.56740019685091*^9, 3.567401329903259*^9, 
  3.567402095739759*^9, 3.567402365870751*^9, 3.567565645436868*^9, 
  3.567958623269406*^9, 3.567958764401089*^9, 3.567959903862682*^9, 
  3.568089109475026*^9, 3.568100053379714*^9, 3.568347856954485*^9, 
  3.568616764266827*^9},
 CellID->1124920885]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "2", ",", "y"}], "\[RightAngleBracket]"}], 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", "1", "\[RightAngleBracket]"}], ",", 
    RowBox[{"\[LeftAngleBracket]", "3", "\[RightAngleBracket]"}]}], 
   "\[RightAngleBracket]"}]]], "Computation",
 CellChangeTimes->{{3.56739986173423*^9, 3.567399866928676*^9}, {
   3.5674013984738*^9, 3.567401401392271*^9}, {3.567402374954169*^9, 
   3.5674023772386*^9}, {3.567958676722401*^9, 3.5679586960444*^9}, 
   3.568089253998946*^9},
 CellID->1604300385],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616768549252*^9},
 CellID->1542549904],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "y"}], "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567958698814331*^9, 3.567959869409936*^9, 
  3.5680891132115*^9, 3.568089255875447*^9, 3.568100057096016*^9, 
  3.56861676857504*^9},
 CellID->2085293554]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{
     RowBox[{"3", "*", "x", "*", "x"}], "+", "1"}], 
    UnderscriptBox["|", 
     RowBox[{
      RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "5"}]]}], 
   "\[RightAngleBracket]"}], "4"]], "Computation",
 CellChangeTimes->{
  3.564975193554632*^9, {3.567399879668721*^9, 3.567399899269905*^9}},
 CellID->151565377],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.56861677706944*^9},
 CellID->1058658188],

Cell[BoxData[
 FormBox["49", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.564975195136729*^9, 3.567399901052824*^9, 
  3.567401364647063*^9, 3.567565382501621*^9, 3.567915097539215*^9, 
  3.568089122663454*^9, 3.568616777101691*^9},
 CellID->1020722699]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Length", "Subtitle",
 CellChangeTimes->{{3.56497519923733*^9, 3.564975200322735*^9}, 
   3.564975438698306*^9},
 CellID->238059636],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[LeftBracketingBar]", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], 
   "\[RightBracketingBar]"}], " "}]], "Computation",
 CellChangeTimes->{{3.564975223402088*^9, 3.564975229906277*^9}, 
   3.564977598158729*^9, {3.564991335819284*^9, 3.564991340998766*^9}},
 CellID->1319613944],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616780085174*^9},
 CellID->809206531],

Cell[BoxData[
 FormBox["3", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567565354082163*^9, 3.567594864567336*^9, 
  3.568089133948453*^9, 3.568100061474884*^9, 3.568103182735331*^9, 
  3.5686167801246*^9},
 CellID->1678731012]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[LeftBracketingBar]", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{"Theorema`Language`VAR$", "[", "Theorema`Knowledge`x$TM", "]"}], 
    ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"5", ",", "4"}], "\[RightAngleBracket]"}], ",", "3"}], 
   "\[RightAngleBracket]"}], "\[RightBracketingBar]"}]], "Computation",
 CellChangeTimes->{
  3.564975257543397*^9, 3.567398694755198*^9, {3.567398757475192*^9, 
   3.567398766570663*^9}, {3.56801594378499*^9, 3.568015945063925*^9}},
 CellID->943236752],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616782471724*^9},
 CellID->1837762820],

Cell[BoxData[
 FormBox["4", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.564975259116615*^9, 3.567398698002702*^9, 
  3.567398776020367*^9, 3.567478268299821*^9, 3.567565356835938*^9, 
  3.567594867972826*^9, 3.568000776083213*^9, 3.568015947587566*^9, 
  3.568089136463196*^9, 3.568347863125589*^9, 3.568616782506758*^9},
 CellID->1769517423]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[LeftBracketingBar]", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"x", ",", "4"}], "\[RightAngleBracket]"}], ",", "w"}], 
   "\[RightAngleBracket]"}], "\[RightBracketingBar]"}]], "Computation",
 CellChangeTimes->{{3.567594897687518*^9, 3.567594902505149*^9}},
 CellID->197031148],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616784673909*^9},
 CellID->1928120705],

Cell[BoxData[
 FormBox["3", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567594905340718*^9, 3.568089140964631*^9, 
  3.568100063913595*^9, 3.568616784694955*^9},
 CellID->359011883]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[LeftBracketingBar]", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{
     RowBox[{"3", "*", "x", "*", "x"}], "+", "1"}], 
    UnderscriptBox["|", 
     RowBox[{
      RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "5"}]]}], 
   "\[RightAngleBracket]"}], "\[RightBracketingBar]"}]], "Computation",
 CellChangeTimes->{{3.567398735951139*^9, 3.567398768535541*^9}, 
   3.568353794134274*^9, 3.568615797247148*^9},
 CellID->1540361145],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616791793562*^9},
 CellID->517099160],

Cell[BoxData[
 FormBox["5", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.567398737574136*^9, 3.567398772151143*^9}, 
   3.567478272265427*^9, 3.567565364680094*^9, 3.567594874921624*^9, 
   3.568089152583332*^9, 3.568102076136001*^9, 3.568616791821414*^9},
 CellID->1798508048]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[LeftBracketingBar]", 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "\[RightAngleBracket]"}], 
   "\[Cap]", " ", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{
     RowBox[{
      RowBox[{"3", "*", "x", "*", "x"}], "+", "1"}], 
     UnderscriptBox["|", 
      RowBox[{
       RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "5"}]]}], 
    "\[RightAngleBracket]"}]}], "\[RightBracketingBar]"}]], "Computation",
 CellChangeTimes->{{3.567399185331777*^9, 3.567399195018759*^9}},
 CellID->1180063923],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.56861679395238*^9},
 CellID->1376290930],

Cell[BoxData[
 FormBox["6", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567399196497935*^9, 3.567478274798728*^9, 
  3.567565367929729*^9, 3.567594878364714*^9, 3.568089156622148*^9, 
  3.568100067144528*^9, 3.568616793976873*^9},
 CellID->1912928873]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[LeftBracketingBar]", 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "\[RightAngleBracket]"}], 
   "\[CupCap]", " ", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{
     RowBox[{
      RowBox[{"3", "*", "x", "*", "x"}], "+", "1"}], 
     UnderscriptBox["|", 
      RowBox[{
       RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "5"}]]}], 
    "\[RightAngleBracket]"}]}], "\[RightBracketingBar]"}]], "Computation",
 CellChangeTimes->{{3.56739920721971*^9, 3.567399220775037*^9}},
 CellID->936660631],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616796125643*^9},
 CellID->1410943218],

Cell[BoxData[
 FormBox["9", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568616796182565*^9},
 CellID->1572917786]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Is element, max, min,", "Subtitle",
 CellChangeTimes->{{3.564975277639073*^9, 3.564975284540947*^9}, 
   3.564975447546454*^9},
 CellID->911336648],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Theorema`Language`VAR$", "[", "Theorema`Knowledge`x$TM", "]"}], 
  "\[Element]", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{"Theorema`Language`VAR$", "[", "Theorema`Knowledge`x$TM", "]"}], 
    ",", "2", ",", "3"}], "\[RightAngleBracket]"}]}]], "Computation",
 CellChangeTimes->{
  3.564975293773859*^9, 3.567327039167237*^9, {3.56801595565562*^9, 
   3.568015964366164*^9}},
 CellID->427697581],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616805852412*^9},
 CellID->903303750],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.56497529556392*^9, 3.567327099311461*^9, 3.567327571683907*^9, 
   3.567327705256939*^9, {3.56739803596536*^9, 3.567398042323084*^9}, 
   3.567478198669676*^9, 3.567565333690781*^9, 3.567593329145197*^9, 
   3.567593794621024*^9, 3.567594154060589*^9, 3.567594664121488*^9, 
   3.567594708429251*^9, 3.567596244815762*^9, 3.568000781377498*^9, {
   3.568015959892819*^9, 3.568015966783708*^9}, 3.568017113618957*^9, 
   3.568089332941807*^9, 3.568100074805962*^9, 3.568616805884626*^9},
 CellID->339948297]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "\[Element]", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "2", ",", "3"}], 
   "\[RightAngleBracket]"}]}]], "Computation",
 CellChangeTimes->{{3.568017066805583*^9, 3.568017075208762*^9}},
 CellID->1267421298],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616808764071*^9},
 CellID->1771542319],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568017117741355*^9, 3.568089335802201*^9, 
  3.56810007184266*^9, 3.568102082726983*^9, 3.568103225286577*^9, 
  3.568616808784574*^9},
 CellID->684139118]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "\[Element]", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"x", ",", "y"}], "\[RightAngleBracket]"}]}]], "Computation",
 CellChangeTimes->{{3.567398845346624*^9, 3.567398855964855*^9}},
 CellID->286713122],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616810940329*^9},
 CellID->673293329],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.567398858227237*^9, 3.567478203044808*^9, 3.567565329094225*^9, {
   3.567593339848021*^9, 3.567593347070896*^9}, 3.567593805108295*^9, 
   3.567594160951287*^9, 3.5675946719631*^9, 3.567594731752032*^9, 
   3.567596254935456*^9, 3.568017121988625*^9, 3.568089338239895*^9, 
   3.56810008101121*^9, 3.568102080236914*^9, 3.568347866819837*^9, 
   3.568616810966219*^9},
 CellID->1283597669]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"3", "\[Element]", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"5", ",", "4"}], "\[RightAngleBracket]"}], ",", "3"}], 
   "\[RightAngleBracket]"}]}]], "Computation",
 CellChangeTimes->{{3.567398530189879*^9, 3.567398549355884*^9}},
 CellID->1585950468],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616813021847*^9},
 CellID->932348632],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567595952386157*^9, 3.567596262561531*^9, 
  3.568089340994655*^9, 3.56861681306706*^9},
 CellID->988359452]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"5", "\[Element]", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"5", ",", "4"}], "\[RightAngleBracket]"}], ",", "3"}], 
   "\[RightAngleBracket]"}]}]], "Computation",
 CellChangeTimes->{{3.567398572812009*^9, 3.567398575699339*^9}},
 CellID->422224563],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616815706459*^9},
 CellID->1672750071],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567398578466252*^9, 3.567478208320088*^9, 
  3.567565320146165*^9, 3.567593363494106*^9, 3.567593814498151*^9, 
  3.567595955676336*^9, 3.567596270463797*^9, 3.568089343705873*^9, 
  3.56861681573719*^9},
 CellID->779143346]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[LeftAngleBracket]", "5", "\[RightAngleBracket]"}], "\[Element]", 
  
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"5", ",", "4"}], "\[RightAngleBracket]"}], ",", "3"}], 
   "\[RightAngleBracket]"}]}]], "Computation",
 CellChangeTimes->{{3.567398596682054*^9, 3.56739860606276*^9}},
 CellID->1673589215],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616818449843*^9},
 CellID->1760313590],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568616818527121*^9},
 CellID->1105427749]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"5", ",", "4"}], "\[RightAngleBracket]"}], "\[Element]", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"5", ",", "4"}], "\[RightAngleBracket]"}], ",", "3"}], 
   "\[RightAngleBracket]"}]}]], "Computation",
 CellChangeTimes->{{3.56739861917604*^9, 3.567398622347217*^9}, {
  3.5675959772098*^9, 3.567595987992525*^9}},
 CellID->1205046247],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616825252609*^9},
 CellID->1268626413],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567596285646122*^9, 3.568089350460418*^9, 
  3.568347870911572*^9, 3.568616825280043*^9},
 CellID->860259734]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"4", "\[Element]", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{"Theorema`Language`VAR$", "[", "Theorema`Knowledge`x$TM", "]"}], 
    ",", "1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}]}]], "Computation",\

 CellChangeTimes->{
  3.564975304336357*^9, 3.567327041267463*^9, 3.567596074098839*^9, {
   3.56801297827105*^9, 3.568012980824764*^9}},
 CellID->993869015],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616827660412*^9},
 CellID->582594537],

Cell[BoxData[
 FormBox[
  RowBox[{"4", "\[Element]", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{
     StyleBox["x", "ExpressionVariable"], ",", "1", ",", "2", ",", "3"}], 
    "\[RightAngleBracket]"}]}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568015984903266*^9, 3.568089353943211*^9, 
  3.568100088176468*^9, 3.568102087133009*^9, 3.568347873026665*^9, 
  3.568616827682113*^9},
 CellID->660634802]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"4", "\[Element]", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "2", ",", "3"}], 
   "\[RightAngleBracket]"}]}]], "Computation",
 CellChangeTimes->{{3.568012990646415*^9, 3.568012995252139*^9}},
 CellID->2102862363],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616831153118*^9},
 CellID->1180049356],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.56801300014423*^9, 3.568089371752965*^9, 
  3.568100090905197*^9, 3.568616831191579*^9},
 CellID->256464698]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "\[Element]", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "x", ",", "3"}], 
   "\[RightAngleBracket]"}]}]], "Computation",
 CellChangeTimes->{{3.568089406277446*^9, 3.568089417295186*^9}},
 CellID->719354187],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616833978774*^9},
 CellID->224506487],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.568089411381199*^9, 3.568089418622531*^9}, 
   3.568616834013625*^9},
 CellID->642615148]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"46", "\[Element]", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{
     RowBox[{"3", "*", "x", "*", "x"}], "+", "1"}], 
    UnderscriptBox[":", 
     RowBox[{
      RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "5"}]]}], 
   "\[RightAngleBracket]"}]}]], "Computation",
 CellChangeTimes->{
  3.564975315147389*^9, 3.567327042917127*^9, 3.567327141284851*^9, {
   3.567478222022962*^9, 3.567478225320052*^9}},
 CellID->74790411],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616836580336*^9},
 CellID->1081997385],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567327106697845*^9, 3.567327144155191*^9, 
  3.567327719660426*^9, 3.567478226914434*^9, 3.567565300064437*^9, 
  3.567593420799212*^9, 3.567593828059034*^9, 3.568089374879728*^9, 
  3.568100094732045*^9, 3.568616836604227*^9},
 CellID->735618482]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"46", "\[Element]", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", "*", "x"}], "+", "y"}], ")"}], 
    UnderscriptBox[":", 
     RowBox[{
      RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "5"}]]}], 
   "\[RightAngleBracket]"}]}]], "Computation",
 CellChangeTimes->{{3.567327784693212*^9, 3.567327799922127*^9}, 
   3.567335321197561*^9, {3.567398103029001*^9, 3.567398113317112*^9}, {
   3.568616853478038*^9, 3.568616854778606*^9}},
 CellID->177601723],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616856734065*^9},
 CellID->1624617448],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.567327804819968*^9, 3.567335323481824*^9, 3.5674782306837*^9, 
   3.567565297216939*^9, 3.567593426317152*^9, 3.567593831787101*^9, 
   3.567594785990524*^9, 3.567595804250694*^9, 3.568089378635629*^9, {
   3.568616839864495*^9, 3.568616856772113*^9}},
 CellID->855455492]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"9", "\[Element]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "\[RightAngleBracket]"}], 
    "\[CupCap]", " ", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{
      RowBox[{
       RowBox[{"3", "*", "x", "*", "x"}], "+", "1"}], 
      UnderscriptBox["|", 
       RowBox[{
        RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "5"}]]}], 
     "\[RightAngleBracket]"}]}], ")"}]}]], "Computation",
 CellChangeTimes->{{3.568483203081996*^9, 3.568483214877334*^9}, {
  3.568516874850191*^9, 3.568516878084564*^9}},
 CellID->1136383058],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616859230907*^9},
 CellID->1572323884],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.568532464778486*^9, 3.568532484426293*^9}, 
   3.568613117709235*^9, 3.568616859264232*^9},
 CellID->743670183]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"16", "+", "y"}], "\[Element]", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{"y", "+", 
     RowBox[{"3", "*", "x"}], "+", "1"}], 
    UnderscriptBox[":", 
     RowBox[{
      RowBox[{"x", "=", "4"}], ",", "\[Ellipsis]", ",", "8"}]], 
    RowBox[{"x", ">", "4"}]}], "\[RightAngleBracket]"}]}]], "Computation",
 CellChangeTimes->{{3.568483296423412*^9, 3.568483353558795*^9}, {
  3.568483531298319*^9, 3.5684835829134*^9}},
 CellID->738851421],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616861348478*^9},
 CellID->2017642075],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568613119844436*^9, 3.568616861367642*^9},
 CellID->2114372135]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"13", "\[Element]", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{
     RowBox[{"3", "*", "x"}], "+", "1"}], 
    UnderscriptBox[":", 
     RowBox[{
      RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "5"}]]}], 
   "\[RightAngleBracket]"}]}]], "Computation",
 CellChangeTimes->{{3.567328158976904*^9, 3.567328181482522*^9}, 
   3.567335329898444*^9},
 CellID->592100458],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616863890512*^9},
 CellID->884123327],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567328184339321*^9, 3.567335331509006*^9, 
  3.567478235943525*^9, 3.567565293785993*^9, 3.567593431883167*^9, 
  3.567593835494036*^9, 3.56759477874174*^9, 3.567595809227358*^9, 
  3.568089384238781*^9, 3.568616863919209*^9},
 CellID->1755404140]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "\[Element]", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{
     RowBox[{"3", "*", "x"}], "+", "1"}], 
    UnderscriptBox[":", 
     RowBox[{
      RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "5"}]]}], 
   "\[RightAngleBracket]"}]}]], "Computation",
 CellChangeTimes->{{3.56732820514098*^9, 3.567328233058283*^9}, {
  3.567335356371819*^9, 3.567335356768153*^9}, {3.567398067147743*^9, 
  3.567398073305443*^9}},
 CellID->187030324],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616866004767*^9},
 CellID->549483024],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.567328208301207*^9, 3.567328227950532*^9}, 
   3.567335359952804*^9, 3.567398075683954*^9, 3.567478242220821*^9, 
   3.56756529100014*^9, 3.567593436285099*^9, 3.567593839199535*^9, 
   3.568089387296763*^9, 3.568616866029572*^9},
 CellID->1544758130]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"max", "[", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], 
  "]"}]], "Computation",
 CellChangeTimes->{
  3.564975325090042*^9, {3.564998626535322*^9, 3.564998626938194*^9}},
 CellID->89852945],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616868131083*^9},
 CellID->2138117033],

Cell[BoxData[
 FormBox["3", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.564975326494952*^9, 3.564998634011895*^9, 
  3.564998851061605*^9, 3.56499892547512*^9, 3.564999017748084*^9, 
  3.567775877298212*^9, 3.567776030005524*^9, 3.568089463456378*^9, 
  3.568100102517565*^9, 3.568100668281035*^9, 3.568100764657259*^9, 
  3.568102093459448*^9, 3.568616868151211*^9},
 CellID->234993665]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"max", "[", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{
     RowBox[{"3", "*", "x", "*", "x"}], "+", "1"}], 
    UnderscriptBox[":", 
     RowBox[{
      RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "5"}]]}], 
   "\[RightAngleBracket]"}], "]"}]], "Computation",
 CellChangeTimes->{{3.567776585437935*^9, 3.567776594725302*^9}, 
   3.568353795947095*^9, 3.568614288623812*^9},
 CellID->674039753],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616870419037*^9},
 CellID->577323838],

Cell[BoxData[
 FormBox["76", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567776599522996*^9, 3.568089466035527*^9, 
  3.568100105217597*^9, 3.568100675261476*^9, 3.568100767408967*^9, 
  3.568347878112167*^9, 3.568616870428784*^9},
 CellID->247098083]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"max", "[", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"5", ",", "1", ",", 
    RowBox[{"Theorema`Language`VAR$", "[", "Theorema`Knowledge`x$TM", "]"}], 
    ",", "3", ",", "3"}], "\[RightAngleBracket]"}], "]"}]], "Computation",
 CellChangeTimes->{{3.568100822619321*^9, 3.568100825903136*^9}, {
  3.568614292387241*^9, 3.568614297968461*^9}},
 CellID->1383310812],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616873273282*^9},
 CellID->1505144884],

Cell[BoxData[
 FormBox[
  RowBox[{"max", "[", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"5", ",", "1", ",", 
     StyleBox["x", "ExpressionVariable"], ",", "3", ",", "3"}], 
    "\[RightAngleBracket]"}], "]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568100827692901*^9, 3.568102096422675*^9, 
  3.568347880798733*^9, 3.568616873305525*^9},
 CellID->801830326]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"max", "[", 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "\[RightAngleBracket]"}], 
   "\[CupCap]", " ", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{
     RowBox[{
      RowBox[{"3", "*", "x", "*", "x"}], "+", "1"}], 
     UnderscriptBox["|", 
      RowBox[{
       RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "5"}]]}], 
    "\[RightAngleBracket]"}]}], "]"}]], "Computation",
 CellChangeTimes->{{3.567776686864135*^9, 3.567776695669375*^9}},
 CellID->1361488053],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616875779782*^9},
 CellID->889713231],

Cell[BoxData[
 FormBox["76", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567776698030973*^9, 3.568089468756365*^9, 
  3.568100107885737*^9, 3.568100771568643*^9, 3.568616875806896*^9},
 CellID->1331558843]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"max", "[", 
  RowBox[{
   SubscriptBox[
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], 
    RowBox[{"24", " ", "\[Rule]", " ", "2", " "}]], "\[Cup]", " ", 
   SubscriptBox[
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], ",", 
      "3"}], "\[RightAngleBracket]"}], 
    RowBox[{
     RowBox[{"\[LeftAngleBracket]", "2", "\[RightAngleBracket]"}], 
     "\[LeftArrow]"}]]}], "]"}]], "Computation",
 CellChangeTimes->{{3.568486287717181*^9, 3.568486293152721*^9}},
 CellID->1131211602],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616878180761*^9},
 CellID->1731679621],

Cell[BoxData[
 FormBox["24", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568613138693729*^9, 3.568616878201396*^9},
 CellID->1240500309]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"max", "[", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "y", ",", "1", ",", "3"}], "\[RightAngleBracket]"}], 
  "]"}]], "Computation",
 CellChangeTimes->{{3.568616954561445*^9, 3.56861695965838*^9}},
 CellID->767784497],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616961622375*^9},
 CellID->1705875408],

Cell[BoxData[
 FormBox[
  RowBox[{"max", "[", 
   RowBox[{"3", ",", "y"}], "]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568616961714108*^9},
 CellID->2022978915]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"min", "[", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "2", ",", "1", ",", "3"}], "\[RightAngleBracket]"}], 
  "]"}]], "Computation",
 CellChangeTimes->{
  3.564975344968426*^9, 3.567417628666533*^9, {3.568090062867897*^9, 
   3.568090063292929*^9}},
 CellID->544396467],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616880448994*^9},
 CellID->266072581],

Cell[BoxData[
 FormBox["1", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.564975346212128*^9, 3.567776310953597*^9, 
  3.568089479351879*^9, 3.568089878002984*^9, 3.568090064754279*^9, 
  3.568100119118387*^9, 3.568100263895443*^9, 3.568100497002111*^9, 
  3.568100682050616*^9, 3.568100780698199*^9, 3.568102101714073*^9, 
  3.56861688046509*^9},
 CellID->319814456]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"min", "[", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"5", ",", "1", ",", 
    RowBox[{"Theorema`Language`VAR$", "[", "Theorema`Knowledge`x$TM", "]"}], 
    ",", "3", ",", "3"}], "\[RightAngleBracket]"}], "]"}]], "Computation",
 CellChangeTimes->{{3.568090033637091*^9, 3.568090071231174*^9}, 
   3.568090143834605*^9, {3.568614307095588*^9, 3.56861431036272*^9}},
 CellID->1993660762],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.56861688304446*^9},
 CellID->616373060],

Cell[BoxData[
 FormBox[
  RowBox[{"min", "[", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"5", ",", "1", ",", 
     StyleBox["x", "ExpressionVariable"], ",", "3", ",", "3"}], 
    "\[RightAngleBracket]"}], "]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.568090058643148*^9, 3.568090072920884*^9}, 
   3.568090146238206*^9, 3.568090212904744*^9, 3.568100122989632*^9, 
   3.568100268188492*^9, 3.568100506646323*^9, 3.568100784205567*^9, 
   3.568102105381515*^9, 3.568616883085697*^9},
 CellID->292963897]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"min", "[", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{"Theorema`Language`VAR$", "[", "Theorema`Knowledge`x$TM", "]"}], 
    ",", "3"}], "\[RightAngleBracket]"}], "]"}]], "Computation",
 CellChangeTimes->{{3.5680895490862*^9, 3.56808957106928*^9}, {
  3.568090169134507*^9, 3.568090177418111*^9}, {3.568090811320545*^9, 
  3.56809082640558*^9}},
 CellID->457288880],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616885209424*^9},
 CellID->1634378575],

Cell[BoxData[
 FormBox[
  RowBox[{"min", "[", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"1", ",", 
     StyleBox["x", "ExpressionVariable"], ",", "3"}], 
    "\[RightAngleBracket]"}], "]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568616885274667*^9},
 CellID->1260872225]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"min", "[", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{"1", ",", "x", ",", "2"}], "\[RightAngleBracket]"}], 
  "]"}]], "Computation",
 CellChangeTimes->{{3.568089501111895*^9, 3.568089507684095*^9}, {
  3.56809078527089*^9, 3.568090787555369*^9}},
 CellID->722708850],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616893547077*^9},
 CellID->1463826031],

Cell[BoxData[
 FormBox[
  RowBox[{"min", "[", 
   RowBox[{"1", ",", "x"}], "]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.568089510599675*^9, 3.568089899248693*^9, {3.568090777323576*^9, 
   3.568090789788385*^9}, 3.568100289318386*^9, 3.568100792443219*^9, 
   3.568616893571872*^9},
 CellID->239630085]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"min", "[", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{
     RowBox[{"3", "*", "x", "*", "x"}], "+", "1"}], 
    UnderscriptBox[":", 
     RowBox[{
      RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "5"}]]}], 
   "\[RightAngleBracket]"}], "]"}]], "Computation",
 CellChangeTimes->{{3.567776649508362*^9, 3.567776655621177*^9}},
 CellID->1297805322],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616899438257*^9},
 CellID->1487353949],

Cell[BoxData[
 FormBox["4", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567776657815808*^9, 3.568089481778165*^9, 
  3.56808988177312*^9, 3.568090752123752*^9, 3.568100292084337*^9, 
  3.568100797532637*^9, 3.568616899482518*^9},
 CellID->1497683316]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"min", "[", 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "\[RightAngleBracket]"}], 
   "\[CupCap]", " ", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{
     RowBox[{
      RowBox[{"3", "*", "x", "*", "x"}], "+", "1"}], 
     UnderscriptBox["|", 
      RowBox[{
       RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "5"}]]}], 
    "\[RightAngleBracket]"}]}], "]"}]], "Computation",
 CellChangeTimes->{{3.567776707271473*^9, 3.567776716311034*^9}},
 CellID->1769218548],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616902022585*^9},
 CellID->786936030],

Cell[BoxData[
 FormBox["2", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567776717923863*^9, 3.568089485868824*^9, 
  3.568089884712656*^9, 3.568100800260184*^9, 3.56861690204707*^9},
 CellID->408114411]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"min", "[", 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "\[RightAngleBracket]"}], 
   "\[CupCap]", " ", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{
     RowBox[{
      RowBox[{"3", "*", "x"}], "+", "1"}], 
     UnderscriptBox["|", 
      RowBox[{
       RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "5"}]]}], 
    "\[RightAngleBracket]"}]}], "]"}]], "Computation",
 CellChangeTimes->{{3.568483766118726*^9, 3.568483776108029*^9}},
 CellID->119552512],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568616904140705*^9},
 CellID->1205593905],

Cell[BoxData[
 FormBox["2", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568613140660822*^9, 3.568616904159555*^9},
 CellID->843168593]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{898, 908},
WindowMargins->{{203, Automatic}, {Automatic, 23}},
ShowSelection->True,
FrontEndVersion->"8.0 for Linux x86 (32-bit) (February 23, 2011)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Theorema"}, "TheoremaCore.nb"]]], 
   
   Cell["Modify the definitions below to change the default appearance of all \
cells in a given style. \nMake modifications to any definition using commands \
in the Format menu.", "Text"], 
   Cell[
    CellGroupData[{
      Cell["Notebook Options Settings", "Section"], 
      Cell[
      "The options defined for the style below will be used at the Notebook \
level.", "Text"], 
      Cell[
       StyleData["Notebook"], Background -> RGBColor[0.957, 0.96, 0.97]]}, 
     Open]], 
   Cell[
    CellGroupData[{
      Cell["Style Environment Names", "Section"], 
      Cell[
       StyleData[All, "Working"], DockedCells -> {
         Cell[
         "T h e o r e m a   2", "SBO", CellMargins -> {{0, 0}, {0, 0}}, 
          CellFrameMargins -> {{0, 50}, {0, 0}}, FontSize -> 28, FontSlant -> 
          "Plain", FontColor -> RGBColor[0.29, 0.46, 0.6], TextAlignment -> 
          Right, Background -> RGBColor[0.36, 0.54, 0.69]]}], 
      Cell[
       StyleData[All, "Presentation"], DockedCells -> {
         Cell[
         "T h e o r e m a . 2", "SBO", CellMargins -> {{0, 0}, {0, 0}}, 
          CellFrameMargins -> {{0, 50}, {0, 0}}, FontSize -> 28, FontSlant -> 
          "Plain", FontColor -> RGBColor[0.289412, 0.458824, 0.6], 
          TextAlignment -> Right, Background -> 
          RGBColor[0.364705882, 0.541176471, 0.694117647]]}, ShowGroupOpener -> 
       True], 
      Cell[
       StyleData[
       All, "SlideShow", StyleDefinitions -> StyleData[All, "Presentation"]], 
       PageWidth -> WindowWidth, DockedCells -> {
         FEPrivate`FrontEndResource["FEExpressions", "SlideshowToolbar"], 
         Cell[
         "T h e o r e m a . 2", "SBO", CellMargins -> {{0, 0}, {0, 0}}, 
          CellFrameMargins -> {{0, 50}, {0, 0}}, FontSize -> 28, FontSlant -> 
          "Plain", FontColor -> RGBColor[0.289412, 0.458824, 0.6], 
          TextAlignment -> Right, Background -> 
          RGBColor[0.364705882, 0.541176471, 0.694117647]]}, 
       ScrollingOptions -> {
        "PagewiseDisplay" -> True, "VerticalScrollRange" -> Fit}, 
       MenuSortingValue -> 1300], 
      Cell[
       StyleData[All, "Printout"], DockedCells -> {
         Cell[
         "T h e o r e m a . 2", "SBO", CellMargins -> {{0, 0}, {0, 0}}, 
          CellFrameMargins -> {{0, 50}, {0, 0}}, FontSize -> 28, FontSlant -> 
          "Plain", FontColor -> RGBColor[0.289412, 0.458824, 0.6], 
          TextAlignment -> Right, Background -> 
          RGBColor[0.364705882, 0.541176471, 0.694117647]]}]}, Open]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Title and Section Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell["Title", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], CellMargins -> {{27, Inherited}, {0, 30}}, 
             MenuSortingValue -> 1100, MenuCommandKey -> "1", FontColor -> 
             RGBColor[0.23, 0.25, 0.34]], 
            Cell[
             StyleData["Title", "Presentation"], 
             CellMargins -> {{27, 10}, {0, 45}}], 
            Cell[
             StyleData["Title", "SlideShow"], 
             CellMargins -> {{27, 10}, {0, 45}}], 
            Cell[
             StyleData["Title", "Printout"], ShowGroupOpener -> False, 
             CellMargins -> {{6, 10}, {5, 30}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], CellMargins -> {{27, Inherited}, {0, 2}}, 
             MenuSortingValue -> 1150, FontColor -> 
             RGBColor[0.23, 0.25, 0.34]], 
            Cell[
             StyleData["Subtitle", "Presentation"], 
             CellMargins -> {{27, 10}, {0, 3}}], 
            Cell[
             StyleData["Subtitle", "SlideShow"], 
             CellMargins -> {{27, 10}, {0, 3}}], 
            Cell[
             StyleData["Subtitle", "Printout"], 
             CellMargins -> {{6, 10}, {5, 0}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubtitle"], MenuSortingValue -> 1200, FontColor -> 
             RGBColor[0.23, 0.25, 0.34]], 
            Cell[
             StyleData["Subsubtitle", "Presentation"], 
             CellMargins -> {{27, 10}, {12, 3}}], 
            Cell[
             StyleData["Subsubtitle", "SlideShow"], 
             CellMargins -> {{27, 10}, {12, 3}}], 
            Cell[
             StyleData["Subsubtitle", "Printout"], 
             CellMargins -> {{6, 10}, {0, 0}}]}, Closed]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Sectioning", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], ShowGroupOpener -> True, MenuSortingValue -> 
             1250, MenuCommandKey -> "4", FontColor -> 
             RGBColor[0.3, 0.3, 0.3]], 
            Cell[
             StyleData["Section", "Presentation"], 
             CellMargins -> {{27, 10}, {12, 51}}], 
            Cell[
             StyleData["Section", "SlideShow"], 
             CellMargins -> {{27, 10}, {12, 51}}], 
            Cell[
             StyleData["Section", "Printout"], ShowGroupOpener -> False, 
             CellMargins -> {{2, 0}, {7, 22}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], CellDingbat -> None, ShowGroupOpener -> 
             True, CellMargins -> {{48, Inherited}, {8, 12}}, 
             MenuSortingValue -> 1300, MenuCommandKey -> "5", FontColor -> 
             RGBColor[0.3, 0.3, 0.3]], 
            Cell[
             StyleData["Subsection", "Presentation"], 
             CellMargins -> {{48, 10}, {12, 18}}], 
            Cell[
             StyleData["Subsection", "SlideShow"], 
             CellMargins -> {{48, 10}, {12, 18}}], 
            Cell[
             StyleData["Subsection", "Printout"], ShowGroupOpener -> False, 
             CellMargins -> {{9, 0}, {7, 22}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], CellDingbat -> None, ShowGroupOpener -> 
             True, CellMargins -> {{60, Inherited}, {2, 10}}, 
             MenuSortingValue -> 1350, MenuCommandKey -> "6", FontSlant -> 
             "Italic", FontColor -> RGBColor[0.4, 0.4, 0.4]], 
            Cell[
             StyleData["Subsubsection", "Presentation"], 
             CellMargins -> {{60, 10}, {3, 15}}], 
            Cell[
             StyleData["Subsubsection", "SlideShow"], 
             CellMargins -> {{60, 10}, {3, 15}}], 
            Cell[
             StyleData["Subsubsection", "Printout"], ShowGroupOpener -> False,
              CellMargins -> {{35, 0}, {7, 14}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsubsection"], CellDingbat -> None, 
             ShowGroupOpener -> True, 
             CellMargins -> {{92, Inherited}, {Inherited, Inherited}}, 
             FontColor -> RGBColor[0.4, 0.4, 0.4]], 
            Cell[
             StyleData["Subsubsubsection", "Presentation"], 
             CellMargins -> {{92, 10}, {3, 15}}, LineSpacing -> {1, 0}], 
            Cell[
             StyleData["Subsubsubsection", "SlideShow"], 
             CellMargins -> {{92, 10}, {3, 15}}, LineSpacing -> {1, 0}], 
            Cell[
             StyleData["Subsubsubsection", "Printout"], 
             CellMargins -> {{50, 0}, {7, 14}}]}, Closed]]}, Open]]}, Open]], 
   
   Cell[
    CellGroupData[{
      Cell["Styles for Publication\[Hyphen]ready Documents", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Author"], CellMargins -> {{27, 30}, {20, 5}}, 
          MenuSortingValue -> 1900, FontFamily -> "Helvetica", FontSize -> 14,
           FontSlant -> "Italic"], 
         Cell[
          StyleData["Author", "Presentation"], 
          CellMargins -> {{27, 30}, {30, 8}}, FontSize -> 28], 
         Cell[
          StyleData["Author", "SlideShow"], 
          CellMargins -> {{27, 30}, {30, 8}}, FontSize -> 28], 
         Cell[
          StyleData["Author", "Printout"], CellMargins -> {{6, 10}, {0, 10}}, 
          FontSize -> 10]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Department"], CellMargins -> {{27, 12}, {2, 2}}, 
          MenuSortingValue -> 1950, FontFamily -> "Helvetica", FontSize -> 11,
           FontWeight -> "Bold"], 
         Cell[
          StyleData["Department", "Presentation"], 
          CellMargins -> {{27, 12}, {3, 3}}, FontSize -> 22], 
         Cell[
          StyleData["Department", "SlideShow"], 
          CellMargins -> {{27, 12}, {3, 3}}, FontSize -> 22], 
         Cell[
          StyleData["Department", "Printout"], 
          CellMargins -> {{6, 10}, {0, 0}}, FontSize -> 10]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Date"], CellMargins -> {{27, 12}, {28, 2}}, 
          MenuSortingValue -> 2000, FontFamily -> "Helvetica", FontSize -> 11,
           FontColor -> GrayLevel[0]], 
         Cell[
          StyleData["Date", "Presentation"], 
          CellMargins -> {{27, 12}, {42, 3}}, FontSize -> 22], 
         Cell[
          StyleData["Date", "SlideShow"], CellMargins -> {{27, 12}, {42, 3}}, 
          FontSize -> 22], 
         Cell[
          StyleData["Date", "Printout"], CellMargins -> {{6, 10}, {5, 0}}, 
          FontSize -> 10]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Abstract"], CellFrame -> {{0, 0}, {0.5, 0.5}}, 
          CellMargins -> {{27, 140}, {20, 20}}, LineSpacing -> {0.9, 0}, 
          MenuSortingValue -> 2050, FontFamily -> "Times", FontSize -> 12], 
         Cell[
          StyleData["Abstract", "Presentation"], 
          CellFrame -> {{0, 0}, {1, 1}}, CellMargins -> {{27, 140}, {30, 30}},
           FontSize -> 24], 
         Cell[
          StyleData["Abstract", "SlideShow"], CellFrame -> {{0, 0}, {1, 1}}, 
          CellMargins -> {{27, 140}, {30, 30}}, FontSize -> 24], 
         Cell[
          StyleData["Abstract", "Printout"], Hyphenation -> True, 
          LineSpacing -> {1, 2}, FontSize -> 10]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Reference"], CellMargins -> {{27, 20}, {6, 6}}, 
          CellGroupingRules -> "GraphicsGrouping", LineSpacing -> {1, 2}, 
          ParagraphIndent -> -36, CounterIncrements -> "Reference", 
          MenuSortingValue -> 2100], 
         Cell[
          StyleData["Reference", "Presentation"], 
          CellMargins -> {{27, 20}, {9, 9}}, ParagraphIndent -> -72, FontSize -> 
          24], 
         Cell[
          StyleData["Reference", "SlideShow"], 
          CellMargins -> {{27, 20}, {9, 9}}, ParagraphIndent -> -72, FontSize -> 
          24], 
         Cell[
          StyleData["Reference", "Printout"], CellMargins -> {{2, 2}, {6, 6}},
           StyleMenuListing -> None, FontSize -> 10]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Theorema", "Section"], 
      Cell[
       StyleData["GlobalDeclaration"], CellFrame -> {{0, 2}, {0, 0}}, 
       ShowCellBracket -> Automatic, CellMargins -> {{76, 10}, {2, 2}}, 
       CellBracketOptions -> {"Color" -> RGBColor[0.73, 0.74, 0.84]}, 
       CellFrameMargins -> 10, CellFrameColor -> RGBColor[0.73, 0.65, 0.61], 
       CellFrameLabelMargins -> 22, ShowAutoStyles -> False, MenuSortingValue -> 
       1441, MenuCommandKey -> "G", FontSize -> 14], 
      Cell[
       StyleData["OpenEnvironment"], 
       CellFrame -> {{False, False}, {True, False}}, ShowCellBracket -> 
       Automatic, CellMargins -> {{76, 6}, {-4, Inherited}}, 
       CellBracketOptions -> {"Color" -> RGBColor[0.73, 0.74, 0.84]}, 
       CellFrameMargins -> 2, CellFrameColor -> RGBColor[0.4, 0.4, 0.4], 
       MenuSortingValue -> 1485], 
      Cell[
       StyleData["EnvironmentHeader"], 
       CellFrame -> {{False, False}, {False, False}}, 
       CellMargins -> {{76, Inherited}, {Inherited, Inherited}}, 
       CellBracketOptions -> {"Color" -> RGBColor[0.73, 0.74, 0.84]}, 
       CellFrameMargins -> 6, CellFrameColor -> RGBColor[0.4, 0.4, 0.4], 
       ShowAutoStyles -> False, MenuSortingValue -> 1450, FontSize -> 14, 
       FontWeight -> "Bold", FontVariations -> {"CapsType" -> "SmallCaps"}, 
       Background -> RGBColor[0.89, 0.8, 0.69]], 
      Cell[
       StyleData["FormalTextInputFormula"], CellMargins -> {{96, 10}, {2, 2}},
        CellBracketOptions -> {"Color" -> RGBColor[0.73, 0.74, 0.84]}, 
       CellFrameLabelMargins -> 53, ShowAutoStyles -> False, MenuSortingValue -> 
       1470, MenuCommandKey -> "F", FontWeight -> "Bold", FontColor -> 
       RGBColor[0.25, 0.19, 0.2]], 
      Cell[
       StyleData["EndEnvironmentMarker"], 
       CellBracketOptions -> {"Color" -> RGBColor[0.73, 0.74, 0.84]}, 
       TextAlignment -> Right, MenuSortingValue -> 1480], 
      Cell[
       StyleData["CloseEnvironment"], 
       CellFrame -> {{False, False}, {False, True}}, ShowCellBracket -> 
       Automatic, CellMargins -> {{76, 6}, {Inherited, 0}}, 
       CellBracketOptions -> {"Color" -> RGBColor[0.73, 0.74, 0.84]}, 
       CellFrameMargins -> 2, CellFrameColor -> RGBColor[0.4, 0.4, 0.4], 
       MenuSortingValue -> 1485], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Computation"], CellFrame -> {{1.5, 0}, {0, 0}}, 
          ShowCellBracket -> Automatic, ShowGroupOpener -> True, 
          CellMargins -> {{76, 0}, {-5, 10}}, 
          CellBracketOptions -> {"Color" -> RGBColor[0.23, 0.25, 0.34]}, 
          CellFrameColor -> RGBColor[0.486, 0.33, 0.32], 
          CellFrameLabels -> {{None, 
             Cell["\[MathematicaIcon]", "CILabel"]}, {None, None}}, 
          CellFrameLabelMargins -> {{12, 10}, {0, 0}}, ShowAutoStyles -> 
          False, MenuSortingValue -> 1510, MenuCommandKey -> "C", FontWeight -> 
          "Bold", FontColor -> RGBColor[0.23, 0.25, 0.34]], 
         Cell[
          StyleData["Computation", "Presentation"], 
          CellMargins -> {{74, 0}, {-10, 15}}], 
         Cell[
          StyleData["Computation", "SlideShow"], 
          CellMargins -> {{74, 0}, {-10, 15}}]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ComputationResult"], CellFrame -> {{1.5, 0}, {0, 0}}, 
          ShowCellBracket -> Automatic, CellMargins -> {{76, 60}, {5, -5}}, 
          CellBracketOptions -> {"Color" -> RGBColor[0.23, 0.25, 0.34]}, 
          CellFrameMargins -> {{8, 8}, {2, 0}}, CellFrameColor -> 
          RGBColor[0.486, 0.33, 0.32], 
          CellFrameLabels -> {{None, ""}, {None, None}}, 
          CellFrameLabelMargins -> {{12, 5}, {0, 0}}, StyleMenuListing -> 
          None, FontColor -> RGBColor[0.23, 0.25, 0.34]], 
         Cell[
          StyleData["ComputationResult", "Presentation"], 
          CellMargins -> {{92, 10}, {15, -10}}], 
         Cell[
          StyleData["ComputationResult", "SlideShow"], 
          CellMargins -> {{92, 10}, {15, -10}}]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ComputationInfo"], ShowCellBracket -> Automatic, 
          CellMargins -> {{74, 30}, {0, 0}}, CellFrameLabels -> {{None, 
             Cell["...?", "CIContent"]}, {None, None}}, TextAlignment -> 
          Right, StyleMenuListing -> None], 
         Cell[
          StyleData["ComputationInfo", "Presentation"], 
          CellMargins -> {{74, 30}, {0, 0}}], 
         Cell[
          StyleData["ComputationInfo", "SlideShow"], 
          CellMargins -> {{74, 30}, {0, 0}}]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ProofInfo"], ShowCellBracket -> Automatic, 
          CellMargins -> {{74, 30}, {0, 0}}, CellFrameLabels -> {{None, 
             Cell["...?", "PIContent"]}, {None, None}}, TextAlignment -> 
          Right, StyleMenuListing -> None], 
         Cell[
          StyleData["ProofInfo", "Presentation"], 
          CellMargins -> {{74, 30}, {0, 0}}], 
         Cell[
          StyleData["ProofInfo", "SlideShow"], 
          CellMargins -> {{74, 30}, {0, 0}}]}, Open]], 
      Cell[
       StyleData["OpenProof"], ShowCellBracket -> Automatic, 
       CellMargins -> {{66, Inherited}, {Inherited, Inherited}}, 
       StyleMenuListing -> None, FontFamily -> "Arial", FontSize -> 11, 
       FontWeight -> "Plain", FontSlant -> "Italic", 
       FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
      Cell[
       StyleData["ProofDisplay"], ShowCellBracket -> Automatic], 
      Cell[
       StyleData["CloseProof"], ShowCellBracket -> Automatic, TextAlignment -> 
       Right, StyleMenuListing -> None], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["FrameLabel"], LanguageCategory -> None, StyleMenuListing -> 
          None, FontFamily -> "Times New Roman", FontSize -> 10, FontWeight -> 
          "Plain", FontSlant -> "Italic", FontTracking -> "Plain", 
          FontVariations -> {
           "Masked" -> False, "Outline" -> False, "Shadow" -> False, 
            "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
          RGBColor[0.55, 0.44, 0.42], Background -> None], 
         Cell[
          StyleData["FrameLabel", "Presentation"], FontSize -> 18], 
         Cell[
          StyleData["FrameLabel", "SlideShow"], FontSize -> 18], 
         Cell[
          StyleData["FrameLabel", "Printout"]]}, Open]], 
      Cell[
       StyleData["CILabel"], FontSize -> 14, FontWeight -> "Plain", FontSlant -> 
       "Plain", FontTracking -> "Plain", 
       FontVariations -> {
        "Masked" -> False, "Outline" -> False, "Shadow" -> False, 
         "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
       RGBColor[0.404, 0.43, 0.545]], 
      Cell[
       StyleData["CIContent"], FontFamily -> "Times New Roman", FontSize -> 
       10, FontWeight -> "Plain", FontSlant -> "Plain", 
       FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}, 
       FontColor -> RGBColor[0.23, 0.25, 0.34]], 
      Cell[
       StyleData["PILabel"], FontSize -> 14, FontWeight -> "Plain", FontSlant -> 
       "Plain", FontTracking -> "Plain", 
       FontVariations -> {
        "Masked" -> False, "Outline" -> False, "Shadow" -> False, 
         "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
       RGBColor[0.404, 0.43, 0.545]], 
      Cell[
       StyleData["PIContent"], FontFamily -> "Times New Roman", FontSize -> 
       10, FontWeight -> "Plain", FontSlant -> "Plain", 
       FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}, 
       FontColor -> RGBColor[0.23, 0.25, 0.34]], 
      Cell[
       StyleData["OpenArchive"], CellFrame -> {{False, False}, {False, True}},
        ShowCellBracket -> Automatic, CellMargins -> {{70, 70}, {0, 10}}, 
       CellBracketOptions -> {"Color" -> RGBColor[0.73, 0.74, 0.84]}, 
       CellGroupingRules -> {"SectionGrouping", 20}, CellFrameMargins -> 3, 
       CellFrameColor -> RGBColor[0.4, 0.4, 0.4], CellFrameLabelMargins -> 1, 
       DefaultFormatType -> DefaultInputFormatType, ShowAutoStyles -> False, 
       MenuSortingValue -> 1210, FontWeight -> Bold, Background -> 
       RGBColor[0.73, 0.74, 0.84]], 
      Cell[
       StyleData["ArchiveInfo"], ShowCellBracket -> Automatic, 
       CellMargins -> {{70, 70}, {0, 0}}, 
       CellBracketOptions -> {"Color" -> RGBColor[0.73, 0.74, 0.84]}, 
       CellFrameMargins -> 5, CellFrameLabelMargins -> 3, ShowCellTags -> 
       False, ShowAutoStyles -> False, MenuSortingValue -> 1220, FontWeight -> 
       "Bold", Background -> RGBColor[0.88, 0.88, 0.92]], 
      Cell[
       StyleData["CloseArchive"], 
       CellFrame -> {{False, False}, {True, False}}, ShowCellBracket -> 
       Automatic, CellMargins -> {{0, 0}, {5, 10}}, 
       CellBracketOptions -> {"Color" -> RGBColor[0.73, 0.74, 0.84]}, 
       CellGroupingRules -> {"SectionGrouping", 25}, CellFrameMargins -> 2, 
       CellFrameColor -> RGBColor[0.4, 0.4, 0.4], TextAlignment -> Center, 
       MenuSortingValue -> 1230, FontFamily -> "Arial Black", FontSize -> 24, 
       FontWeight -> "Plain", FontSlant -> "Plain", 
       FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}, 
       Background -> RGBColor[0.73, 0.65, 0.61]], 
      Cell[
       StyleData["IncludeArchive"], CellFrame -> {{4, 0}, {False, False}}, 
       ShowCellBracket -> Automatic, 
       CellMargins -> {{81, 100}, {Inherited, Inherited}}, 
       CellBracketOptions -> {"Color" -> RGBColor[0.73, 0.74, 0.84]}, 
       CellFrameColor -> RGBColor[0.55, 0.44, 0.42], 
       CellFrameLabels -> {{"\[RightSkeleton]", None}, {None, None}}, 
       CellFrameLabelMargins -> 25, MenuSortingValue -> 1445], 
      Cell[
       StyleData["ExpressionVariable"], SingleLetterItalics -> True, 
       MultiLetterItalics -> True, FontColor -> RGBColor[0.29, 0.46, 0.6]], 
      Cell[
       StyleData["ExpressionABF"], SingleLetterItalics -> True, 
       MultiLetterItalics -> True, FontColor -> RGBColor[0.29, 0.46, 0.6]], 
      Cell[
       StyleData["ExpressionMeta"], SingleLetterItalics -> True, 
       MultiLetterItalics -> True, FontColor -> RGBColor[0.29, 0.46, 0.6]], 
      Cell[
       StyleData["GenericButton"], FontFamily -> "Courier", FontSize -> 10, 
       FontWeight -> "Plain", FontSlant -> "Plain", FontTracking -> "Plain", 
       FontVariations -> {
        "Masked" -> False, "Outline" -> False, "Shadow" -> False, 
         "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
       RGBColor[0.404, 0.43, 0.545]], 
      Cell[
       StyleData["TheoremaForm"], "TwoByteSyntaxCharacterAutoReplacement" -> 
       True, LineSpacing -> {1.25, 0, 2}, SingleLetterItalics -> True, 
       StyleMenuListing -> None, FontFamily -> "Courier"]}, Open]]}, Visible -> 
  False, FrontEndVersion -> "8.0 for Linux x86 (32-bit) (February 23, 2011)", 
  StyleDefinitions -> "StylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 207, 4, 30, "Input",
 CellID->417971902],
Cell[CellGroupData[{
Cell[789, 28, 159, 3, 78, "Title",
 CellID->983226324],
Cell[951, 33, 156, 3, 34, "Subtitle",
 CellID->650892238],
Cell[CellGroupData[{
Cell[1132, 40, 150, 3, 23, "Computation",
 CellID->1888817233],
Cell[1285, 45, 13664, 290, 15, "ComputationInfo",
 CellID->15802510],
Cell[14952, 337, 369, 8, 15, "ComputationResult",
 CellID->774898141]
}, Open  ]],
Cell[CellGroupData[{
Cell[15358, 350, 209, 5, 23, "Computation",
 CellID->128728937],
Cell[15570, 357, 13665, 290, 15, "ComputationInfo",
 CellID->403658551],
Cell[29238, 649, 656, 12, 15, "ComputationResult",
 CellID->143088721]
}, Open  ]],
Cell[CellGroupData[{
Cell[29931, 666, 323, 7, 23, "Computation",
 CellID->965336052],
Cell[30257, 675, 13665, 290, 15, "ComputationInfo",
 CellID->444270191],
Cell[43925, 967, 637, 12, 15, "ComputationResult",
 CellID->977791552]
}, Open  ]],
Cell[CellGroupData[{
Cell[44599, 984, 225, 5, 23, "Computation",
 CellID->409076341],
Cell[44827, 991, 13665, 290, 15, "ComputationInfo",
 CellID->917069211],
Cell[58495, 1283, 350, 8, 15, "ComputationResult",
 CellID->672118868]
}, Open  ]],
Cell[CellGroupData[{
Cell[58882, 1296, 470, 13, 23, "Computation",
 CellID->338566344],
Cell[59355, 1311, 13665, 290, 15, "ComputationInfo",
 CellID->1239952255],
Cell[73023, 1603, 407, 7, 15, "ComputationResult",
 CellID->1624498698]
}, Open  ]],
Cell[CellGroupData[{
Cell[73467, 1615, 263, 6, 23, "Computation",
 CellID->1250395039],
Cell[73733, 1623, 13665, 290, 15, "ComputationInfo",
 CellID->781759990],
Cell[87401, 1915, 476, 8, 15, "ComputationResult",
 CellID->1226432453]
}, Open  ]],
Cell[CellGroupData[{
Cell[87914, 1928, 231, 5, 23, "Computation",
 CellID->132786175],
Cell[88148, 1935, 13665, 290, 15, "ComputationInfo",
 CellID->1215613603],
Cell[101816, 2227, 180, 4, 15, "ComputationResult",
 CellID->1619631143]
}, Open  ]],
Cell[CellGroupData[{
Cell[102033, 2236, 442, 11, 37, "Computation",
 CellID->1590089604],
Cell[102478, 2249, 13665, 290, 15, "ComputationInfo",
 CellID->877855097],
Cell[116146, 2541, 367, 6, 15, "ComputationResult",
 CellID->940429948]
}, Open  ]],
Cell[CellGroupData[{
Cell[116550, 2552, 311, 8, 32, "Computation",
 CellID->1059045043],
Cell[116864, 2562, 13665, 290, 15, "ComputationInfo",
 CellID->934054599],
Cell[130532, 2854, 322, 6, 15, "ComputationResult",
 CellID->1966825647]
}, Open  ]],
Cell[CellGroupData[{
Cell[130891, 2865, 403, 11, 33, "Computation",
 CellID->940320398],
Cell[131297, 2878, 13666, 290, 15, "ComputationInfo",
 CellID->1342747707],
Cell[144966, 3170, 621, 11, 15, "ComputationResult",
 CellID->800729629]
}, Open  ]],
Cell[CellGroupData[{
Cell[145624, 3186, 419, 12, 33, "Computation",
 CellID->209149821],
Cell[146046, 3200, 13666, 290, 15, "ComputationInfo",
 CellID->1564166162],
Cell[159715, 3492, 645, 12, 15, "ComputationResult",
 CellID->1986060083]
}, Open  ]],
Cell[CellGroupData[{
Cell[160397, 3509, 523, 14, 33, "Computation",
 CellID->407045443],
Cell[160923, 3525, 13665, 290, 15, "ComputationInfo",
 CellID->359655608],
Cell[174591, 3817, 525, 12, 15, "ComputationResult",
 CellID->1734984377]
}, Open  ]],
Cell[CellGroupData[{
Cell[175153, 3834, 151, 3, 34, "Subtitle",
 CellID->1717794750],
Cell[CellGroupData[{
Cell[175329, 3841, 499, 11, 23, "Computation",
 CellID->785522644],
Cell[175831, 3854, 13663, 290, 15, "ComputationInfo",
 CellID->1629356658],
Cell[189497, 4146, 657, 11, 15, "ComputationResult",
 CellID->196916688]
}, Open  ]],
Cell[CellGroupData[{
Cell[190191, 4162, 544, 12, 23, "Computation",
 CellID->826056220],
Cell[190738, 4176, 13665, 290, 15, "ComputationInfo",
 CellID->204740551],
Cell[204406, 4468, 357, 6, 15, "ComputationResult",
 CellID->1278042172]
}, Open  ]],
Cell[CellGroupData[{
Cell[204800, 4479, 545, 12, 23, "Computation",
 CellID->1577122453],
Cell[205348, 4493, 13665, 290, 15, "ComputationInfo",
 CellID->668780062],
Cell[219016, 4785, 384, 7, 15, "ComputationResult",
 CellID->1855271320]
}, Open  ]],
Cell[CellGroupData[{
Cell[219437, 4797, 526, 12, 23, "Computation",
 CellID->825788490],
Cell[219966, 4811, 13666, 290, 15, "ComputationInfo",
 CellID->1228341704],
Cell[233635, 5103, 657, 11, 15, "ComputationResult",
 CellID->581065191]
}, Open  ]],
Cell[CellGroupData[{
Cell[234329, 5119, 456, 11, 23, "Computation",
 CellID->1760126863],
Cell[234788, 5132, 13665, 290, 15, "ComputationInfo",
 CellID->573899271],
Cell[248456, 5424, 521, 9, 15, "ComputationResult",
 CellID->2106335540]
}, Open  ]],
Cell[CellGroupData[{
Cell[249014, 5438, 438, 11, 23, "Computation",
 CellID->445388483],
Cell[249455, 5451, 13665, 290, 15, "ComputationInfo",
 CellID->596847371],
Cell[263123, 5743, 716, 16, 15, "ComputationResult",
 CellID->97600014]
}, Open  ]],
Cell[CellGroupData[{
Cell[263876, 5764, 606, 14, 28, "Computation",
 CellID->1006302492],
Cell[264485, 5780, 13666, 290, 15, "ComputationInfo",
 CellID->1068577038],
Cell[278154, 6072, 1118, 24, 23, "ComputationResult",
 CellID->9723635]
}, Open  ]],
Cell[CellGroupData[{
Cell[279309, 6101, 485, 12, 28, "Computation",
 CellID->1738900394],
Cell[279797, 6115, 13665, 290, 15, "ComputationInfo",
 CellID->550450048],
Cell[293465, 6407, 900, 20, 23, "ComputationResult",
 CellID->206640323]
}, Open  ]],
Cell[CellGroupData[{
Cell[294402, 6432, 446, 12, 28, "Computation",
 CellID->1270246997],
Cell[294851, 6446, 13666, 290, 15, "ComputationInfo",
 CellID->1641493124],
Cell[308520, 6738, 767, 20, 23, "ComputationResult",
 CellID->847012156]
}, Open  ]],
Cell[CellGroupData[{
Cell[309324, 6763, 487, 12, 28, "Computation",
 CellID->2087934225],
Cell[309814, 6777, 13665, 290, 15, "ComputationInfo",
 CellID->590155842],
Cell[323482, 7069, 626, 16, 23, "ComputationResult",
 CellID->1760442393]
}, Open  ]],
Cell[CellGroupData[{
Cell[324145, 7090, 551, 14, 29, "Computation",
 CellID->1368748332],
Cell[324699, 7106, 13666, 290, 15, "ComputationInfo",
 CellID->1933382880],
Cell[338368, 7398, 542, 9, 15, "ComputationResult",
 CellID->631030184]
}, Open  ]],
Cell[CellGroupData[{
Cell[338947, 7412, 506, 13, 29, "Computation",
 CellID->156054747],
Cell[339456, 7427, 13665, 290, 15, "ComputationInfo",
 CellID->151128397],
Cell[353124, 7719, 669, 11, 15, "ComputationResult",
 CellID->1576997098]
}, Open  ]],
Cell[CellGroupData[{
Cell[353830, 7735, 458, 12, 29, "Computation",
 CellID->981938983],
Cell[354291, 7749, 13666, 290, 15, "ComputationInfo",
 CellID->1299810246],
Cell[367960, 8041, 198, 4, 15, "ComputationResult",
 CellID->2006399717]
}, Open  ]],
Cell[CellGroupData[{
Cell[368195, 8050, 566, 14, 29, "Computation",
 CellID->1172407024],
Cell[368764, 8066, 13666, 290, 15, "ComputationInfo",
 CellID->1050940656],
Cell[382433, 8358, 223, 4, 15, "ComputationResult",
 CellID->2020130549]
}, Open  ]],
Cell[CellGroupData[{
Cell[382693, 8367, 548, 14, 29, "Computation",
 CellID->1192346770],
Cell[383244, 8383, 13663, 290, 15, "ComputationInfo",
 CellID->18018877],
Cell[396910, 8675, 267, 5, 15, "ComputationResult",
 CellID->350065503]
}, Open  ]],
Cell[CellGroupData[{
Cell[397214, 8685, 459, 12, 29, "Computation",
 CellID->1482049681],
Cell[397676, 8699, 13666, 290, 15, "ComputationInfo",
 CellID->1189522846],
Cell[411345, 8991, 223, 4, 15, "ComputationResult",
 CellID->1246360581]
}, Open  ]],
Cell[CellGroupData[{
Cell[411605, 9000, 458, 12, 29, "Computation",
 CellID->2141330312],
Cell[412066, 9014, 13665, 290, 15, "ComputationInfo",
 CellID->931130694],
Cell[425734, 9306, 198, 4, 15, "ComputationResult",
 CellID->108878743]
}, Open  ]],
Cell[CellGroupData[{
Cell[425969, 9315, 558, 16, 41, "Computation",
 CellID->830234064],
Cell[426530, 9333, 13666, 290, 15, "ComputationInfo",
 CellID->1820259852],
Cell[440199, 9625, 177, 4, 15, "ComputationResult",
 CellID->889982586]
}, Open  ]],
Cell[CellGroupData[{
Cell[440413, 9634, 556, 14, 29, "Computation",
 CellID->2100430138],
Cell[440972, 9650, 13665, 290, 15, "ComputationInfo",
 CellID->705726114],
Cell[454640, 9942, 153, 3, 15, "ComputationResult",
 CellID->1917859867]
}, Open  ]],
Cell[CellGroupData[{
Cell[454830, 9950, 413, 10, 23, "Computation",
 CellID->7342953],
Cell[455246, 9962, 13666, 290, 15, "ComputationInfo",
 CellID->1598087816],
Cell[468915, 10254, 247, 5, 15, "ComputationResult",
 CellID->1210109692]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[469211, 10265, 612, 11, 67, "Subtitle",
 CellID->1663972064],
Cell[469826, 10278, 156, 3, 30, "Text",
 CellID->82843054],
Cell[CellGroupData[{
Cell[470007, 10285, 691, 13, 23, "Computation",
 CellID->400256011],
Cell[470701, 10300, 13665, 290, 15, "ComputationInfo",
 CellID->838953257],
Cell[484369, 10592, 716, 13, 15, "ComputationResult",
 CellID->1607811451]
}, Open  ]],
Cell[CellGroupData[{
Cell[485122, 10610, 1075, 22, 24, "Computation",
 CellID->693071256],
Cell[486200, 10634, 13665, 290, 15, "ComputationInfo",
 CellID->691272090],
Cell[499868, 10926, 957, 18, 15, "ComputationResult",
 CellID->1389403306]
}, Open  ]],
Cell[CellGroupData[{
Cell[500862, 10949, 375, 8, 23, "Computation",
 CellID->740118880],
Cell[501240, 10959, 13666, 290, 15, "ComputationInfo",
 CellID->1814451774],
Cell[514909, 11251, 630, 12, 15, "ComputationResult",
 CellID->185281566]
}, Open  ]],
Cell[CellGroupData[{
Cell[515576, 11268, 500, 14, 41, "Computation",
 CellID->132121949],
Cell[516079, 11284, 13665, 290, 15, "ComputationInfo",
 CellID->684275112],
Cell[529747, 11576, 343, 9, 15, "ComputationResult",
 CellID->410401565]
}, Open  ]],
Cell[CellGroupData[{
Cell[530127, 11590, 343, 8, 24, "Computation",
 CellID->472321466],
Cell[530473, 11600, 13665, 290, 15, "ComputationInfo",
 CellID->698995919],
Cell[544141, 11892, 281, 7, 15, "ComputationResult",
 CellID->1464228590]
}, Open  ]],
Cell[CellGroupData[{
Cell[544459, 11904, 342, 8, 24, "Computation",
 CellID->856924406],
Cell[544804, 11914, 13665, 290, 15, "ComputationInfo",
 CellID->382347894],
Cell[558472, 12206, 280, 7, 15, "ComputationResult",
 CellID->1324222721]
}, Open  ]],
Cell[CellGroupData[{
Cell[558789, 12218, 428, 10, 24, "Computation",
 CellID->779671799],
Cell[559220, 12230, 13666, 290, 15, "ComputationInfo",
 CellID->1413779852],
Cell[572889, 12522, 391, 9, 15, "ComputationResult",
 CellID->929840690]
}, Open  ]],
Cell[CellGroupData[{
Cell[573317, 12536, 1090, 26, 24, "Computation",
 CellID->116260140],
Cell[574410, 12564, 13666, 290, 15, "ComputationInfo",
 CellID->2082369523],
Cell[588079, 12856, 1214, 30, 15, "ComputationResult",
 CellID->1021559997]
}, Open  ]],
Cell[CellGroupData[{
Cell[589330, 12891, 633, 18, 47, "Computation",
 CellID->574343066],
Cell[589966, 12911, 13666, 290, 15, "ComputationInfo",
 CellID->1200822377],
Cell[603635, 13203, 328, 8, 15, "ComputationResult",
 CellID->879813780]
}, Open  ]],
Cell[CellGroupData[{
Cell[604000, 13216, 532, 14, 24, "Computation",
 CellID->1515610032],
Cell[604535, 13232, 13666, 290, 15, "ComputationInfo",
 CellID->1983570534],
Cell[618204, 13524, 325, 9, 15, "ComputationResult",
 CellID->785229230]
}, Open  ]],
Cell[CellGroupData[{
Cell[618566, 13538, 686, 16, 24, "Computation",
 CellID->1695000523],
Cell[619255, 13556, 13666, 290, 15, "ComputationInfo",
 CellID->1753401141],
Cell[632924, 13848, 570, 12, 15, "ComputationResult",
 CellID->1611769954]
}, Open  ]],
Cell[CellGroupData[{
Cell[633531, 13865, 473, 13, 23, "Computation",
 CellID->2097465973],
Cell[634007, 13880, 13665, 290, 15, "ComputationInfo",
 CellID->336684972],
Cell[647675, 14172, 428, 10, 15, "ComputationResult",
 CellID->497096125]
}, Open  ]],
Cell[648118, 14185, 108, 2, 30, "Text",
 CellID->518649353],
Cell[CellGroupData[{
Cell[648251, 14191, 603, 12, 23, "Computation",
 CellID->423748017],
Cell[648857, 14205, 13665, 290, 15, "ComputationInfo",
 CellID->163282225],
Cell[662525, 14497, 718, 13, 15, "ComputationResult",
 CellID->1800913563]
}, Open  ]],
Cell[CellGroupData[{
Cell[663280, 14515, 711, 16, 24, "Computation",
 CellID->1629228051],
Cell[663994, 14533, 13666, 290, 15, "ComputationInfo",
 CellID->1921087475],
Cell[677663, 14825, 676, 13, 15, "ComputationResult",
 CellID->1063284837]
}, Open  ]],
Cell[CellGroupData[{
Cell[678376, 14843, 552, 13, 42, "Computation",
 CellID->470867308],
Cell[678931, 14858, 13665, 290, 15, "ComputationInfo",
 CellID->467087250],
Cell[692599, 15150, 565, 12, 15, "ComputationResult",
 CellID->729175878]
}, Open  ]],
Cell[CellGroupData[{
Cell[693201, 15167, 480, 12, 24, "Computation",
 CellID->1862732819],
Cell[693684, 15181, 13666, 290, 15, "ComputationInfo",
 CellID->1445632732],
Cell[707353, 15473, 214, 6, 15, "ComputationResult",
 CellID->1791309971]
}, Open  ]],
Cell[CellGroupData[{
Cell[707604, 15484, 505, 13, 24, "Computation",
 CellID->1439653550],
Cell[708112, 15499, 13665, 290, 15, "ComputationInfo",
 CellID->377520447],
Cell[721780, 15791, 726, 14, 15, "ComputationResult",
 CellID->1190945433]
}, Open  ]],
Cell[CellGroupData[{
Cell[722543, 15810, 682, 16, 24, "Computation",
 CellID->1995028132],
Cell[723228, 15828, 13664, 290, 15, "ComputationInfo",
 CellID->1797445300],
Cell[736895, 16120, 491, 11, 15, "ComputationResult",
 CellID->1577779614]
}, Open  ]],
Cell[CellGroupData[{
Cell[737423, 16136, 780, 18, 24, "Computation",
 CellID->7774277],
Cell[738206, 16156, 13666, 290, 15, "ComputationInfo",
 CellID->1192105833],
Cell[751875, 16448, 389, 8, 15, "ComputationResult",
 CellID->492414884]
}, Open  ]],
Cell[CellGroupData[{
Cell[752301, 16461, 927, 20, 24, "Computation",
 CellID->106793217],
Cell[753231, 16483, 13666, 290, 15, "ComputationInfo",
 CellID->2114968450],
Cell[766900, 16775, 387, 8, 15, "ComputationResult",
 CellID->196100790]
}, Open  ]],
Cell[CellGroupData[{
Cell[767324, 16788, 864, 20, 24, "Computation",
 CellID->231936767],
Cell[768191, 16810, 13663, 290, 15, "ComputationInfo",
 CellID->67800378],
Cell[781857, 17102, 488, 11, 15, "ComputationResult",
 CellID->1975029045]
}, Open  ]],
Cell[CellGroupData[{
Cell[782382, 17118, 441, 12, 23, "Computation",
 CellID->237250277],
Cell[782826, 17132, 13665, 290, 15, "ComputationInfo",
 CellID->966532757],
Cell[796494, 17424, 406, 10, 15, "ComputationResult",
 CellID->1569417771]
}, Open  ]],
Cell[CellGroupData[{
Cell[796937, 17439, 1014, 23, 24, "Computation",
 CellID->1591118301],
Cell[797954, 17464, 13666, 290, 15, "ComputationInfo",
 CellID->1579364153],
Cell[811623, 17756, 498, 12, 15, "ComputationResult",
 CellID->1656676364]
}, Open  ]],
Cell[812136, 17771, 110, 2, 30, "Text",
 CellID->814944926],
Cell[CellGroupData[{
Cell[812271, 17777, 558, 12, 23, "Computation",
 CellID->1303642363],
Cell[812832, 17791, 13666, 290, 15, "ComputationInfo",
 CellID->1180620023],
Cell[826501, 18083, 1199, 21, 15, "ComputationResult",
 CellID->2083612595]
}, Open  ]],
Cell[CellGroupData[{
Cell[827737, 18109, 689, 16, 24, "Computation",
 CellID->46153320],
Cell[828429, 18127, 13666, 290, 15, "ComputationInfo",
 CellID->1596618322],
Cell[842098, 18419, 705, 13, 15, "ComputationResult",
 CellID->833766668]
}, Open  ]],
Cell[CellGroupData[{
Cell[842840, 18437, 758, 16, 24, "Computation",
 CellID->2032740975],
Cell[843601, 18455, 13666, 290, 15, "ComputationInfo",
 CellID->1375341369],
Cell[857270, 18747, 781, 15, 15, "ComputationResult",
 CellID->1657874565]
}, Open  ]],
Cell[CellGroupData[{
Cell[858088, 18767, 745, 16, 23, "Computation",
 CellID->1854442001],
Cell[858836, 18785, 13666, 290, 15, "ComputationInfo",
 CellID->1398090212],
Cell[872505, 19077, 465, 10, 15, "ComputationResult",
 CellID->1823501645]
}, Open  ]],
Cell[CellGroupData[{
Cell[873007, 19092, 603, 14, 24, "Computation",
 CellID->239376316],
Cell[873613, 19108, 13666, 290, 15, "ComputationInfo",
 CellID->2037919467],
Cell[887282, 19400, 477, 12, 15, "ComputationResult",
 CellID->315166795]
}, Open  ]],
Cell[CellGroupData[{
Cell[887796, 19417, 866, 19, 24, "Computation",
 CellID->536070690],
Cell[888665, 19438, 13665, 290, 15, "ComputationInfo",
 CellID->490790874],
Cell[902333, 19730, 905, 17, 15, "ComputationResult",
 CellID->428507435]
}, Open  ]],
Cell[CellGroupData[{
Cell[903275, 19752, 1073, 23, 24, "Computation",
 CellID->2094427294],
Cell[904351, 19777, 13666, 290, 15, "ComputationInfo",
 CellID->1971843159],
Cell[918020, 20069, 598, 13, 15, "ComputationResult",
 CellID->875554038]
}, Open  ]],
Cell[CellGroupData[{
Cell[918655, 20087, 399, 9, 23, "Computation",
 CellID->1379907566],
Cell[919057, 20098, 13666, 290, 15, "ComputationInfo",
 CellID->1452797778],
Cell[932726, 20390, 511, 12, 15, "ComputationResult",
 CellID->1718525006]
}, Open  ]],
Cell[CellGroupData[{
Cell[933274, 20407, 498, 13, 23, "Computation",
 CellID->229759647],
Cell[933775, 20422, 13666, 290, 15, "ComputationInfo",
 CellID->1044571292],
Cell[947444, 20714, 471, 12, 15, "ComputationResult",
 CellID->1957005161]
}, Open  ]],
Cell[947930, 20729, 109, 2, 30, "Text",
 CellID->1278983252],
Cell[CellGroupData[{
Cell[948064, 20735, 512, 11, 23, "Computation",
 CellID->1047740689],
Cell[948579, 20748, 13666, 290, 15, "ComputationInfo",
 CellID->1880555999],
Cell[962248, 21040, 575, 11, 15, "ComputationResult",
 CellID->1195879424]
}, Open  ]],
Cell[CellGroupData[{
Cell[962860, 21056, 431, 10, 24, "Computation",
 CellID->481771869],
Cell[963294, 21068, 13665, 290, 15, "ComputationInfo",
 CellID->857413044],
Cell[976962, 21360, 323, 7, 15, "ComputationResult",
 CellID->2048319237]
}, Open  ]],
Cell[CellGroupData[{
Cell[977322, 21372, 565, 13, 24, "Computation",
 CellID->1506962924],
Cell[977890, 21387, 13666, 290, 15, "ComputationInfo",
 CellID->1662928718],
Cell[991559, 21679, 550, 11, 15, "ComputationResult",
 CellID->852313146]
}, Open  ]],
Cell[CellGroupData[{
Cell[992146, 21695, 812, 19, 24, "Computation",
 CellID->833357690],
Cell[992961, 21716, 13666, 290, 15, "ComputationInfo",
 CellID->1606118837],
Cell[1006630, 22008, 438, 10, 15, "ComputationResult",
 CellID->818167170]
}, Open  ]],
Cell[CellGroupData[{
Cell[1007105, 22023, 451, 12, 23, "Computation",
 CellID->389852928],
Cell[1007559, 22037, 13666, 290, 15, "ComputationInfo",
 CellID->2007919452],
Cell[1021228, 22329, 462, 11, 15, "ComputationResult",
 CellID->615782521]
}, Open  ]],
Cell[CellGroupData[{
Cell[1021727, 22345, 942, 24, 24, "Computation",
 CellID->1844974704],
Cell[1022672, 22371, 13665, 290, 15, "ComputationInfo",
 CellID->645615719],
Cell[1036340, 22663, 512, 11, 15, "ComputationResult",
 CellID->429279799]
}, Open  ]],
Cell[CellGroupData[{
Cell[1036889, 22679, 917, 23, 24, "Computation",
 CellID->676355522],
Cell[1037809, 22704, 13666, 290, 15, "ComputationInfo",
 CellID->1229060951],
Cell[1051478, 22996, 537, 12, 15, "ComputationResult",
 CellID->293483628]
}, Open  ]],
Cell[CellGroupData[{
Cell[1052052, 23013, 731, 18, 24, "Computation",
 CellID->252185781],
Cell[1052786, 23033, 13665, 290, 15, "ComputationInfo",
 CellID->810010244],
Cell[1066454, 23325, 333, 8, 15, "ComputationResult",
 CellID->1374711876]
}, Open  ]],
Cell[1066802, 23336, 112, 2, 30, "Text",
 CellID->1888499300],
Cell[CellGroupData[{
Cell[1066939, 23342, 443, 11, 24, "Computation",
 CellID->2022133219],
Cell[1067385, 23355, 13666, 290, 15, "ComputationInfo",
 CellID->2032382005],
Cell[1081054, 23647, 732, 13, 15, "ComputationResult",
 CellID->116124898]
}, Open  ]],
Cell[CellGroupData[{
Cell[1081823, 23665, 721, 13, 23, "Computation",
 CellID->1069569015],
Cell[1082547, 23680, 13666, 290, 15, "ComputationInfo",
 CellID->1570125551],
Cell[1096216, 23972, 409, 9, 15, "ComputationResult",
 CellID->1776380065]
}, Open  ]],
Cell[CellGroupData[{
Cell[1096662, 23986, 434, 10, 24, "Computation",
 CellID->2049139854],
Cell[1097099, 23998, 13666, 290, 15, "ComputationInfo",
 CellID->1825947213],
Cell[1110768, 24290, 527, 10, 15, "ComputationResult",
 CellID->1891497186]
}, Open  ]],
Cell[CellGroupData[{
Cell[1111332, 24305, 476, 9, 23, "Computation",
 CellID->1122530022],
Cell[1111811, 24316, 13665, 290, 15, "ComputationInfo",
 CellID->735938263],
Cell[1125479, 24608, 610, 12, 15, "ComputationResult",
 CellID->1353377093]
}, Open  ]],
Cell[CellGroupData[{
Cell[1126126, 24625, 257, 6, 23, "Computation",
 CellID->440861380],
Cell[1126386, 24633, 13666, 290, 15, "ComputationInfo",
 CellID->1890979291],
Cell[1140055, 24925, 517, 10, 15, "ComputationResult",
 CellID->313141681]
}, Open  ]],
Cell[CellGroupData[{
Cell[1140609, 24940, 487, 12, 23, "Computation",
 CellID->413033298],
Cell[1141099, 24954, 13664, 290, 15, "ComputationInfo",
 CellID->1152411444],
Cell[1154766, 25246, 369, 9, 15, "ComputationResult",
 CellID->1648371254]
}, Open  ]],
Cell[CellGroupData[{
Cell[1155172, 25260, 625, 15, 23, "Computation",
 CellID->1594960447],
Cell[1155800, 25277, 13666, 290, 15, "ComputationInfo",
 CellID->1807856202],
Cell[1169469, 25569, 397, 10, 15, "ComputationResult",
 CellID->52561069]
}, Open  ]],
Cell[CellGroupData[{
Cell[1169903, 25584, 865, 21, 24, "Computation",
 CellID->1291938454],
Cell[1170771, 25607, 13665, 290, 15, "ComputationInfo",
 CellID->929768224],
Cell[1184439, 25899, 685, 16, 15, "ComputationResult",
 CellID->214097186]
}, Open  ]],
Cell[CellGroupData[{
Cell[1185161, 25920, 410, 10, 24, "Computation",
 CellID->313236026],
Cell[1185574, 25932, 13666, 290, 15, "ComputationInfo",
 CellID->1042924553],
Cell[1199243, 26224, 372, 8, 15, "ComputationResult",
 CellID->2082126674]
}, Open  ]],
Cell[CellGroupData[{
Cell[1199652, 26237, 591, 14, 24, "Computation",
 CellID->2127687046],
Cell[1200246, 26253, 13665, 290, 15, "ComputationInfo",
 CellID->499639732],
Cell[1213914, 26545, 499, 12, 15, "ComputationResult",
 CellID->759106028]
}, Open  ]],
Cell[CellGroupData[{
Cell[1214450, 26562, 943, 26, 33, "Computation",
 CellID->1501444591],
Cell[1215396, 26590, 13666, 290, 15, "ComputationInfo",
 CellID->1618610855],
Cell[1229065, 26882, 336, 8, 15, "ComputationResult",
 CellID->344911813]
}, Open  ]],
Cell[1229416, 26893, 108, 2, 30, "Text",
 CellID->191300890],
Cell[CellGroupData[{
Cell[1229549, 26899, 384, 9, 23, "Computation",
 CellID->607511475],
Cell[1229936, 26910, 13666, 290, 15, "ComputationInfo",
 CellID->1045116004],
Cell[1243605, 27202, 604, 12, 15, "ComputationResult",
 CellID->1646577436]
}, Open  ]],
Cell[CellGroupData[{
Cell[1244246, 27219, 378, 9, 23, "Computation",
 CellID->656384848],
Cell[1244627, 27230, 13666, 290, 15, "ComputationInfo",
 CellID->1357166042],
Cell[1258296, 27522, 409, 9, 15, "ComputationResult",
 CellID->3903171]
}, Open  ]],
Cell[CellGroupData[{
Cell[1258742, 27536, 579, 16, 33, "Computation",
 CellID->958140562],
Cell[1259324, 27554, 13664, 290, 15, "ComputationInfo",
 CellID->33832873],
Cell[1272991, 27846, 530, 11, 15, "ComputationResult",
 CellID->1394878861]
}, Open  ]],
Cell[CellGroupData[{
Cell[1273558, 27862, 789, 20, 24, "Computation",
 CellID->1387755838],
Cell[1274350, 27884, 13665, 290, 15, "ComputationInfo",
 CellID->891736171],
Cell[1288018, 28176, 480, 12, 15, "ComputationResult",
 CellID->560048063]
}, Open  ]],
Cell[1288513, 28191, 108, 2, 30, "Text",
 CellID->15029127],
Cell[CellGroupData[{
Cell[1288646, 28197, 465, 10, 40, "Computation",
 CellID->49900251],
Cell[1289114, 28209, 13665, 290, 15, "ComputationInfo",
 CellID->574413437],
Cell[1302782, 28501, 328, 8, 15, "ComputationResult",
 CellID->286816809]
}, Open  ]],
Cell[CellGroupData[{
Cell[1303147, 28514, 428, 10, 23, "Computation",
 CellID->950986456],
Cell[1303578, 28526, 13666, 290, 15, "ComputationInfo",
 CellID->1956369558],
Cell[1317247, 28818, 484, 11, 15, "ComputationResult",
 CellID->1291834457]
}, Open  ]],
Cell[CellGroupData[{
Cell[1317768, 28834, 573, 15, 33, "Computation",
 CellID->1312973741],
Cell[1318344, 28851, 13666, 290, 15, "ComputationInfo",
 CellID->1129438150],
Cell[1332013, 29143, 531, 11, 15, "ComputationResult",
 CellID->562669533]
}, Open  ]],
Cell[CellGroupData[{
Cell[1332581, 29159, 621, 18, 33, "Computation",
 CellID->830818370],
Cell[1333205, 29179, 13666, 290, 15, "ComputationInfo",
 CellID->1466716144],
Cell[1346874, 29471, 1212, 29, 35, "ComputationResult",
 CellID->282516319]
}, Open  ]],
Cell[1348101, 29503, 104, 2, 30, "Text",
 CellID->708702422],
Cell[CellGroupData[{
Cell[1348230, 29509, 434, 11, 23, "Computation",
 CellID->556082349],
Cell[1348667, 29522, 13666, 290, 15, "ComputationInfo",
 CellID->1094194903],
Cell[1362336, 29814, 398, 8, 15, "ComputationResult",
 CellID->1053061019]
}, Open  ]],
Cell[CellGroupData[{
Cell[1362771, 29827, 626, 16, 33, "Computation",
 CellID->1121600337],
Cell[1363400, 29845, 13666, 290, 15, "ComputationInfo",
 CellID->1494389892],
Cell[1377069, 30137, 296, 8, 15, "ComputationResult",
 CellID->899245082]
}, Open  ]],
Cell[CellGroupData[{
Cell[1377402, 30150, 635, 17, 33, "Computation",
 CellID->1078579843],
Cell[1378040, 30169, 13666, 290, 15, "ComputationInfo",
 CellID->1120873549],
Cell[1391709, 30461, 495, 11, 15, "ComputationResult",
 CellID->455084461]
}, Open  ]],
Cell[CellGroupData[{
Cell[1392241, 30477, 865, 20, 54, "Computation",
 CellID->2135180245],
Cell[1393109, 30499, 13666, 290, 15, "ComputationInfo",
 CellID->1568574066],
Cell[1406778, 30791, 537, 11, 15, "ComputationResult",
 CellID->815760898]
}, Open  ]],
Cell[1407330, 30805, 117, 2, 30, "Text",
 CellID->183977091],
Cell[CellGroupData[{
Cell[1407472, 30811, 261, 7, 23, "Computation",
 CellID->1571412960],
Cell[1407736, 30820, 13666, 290, 15, "ComputationInfo",
 CellID->1582897478],
Cell[1421405, 31112, 449, 8, 15, "ComputationResult",
 CellID->1570321036]
}, Open  ]],
Cell[CellGroupData[{
Cell[1421891, 31125, 238, 6, 23, "Computation",
 CellID->1839398836],
Cell[1422132, 31133, 13665, 290, 15, "ComputationInfo",
 CellID->934896027],
Cell[1435800, 31425, 311, 6, 15, "ComputationResult",
 CellID->1608156113]
}, Open  ]],
Cell[CellGroupData[{
Cell[1436148, 31436, 251, 6, 23, "Computation",
 CellID->99102128],
Cell[1436402, 31444, 13666, 290, 15, "ComputationInfo",
 CellID->1114744293],
Cell[1450071, 31736, 423, 7, 15, "ComputationResult",
 CellID->852778827]
}, Open  ]],
Cell[CellGroupData[{
Cell[1450531, 31748, 361, 9, 24, "Computation",
 CellID->1559062918],
Cell[1450895, 31759, 13666, 290, 15, "ComputationInfo",
 CellID->1155072778],
Cell[1464564, 32051, 280, 7, 17, "ComputationResult",
 CellID->235179120]
}, Open  ]],
Cell[CellGroupData[{
Cell[1464881, 32063, 432, 10, 24, "Computation",
 CellID->886730863],
Cell[1465316, 32075, 13665, 290, 15, "ComputationInfo",
 CellID->450976688],
Cell[1478984, 32367, 300, 6, 15, "ComputationResult",
 CellID->1499089661]
}, Open  ]],
Cell[CellGroupData[{
Cell[1479321, 32378, 420, 10, 23, "Computation",
 CellID->1751931602],
Cell[1479744, 32390, 13665, 290, 15, "ComputationInfo",
 CellID->341944096],
Cell[1493412, 32682, 264, 5, 15, "ComputationResult",
 CellID->387161218]
}, Open  ]],
Cell[CellGroupData[{
Cell[1493713, 32692, 663, 15, 24, "Computation",
 CellID->480180174],
Cell[1494379, 32709, 13664, 290, 15, "ComputationInfo",
 CellID->712612482],
Cell[1508046, 33001, 824, 19, 19, "ComputationResult",
 CellID->47495183]
}, Open  ]],
Cell[CellGroupData[{
Cell[1508907, 33025, 775, 17, 24, "Computation",
 CellID->572717136],
Cell[1509685, 33044, 13665, 290, 15, "ComputationInfo",
 CellID->885828326],
Cell[1523353, 33336, 214, 6, 15, "ComputationResult",
 CellID->1718573906]
}, Open  ]],
Cell[CellGroupData[{
Cell[1523604, 33347, 646, 18, 46, "Computation",
 CellID->721507726],
Cell[1524253, 33367, 13666, 290, 15, "ComputationInfo",
 CellID->1798397824],
Cell[1537922, 33659, 356, 6, 15, "ComputationResult",
 CellID->1098555340]
}, Open  ]],
Cell[CellGroupData[{
Cell[1538315, 33670, 570, 16, 46, "Computation",
 CellID->1233019245],
Cell[1538888, 33688, 13665, 290, 15, "ComputationInfo",
 CellID->729959087],
Cell[1552556, 33980, 418, 9, 15, "ComputationResult",
 CellID->2035933856]
}, Open  ]],
Cell[CellGroupData[{
Cell[1553011, 33994, 1412, 35, 48, "Computation",
 CellID->1377556300],
Cell[1554426, 34031, 13664, 290, 15, "ComputationInfo",
 CellID->72370074],
Cell[1568093, 34323, 380, 7, 15, "ComputationResult",
 CellID->1124920885]
}, Open  ]],
Cell[CellGroupData[{
Cell[1568510, 34335, 612, 13, 24, "Computation",
 CellID->1604300385],
Cell[1569125, 34350, 13666, 290, 15, "ComputationInfo",
 CellID->1542549904],
Cell[1582794, 34642, 327, 8, 15, "ComputationResult",
 CellID->2085293554]
}, Open  ]],
Cell[CellGroupData[{
Cell[1583158, 34655, 408, 12, 41, "Computation",
 CellID->151565377],
Cell[1583569, 34669, 13665, 290, 15, "ComputationInfo",
 CellID->1058658188],
Cell[1597237, 34961, 266, 5, 15, "ComputationResult",
 CellID->1020722699]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1597552, 34972, 137, 3, 34, "Subtitle",
 CellID->238059636],
Cell[CellGroupData[{
Cell[1597714, 34979, 371, 8, 23, "Computation",
 CellID->1319613944],
Cell[1598088, 34989, 13665, 290, 15, "ComputationInfo",
 CellID->809206531],
Cell[1611756, 35281, 241, 5, 15, "ComputationResult",
 CellID->1678731012]
}, Open  ]],
Cell[CellGroupData[{
Cell[1612034, 35291, 550, 12, 23, "Computation",
 CellID->943236752],
Cell[1612587, 35305, 13666, 290, 15, "ComputationInfo",
 CellID->1837762820],
Cell[1626256, 35597, 356, 6, 15, "ComputationResult",
 CellID->1769517423]
}, Open  ]],
Cell[CellGroupData[{
Cell[1626649, 35608, 366, 8, 23, "Computation",
 CellID->197031148],
Cell[1627018, 35618, 13666, 290, 15, "ComputationInfo",
 CellID->1928120705],
Cell[1640687, 35910, 195, 4, 15, "ComputationResult",
 CellID->359011883]
}, Open  ]],
Cell[CellGroupData[{
Cell[1640919, 35919, 472, 12, 43, "Computation",
 CellID->1540361145],
Cell[1641394, 35933, 13665, 290, 15, "ComputationInfo",
 CellID->517099160],
Cell[1655062, 36225, 291, 5, 15, "ComputationResult",
 CellID->1798508048]
}, Open  ]],
Cell[CellGroupData[{
Cell[1655390, 36235, 575, 15, 43, "Computation",
 CellID->1180063923],
Cell[1655968, 36252, 13665, 290, 15, "ComputationInfo",
 CellID->1376290930],
Cell[1669636, 36544, 265, 5, 15, "ComputationResult",
 CellID->1912928873]
}, Open  ]],
Cell[CellGroupData[{
Cell[1669938, 36554, 576, 15, 43, "Computation",
 CellID->936660631],
Cell[1670517, 36571, 13666, 290, 15, "ComputationInfo",
 CellID->1410943218],
Cell[1684186, 36863, 127, 3, 15, "ComputationResult",
 CellID->1572917786]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1684362, 36872, 153, 3, 34, "Subtitle",
 CellID->911336648],
Cell[CellGroupData[{
Cell[1684540, 36879, 456, 11, 40, "Computation",
 CellID->427697581],
Cell[1684999, 36892, 13665, 290, 15, "ComputationInfo",
 CellID->903303750],
Cell[1698667, 37184, 598, 10, 15, "ComputationResult",
 CellID->339948297]
}, Open  ]],
Cell[CellGroupData[{
Cell[1699302, 37199, 249, 6, 23, "Computation",
 CellID->1267421298],
Cell[1699554, 37207, 13666, 290, 15, "ComputationInfo",
 CellID->1771542319],
Cell[1713223, 37499, 244, 5, 15, "ComputationResult",
 CellID->684139118]
}, Open  ]],
Cell[CellGroupData[{
Cell[1713504, 37509, 234, 5, 23, "Computation",
 CellID->286713122],
Cell[1713741, 37516, 13665, 290, 15, "ComputationInfo",
 CellID->673293329],
Cell[1727409, 37808, 483, 9, 15, "ComputationResult",
 CellID->1283597669]
}, Open  ]],
Cell[CellGroupData[{
Cell[1727929, 37822, 337, 8, 23, "Computation",
 CellID->1585950468],
Cell[1728269, 37832, 13665, 290, 15, "ComputationInfo",
 CellID->932348632],
Cell[1741937, 38124, 197, 4, 15, "ComputationResult",
 CellID->988359452]
}, Open  ]],
Cell[CellGroupData[{
Cell[1742171, 38133, 336, 8, 23, "Computation",
 CellID->422224563],
Cell[1742510, 38143, 13666, 290, 15, "ComputationInfo",
 CellID->1672750071],
Cell[1756179, 38435, 314, 6, 15, "ComputationResult",
 CellID->779143346]
}, Open  ]],
Cell[CellGroupData[{
Cell[1756530, 38446, 399, 10, 23, "Computation",
 CellID->1673589215],
Cell[1756932, 38458, 13666, 290, 15, "ComputationInfo",
 CellID->1760313590],
Cell[1770601, 38750, 131, 3, 15, "ComputationResult",
 CellID->1105427749]
}, Open  ]],
Cell[CellGroupData[{
Cell[1770769, 38758, 467, 11, 23, "Computation",
 CellID->1205046247],
Cell[1771239, 38771, 13666, 290, 15, "ComputationInfo",
 CellID->1268626413],
Cell[1784908, 39063, 198, 4, 15, "ComputationResult",
 CellID->860259734]
}, Open  ]],
Cell[CellGroupData[{
Cell[1785143, 39072, 406, 10, 23, "Computation",
 CellID->993869015],
Cell[1785552, 39084, 13665, 290, 15, "ComputationInfo",
 CellID->582594537],
Cell[1799220, 39376, 423, 10, 15, "ComputationResult",
 CellID->660634802]
}, Open  ]],
Cell[CellGroupData[{
Cell[1799680, 39391, 249, 6, 23, "Computation",
 CellID->2102862363],
Cell[1799932, 39399, 13666, 290, 15, "ComputationInfo",
 CellID->1180049356],
Cell[1813601, 39691, 198, 4, 15, "ComputationResult",
 CellID->256464698]
}, Open  ]],
Cell[CellGroupData[{
Cell[1813836, 39700, 248, 6, 23, "Computation",
 CellID->719354187],
Cell[1814087, 39708, 13665, 290, 15, "ComputationInfo",
 CellID->224506487],
Cell[1827755, 40000, 179, 4, 15, "ComputationResult",
 CellID->642615148]
}, Open  ]],
Cell[CellGroupData[{
Cell[1827971, 40009, 466, 13, 33, "Computation",
 CellID->74790411],
Cell[1828440, 40024, 13666, 290, 21, "ComputationInfo",
 CellID->1081997385],
Cell[1842109, 40316, 337, 6, 21, "ComputationResult",
 CellID->735618482]
}, Open  ]],
Cell[CellGroupData[{
Cell[1842483, 40327, 533, 14, 44, "Computation",
 CellID->177601723],
Cell[1843019, 40343, 13666, 290, 21, "ComputationInfo",
 CellID->1624617448],
Cell[1856688, 40635, 365, 7, 21, "ComputationResult",
 CellID->855455492]
}, Open  ]],
Cell[CellGroupData[{
Cell[1857090, 40647, 632, 17, 58, "Computation",
 CellID->1136383058],
Cell[1857725, 40666, 13666, 290, 21, "ComputationInfo",
 CellID->1572323884],
Cell[1871394, 40958, 202, 4, 21, "ComputationResult",
 CellID->743670183]
}, Open  ]],
Cell[CellGroupData[{
Cell[1871633, 40967, 490, 13, 44, "Computation",
 CellID->738851421],
Cell[1872126, 40982, 13666, 290, 21, "ComputationInfo",
 CellID->2017642075],
Cell[1885795, 41274, 152, 3, 21, "ComputationResult",
 CellID->2114372135]
}, Open  ]],
Cell[CellGroupData[{
Cell[1885984, 41282, 410, 12, 44, "Computation",
 CellID->592100458],
Cell[1886397, 41296, 13665, 290, 21, "ComputationInfo",
 CellID->884123327],
Cell[1900065, 41588, 336, 6, 21, "ComputationResult",
 CellID->1755404140]
}, Open  ]],
Cell[CellGroupData[{
Cell[1900438, 41599, 480, 13, 44, "Computation",
 CellID->187030324],
Cell[1900921, 41614, 13665, 290, 21, "ComputationInfo",
 CellID->549483024],
Cell[1914589, 41906, 342, 6, 21, "ComputationResult",
 CellID->1544758130]
}, Open  ]],
Cell[CellGroupData[{
Cell[1914968, 41917, 269, 7, 34, "Computation",
 CellID->89852945],
Cell[1915240, 41926, 13666, 290, 21, "ComputationInfo",
 CellID->2138117033],
Cell[1928909, 42218, 401, 7, 21, "ComputationResult",
 CellID->234993665]
}, Open  ]],
Cell[CellGroupData[{
Cell[1929347, 42230, 439, 12, 44, "Computation",
 CellID->674039753],
Cell[1929789, 42244, 13665, 290, 21, "ComputationInfo",
 CellID->577323838],
Cell[1943457, 42536, 265, 5, 21, "ComputationResult",
 CellID->247098083]
}, Open  ]],
Cell[CellGroupData[{
Cell[1943759, 42546, 390, 8, 56, "Computation",
 CellID->1383310812],
Cell[1944152, 42556, 13666, 290, 21, "ComputationInfo",
 CellID->1505144884],
Cell[1957821, 42848, 384, 9, 21, "ComputationResult",
 CellID->801830326]
}, Open  ]],
Cell[CellGroupData[{
Cell[1958242, 42862, 546, 15, 55, "Computation",
 CellID->1361488053],
Cell[1958791, 42879, 13665, 290, 21, "ComputationInfo",
 CellID->889713231],
Cell[1972459, 43171, 219, 4, 21, "ComputationResult",
 CellID->1331558843]
}, Open  ]],
Cell[CellGroupData[{
Cell[1972715, 43180, 680, 17, 34, "Computation",
 CellID->1131211602],
Cell[1973398, 43199, 13666, 290, 21, "ComputationInfo",
 CellID->1731679621],
Cell[1987067, 43491, 150, 3, 21, "ComputationResult",
 CellID->1240500309]
}, Open  ]],
Cell[CellGroupData[{
Cell[1987254, 43499, 254, 6, 34, "Computation",
 CellID->767784497],
Cell[1987511, 43507, 13666, 290, 21, "ComputationInfo",
 CellID->1705875408],
Cell[2001180, 43799, 181, 5, 21, "ComputationResult",
 CellID->2022978915]
}, Open  ]],
Cell[CellGroupData[{
Cell[2001398, 43809, 306, 8, 34, "Computation",
 CellID->544396467],
Cell[2001707, 43819, 13665, 290, 21, "ComputationInfo",
 CellID->266072581],
Cell[2015375, 44111, 379, 7, 21, "ComputationResult",
 CellID->319814456]
}, Open  ]],
Cell[CellGroupData[{
Cell[2015791, 44123, 412, 8, 56, "Computation",
 CellID->1993660762],
Cell[2016206, 44133, 13664, 290, 21, "ComputationInfo",
 CellID->616373060],
Cell[2029873, 44425, 527, 11, 21, "ComputationResult",
 CellID->292963897]
}, Open  ]],
Cell[CellGroupData[{
Cell[2030437, 44441, 414, 9, 34, "Computation",
 CellID->457288880],
Cell[2030854, 44452, 13666, 290, 21, "ComputationInfo",
 CellID->1634378575],
Cell[2044523, 44744, 296, 8, 21, "ComputationResult",
 CellID->1260872225]
}, Open  ]],
Cell[CellGroupData[{
Cell[2044856, 44757, 293, 7, 34, "Computation",
 CellID->722708850],
Cell[2045152, 44766, 13666, 290, 21, "ComputationInfo",
 CellID->1463826031],
Cell[2058821, 45058, 325, 8, 21, "ComputationResult",
 CellID->239630085]
}, Open  ]],
Cell[CellGroupData[{
Cell[2059183, 45071, 392, 11, 44, "Computation",
 CellID->1297805322],
Cell[2059578, 45084, 13666, 290, 21, "ComputationInfo",
 CellID->1487353949],
Cell[2073247, 45376, 264, 5, 21, "ComputationResult",
 CellID->1497683316]
}, Open  ]],
Cell[CellGroupData[{
Cell[2073548, 45386, 546, 15, 55, "Computation",
 CellID->1769218548],
Cell[2074097, 45403, 13665, 290, 21, "ComputationInfo",
 CellID->786936030],
Cell[2087765, 45695, 216, 4, 21, "ComputationResult",
 CellID->408114411]
}, Open  ]],
Cell[CellGroupData[{
Cell[2088018, 45704, 535, 15, 55, "Computation",
 CellID->119552512],
Cell[2088556, 45721, 13666, 290, 21, "ComputationInfo",
 CellID->1205593905],
Cell[2102225, 46013, 148, 3, 21, "ComputationResult",
 CellID->843168593]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
