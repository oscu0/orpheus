(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[   2702276,      60073]
NotebookOptionsPosition[   2627408,      58002]
NotebookOutlinePosition[   2655172,      58584]
CellTagsIndexPosition[   2655129,      58581]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Categorization", "CategorizationSection",
 CellID->1122911449],

Cell["Tutorial", "Categorization",
 CellID->686433507],

Cell["Theorema", "Categorization",
 CellID->605800465],

Cell["Theorema`", "Categorization",
 CellID->468444828],

Cell["Theorema/tutorial/FirstSteps", "Categorization",
 CellID->1819557397],

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<Theorema`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.567326002528344*^9, 3.567326010879197*^9}, {
  3.567774180971486*^9, 3.567774182427346*^9}},
 CellID->1389274561]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sets :", "Title",
 CellChangeTimes->{{3.5647992478561535`*^9, 3.5647992496501565`*^9}, {
  3.5647993612839527`*^9, 3.564799362141954*^9}},
 CellID->188839656],

Cell[TextData[StyleBox["Representation of sets", "Subtitle"]], "Subtitle",
 CellChangeTimes->{{3.5647993663071613`*^9, 3.5647993743255754`*^9}, 
   3.564819591049444*^9},
 CellID->1569253126],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", "}"}]], "Computation",
 CellChangeTimes->{3.564974636179589*^9},
 CellID->1273021980],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614714363175*^9},
 CellID->1216494575],

Cell[BoxData[
 FormBox["\<\"\[EmptySet]\"\>", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.564974639118182*^9, 3.567310435295809*^9, 
  3.567400056459129*^9, 3.567437542579645*^9, 3.567437728864272*^9, 
  3.567477938550075*^9, 3.567567867800018*^9, 3.567921584886557*^9, 
  3.568081680851837*^9, 3.568102845937628*^9, 3.568614714448708*^9},
 CellID->1767109919]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "6", ",", "6", ",", "34"}], "}"}]], "Computation",
 CellChangeTimes->{
  3.564974654452762*^9, {3.567438315489233*^9, 3.567438315913468*^9}, {
   3.568463572335785*^9, 3.56846357593446*^9}},
 CellID->1878277702],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614716381046*^9},
 CellID->52661699],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"3", ",", "6", ",", "34"}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567310443389373*^9, 3.567400058963492*^9, 
  3.567437544963171*^9, 3.567438318150193*^9, 3.567477941555661*^9, 
  3.567567870651151*^9, 3.567921589554438*^9, 3.568081686989167*^9, 
  3.568614716468203*^9},
 CellID->1140021654]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "6", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", "34"}], 
  "}"}]], "Computation",
 CellChangeTimes->{{3.567921619026399*^9, 3.567921631836153*^9}},
 CellID->1572154679],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614718218396*^9},
 CellID->1253535459],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"3", ",", "6", ",", "34", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567921633846593*^9, 3.568081689943021*^9, 
  3.56861471828333*^9},
 CellID->1503511104]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "6", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "7"}], "}"}]}], "}"}], ",", "34"}], 
  "}"}]], "Computation",
 CellChangeTimes->{{3.567921648003226*^9, 3.567921662019112*^9}},
 CellID->842967358],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614722744362*^9},
 CellID->1268131262],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"3", ",", "6", ",", "34", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"{", 
       RowBox[{"5", ",", "7"}], "}"}]}], "}"}]}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.56792166335421*^9, 3.568081693539098*^9, 
  3.568614722815219*^9},
 CellID->1298341455]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Element]", "\[DoubleStruckCapitalN]"}], "|", 
   RowBox[{"x", "<", " ", "10"}]}], "}"}]], "Computation",
 CellChangeTimes->{{3.564974665224676*^9, 3.564974686822465*^9}},
 CellID->824111163],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614725594747*^9},
 CellID->318187414],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{GridBox[{
      {
       RowBox[{
        StyleBox["x", "ExpressionVariable"], "\[Element]", 
        "\[DoubleStruckCapitalN]"}]}
     }], "|", 
    RowBox[{
     StyleBox["x", "ExpressionVariable"], "<", "10"}]}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.564974714316777*^9, 3.564992921934321*^9, 
  3.564993940154258*^9, 3.567310463369292*^9, 3.567329480077676*^9, 
  3.567400062119853*^9, 3.567437547707098*^9, 3.567477944244065*^9, 
  3.567567872874561*^9, 3.567921593758903*^9, 3.568081696903348*^9, 
  3.568357632710669*^9, 3.568614725641311*^9},
 CellID->1067565722]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Element]", 
   RowBox[{"\[DoubleStruckCapitalN]", ":", 
    RowBox[{"x", ">", " ", "10"}]}]}], "}"}]], "Computation",
 CellChangeTimes->{
  3.564974691213666*^9, {3.56731065389699*^9, 3.567310654679208*^9}},
 CellID->1621296322],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614727643198*^9},
 CellID->1935998580],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"x", "\[Element]", 
    RowBox[{"(", 
     RowBox[{
      StyleBox["\[DoubleStruckCapitalN]", "ExpressionVariable"], 
      UnderscriptBox["|", 
       StyleBox["\[DoubleStruckCapitalN]", "ExpressionVariable"]], 
      RowBox[{"x", ">", "10"}]}], ")"}]}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.564974716332172*^9, 3.567310469420713*^9, 
  3.567310656468732*^9, 3.567400064446843*^9, 3.567437551550793*^9, 
  3.567437732163782*^9, 3.56747794926301*^9, 3.567567875612699*^9, 
  3.567921600462702*^9, 3.568081707927857*^9, 3.568614727692297*^9},
 CellID->1600909742]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Element]", 
    RowBox[{"{", 
     RowBox[{
     "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15"}], 
     "}"}]}], "|", 
   RowBox[{"x", ">", " ", "12"}]}], "}"}]], "Computation",
 CellChangeTimes->{3.564974696258644*^9},
 CellID->1503515645],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614745213347*^9},
 CellID->287607725],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"13", ",", "14", ",", "15"}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.567477957030119*^9, 3.567567892937375*^9, 3.567921602636237*^9, 
   3.568081711922418*^9, {3.56861472987543*^9, 3.568614745269198*^9}},
 CellID->1348496564]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Element]", 
    RowBox[{"{", 
     RowBox[{
     "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15"}], 
     "}"}]}], ":", 
   RowBox[{"x", ">", " ", "12"}]}], "}"}]], "Computation",
 CellChangeTimes->{{3.567310680027612*^9, 3.567310682549819*^9}},
 CellID->1380744781],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614748550124*^9},
 CellID->860860231],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"13", ",", "14", ",", "15"}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.568081717254173*^9, {3.56861473213267*^9, 3.568614748590945*^9}},
 CellID->2137571769]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Element]", 
    RowBox[{"{", 
     RowBox[{
     "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15"}], 
     "}"}]}], "|", 
   RowBox[{
    RowBox[{"x", ">", " ", "12"}], "\[And]", " ", 
    RowBox[{"x", " ", "<", " ", "17"}]}]}], "}"}]], "Computation",
 CellChangeTimes->{
  3.567310506477412*^9, {3.567310544471395*^9, 3.567310596194607*^9}},
 CellID->848667570],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614751262963*^9},
 CellID->954281383],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"13", ",", "14", ",", "15"}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.567310578730134*^9, 3.567310598368577*^9}, 
   3.567400070659456*^9, 3.567437560508122*^9, 3.567477976775688*^9, 
   3.567567899188672*^9, 3.567921607373904*^9, 3.568081726095689*^9, 
   3.568614751297159*^9},
 CellID->290153929]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Element]", 
    RowBox[{"{", 
     RowBox[{
     "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15"}], 
     "}"}]}], ":", 
   RowBox[{
    RowBox[{"x", ">", " ", "12"}], "\[And]", " ", 
    RowBox[{"x", " ", "<", " ", "17"}]}]}], "}"}]], "Computation",
 CellChangeTimes->{{3.568081737503829*^9, 3.56808174071432*^9}},
 CellID->1896695507],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614753621678*^9},
 CellID->1741907046],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"13", ",", "14", ",", "15"}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.56808174220481*^9, 3.568614753647777*^9},
 CellID->355165771]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "+", "2"}], 
   UnderscriptBox["|", "x"], 
   RowBox[{"x", "<", "5"}]}], "}"}]], "Computation",
 CellChangeTimes->{
  3.564974777431381*^9, {3.564989718853776*^9, 3.564989725843226*^9}, {
   3.567921741898344*^9, 3.567921743102596*^9}},
 CellID->929522843],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614756731574*^9},
 CellID->254838411],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"2", "+", 
     StyleBox["x", "ExpressionVariable"]}], 
    UnderscriptBox["|", 
     StyleBox["x", "ExpressionVariable"]], 
    RowBox[{
     StyleBox["x", "ExpressionVariable"], "<", "5"}]}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567437564963453*^9, 3.567477980842906*^9, 
  3.56756790342717*^9, 3.567921744668163*^9, 3.568081747089389*^9, 
  3.568614756767678*^9},
 CellID->615043112]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "*", "2"}], 
   UnderscriptBox["|", 
    RowBox[{
     RowBox[{"a", "=", "1"}], ",", "\[Ellipsis]", ",", "2"}]]}], 
  "}"}]], "Computation",
 CellChangeTimes->{{3.567404441454948*^9, 3.567404477888511*^9}, {
  3.568613755737692*^9, 3.568613756164342*^9}},
 CellID->1177514522],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.56861476038679*^9},
 CellID->1201736512],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"2", " ", "x"}], "}"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.567404466812636*^9, 3.567404479518389*^9}, 
   3.567437569460378*^9, 3.567477985013757*^9, 3.567567906488242*^9, 
   3.568614760415865*^9},
 CellID->1471332986]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"2", "*", "x"}], 
   UnderscriptBox["|", "x"]}], "}"}]], "Computation",
 CellChangeTimes->{3.56861389074038*^9},
 CellID->1670877211],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614762932962*^9},
 CellID->234669383],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"2", " ", 
     StyleBox["x", "ExpressionVariable"]}], 
    UnderscriptBox["|", 
     StyleBox["x", "ExpressionVariable"]]}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568614763032909*^9},
 CellID->1254398211]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "+", "3"}], 
   UnderscriptBox["|", 
    RowBox[{"x", "\[Element]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
      "}"}]}]], 
   RowBox[{"x", "<", "5"}]}], "}"}]], "Computation",
 CellChangeTimes->{{3.567310617583403*^9, 3.567310625643222*^9}, {
  3.567310760261155*^9, 3.567310855253317*^9}},
 CellID->1167291697],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614765951921*^9},
 CellID->463870993],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"4", ",", "5", ",", "6", ",", "7"}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.567310800546644*^9, 3.567310856871898*^9}, 
   3.567400075212288*^9, 3.56743757212781*^9, 3.567477988140037*^9, 
   3.567567909546453*^9, 3.567921763202533*^9, 3.568081833913516*^9, 
   3.568614765986298*^9},
 CellID->1488204843]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "+", "3"}], 
   UnderscriptBox["|", 
    RowBox[{
     RowBox[{"x", "=", "2"}], ",", "\[Ellipsis]", ",", "5"}]], 
   RowBox[{"x", "<", "5"}]}], "}"}]], "Computation",
 CellChangeTimes->{{3.568081861305936*^9, 3.5680818920118*^9}},
 CellID->1456255416],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614768009912*^9},
 CellID->610425667],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"5", ",", "6", ",", "7"}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568081893542051*^9, 3.568614768036549*^9},
 CellID->1732002255]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "+", "3"}], 
   UnderscriptBox[":", 
    RowBox[{
     RowBox[{"x", "=", "2"}], ",", "\[Ellipsis]", ",", "5"}]], 
   RowBox[{"x", "<", "5"}]}], "}"}]], "Computation",
 CellChangeTimes->{{3.568081927982583*^9, 3.568081933192583*^9}},
 CellID->183689803],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614770216657*^9},
 CellID->639062650],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"5", ",", "6", ",", "7"}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.56808193480346*^9, 3.568614770238864*^9},
 CellID->928613082]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "+", "3"}], 
   UnderscriptBox["|", 
    RowBox[{"even", "[", "x", "]"}]], 
   RowBox[{"x", "<", "5"}]}], "}"}]], "Computation",
 CellChangeTimes->{{3.56759786952073*^9, 3.56759791669371*^9}},
 CellID->1417934082],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614772418422*^9},
 CellID->760483010],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"3", "+", 
     StyleBox["x", "ExpressionVariable"]}], 
    UnderscriptBox["|", GridBox[{
       {
        RowBox[{"even", "[", 
         StyleBox["x", "ExpressionVariable"], "]"}]}
      }]], 
    RowBox[{
     StyleBox["x", "ExpressionVariable"], "<", "5"}]}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.567597894749122*^9, 3.56759792062881*^9}, 
   3.567921765739475*^9, 3.5680819119334*^9, 3.5686147724379*^9},
 CellID->1706628372]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Equality of sets", "Subtitle"]], "Subtitle",
 CellChangeTimes->{{3.5648001145312757`*^9, 3.5648001195856843`*^9}, 
   3.564819591050119*^9},
 CellID->2038456024],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "5"}], "}"}], "==", 
  RowBox[{"{", 
   RowBox[{"5", ",", "1", ",", "2"}], "}"}]}]], "Computation",
 CellChangeTimes->{
  3.567417239837108*^9, 3.567417388631228*^9, 3.567417633807561*^9, {
   3.567436989086414*^9, 3.567436990947371*^9}, {3.567437742922565*^9, 
   3.567437760849545*^9}, {3.567442736296047*^9, 3.567442745934964*^9}},
 CellID->293421284],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614775754726*^9},
 CellID->1493942197],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.567775050084166*^9, 3.567775062156471*^9}, 
   3.567775168459876*^9, 3.567775458252018*^9, 3.567921771951213*^9, 
   3.568081974133307*^9, 3.568614775814961*^9},
 CellID->548997942]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "5"}], "}"}], "==", 
  RowBox[{"{", 
   RowBox[{"2", ",", "2", ",", "5", ",", "6", ",", "7"}], "}"}], "\[Equal]", 
  RowBox[{"{", 
   RowBox[{"3", ",", "6", ",", "8"}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.56748524543064*^9, 3.567485269573651*^9}},
 CellID->1903370454],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614781672304*^9},
 CellID->2084974537],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568614781768936*^9},
 CellID->142630592]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"2", ",", "1"}], "}"}], "==", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "2"}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.56748528923463*^9, 3.567485302764172*^9}},
 CellID->109315499],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614791163569*^9},
 CellID->1440701483],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567499066280117*^9, 3.567567922959489*^9, 
  3.56777517479169*^9, 3.567922025282546*^9, 3.56808214498636*^9, 
  3.568614791211424*^9},
 CellID->843935768]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"2", ",", "4"}], "}"}], "\[Equal]", 
  RowBox[{"{", 
   RowBox[{"2", ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}], ",", "4"}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.567922033758198*^9, 3.567922051453911*^9}},
 CellID->90524530],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614792798246*^9},
 CellID->1556444300],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567922054091739*^9, 3.568082148390637*^9, 
  3.568614792833245*^9},
 CellID->294199137]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"2", ",", "4", ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "3"}], "}"}]}], "}"}], "\[Equal]", 
  RowBox[{"{", 
   RowBox[{"2", ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}], ",", "4"}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.56792346732581*^9, 3.567923474928285*^9}},
 CellID->88362643],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614795992892*^9},
 CellID->402095003],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568614796077*^9},
 CellID->2006572318]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"2", ",", "x", ",", "5"}], "}"}], "==", 
  RowBox[{"{", 
   RowBox[{"5", ",", "1", ",", "2"}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.567485320967177*^9, 3.567485325748146*^9}},
 CellID->252526170],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614803505431*^9},
 CellID->1604656779],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.56808215983971*^9, 3.568614803528363*^9},
 CellID->1562760589]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"2", ",", "x", ",", "5"}], "}"}], "==", 
  RowBox[{"{", 
   RowBox[{"5", ",", "x", ",", "2"}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.56748533725493*^9, 3.567485355788207*^9}},
 CellID->1525746980],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614805341614*^9},
 CellID->1682793148],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567485358820291*^9, 3.567485723283593*^9, 
  3.567488638396645*^9, 3.567496064747365*^9, 3.56749907676567*^9, 
  3.567567933863012*^9, 3.567922061101599*^9, 3.568082186341395*^9, 
  3.568357640327214*^9, 3.568614805369294*^9},
 CellID->314036197]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"2", ",", "2", ",", "x", ",", "5"}], "}"}], "==", 
  RowBox[{"{", 
   RowBox[{"x", ",", "5", ",", "5", ",", "2"}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.567485367399269*^9, 3.567485382497698*^9}},
 CellID->272418589],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614810320288*^9},
 CellID->908397136],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567485385680785*^9, 3.567485726123612*^9, 
  3.567488641353895*^9, 3.567496067100993*^9, 3.567499080614087*^9, 
  3.567567936589361*^9, 3.567922063934781*^9, 3.5680821912744*^9, 
  3.568614810442686*^9},
 CellID->1036640716]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2"}], "}"}], "==", 
  RowBox[{"{", 
   RowBox[{"2", ",", "2"}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.567417345374411*^9, 3.567417348141654*^9}, {
   3.567417378742896*^9, 3.567417380012488*^9}, 3.567417642641183*^9, {
   3.567417675383887*^9, 3.567417688670615*^9}, {3.567447843775218*^9, 
   3.567447850022644*^9}},
 CellID->802946120],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614811684208*^9},
 CellID->1596439073],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.567417359014367*^9, 3.567417380962282*^9}, {
   3.567417644180776*^9, 3.56741768963303*^9}, 3.567417888526682*^9, 
   3.567437240387619*^9, 3.567437282069692*^9, 3.567437597330524*^9, 
   3.567437770394405*^9, 3.567441477148747*^9, 3.567442726107029*^9, 
   3.567447851992141*^9, 3.567485009047148*^9, 3.567485730947253*^9, 
   3.567488645236488*^9, 3.567496070468114*^9, 3.567499083307403*^9, 
   3.56756794099074*^9, 3.567922066364457*^9, 3.568082235981064*^9, 
   3.568614811791882*^9},
 CellID->1754772178]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"2", ",", "2", ",", "x", ",", "5"}], "}"}], "==", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Theorema`Language`VAR$", "[", "Theorema`Knowledge`x$TM", "]"}], 
    ",", "5", ",", "5", ",", "2"}], "}"}]}]], "Computation",
 CellChangeTimes->{3.567488679458432*^9, 3.567488714187647*^9},
 CellID->2092827292],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614813396862*^9},
 CellID->365557950],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "x"}], "}"}], "\[Equal]", 
   StyleBox[
    RowBox[{"{", 
     RowBox[{
      StyleBox["x", "ExpressionVariable"], ",", "5", ",", "5", ",", "2"}], 
     "}"}], "ExpressionVariable"]}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.56748871745592*^9, 3.567496072923885*^9, 
  3.567499086660393*^9, 3.567567948931939*^9, 3.568082238252608*^9, 
  3.568357644423614*^9, 3.568614813484421*^9},
 CellID->1399980292]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"2", ",", "2", ",", "5"}], "}"}], "==", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Theorema`Language`VAR$", "[", "Theorema`Knowledge`x$TM", "]"}], 
    ",", "5", ",", "5", ",", "2"}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.567488743146351*^9, 3.567488748348004*^9}},
 CellID->778693881],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.56861481542878*^9},
 CellID->1574080107],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "5"}], "}"}], "\[Equal]", 
   StyleBox[
    RowBox[{"{", 
     RowBox[{
      StyleBox["x", "ExpressionVariable"], ",", "5", ",", "5", ",", "2"}], 
     "}"}], "ExpressionVariable"]}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567488750856106*^9, 3.567496075792362*^9, 
  3.567499089582183*^9, 3.568082241404705*^9, 3.568614815502633*^9},
 CellID->1025078057]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "4"}]], 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "5"}], "}"}], "==", 
   RowBox[{"{", 
    RowBox[{"x", ",", "5", ",", "5", ",", "2"}], "}"}]}]}]], "Computation",
 CellChangeTimes->{{3.567489327363725*^9, 3.567489330897743*^9}, 
   3.567489374189018*^9, 3.567489498919066*^9, 3.567489559251083*^9},
 CellID->265514939],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.56861481714397*^9},
 CellID->2084316496],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567496459566027*^9, 3.567922073173613*^9, 
  3.568082245430146*^9, 3.568614817221312*^9},
 CellID->2013255540]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"x", "\[Element]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "5"}], "}"}]}]], 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "5"}], "}"}], "==", 
   RowBox[{"{", 
    RowBox[{"x", ",", "5", ",", "5", ",", "2"}], "}"}]}]}]], "Computation",
 CellChangeTimes->{3.567498925190588*^9},
 CellID->994056526],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614818847897*^9},
 CellID->952230954],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.5674989273657*^9, 3.567498934149132*^9}, 
   3.568082260858267*^9, 3.568614818918849*^9},
 CellID->326346606]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Exists]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "4"}]], 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "5"}], "}"}], "==", 
   RowBox[{"{", 
    RowBox[{"x", ",", "5", ",", "5", ",", "2"}], "}"}]}]}]], "Computation",
 CellChangeTimes->{{3.567489597523609*^9, 3.567489647057255*^9}},
 CellID->454794527],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614820522305*^9},
 CellID->1918207991],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.567489653826629*^9, 3.567489765641644*^9, 3.5674965067286*^9, {
   3.56749656865967*^9, 3.567496585835408*^9}, 3.568082956639674*^9, 
   3.568614820587427*^9},
 CellID->780528149]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Exists]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "6"}]], 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "+", "2"}], 
     UnderscriptBox["|", 
      RowBox[{
       RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "4"}]], 
     RowBox[{"x", ">", "2"}]}], "}"}], "==", 
   RowBox[{"{", 
    RowBox[{"x", ",", "5", ",", "5"}], "}"}]}]}]], "Computation",
 CellChangeTimes->{3.568614000445752*^9},
 CellID->392099232],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614822063737*^9},
 CellID->405474952],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568614822164509*^9},
 CellID->72337867]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Element]", "\[DoubleStruckCapitalN]"}], "|", 
    RowBox[{"x", "<", " ", "12"}]}], "}"}], "\[Equal]", 
  RowBox[{"{", 
   RowBox[{
   "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
    ",", "9", ",", "10", ",", "11"}], "}"}]}]], "Computation",
 CellChangeTimes->{3.564974827397402*^9},
 CellID->396310800],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614823766165*^9},
 CellID->1286111740],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"{", 
    RowBox[{GridBox[{
       {
        RowBox[{
         StyleBox["x", "ExpressionVariable"], "\[Element]", 
         "\[DoubleStruckCapitalN]"}]}
      }], "|", 
     RowBox[{
      StyleBox["x", "ExpressionVariable"], "<", "12"}]}], "}"}], "\[Equal]", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8",
      ",", "9", ",", "10", ",", "11"}], "}"}]}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.564974842009618*^9, 3.567417265446724*^9, 
  3.567417658690145*^9, 3.567417896634585*^9, 3.567485748905402*^9, 
  3.567488653319772*^9, 3.568082986945625*^9, 3.568614823805696*^9},
 CellID->1492631702]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Element]", "\[DoubleStruckCapitalN]"}], "|", 
    RowBox[{"x", ">", " ", "4"}]}], "}"}], "\[Equal]", 
  RowBox[{"\[DoubleStruckCapitalN]", 
   StyleBox["\[Backslash]", "OperatorCharacter"], 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}]], "Computation",
 CellChangeTimes->{3.564974831457656*^9, 3.567417289752266*^9},
 CellID->788042732],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614825558836*^9},
 CellID->2077216428],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"{", 
    RowBox[{GridBox[{
       {
        RowBox[{
         StyleBox["x", "ExpressionVariable"], "\[Element]", 
         "\[DoubleStruckCapitalN]"}]}
      }], "|", 
     RowBox[{
      StyleBox["x", "ExpressionVariable"], ">", "4"}]}], "}"}], "\[Equal]", 
   RowBox[{"\[DoubleStruckCapitalN]", "\[Backslash]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567417291846189*^9, 3.56741765419375*^9, 
  3.567485754585675*^9, 3.567488656852872*^9, 3.568082990037483*^9, 
  3.568614825587751*^9},
 CellID->1527878498]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Operations on sets: Union, Intersection, Difference, Symmetric Difference, \
Cartesian product\
\>", "Subtitle",
 CellChangeTimes->{{3.5648002085994406`*^9, 3.564800213279449*^9}, 
   3.564819591050637*^9, {3.564820126587792*^9, 3.564820173299366*^9}, {
   3.564823636806193*^9, 3.564823644924546*^9}, {3.56732861834214*^9, 
   3.567328620773668*^9}},
 CellID->1129113613],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", "}"}], "\[Union]", " ", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.564993003308306*^9, 3.564993008955973*^9}},
 CellID->734290670],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614830558481*^9},
 CellID->1146253074],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.564993010847544*^9, 3.567315508947988*^9, 3.567315884191082*^9, {
   3.567315993940889*^9, 3.567316018287807*^9}, 3.567400092101495*^9, 
   3.567400573895411*^9, 3.567404501127244*^9, 3.567405684216274*^9, 
   3.56741126491447*^9, 3.567411667902088*^9, 3.567411787755691*^9, 
   3.567411854591092*^9, 3.567412100934123*^9, 3.567477997308352*^9, 
   3.567566829793839*^9, 3.567566901670658*^9, 3.567567108930698*^9, 
   3.567567966464641*^9, 3.567922089494342*^9, 3.568092017804531*^9, 
   3.568102857112498*^9, 3.568614830671511*^9},
 CellID->1886093191]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", "}"}], "\[Union]", " ", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}], "\[Union]", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "6"}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.564993065646*^9, 3.564993076518728*^9}, {
  3.568092030023846*^9, 3.568092031207604*^9}},
 CellID->1890117088],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.5686148323218*^9},
 CellID->985051629],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.567404506661058*^9, 3.567405686647382*^9, 3.567411267938287*^9, 
   3.567411671073361*^9, 3.567411857250615*^9, 3.567412103081477*^9, 
   3.567478000408393*^9, 3.567567971561167*^9, 3.567922093871122*^9, {
   3.568092022064203*^9, 3.568092032838974*^9}, 3.568614832420278*^9},
 CellID->561530016]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "\[Union]", " ", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}]}]], "Computation",
 CellChangeTimes->{3.564974887978004*^9},
 CellID->1164679536],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614834090931*^9},
 CellID->1421402691],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567405691874813*^9, 3.567411271313084*^9, 
  3.567411677560487*^9, 3.56741185980546*^9, 3.567412105138734*^9, 
  3.567478003363001*^9, 3.567566954944523*^9, 3.567567099683667*^9, 
  3.567567974431484*^9, 3.567922104284405*^9, 3.568092040283047*^9, 
  3.568614834177143*^9},
 CellID->1299087826]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "\[Union]", " ", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "4", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", "5"}], 
   "}"}]}]], "Computation",
 CellChangeTimes->{{3.568092383598058*^9, 3.568092396491547*^9}},
 CellID->27757395],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614835766687*^9},
 CellID->630606679],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568092397302654*^9, 3.568614835847783*^9},
 CellID->1041320965]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"3", ",", "4", ",", "6"}], "}"}], "\[Union]", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Element]", "\[DoubleStruckCapitalN]"}], "|", 
    RowBox[{"x", "<", " ", "10"}]}], "}"}]}]], "Computation",
 CellChangeTimes->{
  3.56497489221954*^9, {3.564989763639983*^9, 3.564989773102164*^9}},
 CellID->1173667721],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614837681466*^9},
 CellID->1763204924],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "6"}], "}"}], "\[Union]", 
   RowBox[{"{", 
    RowBox[{GridBox[{
       {
        RowBox[{
         StyleBox["x", "ExpressionVariable"], "\[Element]", 
         "\[DoubleStruckCapitalN]"}]}
      }], "|", 
     RowBox[{
      StyleBox["x", "ExpressionVariable"], "<", "10"}]}], "}"}]}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567567987653979*^9, 3.567922151570313*^9, 
  3.568092047035666*^9, 3.568614838032459*^9},
 CellID->49935183]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"3", "*", 
      RowBox[{"x", "^", "2"}]}], "+", "1"}], 
    UnderscriptBox["|", "x"]}], "}"}], "\[Union]", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Element]", "\[DoubleStruckCapitalN]"}], "|", 
    RowBox[{"x", ">", " ", "10"}]}], "}"}]}]], "Computation",
 CellChangeTimes->{
  3.564974896434603*^9, {3.564989781701043*^9, 3.564989786887055*^9}},
 CellID->1523941227],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614839613847*^9},
 CellID->154808664],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "+", 
      RowBox[{"3", " ", 
       SuperscriptBox[
        StyleBox["x", "ExpressionVariable"], "2"]}]}], 
     UnderscriptBox["|", 
      StyleBox["x", "ExpressionVariable"]]}], "}"}], "\[Union]", 
   RowBox[{"{", 
    RowBox[{GridBox[{
       {
        RowBox[{
         StyleBox["x", "ExpressionVariable"], "\[Element]", 
         "\[DoubleStruckCapitalN]"}]}
      }], "|", 
     RowBox[{
      StyleBox["x", "ExpressionVariable"], ">", "10"}]}], "}"}]}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.564974979280516*^9, 3.564989789871124*^9, 
  3.564992852782735*^9, 3.567315536432635*^9, 3.56731590793134*^9, 
  3.567316037502502*^9, 3.567400103226919*^9, 3.567404519275878*^9, 
  3.567405701144111*^9, 3.567411276743281*^9, 3.567411683212625*^9, 
  3.567411864735388*^9, 3.567412112804676*^9, 3.567478013461659*^9, 
  3.567567996482771*^9, 3.567922154363211*^9, 3.568092053607953*^9, 
  3.568614839684343*^9},
 CellID->524118412]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"3", ",", "4", ",", "6"}], "}"}], "\[Union]", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Element]", 
     RowBox[{"{", 
      RowBox[{
      "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15"}],
       "}"}]}], "|", 
    RowBox[{"x", ">", " ", "12"}]}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.567922165311834*^9, 3.567922194698681*^9}},
 CellID->1972108085],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614841381262*^9},
 CellID->1086575900],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"3", ",", "4", ",", "6", ",", "13", ",", "14", ",", "15"}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567922196419649*^9, 3.568092058418628*^9, 
  3.568614841441133*^9},
 CellID->1751247737]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"3", ",", "4", ",", "6"}], "}"}], "\[Union]", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "+", "2"}], 
    UnderscriptBox["|", 
     RowBox[{
      RowBox[{"x", "=", "10"}], ",", "\[Ellipsis]", ",", "14"}]]}], 
   "}"}]}]], "Computation",
 CellChangeTimes->{{3.568092087988158*^9, 3.56809215343817*^9}},
 CellID->1710022929],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614843480936*^9},
 CellID->131406942],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "3", ",", "4", ",", "6", ",", "12", ",", "13", ",", "14", ",", "15", ",", 
    "16"}], "}"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.568092142784782*^9, 3.568092155194553*^9}, 
   3.568614843529366*^9},
 CellID->1452133850]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "3", ",", "x"}], "}"}], "\[Union]", " ", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3"}], "}"}]}]], "Computation",
 CellChangeTimes->{3.567315564408016*^9, 3.567315614776196*^9},
 CellID->416662402],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614845401782*^9},
 CellID->1003744381],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "x"}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567411689436153*^9, 3.567411867497171*^9, 
  3.567412115201987*^9, 3.567416700128981*^9, 3.567416759531461*^9, 
  3.567478017276295*^9, 3.567922200975939*^9, 3.568092171617159*^9, 
  3.568614845438318*^9},
 CellID->1705487050]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "3", ",", "x"}], "}"}], "\[Union]", " ", 
  RowBox[{"{", 
   RowBox[{"2", ",", "x"}], "}"}]}]], "Computation",
 CellChangeTimes->{
  3.5673155805686*^9, 3.56731561614501*^9, {3.567411870612151*^9, 
   3.567411878629296*^9}},
 CellID->2008702714],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614846997802*^9},
 CellID->329728260],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "x"}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567412120955635*^9, 3.567416763626929*^9, 
  3.567478021903454*^9, 3.56792220337835*^9, 3.568092175775383*^9, 
  3.568614847037341*^9},
 CellID->940577230]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "3", ",", 
    RowBox[{"Theorema`Language`VAR$", "[", "Theorema`Knowledge`x$TM", "]"}]}],
    "}"}], "\[Union]", " ", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "x"}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.56731560938307*^9, 3.567315618578414*^9}},
 CellID->1779189124],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614850765979*^9},
 CellID->1571258942],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox[
    RowBox[{"{", 
     RowBox[{"1", ",", "3", ",", 
      StyleBox["x", "ExpressionVariable"]}], "}"}], "ExpressionVariable"], 
   "\[Union]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "x"}], "}"}]}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.567315646896064*^9, {3.567315923535369*^9, 3.567315926880332*^9}, 
   3.567316070486357*^9, 3.5674001117867*^9, 3.567404530941784*^9, 
   3.567405711070409*^9, {3.567406917435824*^9, 3.5674069461123*^9}, {
   3.567411296192665*^9, 3.567411306705076*^9}, 3.56741170029351*^9, {
   3.567411882687289*^9, 3.567411885411158*^9}, {3.567412128459362*^9, 
   3.567412158017523*^9}, 3.567416766197234*^9, 3.567478025309308*^9, 
   3.568614850860306*^9},
 CellID->1281959214]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "3", ",", "x"}], "}"}], "\[Union]", " ", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], 
   UnderscriptBox["|", 
    RowBox[{
     RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "3"}]]}], 
  "}"}]], "Computation",
 CellChangeTimes->{
  3.567315687858728*^9, 3.567315727571659*^9, {3.567404548191797*^9, 
   3.567404568587101*^9}, {3.567405848980619*^9, 3.567405851339864*^9}, 
   3.567406838231568*^9, {3.567406897679579*^9, 3.567406898720507*^9}, {
   3.567412386024455*^9, 3.567412386368054*^9}, {3.567478100986988*^9, 
   3.56747811956106*^9}},
 CellID->1142971750],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614852460619*^9},
 CellID->1266923836],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.56741223822522*^9, 3.567412257051305*^9}, 
   3.567412389454374*^9, 3.567416770569093*^9, {3.567478076262921*^9, 
   3.567478123437509*^9}, 3.567478433745531*^9, 3.568092195121686*^9, 
   3.568614852557249*^9},
 CellID->1341983285]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "x"}], "}"}], 
   UnderscriptBox["|", GridBox[{
      {
       RowBox[{
        RowBox[{
         StyleBox["x", "ExpressionVariable"], "=", "10"}], ",", "\[Ellipsis]",
         ",", "12"}]}
     }]]}], "}"}]], "Computation",
 CellChangeTimes->{
  3.567411331743277*^9, {3.567507888304745*^9, 3.567507912071782*^9}},
 CellID->676048503],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614854031426*^9},
 CellID->2062487363],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "10"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "11"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "12"}], "}"}]}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567507914886436*^9, 3.568092212307164*^9, 
  3.568614854114387*^9},
 CellID->1672398789]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "3", ",", "x"}], "}"}], "\[Union]", " ", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], 
   UnderscriptBox["|", 
    RowBox[{"x", "\[Element]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}]]}], "}"}]], "Computation",
 CellChangeTimes->{{3.567405755190045*^9, 3.567405782449302*^9}},
 CellID->685198312],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614855812565*^9},
 CellID->1414321152],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.567405779584761*^9, 3.567405783059058*^9}, 
   3.567406115565068*^9, 3.56740684452387*^9, 3.567411363368872*^9, {
   3.567412368845766*^9, 3.56741237796489*^9}, 3.567416793046845*^9, 
   3.567478136562766*^9, {3.567478172704607*^9, 3.567478180894922*^9}, {
   3.567478444193852*^9, 3.567478447682604*^9}, 3.568614855887971*^9},
 CellID->1201115456]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"4", ",", "35", ",", "x"}], "}"}], "\[Intersection]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"4", ",", "7"}], "}"}], "\[Union]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "+", "3"}], 
        UnderscriptBox["|", 
         RowBox[{"x", "\[Element]", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
           "}"}]}]], 
        RowBox[{"x", "<", "5"}]}], "}"}]}], ")"}]}], 
   UnderscriptBox["|", 
    RowBox[{
     RowBox[{"x", "=", "3"}], ",", "\[Ellipsis]", ",", "5"}]]}], 
  "}"}]], "Computation",
 CellChangeTimes->{3.56861426609348*^9},
 CellID->2089156671],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614857823354*^9},
 CellID->1017546843],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "4", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5"}], "}"}]}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.56861426895797*^9, 3.568614857896852*^9},
 CellID->1344053932]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", "}"}], "\[Intersection]", " ", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.564993033312913*^9, 3.564993041244614*^9}},
 CellID->184615915],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614859694339*^9},
 CellID->581510306],

Cell[BoxData[
 FormBox["\<\"\[EmptySet]\"\>", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.564993043281038*^9, 3.567313464691323*^9, 3.567314140927148*^9, 
   3.567314319526502*^9, {3.567399985646085*^9, 3.567400000535314*^9}, 
   3.567400084123216*^9, 3.567400458920346*^9, {3.567400581225171*^9, 
   3.567400593024249*^9}, 3.567400884019299*^9, 3.567400989158678*^9, 
   3.567401085640669*^9, 3.567402338579603*^9, 3.567402380152583*^9, 
   3.567405473203628*^9, 3.567478143655056*^9, 3.567568002895366*^9, 
   3.567922637703014*^9, 3.568092320918242*^9, 3.568614859758971*^9},
 CellID->16316270]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "\[Intersection]", " ", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}]}]], "Computation",
 CellChangeTimes->{3.564974902216746*^9, 3.564989797026655*^9},
 CellID->125901644],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614863400788*^9},
 CellID->1082663476],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"2", ",", "3"}], "}"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568102865656838*^9, 3.568614863504251*^9},
 CellID->1566561935]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "\[Intersection]", " ", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}], "\[Intersection]", 
  RowBox[{"{", 
   RowBox[{"2", ",", "5", ",", "8"}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.567314333419657*^9, 3.567314345774174*^9}},
 CellID->674518000],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614865805418*^9},
 CellID->577846286],

Cell[BoxData[
 FormBox[
  RowBox[{"{", "2", "}"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568092329245232*^9, 3.56861486590118*^9},
 CellID->356582519]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "\[Intersection]", " ", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}], "\[Intersection]", 
  RowBox[{"{", 
   RowBox[{"2", ",", "5", ",", 
    RowBox[{"{", 
     RowBox[{"8", ",", "4"}], "}"}]}], "}"}]}]], "Computation",
 CellChangeTimes->{
  3.567922719869105*^9, {3.567922899142751*^9, 3.567922904413637*^9}},
 CellID->457395676],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.56861486763722*^9},
 CellID->718166113],

Cell[BoxData[
 FormBox[
  RowBox[{"{", "2", "}"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567922905348874*^9, 3.568092338159982*^9, 
  3.568614867723974*^9},
 CellID->1208452965]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", 
    RowBox[{"{", 
     RowBox[{"8", ",", "4"}], "}"}]}], "}"}], "\[Intersection]", " ", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "4", ",", "5", ",", 
    RowBox[{"{", 
     RowBox[{"8", ",", "4"}], "}"}]}], "}"}], "\[Intersection]", 
  RowBox[{"{", 
   RowBox[{"2", ",", "5", ",", 
    RowBox[{"{", 
     RowBox[{"8", ",", "4"}], "}"}]}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.567923506000984*^9, 3.567923515572254*^9}},
 CellID->2051371882],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614869464315*^9},
 CellID->1397903484],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"2", ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "8"}], "}"}]}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567923516946064*^9, 3.568092408574032*^9, 
  3.568614869545011*^9},
 CellID->333887389]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"3", "*", 
      RowBox[{"x", "^", "2"}]}], "+", "1"}], 
    UnderscriptBox["|", "x"]}], "}"}], "\[Intersection]", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Element]", "\[DoubleStruckCapitalN]"}], "|", 
    RowBox[{"x", "<", " ", "10"}]}], "}"}]}]], "Computation",
 CellChangeTimes->{
  3.564974908755143*^9, {3.564989808526693*^9, 3.564989820046993*^9}},
 CellID->1732500530],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614871870461*^9},
 CellID->1258388148],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "+", 
      RowBox[{"3", " ", 
       SuperscriptBox[
        StyleBox["x", "ExpressionVariable"], "2"]}]}], 
     UnderscriptBox["|", 
      StyleBox["x", "ExpressionVariable"]]}], "}"}], "\[Intersection]", 
   RowBox[{"{", 
    RowBox[{GridBox[{
       {
        RowBox[{
         StyleBox["x", "ExpressionVariable"], "\[Element]", 
         "\[DoubleStruckCapitalN]"}]}
      }], "|", 
     RowBox[{
      StyleBox["x", "ExpressionVariable"], "<", "10"}]}], "}"}]}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.564974984120286*^9, 3.564989822659044*^9, 3.564992803849816*^9, 
   3.567313484265636*^9, 3.567314180542647*^9, 3.567314351736042*^9, 
   3.567316427274074*^9, 3.567405481770709*^9, {3.567478165227063*^9, 
   3.567478185580504*^9}, 3.567922703140288*^9, 3.567922911520699*^9, 
   3.568092412471738*^9, 3.568614871963256*^9},
 CellID->1552712149]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"3", "*", 
      RowBox[{"x", "^", "2"}]}], "+", "1"}], 
    UnderscriptBox["|", "x"]}], "}"}], "\[Intersection]", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Element]", "\[DoubleStruckCapitalN]"}], "|", 
    RowBox[{"x", ">", " ", "10"}]}], "}"}]}]], "Computation",
 CellChangeTimes->{
  3.564974919115295*^9, {3.564989837051642*^9, 3.564989841159571*^9}},
 CellID->651077884],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614873675225*^9},
 CellID->858005801],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "+", 
      RowBox[{"3", " ", 
       SuperscriptBox[
        StyleBox["x", "ExpressionVariable"], "2"]}]}], 
     UnderscriptBox["|", 
      StyleBox["x", "ExpressionVariable"]]}], "}"}], "\[Intersection]", 
   RowBox[{"{", 
    RowBox[{GridBox[{
       {
        RowBox[{
         StyleBox["x", "ExpressionVariable"], "\[Element]", 
         "\[DoubleStruckCapitalN]"}]}
      }], "|", 
     RowBox[{
      StyleBox["x", "ExpressionVariable"], ">", "10"}]}], "}"}]}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.56497498733651*^9, 3.564989842712793*^9, 
  3.564992813927313*^9, 3.567313492592631*^9, 3.567314354638971*^9, 
  3.567400125551625*^9, 3.567405483913552*^9, 3.567478191794059*^9, 
  3.567922913697451*^9, 3.568092415368576*^9, 3.568357652056423*^9, 
  3.568614873749745*^9},
 CellID->197480400]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "3", ",", "x"}], "}"}], "\[Intersection]", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3"}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.567313601734239*^9, 3.567313617226565*^9}},
 CellID->28094770],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614876005365*^9},
 CellID->12736972],

Cell[BoxData[
 FormBox[
  RowBox[{"{", "3", "}"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567313618339671*^9, 3.567314192430909*^9, 
  3.567314357802865*^9, 3.567400129590839*^9, 3.567400892230106*^9, 
  3.567401005572591*^9, 3.567402390368595*^9, 3.567405485947167*^9, 
  3.567478194847243*^9, 3.568092418237175*^9, 3.568614876068664*^9},
 CellID->547416146]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "3", ",", 
    RowBox[{"Theorema`Language`VAR$", "[", "Theorema`Knowledge`x$TM", "]"}]}],
    "}"}], "\[Intersection]", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "x"}], "}"}]}]], "Computation",
 CellChangeTimes->{
  3.567313683371389*^9, {3.567313757680632*^9, 3.567313760007254*^9}, {
   3.567314062987326*^9, 3.567314078498359*^9}},
 CellID->232286759],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614878091883*^9},
 CellID->1979342511],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox[
    RowBox[{"{", 
     RowBox[{"1", ",", "3", ",", 
      StyleBox["x", "ExpressionVariable"]}], "}"}], "ExpressionVariable"], 
   "\[Intersection]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "x"}], "}"}]}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567401013679668*^9, 3.567402437532378*^9, 
  3.567405488263483*^9, 3.567478199722685*^9, 3.56809242154643*^9, 
  3.568614878150137*^9},
 CellID->953314202]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"4", ",", "35", ",", "x"}], "}"}], "\[Intersection]", 
    RowBox[{"{", 
     RowBox[{"4", ",", "7"}], "}"}]}], 
   UnderscriptBox["|", 
    RowBox[{"x", "\[Element]", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}]}]]}], "}"}]], "Computation",
 CellChangeTimes->{{3.567313845901135*^9, 3.567313897758895*^9}, {
   3.567402103647578*^9, 3.567402134575924*^9}, {3.567402497625014*^9, 
   3.56740249901799*^9}, {3.567402678530189*^9, 3.567402681065226*^9}, {
   3.567402926882802*^9, 3.567402947177177*^9}, {3.567403190021353*^9, 
   3.567403199217541*^9}, {3.567403244998426*^9, 3.567403299618629*^9}, 
   3.567403335091983*^9, 3.567403444926633*^9, 3.567403999938947*^9, {
   3.567405993426191*^9, 3.567405993618243*^9}, {3.567406368540336*^9, 
   3.56740636949157*^9}, {3.567407074136441*^9, 3.567407074297496*^9}, {
   3.567407234623708*^9, 3.567407350432523*^9}},
 CellID->176494899],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614879442107*^9},
 CellID->2118675088],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"{", "4", "}"}], "}"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.567313886618972*^9, 3.567313899695147*^9}, 
   3.567314423596379*^9, {3.567316434417524*^9, 3.567316458789149*^9}, 
   3.567402147052216*^9, 3.567402445766263*^9, 3.567402500785479*^9, 
   3.567402607014648*^9, 3.567402682361576*^9, {3.567402930471775*^9, 
   3.567402949073079*^9}, 3.567403154165202*^9, 3.567403200637345*^9, 
   3.567403251802811*^9, {3.567403283306342*^9, 3.567403339174332*^9}, 
   3.567403447117374*^9, {3.567403992045187*^9, 3.567404001914866*^9}, 
   3.567405490211673*^9, {3.567405995098519*^9, 3.567406003969346*^9}, 
   3.567406088445892*^9, 3.567406286014039*^9, 3.567406329996771*^9, 
   3.567406371892404*^9, 3.567407075549409*^9, {3.567407242878725*^9, 
   3.567407300242362*^9}, {3.567407331680306*^9, 3.567407353145564*^9}, 
   3.567478203209637*^9, 3.568092425809625*^9, 3.568614879498439*^9},
 CellID->1113818077]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "3", ",", "x"}], "}"}], "\[Intersection]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], 
   UnderscriptBox["|", 
    RowBox[{
     RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "2"}]]}], 
  "}"}]], "Computation",
 CellChangeTimes->{{3.567405528869959*^9, 3.567405551959467*^9}, {
  3.567406361250054*^9, 3.567406361876058*^9}},
 CellID->733610513],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614881000296*^9},
 CellID->72754390],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "3", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.567405546877457*^9, 3.567405553034486*^9}, 
   3.567406012187052*^9, {3.567406336210474*^9, 3.567406362774595*^9}, 
   3.567407067817198*^9, 3.567478209901531*^9, 3.568614881048611*^9},
 CellID->1313174725]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "x", "}"}], 
   UnderscriptBox["|", 
    RowBox[{
     RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "4"}]]}], 
  "}"}]], "Computation",
 CellChangeTimes->{{3.567313845901135*^9, 3.567313897758895*^9}, {
  3.567402103647578*^9, 3.567402134575924*^9}, {3.567402497625014*^9, 
  3.56740249901799*^9}, {3.567402532455422*^9, 3.567402565027162*^9}},
 CellID->471864342],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614884178181*^9},
 CellID->82453601],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "1", "}"}], ",", 
    RowBox[{"{", "2", "}"}], ",", 
    RowBox[{"{", "3", "}"}], ",", 
    RowBox[{"{", "4", "}"}]}], "}"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.567402538294003*^9, 3.567402566584863*^9}, 
   3.567404047160739*^9, 3.567405511502866*^9, 3.567478219742445*^9, 
   3.568092443151349*^9, 3.568614884264894*^9},
 CellID->615216375]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], 
  StyleBox["\[Backslash]", "OperatorCharacter"], 
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "4"}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.567328173839654*^9, 3.567328188467054*^9}, {
   3.5673282484034*^9, 3.567328266148751*^9}, 3.567328631410782*^9},
 CellID->1767504136],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614885681*^9},
 CellID->1924066162],

Cell[BoxData[
 FormBox[
  RowBox[{"{", "1", "}"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.567328659875386*^9, 3.567328961158596*^9, 3.567400153469878*^9, {
   3.567407868504821*^9, 3.567407905997307*^9}, 3.56740797823899*^9, 
   3.567478466969181*^9, 3.567568023923438*^9, 3.568092474902183*^9, 
   3.568614885759467*^9},
 CellID->663963907]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", 
    RowBox[{"Theorema`Language`VAR$", "[", "Theorema`Knowledge`x$TM", "]"}]}],
    "}"}], 
  StyleBox["\[Backslash]", "OperatorCharacter"], " ", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}]}]], "Computation",
 CellChangeTimes->{
  3.564974923057354*^9, {3.56732775164358*^9, 3.56732775305344*^9}, {
   3.567328667104477*^9, 3.567328682711525*^9}, 3.567328874359116*^9},
 CellID->2085377726],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614887049066*^9},
 CellID->631532645],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox[
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", 
      StyleBox["x", "ExpressionVariable"]}], "}"}], "ExpressionVariable"], 
   "\[Backslash]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}]}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.567328673610646*^9, 3.567328684167834*^9}, 
   3.567328879626944*^9, 3.5673289645693*^9, 3.56740015619292*^9, 
   3.56740787757508*^9, 3.567407984828657*^9, 3.567478470572928*^9, 
   3.568092483660944*^9, 3.568614887140107*^9},
 CellID->859245990]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "x"}], "}"}], 
  StyleBox["\[Backslash]", "OperatorCharacter"], " ", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}]}]], "Computation",
 CellChangeTimes->{3.567328861239837*^9},
 CellID->317337134],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.56861488922822*^9},
 CellID->83042194],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"1", ",", "x"}], "}"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567568031714678*^9, 3.568092487088457*^9, 
  3.568614889316276*^9},
 CellID->1209378931]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], 
  StyleBox["\[Backslash]", "OperatorCharacter"], " ", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "4", ",", "5", ",", "x"}], 
   "}"}]}]], "Computation",
 CellChangeTimes->{{3.568092497145635*^9, 3.568092503991886*^9}},
 CellID->1561016974],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614890906917*^9},
 CellID->1215828510],

Cell[BoxData[
 FormBox[
  RowBox[{"{", "1", "}"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568092505670263*^9, 3.568102876020303*^9, 
  3.56861489100032*^9},
 CellID->801208307]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"3", "*", 
      RowBox[{"x", "^", "2"}]}], "+", "1"}], 
    UnderscriptBox["|", "x"]}], "}"}], 
  StyleBox["\[Backslash]", "OperatorCharacter"], " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Element]", "\[DoubleStruckCapitalN]"}], "|", 
    RowBox[{"x", ">", " ", "10"}]}], "}"}]}]], "Computation",
 CellChangeTimes->{
  3.564975026291597*^9, {3.5649898719246*^9, 3.564989875664488*^9}, {
   3.567328184831899*^9, 3.56732818594391*^9}, 3.567328668842043*^9},
 CellID->2019828648],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614892645904*^9},
 CellID->270348248],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "+", 
      RowBox[{"3", " ", 
       SuperscriptBox[
        StyleBox["x", "ExpressionVariable"], "2"]}]}], 
     UnderscriptBox["|", 
      StyleBox["x", "ExpressionVariable"]]}], "}"}], "\[Backslash]", 
   RowBox[{"{", 
    RowBox[{GridBox[{
       {
        RowBox[{
         StyleBox["x", "ExpressionVariable"], "\[Element]", 
         "\[DoubleStruckCapitalN]"}]}
      }], "|", 
     RowBox[{
      StyleBox["x", "ExpressionVariable"], ">", "10"}]}], "}"}]}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567328690977102*^9, 3.567328973578074*^9, 
  3.567400162014006*^9, 3.567407993846106*^9, 3.567478478004025*^9, 
  3.568092522334197*^9, 3.568614892730747*^9},
 CellID->466248346]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"3", "*", "x"}], "+", "1"}], 
    UnderscriptBox["|", 
     RowBox[{
      RowBox[{"x", "=", "2"}], ",", "\[Ellipsis]", ",", "6"}]]}], "}"}], 
  StyleBox["\[Backslash]", "OperatorCharacter"], 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "x"}], "}"}]}]], "Computation",
 CellChangeTimes->{3.56861430581519*^9},
 CellID->2003091963],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614895444745*^9},
 CellID->1135095696],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"7", ",", "10", ",", "13", ",", "16", ",", "19"}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568614307053019*^9, 3.568614895528527*^9},
 CellID->1528736396]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"4", ",", "35", ",", "x"}], "}"}], 
    StyleBox["\[Backslash]", "OperatorCharacter"], 
    RowBox[{"{", 
     RowBox[{"4", ",", "7"}], "}"}]}], 
   UnderscriptBox["|", 
    RowBox[{"x", "\[Element]", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5", ",", "8"}], "}"}]}]]}], "}"}]], "Computation",
 CellChangeTimes->{
  3.567328755672808*^9, {3.567408035875734*^9, 3.567408041267496*^9}, {
   3.567408115305756*^9, 3.567408115661839*^9}},
 CellID->923108829],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614897350717*^9},
 CellID->2018960495],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "35"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "35"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"8", ",", "35"}], "}"}]}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567328762619974*^9, 3.567328976432172*^9, 
  3.567400164053059*^9, 3.567407999273514*^9, 3.567408043020234*^9, 
  3.567408116594476*^9, 3.567478482808455*^9, 3.568092540163993*^9, 
  3.568614897427193*^9},
 CellID->1993101497]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"4", ",", "35", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}], ",", "x"}], "}"}], 
    StyleBox["\[Backslash]", "OperatorCharacter"], 
    RowBox[{"{", 
     RowBox[{"4", ",", "7"}], "}"}]}], 
   UnderscriptBox["|", 
    RowBox[{
     RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "5"}]]}], 
  "}"}]], "Computation",
 CellChangeTimes->{{3.567328835072513*^9, 3.567328838431168*^9}, 
   3.567408102947591*^9, 3.567478492242316*^9, {3.568092601051401*^9, 
   3.568092606731841*^9}},
 CellID->1152139158],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614899405086*^9},
 CellID->1726216797],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"35", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "35", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "35", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "35", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "35", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.567328840126994*^9, 3.567328980658866*^9, 3.567400166221324*^9, {
   3.567408104472029*^9, 3.567408131385204*^9}, {3.567478487458148*^9, 
   3.567478493368221*^9}, 3.568092554845275*^9, 3.568092607757177*^9, 
   3.568614899474439*^9},
 CellID->1027953086]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"3", "*", "x"}], "+", "1"}], 
      UnderscriptBox["|", 
       RowBox[{
        RowBox[{"x", "=", "2"}], ",", "\[Ellipsis]", ",", "6"}]]}], "}"}], 
    StyleBox["\[Backslash]", "OperatorCharacter"], 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "x"}], "}"}]}], ")"}], "\[Equal]", 
  
  RowBox[{"(", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"4", ",", "7"}], "}"}], "\[Union]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "+", "3"}], 
      UnderscriptBox["|", 
       RowBox[{"x", "\[Element]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
         "}"}]}]], 
      RowBox[{"x", "<", "5"}]}], "}"}]}], ")"}]}]], "Computation",
 CellChangeTimes->{3.568614328437986*^9},
 CellID->1987603282],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.56861490215171*^9},
 CellID->835030593],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568614329984785*^9, 3.568614902253502*^9},
 CellID->1228347400]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "\[EmptyUpTriangle]", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}]}]], "Computation",
 CellChangeTimes->{
  3.564975030417526*^9, {3.56739723142289*^9, 3.567397236925865*^9}, 
   3.567397312701119*^9},
 CellID->904495502],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614903771172*^9},
 CellID->1040690058],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"1", ",", "4", ",", "5"}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567397315988943*^9, 3.567397733047368*^9, 
  3.56748020073453*^9, 3.567480386705682*^9, 3.567480707087388*^9, 
  3.567480937292442*^9, 3.5674813429523*^9, 3.567481571477926*^9, 
  3.567568047503489*^9, 3.567923003063044*^9, 3.568094055462924*^9, 
  3.568096527854376*^9, 3.568102882823809*^9, 3.568383150797057*^9, 
  3.568384200639239*^9, 3.568384506690803*^9, 3.568385293031817*^9, 
  3.568614903851834*^9},
 CellID->1382446739]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "\[EmptyUpTriangle]", 
  RowBox[{"{", 
   RowBox[{"2", ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "1"}], "}"}], ",", "4", ",", "5"}], 
   "}"}]}]], "Computation",
 CellChangeTimes->{{3.567923032122962*^9, 3.567923040284248*^9}},
 CellID->225256874],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614905094796*^9},
 CellID->1060206263],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"1", ",", "3", ",", "4", ",", "5", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567923042729608*^9, 3.568094063633739*^9, 
  3.568096530908106*^9, 3.568383153905258*^9, 3.568384203045669*^9, 
  3.56838450947283*^9, 3.568385296245837*^9, 3.56861490516695*^9},
 CellID->1994004260]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "\[EmptyUpTriangle]", 
  RowBox[{"{", 
   RowBox[{"7", ",", "4", ",", "5"}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.567480686851385*^9, 3.567480696253233*^9}, 
   3.567481543344648*^9},
 CellID->1845212526],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614906485258*^9},
 CellID->1353638179],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "7"}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.56809407865542*^9, 3.568096536569885*^9, 
  3.568383156787312*^9, 3.568384205604529*^9, 3.568384512382767*^9, 
  3.568385298990302*^9, 3.568614906553317*^9},
 CellID->26540692]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "x"}], "}"}], "\[EmptyUpTriangle]", 
  RowBox[{"{", 
   RowBox[{"2", ",", "4", ",", "5"}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.567480716698884*^9, 3.567480722451498*^9}, 
   3.567481546963302*^9},
 CellID->1460233169],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614908906226*^9},
 CellID->2066758650],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"1", ",", "3", ",", "4", ",", "5", ",", "x"}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.567481357703424*^9, 3.5674815799663*^9, {3.567483389607868*^9, 
   3.567483395831681*^9}, 3.567568056327486*^9, 3.568094091043252*^9, 
   3.568096543027861*^9, 3.568383160287719*^9, 3.56838327084678*^9, 
   3.568384208004567*^9, 3.568384514773165*^9, 3.568385302154609*^9, 
   3.568614908914096*^9},
 CellID->519329257]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "\[EmptyUpTriangle]", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "4", ",", "5", ",", 
    RowBox[{"Theorema`Language`VAR$", "[", "Theorema`Knowledge`x$TM", "]"}]}],
    "}"}]}]], "Computation",
 CellChangeTimes->{{3.567480748880619*^9, 3.567480780334355*^9}, 
   3.567481550900369*^9},
 CellID->1545471897],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614910500075*^9},
 CellID->1055362485],

Cell[BoxData[
 FormBox[
  RowBox[{"EmptyUpTriangle", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    StyleBox[
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "4", ",", "5", ",", 
       StyleBox["x", "ExpressionVariable"]}], "}"}], "ExpressionVariable"]}], 
   "]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568384523972235*^9, 3.568385310758091*^9, 
  3.568614910595508*^9},
 CellID->1664428182]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"3", "*", 
      RowBox[{"x", "^", "2"}]}], "+", "1"}], 
    UnderscriptBox["|", "x"]}], "}"}], "\[EmptyUpTriangle]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Element]", "\[DoubleStruckCapitalN]"}], "|", 
    RowBox[{"x", "<", " ", "10"}]}], "}"}]}]], "Computation",
 CellChangeTimes->{
  3.564975035796097*^9, {3.564989892005218*^9, 3.564989897135619*^9}, 
   3.567481556099905*^9},
 CellID->1150204589],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614912531643*^9},
 CellID->1099341487],

Cell[BoxData[
 FormBox[
  RowBox[{"EmptyUpTriangle", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "+", 
       RowBox[{"3", " ", 
        SuperscriptBox[
         StyleBox["x", "ExpressionVariable"], "2"]}]}], 
      UnderscriptBox["|", 
       StyleBox["x", "ExpressionVariable"]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{GridBox[{
        {
         RowBox[{
          StyleBox["x", "ExpressionVariable"], "\[Element]", 
          "\[DoubleStruckCapitalN]"}]}
       }], "|", 
      RowBox[{
       StyleBox["x", "ExpressionVariable"], "<", "10"}]}], "}"}]}], "]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.56809655160153*^9, 3.568383184069612*^9, 
  3.568383281138493*^9, 3.56838422732672*^9, 3.568384539658578*^9, 
  3.568385314208029*^9, 3.568614912620813*^9},
 CellID->1137816086]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"3", "*", 
      RowBox[{"x", "^", "2"}]}], "+", "1"}], 
    UnderscriptBox["|", "x"]}], "}"}], "\[EmptyUpTriangle]", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Element]", "\[DoubleStruckCapitalN]"}], "|", 
    RowBox[{"x", ">", " ", "10"}]}], "}"}]}]], "Computation",
 CellChangeTimes->{
  3.564975044763957*^9, {3.56498990903545*^9, 3.564989912967931*^9}, 
   3.56748156539238*^9},
 CellID->812711803],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614915182362*^9},
 CellID->132160909],

Cell[BoxData[
 FormBox[
  RowBox[{"EmptyUpTriangle", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "+", 
       RowBox[{"3", " ", 
        SuperscriptBox[
         StyleBox["x", "ExpressionVariable"], "2"]}]}], 
      UnderscriptBox["|", 
       StyleBox["x", "ExpressionVariable"]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{GridBox[{
        {
         RowBox[{
          StyleBox["x", "ExpressionVariable"], "\[Element]", 
          "\[DoubleStruckCapitalN]"}]}
       }], "|", 
      RowBox[{
       StyleBox["x", "ExpressionVariable"], ">", "10"}]}], "}"}]}], "]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568096556321104*^9, 3.568381642060763*^9, 
  3.568383189958307*^9, 3.568383258113502*^9, 3.568614915274914*^9},
 CellID->875924001]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "3", ",", "x"}], "}"}], "\[EmptyUpTriangle]", " ", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], 
   UnderscriptBox["|", 
    RowBox[{
     RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "2"}]]}], 
  "}"}]], "Computation",
 CellChangeTimes->{{3.568096588048421*^9, 3.568096594080097*^9}},
 CellID->93053144],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614917516122*^9},
 CellID->1801779993],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "1", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568096595893682*^9, 3.568381635303392*^9, 
  3.568614917603615*^9},
 CellID->763693554]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"4", ",", "35", ",", "x"}], "}"}], "\[EmptyUpTriangle]", " ", 
    RowBox[{"{", 
     RowBox[{"4", ",", "7"}], "}"}]}], 
   UnderscriptBox["|", 
    RowBox[{"x", "\[Element]", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}]}]]}], "}"}]], "Computation",
 CellChangeTimes->{{3.56809662940015*^9, 3.568096640075855*^9}},
 CellID->1797862131],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614919797889*^9},
 CellID->1735169992],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "7", ",", "35"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "7", ",", "35"}], "}"}]}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568096645666572*^9, 3.568381637796136*^9, 
  3.568614919897207*^9},
 CellID->1884822187]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "x"}], "}"}], "\[EmptyUpTriangle]", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4", ",", "5"}], "}"}]}], 
    UnderscriptBox["|", 
     RowBox[{"x", "\[Element]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3", ",", "5"}], "}"}]}]]}], "}"}], "\[SubsetEqual]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}], "\[Union]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "+", 
         RowBox[{"2", "*", "y"}]}], 
        UnderscriptBox["|", 
         RowBox[{"x", "\[Element]", 
          RowBox[{"{", 
           RowBox[{"4", ",", "2", ",", "1"}], "}"}]}]], 
        RowBox[{"x", "<", "5"}]}], "}"}]}], ")"}], 
    UnderscriptBox["|", 
     RowBox[{
      RowBox[{"y", "=", "2"}], ",", "\[Ellipsis]", ",", "4"}]]}], 
   "}"}]}]], "Computation",
 CellChangeTimes->{3.5686144269459*^9},
 CellID->211762389],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614921810394*^9},
 CellID->1973072485],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568614921924616*^9},
 CellID->803514854]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2"}], "}"}], "\[Cross]", " ", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3"}], "}"}], "\[Cross]", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3"}], "}"}]}]], "Computation",
 CellChangeTimes->{
  3.564975066705718*^9, {3.567399663926234*^9, 3.567399670497302*^9}, {
   3.56749840964916*^9, 3.56749841653916*^9}, {3.567569251773073*^9, 
   3.567569260930785*^9}, {3.567569690008606*^9, 3.567569708930053*^9}, 
   3.567569784524354*^9, 3.567569916171667*^9},
 CellID->886391122],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614924139645*^9},
 CellID->538546846],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "2", ",", "2"}], "\[RightAngleBracket]"}], ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "3", ",", "2"}], "\[RightAngleBracket]"}], ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "3", ",", "3"}], "\[RightAngleBracket]"}], ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "2", ",", "2"}], "\[RightAngleBracket]"}], ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "3", ",", "2"}], "\[RightAngleBracket]"}], ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "3", ",", "3"}], "\[RightAngleBracket]"}]}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.567399641163725*^9, 3.567399682492433*^9, 3.567400175498978*^9, 
   3.567497054395844*^9, 3.567498138117989*^9, 3.567498418012432*^9, 
   3.567498791468436*^9, 3.567509630358768*^9, 3.567568617733339*^9, 
   3.567569045155567*^9, 3.567569187665137*^9, 3.567569262112992*^9, 
   3.567569646439302*^9, {3.56756969698639*^9, 3.567569710667941*^9}, 
   3.567569785819063*^9, {3.567569891283387*^9, 3.567569917793498*^9}, 
   3.567570242566208*^9, 3.56757044730107*^9, 3.567570497888161*^9, 
   3.56757056360895*^9, 3.567776923253301*^9, 3.567778960857664*^9, 
   3.567779115218246*^9, 3.567779230297899*^9, 3.56792307400518*^9, 
   3.568096675555433*^9, 3.568099619620634*^9, 3.568380994139101*^9, 
   3.568381069310287*^9, 3.568614924237968*^9},
 CellID->95937085]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2"}], "}"}], "\[Cross]", " ", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "x"}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.567598181303047*^9, 3.567598190681962*^9}},
 CellID->1213194629],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614926371801*^9},
 CellID->1269763200],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "2"}], "\[RightAngleBracket]"}], ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "3"}], "\[RightAngleBracket]"}], ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "x"}], "\[RightAngleBracket]"}], ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "2"}], "\[RightAngleBracket]"}], ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "3"}], "\[RightAngleBracket]"}], ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "x"}], "\[RightAngleBracket]"}]}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567598191711878*^9, 3.56777915426816*^9, 
  3.567779233548558*^9, 3.56792307798456*^9, 3.568096679696668*^9, 
  3.568099622809099*^9, 3.568381100855759*^9, 3.568614926457648*^9},
 CellID->1673642542]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2"}], "}"}], "\[Cross]", " ", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5"}], "}"}]}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.567923091897646*^9, 3.56792309810723*^9}},
 CellID->2117084234],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614928211588*^9},
 CellID->1624673481],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "2"}], "\[RightAngleBracket]"}], ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "3"}], "\[RightAngleBracket]"}], ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "5"}], "}"}]}], "\[RightAngleBracket]"}], ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "2"}], "\[RightAngleBracket]"}], ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "3"}], "\[RightAngleBracket]"}], ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "5"}], "}"}]}], "\[RightAngleBracket]"}]}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567923100236247*^9, 3.568096682260713*^9, 
  3.568099625994865*^9, 3.568381106067347*^9, 3.568614928295109*^9},
 CellID->1141240048]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2"}], "}"}], "\[Cross]", " ", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", 
    RowBox[{"Theorema`Language`VAR$", "[", "Theorema`Knowledge`x$TM", "]"}]}],
    "}"}]}]], "Computation",
 CellChangeTimes->{{3.567598207482298*^9, 3.567598221162562*^9}},
 CellID->780578926],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614930332009*^9},
 CellID->1203406630],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], "\[Cross]", 
   StyleBox[
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", 
      StyleBox["x", "ExpressionVariable"]}], "}"}], "ExpressionVariable"]}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568099632352075*^9, 3.56838111098667*^9, 
  3.568614930423557*^9},
 CellID->21709486]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"5", ",", "2", ",", "7"}], "}"}], "\[Cross]", " ", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3"}], "}"}], "\[Cross]", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "1"}], "}"}], "\[Cross]", 
  RowBox[{"{", "21", "}"}]}]], "Computation",
 CellChangeTimes->{{3.567570588655867*^9, 3.567570652534553*^9}},
 CellID->1419732527],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614931796004*^9},
 CellID->206807337],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "2", ",", "1", ",", "21"}], "\[RightAngleBracket]"}], 
    ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "2", ",", "2", ",", "21"}], "\[RightAngleBracket]"}], 
    ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "2", ",", "3", ",", "21"}], "\[RightAngleBracket]"}], 
    ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "3", ",", "1", ",", "21"}], "\[RightAngleBracket]"}], 
    ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "3", ",", "2", ",", "21"}], "\[RightAngleBracket]"}], 
    ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "3", ",", "3", ",", "21"}], "\[RightAngleBracket]"}], 
    ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"5", ",", "2", ",", "1", ",", "21"}], "\[RightAngleBracket]"}], 
    ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"5", ",", "2", ",", "2", ",", "21"}], "\[RightAngleBracket]"}], 
    ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"5", ",", "2", ",", "3", ",", "21"}], "\[RightAngleBracket]"}], 
    ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"5", ",", "3", ",", "1", ",", "21"}], "\[RightAngleBracket]"}], 
    ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"5", ",", "3", ",", "2", ",", "21"}], "\[RightAngleBracket]"}], 
    ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"5", ",", "3", ",", "3", ",", "21"}], "\[RightAngleBracket]"}], 
    ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"7", ",", "2", ",", "1", ",", "21"}], "\[RightAngleBracket]"}], 
    ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"7", ",", "2", ",", "2", ",", "21"}], "\[RightAngleBracket]"}], 
    ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"7", ",", "2", ",", "3", ",", "21"}], "\[RightAngleBracket]"}], 
    ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"7", ",", "3", ",", "1", ",", "21"}], "\[RightAngleBracket]"}], 
    ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"7", ",", "3", ",", "2", ",", "21"}], "\[RightAngleBracket]"}], 
    ",", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"7", ",", "3", ",", "3", ",", "21"}], "\[RightAngleBracket]"}]}],
    "}"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567570656371727*^9, 3.567779168332534*^9, 
  3.567779239787543*^9, 3.568096698518398*^9, 3.568099646488066*^9, 
  3.568381115298862*^9, 3.568614931882525*^9},
 CellID->284270382]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"3", "*", "x"}], "+", "1"}], 
    UnderscriptBox["|", "x"]}], "}"}], "\[Cross]", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Element]", "\[DoubleStruckCapitalN]"}], "|", 
    RowBox[{"x", "<", " ", "10"}]}], "}"}]}]], "Computation",
 CellChangeTimes->{
  3.564975089990676*^9, {3.564989942994434*^9, 3.564989947495463*^9}, 
   3.567399676842938*^9, {3.568614458128693*^9, 3.568614458338747*^9}},
 CellID->2110329258],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614934060712*^9},
 CellID->1062399544],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "+", 
      RowBox[{"3", " ", 
       StyleBox["x", "ExpressionVariable"]}]}], 
     UnderscriptBox["|", 
      StyleBox["x", "ExpressionVariable"]]}], "}"}], "\[Cross]", 
   RowBox[{"{", 
    RowBox[{GridBox[{
       {
        RowBox[{
         StyleBox["x", "ExpressionVariable"], "\[Element]", 
         "\[DoubleStruckCapitalN]"}]}
      }], "|", 
     RowBox[{
      StyleBox["x", "ExpressionVariable"], "<", "10"}]}], "}"}]}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.564975120878414*^9, 3.564989948587781*^9, 
  3.567498346798986*^9, 3.567498865530565*^9, 3.567779174506569*^9, 
  3.568096703019109*^9, 3.568099651261855*^9, 3.568381123148392*^9, 
  3.568614934116165*^9},
 CellID->1589254077]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"3", "*", "x"}], "+", "1"}], 
    UnderscriptBox["|", "x"]}], "}"}], "\[Cross]", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Element]", "\[DoubleStruckCapitalN]"}], "|", 
    RowBox[{"x", ">", " ", "10"}]}], "}"}]}]], "Computation",
 CellChangeTimes->{
  3.564975093964951*^9, {3.564989952859003*^9, 3.564989956519604*^9}, 
   3.567399678587616*^9, {3.568614459824469*^9, 3.568614460008388*^9}},
 CellID->2020632843],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.56861493777956*^9},
 CellID->1344476645],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "+", 
      RowBox[{"3", " ", 
       StyleBox["x", "ExpressionVariable"]}]}], 
     UnderscriptBox["|", 
      StyleBox["x", "ExpressionVariable"]]}], "}"}], "\[Cross]", 
   RowBox[{"{", 
    RowBox[{GridBox[{
       {
        RowBox[{
         StyleBox["x", "ExpressionVariable"], "\[Element]", 
         "\[DoubleStruckCapitalN]"}]}
      }], "|", 
     RowBox[{
      StyleBox["x", "ExpressionVariable"], ">", "10"}]}], "}"}]}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.564975123563791*^9, 3.564989957745206*^9, 
  3.567498353126781*^9, 3.567498867721334*^9, 3.567779178014366*^9, 
  3.568096705356386*^9, 3.568099655606894*^9, 3.568381125817972*^9, 
  3.568614937853431*^9},
 CellID->908920156]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "3", ",", "x"}], "}"}], "\[Cross]", " ", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], 
   UnderscriptBox["|", 
    RowBox[{
     RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "2"}]]}], 
  "}"}]], "Computation",
 CellChangeTimes->{3.568096735779514*^9, 3.568096773239231*^9},
 CellID->1738161451],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614939220758*^9},
 CellID->795408608],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"1", ",", "2"}], "\[RightAngleBracket]"}], ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"1", ",", "3"}], "\[RightAngleBracket]"}], ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"3", ",", "2"}], "\[RightAngleBracket]"}], ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"3", ",", "3"}], "\[RightAngleBracket]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"1", ",", "2"}], "\[RightAngleBracket]"}], ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"1", ",", "3"}], "\[RightAngleBracket]"}], ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"2", ",", "2"}], "\[RightAngleBracket]"}], ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"2", ",", "3"}], "\[RightAngleBracket]"}], ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"3", ",", "2"}], "\[RightAngleBracket]"}], ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"3", ",", "3"}], "\[RightAngleBracket]"}]}], "}"}]}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568096777860421*^9, 3.568099681278183*^9, 
  3.568100138550906*^9, 3.568100540133048*^9, 3.568381129177703*^9, 
  3.568614939297234*^9},
 CellID->1371017338]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "3", ",", "1"}], "}"}], "\[Cross]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "3", ",", "2"}], "}"}], "\[Cross]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}]}], "}"}]], "Computation",
 CellChangeTimes->{3.56810018329022*^9},
 CellID->1716383383],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614941326832*^9},
 CellID->828195158],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"1", ",", "2"}], "\[RightAngleBracket]"}], ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"1", ",", "3"}], "\[RightAngleBracket]"}], ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"3", ",", "2"}], "\[RightAngleBracket]"}], ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"3", ",", "3"}], "\[RightAngleBracket]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"1", ",", "2"}], "\[RightAngleBracket]"}], ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"1", ",", "3"}], "\[RightAngleBracket]"}], ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"2", ",", "2"}], "\[RightAngleBracket]"}], ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"2", ",", "3"}], "\[RightAngleBracket]"}], ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"3", ",", "2"}], "\[RightAngleBracket]"}], ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"3", ",", "3"}], "\[RightAngleBracket]"}]}], "}"}]}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568100196484821*^9, 3.568100341168714*^9, 
  3.568102892610201*^9, 3.568381137174768*^9, 3.56861494140245*^9},
 CellID->1314737865]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "x"}], "}"}], 
   UnderscriptBox["|", 
    RowBox[{
     RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "2"}]]}], 
  "}"}]], "Computation",
 CellChangeTimes->{{3.568099993967934*^9, 3.568100001346223*^9}},
 CellID->2109748511],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614943444976*^9},
 CellID->278896175],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568100003836824*^9, 3.56861494353743*^9},
 CellID->345139692]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"4", ",", "35", ",", "x"}], "}"}], "\[Cross]", " ", 
    RowBox[{"{", 
     RowBox[{"4", ",", "7"}], "}"}]}], 
   UnderscriptBox["|", 
    RowBox[{"x", "\[Element]", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}]}]]}], "}"}]], "Computation",
 CellChangeTimes->{{3.568096765032291*^9, 3.568096775308431*^9}},
 CellID->774578559],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614944736204*^9},
 CellID->266595704],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"2", ",", "4"}], "\[RightAngleBracket]"}], ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"2", ",", "7"}], "\[RightAngleBracket]"}], ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"4", ",", "4"}], "\[RightAngleBracket]"}], ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"4", ",", "7"}], "\[RightAngleBracket]"}], ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"35", ",", "4"}], "\[RightAngleBracket]"}], ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"35", ",", "7"}], "\[RightAngleBracket]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"4", ",", "4"}], "\[RightAngleBracket]"}], ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"4", ",", "7"}], "\[RightAngleBracket]"}], ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"5", ",", "4"}], "\[RightAngleBracket]"}], ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"5", ",", "7"}], "\[RightAngleBracket]"}], ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"35", ",", "4"}], "\[RightAngleBracket]"}], ",", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"35", ",", "7"}], "\[RightAngleBracket]"}]}], "}"}]}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568096781199516*^9, 3.568381152962271*^9, 
  3.5686149448193*^9},
 CellID->1416712262]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Subsets", "Subtitle",
 CellChangeTimes->{{3.564820781750829*^9, 3.564820792797656*^9}},
 CellID->1728621211],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "2", ",", "3"}], "}"}], "\[SubsetEqual]", " ", 
  
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "3", ",", "x"}], 
   "}"}]}]], "Computation",
 CellChangeTimes->{{3.567575083423701*^9, 3.567575144646017*^9}, {
  3.567575175297913*^9, 3.567575177830562*^9}, {3.567575243594878*^9, 
  3.567575280347704*^9}},
 CellID->236676440],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614954063894*^9},
 CellID->145203373],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.567575181059249*^9, {3.567575228924192*^9, 3.567575281717605*^9}, {
   3.567577403388051*^9, 3.567577436800519*^9}, 3.567923135837053*^9, 
   3.568080149537207*^9, 3.56809698034626*^9, 3.568102908481681*^9, 
   3.568614954141529*^9},
 CellID->656410581]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "2", ",", "3"}], "}"}], "\[SubsetEqual]", " ", 
  
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "3"}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.567577573288345*^9, 3.567577580770154*^9}, {
  3.567577796306103*^9, 3.567577802210156*^9}},
 CellID->203770666],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614959194116*^9},
 CellID->1791447711],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568614959291628*^9},
 CellID->978119502]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "2", ",", "3"}], "}"}], "\[SubsetEqual]", " ", 
  
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.567923154723337*^9, 3.567923169438129*^9}},
 CellID->1951910112],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614964867475*^9},
 CellID->211517563],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567923170414288*^9, 3.568080158519457*^9, 
  3.568614964920038*^9},
 CellID->350465040]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "2", ",", "3", ",", "4"}], "}"}], 
  "\[SubsetEqual]", " ", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "3"}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.567577587823312*^9, 3.567577599702699*^9}},
 CellID->112556865],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.56861496667642*^9},
 CellID->349061799],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567577601566787*^9, 3.567923176087421*^9, 
  3.568080169929357*^9, 3.568614966732484*^9},
 CellID->407714639]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "6"}], "}"}], ",", "3", ",", "4"}], "}"}], 
  "\[SubsetEqual]", " ", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "3"}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.567923186308178*^9, 3.567923194421797*^9}},
 CellID->1535060965],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614968141475*^9},
 CellID->2083615357],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.56792319636639*^9, 3.568080174529052*^9, 
  3.568614968180942*^9},
 CellID->59089890]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "6"}], "}"}], ",", "3", ",", "4"}], "}"}], 
  "\[SubsetEqual]", " ", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "3", ",", "4", ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "6"}], "}"}]}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.568080195922373*^9, 3.56808020516317*^9}},
 CellID->970811106],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614969568066*^9},
 CellID->1708827202],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568080206758546*^9, 3.568614969605856*^9},
 CellID->41912201]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "\[SubsetEqual]", " ", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.567577610143534*^9, 3.567577616800379*^9}},
 CellID->14731138],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614972532256*^9},
 CellID->136145759],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567577618488419*^9, 3.567923199583751*^9, 
  3.568080211075032*^9, 3.568614972621757*^9},
 CellID->470565194]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "+", "3"}], 
    UnderscriptBox["|", 
     RowBox[{"x", "\[Element]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
       "}"}]}]], 
    RowBox[{"x", "<", "5"}]}], "}"}], "\[SubsetEqual]", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Element]", 
     RowBox[{"{", 
      RowBox[{
      "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", 
       "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15"}], "}"}]}],
     "|", 
    RowBox[{"x", "<", " ", "12"}]}], "}"}]}]], "Computation",
 CellChangeTimes->{
  3.567577624234688*^9, {3.567577668177137*^9, 3.567577718922061*^9}},
 CellID->542824615],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614973989855*^9},
 CellID->2082889197],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.567577721371626*^9, 3.567577761012667*^9}, 
   3.567923206390498*^9, 3.568080214324424*^9, 3.568614974075164*^9},
 CellID->1580905908]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "4"}]], 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "5"}], "}"}], "\[SubsetEqual]", 
   RowBox[{"{", 
    RowBox[{"x", ",", "5", ",", "5", ",", "2"}], "}"}]}]}]], "Computation",
 CellChangeTimes->{{3.568097275411513*^9, 3.56809728186568*^9}},
 CellID->485659845],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614978351857*^9},
 CellID->1031584872],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568097283988196*^9, 3.568614978431972*^9},
 CellID->1521092636]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "4"}]], 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "2", ",", "5"}], "}"}], "\[SubsetEqual]", 
   RowBox[{"{", 
    RowBox[{"x", ",", "5", ",", "5", ",", "2"}], "}"}]}]}]], "Computation",
 CellChangeTimes->{{3.568097301920753*^9, 3.568097320598306*^9}},
 CellID->472896672],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614979702194*^9},
 CellID->1187071166],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.568097308420708*^9, 3.568097321396173*^9}, 
   3.568614979772797*^9},
 CellID->670697357]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Exists]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "4"}]], 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "3", ",", "5"}], "}"}], "\[SubsetEqual]", 
   RowBox[{"{", 
    RowBox[{"x", ",", "5", ",", "5", ",", "2"}], "}"}]}]}]], "Computation",
 CellChangeTimes->{
  3.56809732950897*^9, 3.568097375160601*^9, {3.568097421153188*^9, 
   3.56809742118863*^9}},
 CellID->1010316981],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614981342203*^9},
 CellID->134603742],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.568097412464014*^9, 3.568097424055887*^9}, 
   3.56861498140545*^9},
 CellID->532667588]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "2", ",", "3"}], "}"}], "\[Subset]", " ", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "3", ",", "x"}], 
   "}"}]}]], "Computation",
 CellChangeTimes->{{3.567577774646831*^9, 3.567577781187848*^9}},
 CellID->245743665],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614985962694*^9},
 CellID->52545950],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568080224664598*^9, 3.568102914774556*^9, 
  3.568614986074554*^9},
 CellID->1065938064]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "2", ",", "3"}], "}"}], "\[Subset]", " ", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "3"}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.567577823858991*^9, 3.567577829875467*^9}},
 CellID->377653443],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614987565403*^9},
 CellID->1662627414],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567577876429706*^9, 3.567923226101222*^9, 
  3.568080344216451*^9, 3.568614987667342*^9},
 CellID->40291616]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "2", ",", "3", ",", "4"}], "}"}], "\[Subset]", 
  " ", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "3"}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.56757784093393*^9, 3.567577870393815*^9}},
 CellID->94701501],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614989390535*^9},
 CellID->1277455627],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568614989494745*^9},
 CellID->2013092454]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "2", ",", "3", ",", "4"}], "}"}], "\[Subset]", 
  " ", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", 
      RowBox[{"{", 
       RowBox[{"5", ",", "7"}], "}"}]}], "}"}], ",", "3"}], 
   "}"}]}]], "Computation",
 CellChangeTimes->{{3.567923290109744*^9, 3.567923300055656*^9}},
 CellID->953369948],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614998195262*^9},
 CellID->1108942284],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567923301424858*^9, 3.567931157890805*^9, 
  3.568614998273653*^9},
 CellID->988441380]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "2", ",", "3", ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", 
      RowBox[{"{", 
       RowBox[{"5", ",", "7"}], "}"}]}], "}"}]}], "}"}], "\[Subset]", " ", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", 
      RowBox[{"{", 
       RowBox[{"5", ",", "7"}], "}"}]}], "}"}], ",", "3", ",", "4"}], 
   "}"}]}]], "Computation",
 CellChangeTimes->{{3.567923541377406*^9, 3.567923550314623*^9}, {
  3.56793117941648*^9, 3.567931180119369*^9}},
 CellID->1267700764],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568614999982462*^9},
 CellID->1141546849],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567923552174755*^9, 3.567931145174485*^9, 
  3.567931182389294*^9, 3.568080355851577*^9, 3.568615000064426*^9},
 CellID->1428134931]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "\[Subset]", " ", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.567577852742838*^9, 3.567577872553679*^9}},
 CellID->1569639534],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615001461309*^9},
 CellID->1144517279],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567577882492296*^9, 3.5680803613609*^9, 
  3.568615001527518*^9},
 CellID->2136612324]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "+", "3"}], 
    UnderscriptBox["|", 
     RowBox[{"x", "\[Element]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
       "}"}]}]], 
    RowBox[{"x", "<", "5"}]}], "}"}], "\[Subset]", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Element]", 
     RowBox[{"{", 
      RowBox[{
      "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", 
       "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15"}], "}"}]}],
     "|", 
    RowBox[{"x", "<", " ", "12"}]}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.567577862559556*^9, 3.5675778742578*^9}},
 CellID->924545747],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615003065435*^9},
 CellID->1983498689],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.567577886380111*^9, 3.567577930676615*^9}, 
   3.568080365241588*^9, 3.568615003130993*^9},
 CellID->396485324]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "4"}]], 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "5"}], "}"}], "\[Subset]", 
   RowBox[{"{", 
    RowBox[{"x", ",", "5", ",", "5", ",", "2"}], "}"}]}]}]], "Computation",
 CellChangeTimes->{{3.568097275411513*^9, 3.56809728186568*^9}, 
   3.568097471116673*^9},
 CellID->1200023630],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615005197887*^9},
 CellID->609610340],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568097534402378*^9, 3.568097636804531*^9, 
  3.568615005255627*^9},
 CellID->714391434]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "4"}]], 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "2", ",", "5"}], "}"}], "\[Subset]", 
   RowBox[{"{", 
    RowBox[{"x", ",", "5", ",", "5", ",", "2"}], "}"}]}]}]], "Computation",
 CellChangeTimes->{{3.568097301920753*^9, 3.568097320598306*^9}, 
   3.568097473278623*^9},
 CellID->1329224066],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615007185047*^9},
 CellID->745235771],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568097538824626*^9, 3.568615007236822*^9},
 CellID->1092126072]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Exists]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "4"}]], 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "3", ",", "5"}], "}"}], "\[Subset]", 
   RowBox[{"{", 
    RowBox[{"x", ",", "5", ",", "5", ",", "2"}], "}"}]}]}]], "Computation",
 CellChangeTimes->{
  3.56809732950897*^9, 3.568097375160601*^9, {3.568097421153188*^9, 
   3.56809742118863*^9}, 3.568097474734147*^9},
 CellID->2098908212],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615008924026*^9},
 CellID->162269522],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568097571921841*^9, 3.568097824878967*^9, 
  3.568097903639745*^9, 3.568615008960667*^9},
 CellID->746470008]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "\[SubsetEqual]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Element]", "\[DoubleStruckCapitalN]"}], "|", 
    RowBox[{"x", "<", " ", "10"}]}], "}"}]}]], "Computation",
 CellChangeTimes->{3.564975144666076*^9},
 CellID->1152578234],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615011245094*^9},
 CellID->2129680812],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], "\[SubsetEqual]", 
   RowBox[{"{", 
    RowBox[{GridBox[{
       {
        RowBox[{
         StyleBox["x", "ExpressionVariable"], "\[Element]", 
         "\[DoubleStruckCapitalN]"}]}
      }], "|", 
     RowBox[{
      StyleBox["x", "ExpressionVariable"], "<", "10"}]}], "}"}]}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567575640350299*^9, 3.56757756164072*^9, 
  3.568080370710729*^9, 3.568615011273048*^9},
 CellID->1295317877]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "\[Subset]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Element]", "\[DoubleStruckCapitalN]"}], "|", 
    RowBox[{"x", "<", " ", "10"}]}], "}"}]}]], "Computation",
 CellChangeTimes->{3.564975147881934*^9},
 CellID->2108286438],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615012951236*^9},
 CellID->549444760],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], "\[Subset]", 
   RowBox[{"{", 
    RowBox[{GridBox[{
       {
        RowBox[{
         StyleBox["x", "ExpressionVariable"], "\[Element]", 
         "\[DoubleStruckCapitalN]"}]}
      }], "|", 
     RowBox[{
      StyleBox["x", "ExpressionVariable"], "<", "10"}]}], "}"}]}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568080376379134*^9, 3.568615012982774*^9},
 CellID->1468195210]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "\[Subset]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Element]", "\[DoubleStruckCapitalN]"}], "|", 
    RowBox[{"x", ">", " ", "10"}]}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.564975155490985*^9, 3.564975182098491*^9}, {
  3.567577554359427*^9, 3.567577555792132*^9}},
 CellID->1692358688],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615015429757*^9},
 CellID->1527396404],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], "\[Subset]", 
   RowBox[{"{", 
    RowBox[{GridBox[{
       {
        RowBox[{
         StyleBox["x", "ExpressionVariable"], "\[Element]", 
         "\[DoubleStruckCapitalN]"}]}
      }], "|", 
     RowBox[{
      StyleBox["x", "ExpressionVariable"], ">", "10"}]}], "}"}]}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.564975189161401*^9, 3.567577556493055*^9, 
  3.568080395965505*^9, 3.568615015474986*^9},
 CellID->196072229]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "\[Superset]", 
  RowBox[{"{", "1", "}"}]}]], "Computation",
 CellChangeTimes->{3.564975160096705*^9},
 CellID->42278162],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615017298369*^9},
 CellID->1579606892],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.564975191063344*^9, 3.568080399577083*^9, 
  3.568102922009812*^9, 3.568615017326827*^9},
 CellID->789360805]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "x"}], "}"}], "\[Superset]", 
  RowBox[{"{", "1", "}"}]}]], "Computation",
 CellChangeTimes->{{3.568081330811215*^9, 3.568081334471974*^9}},
 CellID->1697709848],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615019831273*^9},
 CellID->1289246153],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568081335929929*^9, 3.568615019866412*^9},
 CellID->665930039]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "x"}], "}"}], "\[Superset]", 
  RowBox[{"{", 
   RowBox[{"1", ",", "x"}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.568081342958612*^9, 3.568081349006679*^9}},
 CellID->1414099083],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615026416068*^9},
 CellID->4564429],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568081349944322*^9, 3.568615026517658*^9},
 CellID->810053847]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Element]", "\[DoubleStruckCapitalN]"}], "|", 
    RowBox[{"x", "<", " ", "10"}]}], "}"}], "\[Superset]", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]], "Computation",
 CellChangeTimes->{3.568467034370513*^9},
 CellID->585326171],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615028349916*^9},
 CellID->539774065],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"{", 
    RowBox[{GridBox[{
       {
        RowBox[{
         StyleBox["x", "ExpressionVariable"], "\[Element]", 
         "\[DoubleStruckCapitalN]"}]}
      }], "|", 
     RowBox[{
      StyleBox["x", "ExpressionVariable"], "<", "10"}]}], "}"}], 
   "\[Superset]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568467039620009*^9, 3.568615028443387*^9},
 CellID->1668579227]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "\[Superset]", 
  RowBox[{"{", 
   RowBox[{"1", ",", "x"}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.568081354438729*^9, 3.568081356990498*^9}},
 CellID->418125646],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615029902331*^9},
 CellID->1385587304],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568081358513491*^9, 3.568615029984344*^9},
 CellID->1648716349]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "2", ",", "3"}], "}"}], "\[Superset]", " ", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}]], "Computation",
 CellChangeTimes->{3.568080451212002*^9, 3.56808070450747*^9},
 CellID->1158085582],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.56861503280239*^9},
 CellID->509536959],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.56808071518899*^9, 3.568615032880303*^9},
 CellID->379650505]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "2", ",", "3", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], "}"}], "\[Superset]", " ", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.568080574769987*^9, 3.568080584204824*^9}, 
   3.568080706161802*^9},
 CellID->1608939761],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615034478399*^9},
 CellID->929367632],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568080723334577*^9, 3.568102926429597*^9, 
  3.568615034544635*^9},
 CellID->1654054238]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "2", ",", "3", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], "}"}], "\[Superset]", " ", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "2", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.568080599321101*^9, 3.568080607603859*^9}, 
   3.568080707988069*^9},
 CellID->1298140422],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615036120482*^9},
 CellID->368779182],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.56808072818823*^9, 3.568615036167528*^9},
 CellID->765382673]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Element]", 
     RowBox[{"{", 
      RowBox[{
      "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", 
       "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15"}], "}"}]}],
     "|", 
    RowBox[{"x", "<", " ", "12"}]}], "}"}], "\[Superset]", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "+", "3"}], 
    UnderscriptBox["|", 
     RowBox[{"x", "\[Element]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
       "}"}]}]], 
    RowBox[{"x", "<", "5"}]}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.568080641275883*^9, 3.568080655069194*^9}, 
   3.568080709598448*^9},
 CellID->735712849],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615037840804*^9},
 CellID->2050539562],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568080731879188*^9, 3.568615037885129*^9},
 CellID->978389522]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Element]", "\[DoubleStruckCapitalN]"}], "|", 
    RowBox[{"x", "<", " ", "10"}]}], "}"}], "\[Superset]", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.568080670406404*^9, 3.568080712107547*^9}},
 CellID->432267219],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615040149394*^9},
 CellID->1209307422],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"{", 
    RowBox[{GridBox[{
       {
        RowBox[{
         StyleBox["x", "ExpressionVariable"], "\[Element]", 
         "\[DoubleStruckCapitalN]"}]}
      }], "|", 
     RowBox[{
      StyleBox["x", "ExpressionVariable"], "<", "10"}]}], "}"}], 
   "\[Superset]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568080738233823*^9, 3.568615040210735*^9},
 CellID->617447348]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "4"}]], 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "5"}], "}"}], "\[Superset]", 
   RowBox[{"{", 
    RowBox[{"x", ",", "5", ",", "5", ",", "2"}], "}"}]}]}]], "Computation",
 CellChangeTimes->{{3.568097275411513*^9, 3.56809728186568*^9}, 
   3.568097471116673*^9, 3.568097956544268*^9},
 CellID->1177423470],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615041552921*^9},
 CellID->1723625293],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568097975397878*^9, 3.568615041615641*^9},
 CellID->153949846]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "4"}]], 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "2", ",", "1", ",", "4", ",", "5"}], "}"}], 
   "\[Superset]", 
   RowBox[{"{", 
    RowBox[{"x", ",", "5", ",", "5", ",", "2"}], "}"}]}]}]], "Computation",
 CellChangeTimes->{{3.568097301920753*^9, 3.568097320598306*^9}, 
   3.568097473278623*^9, 3.568097958975476*^9, {3.568097990785139*^9, 
   3.568097992257385*^9}},
 CellID->2113888410],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615044166646*^9},
 CellID->779716871],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568097995312039*^9, 3.568615044243369*^9},
 CellID->322611653]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Exists]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "4"}]], 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "3", ",", "5"}], "}"}], "\[Superset]", 
   RowBox[{"{", 
    RowBox[{"x", ",", "5", ",", "5", ",", "2"}], "}"}]}]}]], "Computation",
 CellChangeTimes->{
  3.56809732950897*^9, 3.568097375160601*^9, {3.568097421153188*^9, 
   3.56809742118863*^9}, 3.568097474734147*^9, 3.568097960646066*^9},
 CellID->407604162],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615046379947*^9},
 CellID->136147011],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568098015103893*^9, 3.56809804947934*^9, 
  3.568098095041492*^9, 3.568615046448891*^9},
 CellID->2075034748]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "\[SupersetEqual]", 
  RowBox[{"{", "1", "}"}]}]], "Computation",
 CellChangeTimes->{{3.568080991131497*^9, 3.568081040680375*^9}},
 CellID->622050425],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615047690709*^9},
 CellID->872056414],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568081049168548*^9, 3.568102943262487*^9, 
  3.568615047747807*^9},
 CellID->1604342221]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "x", ",", "3"}], "}"}], "\[SupersetEqual]", 
  RowBox[{"{", 
   RowBox[{"1", ",", "x"}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.568081299651924*^9, 3.568081306850776*^9}},
 CellID->1244564791],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615049378363*^9},
 CellID->1454947504],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568081308372265*^9, 3.5686150494391*^9},
 CellID->1068128643]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "\[SupersetEqual]", 
  RowBox[{"{", 
   RowBox[{"1", ",", "x"}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.56808136854431*^9, 3.568081372807001*^9}},
 CellID->1843290447],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.56861505238058*^9},
 CellID->96824661],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568081373657657*^9, 3.568615052490798*^9},
 CellID->209891148]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "\[SupersetEqual]", 
  RowBox[{"{", 
   RowBox[{"1", ",", 
    RowBox[{"Theorema`Language`VAR$", "[", "Theorema`Knowledge`x$TM", "]"}]}],
    "}"}]}]], "Computation",
 CellChangeTimes->{{3.568081546616223*^9, 3.568081557204654*^9}, 
   3.568081605233826*^9},
 CellID->1302835223],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615054133277*^9},
 CellID->1702395505],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], "\[SupersetEqual]", 
   StyleBox[
    RowBox[{"{", 
     RowBox[{"1", ",", 
      StyleBox["x", "ExpressionVariable"]}], "}"}], "ExpressionVariable"]}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.56808160738333*^9, 3.568615054215536*^9},
 CellID->1461665150]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "x", ",", "3"}], "}"}], "\[SupersetEqual]", 
  RowBox[{"{", "1", "}"}]}]], "Computation",
 CellChangeTimes->{{3.568081312311622*^9, 3.568081315675295*^9}},
 CellID->340787871],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615058670742*^9},
 CellID->2001439215],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568615058788529*^9},
 CellID->1883034805]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "2", ",", "3"}], "}"}], "\[SupersetEqual]", 
  " ", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}]], "Computation",
 CellChangeTimes->{3.568081165903486*^9, 3.568081251412639*^9},
 CellID->221712880],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615065039953*^9},
 CellID->619012811],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568081270851797*^9, 3.568615065122205*^9},
 CellID->2069426088]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "2", ",", "3", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], "}"}], "\[SupersetEqual]", " ", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}]], "Computation",
 CellChangeTimes->{3.568081182669358*^9, 3.568081253417679*^9},
 CellID->561567310],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615066518688*^9},
 CellID->1020872017],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568081275698113*^9, 3.568615066594216*^9},
 CellID->988689706]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Element]", 
     RowBox[{"{", 
      RowBox[{
      "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", 
       "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15"}], "}"}]}],
     "|", 
    RowBox[{"x", "<", " ", "12"}]}], "}"}], "\[SupersetEqual]", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "+", "3"}], 
    UnderscriptBox["|", 
     RowBox[{"x", "\[Element]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
       "}"}]}]], 
    RowBox[{"x", "<", "5"}]}], "}"}]}]], "Computation",
 CellChangeTimes->{3.568081206423717*^9, 3.568081258070682*^9},
 CellID->1194530423],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615074953668*^9},
 CellID->683784181],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568081281812726*^9, 3.568615075018194*^9},
 CellID->286324002]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Element]", "\[DoubleStruckCapitalN]"}], "|", 
    RowBox[{"x", "<", " ", "10"}]}], "}"}], "\[SupersetEqual]", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.568081238132122*^9, 3.568081259962245*^9}},
 CellID->804787746],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615077133429*^9},
 CellID->319796240],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"{", 
    RowBox[{GridBox[{
       {
        RowBox[{
         StyleBox["x", "ExpressionVariable"], "\[Element]", 
         "\[DoubleStruckCapitalN]"}]}
      }], "|", 
     RowBox[{
      StyleBox["x", "ExpressionVariable"], "<", "10"}]}], "}"}], 
   "\[SupersetEqual]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.56808128586376*^9, 3.568615077197514*^9},
 CellID->957848680]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "^", "2"}], 
    UnderscriptBox["|", "x"], 
    RowBox[{"x", "<", "15"}]}], "}"}], "\[SupersetEqual]", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "^", "2"}], 
    UnderscriptBox["|", "x"], 
    RowBox[{"x", "<", "5"}]}], "}"}]}]], "Computation",
 CellChangeTimes->{
  3.564975167119297*^9, {3.564989965507747*^9, 3.564989979351786*^9}},
 CellID->1126401635],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615079856659*^9},
 CellID->507876635],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox[
      StyleBox["x", "ExpressionVariable"], "2"], 
     UnderscriptBox["|", 
      StyleBox["x", "ExpressionVariable"]], 
     RowBox[{
      StyleBox["x", "ExpressionVariable"], "<", "15"}]}], "}"}], 
   "\[SupersetEqual]", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox[
      StyleBox["x", "ExpressionVariable"], "2"], 
     UnderscriptBox["|", 
      StyleBox["x", "ExpressionVariable"]], 
     RowBox[{
      StyleBox["x", "ExpressionVariable"], "<", "5"}]}], "}"}]}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.564975193523152*^9, 3.564989980890876*^9, 
  3.568080408806794*^9, 3.568615079960596*^9},
 CellID->1035671807]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "4"}]], 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "5"}], "}"}], "\[SupersetEqual]", 
   RowBox[{"{", 
    RowBox[{"x", ",", "5", ",", "5", ",", "2"}], "}"}]}]}]], "Computation",
 CellChangeTimes->{{3.568097275411513*^9, 3.56809728186568*^9}, 
   3.568097471116673*^9, 3.568097956544268*^9, 3.568098131137911*^9},
 CellID->2116606345],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615081504562*^9},
 CellID->1971620275],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568098138758854*^9, 3.568615081590687*^9},
 CellID->1750301284]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "4"}]], 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "2", ",", "1", ",", "4", ",", "5"}], "}"}], 
   "\[SupersetEqual]", 
   RowBox[{"{", 
    RowBox[{"x", ",", "5", ",", "5", ",", "2"}], "}"}]}]}]], "Computation",
 CellChangeTimes->{{3.568097301920753*^9, 3.568097320598306*^9}, 
   3.568097473278623*^9, 3.568097958975476*^9, {3.568097990785139*^9, 
   3.568097992257385*^9}, 3.568098133011685*^9},
 CellID->570544774],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615082890531*^9},
 CellID->592753431],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568098243626786*^9, 3.568615082967238*^9},
 CellID->713065298]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Exists]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "4"}]], 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "3", ",", "5"}], "}"}], "\[SupersetEqual]", 
   RowBox[{"{", 
    RowBox[{"x", ",", "5", ",", "5", ",", "2"}], "}"}]}]}]], "Computation",
 CellChangeTimes->{
  3.56809732950897*^9, 3.568097375160601*^9, {3.568097421153188*^9, 
   3.56809742118863*^9}, 3.568097474734147*^9, 3.568097960646066*^9, 
   3.568098134720978*^9},
 CellID->337500590],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615084886203*^9},
 CellID->1724832082],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.568098304996455*^9, 3.56809831423485*^9}, 
   3.568615084959508*^9},
 CellID->1425418558]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Power set", "Subtitle",
 CellChangeTimes->{{3.564820183565058*^9, 3.564820197318193*^9}},
 CellID->1766062839],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[ScriptCapitalP]", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "3"}], "}"}], "]"}]], "Computation",
 CellChangeTimes->{
  3.564975216560591*^9, {3.567483143049304*^9, 3.567483148668192*^9}, {
   3.56750894424639*^9, 3.567508960162095*^9}, {3.56750914021177*^9, 
   3.567509146402729*^9}},
 CellID->434047390],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615105959206*^9},
 CellID->249024709],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"\<\"\[EmptySet]\"\>", ",", 
    RowBox[{"{", "1", "}"}], ",", 
    RowBox[{"{", "3", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567777545373016*^9, 3.567778209649238*^9, 
  3.567778275886428*^9, 3.567778341407971*^9, 3.567778942405169*^9, 
  3.567923311066943*^9, 3.568098331868571*^9, 3.56810152943464*^9, 
  3.568102951941234*^9, 3.568381584714286*^9, 3.568615106043161*^9},
 CellID->1289214096]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[ScriptCapitalP]", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", 
    RowBox[{"Theorema`Language`VAR$", "[", "Theorema`Knowledge`x$TM", "]"}]}],
    "}"}], "]"}]], "Computation",
 CellChangeTimes->{{3.567483170163908*^9, 3.56748318617911*^9}},
 CellID->613072390],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615108172083*^9},
 CellID->23235832],

Cell[BoxData[
 FormBox[
  RowBox[{"\[ScriptCapitalP]", "[", 
   StyleBox[
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", 
      StyleBox["x", "ExpressionVariable"]}], "}"}], "ExpressionVariable"], 
   "]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567483189401209*^9, 3.567483224983644*^9, 
  3.567483359006707*^9, 3.567483520495036*^9, 3.568098336322525*^9, 
  3.568381589511636*^9, 3.568615108244719*^9},
 CellID->1117756564]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[ScriptCapitalP]", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]], "Computation",
 CellChangeTimes->{3.567483140330332*^9},
 CellID->1901072664],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615109452087*^9},
 CellID->1706319789],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"\<\"\[EmptySet]\"\>", ",", 
    RowBox[{"{", "1", "}"}], ",", 
    RowBox[{"{", "2", "}"}], ",", 
    RowBox[{"{", "3", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567483160332382*^9, 3.567483215512698*^9, 
  3.567483550917344*^9, 3.567923323359445*^9, 3.568098339616754*^9, 
  3.568381593327433*^9, 3.568615109523972*^9},
 CellID->1759582613]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[ScriptCapitalP]", "[", 
  RowBox[{"{", "}"}], "]"}]], "Computation",
 CellChangeTimes->{3.564975221623182*^9},
 CellID->711891959],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615110597755*^9},
 CellID->907492451],

Cell[BoxData[
 FormBox[
  RowBox[{"{", "\<\"\[EmptySet]\"\>", "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.564975230173149*^9, 3.56732705179675*^9, 
  3.567482644334614*^9, 3.567483218403452*^9, 3.567483555911616*^9, 
  3.567777584812227*^9, 3.567923326673743*^9, 3.568098342227133*^9, 
  3.568615110663881*^9},
 CellID->850964098]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[ScriptCapitalP]", "[", 
  RowBox[{"{", 
   RowBox[{"x", 
    UnderscriptBox["|", 
     RowBox[{"x", "\[Element]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]]}], "}"}], 
  "]"}]], "Computation",
 CellChangeTimes->{
  3.567483574789428*^9, {3.56748366288692*^9, 3.567483692997185*^9}},
 CellID->1388684288],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615111951689*^9},
 CellID->811060301],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"\<\"\[EmptySet]\"\>", ",", 
    RowBox[{"{", "1", "}"}], ",", 
    RowBox[{"{", "2", "}"}], ",", 
    RowBox[{"{", "3", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.567483686030071*^9, 3.567483693976598*^9}, 
   3.568098347333309*^9, 3.568381596824187*^9, 3.568615112012145*^9},
 CellID->100785794]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[ScriptCapitalP]", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "+", "1"}], 
    UnderscriptBox["|", 
     RowBox[{
      RowBox[{"x", "=", "3"}], ",", "\[Ellipsis]", ",", "5"}]]}], "}"}], 
  "]"}]], "Computation",
 CellChangeTimes->{{3.567483706476969*^9, 3.567483729211277*^9}, {
  3.568098429216506*^9, 3.568098429531447*^9}},
 CellID->1198321196],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615113217573*^9},
 CellID->949184072],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"\<\"\[EmptySet]\"\>", ",", 
    RowBox[{"{", "4", "}"}], ",", 
    RowBox[{"{", "5", "}"}], ",", 
    RowBox[{"{", "6", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "6"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "6"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.56748373111017*^9, {3.567483770921027*^9, 3.567483779519787*^9}, 
   3.568098355418605*^9, 3.56809843105782*^9, 3.568615113258394*^9},
 CellID->1021819921]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[ScriptCapitalP]", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "x"}], "}"}], "]"}]], "Computation",
 CellChangeTimes->{{3.568098368505136*^9, 3.568098374766192*^9}},
 CellID->981312428],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615114576903*^9},
 CellID->2026397809],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"\<\"\[EmptySet]\"\>", ",", 
    RowBox[{"{", "1", "}"}], ",", 
    RowBox[{"{", "2", "}"}], ",", 
    RowBox[{"{", "x", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "x"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "x"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "x"}], "}"}]}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568098376281165*^9, 3.568615114620703*^9},
 CellID->798969994]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[ScriptCapitalP]", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], "}"}], "]"}]], "Computation",
 CellChangeTimes->{{3.568098381784951*^9, 3.568098391450249*^9}},
 CellID->1008035057],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615115724864*^9},
 CellID->1422150418],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"\<\"\[EmptySet]\"\>", ",", 
    RowBox[{"{", "1", "}"}], ",", 
    RowBox[{"{", "2", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568098392867708*^9, 3.568381615649927*^9, 
  3.568615115763093*^9},
 CellID->518371690]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[ScriptCapitalP]", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Element]", "\[DoubleStruckCapitalN]"}], "|", 
    RowBox[{"x", ">", " ", "4"}]}], "}"}], "]"}]], "Computation",
 CellChangeTimes->{{3.568098574845826*^9, 3.568098585949425*^9}},
 CellID->1429304846],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615117349402*^9},
 CellID->1980709583],

Cell[BoxData[
 FormBox[
  RowBox[{"\[ScriptCapitalP]", "[", 
   RowBox[{"{", 
    RowBox[{GridBox[{
       {
        RowBox[{
         StyleBox["x", "ExpressionVariable"], "\[Element]", 
         "\[DoubleStruckCapitalN]"}]}
      }], "|", 
     RowBox[{
      StyleBox["x", "ExpressionVariable"], ">", "4"}]}], "}"}], "]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.568098588034327*^9, {3.568381602071215*^9, 3.568381618716222*^9}, 
   3.568615117380037*^9},
 CellID->224171505]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cardinality ", "Subtitle",
 CellChangeTimes->{{3.564821882406084*^9, 3.564821892318513*^9}, {
  3.564975244218956*^9, 3.564975244981082*^9}, {3.564990000309814*^9, 
  3.564990003205624*^9}},
 CellID->1925388177],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[LeftBracketingBar]", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "3"}], "}"}], 
  "\[RightBracketingBar]"}]], "Computation",
 CellChangeTimes->{
  3.564975264721754*^9, {3.567478782876091*^9, 3.567478783458586*^9}},
 CellID->981057829],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615120436071*^9},
 CellID->15900350],

Cell[BoxData[
 FormBox["3", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.564975283530671*^9, 3.564976793125815*^9, 3.567317630739586*^9, 
   3.567317991944005*^9, 3.567318829264899*^9, 3.567326121404873*^9, 
   3.567326219014933*^9, 3.567326388900426*^9, 3.567400183799727*^9, 
   3.567405892810773*^9, {3.567478774520877*^9, 3.567478784462161*^9}, 
   3.567568752775695*^9, 3.567923331202862*^9, 3.568098600088896*^9, 
   3.568102957095569*^9, 3.568615120515687*^9},
 CellID->315948837]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[LeftBracketingBar]", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"{", 
       RowBox[{"5", ",", "8"}], "}"}]}], "}"}]}], "}"}], 
  "\[RightBracketingBar]"}]], "Computation",
 CellChangeTimes->{{3.567923345450865*^9, 3.567923356125997*^9}},
 CellID->1696906418],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615121655446*^9},
 CellID->1213179808],

Cell[BoxData[
 FormBox["4", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567923357761903*^9, 3.568098603033669*^9, 
  3.568615121726441*^9},
 CellID->521565708]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[LeftBracketingBar]", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "3", ",", "x"}], "}"}], 
  "\[RightBracketingBar]"}]], "Computation",
 CellChangeTimes->{
  3.567317653736878*^9, {3.567317708842381*^9, 3.567317709313703*^9}, {
   3.567407542053263*^9, 3.56740754329544*^9}},
 CellID->662181776],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615122732206*^9},
 CellID->339184669],

Cell[BoxData[
 FormBox["4", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567568755551144*^9, 3.567923333391442*^9, 
  3.568098605975987*^9, 3.568615122798203*^9},
 CellID->183452724]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[LeftBracketingBar]", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", 
    RowBox[{"Theorema`Language`VAR$", "[", "Theorema`Knowledge`x$TM", "]"}]}],
    "}"}], "\[RightBracketingBar]"}]], "Computation",
 CellChangeTimes->{3.567317901914988*^9, 3.567317931933227*^9},
 CellID->342541716],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615123923558*^9},
 CellID->80401850],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftBracketingBar]", 
   StyleBox[
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", 
      StyleBox["x", "ExpressionVariable"]}], "}"}], "ExpressionVariable"], 
   "\[RightBracketingBar]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.56740590076832*^9, 3.567407555654763*^9, 
  3.567478787321877*^9, 3.568098608273389*^9, 3.568615123986282*^9},
 CellID->2098767282]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[LeftBracketingBar]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "x"}], "}"}], 
    UnderscriptBox["|", 
     RowBox[{"x", "\[Element]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}]]}], "}"}], 
  "\[RightBracketingBar]"}]], "Computation",
 CellChangeTimes->{{3.567406055008201*^9, 3.567406065946265*^9}, {
  3.567407521185434*^9, 3.567407523122031*^9}, {3.567407564725237*^9, 
  3.567407573312967*^9}, {3.567478805375675*^9, 3.567478805935474*^9}, {
  3.567479003415057*^9, 3.567479011620334*^9}, {3.567479128563034*^9, 
  3.567479130695324*^9}, {3.567479232367753*^9, 3.56747923659557*^9}},
 CellID->824275253],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615124942376*^9},
 CellID->1090945175],

Cell[BoxData[
 FormBox["1", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.56740607393036*^9, 3.567407524946627*^9, {3.567407566127248*^9, 
   3.567407574413755*^9}, {3.567478793720343*^9, 3.567478808012649*^9}, 
   3.567479026969911*^9, {3.567479072071457*^9, 3.567479132483802*^9}, 
   3.567479187335727*^9, 3.567568768197282*^9, 3.568098612865326*^9, 
   3.568615124985417*^9},
 CellID->931365948]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "x"}], "}"}], 
   UnderscriptBox["|", 
    RowBox[{
     RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "4"}]]}], 
  "}"}]], "Computation",
 CellChangeTimes->{{3.567317825680983*^9, 3.567317834853125*^9}, {
  3.567405937267303*^9, 3.567405948989426*^9}, {3.567478994468843*^9, 
  3.567479023361162*^9}, {3.56747914723379*^9, 3.567479151377952*^9}},
 CellID->693205504],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615126309532*^9},
 CellID->762343935],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.567479038030317*^9, 3.567479154704032*^9, {3.567479191673776*^9, 
   3.567479195813774*^9}, 3.568098622404371*^9, 3.568615126351343*^9},
 CellID->1191730969]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[LeftBracketingBar]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"3", "*", "x"}], "+", "1"}], 
    UnderscriptBox["|", 
     RowBox[{
      RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "4"}]]}], "}"}], 
  "\[RightBracketingBar]"}]], "Computation",
 CellChangeTimes->{{3.56731772643686*^9, 3.567317736198437*^9}, {
  3.567317768216172*^9, 3.567317791239187*^9}, {3.567478865783469*^9, 
  3.567478865959425*^9}},
 CellID->1594359120],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615127802359*^9},
 CellID->1880550020],

Cell[BoxData[
 FormBox["4", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.567317795315754*^9, 3.56732640528323*^9, 3.567400230697758*^9, 
   3.567478821984394*^9, 3.567478867352964*^9, 3.567479049164464*^9, {
   3.567568777725459*^9, 3.567568783904693*^9}, 3.568098630058871*^9, 
   3.568615127846792*^9},
 CellID->1784163856]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[LeftBracketingBar]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"3", "*", "x"}], "+", "1"}], 
    UnderscriptBox["|", "x"]}], "}"}], 
  "\[RightBracketingBar]"}]], "Computation",
 CellChangeTimes->{
  3.564975269547097*^9, {3.564990012728415*^9, 3.56499001606209*^9}, {
   3.567478872176426*^9, 3.5674788723749*^9}},
 CellID->1625947214],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615128985725*^9},
 CellID->1070645130],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftBracketingBar]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "+", 
      RowBox[{"3", " ", 
       StyleBox["x", "ExpressionVariable"]}]}], 
     UnderscriptBox["|", 
      StyleBox["x", "ExpressionVariable"]]}], "}"}], 
   "\[RightBracketingBar]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.564975285601969*^9, 3.5649767959991*^9, 
  3.564990017120994*^9, 3.567317638231853*^9, 3.567326408230273*^9, 
  3.567400234831408*^9, 3.567478875168809*^9, 3.567568786474767*^9, 
  3.56809864549581*^9, 3.568615129019166*^9},
 CellID->532036367]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[LeftBracketingBar]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Element]", "\[DoubleStruckCapitalN]"}], "|", 
    RowBox[{"x", "<", " ", "10"}]}], "}"}], 
  "\[RightBracketingBar]"}]], "Computation",
 CellChangeTimes->{3.56497527572225*^9},
 CellID->2049182272],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615131426157*^9},
 CellID->1058830626],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftBracketingBar]", 
   RowBox[{"{", 
    RowBox[{GridBox[{
       {
        RowBox[{
         StyleBox["x", "ExpressionVariable"], "\[Element]", 
         "\[DoubleStruckCapitalN]"}]}
      }], "|", 
     RowBox[{
      StyleBox["x", "ExpressionVariable"], "<", "10"}]}], "}"}], 
   "\[RightBracketingBar]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.564975287872613*^9, 3.564976798910276*^9, 
  3.565005112232366*^9, 3.567317642068769*^9, 3.567326411175942*^9, 
  3.567400237319469*^9, 3.567478883107147*^9, 3.567568790706042*^9, 
  3.568098649215675*^9, 3.568615131476866*^9},
 CellID->263704014]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[LeftBracketingBar]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "5", ",", "7"}], "}"}], "\[Union]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Element]", 
          RowBox[{"{", 
           RowBox[{
           "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", 
            "15"}], "}"}]}], "|", 
         RowBox[{"x", ">", " ", "12"}]}], "}"}]}], ")"}], "\[Intersection]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"2", "*", "x"}], "+", "3"}], 
       UnderscriptBox["|", 
        RowBox[{"x", "\[Element]", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}]]}], "}"}]}], ")"}], 
   StyleBox["\[Backslash]", "OperatorCharacter"], 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"3", "*", "x"}], "+", "1"}], 
     UnderscriptBox["|", 
      RowBox[{
       RowBox[{"x", "=", "2"}], ",", "\[Ellipsis]", ",", "6"}]]}], "}"}]}], 
  "\[RightBracketingBar]"}]], "Computation",
 CellChangeTimes->{3.568614605646531*^9},
 CellID->601873297],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.56861513260946*^9},
 CellID->1050408057],

Cell[BoxData[
 FormBox["1", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.56861513268666*^9},
 CellID->1674203102]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Is element, max, min, ", "Subtitle",
 CellChangeTimes->{{3.564822621466577*^9, 3.564822633371581*^9}, {
   3.564823109743878*^9, 3.564823115974381*^9}, {3.564823240751805*^9, 
   3.564823245384699*^9}, {3.564823309334449*^9, 3.564823310656048*^9}, {
   3.564823443105706*^9, 3.564823446151503*^9}, 3.564823788050506*^9},
 CellID->2132280573],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"3", "\[Element]", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]], "Computation",
 CellChangeTimes->{3.564975313424959*^9},
 CellID->2062942089],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615144302237*^9},
 CellID->537946334],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.564975349992937*^9, 3.565004823331815*^9, 
  3.565004919961441*^9, 3.565005100223757*^9, 3.567312172980172*^9, 
  3.567400402843644*^9, 3.567568742261524*^9, 3.567772622654633*^9, 
  3.568098652930562*^9, 3.568102962081971*^9, 3.568615144355775*^9},
 CellID->1601117377]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "\[Element]", 
  RowBox[{"{", 
   RowBox[{"2", ",", "4", ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "6"}], "}"}]}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.567923389164081*^9, 3.567923403475239*^9}},
 CellID->1253823847],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615146124928*^9},
 CellID->1389232001],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567923405077568*^9, 3.56809865532315*^9, 
  3.568615146179087*^9},
 CellID->1713715680]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"6", "\[Element]", 
  RowBox[{"{", 
   RowBox[{"2", ",", "4", ",", "6", ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "6"}], "}"}]}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.567923413435429*^9, 3.567923419406947*^9}, {
  3.567931335380888*^9, 3.567931336105865*^9}},
 CellID->1561682098],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615147623354*^9},
 CellID->1068338183],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.567923421082194*^9, {3.56793133095295*^9, 3.567931337730052*^9}, 
   3.568098657916337*^9, 3.568615147671385*^9},
 CellID->1966505997]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"6", "\[Element]", 
  RowBox[{"{", 
   RowBox[{"2", ",", "4", ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "6"}], "}"}]}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.567931522277439*^9, 3.567931525522935*^9}},
 CellID->1712151266],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615153651439*^9},
 CellID->936439361],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567931527325452*^9, 3.567931591657353*^9, 
  3.568098663071188*^9, 3.568615153731208*^9},
 CellID->1175244402]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"5", ",", "6"}], "}"}], "\[Element]", 
  RowBox[{"{", 
   RowBox[{"2", ",", "4", ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "6"}], "}"}]}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.568098671262732*^9, 3.568098682246324*^9}},
 CellID->152021011],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615155560909*^9},
 CellID->1227676305],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{{3.568098678635522*^9, 3.568098683574953*^9}, 
   3.56861515560031*^9},
 CellID->415748109]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"4", "\[Element]", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", 
    RowBox[{"{", 
     RowBox[{"6", ",", "8"}], "}"}]}], "}"}]}]], "Computation",
 CellChangeTimes->{
  3.564975317753469*^9, {3.567931341736715*^9, 3.567931347506099*^9}},
 CellID->1619798170],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.56861515704495*^9},
 CellID->792911739],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.564975351940833*^9, 3.565004961879929*^9, 
  3.565005102824382*^9, 3.567312175512998*^9, 3.567400405001891*^9, 
  3.567568745429188*^9, 3.567931348843359*^9, 3.568098687309622*^9, 
  3.568615157069474*^9},
 CellID->2112340009]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"4", "\[Element]", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]], "Computation",
 CellChangeTimes->{{3.567931373914942*^9, 3.567931378064861*^9}},
 CellID->477578838],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.5686151584088*^9},
 CellID->1861562853],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568098693698403*^9, 3.568615158437208*^9},
 CellID->1282423438]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"4", "\[Element]", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", 
    RowBox[{"Theorema`Language`VAR$", "[", "Theorema`Knowledge`x$TM", "]"}]}],
    "}"}]}]], "Computation",
 CellChangeTimes->{
  3.564975317753469*^9, {3.565005146915654*^9, 3.565005150352074*^9}},
 CellID->735536736],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.56861516241009*^9},
 CellID->6886209],

Cell[BoxData[
 FormBox[
  RowBox[{"4", "\[Element]", 
   StyleBox[
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", 
      StyleBox["x", "ExpressionVariable"]}], "}"}], "ExpressionVariable"]}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.565005167500726*^9, 3.567312917331738*^9, 
  3.567400407100144*^9, 3.568098702550052*^9, 3.568615162421864*^9},
 CellID->1197536061]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", "x"], 
  RowBox[{"4", "\[Element]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "x"}], "}"}]}]}]], "Computation",
 CellChangeTimes->{
  3.564975317753469*^9, {3.565005146915654*^9, 3.565005223188243*^9}},
 CellID->2092578955],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615164068967*^9},
 CellID->510609664],

Cell[BoxData[
 FormBox[
  RowBox[{
   UnderscriptBox["\[ForAll]", 
    StyleBox["x", "ExpressionVariable"]], 
   RowBox[{"4", "\[Element]", 
    StyleBox[
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", 
       StyleBox["x", "ExpressionVariable"]}], "}"}], 
     "ExpressionVariable"]}]}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.565005226776079*^9, 3.567312198438177*^9, {3.567400411124057*^9, 
   3.567400419215947*^9}, 3.568098710542854*^9, 3.568615164157156*^9},
 CellID->1644573373]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "4"}]], 
  RowBox[{"4", "\[Element]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "x"}], "}"}]}]}]], "Computation",
 CellChangeTimes->{
  3.564975317753469*^9, {3.565005146915654*^9, 3.565005223188243*^9}, {
   3.565005273684357*^9, 3.565005293864289*^9}, {3.567317813420529*^9, 
   3.567317815995276*^9}},
 CellID->1999025271],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615165552279*^9},
 CellID->1697195019],

Cell[BoxData[
 FormBox["False", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.565005306765742*^9, 3.567312206059086*^9, 
  3.567400421905236*^9, 3.568098717264163*^9, 3.568466048967533*^9, 
  3.56861516563257*^9},
 CellID->995599606]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Exists]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "4"}]], 
  RowBox[{"4", "\[Element]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "x"}], "}"}]}]}]], "Computation",
 CellChangeTimes->{
  3.564975317753469*^9, {3.565005146915654*^9, 3.565005223188243*^9}, {
   3.565005273684357*^9, 3.565005312165055*^9}},
 CellID->444000138],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615167240564*^9},
 CellID->2132701709],

Cell[BoxData[
 FormBox["True", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.565005315791569*^9, 3.567312212405197*^9, 
  3.567400426761208*^9, 3.568098720635968*^9, 3.568615167305955*^9},
 CellID->295663939]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"46", "\[Element]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Element]", "\[DoubleStruckCapitalN]"}], "|", 
    RowBox[{"x", ">", " ", "10"}]}], "}"}]}]], "Computation",
 CellChangeTimes->{3.564975321626313*^9},
 CellID->2035175016],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615168935804*^9},
 CellID->60512609],

Cell[BoxData[
 FormBox[
  RowBox[{"46", "\[Element]", 
   RowBox[{"{", 
    RowBox[{GridBox[{
       {
        RowBox[{
         StyleBox["x", "ExpressionVariable"], "\[Element]", 
         "\[DoubleStruckCapitalN]"}]}
      }], "|", 
     RowBox[{
      StyleBox["x", "ExpressionVariable"], ">", "10"}]}], "}"}]}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.564975353698763*^9, 3.567312216716874*^9, 
  3.567400429241478*^9, 3.568098723674637*^9, 3.568615169006195*^9},
 CellID->984482968]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"max", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]], "Computation",
 CellChangeTimes->{
  3.564975325849599*^9, {3.567582519530904*^9, 3.567582543238299*^9}, {
   3.567594406104306*^9, 3.567594429352564*^9}, {3.567594465505968*^9, 
   3.567594469602046*^9}, {3.567594514573088*^9, 3.567594520110924*^9}, {
   3.567596721960979*^9, 3.56759674151988*^9}, {3.567772634815425*^9, 
   3.567772695590323*^9}, {3.567773716283826*^9, 3.567773717224064*^9}, {
   3.567773767529346*^9, 3.567773768430287*^9}, {3.567776154462903*^9, 
   3.567776166909691*^9}, {3.567776484581061*^9, 3.567776486269399*^9}},
 CellID->1288948241],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615170465646*^9},
 CellID->821671463],

Cell[BoxData[
 FormBox["3", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.567774247088969*^9, {3.567776145081926*^9, 3.567776189648564*^9}, {
   3.567776432032763*^9, 3.567776437662628*^9}, 3.567776487996422*^9, 
   3.568098726673564*^9, 3.568102976042036*^9, 3.568615170529577*^9},
 CellID->1858384344]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"max", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "x"}], "}"}], "]"}]], "Computation",
 CellChangeTimes->{{3.567776505535525*^9, 3.56777650811169*^9}},
 CellID->1604796387],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.56861518674612*^9},
 CellID->204594762],

Cell[BoxData[
 FormBox[
  RowBox[{"max", "[", 
   RowBox[{"3", ",", "x"}], "]"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.567776509400036*^9, 3.568099047926221*^9, 
  3.568382280966885*^9, 3.568615186803614*^9},
 CellID->360341760]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"max", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Element]", "\[DoubleStruckCapitalN]"}], "|", 
    RowBox[{"x", ">", " ", "10"}]}], "}"}], "]"}]], "Computation",
 CellChangeTimes->{
  3.564975329738827*^9, {3.56777645211554*^9, 3.567776453120932*^9}},
 CellID->516797755],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615188310946*^9},
 CellID->1774040397],

Cell[BoxData[
 FormBox[
  RowBox[{"max", "[", 
   RowBox[{"{", 
    RowBox[{GridBox[{
       {
        RowBox[{
         StyleBox["x", "ExpressionVariable"], "\[Element]", 
         "\[DoubleStruckCapitalN]"}]}
      }], "|", 
     RowBox[{
      StyleBox["x", "ExpressionVariable"], ">", "10"}]}], "}"}], "]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.564975359844767*^9, 3.567582701540363*^9, 
  3.567596716629517*^9, 3.567772629986269*^9, 3.567776453654618*^9, 
  3.568099057057633*^9, 3.568615188365842*^9},
 CellID->160840183]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"max", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "+", "3"}], 
    UnderscriptBox["|", 
     RowBox[{"x", "\[Element]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
       "}"}]}]], 
    RowBox[{"x", "<", "5"}]}], "}"}], "]"}]], "Computation",
 CellChangeTimes->{{3.568099375350503*^9, 3.568099386292241*^9}},
 CellID->603705621],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615189572377*^9},
 CellID->1756781790],

Cell[BoxData[
 FormBox["7", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568099388848076*^9, 3.568615189621288*^9},
 CellID->1928321144]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"max", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "7"}], "}"}], "\[Union]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "+", "3"}], 
     UnderscriptBox["|", 
      RowBox[{"x", "\[Element]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
        "}"}]}]], 
     RowBox[{"x", "<", "5"}]}], "}"}]}], "]"}]], "Computation",
 CellChangeTimes->{3.568614548025862*^9},
 CellID->587702453],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615190969363*^9},
 CellID->674302402],

Cell[BoxData[
 FormBox["7", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568615191062461*^9},
 CellID->803040903]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"min", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]], "Computation",
 CellChangeTimes->{3.564975333537643*^9, 3.567594709923381*^9},
 CellID->551159111],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615192516956*^9},
 CellID->537263206],

Cell[BoxData[
 FormBox["1", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.567582706883518*^9, {3.567594704311569*^9, 3.567594711102584*^9}, 
   3.567776442497241*^9, 3.568099060635036*^9, 3.56810298011156*^9, 
   3.568615192543761*^9},
 CellID->2088857466]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"min", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Element]", "\[DoubleStruckCapitalN]"}], "|", 
    RowBox[{"x", ">", " ", "10"}]}], "}"}], "]"}]], "Computation",
 CellChangeTimes->{
  3.56497533814733*^9, {3.567776446262247*^9, 3.567776446829283*^9}},
 CellID->395715125],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615193918118*^9},
 CellID->1729668274],

Cell[BoxData[
 FormBox[
  RowBox[{"min", "[", 
   RowBox[{"{", 
    RowBox[{GridBox[{
       {
        RowBox[{
         StyleBox["x", "ExpressionVariable"], "\[Element]", 
         "\[DoubleStruckCapitalN]"}]}
      }], "|", 
     RowBox[{
      StyleBox["x", "ExpressionVariable"], ">", "10"}]}], "}"}], "]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.564975366274902*^9, 3.567582720163758*^9, 
  3.567776448122972*^9, 3.568099064491066*^9, 3.568382266969924*^9, 
  3.568615193942844*^9},
 CellID->1904698757]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"min", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "+", "3"}], 
    UnderscriptBox["|", 
     RowBox[{"x", "\[Element]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
       "}"}]}]], 
    RowBox[{"x", "<", "5"}]}], "}"}], "]"}]], "Computation",
 CellChangeTimes->{{3.568099344462119*^9, 3.568099351907472*^9}},
 CellID->833652858],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615195658423*^9},
 CellID->1669923739],

Cell[BoxData[
 FormBox["4", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568099354435693*^9, 3.568615195685167*^9},
 CellID->632060415]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"min", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"4", "+", "x"}], 
     UnderscriptBox["|", 
      RowBox[{"x", "\[Element]", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5", ",", "8", ",", "12"}], "}"}]}]]}], "}"}], 
   "\[Intersection]", 
   RowBox[{"{", 
    RowBox[{"4", ",", "7", ",", "9", ",", "11"}], "}"}]}], 
  "]"}]], "Computation",
 CellChangeTimes->{3.568614562031431*^9},
 CellID->902959886],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Append\"\>", 
                    ",", "\<\"Cardinality\"\>", 
                    ",", "\<\"CartesianProduct\"\>", ",", "\<\"Delete\"\>", 
                    ",", "\<\"DeleteAt\"\>", ",", "\<\"Difference\"\>", 
                    ",", "\<\"Do\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Insert\"\>", ",", "\<\"Intersection\"\>", 
                    ",", "\<\"IsElement\"\>", ",", "\<\"Join\"\>", 
                    ",", "\<\"Length\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Max\"\>", 
                    ",", "\<\"MaximumElementSet\"\>", ",", "\<\"Min\"\>", 
                    ",", "\<\"MinimumElementSet\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"PowerSet\"\>", 
                    ",", "\<\"Prepend\"\>", ",", "\<\"Replace\"\>", 
                    ",", "\<\"ReplacePart\"\>", ",", "\<\"SetEqual\"\>", 
                    ",", "\<\"Subscript\"\>", ",", "\<\"Subset\"\>", 
                    ",", "\<\"SubsetEqual\"\>", ",", "\<\"Superset\"\>", 
                    ",", "\<\"SupersetEqual\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"SymmetricDifference\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"TupleEqual\"\>", ",", "\<\"Union\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Append", "Cardinality", "CartesianProduct", 
                    "Delete", "DeleteAt", "Difference", "Do", "Exists", "For",
                     "Forall", "Greater", "GreaterEqual", "Iff", "Implies", 
                    "Insert", "Intersection", "IsElement", "Join", "Length", 
                    "Less", "LessEqual", "Max", "MaximumElementSet", "Min", 
                    "MinimumElementSet", "Module", "Not", "Or", "Plus", 
                    "PowerSet", "Prepend", "Replace", "ReplacePart", 
                    "SetEqual", "Subscript", "Subset", "SubsetEqual", 
                    "Superset", "SupersetEqual", "Switch", 
                    "SymmetricDifference", "Times", "TupleEqual", "Union", 
                    "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Append", True}, {"Cardinality", True}, {
                 "CartesianProduct", True}, {"Delete", True}, {
                 "DeleteAt", True}, {"Difference", True}, {"Do", True}, {
                 "Equal", False}, {"Exists", True}, {"For", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Insert", True}, {
                 "Intersection", True}, {"IsElement", True}, {"Join", True}, {
                 "Length", True}, {"Less", True}, {"LessEqual", True}, {
                 "Max", True}, {"MaximumElementSet", True}, {"Min", True}, {
                 "MinimumElementSet", True}, {"Module", True}, {
                 "Not", True}, {"Or", True}, {"Plus", True}, {
                 "PowerSet", True}, {"Prepend", True}, {"Replace", True}, {
                 "ReplacePart", True}, {"SetEqual", True}, {
                 "Subscript", True}, {"Subset", True}, {
                 "SubsetEqual", True}, {"Superset", True}, {
                 "SupersetEqual", True}, {"Switch", True}, {
                 "SymmetricDifference", True}, {"Times", True}, {
                 "TupleEqual", True}, {"Union", True}, {"Which", True}, {
                 "While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Append", "Cardinality", "CartesianProduct", "Delete", 
           "DeleteAt", "Difference", "Do", "Exists", "For", "Forall", 
           "Greater", "GreaterEqual", "Iff", "Implies", "Insert", 
           "Intersection", "IsElement", "Join", "Length", "Less", "LessEqual",
            "Max", "MaximumElementSet", "Min", "MinimumElementSet", "Module", 
           "Not", "Or", "Plus", "PowerSet", "Prepend", "Replace", 
           "ReplacePart", "SetEqual", "Subscript", "Subset", "SubsetEqual", 
           "Superset", "SupersetEqual", "Switch", "SymmetricDifference", 
           "Times", "TupleEqual", "Union", "Which", "While"}, "CIContent"]}], 
       
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Append", True}, {"Cardinality", True}, {
          "CartesianProduct", True}, {"Delete", True}, {"DeleteAt", True}, {
          "Difference", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Insert", True}, {"Intersection", True}, {
          "IsElement", True}, {"Join", True}, {"Length", True}, {
          "Less", True}, {"LessEqual", True}, {"Max", True}, {
          "MaximumElementSet", True}, {"Min", True}, {
          "MinimumElementSet", True}, {"Module", True}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"PowerSet", True}, {
          "Prepend", True}, {"Replace", True}, {"ReplacePart", True}, {
          "SetEqual", True}, {"Subscript", True}, {"Subset", True}, {
          "SubsetEqual", True}, {"Superset", True}, {"SupersetEqual", True}, {
          "Switch", True}, {"SymmetricDifference", True}, {"Times", True}, {
          "TupleEqual", True}, {"Union", True}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.568615197959278*^9},
 CellID->534289140],

Cell[BoxData[
 FormBox["7", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.568615198041045*^9},
 CellID->35332102]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{905, 1120},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
ShowSelection->True,
Magnification:>FEPrivate`If[
  FEPrivate`Equal[FEPrivate`$VersionNumber, 6.], 1.25, 1.25 Inherited],
FrontEndVersion->"8.0 for Linux x86 (32-bit) (February 23, 2011)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Theorema"}, "TheoremaCore.nb"]]], 
   
   Cell["Modify the definitions below to change the default appearance of all \
cells in a given style. \nMake modifications to any definition using commands \
in the Format menu.", "Text"], 
   Cell[
    CellGroupData[{
      Cell["Notebook Options Settings", "Section"], 
      Cell[
      "The options defined for the style below will be used at the Notebook \
level.", "Text"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Notebook"], InputAliases -> {"and" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               
               RowBox[{
                "\[SelectionPlaceholder]", "\[And]", "\[Placeholder]"}], 
               TagBox[")", "AutoParentheses"]}], "or" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               RowBox[{"\[SelectionPlaceholder]", "\[Or]", "\[Placeholder]"}], 
               TagBox[")", "AutoParentheses"]}], "not" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               RowBox[{"\[Not]", "\[SelectionPlaceholder]"}], 
               TagBox[")", "AutoParentheses"]}], "impl" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               
               RowBox[{
                "\[SelectionPlaceholder]", "\[Implies]", "\[Placeholder]"}], 
               TagBox[")", "AutoParentheses"]}], "equiv" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               RowBox[{"\[SelectionPlaceholder]", 
                 TagBox[
                 "\[DoubleLeftRightArrow]", Identity, SyntaxForm -> 
                  "a\[Implies]b"], "\[Placeholder]"}], 
               TagBox[")", "AutoParentheses"]}], "eq" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               
               RowBox[{
                "\[SelectionPlaceholder]", "\[Equal]", "\[Placeholder]"}], 
               TagBox[")", "AutoParentheses"]}], ":equiv" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               RowBox[{"\[SelectionPlaceholder]", 
                 TagBox[
                  
                  RowBox[{
                   ":", "\[NegativeThickSpace]\[NegativeThinSpace]", 
                    "\[DoubleLongLeftRightArrow]"}], Identity, SyntaxForm -> 
                  "a\[Implies]b"], "\[Placeholder]"}], 
               TagBox[")", "AutoParentheses"]}], ":eq" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               RowBox[{"\[SelectionPlaceholder]", ":=", "\[Placeholder]"}], 
               TagBox[")", "AutoParentheses"]}], "far" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               RowBox[{
                 UnderscriptBox["\[ForAll]", "\[Placeholder]"], 
                 "\[SelectionPlaceholder]"}], 
               TagBox[")", "AutoParentheses"]}], "exr" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               RowBox[{
                 UnderscriptBox["\[Exists]", "\[Placeholder]"], 
                 "\[SelectionPlaceholder]"}], 
               TagBox[")", "AutoParentheses"]}], "farc" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               RowBox[{
                 UnderscriptBox[
                  UnderscriptBox["\[ForAll]", "\[Placeholder]"], 
                  "\[Placeholder]"], "\[SelectionPlaceholder]"}], 
               TagBox[")", "AutoParentheses"]}], "exrc" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               RowBox[{
                 UnderscriptBox[
                  UnderscriptBox["\[Exists]", "\[Placeholder]"], 
                  "\[Placeholder]"], "\[SelectionPlaceholder]"}], 
               TagBox[")", "AutoParentheses"]}], "andn" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               RowBox[{"\[And]", "\[Piecewise]", 
                 GridBox[{{"\[SelectionPlaceholder]"}, {"\[Placeholder]"}}]}], 
               TagBox[")", "AutoParentheses"]}], "orn" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               RowBox[{"\[Or]", "\[Piecewise]", 
                 GridBox[{{"\[SelectionPlaceholder]"}, {"\[Placeholder]"}}]}], 
               TagBox[")", "AutoParentheses"]}], "equivn" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               RowBox[{"\[DoubleLeftRightArrow]", "\[Piecewise]", 
                 GridBox[{{"\[SelectionPlaceholder]"}, {"\[Placeholder]"}}]}], 
               TagBox[")", "AutoParentheses"]}], "cdist" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               RowBox[{"\[Piecewise]", 
                 
                 GridBox[{{
                   "\[SelectionPlaceholder]", "\[DoubleLeftArrow]", 
                    "\[Placeholder]"}, {
                   "\[Placeholder]", "\[DoubleLeftArrow]", 
                    "\[Placeholder]"}}]}], 
               TagBox[")", "AutoParentheses"]}], "let" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               RowBox[{
                 UnderscriptBox["let", 
                  RowBox[{"\[Placeholder]", "=", "\[Placeholder]"}]], 
                 "\[SelectionPlaceholder]"}], 
               TagBox[")", "AutoParentheses"]}], "subop" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               SubscriptBox["\[SelectionPlaceholder]", "\[Placeholder]"], 
               TagBox[")", "AutoParentheses"]}], "supop" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               SuperscriptBox["\[SelectionPlaceholder]", "\[Placeholder]"], 
               TagBox[")", "AutoParentheses"]}], "subsupop" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               SubsuperscriptBox[
               "\[SelectionPlaceholder]", "\[Placeholder]", "\[Placeholder]"], 
               TagBox[")", "AutoParentheses"]}], "oop" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               OverscriptBox["\[SelectionPlaceholder]", "\[Placeholder]"], 
               TagBox[")", "AutoParentheses"]}], "uoop" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               UnderoverscriptBox[
               "\[SelectionPlaceholder]", "\[Placeholder]", "\[Placeholder]"], 
               TagBox[")", "AutoParentheses"]}], "osop" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               SubscriptBox[
                OverscriptBox["\[SelectionPlaceholder]", "\[Placeholder]"], 
                "\[Placeholder]"], 
               TagBox[")", "AutoParentheses"]}], "op" -> RowBox[{
               TagBox["(", "AutoParentheses"], 
               TagBox["\[SelectionPlaceholder]", Identity], 
               TagBox[")", "AutoParentheses"]}], "(" -> 
            TagBox["(", "AutoParentheses"], ")" -> 
            TagBox[")", "AutoParentheses"]}, Background -> 
          RGBColor[0.957, 0.96, 0.97]], 
         Cell[
          StyleData["Notebook", "Printout"], Background -> None]}, Open]]}, 
     Open]], 
   Cell[
    CellGroupData[{
      Cell["Style Environment Names", "Section"], 
      Cell[
       StyleData[All, "Working"], DockedCells -> {
         Cell[
         "T h e o r e m a   2", "SBO", CellMargins -> {{0, 0}, {0, 0}}, 
          CellFrameMargins -> {{0, 50}, {0, 0}}, FontSize -> 28, FontSlant -> 
          "Plain", FontColor -> RGBColor[0.29, 0.46, 0.6], TextAlignment -> 
          Right, Background -> RGBColor[0.36, 0.54, 0.69]]}], 
      Cell[
       StyleData[
       All, "Layout", StyleDefinitions -> StyleData[All, "Working"]], 
       MenuSortingValue -> 1200], 
      Cell[
       StyleData[All, "Presentation"], DockedCells -> {
         Cell[
         "T h e o r e m a . 2", "SBO", CellMargins -> {{0, 0}, {0, 0}}, 
          CellFrameMargins -> {{0, 50}, {0, 0}}, FontSize -> 28, FontSlant -> 
          "Plain", FontColor -> RGBColor[0.289412, 0.458824, 0.6], 
          TextAlignment -> Right, Background -> 
          RGBColor[0.364705882, 0.541176471, 0.694117647]]}], 
      Cell[
       StyleData[
       All, "SlideShow", StyleDefinitions -> StyleData[All, "Presentation"]], 
       PageWidth -> WindowWidth, DockedCells -> {
         FEPrivate`FrontEndResource["FEExpressions", "SlideshowToolbar"], 
         Cell[
         "T h e o r e m a . 2", "SBO", CellMargins -> {{0, 0}, {0, 0}}, 
          CellFrameMargins -> {{0, 50}, {0, 0}}, FontSize -> 28, FontSlant -> 
          "Plain", FontColor -> RGBColor[0.289412, 0.458824, 0.6], 
          TextAlignment -> Right, Background -> 
          RGBColor[0.364705882, 0.541176471, 0.694117647]]}, 
       ScrollingOptions -> {
        "PagewiseDisplay" -> True, "VerticalScrollRange" -> Fit}, 
       MenuSortingValue -> 1300], 
      Cell[
       StyleData[All, "Printout"], DockedCells -> {
         Cell[
         "T h e o r e m a . 2", "SBO", CellMargins -> {{0, 0}, {0, 0}}, 
          CellFrameMargins -> {{0, 50}, {0, 0}}, FontSize -> 28, FontSlant -> 
          "Plain", FontColor -> RGBColor[0.289412, 0.458824, 0.6], 
          TextAlignment -> Right, Background -> 
          RGBColor[0.364705882, 0.541176471, 0.694117647]]}]}, Open]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Title and Section Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell["Title", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], CellMargins -> {{27, Inherited}, {0, 30}}, 
             MenuSortingValue -> 1100, MenuCommandKey -> "1", FontColor -> 
             RGBColor[0.23, 0.25, 0.34]], 
            Cell[
             StyleData["Title", "SlideShow"], 
             CellMargins -> {{27, 10}, {0, 45}}], 
            Cell[
             StyleData["Title", "Printout"], ShowGroupOpener -> False, 
             CellMargins -> {{6, 10}, {5, 30}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], CellMargins -> {{27, Inherited}, {0, 2}}, 
             MenuSortingValue -> 1150, FontColor -> 
             RGBColor[0.23, 0.25, 0.34]], 
            Cell[
             StyleData["Subtitle", "SlideShow"], 
             CellMargins -> {{27, 10}, {0, 3}}], 
            Cell[
             StyleData["Subtitle", "Printout"], 
             CellMargins -> {{6, 10}, {5, 0}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubtitle"], MenuSortingValue -> 1200, FontColor -> 
             RGBColor[0.23, 0.25, 0.34]], 
            Cell[
             StyleData["Subsubtitle", "SlideShow"], 
             CellMargins -> {{27, 10}, {12, 3}}], 
            Cell[
             StyleData["Subsubtitle", "Printout"], 
             CellMargins -> {{6, 10}, {0, 0}}]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Sectioning", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], ShowGroupOpener -> True, MenuSortingValue -> 
             1250, MenuCommandKey -> "4", FontColor -> 
             RGBColor[0.3, 0.3, 0.3]], 
            Cell[
             StyleData["Section", "SlideShow"], 
             CellMargins -> {{27, 10}, {12, 51}}], 
            Cell[
             StyleData["Section", "Printout"], ShowGroupOpener -> False, 
             CellMargins -> {{2, 0}, {7, 22}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], CellDingbat -> None, ShowGroupOpener -> 
             True, CellMargins -> {{48, Inherited}, {8, 12}}, 
             MenuSortingValue -> 1300, MenuCommandKey -> "5", FontColor -> 
             RGBColor[0.3, 0.3, 0.3]], 
            Cell[
             StyleData["Subsection", "SlideShow"], 
             CellMargins -> {{48, 10}, {12, 18}}], 
            Cell[
             StyleData["Subsection", "Printout"], ShowGroupOpener -> False, 
             CellMargins -> {{9, 0}, {7, 22}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], CellDingbat -> None, ShowGroupOpener -> 
             True, CellMargins -> {{60, Inherited}, {2, 10}}, 
             MenuSortingValue -> 1350, MenuCommandKey -> "6", FontSlant -> 
             "Italic", FontColor -> RGBColor[0.4, 0.4, 0.4]], 
            Cell[
             StyleData["Subsubsection", "SlideShow"], 
             CellMargins -> {{60, 10}, {3, 15}}], 
            Cell[
             StyleData["Subsubsection", "Printout"], ShowGroupOpener -> False,
              CellMargins -> {{35, 0}, {7, 14}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsubsection"], CellDingbat -> None, 
             ShowGroupOpener -> True, 
             CellMargins -> {{92, Inherited}, {Inherited, Inherited}}, 
             FontColor -> RGBColor[0.4, 0.4, 0.4]], 
            Cell[
             StyleData["Subsubsubsection", "SlideShow"], 
             CellMargins -> {{92, 10}, {3, 15}}, LineSpacing -> {1, 0}], 
            Cell[
             StyleData["Subsubsubsection", "Printout"], 
             CellMargins -> {{50, 0}, {7, 14}}]}, Closed]]}, Closed]]}, 
     Open]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Publication\[Hyphen]ready Documents", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Author"], CellMargins -> {{27, 30}, {20, 5}}, 
          MenuSortingValue -> 1900, FontFamily -> "Helvetica", FontSize -> 14,
           FontSlant -> "Italic"], 
         Cell[
          StyleData["Author", "SlideShow"], 
          CellMargins -> {{27, 30}, {30, 8}}, FontSize -> 28], 
         Cell[
          StyleData["Author", "Printout"], CellMargins -> {{6, 10}, {0, 10}}, 
          FontSize -> 10]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Abstract"], CellFrame -> {{0, 0}, {0.5, 0.5}}, 
          CellMargins -> {{27, 140}, {20, 20}}, LineSpacing -> {0.9, 0}, 
          MenuSortingValue -> 2050, FontFamily -> "Times", FontSize -> 12], 
         Cell[
          StyleData["Abstract", "SlideShow"], CellFrame -> {{0, 0}, {1, 1}}, 
          CellMargins -> {{27, 140}, {30, 30}}, FontSize -> 24], 
         Cell[
          StyleData["Abstract", "Printout"], Hyphenation -> True, 
          LineSpacing -> {1, 2}, FontSize -> 10]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Text", "Section"], 
      Cell[
       StyleData["EnvironmentText"], 
       CellMargins -> {{82, Inherited}, {Inherited, Inherited}}, 
       MenuSortingValue -> 1480, MenuCommandKey -> "T"]}, Open]], 
   Cell[
    CellGroupData[{
      Cell["Theorema", "Section"], 
      Cell[
       StyleData["GlobalDeclaration"], CellFrame -> {{0, 2}, {0, 0}}, 
       ShowCellBracket -> Automatic, CellMargins -> {{76, 10}, {2, 2}}, 
       CellBracketOptions -> {"Color" -> RGBColor[0.73, 0.74, 0.84]}, 
       InitializationCell -> True, CellFrameMargins -> 10, CellFrameColor -> 
       RGBColor[0.73, 0.65, 0.61], CellFrameLabelMargins -> 22, 
       ShowAutoStyles -> False, MenuSortingValue -> 1441, MenuCommandKey -> 
       "G", FontSize -> 14], 
      Cell[
       StyleData["OpenEnvironment"], Editable -> False, Selectable -> False, 
       CellFrame -> {{False, False}, {True, False}}, ShowCellBracket -> True, 
       CellMargins -> {{76, 6}, {-4, Inherited}}, 
       CellBracketOptions -> {"Color" -> RGBColor[0.73, 0.74, 0.84]}, 
       CellFrameMargins -> 2, CellFrameColor -> RGBColor[0.4, 0.4, 0.4], 
       MenuSortingValue -> 1485], 
      Cell[
       StyleData["EnvironmentHeader"], 
       CellFrame -> {{False, False}, {False, False}}, 
       CellMargins -> {{76, Inherited}, {Inherited, Inherited}}, 
       CellBracketOptions -> {"Color" -> RGBColor[0.73, 0.74, 0.84]}, 
       CellFrameMargins -> 6, CellFrameColor -> RGBColor[0.4, 0.4, 0.4], 
       ShowAutoStyles -> False, MenuSortingValue -> 1450, FontSize -> 14, 
       FontWeight -> "Bold", FontVariations -> {"CapsType" -> "SmallCaps"}, 
       Background -> RGBColor[0.89, 0.8, 0.69]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["FormalTextInputFormula"], ShowCellBracket -> Automatic, 
          CellMargins -> {{96, 10}, {2, 2}}, 
          CellBracketOptions -> {"Color" -> RGBColor[0.73, 0.74, 0.84]}, 
          InitializationCell -> True, CellFrameLabelMargins -> 53, 
          ShowAutoStyles -> False, MenuSortingValue -> 1470, MenuCommandKey -> 
          "F", FontWeight -> "Bold", FontColor -> RGBColor[0.25, 0.19, 0.2]], 
         
         Cell[
          StyleData["FormalTextInputFormula", "Layout"], Editable -> False], 
         Cell[
          StyleData["FormalTextInputFormula", "Presentation"], Editable -> 
          False]}, Open]], 
      Cell[
       StyleData["EndEnvironmentMarker"], 
       CellBracketOptions -> {"Color" -> RGBColor[0.73, 0.74, 0.84]}, 
       TextAlignment -> Right, MenuSortingValue -> 1480], 
      Cell[
       StyleData["CloseEnvironment"], Editable -> False, Selectable -> False, 
       CellFrame -> {{False, False}, {False, True}}, ShowCellBracket -> True, 
       CellMargins -> {{76, 6}, {Inherited, 0}}, 
       CellBracketOptions -> {"Color" -> RGBColor[0.73, 0.74, 0.84]}, 
       CellFrameMargins -> 2, CellFrameColor -> RGBColor[0.4, 0.4, 0.4], 
       MenuSortingValue -> 1485], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Computation"], CellFrame -> {{1.5, 0}, {0, 0}}, 
          ShowCellBracket -> Automatic, ShowGroupOpener -> True, 
          CellMargins -> {{76, 0}, {-5, 10}}, 
          CellBracketOptions -> {"Color" -> RGBColor[0.23, 0.25, 0.34]}, 
          CellFrameColor -> RGBColor[0.486, 0.33, 0.32], 
          CellFrameLabels -> {{None, 
             Cell["\[MathematicaIcon]", "CILabel"]}, {None, None}}, 
          CellFrameLabelMargins -> {{12, 10}, {0, 0}}, ShowAutoStyles -> 
          False, MenuSortingValue -> 1510, MenuCommandKey -> "C", FontWeight -> 
          "Bold", FontColor -> RGBColor[0.23, 0.25, 0.34]], 
         Cell[
          StyleData["Computation", "Layout"], Editable -> False], 
         Cell[
          StyleData["Computation", "Presentation"], Editable -> False], 
         Cell[
          StyleData["Computation", "SlideShow"], 
          CellMargins -> {{74, 0}, {-10, 15}}]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ComputationResult"], CellFrame -> {{1.5, 0}, {0, 0}}, 
          ShowCellBracket -> Automatic, CellMargins -> {{76, 60}, {5, -5}}, 
          CellBracketOptions -> {"Color" -> RGBColor[0.23, 0.25, 0.34]}, 
          CellFrameMargins -> {{8, 8}, {2, 0}}, CellFrameColor -> 
          RGBColor[0.486, 0.33, 0.32], 
          CellFrameLabels -> {{None, ""}, {None, None}}, 
          CellFrameLabelMargins -> {{12, 5}, {0, 0}}, StyleMenuListing -> 
          None, FontColor -> RGBColor[0.23, 0.25, 0.34]], 
         Cell[
          StyleData["ComputationResult", "SlideShow"], 
          CellMargins -> {{92, 10}, {15, -10}}]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ComputationInfo"], ShowCellBracket -> Automatic, 
          CellMargins -> {{74, 30}, {0, 0}}, CellFrameLabels -> {{None, 
             Cell["...?", "CIContent"]}, {None, None}}, TextAlignment -> 
          Right, StyleMenuListing -> None], 
         Cell[
          StyleData["ComputationInfo", "SlideShow"], 
          CellMargins -> {{74, 30}, {0, 0}}]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ProofInfo"], ShowCellBracket -> Automatic, 
          CellMargins -> {{74, 30}, {0, 0}}, CellFrameLabels -> {{None, 
             Cell["...?", "PIContent"]}, {None, None}}, TextAlignment -> 
          Right, StyleMenuListing -> None], 
         Cell[
          StyleData["ProofInfo", "SlideShow"], 
          CellMargins -> {{74, 30}, {0, 0}}]}, Open]], 
      Cell[
       StyleData["OpenProof"], ShowCellBracket -> Automatic, 
       CellMargins -> {{66, Inherited}, {Inherited, Inherited}}, 
       StyleMenuListing -> None, FontFamily -> "Arial", FontSize -> 11, 
       FontWeight -> "Plain", FontSlant -> "Italic", 
       FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
      Cell[
       StyleData["ProofDisplay"], ShowCellBracket -> Automatic], 
      Cell[
       StyleData["CloseProof"], ShowCellBracket -> Automatic, TextAlignment -> 
       Right, StyleMenuListing -> None], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["FrameLabel"], LanguageCategory -> None, StyleMenuListing -> 
          None, FontFamily -> "Times New Roman", FontSize -> 10, FontWeight -> 
          "Plain", FontSlant -> "Italic", FontTracking -> "Plain", 
          FontVariations -> {
           "Masked" -> False, "Outline" -> False, "Shadow" -> False, 
            "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
          RGBColor[0.55, 0.44, 0.42], Background -> None], 
         Cell[
          StyleData["FrameLabel", "SlideShow"], FontSize -> 18], 
         Cell[
          StyleData["FrameLabel", "Printout"]]}, Closed]], 
      Cell[
       StyleData["CILabel"], FontSize -> 14, FontWeight -> "Plain", FontSlant -> 
       "Plain", FontTracking -> "Plain", 
       FontVariations -> {
        "Masked" -> False, "Outline" -> False, "Shadow" -> False, 
         "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
       RGBColor[0.404, 0.43, 0.545]], 
      Cell[
       StyleData["CIContent"], FontFamily -> "Times New Roman", FontSize -> 
       10, FontWeight -> "Plain", FontSlant -> "Plain", 
       FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}, 
       FontColor -> RGBColor[0.23, 0.25, 0.34]], 
      Cell[
       StyleData["PILabel"], FontSize -> 14, FontWeight -> "Plain", FontSlant -> 
       "Plain", FontTracking -> "Plain", 
       FontVariations -> {
        "Masked" -> False, "Outline" -> False, "Shadow" -> False, 
         "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
       RGBColor[0.404, 0.43, 0.545]], 
      Cell[
       StyleData["PIContent"], FontFamily -> "Times New Roman", FontSize -> 
       10, FontWeight -> "Plain", FontSlant -> "Plain", 
       FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}, 
       FontColor -> RGBColor[0.23, 0.25, 0.34]], 
      Cell[
       StyleData["OpenArchive"], CellFrame -> {{False, False}, {False, True}},
        ShowCellBracket -> Automatic, CellMargins -> {{70, 70}, {0, 10}}, 
       CellBracketOptions -> {"Color" -> RGBColor[0.73, 0.74, 0.84]}, 
       CellGroupingRules -> {"SectionGrouping", 20}, CellFrameMargins -> 3, 
       CellFrameColor -> RGBColor[0.4, 0.4, 0.4], CellFrameLabelMargins -> 1, 
       DefaultFormatType -> DefaultInputFormatType, ShowAutoStyles -> False, 
       MenuSortingValue -> 1210, FontWeight -> Bold, Background -> 
       RGBColor[0.73, 0.74, 0.84]], 
      Cell[
       StyleData["ArchiveInfo"], ShowCellBracket -> Automatic, 
       CellMargins -> {{70, 70}, {0, 0}}, 
       CellBracketOptions -> {"Color" -> RGBColor[0.73, 0.74, 0.84]}, 
       CellFrameMargins -> 5, CellFrameLabelMargins -> 3, ShowCellTags -> 
       False, ShowAutoStyles -> False, MenuSortingValue -> 1220, FontWeight -> 
       "Bold", Background -> RGBColor[0.88, 0.88, 0.92]], 
      Cell[
       StyleData["CloseArchive"], 
       CellFrame -> {{False, False}, {True, False}}, ShowCellBracket -> 
       Automatic, CellMargins -> {{0, 0}, {5, 10}}, 
       CellBracketOptions -> {"Color" -> RGBColor[0.73, 0.74, 0.84]}, 
       CellGroupingRules -> {"SectionGrouping", 25}, CellFrameMargins -> 2, 
       CellFrameColor -> RGBColor[0.4, 0.4, 0.4], TextAlignment -> Center, 
       MenuSortingValue -> 1230, FontFamily -> "Arial Black", FontSize -> 24, 
       FontWeight -> "Plain", FontSlant -> "Plain", 
       FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}, 
       Background -> RGBColor[0.73, 0.65, 0.61]], 
      Cell[
       StyleData["IncludeArchive"], CellFrame -> {{4, 0}, {False, False}}, 
       ShowCellBracket -> Automatic, 
       CellMargins -> {{81, 100}, {Inherited, Inherited}}, 
       CellBracketOptions -> {"Color" -> RGBColor[0.73, 0.74, 0.84]}, 
       CellFrameColor -> RGBColor[0.55, 0.44, 0.42], 
       CellFrameLabels -> {{"\[RightSkeleton]", None}, {None, None}}, 
       CellFrameLabelMargins -> 25, MenuSortingValue -> 1445], 
      Cell[
       StyleData["ExpressionVariable"], SingleLetterItalics -> True, 
       MultiLetterItalics -> True, FontColor -> RGBColor[0.29, 0.46, 0.6]], 
      Cell[
       StyleData["ExpressionABF"], SingleLetterItalics -> True, 
       MultiLetterItalics -> True, FontColor -> RGBColor[0.29, 0.46, 0.6]], 
      Cell[
       StyleData["ExpressionMeta"], SingleLetterItalics -> True, 
       MultiLetterItalics -> True, FontColor -> RGBColor[0.29, 0.46, 0.6]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["AutoParentheses"], SpanMaxSize -> 3, FontOpacity -> 
          0.15], 
         Cell[
          StyleData["AutoParentheses", "Layout"], FontOpacity -> 0], 
         Cell[
          StyleData["AutoParentheses", "SlideShow"], FontOpacity -> 0]}, 
        Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Emphasized"], MenuCommandKey -> "E", FontSlant -> 
          "Italic"], 
         Cell[
          StyleData["Emphasized", "SlideShow"], FontSlant -> "Plain", 
          FontColor -> RGBColor[0.36, 0.54, 0.69]]}, Open]], 
      Cell[
       StyleData["GenericButton"], FontFamily -> "Courier", FontSize -> 10, 
       FontWeight -> "Plain", FontSlant -> "Plain", FontTracking -> "Plain", 
       FontVariations -> {
        "Masked" -> False, "Outline" -> False, "Shadow" -> False, 
         "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
       RGBColor[0.404, 0.43, 0.545]], 
      Cell[
       StyleData["TheoremaForm"], "TwoByteSyntaxCharacterAutoReplacement" -> 
       True, LineSpacing -> {1.25, 0, 2}, SingleLetterItalics -> True, 
       StyleMenuListing -> None, FontFamily -> "Courier"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["CategorizationSection"], 
          CellMargins -> {{28, 80}, {2, 12}}, 
          CellElementSpacings -> {"ClosedGroupTopMargin" -> 2}, 
          CellGroupingRules -> {"SectionGrouping", 50}, DefaultNewCellStyle -> 
          "Categorization", ParagraphSpacing -> {0.7, 0}, StyleMenuListing -> 
          None, FontFamily -> "Verdana", FontSize -> 11, FontWeight -> "Bold",
           FontColor -> GrayLevel[0.500008]], 
         Cell[
          StyleData["CategorizationSection", "Printout"], 
          CellMargins -> {{24, 0}, {0, 8}}, Hyphenation -> True, 
          HyphenationOptions -> {"HyphenationCharacter" -> "-"}, FontSize -> 
          9]}, Closed]], 
      Cell[
       StyleData["Categorization"], CellMargins -> {{52, 80}, {2, 2}}, 
       CellLabelPositioning -> Above, 
       CellLabelMargins -> {{28, Inherited}, {Inherited, Inherited}}, 
       ParagraphSpacing -> {0.7, 0}, StyleMenuListing -> None, FontFamily -> 
       "Verdana", FontSize -> 11, FontColor -> 
       GrayLevel[0.500008], $CellContext`ReturnCreatesNewCell -> True]}, 
     Open]]}, Visible -> False, FrontEndVersion -> 
  "8.0 for Linux x86 (32-bit) (February 23, 2011)", StyleDefinitions -> 
  "StylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 68, 1, 33, "CategorizationSection",
 CellID->1122911449],
Cell[650, 25, 54, 1, 21, "Categorization",
 CellID->686433507],
Cell[707, 28, 54, 1, 21, "Categorization",
 CellID->605800465],
Cell[764, 31, 55, 1, 21, "Categorization",
 CellID->468444828],
Cell[822, 34, 75, 1, 21, "Categorization",
 CellID->1819557397],
Cell[900, 37, 208, 4, 36, "Input",
 CellID->1389274561]
}, Open  ]],
Cell[CellGroupData[{
Cell[1145, 46, 164, 3, 95, "Title",
 CellID->188839656],
Cell[1312, 51, 191, 3, 40, "Subtitle",
 CellID->1569253126],
Cell[CellGroupData[{
Cell[1528, 58, 113, 3, 27, "Computation",
 CellID->1273021980],
Cell[1644, 63, 13666, 290, 18, "ComputationInfo",
 CellID->1216494575],
Cell[15313, 355, 374, 6, 18, "ComputationResult",
 CellID->1767109919]
}, Open  ]],
Cell[CellGroupData[{
Cell[15724, 366, 260, 6, 27, "Computation",
 CellID->1878277702],
Cell[15987, 374, 13664, 290, 18, "ComputationInfo",
 CellID->52661699],
Cell[29654, 666, 373, 9, 18, "ComputationResult",
 CellID->1140021654]
}, Open  ]],
Cell[CellGroupData[{
Cell[30064, 680, 248, 7, 27, "Computation",
 CellID->1572154679],
Cell[30315, 689, 13666, 290, 18, "ComputationInfo",
 CellID->1253535459],
Cell[43984, 981, 295, 9, 18, "ComputationResult",
 CellID->1503511104]
}, Open  ]],
Cell[CellGroupData[{
Cell[44316, 995, 290, 9, 27, "Computation",
 CellID->842967358],
Cell[44609, 1006, 13666, 290, 18, "ComputationInfo",
 CellID->1268131262],
Cell[58278, 1298, 350, 11, 18, "ComputationResult",
 CellID->1298341455]
}, Open  ]],
Cell[CellGroupData[{
Cell[58665, 1314, 249, 6, 27, "Computation",
 CellID->824111163],
Cell[58917, 1322, 13665, 290, 18, "ComputationInfo",
 CellID->318187414],
Cell[72585, 1614, 652, 17, 20, "ComputationResult",
 CellID->1067565722]
}, Open  ]],
Cell[CellGroupData[{
Cell[73274, 1636, 275, 7, 27, "Computation",
 CellID->1621296322],
Cell[73552, 1645, 13666, 290, 18, "ComputationInfo",
 CellID->1935998580],
Cell[87221, 1937, 644, 15, 42, "ComputationResult",
 CellID->1600909742]
}, Open  ]],
Cell[CellGroupData[{
Cell[87902, 1957, 323, 10, 27, "Computation",
 CellID->1503515645],
Cell[88228, 1969, 13665, 290, 18, "ComputationInfo",
 CellID->287607725],
Cell[101896, 2261, 308, 8, 18, "ComputationResult",
 CellID->1348496564]
}, Open  ]],
Cell[CellGroupData[{
Cell[102241, 2274, 347, 10, 27, "Computation",
 CellID->1380744781],
Cell[102591, 2286, 13665, 290, 18, "ComputationInfo",
 CellID->860860231],
Cell[116259, 2578, 238, 7, 18, "ComputationResult",
 CellID->2137571769]
}, Open  ]],
Cell[CellGroupData[{
Cell[116534, 2590, 442, 13, 27, "Computation",
 CellID->848667570],
Cell[116979, 2605, 13665, 290, 18, "ComputationInfo",
 CellID->954281383],
Cell[130647, 2897, 379, 9, 18, "ComputationResult",
 CellID->290153929]
}, Open  ]],
Cell[CellGroupData[{
Cell[131063, 2911, 417, 12, 27, "Computation",
 CellID->1896695507],
Cell[131483, 2925, 13666, 290, 18, "ComputationInfo",
 CellID->1741907046],
Cell[145152, 3217, 210, 6, 18, "ComputationResult",
 CellID->355165771]
}, Open  ]],
Cell[CellGroupData[{
Cell[145399, 3228, 312, 9, 44, "Computation",
 CellID->929522843],
Cell[145714, 3239, 13665, 290, 18, "ComputationInfo",
 CellID->254838411],
Cell[159382, 3531, 481, 14, 36, "ComputationResult",
 CellID->615043112]
}, Open  ]],
Cell[CellGroupData[{
Cell[159900, 3550, 332, 10, 56, "Computation",
 CellID->1177514522],
Cell[160235, 3562, 13665, 290, 22, "ComputationInfo",
 CellID->1201736512],
Cell[173903, 3854, 294, 7, 22, "ComputationResult",
 CellID->1471332986]
}, Open  ]],
Cell[CellGroupData[{
Cell[174234, 3866, 184, 6, 55, "Computation",
 CellID->1670877211],
Cell[174421, 3874, 13665, 290, 27, "ComputationInfo",
 CellID->234669383],
Cell[188089, 4166, 299, 10, 56, "ComputationResult",
 CellID->1254398211]
}, Open  ]],
Cell[CellGroupData[{
Cell[188425, 4181, 421, 12, 71, "Computation",
 CellID->1167291697],
Cell[188849, 4195, 13665, 290, 27, "ComputationInfo",
 CellID->463870993],
Cell[202517, 4487, 386, 9, 27, "ComputationResult",
 CellID->1488204843]
}, Open  ]],
Cell[CellGroupData[{
Cell[202940, 4501, 307, 9, 70, "Computation",
 CellID->1456255416],
Cell[203250, 4512, 13665, 290, 27, "ComputationInfo",
 CellID->610425667],
Cell[216918, 4804, 209, 6, 27, "ComputationResult",
 CellID->1732002255]
}, Open  ]],
Cell[CellGroupData[{
Cell[217164, 4815, 308, 9, 62, "Computation",
 CellID->183689803],
Cell[217475, 4826, 13665, 290, 27, "ComputationInfo",
 CellID->639062650],
Cell[231143, 5118, 207, 6, 27, "ComputationResult",
 CellID->928613082]
}, Open  ]],
Cell[CellGroupData[{
Cell[231387, 5129, 269, 8, 71, "Computation",
 CellID->1417934082],
Cell[231659, 5139, 13665, 290, 27, "ComputationInfo",
 CellID->760483010],
Cell[245327, 5431, 525, 16, 60, "ComputationResult",
 CellID->1706628372]
}, Open  ]],
Cell[CellGroupData[{
Cell[245889, 5452, 185, 3, 62, "Subtitle",
 CellID->2038456024],
Cell[CellGroupData[{
Cell[246099, 5459, 425, 10, 41, "Computation",
 CellID->293421284],
Cell[246527, 5471, 13666, 290, 27, "ComputationInfo",
 CellID->1493942197],
Cell[260196, 5763, 272, 5, 27, "ComputationResult",
 CellID->548997942]
}, Open  ]],
Cell[CellGroupData[{
Cell[260505, 5773, 350, 9, 41, "Computation",
 CellID->1903370454],
Cell[260858, 5784, 13666, 290, 27, "ComputationInfo",
 CellID->2084974537],
Cell[274527, 6076, 130, 3, 27, "ComputationResult",
 CellID->142630592]
}, Open  ]],
Cell[CellGroupData[{
Cell[274694, 6084, 245, 7, 41, "Computation",
 CellID->109315499],
Cell[274942, 6093, 13666, 290, 27, "ComputationInfo",
 CellID->1440701483],
Cell[288611, 6385, 243, 5, 27, "ComputationResult",
 CellID->843935768]
}, Open  ]],
Cell[CellGroupData[{
Cell[288891, 6395, 302, 9, 41, "Computation",
 CellID->90524530],
Cell[289196, 6406, 13666, 290, 27, "ComputationInfo",
 CellID->1556444300],
Cell[302865, 6698, 177, 4, 27, "ComputationResult",
 CellID->294199137]
}, Open  ]],
Cell[CellGroupData[{
Cell[303079, 6707, 372, 11, 41, "Computation",
 CellID->88362643],
Cell[303454, 6720, 13665, 290, 27, "ComputationInfo",
 CellID->402095003],
Cell[317122, 7012, 127, 3, 27, "ComputationResult",
 CellID->2006572318]
}, Open  ]],
Cell[CellGroupData[{
Cell[317286, 7020, 256, 7, 41, "Computation",
 CellID->252526170],
Cell[317545, 7029, 13666, 290, 27, "ComputationInfo",
 CellID->1604656779],
Cell[331214, 7321, 152, 3, 27, "ComputationResult",
 CellID->1562760589]
}, Open  ]],
Cell[CellGroupData[{
Cell[331403, 7329, 256, 7, 41, "Computation",
 CellID->1525746980],
Cell[331662, 7338, 13666, 290, 27, "ComputationInfo",
 CellID->1682793148],
Cell[345331, 7630, 335, 6, 27, "ComputationResult",
 CellID->314036197]
}, Open  ]],
Cell[CellGroupData[{
Cell[345703, 7641, 276, 7, 41, "Computation",
 CellID->272418589],
Cell[345982, 7650, 13665, 290, 27, "ComputationInfo",
 CellID->908397136],
Cell[359650, 7942, 313, 6, 27, "ComputationResult",
 CellID->1036640716]
}, Open  ]],
Cell[CellGroupData[{
Cell[360000, 7953, 408, 10, 41, "Computation",
 CellID->802946120],
Cell[360411, 7965, 13666, 290, 27, "ComputationInfo",
 CellID->1596439073],
Cell[374080, 8257, 601, 10, 27, "ComputationResult",
 CellID->1754772178]
}, Open  ]],
Cell[CellGroupData[{
Cell[374718, 8272, 353, 9, 41, "Computation",
 CellID->2092827292],
Cell[375074, 8283, 13665, 290, 27, "ComputationInfo",
 CellID->365557950],
Cell[388742, 8575, 505, 13, 27, "ComputationResult",
 CellID->1399980292]
}, Open  ]],
Cell[CellGroupData[{
Cell[389284, 8593, 344, 9, 41, "Computation",
 CellID->778693881],
Cell[389631, 8604, 13665, 290, 27, "ComputationInfo",
 CellID->1574080107],
Cell[403299, 8896, 449, 12, 27, "ComputationResult",
 CellID->1025078057]
}, Open  ]],
Cell[CellGroupData[{
Cell[403785, 8913, 459, 12, 53, "Computation",
 CellID->265514939],
Cell[404247, 8927, 13665, 290, 27, "ComputationInfo",
 CellID->2084316496],
Cell[417915, 9219, 200, 4, 27, "ComputationResult",
 CellID->2013255540]
}, Open  ]],
Cell[CellGroupData[{
Cell[418152, 9228, 380, 12, 56, "Computation",
 CellID->994056526],
Cell[418535, 9242, 13665, 290, 27, "ComputationInfo",
 CellID->952230954],
Cell[432203, 9534, 199, 4, 27, "ComputationResult",
 CellID->326346606]
}, Open  ]],
Cell[CellGroupData[{
Cell[432439, 9543, 389, 11, 53, "Computation",
 CellID->454794527],
Cell[432831, 9556, 13666, 290, 27, "ComputationInfo",
 CellID->1918207991],
Cell[446500, 9848, 271, 6, 27, "ComputationResult",
 CellID->780528149]
}, Open  ]],
Cell[CellGroupData[{
Cell[446808, 9859, 499, 16, 70, "Computation",
 CellID->392099232],
Cell[447310, 9877, 13665, 290, 27, "ComputationInfo",
 CellID->405474952],
Cell[460978, 10169, 128, 3, 27, "ComputationResult",
 CellID->72337867]
}, Open  ]],
Cell[CellGroupData[{
Cell[461143, 10177, 406, 11, 41, "Computation",
 CellID->396310800],
Cell[461552, 10190, 13666, 290, 27, "ComputationInfo",
 CellID->1286111740],
Cell[475221, 10482, 727, 20, 31, "ComputationResult",
 CellID->1492631702]
}, Open  ]],
Cell[CellGroupData[{
Cell[475985, 10507, 429, 11, 41, "Computation",
 CellID->788042732],
Cell[476417, 10520, 13666, 290, 27, "ComputationInfo",
 CellID->2077216428],
Cell[490086, 10812, 647, 19, 31, "ComputationResult",
 CellID->1527878498]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[490782, 10837, 382, 8, 125, "Subtitle",
 CellID->1129113613],
Cell[CellGroupData[{
Cell[491189, 10849, 238, 6, 41, "Computation",
 CellID->734290670],
Cell[491430, 10857, 13666, 290, 27, "ComputationInfo",
 CellID->1146253074],
Cell[505099, 11149, 713, 14, 27, "ComputationResult",
 CellID->1886093191]
}, Open  ]],
Cell[CellGroupData[{
Cell[505849, 11168, 369, 9, 41, "Computation",
 CellID->1890117088],
Cell[506221, 11179, 13663, 290, 27, "ComputationInfo",
 CellID->985051629],
Cell[519887, 11471, 475, 10, 27, "ComputationResult",
 CellID->561530016]
}, Open  ]],
Cell[CellGroupData[{
Cell[520399, 11486, 254, 7, 41, "Computation",
 CellID->1164679536],
Cell[520656, 11495, 13666, 290, 27, "ComputationInfo",
 CellID->1421402691],
Cell[534325, 11787, 460, 10, 27, "ComputationResult",
 CellID->1299087826]
}, Open  ]],
Cell[CellGroupData[{
Cell[534822, 11802, 351, 10, 41, "Computation",
 CellID->27757395],
Cell[535176, 11814, 13665, 290, 27, "ComputationInfo",
 CellID->630606679],
Cell[548844, 12106, 300, 8, 27, "ComputationResult",
 CellID->1041320965]
}, Open  ]],
Cell[CellGroupData[{
Cell[549181, 12119, 369, 10, 41, "Computation",
 CellID->1173667721],
Cell[549553, 12131, 13666, 290, 27, "ComputationInfo",
 CellID->1763204924],
Cell[563222, 12423, 541, 17, 31, "ComputationResult",
 CellID->49935183]
}, Open  ]],
Cell[CellGroupData[{
Cell[563800, 12445, 459, 14, 68, "Computation",
 CellID->1523941227],
Cell[564262, 12461, 13665, 290, 27, "ComputationInfo",
 CellID->154808664],
Cell[577930, 12753, 1038, 28, 56, "ComputationResult",
 CellID->524118412]
}, Open  ]],
Cell[CellGroupData[{
Cell[579005, 12786, 446, 13, 41, "Computation",
 CellID->1972108085],
Cell[579454, 12801, 13666, 290, 27, "ComputationInfo",
 CellID->1086575900],
Cell[593123, 13093, 267, 7, 27, "ComputationResult",
 CellID->1751247737]
}, Open  ]],
Cell[CellGroupData[{
Cell[593427, 13105, 382, 12, 70, "Computation",
 CellID->1710022929],
Cell[593812, 13119, 13665, 290, 27, "ComputationInfo",
 CellID->131406942],
Cell[607480, 13411, 298, 8, 27, "ComputationResult",
 CellID->1452133850]
}, Open  ]],
Cell[CellGroupData[{
Cell[607815, 13424, 255, 7, 41, "Computation",
 CellID->416662402],
Cell[608073, 13433, 13666, 290, 27, "ComputationInfo",
 CellID->1003744381],
Cell[621742, 13725, 382, 9, 27, "ComputationResult",
 CellID->1705487050]
}, Open  ]],
Cell[CellGroupData[{
Cell[622161, 13739, 306, 9, 41, "Computation",
 CellID->2008702714],
Cell[622470, 13750, 13665, 290, 27, "ComputationInfo",
 CellID->329728260],
Cell[636138, 14042, 311, 8, 27, "ComputationResult",
 CellID->940577230]
}, Open  ]],
Cell[CellGroupData[{
Cell[636486, 14055, 344, 9, 75, "Computation",
 CellID->1779189124],
Cell[636833, 14066, 13666, 290, 27, "ComputationInfo",
 CellID->1571258942],
Cell[650502, 14358, 787, 19, 27, "ComputationResult",
 CellID->1281959214]
}, Open  ]],
Cell[CellGroupData[{
Cell[651326, 14382, 675, 18, 70, "Computation",
 CellID->1142971750],
Cell[652004, 14402, 13666, 290, 27, "ComputationInfo",
 CellID->1266923836],
Cell[665673, 14694, 403, 10, 27, "ComputationResult",
 CellID->1341983285]
}, Open  ]],
Cell[CellGroupData[{
Cell[666113, 14709, 434, 14, 72, "Computation",
 CellID->676048503],
Cell[666550, 14725, 13666, 290, 27, "ComputationInfo",
 CellID->2062487363],
Cell[680219, 15017, 450, 13, 27, "ComputationResult",
 CellID->1672398789]
}, Open  ]],
Cell[CellGroupData[{
Cell[680706, 15035, 419, 13, 71, "Computation",
 CellID->685198312],
Cell[681128, 15050, 13666, 290, 27, "ComputationInfo",
 CellID->1414321152],
Cell[694797, 15342, 520, 11, 27, "ComputationResult",
 CellID->1201115456]
}, Open  ]],
Cell[CellGroupData[{
Cell[695354, 15358, 744, 24, 82, "Computation",
 CellID->2089156671],
Cell[696101, 15384, 13666, 290, 27, "ComputationInfo",
 CellID->1017546843],
Cell[709770, 15676, 274, 9, 27, "ComputationResult",
 CellID->1344053932]
}, Open  ]],
Cell[CellGroupData[{
Cell[710081, 15690, 245, 6, 41, "Computation",
 CellID->184615915],
Cell[710329, 15698, 13665, 290, 27, "ComputationInfo",
 CellID->581510306],
Cell[723997, 15990, 614, 10, 27, "ComputationResult",
 CellID->16316270]
}, Open  ]],
Cell[CellGroupData[{
Cell[724648, 16005, 282, 7, 41, "Computation",
 CellID->125901644],
Cell[724933, 16014, 13666, 290, 27, "ComputationInfo",
 CellID->1082663476],
Cell[738602, 16306, 196, 5, 27, "ComputationResult",
 CellID->1566561935]
}, Open  ]],
Cell[CellGroupData[{
Cell[738835, 16316, 365, 9, 41, "Computation",
 CellID->674518000],
Cell[739203, 16327, 13665, 290, 27, "ComputationInfo",
 CellID->577846286],
Cell[752871, 16619, 170, 4, 27, "ComputationResult",
 CellID->356582519]
}, Open  ]],
Cell[CellGroupData[{
Cell[753078, 16628, 441, 12, 41, "Computation",
 CellID->457395676],
Cell[753522, 16642, 13664, 290, 27, "ComputationInfo",
 CellID->718166113],
Cell[767189, 16934, 197, 5, 27, "ComputationResult",
 CellID->1208452965]
}, Open  ]],
Cell[CellGroupData[{
Cell[767423, 16944, 539, 15, 41, "Computation",
 CellID->2051371882],
Cell[767965, 16961, 13666, 290, 27, "ComputationInfo",
 CellID->1397903484],
Cell[781634, 17253, 274, 9, 27, "ComputationResult",
 CellID->333887389]
}, Open  ]],
Cell[CellGroupData[{
Cell[781945, 17267, 466, 14, 68, "Computation",
 CellID->1732500530],
Cell[782414, 17283, 13666, 290, 27, "ComputationInfo",
 CellID->1258388148],
Cell[796083, 17575, 962, 27, 56, "ComputationResult",
 CellID->1552712149]
}, Open  ]],
Cell[CellGroupData[{
Cell[797082, 17607, 465, 14, 68, "Computation",
 CellID->651077884],
Cell[797550, 17623, 13665, 290, 27, "ComputationInfo",
 CellID->858005801],
Cell[811218, 17915, 907, 26, 56, "ComputationResult",
 CellID->197480400]
}, Open  ]],
Cell[CellGroupData[{
Cell[812162, 17946, 258, 7, 41, "Computation",
 CellID->28094770],
Cell[812423, 17955, 13664, 290, 27, "ComputationInfo",
 CellID->12736972],
Cell[826090, 18247, 378, 7, 27, "ComputationResult",
 CellID->547416146]
}, Open  ]],
Cell[CellGroupData[{
Cell[826505, 18259, 421, 11, 41, "Computation",
 CellID->232286759],
Cell[826929, 18272, 13666, 290, 27, "ComputationInfo",
 CellID->1979342511],
Cell[840598, 18564, 480, 14, 27, "ComputationResult",
 CellID->953314202]
}, Open  ]],
Cell[CellGroupData[{
Cell[841115, 18583, 978, 21, 71, "Computation",
 CellID->176494899],
Cell[842096, 18606, 13666, 290, 27, "ComputationInfo",
 CellID->2118675088],
Cell[855765, 18898, 982, 16, 27, "ComputationResult",
 CellID->1113818077]
}, Open  ]],
Cell[CellGroupData[{
Cell[856784, 18919, 457, 14, 70, "Computation",
 CellID->733610513],
Cell[857244, 18935, 13664, 290, 27, "ComputationInfo",
 CellID->72754390],
Cell[870911, 19227, 419, 11, 27, "ComputationResult",
 CellID->1313174725]
}, Open  ]],
Cell[CellGroupData[{
Cell[871367, 19243, 425, 11, 70, "Computation",
 CellID->471864342],
Cell[871795, 19256, 13664, 290, 27, "ComputationInfo",
 CellID->82453601],
Cell[885462, 19548, 435, 11, 27, "ComputationResult",
 CellID->615216375]
}, Open  ]],
Cell[CellGroupData[{
Cell[885934, 19564, 371, 9, 41, "Computation",
 CellID->1767504136],
Cell[886308, 19575, 13663, 290, 27, "ComputationInfo",
 CellID->1924066162],
Cell[899974, 19867, 363, 8, 27, "ComputationResult",
 CellID->663963907]
}, Open  ]],
Cell[CellGroupData[{
Cell[900374, 19880, 498, 12, 75, "Computation",
 CellID->2085377726],
Cell[900875, 19894, 13665, 290, 27, "ComputationInfo",
 CellID->631532645],
Cell[914543, 20186, 590, 15, 27, "ComputationResult",
 CellID->859245990]
}, Open  ]],
Cell[CellGroupData[{
Cell[915170, 20206, 301, 8, 41, "Computation",
 CellID->317337134],
Cell[915474, 20216, 13663, 290, 27, "ComputationInfo",
 CellID->83042194],
Cell[929140, 20508, 221, 6, 27, "ComputationResult",
 CellID->1209378931]
}, Open  ]],
Cell[CellGroupData[{
Cell[929398, 20519, 330, 9, 41, "Computation",
 CellID->1561016974],
Cell[929731, 20530, 13666, 290, 27, "ComputationInfo",
 CellID->1215828510],
Cell[943400, 20822, 195, 5, 27, "ComputationResult",
 CellID->801208307]
}, Open  ]],
Cell[CellGroupData[{
Cell[943632, 20832, 566, 16, 72, "Computation",
 CellID->2019828648],
Cell[944201, 20850, 13665, 290, 27, "ComputationInfo",
 CellID->270348248],
Cell[957869, 21142, 789, 24, 62, "ComputationResult",
 CellID->466248346]
}, Open  ]],
Cell[CellGroupData[{
Cell[958695, 21171, 421, 13, 75, "Computation",
 CellID->2003091963],
Cell[959119, 21186, 13666, 290, 27, "ComputationInfo",
 CellID->1135095696],
Cell[972788, 21478, 233, 6, 27, "ComputationResult",
 CellID->1528736396]
}, Open  ]],
Cell[CellGroupData[{
Cell[973058, 21489, 540, 16, 71, "Computation",
 CellID->923108829],
Cell[973601, 21507, 13666, 290, 27, "ComputationInfo",
 CellID->2018960495],
Cell[987270, 21799, 528, 15, 27, "ComputationResult",
 CellID->1993101497]
}, Open  ]],
Cell[CellGroupData[{
Cell[987835, 21819, 606, 18, 70, "Computation",
 CellID->1152139158],
Cell[988444, 21839, 13666, 290, 27, "ComputationInfo",
 CellID->1726216797],
Cell[1002113, 22131, 999, 30, 65, "ComputationResult",
 CellID->1027953086]
}, Open  ]],
Cell[CellGroupData[{
Cell[1003149, 22166, 883, 29, 82, "Computation",
 CellID->1987603282],
Cell[1004035, 22197, 13664, 290, 27, "ComputationInfo",
 CellID->835030593],
Cell[1017702, 22489, 153, 3, 27, "ComputationResult",
 CellID->1228347400]
}, Open  ]],
Cell[CellGroupData[{
Cell[1017892, 22497, 332, 9, 41, "Computation",
 CellID->904495502],
Cell[1018227, 22508, 13666, 290, 27, "ComputationInfo",
 CellID->1040690058],
Cell[1031896, 22800, 576, 12, 27, "ComputationResult",
 CellID->1382446739]
}, Open  ]],
Cell[CellGroupData[{
Cell[1032509, 22817, 337, 10, 41, "Computation",
 CellID->225256874],
Cell[1032849, 22829, 13666, 290, 27, "ComputationInfo",
 CellID->1060206263],
Cell[1046518, 23121, 416, 10, 27, "ComputationResult",
 CellID->1994004260]
}, Open  ]],
Cell[CellGroupData[{
Cell[1046971, 23136, 299, 8, 41, "Computation",
 CellID->1845212526],
Cell[1047273, 23146, 13666, 290, 27, "ComputationInfo",
 CellID->1353638179],
Cell[1060942, 23438, 352, 8, 27, "ComputationResult",
 CellID->26540692]
}, Open  ]],
Cell[CellGroupData[{
Cell[1061331, 23451, 309, 8, 41, "Computation",
 CellID->1460233169],
Cell[1061643, 23461, 13666, 290, 27, "ComputationInfo",
 CellID->2066758650],
Cell[1075312, 23753, 488, 11, 27, "ComputationResult",
 CellID->519329257]
}, Open  ]],
Cell[CellGroupData[{
Cell[1075837, 23769, 396, 10, 41, "Computation",
 CellID->1545471897],
Cell[1076236, 23781, 13666, 290, 27, "ComputationInfo",
 CellID->1055362485],
Cell[1089905, 24073, 465, 13, 27, "ComputationResult",
 CellID->1664428182]
}, Open  ]],
Cell[CellGroupData[{
Cell[1090407, 24091, 490, 15, 68, "Computation",
 CellID->1150204589],
Cell[1090900, 24108, 13666, 290, 27, "ComputationInfo",
 CellID->1099341487],
Cell[1104569, 24400, 837, 25, 57, "ComputationResult",
 CellID->1137816086]
}, Open  ]],
Cell[CellGroupData[{
Cell[1105443, 24430, 492, 15, 68, "Computation",
 CellID->812711803],
Cell[1105938, 24447, 13665, 290, 27, "ComputationInfo",
 CellID->132160909],
Cell[1119606, 24739, 791, 24, 57, "ComputationResult",
 CellID->875924001]
}, Open  ]],
Cell[CellGroupData[{
Cell[1120434, 24768, 415, 13, 70, "Computation",
 CellID->93053144],
Cell[1120852, 24783, 13666, 290, 27, "ComputationInfo",
 CellID->1801779993],
Cell[1134521, 25075, 299, 10, 27, "ComputationResult",
 CellID->763693554]
}, Open  ]],
Cell[CellGroupData[{
Cell[1134857, 25090, 430, 13, 71, "Computation",
 CellID->1797862131],
Cell[1135290, 25105, 13666, 290, 27, "ComputationInfo",
 CellID->1735169992],
Cell[1148959, 25397, 348, 11, 27, "ComputationResult",
 CellID->1884822187]
}, Open  ]],
Cell[CellGroupData[{
Cell[1149344, 25413, 1027, 33, 158, "Computation",
 CellID->211762389],
Cell[1150374, 25448, 13666, 290, 27, "ComputationInfo",
 CellID->1973072485],
Cell[1164043, 25740, 130, 3, 27, "ComputationResult",
 CellID->803514854]
}, Open  ]],
Cell[CellGroupData[{
Cell[1164210, 25748, 528, 13, 41, "Computation",
 CellID->886391122],
Cell[1164741, 25763, 13665, 290, 27, "ComputationInfo",
 CellID->538546846],
Cell[1178409, 26055, 1744, 33, 65, "ComputationResult",
 CellID->95937085]
}, Open  ]],
Cell[CellGroupData[{
Cell[1180190, 26093, 258, 7, 41, "Computation",
 CellID->1213194629],
Cell[1180451, 26102, 13666, 290, 27, "ComputationInfo",
 CellID->1269763200],
Cell[1194120, 26394, 903, 20, 27, "ComputationResult",
 CellID->1673642542]
}, Open  ]],
Cell[CellGroupData[{
Cell[1195060, 26419, 308, 9, 41, "Computation",
 CellID->2117084234],
Cell[1195371, 26430, 13666, 290, 27, "ComputationInfo",
 CellID->1624673481],
Cell[1209040, 26722, 946, 23, 27, "ComputationResult",
 CellID->1141240048]
}, Open  ]],
Cell[CellGroupData[{
Cell[1210023, 26750, 334, 9, 41, "Computation",
 CellID->780578926],
Cell[1210360, 26761, 13666, 290, 27, "ComputationInfo",
 CellID->1203406630],
Cell[1224029, 27053, 389, 12, 27, "ComputationResult",
 CellID->21709486]
}, Open  ]],
Cell[CellGroupData[{
Cell[1224455, 27070, 373, 10, 41, "Computation",
 CellID->1419732527],
Cell[1224831, 27082, 13665, 290, 27, "ComputationInfo",
 CellID->206807337],
Cell[1238499, 27374, 2522, 61, 172, "ComputationResult",
 CellID->284270382]
}, Open  ]],
Cell[CellGroupData[{
Cell[1241058, 27440, 504, 14, 68, "Computation",
 CellID->2110329258],
Cell[1241565, 27456, 13666, 290, 27, "ComputationInfo",
 CellID->1062399544],
Cell[1255234, 27748, 803, 24, 56, "ComputationResult",
 CellID->1589254077]
}, Open  ]],
Cell[CellGroupData[{
Cell[1256074, 27777, 504, 14, 68, "Computation",
 CellID->2020632843],
Cell[1256581, 27793, 13665, 290, 27, "ComputationInfo",
 CellID->1344476645],
Cell[1270249, 28085, 802, 24, 56, "ComputationResult",
 CellID->908920156]
}, Open  ]],
Cell[CellGroupData[{
Cell[1271088, 28114, 405, 13, 70, "Computation",
 CellID->1738161451],
Cell[1271496, 28129, 13665, 290, 27, "ComputationInfo",
 CellID->795408608],
Cell[1285164, 28421, 1375, 32, 65, "ComputationResult",
 CellID->1371017338]
}, Open  ]],
Cell[CellGroupData[{
Cell[1286576, 28458, 426, 14, 41, "Computation",
 CellID->1716383383],
Cell[1287005, 28474, 13665, 290, 27, "ComputationInfo",
 CellID->828195158],
Cell[1300673, 28766, 1349, 31, 65, "ComputationResult",
 CellID->1314737865]
}, Open  ]],
Cell[CellGroupData[{
Cell[1302059, 28802, 318, 10, 70, "Computation",
 CellID->2109748511],
Cell[1302380, 28814, 13665, 290, 27, "ComputationInfo",
 CellID->278896175],
Cell[1316048, 29106, 309, 10, 27, "ComputationResult",
 CellID->345139692]
}, Open  ]],
Cell[CellGroupData[{
Cell[1316394, 29121, 420, 13, 71, "Computation",
 CellID->774578559],
Cell[1316817, 29136, 13665, 290, 27, "ComputationInfo",
 CellID->266595704],
Cell[1330485, 29428, 1512, 35, 65, "ComputationResult",
 CellID->1416712262]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1332046, 29469, 114, 2, 62, "Subtitle",
 CellID->1728621211],
Cell[CellGroupData[{
Cell[1332185, 29475, 408, 11, 41, "Computation",
 CellID->236676440],
Cell[1332596, 29488, 13665, 290, 27, "ComputationInfo",
 CellID->145203373],
Cell[1346264, 29780, 345, 7, 27, "ComputationResult",
 CellID->656410581]
}, Open  ]],
Cell[CellGroupData[{
Cell[1346646, 29792, 345, 9, 41, "Computation",
 CellID->203770666],
Cell[1346994, 29803, 13666, 290, 27, "ComputationInfo",
 CellID->1791447711],
Cell[1360663, 30095, 129, 3, 27, "ComputationResult",
 CellID->978119502]
}, Open  ]],
Cell[CellGroupData[{
Cell[1360829, 30103, 348, 10, 41, "Computation",
 CellID->1951910112],
Cell[1361180, 30115, 13665, 290, 27, "ComputationInfo",
 CellID->211517563],
Cell[1374848, 30407, 176, 4, 27, "ComputationResult",
 CellID->350465040]
}, Open  ]],
Cell[CellGroupData[{
Cell[1375061, 30416, 306, 8, 41, "Computation",
 CellID->112556865],
Cell[1375370, 30426, 13664, 290, 27, "ComputationInfo",
 CellID->349061799],
Cell[1389037, 30718, 199, 4, 27, "ComputationResult",
 CellID->407714639]
}, Open  ]],
Cell[CellGroupData[{
Cell[1389273, 30727, 358, 10, 41, "Computation",
 CellID->1535060965],
Cell[1389634, 30739, 13666, 290, 27, "ComputationInfo",
 CellID->2083615357],
Cell[1403303, 31031, 175, 4, 27, "ComputationResult",
 CellID->59089890]
}, Open  ]],
Cell[CellGroupData[{
Cell[1403515, 31040, 427, 12, 41, "Computation",
 CellID->970811106],
Cell[1403945, 31054, 13666, 290, 27, "ComputationInfo",
 CellID->1708827202],
Cell[1417614, 31346, 150, 3, 27, "ComputationResult",
 CellID->41912201]
}, Open  ]],
Cell[CellGroupData[{
Cell[1417801, 31354, 272, 7, 41, "Computation",
 CellID->14731138],
Cell[1418076, 31363, 13665, 290, 27, "ComputationInfo",
 CellID->136145759],
Cell[1431744, 31655, 198, 4, 27, "ComputationResult",
 CellID->470565194]
}, Open  ]],
Cell[CellGroupData[{
Cell[1431979, 31664, 746, 22, 113, "Computation",
 CellID->542824615],
Cell[1432728, 31688, 13666, 290, 27, "ComputationInfo",
 CellID->2082889197],
Cell[1446397, 31980, 224, 4, 27, "ComputationResult",
 CellID->1580905908]
}, Open  ]],
Cell[CellGroupData[{
Cell[1446658, 31989, 400, 11, 53, "Computation",
 CellID->485659845],
Cell[1447061, 32002, 13666, 290, 27, "ComputationInfo",
 CellID->1031584872],
Cell[1460730, 32294, 152, 3, 27, "ComputationResult",
 CellID->1521092636]
}, Open  ]],
Cell[CellGroupData[{
Cell[1460919, 32302, 411, 11, 53, "Computation",
 CellID->472896672],
Cell[1461333, 32315, 13666, 290, 27, "ComputationInfo",
 CellID->1187071166],
Cell[1475002, 32607, 180, 4, 27, "ComputationResult",
 CellID->670697357]
}, Open  ]],
Cell[CellGroupData[{
Cell[1475219, 32616, 461, 13, 53, "Computation",
 CellID->1010316981],
Cell[1475683, 32631, 13665, 290, 27, "ComputationInfo",
 CellID->134603742],
Cell[1489351, 32923, 178, 4, 27, "ComputationResult",
 CellID->532667588]
}, Open  ]],
Cell[CellGroupData[{
Cell[1489566, 32932, 302, 8, 41, "Computation",
 CellID->245743665],
Cell[1489871, 32942, 13664, 290, 27, "ComputationInfo",
 CellID->52545950],
Cell[1503538, 33234, 177, 4, 27, "ComputationResult",
 CellID->1065938064]
}, Open  ]],
Cell[CellGroupData[{
Cell[1503752, 33243, 288, 7, 41, "Computation",
 CellID->377653443],
Cell[1504043, 33252, 13666, 290, 27, "ComputationInfo",
 CellID->1662627414],
Cell[1517712, 33544, 198, 4, 27, "ComputationResult",
 CellID->40291616]
}, Open  ]],
Cell[CellGroupData[{
Cell[1517947, 33553, 299, 8, 41, "Computation",
 CellID->94701501],
Cell[1518249, 33563, 13666, 290, 27, "ComputationInfo",
 CellID->1277455627],
Cell[1531918, 33855, 131, 3, 27, "ComputationResult",
 CellID->2013092454]
}, Open  ]],
Cell[CellGroupData[{
Cell[1532086, 33863, 411, 13, 41, "Computation",
 CellID->953369948],
Cell[1532500, 33878, 13666, 290, 27, "ComputationInfo",
 CellID->1108942284],
Cell[1546169, 34170, 177, 4, 27, "ComputationResult",
 CellID->988441380]
}, Open  ]],
Cell[CellGroupData[{
Cell[1546383, 34179, 573, 17, 41, "Computation",
 CellID->1267700764],
Cell[1546959, 34198, 13666, 290, 27, "ComputationInfo",
 CellID->1141546849],
Cell[1560628, 34490, 221, 4, 27, "ComputationResult",
 CellID->1428134931]
}, Open  ]],
Cell[CellGroupData[{
Cell[1560886, 34499, 269, 7, 41, "Computation",
 CellID->1569639534],
Cell[1561158, 34508, 13666, 290, 27, "ComputationInfo",
 CellID->1144517279],
Cell[1574827, 34800, 176, 4, 27, "ComputationResult",
 CellID->2136612324]
}, Open  ]],
Cell[CellGroupData[{
Cell[1575040, 34809, 714, 21, 113, "Computation",
 CellID->924545747],
Cell[1575757, 34832, 13666, 290, 27, "ComputationInfo",
 CellID->1983498689],
Cell[1589426, 35124, 201, 4, 27, "ComputationResult",
 CellID->396485324]
}, Open  ]],
Cell[CellGroupData[{
Cell[1589664, 35133, 422, 12, 53, "Computation",
 CellID->1200023630],
Cell[1590089, 35147, 13665, 290, 27, "ComputationInfo",
 CellID->609610340],
Cell[1603757, 35439, 177, 4, 27, "ComputationResult",
 CellID->714391434]
}, Open  ]],
Cell[CellGroupData[{
Cell[1603971, 35448, 433, 12, 53, "Computation",
 CellID->1329224066],
Cell[1604407, 35462, 13665, 290, 27, "ComputationInfo",
 CellID->745235771],
Cell[1618075, 35754, 153, 3, 27, "ComputationResult",
 CellID->1092126072]
}, Open  ]],
Cell[CellGroupData[{
Cell[1618265, 35762, 478, 13, 53, "Computation",
 CellID->2098908212],
Cell[1618746, 35777, 13665, 290, 27, "ComputationInfo",
 CellID->162269522],
Cell[1632414, 36069, 199, 4, 27, "ComputationResult",
 CellID->746470008]
}, Open  ]],
Cell[CellGroupData[{
Cell[1632650, 36078, 322, 9, 41, "Computation",
 CellID->1152578234],
Cell[1632975, 36089, 13666, 290, 27, "ComputationInfo",
 CellID->2129680812],
Cell[1646644, 36381, 548, 17, 31, "ComputationResult",
 CellID->1295317877]
}, Open  ]],
Cell[CellGroupData[{
Cell[1647229, 36403, 317, 9, 41, "Computation",
 CellID->2108286438],
Cell[1647549, 36414, 13665, 290, 27, "ComputationInfo",
 CellID->549444760],
Cell[1661217, 36706, 497, 16, 31, "ComputationResult",
 CellID->1468195210]
}, Open  ]],
Cell[CellGroupData[{
Cell[1661751, 36727, 390, 10, 41, "Computation",
 CellID->1692358688],
Cell[1662144, 36739, 13666, 290, 27, "ComputationInfo",
 CellID->1527396404],
Cell[1675813, 37031, 543, 17, 31, "ComputationResult",
 CellID->196072229]
}, Open  ]],
Cell[CellGroupData[{
Cell[1676393, 37053, 206, 6, 41, "Computation",
 CellID->42278162],
Cell[1676602, 37061, 13666, 290, 27, "ComputationInfo",
 CellID->1579606892],
Cell[1690271, 37353, 198, 4, 27, "ComputationResult",
 CellID->789360805]
}, Open  ]],
Cell[CellGroupData[{
Cell[1690506, 37362, 242, 6, 41, "Computation",
 CellID->1697709848],
Cell[1690751, 37370, 13666, 290, 27, "ComputationInfo",
 CellID->1289246153],
Cell[1704420, 37662, 151, 3, 27, "ComputationResult",
 CellID->665930039]
}, Open  ]],
Cell[CellGroupData[{
Cell[1704608, 37670, 266, 7, 41, "Computation",
 CellID->1414099083],
Cell[1704877, 37679, 13663, 290, 27, "ComputationInfo",
 CellID->4564429],
Cell[1718543, 37971, 151, 3, 27, "ComputationResult",
 CellID->810053847]
}, Open  ]],
Cell[CellGroupData[{
Cell[1718731, 37979, 318, 9, 41, "Computation",
 CellID->585326171],
Cell[1719052, 37990, 13665, 290, 27, "ComputationInfo",
 CellID->539774065],
Cell[1732720, 38282, 503, 17, 31, "ComputationResult",
 CellID->1668579227]
}, Open  ]],
Cell[CellGroupData[{
Cell[1733260, 38304, 255, 7, 41, "Computation",
 CellID->418125646],
Cell[1733518, 38313, 13666, 290, 27, "ComputationInfo",
 CellID->1385587304],
Cell[1747187, 38605, 153, 3, 27, "ComputationResult",
 CellID->1648716349]
}, Open  ]],
Cell[CellGroupData[{
Cell[1747377, 38613, 339, 9, 41, "Computation",
 CellID->1158085582],
Cell[1747719, 38624, 13664, 290, 27, "ComputationInfo",
 CellID->509536959],
Cell[1761386, 38916, 151, 3, 27, "ComputationResult",
 CellID->379650505]
}, Open  ]],
Cell[CellGroupData[{
Cell[1761574, 38924, 429, 12, 41, "Computation",
 CellID->1608939761],
Cell[1762006, 38938, 13665, 290, 27, "ComputationInfo",
 CellID->929367632],
Cell[1775674, 39230, 178, 4, 27, "ComputationResult",
 CellID->1654054238]
}, Open  ]],
Cell[CellGroupData[{
Cell[1775889, 39239, 429, 12, 41, "Computation",
 CellID->1298140422],
Cell[1776321, 39253, 13665, 290, 27, "ComputationInfo",
 CellID->368779182],
Cell[1789989, 39545, 150, 3, 27, "ComputationResult",
 CellID->765382673]
}, Open  ]],
Cell[CellGroupData[{
Cell[1790176, 39553, 744, 22, 112, "Computation",
 CellID->735712849],
Cell[1790923, 39577, 13666, 290, 27, "ComputationInfo",
 CellID->2050539562],
Cell[1804592, 39869, 151, 3, 27, "ComputationResult",
 CellID->978389522]
}, Open  ]],
Cell[CellGroupData[{
Cell[1804780, 39877, 342, 9, 41, "Computation",
 CellID->432267219],
Cell[1805125, 39888, 13666, 290, 27, "ComputationInfo",
 CellID->1209307422],
Cell[1818794, 40180, 502, 17, 31, "ComputationResult",
 CellID->617447348]
}, Open  ]],
Cell[CellGroupData[{
Cell[1819333, 40202, 446, 12, 53, "Computation",
 CellID->1177423470],
Cell[1819782, 40216, 13666, 290, 27, "ComputationInfo",
 CellID->1723625293],
Cell[1833451, 40508, 152, 3, 27, "ComputationResult",
 CellID->153949846]
}, Open  ]],
Cell[CellGroupData[{
Cell[1833640, 40516, 531, 14, 53, "Computation",
 CellID->2113888410],
Cell[1834174, 40532, 13665, 290, 27, "ComputationInfo",
 CellID->779716871],
Cell[1847842, 40824, 151, 3, 27, "ComputationResult",
 CellID->322611653]
}, Open  ]],
Cell[CellGroupData[{
Cell[1848030, 40832, 501, 13, 53, "Computation",
 CellID->407604162],
Cell[1848534, 40847, 13665, 290, 27, "ComputationInfo",
 CellID->136147011],
Cell[1862202, 41139, 198, 4, 27, "ComputationResult",
 CellID->2075034748]
}, Open  ]],
Cell[CellGroupData[{
Cell[1862437, 41148, 236, 6, 41, "Computation",
 CellID->622050425],
Cell[1862676, 41156, 13665, 290, 27, "ComputationInfo",
 CellID->872056414],
Cell[1876344, 41448, 177, 4, 27, "ComputationResult",
 CellID->1604342221]
}, Open  ]],
Cell[CellGroupData[{
Cell[1876558, 41457, 271, 7, 41, "Computation",
 CellID->1244564791],
Cell[1876832, 41466, 13666, 290, 27, "ComputationInfo",
 CellID->1454947504],
Cell[1890501, 41758, 150, 3, 27, "ComputationResult",
 CellID->1068128643]
}, Open  ]],
Cell[CellGroupData[{
Cell[1890688, 41766, 260, 7, 41, "Computation",
 CellID->1843290447],
Cell[1890951, 41775, 13663, 290, 27, "ComputationInfo",
 CellID->96824661],
Cell[1904617, 42067, 152, 3, 27, "ComputationResult",
 CellID->209891148]
}, Open  ]],
Cell[CellGroupData[{
Cell[1904806, 42075, 364, 10, 41, "Computation",
 CellID->1302835223],
Cell[1905173, 42087, 13666, 290, 27, "ComputationInfo",
 CellID->1702395505],
Cell[1918842, 42379, 374, 11, 27, "ComputationResult",
 CellID->1461665150]
}, Open  ]],
Cell[CellGroupData[{
Cell[1919253, 42395, 246, 6, 41, "Computation",
 CellID->340787871],
Cell[1919502, 42403, 13666, 290, 27, "ComputationInfo",
 CellID->2001439215],
Cell[1933171, 42695, 130, 3, 27, "ComputationResult",
 CellID->1883034805]
}, Open  ]],
Cell[CellGroupData[{
Cell[1933338, 42703, 347, 10, 41, "Computation",
 CellID->221712880],
Cell[1933688, 42715, 13665, 290, 27, "ComputationInfo",
 CellID->619012811],
Cell[1947356, 43007, 153, 3, 27, "ComputationResult",
 CellID->2069426088]
}, Open  ]],
Cell[CellGroupData[{
Cell[1947546, 43015, 405, 11, 41, "Computation",
 CellID->561567310],
Cell[1947954, 43028, 13666, 290, 27, "ComputationInfo",
 CellID->1020872017],
Cell[1961623, 43320, 151, 3, 27, "ComputationResult",
 CellID->988689706]
}, Open  ]],
Cell[CellGroupData[{
Cell[1961811, 43328, 722, 21, 112, "Computation",
 CellID->1194530423],
Cell[1962536, 43351, 13665, 290, 27, "ComputationInfo",
 CellID->683784181],
Cell[1976204, 43643, 151, 3, 27, "ComputationResult",
 CellID->286324002]
}, Open  ]],
Cell[CellGroupData[{
Cell[1976392, 43651, 347, 9, 41, "Computation",
 CellID->804787746],
Cell[1976742, 43662, 13665, 290, 27, "ComputationInfo",
 CellID->319796240],
Cell[1990410, 43954, 506, 17, 31, "ComputationResult",
 CellID->957848680]
}, Open  ]],
Cell[CellGroupData[{
Cell[1990953, 43976, 434, 14, 68, "Computation",
 CellID->1126401635],
Cell[1991390, 43992, 13665, 290, 27, "ComputationInfo",
 CellID->507876635],
Cell[2005058, 44284, 734, 23, 56, "ComputationResult",
 CellID->1035671807]
}, Open  ]],
Cell[CellGroupData[{
Cell[2005829, 44312, 473, 12, 53, "Computation",
 CellID->2116606345],
Cell[2006305, 44326, 13666, 290, 27, "ComputationInfo",
 CellID->1971620275],
Cell[2019974, 44618, 153, 3, 27, "ComputationResult",
 CellID->1750301284]
}, Open  ]],
Cell[CellGroupData[{
Cell[2020164, 44626, 557, 14, 53, "Computation",
 CellID->570544774],
Cell[2020724, 44642, 13665, 290, 27, "ComputationInfo",
 CellID->592753431],
Cell[2034392, 44934, 151, 3, 27, "ComputationResult",
 CellID->713065298]
}, Open  ]],
Cell[CellGroupData[{
Cell[2034580, 44942, 532, 14, 53, "Computation",
 CellID->337500590],
Cell[2035115, 44958, 13666, 290, 27, "ComputationInfo",
 CellID->1724832082],
Cell[2048784, 45250, 179, 4, 27, "ComputationResult",
 CellID->1425418558]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2049012, 45260, 116, 2, 62, "Subtitle",
 CellID->1766062839],
Cell[CellGroupData[{
Cell[2049153, 45266, 332, 8, 41, "Computation",
 CellID->434047390],
Cell[2049488, 45276, 13665, 290, 27, "ComputationInfo",
 CellID->249024709],
Cell[2063156, 45568, 544, 13, 27, "ComputationResult",
 CellID->1289214096]
}, Open  ]],
Cell[CellGroupData[{
Cell[2063737, 45586, 295, 7, 41, "Computation",
 CellID->613072390],
Cell[2064035, 45595, 13664, 290, 27, "ComputationInfo",
 CellID->23235832],
Cell[2077702, 45887, 449, 11, 27, "ComputationResult",
 CellID->1117756564]
}, Open  ]],
Cell[CellGroupData[{
Cell[2078188, 45903, 196, 5, 41, "Computation",
 CellID->1901072664],
Cell[2078387, 45910, 13666, 290, 27, "ComputationInfo",
 CellID->1706319789],
Cell[2092056, 46202, 682, 19, 27, "ComputationResult",
 CellID->1759582613]
}, Open  ]],
Cell[CellGroupData[{
Cell[2092775, 46226, 156, 4, 41, "Computation",
 CellID->711891959],
Cell[2092934, 46232, 13665, 290, 27, "ComputationInfo",
 CellID->907492451],
Cell[2106602, 46524, 354, 8, 27, "ComputationResult",
 CellID->850964098]
}, Open  ]],
Cell[CellGroupData[{
Cell[2106993, 46537, 358, 11, 71, "Computation",
 CellID->1388684288],
Cell[2107354, 46550, 13665, 290, 27, "ComputationInfo",
 CellID->811060301],
Cell[2121022, 46842, 637, 18, 27, "ComputationResult",
 CellID->100785794]
}, Open  ]],
Cell[CellGroupData[{
Cell[2121696, 46865, 381, 11, 70, "Computation",
 CellID->1198321196],
Cell[2122080, 46878, 13665, 290, 27, "ComputationInfo",
 CellID->949184072],
Cell[2135748, 47170, 661, 19, 27, "ComputationResult",
 CellID->1021819921]
}, Open  ]],
Cell[CellGroupData[{
Cell[2136446, 47194, 219, 5, 41, "Computation",
 CellID->981312428],
Cell[2136668, 47201, 13666, 290, 27, "ComputationInfo",
 CellID->2026397809],
Cell[2150337, 47493, 565, 17, 27, "ComputationResult",
 CellID->798969994]
}, Open  ]],
Cell[CellGroupData[{
Cell[2150939, 47515, 271, 7, 41, "Computation",
 CellID->1008035057],
Cell[2151213, 47524, 13666, 290, 27, "ComputationInfo",
 CellID->1422150418],
Cell[2164882, 47816, 808, 26, 65, "ComputationResult",
 CellID->518371690]
}, Open  ]],
Cell[CellGroupData[{
Cell[2165727, 47847, 296, 7, 41, "Computation",
 CellID->1429304846],
Cell[2166026, 47856, 13666, 290, 27, "ComputationInfo",
 CellID->1980709583],
Cell[2179695, 48148, 502, 16, 31, "ComputationResult",
 CellID->224171505]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2180246, 48170, 217, 4, 62, "Subtitle",
 CellID->1925388177],
Cell[CellGroupData[{
Cell[2180488, 48178, 275, 7, 41, "Computation",
 CellID->981057829],
Cell[2180766, 48187, 13664, 290, 27, "ComputationInfo",
 CellID->15900350],
Cell[2194433, 48479, 503, 9, 27, "ComputationResult",
 CellID->315948837]
}, Open  ]],
Cell[CellGroupData[{
Cell[2194973, 48493, 357, 10, 41, "Computation",
 CellID->1696906418],
Cell[2195333, 48505, 13666, 290, 27, "ComputationInfo",
 CellID->1213179808],
Cell[2209002, 48797, 173, 4, 27, "ComputationResult",
 CellID->521565708]
}, Open  ]],
Cell[CellGroupData[{
Cell[2209212, 48806, 334, 8, 41, "Computation",
 CellID->662181776],
Cell[2209549, 48816, 13665, 290, 27, "ComputationInfo",
 CellID->339184669],
Cell[2223217, 49108, 195, 4, 27, "ComputationResult",
 CellID->183452724]
}, Open  ]],
Cell[CellGroupData[{
Cell[2223449, 49117, 322, 7, 41, "Computation",
 CellID->342541716],
Cell[2223774, 49126, 13664, 290, 27, "ComputationInfo",
 CellID->80401850],
Cell[2237441, 49418, 429, 10, 27, "ComputationResult",
 CellID->2098767282]
}, Open  ]],
Cell[CellGroupData[{
Cell[2237907, 49433, 699, 16, 82, "Computation",
 CellID->824275253],
Cell[2238609, 49451, 13666, 290, 27, "ComputationInfo",
 CellID->1090945175],
Cell[2252278, 49743, 414, 8, 27, "ComputationResult",
 CellID->931365948]
}, Open  ]],
Cell[CellGroupData[{
Cell[2252729, 49756, 470, 12, 70, "Computation",
 CellID->693205504],
Cell[2253202, 49770, 13665, 290, 27, "ComputationInfo",
 CellID->762343935],
Cell[2266870, 50062, 428, 12, 27, "ComputationResult",
 CellID->1191730969]
}, Open  ]],
Cell[CellGroupData[{
Cell[2267335, 50079, 473, 13, 78, "Computation",
 CellID->1594359120],
Cell[2267811, 50094, 13666, 290, 27, "ComputationInfo",
 CellID->1880550020],
Cell[2281480, 50386, 341, 7, 27, "ComputationResult",
 CellID->1784163856]
}, Open  ]],
Cell[CellGroupData[{
Cell[2281858, 50398, 375, 11, 76, "Computation",
 CellID->1625947214],
Cell[2282236, 50411, 13666, 290, 27, "ComputationInfo",
 CellID->1070645130],
Cell[2295905, 50703, 599, 15, 63, "ComputationResult",
 CellID->532036367]
}, Open  ]],
Cell[CellGroupData[{
Cell[2296541, 50723, 293, 8, 41, "Computation",
 CellID->2049182272],
Cell[2296837, 50733, 13666, 290, 27, "ComputationInfo",
 CellID->1058830626],
Cell[2310506, 51025, 654, 17, 31, "ComputationResult",
 CellID->263704014]
}, Open  ]],
Cell[CellGroupData[{
Cell[2311197, 51047, 1131, 35, 170, "Computation",
 CellID->601873297],
Cell[2312331, 51084, 13665, 290, 27, "ComputationInfo",
 CellID->1050408057],
Cell[2325999, 51376, 126, 3, 27, "ComputationResult",
 CellID->1674203102]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2326174, 51385, 347, 5, 62, "Subtitle",
 CellID->2132280573],
Cell[CellGroupData[{
Cell[2326546, 51394, 184, 5, 41, "Computation",
 CellID->2062942089],
Cell[2326733, 51401, 13665, 290, 27, "ComputationInfo",
 CellID->537946334],
Cell[2340401, 51693, 359, 6, 27, "ComputationResult",
 CellID->1601117377]
}, Open  ]],
Cell[CellGroupData[{
Cell[2340797, 51704, 259, 7, 41, "Computation",
 CellID->1253823847],
Cell[2341059, 51713, 13666, 290, 27, "ComputationInfo",
 CellID->1389232001],
Cell[2354728, 52005, 176, 4, 27, "ComputationResult",
 CellID->1713715680]
}, Open  ]],
Cell[CellGroupData[{
Cell[2354941, 52014, 318, 8, 41, "Computation",
 CellID->1561682098],
Cell[2355262, 52024, 13666, 290, 27, "ComputationInfo",
 CellID->1068338183],
Cell[2368931, 52316, 226, 5, 27, "ComputationResult",
 CellID->1966505997]
}, Open  ]],
Cell[CellGroupData[{
Cell[2369194, 52326, 259, 7, 41, "Computation",
 CellID->1712151266],
Cell[2369456, 52335, 13665, 290, 27, "ComputationInfo",
 CellID->936439361],
Cell[2383124, 52627, 200, 4, 27, "ComputationResult",
 CellID->1175244402]
}, Open  ]],
Cell[CellGroupData[{
Cell[2383361, 52636, 305, 9, 41, "Computation",
 CellID->152021011],
Cell[2383669, 52647, 13666, 290, 27, "ComputationInfo",
 CellID->1227676305],
Cell[2397338, 52939, 178, 4, 27, "ComputationResult",
 CellID->415748109]
}, Open  ]],
Cell[CellGroupData[{
Cell[2397553, 52948, 294, 8, 41, "Computation",
 CellID->1619798170],
Cell[2397850, 52958, 13664, 290, 27, "ComputationInfo",
 CellID->792911739],
Cell[2411517, 53250, 316, 6, 27, "ComputationResult",
 CellID->2112340009]
}, Open  ]],
Cell[CellGroupData[{
Cell[2411870, 53261, 207, 5, 41, "Computation",
 CellID->477578838],
Cell[2412080, 53268, 13664, 290, 27, "ComputationInfo",
 CellID->1861562853],
Cell[2425747, 53560, 153, 3, 27, "ComputationResult",
 CellID->1282423438]
}, Open  ]],
Cell[CellGroupData[{
Cell[2425937, 53568, 319, 8, 41, "Computation",
 CellID->735536736],
Cell[2426259, 53578, 13662, 290, 27, "ComputationInfo",
 CellID->6886209],
Cell[2439924, 53870, 399, 10, 27, "ComputationResult",
 CellID->1197536061]
}, Open  ]],
Cell[CellGroupData[{
Cell[2440360, 53885, 295, 8, 52, "Computation",
 CellID->2092578955],
Cell[2440658, 53895, 13665, 290, 27, "ComputationInfo",
 CellID->510609664],
Cell[2454326, 54187, 523, 14, 41, "ComputationResult",
 CellID->1644573373]
}, Open  ]],
Cell[CellGroupData[{
Cell[2454886, 54206, 464, 12, 53, "Computation",
 CellID->1999025271],
Cell[2455353, 54220, 13666, 290, 27, "ComputationInfo",
 CellID->1697195019],
Cell[2469022, 54512, 245, 5, 27, "ComputationResult",
 CellID->995599606]
}, Open  ]],
Cell[CellGroupData[{
Cell[2469304, 54522, 413, 11, 53, "Computation",
 CellID->444000138],
Cell[2469720, 54535, 13666, 290, 27, "ComputationInfo",
 CellID->2132701709],
Cell[2483389, 54827, 220, 4, 27, "ComputationResult",
 CellID->295663939]
}, Open  ]],
Cell[CellGroupData[{
Cell[2483646, 54836, 262, 7, 41, "Computation",
 CellID->2035175016],
Cell[2483911, 54845, 13664, 290, 27, "ComputationInfo",
 CellID->60512609],
Cell[2497578, 55137, 508, 15, 31, "ComputationResult",
 CellID->984482968]
}, Open  ]],
Cell[CellGroupData[{
Cell[2498123, 55157, 668, 12, 41, "Computation",
 CellID->1288948241],
Cell[2498794, 55171, 13665, 290, 27, "ComputationInfo",
 CellID->821671463],
Cell[2512462, 55463, 318, 6, 27, "ComputationResult",
 CellID->1858384344]
}, Open  ]],
Cell[CellGroupData[{
Cell[2512817, 55474, 215, 5, 41, "Computation",
 CellID->1604796387],
Cell[2513035, 55481, 13664, 290, 27, "ComputationInfo",
 CellID->204594762],
Cell[2526702, 55773, 249, 6, 27, "ComputationResult",
 CellID->360341760]
}, Open  ]],
Cell[CellGroupData[{
Cell[2526988, 55784, 306, 8, 41, "Computation",
 CellID->516797755],
Cell[2527297, 55794, 13666, 290, 27, "ComputationInfo",
 CellID->1774040397],
Cell[2540966, 56086, 552, 16, 31, "ComputationResult",
 CellID->160840183]
}, Open  ]],
Cell[CellGroupData[{
Cell[2541555, 56107, 409, 12, 71, "Computation",
 CellID->603705621],
Cell[2541967, 56121, 13666, 290, 27, "ComputationInfo",
 CellID->1756781790],
Cell[2555636, 56413, 149, 3, 27, "ComputationResult",
 CellID->1928321144]
}, Open  ]],
Cell[CellGroupData[{
Cell[2555822, 56421, 473, 15, 71, "Computation",
 CellID->587702453],
Cell[2556298, 56438, 13665, 290, 27, "ComputationInfo",
 CellID->674302402],
Cell[2569966, 56730, 126, 3, 27, "ComputationResult",
 CellID->803040903]
}, Open  ]],
Cell[CellGroupData[{
Cell[2570129, 56738, 203, 5, 41, "Computation",
 CellID->551159111],
Cell[2570335, 56745, 13665, 290, 27, "ComputationInfo",
 CellID->537263206],
Cell[2584003, 57037, 271, 6, 27, "ComputationResult",
 CellID->2088857466]
}, Open  ]],
Cell[CellGroupData[{
Cell[2584311, 57048, 306, 8, 41, "Computation",
 CellID->395715125],
Cell[2584620, 57058, 13666, 290, 27, "ComputationInfo",
 CellID->1729668274],
Cell[2598289, 57350, 531, 16, 31, "ComputationResult",
 CellID->1904698757]
}, Open  ]],
Cell[CellGroupData[{
Cell[2598857, 57371, 409, 12, 71, "Computation",
 CellID->833652858],
Cell[2599269, 57385, 13666, 290, 27, "ComputationInfo",
 CellID->1669923739],
Cell[2612938, 57677, 148, 3, 27, "ComputationResult",
 CellID->632060415]
}, Open  ]],
Cell[CellGroupData[{
Cell[2613123, 57685, 449, 15, 71, "Computation",
 CellID->902959886],
Cell[2613575, 57702, 13665, 290, 27, "ComputationInfo",
 CellID->534289140],
Cell[2627243, 57994, 125, 3, 27, "ComputationResult",
 CellID->35332102]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
