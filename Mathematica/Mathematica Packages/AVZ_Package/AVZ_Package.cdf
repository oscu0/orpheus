(* Content-type: application/vnd.wolfram.cdf.text *)

(*** Wolfram CDF File ***)
(* http://www.wolfram.com/cdf *)

(* CreatedBy='Mathematica 10.4' *)

(*************************************************************************)
(*                                                                       *)
(*  The Mathematica License under which this file was created prohibits  *)
(*  restricting third parties in receipt of this file from republishing  *)
(*  or redistributing it by any means, including but not limited to      *)
(*  rights management or terms of use, without the express consent of    *)
(*  Wolfram Research, Inc. For additional information concerning CDF     *)
(*  licensing and redistribution see:                                    *)
(*                                                                       *)
(*        www.wolfram.com/cdf/adopting-cdf/licensing-options.html        *)
(*                                                                       *)
(*************************************************************************)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[      1064,         20]
NotebookDataLength[   3054205,      75495]
NotebookOptionsPosition[   3053500,      75455]
NotebookOutlinePosition[   3054330,      75482]
CellTagsIndexPosition[   3054287,      75479]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 StyleBox["AVZ_Package: ",
  FontFamily->"Book Antiqua",
  FontSize->22,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" This notebook contains our procedures and functions created in \
process of preparation of the following books published in Belarus, Estonia, \
Ukraine and USA, namely:",
  FontFamily->"Book Antiqua",
  FontSize->22,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[0., 0.3686274509803922, 0.1843137254901961]],
 StyleBox["\[LineSeparator]",
  FontFamily->"Book Antiqua",
  FontSize->10,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0.403921568627451, 0., 0.807843137254902]],
 StyleBox["\[LineSeparator]",
  FontFamily->"Book Antiqua",
  FontSize->24,
  FontSlant->"Italic",
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 StyleBox["1",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0.8666666666666667, 0., 0.]],
 StyleBox[". ",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.5019607843137255]],
 StyleBox["Aladjev V.Z., Vaganov V.A.  ",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0.8352941176470589, 0., 0.41568627450980394`]],
 StyleBox["Modular programming: Mathematica vs Maple, and vice versa.",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.5019607843137255]],
 StyleBox["\[Dash]",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.792156862745098]],
 StyleBox["  USA, CA: Palo Alto, Fultus Corporation, 2011, ISBN  \
9781596822689, 418 p.",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.5019607843137255]],
 StyleBox["\[LineSeparator]",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0.25098039215686274`, 0.5019607843137255]],
 StyleBox["2",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0.9176470588235294, 0., 0.]],
 StyleBox[".",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.5019607843137255]],
 StyleBox[" ",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0.25098039215686274`, 0.5019607843137255]],
 StyleBox["Aladjev V.Z., Bezrukavyi A.S., Haritonov V.N., Hodakov V.E.  ",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0.8352941176470589, 0., 0.41568627450980394`]],
 StyleBox["Programming: System Maple or Mathematica?",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.5019607843137255]],
 StyleBox["\[Dash]",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.792156862745098]],
 StyleBox[" Ukraine: Kherson, ",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.5019607843137255]],
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"Oldi", "\[Dash]", "Pl"}],
    FontFamily->"Book Antiqua",
    FontWeight->"Bold",
    FontSlant->"Italic",
    FontColor->RGBColor[0., 0., 0.5019607843137255]], TraditionalForm]],
  FontSize->18],
 StyleBox["us Press, 2011, ISBN  9789662393460, 474 p.",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.5019607843137255]],
 StyleBox["\n",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0.25098039215686274`, 0.5019607843137255]],
 StyleBox["3",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0.9490196078431372, 0., 0.]],
 StyleBox[".",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.5019607843137255]],
 StyleBox[" ",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0.25098039215686274`, 0.5019607843137255]],
 StyleBox["Aladjev V.Z., Boiko V.K., Rovba E.A.  ",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0.8352941176470589, 0., 0.41568627450980394`]],
 StyleBox["Programming in system Mathematica and Maple: A Comparative Aspect.",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.5019607843137255]],
 StyleBox["\[Dash]",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.792156862745098]],
 StyleBox[" Belarus: Grodno, Grodno State University, 2011, ISBN  \
9789855154816, 517 p.",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.5019607843137255]],
 StyleBox["\n",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0.25098039215686274`, 0.5019607843137255]],
 StyleBox["4",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[1., 0., 0.]],
 StyleBox[".",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.5019607843137255]],
 StyleBox[" ",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0.25098039215686274`, 0.5019607843137255]],
 StyleBox["Aladjev V.Z., Grinn D.S., Vaganov V.A.  ",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0.8352941176470589, 0., 0.41568627450980394`]],
 StyleBox["The extended functional means for system Mathematica.",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.5019607843137255]],
 StyleBox["\[Dash]",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.792156862745098]],
 StyleBox[" Ukraine: Kherson: Oldi",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.5019607843137255]],
 StyleBox["\[Dash]",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.792156862745098]],
 StyleBox["Plus Press, 2012, ISBN  9789662393590, 404 p.",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.5019607843137255]],
 StyleBox["\n",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0.25098039215686274`, 0.5019607843137255]],
 StyleBox["5",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0.9176470588235294, 0., 0.]],
 StyleBox[".",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.5019607843137255]],
 StyleBox[" ",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0.25098039215686274`, 0.5019607843137255]],
 StyleBox["Aladjev V.Z., Grinn D.S.  ",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0.8352941176470589, 0., 0.41568627450980394`]],
 StyleBox["Extension of functional environment of system Mathematica.",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.5019607843137255]],
 StyleBox["\[Dash]",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.792156862745098]],
 StyleBox[" Ukraine: Kherson: Oldi",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.5019607843137255]],
 StyleBox["\[Dash]",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.792156862745098]],
 StyleBox["Plus Press, 2012, ISBN  9789662393729, 552 p.",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.5019607843137255]],
 StyleBox["\n",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0.25098039215686274`, 0.5019607843137255]],
 StyleBox["6",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0.9176470588235294, 0., 0.]],
 StyleBox[".",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.5019607843137255]],
 StyleBox[" ",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0.25098039215686274`, 0.5019607843137255]],
 StyleBox["Aladjev V.Z., Grinn D.S., Vaganov V.A.  ",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0.8352941176470589, 0., 0.41568627450980394`]],
 StyleBox["The selected system problems in Mathematica software.",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.5019607843137255]],
 StyleBox["\[Dash]",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.792156862745098]],
 StyleBox[" Ukraine: Kherson, Oldi",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.5019607843137255]],
 StyleBox["\[Dash]",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.792156862745098]],
 StyleBox["Plus Press, 2013, ISBN  9789662890129, 556 p.\n",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.5019607843137255]],
 StyleBox["7",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0.9176470588235294, 0., 0.]],
 StyleBox[".",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.5019607843137255]],
 StyleBox[" ",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0.25098039215686274`, 0.5019607843137255]],
 StyleBox["Aladjev V.Z.  ",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0.8352941176470589, 0., 0.41568627450980394`]],
 StyleBox["Classical Cellular Automata: Mathematical Theory and Applications.",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.5019607843137255]],
 StyleBox["\[Dash]",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.792156862745098]],
 StyleBox[" Germany: Saarbrucken, Scholar`s Press, 2014, ISBN  9783639713459, \
517 p.\n",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.5019607843137255]],
 StyleBox["8",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0.9176470588235294, 0., 0.]],
 StyleBox[".",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.5019607843137255]],
 StyleBox[" ",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0.25098039215686274`, 0.5019607843137255]],
 StyleBox["Aladjev V.Z., Vaganov V.A.  ",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0.8352941176470589, 0., 0.41568627450980394`]],
 StyleBox["Extension of the Mathematica system functionality.",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.5019607843137255]],
 StyleBox["\[Dash]",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.792156862745098]],
 StyleBox[" USA: Seattle, CreateSpace, An Amazon.com Company, 2015, ISBN",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.5019607843137255]],
 StyleBox["\[Dash]",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.792156862745098]],
 StyleBox["13: 9781514237823, ISBN",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.5019607843137255]],
 StyleBox["\[Dash]",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.792156862745098]],
 StyleBox["10: 1514237822, 590 p.\n",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.5019607843137255]],
 StyleBox["9. ",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["Aladjev V.Z., Vaganov V.A.",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0.8235294117647058, 0., 0.]],
 StyleBox[" ",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox["Toolbox for the Mathematica programmers.- USA: Seattle, \
CreateSpace, 2016, ISBN 9781532748837, 630 p.\n",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.39215686274509803`]]
}], "Title",
 CellChangeTimes->{{3.506066767359375*^9, 3.506067058125*^9}, {
   3.50606709159375*^9, 3.50606714075*^9}, 3.506067181578125*^9, 
   3.50606727409375*^9, {3.50606749871875*^9, 3.506067502765625*^9}, {
   3.506068094921875*^9, 3.506068098625*^9}, {3.50606814621875*^9, 
   3.506068146578125*^9}, {3.5063167142840242`*^9, 3.5063167875965242`*^9}, {
   3.5063169466902742`*^9, 3.5063169525183992`*^9}, {3.5063170598933992`*^9, 
   3.5063170845496492`*^9}, {3.5063171234090242`*^9, 
   3.5063171755027742`*^9}, {3.5063172221590242`*^9, 
   3.5063172408933992`*^9}, {3.5063173407996492`*^9, 
   3.5063173466121492`*^9}, {3.5063173787058992`*^9, 
   3.5063173973308992`*^9}, {3.5063174311277742`*^9, 
   3.5063174700496492`*^9}, {3.5063175585808992`*^9, 
   3.5063175741590242`*^9}, {3.50633197434375*^9, 3.506331997015625*^9}, 
   3.506332113703125*^9, {3.506853382234375*^9, 3.506853405515625*^9}, 
   3.507115137078125*^9, {3.508093261328125*^9, 3.508093261953125*^9}, {
   3.508254071734375*^9, 3.50825407225*^9}, {3.50825411628125*^9, 
   3.508254117984375*^9}, {3.508477876953125*^9, 3.508477916546875*^9}, {
   3.50857754403125*^9, 3.508577544625*^9}, {3.509702219609375*^9, 
   3.50970230940625*^9}, {3.511750642578125*^9, 3.51175064353125*^9}, {
   3.511750696859375*^9, 3.511750697421875*^9}, {3.51230966009375*^9, 
   3.512309728765625*^9}, {3.512309769171875*^9, 3.51230983265625*^9}, {
   3.512309912078125*^9, 3.512309913546875*^9}, {3.512372421390625*^9, 
   3.512372425859375*^9}, {3.512702610671875*^9, 3.512702614671875*^9}, {
   3.512702676203125*^9, 3.5127027155625*^9}, {3.512702769140625*^9, 
   3.5127028195*^9}, {3.512896154328125*^9, 3.512896155*^9}, {
   3.513943284046875*^9, 3.513943289671875*^9}, {3.514017178318708*^9, 
   3.514017186006208*^9}, {3.519441414296875*^9, 3.5194414169375*^9}, {
   3.519465813*^9, 3.5194658361875*^9}, {3.519465880078125*^9, 
   3.519465956140625*^9}, 3.519465992484375*^9, {3.5194660324375*^9, 
   3.5194660633125*^9}, {3.51946612309375*^9, 3.51946628696875*^9}, 
   3.519466323703125*^9, {3.519562614921875*^9, 3.519562623203125*^9}, {
   3.519573709703125*^9, 3.519573716921875*^9}, {3.519704459109375*^9, 
   3.519704465484375*^9}, {3.52069055275*^9, 3.52069055325*^9}, {
   3.52221187046875*^9, 3.522212038328125*^9}, 3.522212096796875*^9, {
   3.52221212890625*^9, 3.522212142109375*^9}, {3.5222121771875*^9, 
   3.522212203234375*^9}, {3.522251129109375*^9, 3.522251238484375*^9}, {
   3.5222513325*^9, 3.522251378*^9}, {3.52225142796875*^9, 
   3.5222514575625*^9}, {3.522293898296875*^9, 3.52229390709375*^9}, {
   3.522662693375*^9, 3.5226627501875*^9}, {3.522662921828125*^9, 
   3.52266295115625*^9}, {3.522663052421875*^9, 3.522663055171875*^9}, {
   3.522663117921875*^9, 3.522663137828125*^9}, {3.522674534640625*^9, 
   3.5226745443125*^9}, {3.5228929935*^9, 3.522893012578125*^9}, {
   3.52341522315625*^9, 3.523415344953125*^9}, {3.52341541759375*^9, 
   3.52341541959375*^9}, 3.523415493578125*^9, {3.5234155990625*^9, 
   3.523415628796875*^9}, 3.523419387828125*^9, 3.523434940609375*^9, {
   3.5234350148125*^9, 3.5234350184375*^9}, {3.52345369140625*^9, 
   3.523453694421875*^9}, {3.5235246769375*^9, 3.523524705921875*^9}, 
   3.523607280625*^9, {3.523870765015625*^9, 3.5238707655*^9}, {
   3.523938997984375*^9, 3.523939005984375*^9}, 3.52393905959375*^9, 
   3.523939097390625*^9, {3.52394874696875*^9, 3.52394888040625*^9}, {
   3.52394894746875*^9, 3.52394895128125*^9}, {3.5239490121875*^9, 
   3.523949020609375*^9}, {3.52396122625*^9, 3.52396122890625*^9}, {
   3.523970723546875*^9, 3.523970724765625*^9}, 3.523970934109375*^9, {
   3.52401757209375*^9, 3.52401759109375*^9}, {3.52464287184375*^9, 
   3.524642872359375*^9}, {3.52629005946875*^9, 3.526290148390625*^9}, 
   3.5270481080625*^9, 3.527590879796875*^9, {3.52778120271875*^9, 
   3.52778120446875*^9}, 3.5280821934375*^9, 3.52827186209375*^9, 
   3.528530105375*^9, {3.528688852125*^9, 3.528688902453125*^9}, {
   3.528802596625*^9, 3.528802614203125*^9}, {3.52906513071875*^9, 
   3.5290651315*^9}, {3.529150483796875*^9, 3.529150484796875*^9}, 
   3.5292406778125*^9, {3.53510867853125*^9, 3.53510871834375*^9}, 
   3.53516422446875*^9, {3.535164378375*^9, 3.535164452828125*^9}, {
   3.535274237875*^9, 3.535274299828125*^9}, {3.535279715296875*^9, 
   3.535279731875*^9}, {3.536070168546875*^9, 3.536070172140625*^9}, 
   3.536569916234375*^9, {3.536570057765625*^9, 3.536570074875*^9}, {
   3.536669897828125*^9, 3.536669983375*^9}, {3.5367422901875*^9, 
   3.536742337859375*^9}, {3.536748523375*^9, 3.536748558875*^9}, {
   3.541432385578125*^9, 3.541432386625*^9}, {3.547364468921875*^9, 
   3.54736447875*^9}, {3.54737591225*^9, 3.547375939609375*^9}, {
   3.547454016484375*^9, 3.54745402303125*^9}, {3.547454072078125*^9, 
   3.5474540765*^9}, 3.547467911359375*^9, 3.547560264958461*^9, 
   3.547725266359375*^9, 3.54789058828125*^9, 3.547909304875*^9, 
   3.548078709671875*^9, 3.548155765012607*^9, {3.548159016700107*^9, 
   3.548159017528232*^9}, {3.548490373859375*^9, 3.5484904013125*^9}, {
   3.548490527390625*^9, 3.548490529578125*^9}, 3.548490564234375*^9, 
   3.548560394609375*^9, {3.548560432453125*^9, 3.54856043296875*^9}, {
   3.548593033671875*^9, 3.548593207984375*^9}, {3.548593247859375*^9, 
   3.548593251984375*^9}, {3.5485932980625*^9, 3.54859331453125*^9}, {
   3.548593479734375*^9, 3.54859348459375*^9}, 3.548843881546875*^9, 
   3.54884395846875*^9, {3.548844032109375*^9, 3.548844034671875*^9}, 
   3.54884501753125*^9, {3.548934620828125*^9, 3.548934628765625*^9}, {
   3.54916620715625*^9, 3.549166207578125*^9}, {3.549625095671875*^9, 
   3.549625096828125*^9}, {3.5498574378125*^9, 3.549857449828125*^9}, {
   3.549976217234375*^9, 3.549976217796875*^9}, 3.550201427890625*^9, {
   3.55033401440625*^9, 3.550334034*^9}, {3.5505921903413267`*^9, 
   3.5505921908882017`*^9}, {3.5507448801875*^9, 3.550744884703125*^9}, 
   3.551802040375*^9, {3.55230240428125*^9, 3.552302404984375*^9}, {
   3.5523601631875*^9, 3.552360163578125*^9}, {3.552382205375*^9, 
   3.552382206*^9}, {3.552382506*^9, 3.552382525796875*^9}, {3.552382671*^9, 
   3.55238269975*^9}, 3.55246697515625*^9, {3.55246702975*^9, 
   3.55246703925*^9}, {3.55246707828125*^9, 3.552467143546875*^9}, {
   3.552741735578125*^9, 3.55274181153125*^9}, 3.55325773325*^9, 
   3.553421451390625*^9, 3.554109201328125*^9, {3.554560539765625*^9, 
   3.554560561109375*^9}, 3.55464383725*^9, {3.554986238640625*^9, 
   3.554986239171875*^9}, 3.55556177715625*^9, 3.5555817879375*^9, {
   3.55567804759375*^9, 3.555678048328125*^9}, 3.55619775715625*^9, {
   3.55644314128125*^9, 3.556443141828125*^9}, 3.5574154155625*^9, 
   3.557978771640625*^9, 3.558584661640625*^9, {3.5586122213125*^9, 
   3.558612225125*^9}, {3.559295137390625*^9, 3.55929513778125*^9}, 
   3.559811007015625*^9, 3.559824173546875*^9, {3.5604061656875*^9, 
   3.560406166140625*^9}, {3.560406215953125*^9, 3.5604062205625*^9}, {
   3.5669056675625*^9, 3.5669057001875*^9}, 3.56690577125*^9, 
   3.567849829875*^9, 3.5693019703125*^9, 3.570028882125*^9, 
   3.570028999828125*^9, 3.570101961609375*^9, {3.57087979559375*^9, 
   3.5708797974375*^9}, 3.570889106375*^9, {3.57225454840625*^9, 
   3.572254651609375*^9}, 3.57269425328125*^9, 3.572694304015625*^9, {
   3.57387961684375*^9, 3.5738796425625*^9}, 3.574092220265625*^9, 
   3.574176215421875*^9, {3.574222503578125*^9, 3.574222524484375*^9}, {
   3.58364417921875*^9, 3.583644255875*^9}, {3.588489572828125*^9, 
   3.588489580546875*^9}, {3.591069417515625*^9, 3.591069418140625*^9}, {
   3.591536886375*^9, 3.59153688925*^9}, 3.5918006499375*^9, {
   3.59180076190625*^9, 3.591800778546875*^9}, {3.592058632203125*^9, 
   3.59205864290625*^9}, 3.592058674921875*^9, {3.5920587405*^9, 
   3.592058746984375*^9}, {3.593518336953125*^9, 3.593518343578125*^9}, {
   3.59403383934375*^9, 3.594033845171875*^9}, {3.594034042296875*^9, 
   3.594034050390625*^9}, 3.59480708171875*^9, {3.606896510442515*^9, 
   3.606896515380015*^9}, {3.606896571848765*^9, 3.6068965751456394`*^9}, {
   3.606896889723765*^9, 3.6068969113018894`*^9}, {3.606896942005015*^9, 
   3.606896947005015*^9}, {3.606921403875*^9, 3.606921428078125*^9}, {
   3.60741332346875*^9, 3.607413329296875*^9}, {3.607487016078125*^9, 
   3.60748703221875*^9}, {3.60748707325*^9, 3.607487124796875*^9}, {
   3.60748717321875*^9, 3.6074871779375*^9}, {3.6238187472546797`*^9, 
   3.6238188251021323`*^9}, 3.6238188796362514`*^9, {3.6238189586917734`*^9, 
   3.623819001828241*^9}, {3.62572193317682*^9, 3.625721941176831*^9}, 
   3.626011028175166*^9, {3.626532933167755*^9, 3.626532935375881*^9}, {
   3.6266106935218067`*^9, 3.6266106975318117`*^9}, {3.627471033548563*^9, 
   3.6274711076237993`*^9}, {3.627471143240837*^9, 3.6274711479041033`*^9}, {
   3.62894600121544*^9, 3.6289460029254417`*^9}, {3.6329814506388793`*^9, 
   3.632981453308883*^9}, {3.634187461110097*^9, 3.6341874631300993`*^9}, {
   3.636514930709922*^9, 3.6365149318699236`*^9}, 3.636515394400571*^9, {
   3.636625935154527*^9, 3.6366259360845284`*^9}, {3.636811641716172*^9, 
   3.6368116431492543`*^9}, {3.6373102570368233`*^9, 3.637310260275008*^9}, {
   3.637762730492715*^9, 3.6377627658327637`*^9}, {3.637832521087629*^9, 
   3.6378325229376316`*^9}, {3.6379370610340023`*^9, 
   3.6379370670940104`*^9}, {3.637937103184061*^9, 3.637937114174076*^9}, 
   3.638179553285883*^9, {3.6381857622324553`*^9, 3.638185819062535*^9}, {
   3.6381860148006496`*^9, 3.6381860299506707`*^9}, {3.638186069300726*^9, 
   3.6381861110807843`*^9}, 3.6383667976098843`*^9, 3.6384573079058666`*^9, 
   3.639363922518095*^9, 3.640402283040773*^9, 3.6405182473524475`*^9, 
   3.6406976948120584`*^9, 3.641014148656188*^9, 3.6413070598517303`*^9, 
   3.641385151025011*^9, 3.641617282410038*^9, 3.641739185008749*^9, {
   3.6418972396732707`*^9, 3.641897240153271*^9}, 3.6419827152580585`*^9, 
   3.642240745981492*^9, {3.6424169036553326`*^9, 3.642416981145441*^9}, {
   3.64241707314557*^9, 3.642417100505608*^9}, {3.642768778805977*^9, 
   3.6427689330961933`*^9}, {3.642769025556323*^9, 3.6427690662763796`*^9}, {
   3.642769119116454*^9, 3.6427691271964655`*^9}, {3.6427694151178684`*^9, 
   3.6427694810479603`*^9}, 3.6504243419119935`*^9, {3.6504418538584146`*^9, 
   3.6504418582884207`*^9}, 3.65080307689881*^9, {3.6513803791154065`*^9, 
   3.651380379425407*^9}, 3.6515500180613585`*^9, 3.651580286423725*^9, 
   3.6519202553765473`*^9, 3.652003360365656*^9, 3.652277280656353*^9, 
   3.6523436330270557`*^9, 3.652531840566806*^9, {3.6527894506738696`*^9, 
   3.6527894854539185`*^9}, {3.652867125269782*^9, 3.6528671271697845`*^9}, 
   3.657115555758315*^9, 3.6613340678625174`*^9, {3.6622990598525405`*^9, 
   3.66229907364256*^9}, 3.6668734965971794`*^9, {3.669432018129423*^9, 
   3.6694321065095468`*^9}, {3.669432155829616*^9, 3.6694321569996176`*^9}, {
   3.6694629934181986`*^9, 3.669463005558216*^9}, {3.6694630821811085`*^9, 
   3.6694630934211245`*^9}, {3.6694633181114388`*^9, 3.669463321161443*^9}, {
   3.669518741293616*^9, 3.6695187418836164`*^9}, {3.669619269209902*^9, 
   3.669619298509943*^9}, {3.66961937493005*^9, 3.669619452890159*^9}, 
   3.670649671513176*^9, {3.6710941572721825`*^9, 3.671094163142191*^9}, 
   3.672475204758484*^9, 3.672570447219655*^9, {3.6725704812997026`*^9, 
   3.6725704951597223`*^9}, {3.672570526469766*^9, 3.6725705316697736`*^9}, {
   3.6725705957798634`*^9, 3.672570620609898*^9}, 3.6729097108500643`*^9, {
   3.6729097440401106`*^9, 3.672909756590128*^9}, {3.6729976994453197`*^9, 
   3.6729977029353247`*^9}, 3.6730840706369762`*^9, {3.673513992180859*^9, 
   3.6735140051308775`*^9}, {3.673683582594698*^9, 3.673683589874708*^9}}],

Cell[TextData[{
 StyleBox["    ",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 StyleBox[" This file has been created, and its contents has been tested  in \
the system  ",
  FontFamily->"Book Antiqua",
  FontSize->16,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 StyleBox["Mathematica 8.0.0.0 \[Dash] 10.4.0.0",
  FontFamily->"Book Antiqua",
  FontSize->16,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0.3176470588235294, 0.]],
 StyleBox["  on PC   ",
  FontFamily->"Book Antiqua",
  FontSize->16,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 StyleBox["MicroLink 500",
  FontFamily->"Book Antiqua",
  FontSize->16,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0.16862745098039217`, 0.3333333333333333]],
 StyleBox["   with   ",
  FontFamily->"Book Antiqua",
  FontSize->16,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 StyleBox["Windows XP Professional",
  FontFamily->"Book Antiqua",
  FontSize->16,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0.3176470588235294, 0.3176470588235294]],
 StyleBox[" ",
  FontFamily->"Book Antiqua",
  FontSize->16,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 StyleBox["(",
  FontFamily->"Book Antiqua",
  FontSize->16,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0.3686274509803922, 0.3686274509803922]],
 StyleBox["Version 5.1, Build 2600, Service Pack 3",
  FontFamily->"Book Antiqua",
  FontSize->16,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0.7254901960784313, 0., 0.7254901960784313]],
 StyleBox[")",
  FontFamily->"Book Antiqua",
  FontSize->16,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0.3686274509803922, 0.3686274509803922]],
 StyleBox[" and on PC   ",
  FontFamily->"Book Antiqua",
  FontSize->16,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 StyleBox["Dell OptiPlex 3020  ",
  FontFamily->"Book Antiqua",
  FontSize->16,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0.21568627450980393`, 0., 0.43529411764705883`]],
 StyleBox[" with   ",
  FontFamily->"Book Antiqua",
  FontSize->16,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 StyleBox["Windows 7 Professional ",
  FontFamily->"Book Antiqua",
  FontSize->16,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0.25098039215686274`, 0.]],
 StyleBox["(",
  FontFamily->"Book Antiqua",
  FontSize->16,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0.3686274509803922, 0.3686274509803922]],
 StyleBox["Version 6.1.7601, Build 7601, Service Pack 1",
  FontFamily->"Book Antiqua",
  FontSize->16,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0.7254901960784313, 0., 0.7254901960784313]],
 StyleBox[")   ",
  FontFamily->"Book Antiqua",
  FontSize->16,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0.3686274509803922, 0.3686274509803922]],
 StyleBox["during   ",
  FontFamily->"Book Antiqua",
  FontSize->16,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 StyleBox["January  2013  ",
  FontFamily->"Book Antiqua",
  FontSize->16,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0.43529411764705883`, 0.]],
 StyleBox["\[Dash] ",
  FontFamily->"Book Antiqua",
  FontSize->16,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0.5019607843137255, 0.]],
 StyleBox[" April  2014 ",
  FontFamily->"Book Antiqua",
  FontSize->16,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0.43529411764705883`, 0.]],
 StyleBox[" ",
  FontFamily->"Book Antiqua",
  FontSize->16,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.43529411764705883`]],
 StyleBox["and ",
  FontFamily->"Book Antiqua",
  FontSize->16,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 StyleBox[" ",
  FontFamily->"Book Antiqua",
  FontSize->16,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.43529411764705883`]],
 StyleBox["October  2014  ",
  FontFamily->"Book Antiqua",
  FontSize->16,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0.43529411764705883`, 0.]],
 StyleBox["\[Dash]  ",
  FontFamily->"Book Antiqua",
  FontSize->16,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0.5019607843137255, 0.]],
 StyleBox["May  2016.",
  FontFamily->"Book Antiqua",
  FontSize->16,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0.43529411764705883`, 0.]],
 StyleBox["\[LineSeparator]",
  FontFamily->"Book Antiqua",
  FontSize->16,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.7176470588235294]],
 StyleBox[" ", "Subsubtitle",
  FontFamily->"Book Antiqua",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["Help represented here is brief, the detailed enough description of \
software represented in this notebook along with the most typical examples of \
its usage can be found in the above books. ", "Subsubtitle",
  FontFamily->"Book Antiqua",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0.25098039215686274`, 0.5019607843137255]],
 StyleBox["The above books [2, 4\[Dash]6] can be ordered on website\
\[LineSeparator]", "Subsubtitle",
  FontFamily->"Book Antiqua",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0.5019607843137255, 0.]],
 StyleBox["http://oldiplus.com/catalog/programuvannya-kompyuterni-nauki/",
  FontFamily->"Book Antiqua",
  FontSize->16,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 1.]],
 StyleBox[ButtonBox[";  aladjev@yandex.ru; valadjev@yahoo.com",
  BaseStyle->"Hyperlink",
  ButtonData->"",
  ButtonNote->
   "http://oldiplus.ks.ua/catalog/programuvannya-kompyuterni-nauki/"],
  FontFamily->"Book Antiqua",
  FontSize->16,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 1.]]
}], "Subtitle",
 CellChangeTimes->{
  3.548843806578125*^9, {3.548843870671875*^9, 3.548843885265625*^9}, {
   3.548843947125*^9, 3.548843948171875*^9}, {3.54884399934375*^9, 
   3.548844000671875*^9}, 3.54962153478125*^9, {3.5518020341875*^9, 
   3.551802053984375*^9}, {3.5523825108125*^9, 3.552382513375*^9}, 
   3.552382711359375*^9, {3.552741815375*^9, 3.552741824484375*^9}, 
   3.552741859078125*^9, {3.559736482828125*^9, 3.559736484140625*^9}, {
   3.56509915640625*^9, 3.565099158984375*^9}, {3.565099333109375*^9, 
   3.565099335109375*^9}, {3.5669057894375*^9, 3.566905814453125*^9}, {
   3.56784999059375*^9, 3.567850002296875*^9}, 3.569059384890625*^9, 
   3.572185414*^9, {3.572185586515625*^9, 3.572185591625*^9}, {
   3.57223667565625*^9, 3.572236682359375*^9}, 3.572236956140625*^9, {
   3.57223708240625*^9, 3.572237091484375*^9}, {3.5722542014375*^9, 
   3.57225421425*^9}, {3.57225427840625*^9, 3.572254290453125*^9}, 
   3.572254357734375*^9, {3.572254415875*^9, 3.572254423828125*^9}, {
   3.57234359175*^9, 3.572343591765625*^9}, 3.5723436553125*^9, {
   3.573879505453125*^9, 3.57387951425*^9}, 3.57387966171875*^9, 
   3.573883181203125*^9, {3.5739628865625*^9, 3.57396288759375*^9}, {
   3.573979264296875*^9, 3.57397926809375*^9}, {3.573979300671875*^9, 
   3.5739793026875*^9}, 3.573979338046875*^9, {3.583644127453125*^9, 
   3.58364412990625*^9}, 3.59108769434375*^9, {3.59403392375*^9, 
   3.59403392565625*^9}, {3.59403437509375*^9, 3.594034375125*^9}, {
   3.594034419359375*^9, 3.59403446796875*^9}, {3.60329763159375*^9, 
   3.603297718828125*^9}, {3.603297771359375*^9, 3.603297796171875*^9}, {
   3.60329798340625*^9, 3.603297984140625*^9}, 3.60343301309375*^9, {
   3.604205478109375*^9, 3.604205480515625*^9}, {3.6059459469375*^9, 
   3.6059459543125*^9}, {3.606896926036265*^9, 3.6068969305831394`*^9}, {
   3.623336978479684*^9, 3.623336991779702*^9}, {3.623337022119745*^9, 
   3.623337045219777*^9}, {3.6233370756308193`*^9, 3.6233371228208857`*^9}, {
   3.623337215011015*^9, 3.623337259991078*^9}, {3.623474352440426*^9, 
   3.6234743836404696`*^9}, {3.623474494020624*^9, 3.623474513100651*^9}, {
   3.62347949243519*^9, 3.6234795009052024`*^9}, {3.623817822639795*^9, 
   3.6238178631761136`*^9}, {3.623818035488969*^9, 3.6238180489367385`*^9}, {
   3.6238182483691454`*^9, 3.6238182729605517`*^9}, {3.6238184358818703`*^9, 
   3.6238185011446033`*^9}, {3.6238185821612372`*^9, 3.623818582753271*^9}, {
   3.627792834959059*^9, 3.6277928619390965`*^9}, {3.632131477921899*^9, 
   3.6321314788119*^9}, {3.63685856607036*^9, 3.6368585686203637`*^9}, {
   3.6387912752894697`*^9, 3.638791278025626*^9}, {3.641120233183151*^9, 
   3.6411202346832366`*^9}, {3.641634802809041*^9, 3.6416348039090424`*^9}, 
   3.6419930171941752`*^9, 3.6419931292443323`*^9, 3.6460447701136923`*^9, {
   3.6460448226837664`*^9, 3.6460449366339254`*^9}, {3.6460449806839876`*^9, 
   3.646044983133991*^9}, {3.6469130944925723`*^9, 3.646913097722577*^9}, {
   3.6469814011988344`*^9, 3.646981409258846*^9}, {3.64698144121889*^9, 
   3.646981518018998*^9}, {3.647324517503084*^9, 3.647324550978999*^9}, {
   3.6473246708252287`*^9, 3.647324673135232*^9}, {3.6479407611217165`*^9, 
   3.647940764451721*^9}, 3.649944853181342*^9, {3.64994523354218*^9, 
   3.649945288402257*^9}, {3.64994537631238*^9, 3.649945401312415*^9}, {
   3.649945434882462*^9, 3.6499454860225334`*^9}, 3.64994551876258*^9, {
   3.6499926301458235`*^9, 3.6499926509958525`*^9}, {3.652867153049821*^9, 
   3.652867156019825*^9}, {3.6530371336897154`*^9, 3.65303713697972*^9}, 
   3.653983544240491*^9, {3.6550973551887445`*^9, 3.655097366948761*^9}, {
   3.657877135011366*^9, 3.65787713794137*^9}, 3.660572631042816*^9, {
   3.6605727018829155`*^9, 3.6605727173529377`*^9}, {3.6631316238561845`*^9, 
   3.663131659216234*^9}, {3.663131705416299*^9, 3.663131709726305*^9}, {
   3.6662548514429812`*^9, 3.6662548591234207`*^9}, {3.66642829128781*^9, 
   3.6664282919078107`*^9}, {3.6679923996055474`*^9, 3.667992414835569*^9}, {
   3.6688462143720446`*^9, 3.668846248672093*^9}, {3.669085677059907*^9, 
   3.66908567923991*^9}, {3.6691777388295317`*^9, 3.669177740769534*^9}, 
   3.6693448965214343`*^9, 3.669462948348136*^9, {3.6694633314314575`*^9, 
   3.669463334561462*^9}, {3.670298335304247*^9, 3.670298338224251*^9}, 
   3.6722008697694225`*^9, 3.6731716036041555`*^9, {3.6731716416742086`*^9, 
   3.6731716605942354`*^9}, {3.673514010900885*^9, 3.6735140119508867`*^9}},
 TextAlignment->Center]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["This notebook contains definitions of the following procedures and \
functions grouped according to their basic functional purpose ",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0.3333333333333333, 0., 0.]],
 StyleBox["(",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0.6078431372549019, 0., 0.3058823529411765]],
 StyleBox["for review of the list of the tools of the corresponding group \
that are contained in the notebook,  it is necessary to select the relevant \
cell (cells) and to expand it (them) by the commands chain of the GUI ",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0.6823529411764706, 0., 0.6823529411764706]],
 StyleBox["\"",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox["Cell ",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0.6666666666666666, 0., 0.]],
 StyleBox[" ",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0.5019607843137255, 0.]],
 StyleBox["\[Dash]",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0.5019607843137255, 0.]],
 StyleBox[">",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0.5019607843137255, 0.]],
 StyleBox["  Convert To ",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0.6666666666666666, 0., 0.]],
 StyleBox[" ",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0.5019607843137255, 0.]],
 StyleBox["\[Dash]",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0.5019607843137255, 0.]],
 StyleBox[">",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0.5019607843137255, 0.]],
 StyleBox["  TextDisplay",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0.6666666666666666, 0., 0.]],
 StyleBox["\"",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[")",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0.5411764705882353, 0., 0.5411764705882353]],
 StyleBox[", namely:",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0.39215686274509803`, 0., 0.19607843137254902`]]
}], "Title",
 Evaluatable->False,
 CellChangeTimes->{{3.594790418625*^9, 3.59479041865625*^9}, {
   3.594790468375*^9, 3.59479047790625*^9}, {3.59479051253125*^9, 
   3.5947905255625*^9}, {3.594790563953125*^9, 3.59479064965625*^9}, {
   3.594790722078125*^9, 3.594790759953125*^9}, {3.594790845828125*^9, 
   3.594790848828125*^9}, 3.594798813625*^9, 3.594798928203125*^9, 
   3.59480175621875*^9, {3.5948044510625*^9, 3.59480446046875*^9}, {
   3.59480460609375*^9, 3.59480461675*^9}, 3.5948783658125*^9, {
   3.594878563*^9, 3.594878567484375*^9}, {3.594878635796875*^9, 
   3.59487865703125*^9}, {3.59489092309375*^9, 3.594890942609375*^9}, 
   3.59489098471875*^9, 3.59489121034375*^9, {3.63737407785612*^9, 
   3.6373740816561255`*^9}, 3.6373741879762745`*^9, {3.654000623369943*^9, 
   3.6540006290499516`*^9}, {3.6639124495446053`*^9, 
   3.6639124551046133`*^9}, {3.669432177949647*^9, 3.6694321793096485`*^9}, {
   3.669463360991499*^9, 3.669463387381536*^9}},
 TextAlignment->Center,
 FontFamily->"Arial",
 FontSize->32],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    StyleBox["1.",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.]], 
    StyleBox["Software",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.]], 
    StyleBox["for",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.]], 
    StyleBox["work",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.]], 
    StyleBox["with",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.]], 
    StyleBox["string",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.]], 
    StyleBox["structures",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.]], 
    StyleBox["and",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.]], 
    RowBox[{
     StyleBox["symbols",
      FontVariations->{"Underline"->True},
      FontColor->RGBColor[0., 0.3176470588235294, 0.]], 
     StyleBox[":",
      FontVariations->{"Underline"->True},
      FontColor->RGBColor[0., 0.3176470588235294, 0.]], 
     StyleBox[" ",
      FontColor->RGBColor[0., 0.3176470588235294, 0.]], 
     StyleBox["Border",
      FontColor->RGBColor[1., 0., 0.]]}]}], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["CharacterQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Characters1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["CorrectSubString",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DelSubStr",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DelSuffPref",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ExprOfStr",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ExprOfStr1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ExprQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ExtrExpr",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ExtrName",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ExtrVarsOfStr",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["InsertN",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["IsMonotonic",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["IsPermutation",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["LeftFold",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ListStrToStr",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["LongestCommonSubSequence",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["LongestCommonSubsequence1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["LongestCommonSubsequence2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["LongestCommonSubString",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["MaximalPalindromicSubstring",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["OverLap",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["PrefCond",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["PrefixQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["PrevNextVar",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["RedSymbStr",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ReduceAdjacentStr",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["RightFold",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SortQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SortRevStr",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SortString",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Spos",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StandStrForm",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StrAllSymbNumQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StrDelEnds",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StrExprQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StrFromStr",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StringToList",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StrOfSymb",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StrToList",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StringDependAllQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StringDependQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StringDependQ1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StringJoin1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StringLevels",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StringMultiple",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["  ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StringMultiple1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StringPosition1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StringReplace1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StringReplace2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StringReplace3",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StringReplaceS",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StringReplacePart1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StringSplit1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StringSplit2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StringStringQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StringTake1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StringTake2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StringTake3",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StringTrim1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["  ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StringTrim2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StrOfSymblQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StrPartition",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StrStr",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StrSub",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StrSymbParity",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SubCfEntries",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SubDelStr",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SubsBstr",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SubsDel",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SubsPosSymb",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SubsStr",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SubsString",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SubsString1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SubsStrLim",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SubsStrLim1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SubStr",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SubStrSymbolParity",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SubStrSymbolParity1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SubStrToSymb",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SuffixQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SuffPref",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SymbolQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SymbolQ1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SymbolsOfString",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ToString1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ToString2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ToString3",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ToString4",
    FontColor->RGBColor[1., 0., 0.]]}],
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontSlant->"Italic"]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.59479093559375*^9, 3.59479093834375*^9}, {
   3.594791113109375*^9, 3.594791117984375*^9}, {3.594791167765625*^9, 
   3.59479118084375*^9}, 3.594791277828125*^9, {3.594791663078125*^9, 
   3.594791845234375*^9}, {3.59479187965625*^9, 3.59479188334375*^9}, {
   3.59479194528125*^9, 3.594791955765625*^9}, {3.594792066828125*^9, 
   3.59479207115625*^9}, 3.594792798875*^9, {3.594793005265625*^9, 
   3.59479301153125*^9}, 3.594798813625*^9, 3.594798928203125*^9, {
   3.594800200328125*^9, 3.594800210609375*^9}, {3.594800255546875*^9, 
   3.5948002624375*^9}, {3.594800320859375*^9, 3.594800326765625*^9}, {
   3.5948003805*^9, 3.594800385953125*^9}, {3.594800549109375*^9, 
   3.594800556171875*^9}, {3.59480070475*^9, 3.59480071228125*^9}, {
   3.59480079890625*^9, 3.594800830921875*^9}, {3.594800903640625*^9, 
   3.594800921078125*^9}, {3.59480097534375*^9, 3.594800980078125*^9}, {
   3.594801042546875*^9, 3.594801049*^9}, {3.594801406046875*^9, 
   3.594801410453125*^9}, 3.594801756234375*^9, 3.594806154890625*^9, 
   3.5948787878125*^9, 3.627387361650527*^9, {3.6275640497457232`*^9, 
   3.627564060486738*^9}, {3.629439333655278*^9, 3.6294393587747145`*^9}, 
   3.6362121197448335`*^9, 3.6363662617915897`*^9, 3.6375755808860245`*^9, 
   3.63784202724045*^9, {3.6380894406853356`*^9, 3.6380894574553595`*^9}, 
   3.6409586932459908`*^9, {3.6410139016584435`*^9, 3.6410139385775547`*^9}, {
   3.641092926686772*^9, 3.6410929420267935`*^9}, 3.6412979669163046`*^9, {
   3.6412980261263876`*^9, 3.6412980363564024`*^9}, {3.6423252574778233`*^9, 
   3.642325269268498*^9}, {3.647244177986397*^9, 3.64724419464642*^9}, {
   3.650285705169546*^9, 3.650285711239555*^9}, {3.650978670769255*^9, 
   3.650978680759269*^9}, {3.651466508154375*^9, 3.6514665266844006`*^9}, 
   3.6514669228849554`*^9, {3.6555626407949553`*^9, 3.655562676885006*^9}, 
   3.655907838165057*^9, {3.6561548418152237`*^9, 3.6561548644452553`*^9}, {
   3.65701793277119*^9, 3.657017942481204*^9}, {3.65725763744897*^9, 
   3.657257647058984*^9}, {3.6573742137317677`*^9, 3.6573742394318037`*^9}, {
   3.65855225321801*^9, 3.6585522828780513`*^9}, {3.658552420678244*^9, 
   3.6585524246082497`*^9}, {3.658672310570421*^9, 3.658672319670434*^9}, 
   3.660739807788742*^9, 3.6621343955259075`*^9, {3.6628865906215773`*^9, 
   3.66288659947159*^9}, {3.662960711465167*^9, 3.6629607321251965`*^9}, {
   3.669432193879669*^9, 3.6694322179197025`*^9}, {3.6694322940798097`*^9, 
   3.6694323013698196`*^9}, {3.672475228908518*^9, 3.6724752328285236`*^9}, 
   3.6724752877986*^9, {3.6730836694054146`*^9, 3.673083678105427*^9}},
 FontFamily->"Times New Roman",
 FontSize->12],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    StyleBox["2.",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3333333333333333, 0.]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3333333333333333, 0.]], 
    StyleBox["Software",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3333333333333333, 0.]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3333333333333333, 0.]], 
    StyleBox["for",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3333333333333333, 0.]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3333333333333333, 0.]], 
    StyleBox["work",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3333333333333333, 0.]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3333333333333333, 0.]], 
    StyleBox["with",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3333333333333333, 0.]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3333333333333333, 0.]], 
    StyleBox["list",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3333333333333333, 0.]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3333333333333333, 0.]], 
    RowBox[{
     StyleBox["structures",
      FontVariations->{"Underline"->True},
      FontColor->RGBColor[0., 0.3333333333333333, 0.]], 
     StyleBox[":",
      FontVariations->{"Underline"->True},
      FontColor->RGBColor[0., 0.3333333333333333, 0.]], 
     StyleBox[" ",
      FontColor->RGBColor[1., 0., 0.]], 
     StyleBox["ArrayInd",
      FontColor->RGBColor[1., 0., 0.]]}]}], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["AssignL",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["AssignToList",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["BinaryListQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DelEl",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ElemLevelsL",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ElemLevelsN",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ElemOnLevels",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ElemsOnLevelList",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ElemsList",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["FirstPositionList",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["FullNestListQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["GroupIdentMult",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["IntegerListQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["LevelsOfList",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["LevelsList",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ListAppValue",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ListAssign",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ListAssignP",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ListCount",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ListExprHeadQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ListLevels",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ListListGroup",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ListListQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ListNumericQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ListOp",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ListPosition",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ListRulesQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ListTrim",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ListsAssign",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ListStringQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ListStrList",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ListSymbolQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ListToSeq",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ListToString",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["MapNestList",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["MaxLevel",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["MaxNestLevel",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["MemberQL",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["MinusList",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["MinusList1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["MinusLists",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["MultEntryList",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["NestListQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["NestListQ1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["NestQL",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ParVar",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["PosIntListQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["PosListTest",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["PositionsListCond",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["PosSubList",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ReplaceLevelList",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["  ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ReplaceListCond",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ReduceList",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ReplaceSubLists",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["RestListList",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["RestListList1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SelectPos",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SortLpos",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SortNestList",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SortNL",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SortNL1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Split1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SplitList",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SplitList1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SubLists",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SubListsMin",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SubsList",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SymbolToList",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Table1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ToList",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["TransListList",
    FontColor->RGBColor[1., 0., 0.]]}],
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontSlant->"Italic"]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.6253746974938745`*^9, 3.6253747027548823`*^9}, {
   3.625417099120116*^9, 3.6254171098601313`*^9}, 3.625722037856966*^9, 
   3.625722101407055*^9, {3.6257222106072083`*^9, 3.6257222302272353`*^9}, 
   3.625722268537289*^9, 3.627018186401351*^9, {3.627036633039591*^9, 
   3.627036661210202*^9}, 3.62859644807589*^9, {3.633431642477702*^9, 
   3.6334316720177436`*^9}, {3.6334318347189713`*^9, 3.6334318626090107`*^9}, 
   3.6334319108690777`*^9, 3.6334320059592113`*^9, {3.6334320415292606`*^9, 
   3.633432070159301*^9}, {3.63437302463402*^9, 3.6343730461840506`*^9}, {
   3.6343731796542373`*^9, 3.6343731796542373`*^9}, {3.6354968235963993`*^9, 
   3.635496836476417*^9}, 3.635496879416477*^9, 3.6354970044166517`*^9, {
   3.63549711732681*^9, 3.6354971488168545`*^9}, 3.635497201606928*^9, 
   3.6394068577172318`*^9, 3.6403486187813597`*^9, 3.6403486759414396`*^9, {
   3.6465511308663645`*^9, 3.6465511308663645`*^9}, {3.6465511703064194`*^9, 
   3.646551179896433*^9}, {3.6465729770992537`*^9, 3.6465729835392623`*^9}, {
   3.64664513471784*^9, 3.646645150707863*^9}, {3.647259051919962*^9, 
   3.6472590568799686`*^9}, {3.6478368389985037`*^9, 3.647836847050547*^9}, 
   3.6514665337844105`*^9, 3.651466580364476*^9, {3.6514666682845993`*^9, 
   3.6514666909446306`*^9}, 3.6514669642950134`*^9, {3.6572030332728987`*^9, 
   3.6572030383829055`*^9}, {3.658639557644025*^9, 3.658639563254032*^9}, {
   3.6615804854647417`*^9, 3.661580492284751*^9}, 3.661581217135766*^9, {
   3.667827511671089*^9, 3.667827525591109*^9}, {3.6694322240097113`*^9, 
   3.6694322291797185`*^9}, {3.6694323066298275`*^9, 3.66943231621984*^9}, {
   3.6702123907487125`*^9, 3.670212398908724*^9}, {3.6704181359716873`*^9, 
   3.6704181455117006`*^9}, {3.6705788681721363`*^9, 3.67057887844215*^9}, {
   3.6710256472448034`*^9, 3.671025652894811*^9}, {3.6711124929495754`*^9, 
   3.6711125032695904`*^9}},
 FontSize->12],

Cell[TextData[{
 StyleBox["3. Software for work with sequence structures:",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontSlant->"Italic",
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[0., 0.2901960784313726, 0.1450980392156863]],
 StyleBox["  SEQ, SeqDel, SeqIns, SeqQ, SeqToList, SeqToList1, SeqToString, \
SequenceQ, Sequences, SeqUnion, Sq",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontSlant->"Italic",
  FontColor->RGBColor[1., 0., 0.]]
}], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.594792599578125*^9, 3.594792616375*^9}, {
   3.594792785765625*^9, 3.59479280728125*^9}, 3.59479296153125*^9, 
   3.59479301928125*^9, {3.59479306321875*^9, 3.59479307109375*^9}, 
   3.594798813625*^9, 3.594798928203125*^9, 3.594801756234375*^9, 
   3.5948061838125*^9, {3.669432236359729*^9, 3.669432241249736*^9}, {
   3.6694323425598774`*^9, 3.6694323500798883`*^9}},
 FontSize->12],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     StyleBox["4.",
      FontVariations->{"Underline"->True},
      FontColor->RGBColor[0., 0.2823529411764706, 0.1411764705882353]], 
     StyleBox[" ",
      FontVariations->{"Underline"->True},
      FontColor->RGBColor[0., 0.2823529411764706, 0.1411764705882353]], 
     StyleBox["Software",
      FontVariations->{"Underline"->True},
      FontColor->RGBColor[0., 0.2823529411764706, 0.1411764705882353]], 
     StyleBox[" ",
      FontVariations->{"Underline"->True},
      FontColor->RGBColor[0., 0.2823529411764706, 0.1411764705882353]], 
     StyleBox["for",
      FontVariations->{"Underline"->True},
      FontColor->RGBColor[0., 0.2823529411764706, 0.1411764705882353]], 
     StyleBox[" ",
      FontVariations->{"Underline"->True},
      FontColor->RGBColor[0., 0.2823529411764706, 0.1411764705882353]], 
     StyleBox["work",
      FontVariations->{"Underline"->True},
      FontColor->RGBColor[0., 0.2823529411764706, 0.1411764705882353]], 
     StyleBox[" ",
      FontVariations->{"Underline"->True},
      FontColor->RGBColor[0., 0.2823529411764706, 0.1411764705882353]], 
     StyleBox["with",
      FontVariations->{"Underline"->True},
      FontColor->RGBColor[0., 0.2823529411764706, 0.1411764705882353]], 
     StyleBox[" ",
      FontVariations->{"Underline"->True},
      FontColor->RGBColor[0., 0.2823529411764706, 0.1411764705882353]], 
     StyleBox["functions",
      FontVariations->{"Underline"->True},
      FontColor->RGBColor[0., 0.2823529411764706, 0.1411764705882353]], 
     StyleBox[" ",
      FontVariations->{"Underline"->True},
      FontColor->RGBColor[0., 0.2823529411764706, 0.1411764705882353]], 
     StyleBox["and",
      FontVariations->{"Underline"->True},
      FontColor->RGBColor[0., 0.2823529411764706, 0.1411764705882353]], 
     StyleBox[" ",
      FontVariations->{"Underline"->True},
      FontColor->RGBColor[0., 0.2823529411764706, 0.1411764705882353]], 
     StyleBox["procedures",
      FontVariations->{"Underline"->True},
      FontColor->RGBColor[0., 0.2823529411764706, 0.1411764705882353]], 
     StyleBox[" ",
      FontVariations->{"Underline"->True},
      FontColor->RGBColor[0., 0.2823529411764706, 0.1411764705882353]], 
     StyleBox["of",
      FontVariations->{"Underline"->True},
      FontColor->RGBColor[0., 0.2823529411764706, 0.1411764705882353]], 
     StyleBox[" ",
      FontVariations->{"Underline"->True},
      FontColor->RGBColor[0., 0.2823529411764706, 0.1411764705882353]], 
     StyleBox["the",
      FontVariations->{"Underline"->True},
      FontColor->RGBColor[0., 0.2823529411764706, 0.1411764705882353]], 
     StyleBox[" ",
      FontVariations->{"Underline"->True},
      FontColor->RGBColor[0., 0.2823529411764706, 0.1411764705882353]], 
     StyleBox["types",
      FontVariations->{"Underline"->True},
      FontColor->RGBColor[0., 0.2823529411764706, 0.1411764705882353]], 
     StyleBox[" ",
      FontVariations->{"Underline"->True},
      FontColor->RGBColor[0., 0.2823529411764706, 0.1411764705882353]], 
     StyleBox[
      RowBox[{
       StyleBox["\"\<\>",
        FontColor->RGBColor[0., 0.2823529411764706, 0.1411764705882353]], 
       StyleBox["Module",
        FontColor->RGBColor[0.615686274509804, 0., 0.615686274509804]], 
       StyleBox["\"\<\>",
        FontColor->RGBColor[0., 0.2823529411764706, 0.1411764705882353]]}],
      FontVariations->{"Underline"->True}], 
     StyleBox[" ",
      FontVariations->{"Underline"->True},
      FontColor->RGBColor[0., 0.2823529411764706, 0.1411764705882353]], 
     StyleBox["and",
      FontVariations->{"Underline"->True},
      FontColor->RGBColor[0., 0.2823529411764706, 0.1411764705882353]], 
     StyleBox[" ",
      FontVariations->{"Underline"->True},
      FontColor->RGBColor[0., 0.2823529411764706, 0.1411764705882353]], 
     RowBox[{
      StyleBox["\"\<\>",
       FontColor->RGBColor[0., 0.2823529411764706, 0.1411764705882353]], 
      StyleBox["Block",
       FontVariations->{"Underline"->True},
       FontColor->RGBColor[0.6901960784313725, 0., 0.6901960784313725]], 
      StyleBox["\"\<\>",
       FontColor->RGBColor[0., 0.2823529411764706, 0.1411764705882353]]}]}], 
    StyleBox[":",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.2823529411764706, 0.1411764705882353]], 
    StyleBox[" ",
     FontColor->RGBColor[1., 0., 0.]], 
    StyleBox["$AobjNobj",
     FontColor->RGBColor[1., 0., 0.]]}], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["$CallProc",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["$InBlockMod",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["$ProcName",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["$ProcType",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["$TestArgsTypes",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["$TypeProc",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ActBFMuserQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ActCsProcFunc",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["AllCalls",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Args",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Args1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ArgsBFM",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ArgsBFM1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ArgsTypes",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Arity",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Arity1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ArityBFM",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ArityBFM1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["AritySystemFunction",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["AritySystemFunction1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["AttrOpts",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Avg",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["BFMSubsQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["BlockFuncModQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["BlockFuncModVars",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["BlockModQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["BlockQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["BlockQ1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["BlockToModule",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["CallListable",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["CallsInProc",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ClearAllAttributes",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["CompActPF",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["CompActPF1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["CompileFuncQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ContentObj",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ContextsInModule",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["CsProcsFuncs",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["CsProcsFuncs1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Default1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Defaults",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DefaultsM",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DefaultsQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DefaultValues1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DefaultValues2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DefFunc",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DefFunc3",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DefOpt",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DefOpt1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DefOptimum",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DelDuplLocals",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DelDuplLocalsM",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DelRestPF",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DelRestPF1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DuplicateLocals",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DuplicateLocalsQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ExpArgs",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ExpLocals",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ExtensionHeading",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ExtrCall",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ExtrNames",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ExtrProcFunc",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["FullUserTools",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["FullToolsCalls",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["FullToolsCallsM",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["FuncBlockModQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["FunCompose",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["FunctionQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["FuncToPure",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Globals",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Globals1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Globals2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["GlobalToLocal",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["  ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["GlobalToLocalM",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["GotoLabel",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["HeadingQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["HeadingQ1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["HeadingQ2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["HeadingQ3",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Headings",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["HeadingsPF",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["HeadName",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["HeadName1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["HeadPF",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["HeadToCall",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Locals",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Locals1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["  ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Locals2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Locals3",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["LocalsGlobals",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["LocalsGlobals1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["LocalsGlobalsM",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["MdP",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ModToPureFunc",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ModuleQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ModuleQ1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ModuleQ2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["MultipleArgsQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["NamesProc",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["NotSubsProcs",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["OptDefinition",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["OptimalLocals",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["OptimalLocalsM",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["OptimalLocalsN",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["OptRes",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["PartProc",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ProcActCallsQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ProcBMQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ProcBody",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ProcCalls",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ProcCalls1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ProcContent",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ProcFuncBlQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ProcFuncBlQ1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ProcFuncCS",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ProcFuncTypeQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ProcQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ProcQ1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ProcLocals",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ProcsAct",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ProcUniToMod",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["PureFuncQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["PureToFunc",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ReplaceSubProcs",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["QBlockMod",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["QFunction",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["QFunction1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["QmultiplePF",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["RealProcQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["RedundantLocals",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["RedundantLocalsM",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["RemovePF",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ReplaceLocals",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["RemProcOnHead",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["RemProcOnHead1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["RenameH",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["RenBlockFuncMod",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["RenBlockFuncMod1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ReplaceProc",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ReduceArgs",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["  ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ReplaceProcBody",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ScanLikeProcs",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SingleDefQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ShortPureFuncQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StandHead",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StrNestedMod",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StructProcFunc",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SubProcs",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SubProcs1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SubProcs2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SubProcs3",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SubsProcQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SubsProcs",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SyntCorProcQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SysFuncQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SysFuncQ1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SysUserSoft",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["TestArgsCall",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["TestArgsLocals",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["TestArgsTypes",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["TestArgsTypes1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["TestArgsTypes2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["TestDefBFM",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["TestBFM",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["TestFactArgs",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["TestHeadingQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["TestProcCalls",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ToDefOptPF",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["TrueCallQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["UprocQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Uprocs",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["VarsInBlockMod",
    FontColor->RGBColor[1., 0., 0.]]}],
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontSlant->"Italic"]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.59479307665625*^9, 3.5947930895625*^9}, {
   3.59479330309375*^9, 3.59479330675*^9}, 3.59479360584375*^9, {
   3.594793955546875*^9, 3.594793956875*^9}, 3.594798813625*^9, 
   3.594798928203125*^9, {3.594800078*^9, 3.59480008284375*^9}, {
   3.594801501421875*^9, 3.59480150646875*^9}, {3.594801734671875*^9, 
   3.594801756234375*^9}, 3.5948061965625*^9, 3.59480763815625*^9, 
   3.59487881075*^9, {3.59489075934375*^9, 3.59489077390625*^9}, {
   3.626696416314582*^9, 3.6266964291146*^9}, {3.6270465728672743`*^9, 
   3.627046592396392*^9}, {3.627473098982699*^9, 3.6274731244621563`*^9}, 
   3.627825825474537*^9, {3.6278258750413723`*^9, 3.6278258887221546`*^9}, {
   3.628596382265798*^9, 3.628596428035862*^9}, {3.629044158472173*^9, 
   3.6290441610221767`*^9}, {3.6291319015989604`*^9, 3.629131905588966*^9}, {
   3.6292679481250486`*^9, 3.629267954325057*^9}, {3.629299509146133*^9, 
   3.629299516436143*^9}, {3.6298184341796494`*^9, 3.6298184426896615`*^9}, 
   3.632150849433142*^9, {3.6322160870660024`*^9, 3.632216094966014*^9}, 
   3.6343730166840096`*^9, 3.6355158427723026`*^9, 3.6355939700237274`*^9, {
   3.638020338287924*^9, 3.638020348167938*^9}, {3.639475191095579*^9, 
   3.6394752009755926`*^9}, {3.6395407976187954`*^9, 
   3.6395408429288588`*^9}, {3.6402505881780396`*^9, 3.640250597728586*^9}, 
   3.640320713109584*^9, {3.6404227051040916`*^9, 3.6404227175428033`*^9}, {
   3.6405790859823847`*^9, 3.640579091682393*^9}, 3.6406125614832106`*^9, {
   3.6406979162314076`*^9, 3.6406979226014166`*^9}, {3.6419930409542084`*^9, 
   3.6419930595142345`*^9}, 3.641993273554534*^9, {3.642423565930724*^9, 
   3.6424235977207685`*^9}, {3.647509875979373*^9, 3.647509882869383*^9}, {
   3.6480335636022367`*^9, 3.6480335732577887`*^9}, {3.6484729703059144`*^9, 
   3.648472996145951*^9}, {3.6485587226817603`*^9, 3.648558731021772*^9}, {
   3.6486313146070547`*^9, 3.6486313182942657`*^9}, {3.6487256820867834`*^9, 
   3.648725696003579*^9}, {3.648889060282093*^9, 3.648889074072112*^9}, {
   3.64889051274325*^9, 3.64889051988326*^9}, {3.6494066141395426`*^9, 
   3.6494066219595532`*^9}, 3.6514666985146413`*^9, 3.6514669957350574`*^9, {
   3.651496706545021*^9, 3.651496715075033*^9}, {3.6516527468966417`*^9, 
   3.6516527566166553`*^9}, {3.6519001163435698`*^9, 3.651900125353582*^9}, {
   3.652003391445699*^9, 3.652003398065708*^9}, 3.6528672365199375`*^9, {
   3.6577140600438986`*^9, 3.6577140640939045`*^9}, {3.6585733831516857`*^9, 
   3.6585733916116977`*^9}, {3.6588328494227095`*^9, 
   3.6588328534027147`*^9}, {3.6589813638383236`*^9, 
   3.6589813705583324`*^9}, {3.6589821052503614`*^9, 3.6589821125103717`*^9}, 
   3.6658980277393303`*^9, {3.6670369453735123`*^9, 3.667036946223513*^9}, {
   3.667037421204178*^9, 3.6670374219841795`*^9}, {3.6680870243966646`*^9, 
   3.668087033516677*^9}, {3.6680877381886635`*^9, 3.668087744398672*^9}, {
   3.6683128057375364`*^9, 3.6683128320675735`*^9}, {3.6685945458189926`*^9, 
   3.668594546008993*^9}, {3.6691088177194676`*^9, 3.669108818709469*^9}, {
   3.669108857909524*^9, 3.669108862839531*^9}, {3.669432246149742*^9, 
   3.669432270669777*^9}, {3.6694323554498954`*^9, 3.6694323783999276`*^9}, {
   3.670649804393362*^9, 3.6706498143633757`*^9}, {3.6706498445734186`*^9, 
   3.6706498544734325`*^9}, {3.670675432245738*^9, 3.670675444145755*^9}, {
   3.670849826731823*^9, 3.6708498392918406`*^9}, {3.6733589547628508`*^9, 
   3.67335896138286*^9}},
 FontSize->12],

Cell[BoxData[
 StyleBox[
  RowBox[{
   StyleBox[
    RowBox[{
     StyleBox["5.",
      FontColor->RGBColor[0., 0.3254901960784314, 0.1607843137254902]], 
     StyleBox[" ",
      FontColor->RGBColor[0., 0.3254901960784314, 0.1607843137254902]], 
     StyleBox["Software",
      FontColor->RGBColor[0., 0.3254901960784314, 0.1607843137254902]], 
     StyleBox[" ",
      FontColor->RGBColor[0., 0.3254901960784314, 0.1607843137254902]], 
     StyleBox["for",
      FontColor->RGBColor[0., 0.3254901960784314, 0.1607843137254902]], 
     StyleBox[" ",
      FontColor->RGBColor[0., 0.3254901960784314, 0.1607843137254902]], 
     StyleBox["work",
      FontColor->RGBColor[0., 0.3254901960784314, 0.1607843137254902]], 
     StyleBox[" ",
      FontColor->RGBColor[0., 0.3254901960784314, 0.1607843137254902]], 
     StyleBox["with",
      FontColor->RGBColor[0., 0.3254901960784314, 0.1607843137254902]], 
     StyleBox[" ",
      FontColor->RGBColor[0., 0.3254901960784314, 0.1607843137254902]], 
     StyleBox["packages",
      FontColor->RGBColor[0., 0.3254901960784314, 0.1607843137254902]], 
     StyleBox[" ",
      FontColor->RGBColor[0., 0.3254901960784314, 0.1607843137254902]], 
     StyleBox["and",
      FontColor->RGBColor[0., 0.3254901960784314, 0.1607843137254902]], 
     StyleBox[" ",
      FontColor->RGBColor[0., 0.3254901960784314, 0.1607843137254902]], 
     StyleBox["documents",
      FontColor->RGBColor[0., 0.3254901960784314, 0.1607843137254902]], 
     StyleBox[" ",
      FontColor->RGBColor[0., 0.3254901960784314, 0.1607843137254902]], 
     StyleBox["files",
      FontColor->RGBColor[0., 0.3254901960784314, 0.1607843137254902]], 
     StyleBox[" ",
      FontColor->RGBColor[0., 0.3254901960784314, 0.1607843137254902]], 
     StyleBox["of",
      FontColor->RGBColor[0., 0.3254901960784314, 0.1607843137254902]], 
     StyleBox[" ",
      FontColor->RGBColor[0., 0.3254901960784314, 0.1607843137254902]], 
     StyleBox["the",
      FontColor->RGBColor[0., 0.3254901960784314, 0.1607843137254902]], 
     StyleBox[" ",
      FontColor->RGBColor[0., 0.3254901960784314, 0.1607843137254902]], 
     StyleBox["types",
      FontColor->RGBColor[0., 0.3254901960784314, 0.1607843137254902]], 
     StyleBox[" ",
      FontColor->RGBColor[0., 0.3254901960784314, 0.1607843137254902]], 
     RowBox[{
      StyleBox["\"\<\>",
       FontColor->RGBColor[0., 0.3254901960784314, 0.1607843137254902]], 
      StyleBox["m",
       FontColor->RGBColor[0.4588235294117647, 0., 0.4588235294117647]], 
      StyleBox["\"\<\>",
       FontColor->RGBColor[0., 0.3254901960784314, 0.1607843137254902]]}]}],
    FontVariations->{"Underline"->True}], 
   StyleBox[",",
    FontColor->RGBColor[0., 0.3254901960784314, 0.1607843137254902]], 
   StyleBox[
    RowBox[{
     StyleBox["\"\<\>",
      FontColor->RGBColor[0., 0.3254901960784314, 0.1607843137254902]], 
     StyleBox["mx",
      FontColor->RGBColor[0.41568627450980394`, 0., 0.41568627450980394`]], 
     StyleBox["\"\<\>",
      FontColor->RGBColor[0., 0.3254901960784314, 0.1607843137254902]]}],
    FontVariations->{"Underline"->True}], 
   StyleBox[",",
    FontVariations->{"Underline"->True},
    FontColor->RGBColor[0., 0.3254901960784314, 0.1607843137254902]], 
   StyleBox[" ",
    FontVariations->{"Underline"->True},
    FontColor->RGBColor[0., 0.3254901960784314, 0.1607843137254902]], 
   RowBox[{
    RowBox[{
     StyleBox["and",
      FontVariations->{"Underline"->True},
      FontColor->RGBColor[0., 0.3254901960784314, 0.1607843137254902]], 
     StyleBox[" ",
      FontVariations->{"Underline"->True},
      FontColor->RGBColor[0., 0.3254901960784314, 0.1607843137254902]], 
     RowBox[{
      StyleBox["\"\<\>",
       FontVariations->{"Underline"->True},
       FontColor->RGBColor[0., 0.3254901960784314, 0.1607843137254902]], 
      StyleBox["nb",
       FontVariations->{"Underline"->True},
       FontColor->RGBColor[0.5098039215686274, 0., 0.5098039215686274]], 
      StyleBox["\"\<\>",
       FontColor->RGBColor[0., 0.43529411764705883`, 0.]]}]}], 
    StyleBox[":",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3254901960784314, 0.1607843137254902]], 
    StyleBox[" ",
     FontColor->RGBColor[1., 0., 0.]], 
    StyleBox["$UserContext",
     FontColor->RGBColor[1., 0., 0.]]}], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["AcNb",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ActivateMeansFromCdfNb",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ActUcontexts",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["AddMxFile",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["AllContexts",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["AllCurrentNb",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Aobj",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Aobj1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["CALL",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["CALLmx",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["CALLmxH",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["CallSave",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["CdfNbToText",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["CNames",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["CodeObjMfile",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ContCodeUsageM",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["  ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ContentOfMfile",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ContentOfMfile1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ContentOfMfile2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ContentsCdfNb",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ContentsMx",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ContentOfNbCdf",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ContextActQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ContextsCS",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ContextInFile",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ContextFromFile",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ContextFromM",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ContextFromM1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ContextMfile",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ContextMfile1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ContextMXfile",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ContextInMxFile",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ContextFromMx",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ContextNBfile",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ContextQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ContextForPackage",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ContextRepMx",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ContextToFileName1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Contexts1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ContextsInFiles",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ContextInMfile",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ContMxFile",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ContMxFile1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ContMxFile2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ContMxW7",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ContOfContext",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ConvertMtoMx",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ContUsageMfile",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["CopyFile1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["CurrentNb",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["CurrentPackageQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DefFromM",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DefFromPackage",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DefInPackage",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DefWithContext",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DeletePackage",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DelOfPackage",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DiffContexts",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DumpSaveP",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["EvaluateCdfNbFile",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ExcessVarsPack",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ExtrDefFromM",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ExtrFromNBfile",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["  ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ExtrFromNBfile1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ExtrFromNBfile2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ExtrFromNBfile3",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ExtrFromM",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ExtrFromMfile",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ExtrOfMfile",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ExtrPackName",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["FindFileContext",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["FindFileContext1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["FileCurrentNb",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["FullCalls",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["FullCalls1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["HelpBasePac",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["HelpPrint",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["IsPackageQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["LoadMyPackage",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["LoadNameFromM",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["LoadPackage",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["MathPackages",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["NbFileEvaluate",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["MfileEvaluate",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["MfileLoad",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["MfilePackageQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["MfileToMx",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ModLibraryPath",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["MxFileToMfile",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["MxPackNames",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["MxToTxt",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["MxToTxt1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["MxToTxt2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["MxToMpackage",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["NamesContext",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["NamesCS",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["NamesFromMx",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["NamesFromMx1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["NamesFromMx2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["NamesMPackage",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["NamesNbPackage",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["NamesNbPackage1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["NbCallProc",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["NbName",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Need",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Npackage",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ObjInCurrentNb",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ObjInCurrentNb1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["OptDefPackage",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["OptimizedDefPackage",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["OptimizedMfile",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["PackageFileQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["PackageMxCont",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["PackageQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Packages",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["PackNames",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["PackNames1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["PackNames2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["PackReplaceQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["PackageUsages",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["QSaveGUI",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["RedMfile",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["RedMxFile",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ReloadPackage",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ReloadPackage1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["RemoveContext",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["RemovePackage",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["RestoreDelPackage",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SymbolsContext",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SymbolsFromMx",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SystemPackages",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["TempInPack",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["TestCdfNbFile",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ToContextPath",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["TypeWinMx",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["UpdateContextPaths",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["UpdatePackages",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["UpdatePath",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["UsagesCdfNb",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["UserPackTempVars",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["VizContentsNB",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["VizContext",
    FontColor->RGBColor[1., 0., 0.]]}],
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontSlant->"Italic"]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.594793747140625*^9, 3.5947937668125*^9}, {
   3.594793947265625*^9, 3.59479394965625*^9}, 3.594794144875*^9, 
   3.594798813625*^9, 3.594798928203125*^9, {3.5947998974375*^9, 
   3.594799909921875*^9}, 3.594801756234375*^9, 3.594806205078125*^9, 
   3.59487881884375*^9, {3.594890779953125*^9, 3.59489079875*^9}, {
   3.6270176700188155`*^9, 3.627017698910468*^9}, {3.627017744430072*^9, 
   3.6270177527105455`*^9}, {3.6270181525444145`*^9, 3.627018152553415*^9}, 
   3.6285964362458735`*^9, {3.632150859163156*^9, 3.6321508651731644`*^9}, 
   3.634373008713998*^9, {3.635158233897213*^9, 3.635158241497224*^9}, {
   3.635499560550231*^9, 3.635499569530243*^9}, {3.6354996185603123`*^9, 
   3.6354996288703265`*^9}, 3.635515850352313*^9, 3.6355940106537848`*^9, {
   3.635768811635203*^9, 3.6357688133763027`*^9}, {3.6359493265010166`*^9, 
   3.6359493375910325`*^9}, {3.6364620323714867`*^9, 3.636462039851915*^9}, {
   3.63670845021345*^9, 3.636708458967951*^9}, {3.637064925455327*^9, 
   3.6370649301353335`*^9}, {3.637673159063175*^9, 3.6376731641631823`*^9}, {
   3.637673464043602*^9, 3.6376734723836136`*^9}, 3.6380203579379516`*^9, {
   3.6398284641989512`*^9, 3.6398284678589563`*^9}, 3.6398285686890974`*^9, 
   3.640612569823222*^9, 3.641120625367132*^9, {3.6412976806959043`*^9, 
   3.641297691535919*^9}, {3.641374107208973*^9, 3.6413741160189857`*^9}, {
   3.64138455744418*^9, 3.641384562484187*^9}, {3.641731308989386*^9, 
   3.641731330092593*^9}, {3.641900157605805*^9, 3.6419001631758127`*^9}, 
   3.6419930676542463`*^9, 3.6419932816345453`*^9, 3.6424236071007814`*^9, {
   3.6490636372894487`*^9, 3.6490636495494657`*^9}, {3.6491553039330063`*^9, 
   3.6491553165930233`*^9}, {3.6496677987360897`*^9, 3.649667808906104*^9}, {
   3.6499096601413794`*^9, 3.649909669521393*^9}, {3.649928296174453*^9, 
   3.6499283032244625`*^9}, {3.6499924481855683`*^9, 3.649992495085634*^9}, 
   3.650015121316225*^9, {3.6500260727852955`*^9, 3.6500260820953083`*^9}, {
   3.6500802485332823`*^9, 3.650080258423296*^9}, {3.6501962247431693`*^9, 
   3.650196230223177*^9}, {3.6503621747718315`*^9, 3.650362179571838*^9}, {
   3.650442152008832*^9, 3.650442166428852*^9}, {3.6505997408807964`*^9, 
   3.650599746515893*^9}, {3.6506000096262617`*^9, 3.650600036396299*^9}, 
   3.651466706644653*^9, 3.6514670111050787`*^9, {3.6522667621216927`*^9, 
   3.652266766451699*^9}, {3.65233251926349*^9, 3.6523325222234945`*^9}, {
   3.652531636002905*^9, 3.6525316766832314`*^9}, {3.65284686026939*^9, 
   3.6528468705994043`*^9}, 3.652867253859962*^9, 3.652879385860357*^9, {
   3.6528796008806577`*^9, 3.6528796061306653`*^9}, {3.652965731111024*^9, 
   3.652965743181041*^9}, {3.6533078131429167`*^9, 3.653307824042932*^9}, {
   3.653467839319066*^9, 3.6534678495790806`*^9}, {3.653647840368436*^9, 
   3.653647848622908*^9}, {3.6538275429158306`*^9, 3.6538275478858376`*^9}, {
   3.6546613015002127`*^9, 3.6546613076802216`*^9}, {3.654868631419525*^9, 
   3.654868639459536*^9}, {3.655265874934092*^9, 3.655265883234104*^9}, {
   3.6555625641748486`*^9, 3.6555625697648563`*^9}, {3.655616845096051*^9, 
   3.6556168528760624`*^9}, 3.6556336013661003`*^9, {3.6559819116906033`*^9, 
   3.655981920110615*^9}, {3.6605679241359897`*^9, 3.6605679310859995`*^9}, {
   3.6613341008225636`*^9, 3.6613341140825825`*^9}, {3.6615106965286875`*^9, 
   3.661510708135351*^9}, {3.6615242461113443`*^9, 3.6615242568613596`*^9}, {
   3.661605207860119*^9, 3.661605217690133*^9}, {3.661693683828141*^9, 
   3.6616936914781523`*^9}, {3.6618362116070538`*^9, 
   3.6618362253370733`*^9}, {3.661865356821601*^9, 3.6618653767816286`*^9}, {
   3.6647695075973473`*^9, 3.664769514017356*^9}, {3.6654002237316923`*^9, 
   3.665400230511702*^9}, {3.6657196549209876`*^9, 3.665719660480995*^9}, {
   3.665915258890808*^9, 3.6659152690308228`*^9}, {3.6659153352209153`*^9, 
   3.665915364570956*^9}, {3.6662684808427143`*^9, 3.6662685038227463`*^9}, {
   3.6663277245901413`*^9, 3.6663277386001616`*^9}, {3.6663632653895493`*^9, 
   3.666363279589569*^9}, {3.6665857120750685`*^9, 3.6665857230150843`*^9}, {
   3.667369983414214*^9, 3.66737000167424*^9}, {3.667472456547967*^9, 
   3.667472467117982*^9}, {3.667827624191247*^9, 3.667827629581254*^9}, {
   3.667885654322871*^9, 3.6678856634928837`*^9}, {3.669344458490821*^9, 
   3.66934446483083*^9}, {3.6694323889899426`*^9, 3.669432436720009*^9}, {
   3.6695411655464478`*^9, 3.6695411762364626`*^9}, {3.669544614948704*^9, 
   3.6695446650387735`*^9}, {3.6716271362149167`*^9, 3.6716271481849337`*^9}},
 FontSize->12],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    StyleBox["6.",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.1568627450980392]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.1568627450980392]], 
    StyleBox["Software",
     FontColor->RGBColor[
      0.1568627450980392, 0.33725490196078434`, 0.027450980392156862`]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.1568627450980392]], 
    StyleBox["expanding",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.1568627450980392]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.1568627450980392]], 
    StyleBox["the",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.1568627450980392]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.1568627450980392]], 
    StyleBox["standard",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.1568627450980392]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.1568627450980392]], 
    StyleBox["functions",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.1568627450980392]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.1568627450980392]], 
    StyleBox["of",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.1568627450980392]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.1568627450980392]], 
    StyleBox["the",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.1568627450980392]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.1568627450980392]], 
    StyleBox["Mathematica",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0.7254901960784313, 0., 0.]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.1568627450980392]], 
    StyleBox["system",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.1568627450980392]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.1568627450980392]], 
    StyleBox["or",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.1568627450980392]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.1568627450980392]], 
    StyleBox["its",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.1568627450980392]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.1568627450980392]], 
    StyleBox["software",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.1568627450980392]], 
    StyleBox["  ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.1568627450980392]], 
    StyleBox["as",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.1568627450980392]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.1568627450980392]], 
    StyleBox["a",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.1568627450980392]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.3176470588235294, 0.1568627450980392]], 
    RowBox[{
     StyleBox["whole",
      FontVariations->{"Underline"->True},
      FontColor->RGBColor[0., 0.3176470588235294, 0.1568627450980392]], 
     StyleBox[":",
      FontVariations->{"Underline"->True},
      FontColor->RGBColor[0., 0.3176470588235294, 0.1568627450980392]], 
     StyleBox[" ",
      FontColor->RGBColor[1., 0., 0.]], 
     StyleBox["$Line1",
      FontColor->RGBColor[1., 0., 0.]]}]}], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ActBFM",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ActRemObj",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Affiliate",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["AtomicQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Attributes1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["AttributesH",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["AttributesQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["BitGet1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Bits",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["BitSet1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["CallQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["CallsInMean",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["CallsInMeansPackage",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["CatN",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Clear1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ClearContextVars",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ClearOut",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ClearValues",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ComplexQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ContextDef",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ContextSymbol",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ContextToSymbol",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ContextToSymbol1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ContextToSymbol2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["CountOptions",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["CurrentNames",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["D1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Decomp",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Def",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Def1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DefAttributesH",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Definition1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Definition2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Definition3",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Definition4",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DefOnHead",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DefOp",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DeleteOptsAttr",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DefinedActSymbols",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DefToString",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Df",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Df1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Df2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Diff",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Difff",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Diff1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Diff2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DO",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DumpSave1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DumpSave2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["EquExprPatt",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["EquExprPatt1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ExprComp",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ExpressionQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ExprOnLevels",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ExprPatternQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ExprsInStrQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["FormalArgs",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["FreeQ1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["FreeQ2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["FullFormF",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Gather1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Gather2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["GatherStrLetters",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["GC",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["GenRules",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["GenRules1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["GenRules2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["GroupNames",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["GV",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Head1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Head2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Head3",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["HowAct",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Iff",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["IFk",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["IFk1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Ind",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Index",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["IndexedQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["IndexQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Indices",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Int",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Int1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Integral1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Integral2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Integrate1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Integrate2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Intersection1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["IntersectStrings",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["LangHoldFuncQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Levels",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ListableC",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ListableQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ListStrQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["LocObj",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Map1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Map10",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Map11",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Map12",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Map13",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Map14",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Map15",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Map16",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Map17",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Map18",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Map19",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Map20",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Map2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Map3",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Map4",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Map5",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Map6",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Map7",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Map8",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Map9",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["MainContexts",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["MapInSitu",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["MapInSitu1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["MapInSitu2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Mapp",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Mapp1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["MaxParts",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["MemberLN",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["MemberQ1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["MemberQ2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["MemberQ3",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["MemberQ4",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["MemberT",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["MessagesOut",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["MixCaseQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["MultipleContexts",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Names1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["NbCurrentQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["NbDocumentQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["NotebookSave1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Nvalue",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Nvalue1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ObjType",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Op",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["OP",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["OpenCurrentNb",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["PalindromeQ1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["PartialSums",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["PatternQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["PosIntQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ProtectedQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["PureDefinition",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Range1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Range2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Range3",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Range4",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Range5",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["RemovedQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["RemoveNames",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Rename",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Rename1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Replace1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Replace2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Replace3",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Replace4",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ReplaceAll1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ReplaceAll2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ReplaceOut",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["RepStandFunc",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["RestoreCS",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["RevRules",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Riffle1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["RhsLhs",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["RhsLhs1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Rule1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["RuleQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SaveCurrentSession",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SaveInMx",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SetAttributes1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SelectContains",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SelectStrings",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SortLS",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Subs",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Subs1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Subs1Q",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Subs2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Substitution",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Substitution1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StringPat",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StringCases1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StringCases2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StringFreeQ1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StringFreeQ2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StringFreeQ3",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StringTrim1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StringTrim2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SymbolGreater",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SymbolLess",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SyntaxLength1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SystemQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SysFunctionQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SystemSymbols",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SysContexts",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["TemporaryQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ToContext",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ToStringRule",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ToStringRule1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Tuples1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["TwoHandQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["TypeActObj",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["UnDef",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["UndefinedQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["UnDefVars",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["UnDefVars1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["UnevaluatedQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["UniqueV",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["VarExch",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["VarExch1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["VarsValues",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["WhatObj",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["WhatType",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["WhatValue",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["WhichN",
    FontColor->RGBColor[1., 0., 0.]]}],
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontSlant->"Italic"]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.59479426503125*^9, 3.594794275140625*^9}, {
   3.594794404328125*^9, 3.59479440703125*^9}, {3.594794681296875*^9, 
   3.59479468475*^9}, {3.594794770578125*^9, 3.594794771671875*^9}, 
   3.594798813640625*^9, 3.594798928203125*^9, {3.594799694875*^9, 
   3.5947996988125*^9}, {3.594799968421875*^9, 3.5947999700625*^9}, 
   3.59480175625*^9, 3.594806216203125*^9, 3.59487882709375*^9, {
   3.624182767874428*^9, 3.6241827803361406`*^9}, 3.6245302431918073`*^9, {
   3.624530706042455*^9, 3.6245307088724594`*^9}, {3.624534652030054*^9, 
   3.624534677349502*^9}, 3.6245445991252947`*^9, {3.6257221436271143`*^9, 
   3.6257221436371145`*^9}, {3.625722180717166*^9, 3.6257221870971746`*^9}, 
   3.625722280517306*^9, 3.6270181743816633`*^9, {3.628418484563011*^9, 
   3.6284184959030275`*^9}, 3.628596458075904*^9, {3.628693271564253*^9, 
   3.6286932755742583`*^9}, {3.63090373494713*^9, 3.6309037507020316`*^9}, 
   3.634372999373985*^9, {3.635515865772335*^9, 3.6355158777923517`*^9}, 
   3.6355221317681046`*^9, {3.635522167638155*^9, 3.635522212868218*^9}, 
   3.635593998953768*^9, {3.6377515063510466`*^9, 3.63775151577106*^9}, 
   3.6380203683679657`*^9, {3.6381575149571247`*^9, 3.638157521997134*^9}, {
   3.639130815046564*^9, 3.6391308198665705`*^9}, {3.6396572023106623`*^9, 
   3.6396572439707203`*^9}, {3.6397976536359415`*^9, 
   3.6397976579541883`*^9}, {3.6400001266303015`*^9, 3.6400001328903103`*^9}, 
   3.640612581103238*^9, {3.641640183192911*^9, 3.641640187992918*^9}, {
   3.6417314904927673`*^9, 3.6417314942999854`*^9}, 3.641993077294259*^9, 
   3.6419932884945555`*^9, {3.642157655356947*^9, 3.642157670456968*^9}, {
   3.6421584861981096`*^9, 3.64215850092813*^9}, {3.642163517136565*^9, 
   3.6421635243465753`*^9}, 3.6424236156907935`*^9, {3.6480072728865824`*^9, 
   3.648007277566589*^9}, {3.6492423956755767`*^9, 3.6492423989787655`*^9}, {
   3.65097341000969*^9, 3.6509734133596945`*^9}, {3.650973892820366*^9, 
   3.65097389576037*^9}, {3.6513748498972435`*^9, 3.651374863037262*^9}, 
   3.6514667145046635`*^9, 3.6514670313551073`*^9, {3.653467732547917*^9, 
   3.6534677446889334`*^9}, 3.6534692239760075`*^9, {3.6539999437779922`*^9, 
   3.6539999593280134`*^9}, {3.6543291136456614`*^9, 
   3.6543291223656735`*^9}, {3.654517055917776*^9, 3.6545170639177876`*^9}, {
   3.6550390894848633`*^9, 3.655039113544897*^9}, {3.655131689194068*^9, 
   3.6551316950340757`*^9}, {3.6552658258840237`*^9, 
   3.6552658336140347`*^9}, {3.6552875962078495`*^9, 3.6552876046178617`*^9}, 
   3.655562708925051*^9, 3.6556335922760873`*^9, {3.656424212362788*^9, 
   3.6564242206427994`*^9}, {3.6565857192828074`*^9, 3.656585724652815*^9}, {
   3.6567390373317327`*^9, 3.656739044741743*^9}, {3.6569966405789614`*^9, 
   3.6569966439489665`*^9}, {3.65710904678222*^9, 3.657109085632274*^9}, {
   3.6573612786013002`*^9, 3.6573612794113016`*^9}, 3.6603913493781366`*^9, {
   3.662134431525958*^9, 3.6621344379059668`*^9}, {3.662134485466034*^9, 
   3.6621344982060513`*^9}, {3.6622092687441163`*^9, 3.662209274304124*^9}, {
   3.662299093232587*^9, 3.662299096962592*^9}, {3.6628770177328944`*^9, 
   3.662877023842903*^9}, {3.6631340375104847`*^9, 3.6631340451004953`*^9}, {
   3.663158394458009*^9, 3.66315840225802*^9}, {3.663332353570726*^9, 
   3.6633323619307375`*^9}, {3.6633331146417913`*^9, 
   3.6633331184917965`*^9}, {3.6653193210757933`*^9, 
   3.6653193301558065`*^9}, {3.666692512187235*^9, 3.6666925182115793`*^9}, {
   3.66686878066284*^9, 3.6668687910828547`*^9}, {3.668434175439455*^9, 
   3.668434196203643*^9}, {3.6689384538208923`*^9, 3.6689384610209026`*^9}, {
   3.6694324490900264`*^9, 3.6694324584400396`*^9}, 3.6694327413504353`*^9, {
   3.6720542207201557`*^9, 3.6720542315101705`*^9}, {3.6721401492270966`*^9, 
   3.672140154052373*^9}, {3.672224755494957*^9, 3.672224764064969*^9}, {
   3.672569889008874*^9, 3.672569894388881*^9}},
 FontSize->12],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    StyleBox["7.",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.2901960784313726, 0.1450980392156863]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.2901960784313726, 0.1450980392156863]], 
    StyleBox["Software",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.2901960784313726, 0.1450980392156863]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.2901960784313726, 0.1450980392156863]], 
    StyleBox["for",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.2901960784313726, 0.1450980392156863]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.2901960784313726, 0.1450980392156863]], 
    StyleBox["work",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.2901960784313726, 0.1450980392156863]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.2901960784313726, 0.1450980392156863]], 
    StyleBox["with",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.2901960784313726, 0.1450980392156863]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.2901960784313726, 0.1450980392156863]], 
    StyleBox["file",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.2901960784313726, 0.1450980392156863]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.2901960784313726, 0.1450980392156863]], 
    StyleBox["system",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.2901960784313726, 0.1450980392156863]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.2901960784313726, 0.1450980392156863]], 
    StyleBox["of",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.2901960784313726, 0.1450980392156863]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.2901960784313726, 0.1450980392156863]], 
    StyleBox["the",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.2901960784313726, 0.1450980392156863]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.2901960784313726, 0.1450980392156863]], 
    RowBox[{
     StyleBox["computer",
      FontVariations->{"Underline"->True},
      FontColor->RGBColor[0., 0.2901960784313726, 0.1450980392156863]], 
     StyleBox[":",
      FontVariations->{"Underline"->True},
      FontColor->RGBColor[0., 0.2901960784313726, 0.1450980392156863]], 
     StyleBox[" ",
      FontColor->RGBColor[1., 0., 0.]], 
     StyleBox["Adrive",
      FontColor->RGBColor[1., 0., 0.]]}]}], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Adrive1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Attrib",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Attrib1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Attribs",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["BootDrive",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["BootDrive1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["CDir",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ClearRecycler",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ClearRecyclerBin",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Close1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Close2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["CloseAll",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Closes",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["CopyDir",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["CopyFileToDir",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DelAllAttribs",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DelDirFile",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DelDirFile1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DeleteFile1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DirEmptyQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DirFilePaths",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DirsFiles",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DirFD",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DirFull",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DirName",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["DirQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["EmptyFileQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ExtProgExe",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["FileDirStForm",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["FileExistsQ1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["FileFormat1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["FileFormat2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["FileFormat3",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["FileOpenQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["FileOpenQ1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["FileQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["FilesDistrDirs",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["FindFile1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["FindFile2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["FindFileObject",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["FindSubDir",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["FreeSpaceVol",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["InOutFiles",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["IsFile",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["IsFileOpen",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["LoadExtProg",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["LoadFile",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["MathematicaDF",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Memory",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Nobj",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["OpenFileQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["OpenFiles",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["PathToFileQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ReadFullFile",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ReadFullFile1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["RenDirFile",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["RestoreDelFile",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Save1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Save2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SearchDir",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SearchFile",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SearchFile1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SetDir",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SetDir1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SetPathSeparator",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StandPath",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StreamFiles",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["StreamsU",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["TypeFilesD",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Ver",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["VolDir",
    FontColor->RGBColor[1., 0., 0.]]}],
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontSlant->"Italic"]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.5947948025625*^9, 3.594794810546875*^9}, {
   3.59479488409375*^9, 3.59479488621875*^9}, 3.594795110921875*^9, 
   3.594798813640625*^9, 3.594798928203125*^9, 3.59480175625*^9, 
   3.59480622628125*^9, 3.59487883571875*^9, {3.632843348066459*^9, 
   3.632843370676491*^9}, {3.633240402597746*^9, 3.6332404281977816`*^9}, {
   3.633432107439353*^9, 3.633432110819358*^9}, 3.634212041479851*^9, {
   3.634312066605453*^9, 3.6343121066255093`*^9}, {3.634464701661359*^9, 
   3.6344647277613955`*^9}, {3.634483739999854*^9, 3.6344837715998983`*^9}, {
   3.637135825316806*^9, 3.6371358380868235`*^9}, {3.637673992594342*^9, 
   3.6376740072243624`*^9}, {3.637988212864907*^9, 3.637988221591406*^9}, 
   3.6380188695842237`*^9, {3.6380936552321825`*^9, 3.6380936792922163`*^9}, {
   3.6383305080336246`*^9, 3.638330537503666*^9}, {3.63836684473995*^9, 
   3.6383668499899573`*^9}, {3.652867279429998*^9, 3.652867279429998*^9}, {
   3.6671383319952354`*^9, 3.667138334885239*^9}, {3.6691780519199696`*^9, 
   3.6691780600299807`*^9}, {3.6694324862900786`*^9, 3.6694324925900874`*^9}},
 FontSize->12],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    StyleBox["8.",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.2901960784313726, 0.1450980392156863]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.2901960784313726, 0.1450980392156863]], 
    StyleBox["Some",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.2901960784313726, 0.1450980392156863]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.2901960784313726, 0.1450980392156863]], 
    StyleBox["tools",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.2901960784313726, 0.1450980392156863]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.2901960784313726, 0.1450980392156863]], 
    StyleBox["of",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.2901960784313726, 0.1450980392156863]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.2901960784313726, 0.1450980392156863]], 
    StyleBox["a",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.2901960784313726, 0.1450980392156863]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.2901960784313726, 0.1450980392156863]], 
    StyleBox["special",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.2901960784313726, 0.1450980392156863]], 
    StyleBox[" ",
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[0., 0.2901960784313726, 0.1450980392156863]], 
    RowBox[{
     StyleBox["purpose",
      FontVariations->{"Underline"->True},
      FontColor->RGBColor[0., 0.2901960784313726, 0.1450980392156863]], 
     StyleBox[":",
      FontVariations->{"Underline"->True},
      FontColor->RGBColor[0., 0.2901960784313726, 0.1450980392156863]], 
     StyleBox[" ",
      FontColor->RGBColor[1., 0., 0.]], 
     StyleBox["$Version1",
      FontColor->RGBColor[1., 0., 0.]]}]}], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["$Version2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ClearCS",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["CFsequences",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["CodeEncode",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["CodeEncode1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ComposeGTF",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Cost",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["FunctionToRules",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["GtfMod2",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["GtfMod2Q",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["HS",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["HSD",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["MinNCF",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["NcfQ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Nconcat",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["NfToLtf",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["OpSys",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["OSplatform",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["PCOS",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Predecessors",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["PredecessorsL",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["PredecessorsR",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ReductRes",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ReprodHSD",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ReprodHSM",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ReprodHSM1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ReprodHSwVi",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ReprodXOR1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ReprodXOR11",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Restart",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SelfReprod",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SelfReprod1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["SubConf",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["TabLib",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["ToLTF",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Try",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Un",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Unique1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["UsageBase",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Usages",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["Usages1",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["UsagesMNb",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["UserLib",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[",",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox[" ",
    FontColor->RGBColor[1., 0., 0.]], 
   StyleBox["XOR1",
    FontColor->RGBColor[1., 0., 0.]]}],
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontSlant->"Italic"]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.5947951749375*^9, 3.59479519471875*^9}, {
   3.594795576765625*^9, 3.594795580859375*^9}, 3.594795784625*^9, 
   3.594798813640625*^9, 3.594798928203125*^9, 3.59480175625*^9, 
   3.59480623621875*^9, 3.59487884409375*^9, {3.594878960703125*^9, 
   3.594878965765625*^9}, {3.602072787796875*^9, 3.60207280859375*^9}, {
   3.602223421953125*^9, 3.602223423859375*^9}, {3.602491879578125*^9, 
   3.602491884953125*^9}, {3.603029819859375*^9, 3.60302982246875*^9}, {
   3.603029998375*^9, 3.60303000478125*^9}, {3.603030131078125*^9, 
   3.603030137671875*^9}, {3.603287483125*^9, 3.603287489296875*^9}, {
   3.60337741378125*^9, 3.603377414015625*^9}, {3.603626537078125*^9, 
   3.603626554640625*^9}, {3.6054351903125*^9, 3.6054351968125*^9}, {
   3.605435244765625*^9, 3.6054352506875*^9}, {3.605689652125*^9, 
   3.605689662515625*^9}, {3.60575942815625*^9, 3.60575945534375*^9}, {
   3.60594545984375*^9, 3.60594546328125*^9}, {3.60647826884375*^9, 
   3.6064782705625*^9}, {3.6065633145*^9, 3.60656332096875*^9}, {
   3.60682345178125*^9, 3.60682345784375*^9}, {3.6069040662706394`*^9, 
   3.606904072942515*^9}, {3.6071699109375*^9, 3.607169919484375*^9}, {
   3.6237579993271985`*^9, 3.6237580154272213`*^9}, {3.639284870804987*^9, 
   3.6392848843350058`*^9}, 3.639828529769043*^9, {3.639828582609117*^9, 
   3.6398285860391216`*^9}, {3.652867286560008*^9, 3.652867286560008*^9}, {
   3.66057083667092*^9, 3.660570842470928*^9}, {3.6606617264326906`*^9, 
   3.660661731842698*^9}, {3.662299312472894*^9, 3.6622993177929015`*^9}, {
   3.662548559079663*^9, 3.6625485652600164`*^9}, {3.6671383146152105`*^9, 
   3.667138360685275*^9}, {3.6694325033901024`*^9, 3.66943250878011*^9}, {
   3.6725698548988256`*^9, 3.672569862658837*^9}, {3.672741351869194*^9, 
   3.67274136320921*^9}},
 FontSize->12],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.5948790416875*^9},
 FontFamily->"Courier New",
 FontSize->1],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["T",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0.3411764705882353, 0.6823529411764706]],
 StyleBox["he given tools are grouped according to their basic functional \
purpose; meanwhile, this grouping to a considerable degree is conditional, \
because many of these tools are multifunctional, however even such \
classification allows to orientate oneself better in such multitude of the \
tools. Along with usages, the more detailed information on tools of the \
notebook can be found in the above books [1-6, 8,9] containing description of \
each tool, its source code and the most typical examples of its usage.",
  FontFamily->"Book Antiqua",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0.2823529411764706, 0.5686274509803921]]
}], "Subtitle",
 CellChangeTimes->{
  3.59480464625*^9, 3.594805106875*^9, {3.594805202625*^9, 
   3.594805225671875*^9}, 3.594805320796875*^9, 3.5948073734375*^9, {
   3.5948080715*^9, 3.594808097*^9}, {3.5948081861875*^9, 
   3.594808186984375*^9}, 3.594820711890625*^9, {3.5948771788125*^9, 
   3.59487717978125*^9}, {3.64199316349438*^9, 3.641993208864444*^9}, {
   3.6694325149701185`*^9, 3.6694325524501715`*^9}, {3.66943261616026*^9, 
   3.6694326352702875`*^9}, {3.6694632470713396`*^9, 
   3.6694632492713428`*^9}, {3.669463413761573*^9, 3.669463443681615*^9}, {
   3.6729097747801533`*^9, 3.672909784310167*^9}, {3.673084083286994*^9, 
   3.673084084506996*^9}},
 TextAlignment->Center,
 FontFamily->"Arial",
 FontSize->28],

Cell[BoxData[{
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<AladjevProcedures`\>\"", "]"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"UprocQ", "::", "usage"}], "=", 
   "\"\<The call UprocQ[x] returns the False if x is not a procedure; \
otherwise, two-element list of the format {True, \
{\\\"Module\\\"|\\\"Block\\\"|\\\"DynamicModule\\\"}} is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SymbolQ", "::", "usage"}], "=", 
   "\"\<The call SymbolQ[x] returns the True if x is a symbol; otherwise, the \
False is returned.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SymbolQ1", "::", "usage"}], "=", 
   "\"\<The call SymbolQ1[x] returns the True if x is a single symbol; \
otherwise, the False is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SymbolsOfString", "::", "usage"}], "=", 
   "\"\<The procedure call SymbolsOfString[x] returns the list of the symbols \
which enter an expression represented by a string x. While the call \
SymbolsOfString[x, 1] returns the list of the symbols different from numbers \
which enter an expression represented by a string x. At last, the procedure \
call SymbolsOfString[x, a] where a \[Dash] an expression different from 1, \
returns the the list of the symbols different from numbers and system symbols \
that enter an expression represented by a string x.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrevNextVar", "::", "usage"}], "=", 
   "\"\<The PrevNextVar procedure for a special processing of the symbols of \
the format <symbol><integer> which end with an integer. The procedure call \
PrevNextVar[x, t] on a symbol x of the mentioned format <symbol><integer> \
returns the symbol of the format <symbol><integer \[Dash] t> while the call \
PrevNextVar[x, t, h] where h \[Dash] an arbitrary expression returns symbol \
of the format <symbol><integer + t>. At condition `integer \[Dash] t <= 0` or \
in case of the format x different from the mentioned the source symbol x is \
returned. The previous fragment represents source code of the procedure with \
examples of its usage. The given procedure represents as independent \
interest, and is essentially used for solution of the problem of local \
variables in case of definition of the user traditional functions.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IsFile", "::", "usage"}], "=", 
   "\"\<The call IsFile[x] returns the True if x is a really existing \
datafile; otherwise, the False is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FileQ", "::", "usage"}], "=", 
   "\"\<The call FileQ[x] returns the True if x is a really existing \
datafile; otherwise, the False is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Rule1", "::", "usage"}], "=", 
   "\"\<The Rule1 procedure redefines the system Rule function. The call \
Rule1[x, y] is equivalent to the call Rule[x, y], whereas the calls Rule1[a, \
b, c, d, ... ] and Rule1[{a, b, c, d, ...}] return the list of format {a \
\[Dash]> b, c \[Dash]> d, ...} in case of even quantity of elements a, b, c, \
d, ... ; in other cases the call of Rule1 is returned unevaluated.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RuleQ", "::", "usage"}], "=", 
   "\"\<The call RuleQ[x] returns the True if x is a rule; otherwise, the \
False is returned.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TemporaryQ", "::", "usage"}], "=", 
   "\"\<The function call TemporaryQ[x] returns True if a symbol x defines \
the temporary variable, and False otherwise.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ListRulesQ", "::", "usage"}], "=", 
   "\"\<The call ListRulesQ[x] returns the True if x is a list of rules; \
otherwise, the False is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ListCount", "::", "usage"}], "=", 
   "\"\<The function ListCount is an extension of the standard function \
StringCount onto the lists. The call ListCount[L, {L1, L2,...,Ln}] counts the \
number of occurrences of any of the sublists Lj in a list L (j=1..n).\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StrOfSymblQ", "::", "usage"}], "=", 
   "\"\<The call StrOfSymblQ[x, A] returns the True if a string x contains \
only symbols of a list A; otherwise, the False is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StrPartition", "::", "usage"}], "=", 
   "\"\<The procedure call StrPartition[x, Y] returns the list of substrings \
of a string x that are limited by the first symbol of the string x and symbol \
Y in string format or by their list. For example \\\"xx ... xYzz ... zYhh ... \
hYpp ... p\\\" \[Dash]> {\\\"xx ... xY\\\", \\\"xx ... xYzz ... zY\\\", \
\\\"xx ... xYzz ... zYhh ... hY\\\"}. In case of impossibility of the above \
partition the empty list, i.e. {} is returned. In particular, the procedure \
is useful enough at processing of contexts, directories and full paths to \
datafiles.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CallQ", "::", "usage"}], "=", 
   "\"\<The call CallQ[x] accurate to the sign returns the True if x is an \
expression of the format W[args] where W \[Dash] the name of a procedure or \
function, and args \[Dash] the  tuple of actual arguments, and False \
otherwise.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SubsString", "::", "usage"}], "=", 
   "\"\<The call SubsString[s, {a, b, c, d, ...}] returns the list of \
substrings of a string s that are limited by its substrings {a, b, c, d, \
...}, whereas the call SubsString[s, {a, b, c, d, ...}, p] with third \
optional argument p \[Dash] a pure function in the short format \[Dash] \
returns the list of substrings of the string s which are limited by its \
substrings {a, b, c, d, ...} and meet a condition determined by the pure \
function p. While the call SubsString[s, {a, b, c, d, ...}, p] with the 3rd \
optional argument p \[Dash] an arbitrary expression different from a pure \
function \[Dash] returns the list of the substrings parted by the substrings \
{a, b, c, d, ...}, with deleting of prefixes and suffixes {a, b, c, d, \
...}[[1]] and {a, b, c, d, ...}[[\[Dash]1]] respectively. At absence in the \
string s of at least one of substrings {a, b, c, d, ...} the SubsString call \
returns the empty list, i.e. {}.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Intersection1", "::", "usage"}], "=", 
   "\"\<The procedure Intersection1 is an extension of the standard \
Intersection function. The procedure call Intersection1[x, y, z, h, ..., J] \
returns the list of elements common to all lists of strings in the mode \
IgnoreCase \[Dash]> J\!\(\*
StyleBox[\" \",
FontSize->9]\)\!\(\*
StyleBox[\"\[Element]\",
FontSize->16]\)\!\(\*
StyleBox[\" \",
FontSize->9]\){True, False} of search of identical strings. The empty list \
defines the empty intersection of lists x, y, z, h, ..., whereas $Falled is \
returned if the call contains empty lists or any list contains elements \
different from strings.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IntersectStrings", "::", "usage"}], "=", 
   "\"\<In addition to the Intersection1 procedure the IntersectStrings \
procedure can be useful enough that solves the question of finding of all \
contiguous intersections of symbols between strings of the given tuple. The \
procedure call IntersectStrings[x, y, ..., h, J] in mode IgnoreCase \[Dash]> \
J\!\(\*
StyleBox[\" \",
FontSize->9]\)\!\(\*
StyleBox[\"\[Element]\",
FontSize->16]\)\!\(\*
StyleBox[\" \",
FontSize->9]\){True, False} finds all contiguous substrings common to the \
strings x, y, ..., h. At that, the setting {True|False} for the last argument \
J is equivalent to the option IgnoreCase \[Dash]> {True|False} that treats \
lowercase and uppercase letters as equivalent or not at search of common \
substrings. Furthermore, the call IntersectStrings[x, J] returns the list of \
all contiguous substrings of symbols in a string x.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CorrectSubString", "::", "usage"}], "=", 
   "\"\<The procedure call CorrectSubString[x, n] returns the result of \
extracting from a string x of the first syntactically correct expression, \
beginning from the n-th position to the right. At absence of such expression \
or at n beyond the range of {1, StringLength[x]}, or at x== \\\"\\\" the \
procedure call returns $Failed.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReduceAdjacentStr", "::", "usage"}], "=", 
   "\"\<In a number of cases there is a need of reducing to the given number \
of the quantity of entries into a string of its adjacent substrings. This \
problem is solved successfully by the ReduceAdjacentStr procedure. The \
procedure call ReduceAdjacentStr[x, y, n] returns a string \[Dash] result of \
reducing to the quantity n >= 0 of occurrences into a string x of its \
adjacent substrings y. If a string x not contain substrings y, then the call \
returns the initial string x. Whereas the procedure call ReduceAdjacentStr[x, \
y, n, h], where h \[Dash] an arbitrary expression, returns the above result \
on condition that at search of substrings y in a string x the lowercase and \
uppercase letters are considered as equivalent.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReduceArgs", "::", "usage"}], "=", 
   "\"\<The procedure call ReduceArgs[x] returns nothing, providing removal \
of \\\"excess\\\" formal arguments of a block/function/module x in the \
current session, leaving only their first entries in the tuple of formal \
arguments. This procedure has a certain independent interest as the \
Mathematica system even at the time of a function call with \\\"excess\\\" \
formal arguments can't correctly identify this situation.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MultipleArgsQ", "::", "usage"}], "=", 
   "\"\<The function call MultipleArgsQ[x] returns True if at least one \
object composing the definition of a block/function/module x has multiple \
occurrences of formal arguments, and False otherwise.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtensionHeading", "::", "usage"}], "=", 
   "\"\<The procedure call ExtensionHeading[G, y1, y2, ...] provides \
expansion of the tuple of formal arguments of a function, module or block G \
by arguments {y1, y2, ...} to the right from the tuple, with returning Null, \
i.e. nothing, and activation in the current session of the updated definition \
of the object G. Expansion of the tuple of formal arguments is made for \
object of G only on variables from the list {y1, y2, ...} that aren't its \
formal arguments; otherwise any expansion isn't made. List {y1, y2, ...} for \
updating can be both symbols in string format, and names of arguments with \
tests ascribed to it for their admissibility.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SubsString1", "::", "usage"}], "=", 
   "\"\<The procedure SubsString1 is an extension of the above procedure \
SubsString. The call SubsString1[s, {a, b, c, d, ...}, pf, t] returns the \
list of substrings of a string s parted by the substrings {a, b, c, d, ...}; \
in addition, if a testing pure function acts as argument pf, the returned \
list will contain only the substrings satisfying such function. Moreover, at \
t = 1 the returned substrings are bounded by extreme substrings of the list \
y, i.e. y[[1]] and y[[\[Dash]1]] accordingly, whereas at t = 0 the substrings \
are returned without the bounding extreme substrings y[[1]] and y[[\[Dash]1]] \
accordingly. At last, in the presence of the fifth optional argument r \
\[Dash] an arbitrary expression \[Dash] search of substrings in string s is \
made from right to left, what in a number of cases simplifies algorithms of \
search of the required substrings. At absence in the string s of at least one \
of substrings {a, b, c, d, ...} the SubsString1 call returns the empty list, \
i.e. {}.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StringToList", "::", "usage"}], "=", 
   "\"\<The procedure call StringToList[x] returns the list of syntactically \
correct substrings of a string x that are parted by the comma. The given \
procedure is useful enough at programming of problems, connected in \
particular with processing of headings and local variables.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SubStrToSymb", "::", "usage"}], "=", 
   "\"\<The procedure call SubStrToSymb[x, n, y, p] returns a substring of a \
string x bounded on the left (p = 1) by a position n and the first occurrence \
of a symbol y, and on the right (p = 0) by a position n and the first \
occurrence of a symbol y, i.e., at p = 0 and p = 1 the search of the symbol y \
is done right to left and left to right accordingly. Moreover, in a case of \
absence at search of a required symbol y the procedure call SubStrToSymb[x, \
n, y, p] returns $Failed, while in other especial cases the procedure call is \
returned unevaluated.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StrAllSymbNumQ", "::", "usage"}], "=", 
   "\"\<The function call StrAllSymbNumQ[x] returns True if a string x \
contains only symbols and/or integers, and False otherwise.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ListStringQ", "::", "usage"}], "=", 
   "\"\<The call ListStringQ[x] returns True if x is a list of strings; \
otherwise, False is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PosListTest", "::", "usage"}], "=", 
   "\"\<The call PosListTest[L, p] returns the list of positions of a list L \
which satisfy a test determined by a pure function p.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FirstPositionsList", "::", "usage"}], "=", 
   "\"\<The function call FirstPositionsList[x] returns the list of positions \
of only first occurrences of elements in a list x, i.e. ignoring their \
multiplicities.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SortRevStr", "::", "usage"}], "=", 
   "\"\<The call SortRevStr[x, y] returns the result of reversion of a string \
x, if y = Reverse, or result of symbol\[Dash]by\[Dash]symbol sorting of a \
string x in an increasing order, if y = Sort; whereas the call SortRevStr[x, \
y, z] with the third optional argument z = SymbolGreater returns the result \
of symbol\[Dash]by\[Dash]symbol sorting of a string x in a decreasing \
order.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UnDef", "::", "usage"}], "=", 
   "\"\<The call UnDef[x] returns True if a symbol x is not determined, and \
False otherwise. Whereas the call UnDef[x, y] returns through the second \
optional argument y the value Head1[x].\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RemovedQ", "::", "usage"}], "=", 
   "\"\<The function call Remove[x1, ...] removes x1 symbols completely, so \
that their names are no longer recognized in the current session. Whereas the \
function call RemovedQ[x] returns True, if a x symbol has been removed from \
the current session, and False otherwise.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrefCond", "::", "usage"}], "=", 
   "\"\<The call PrefCond[x, y] returns the result of extraction from a \
string x of a prefix limited by the beginning of x and by the first \
occurrence in it of a substring y; otherwise, the call returns the empty \
string, i.e. \\\"\\\".\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Ind", "::", "usage"}], "=", 
   "\"\<The call Ind[x] returns a list of form {Symbol, {Expression}} if x \
has format Symbol[Expression], and a simplified expression x otherwise. A \
sequence can be as an Expression.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LangHoldFuncQ", "::", "usage"}], "=", 
   "\"\<The call LangHoldFuncQ[x] returns True if x \[Dash] a basic function \
of Math\[Dash]language, and False otherwise. At that, under basic function is \
understood a system function with one of the attributes ascribed to it, \
namely: HoldFirst, HoldAll or HoldRest.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear1", "::", "usage"}], "=", 
   "\"\<The procedure Clear1 can be considered as an useful generalization of \
standard functions Clear and ClearAll. The call Clear1[h, \\\"x1\\\", \
\\\"x2\\\", \\\"x3\\\", ..., \\\"xn\\\"] returns Null, i.e. nothing, for h=1, \
clearing symbols {x1, x2, x3, ..., xn} from the expressions assigned to them \
with preservation of all their attributes, whereas for h=2, clearing symbols \
{x1, x2, x3, ..., xn} from the expressions assigned to them and from all \
their attributes.\>\""}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearCS", "::", "usage"}], "=", 
   "\"\<The procedure ClearCS can be considered as an useful generalization \
of standard functions Clear, ClearAll and Remove. The call ClearCS[ClearAll] \
returns Null, i.e. nothing, clearing all values, definitions, attributes, \
messages and defaults associated with symbols that received values in the \
current session. Whereas the call ClearCS[Remove] returns Null, i.e. nothing, \
removing symbols that been received values in the current session completely, \
so that their names are no longer recognized by Mathematica.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DuplicateLocalsQ", "::", "usage"}], "=", 
   "\"\<The call DuplicateLocalsQ[P] returns the True in the presence in \
definition of a procedure P of duplication of local variables, otherwise the \
False is returned. In addition, at return of True through the second optional \
argument the list, simple or of ListList-type, whose elements define names of \
duplicated local variables with their multiplicities of occurrences in the \
list of local variables is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DuplicateLocals", "::", "usage"}], "=", 
   "\"\<The procedure call DuplicateLocals[x] returns the simple or the \
nested list the first element of a list or sublists of which defines a name \
in string format of a multiple local variable of a block/module x whereas the \
second defines its multiplicity. In the absence of multiple local variables \
the empty list, i.e. {} is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DelDuplLocals", "::", "usage"}], "=", 
   "\"\<The procedure call DelDuplLocals[x] returns the name of a \
module/block x, reducing its local variables of the same name to 1 with \
activation of the updated definition x in the current session. Whereas the \
call DelDuplLocals[x, y] with the second optional argument y \[Dash] an \
undefinite variable \[Dash] through y returns the list of excess local \
variables. At that, first of all only simple local variables (without initial \
values) are reduced. This procedure well supplements the previous \
DuplicateLocals procedure. Procedure provides processing of the objects \
having single definitions, however it is easily generalized to the objects of \
the same name.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DelDuplLocalsM", "::", "usage"}], "=", 
   "\"\<Unlike the DelDuplLocals procedure the DelDuplLocalsM procedure \
supports the operating with the blocks and modules of the same name. The \
procedure call DelDuplLocalsM[x, y] is completely analogous to a procedure \
call DelDuplLocals[x, y], including admissible tuples of the actual \
arguments.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReplaceLocals", "::", "usage"}], "=", 
   "\"\<The ReplaceLocals procedure provides dynamic replacement of local \
variables of a block/module for a period of the current session. The \
procedure call ReplaceLocals[x, y] returns Null, i.e. nothing, providing \
replacement of local variables of a block/module x by new local variables of \
the same name, including their initial values which are defined by the second \
argument of y \[Dash] a separate string of the format \\\"name\\\" or \
\\\"name=initial value\\\", or their list. Only those local variables of the \
object x are subjected to replacement whose names are in y.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"OptimalLocals", "::", "usage"}], "=", 
   "\"\<The procedure call OptimalLocals[x] returns name of a module/block x, \
providing optimization in the current session of its local variables in the \
context of eliminating duplication and redundancy of variables. In case of a \
x object of the same name the message \\\"Object <x> has multiple definitions\
\\\" is returned.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"OptimalLocalsM", "::", "usage"}], "=", 
   "\"\<The procedure OptimalLocalsM is an extension of the above \
OptimalLocals procedure onto case of objects (blocks, functions, modules) of \
the same name. The procedure call OptimalLocalsM[x] returns definition of an \
object x, providing an optimization in the current session of its local \
variables in the context of eliminating duplication and redundancy of \
variables. At that, the OptimalLocalsM procedure succesfully processes single \
objects too.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"OptimalLocalsN", "::", "usage"}], "=", 
   "\"\<The procedure OptimalLocalsN is an extension of the above \
OptimalLocals procedure onto case of the nested objects (blocks and modules). \
The procedure call OptimalLocalsN[x] returns definition of a block or module \
x, providing optimization in the current session of its local variables and \
of local variables of all subobjects (blocks and modules) composing it in the \
context of eliminating duplication and redundancy of local variables. At \
that, the OptimalLocalsN procedure succesfully processes simple blocks or \
modules (i.e. objects that are non\[Dash]nested) too.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ProcUniToMod", "::", "usage"}], "=", 
   "\"\<The procedure call ProcUniToMod[x] returns the definition of a block \
or module x which can be the object of the same name, with replacement of all \
blocks by modules along with optimization of local variables of all \
subobjects composing the object x.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReplaceSubProcs", "::", "usage"}], "=", 
   "\"\<The ReplaceSubProcs procedure is intended for replacement in an \
arbitrary procedure of subprocedures of the type {Block, Module}. The \
procedure call ReplaceSubProcs[x, y] returns the result of replacement in a \
procedure x of type {Block, Module} of subprocedures that is defined by the \
2nd argument y that has the format {a1, b1} or {{a1, b1}, ..., {ap, bp}}, \
defining replacements of the aj subprocedures of the procedure x onto the bj \
procedures of the type {Block, Module}, the bj definitions should be \
previously evaluated in the current Mathematica session; if bj = \\\"\\\" \
(empty string) then the appropriate subprocedure aj is deleted (j = 1..n). At \
that, optimization of local variables of the main x procedure and all its \
subprocedures is carried out. The following fragment represents source code \
of the procedure with examples of its usage.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IsMonotonic", "::", "usage"}], "=", 
   "\"\<The call IsMonotonic[x] returns the value True if x is monotonic, and \
the value False otherwise. A string x is monotonic if the sequence of \
characters it comprises is non-increasing or non-decreasing, when the \
characters are identified with their ASCII code points. The call \
IsMonotonic[x, t] in case of basic result True through 2-nd undefinite symbol \
t the order of the succession of symbols in string x {\\\"Increase\\\", \
\\\"Decrease\\\"} is returned. Whereas in other cases the procedure call is \
returned unevaluated. If x is the empty string, the call returns the value \
True.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IsPackageQ", "::", "usage"}], "=", 
   "\"\<The IsPackageQ procedure is intended for testing of any mx\[Dash]file \
regarding existence of the user's package in it along with upload of such \
package into the current session. The call of the IsPackageQ[x] procedure \
returns $Failed if the mx\[Dash]file doesn't contain a package, True if the \
package which is in the mx\[Dash]file x is loaded into the current session, \
and False otherwise. Moreover, the procedure call IsPackageQ[x, y] through \
the second optional argument y \[Dash] an undefinite variable \[Dash] returns \
the context associated with the package uploaded into the current session. In \
addition, is supposed that a datafile x is recognized by the testing function \
FileExistsQ, otherwise the procedure call is returned unevaluated.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Uprocs", "::", "usage"}], "=", 
   "\"\<The call Uprocs[] returns the nested list of procedures activated in \
the current session; in addition, each procedure is identified by 3-element \
list whose the first element the procedure name, the second element \[Dash] \
its heading, and the third element \[Dash] the type of procedure (Block, \
Module). In the absence of such procedures the empty list is returned.\>\""}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ActCsProcFunc", "::", "usage"}], "=", 
   "\"\<The call ActCsProcFunc[] returns the nested 2-element list whose \
elements are two sublists of variable length. The first sublist contains \
\\\"Procedure\\\" as the first element, hereas other elements define \
2-element lists containing names of procedures activated in the current \
session along with their headings. While the second sublist contains \
\\\"Function\\\" as the first element whereas other elements define the \
2-element lists containing names of functions activated in the current \
session along with their headings.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ActBFM", "::", "usage"}], "=", 
   "\"\<The call ActBFM[] of the rather simple function returns the sorted \
list of names in string format of the user blocks, functions and modules, \
whose definitions have been evaluated in the current Mathematica \
session.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BlockToModule", "::", "usage"}], "=", 
   "\"\<The call of procedure BlockToModule[x] returns Null, i.e. nothing, \
providing converting of a procedure of Block-type into the corresponding \
procedure of Module-type with saving of all attributes and options of the \
source procedure. Moreover, with an object x several definitions of modules, \
blocks and/or functions can be associated also, however the call \
BlockToModule[x] provides converting into module structures only the block \
components of the object x.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BlockFuncModQ", "::", "usage"}], "=", 
   "\"\<The call BlockFuncModQ[x] returns True, if x \[Dash] a symbol \
defining a block, a traditional function (with heading) or a module; \
otherwise, False is returned. Moreover, through the optional argument y \
\[Dash] an indefinite variable the call BlockFuncModQ[x,y returns the type of \
the object x in the context of {\\\"Block\\\", \\\"Function\\\", \\\"Module\\\
\"} on condition that main result is True.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BlockModQ", "::", "usage"}], "=", 
   "\"\<The call BlockModQ[x] returns True, if x \[Dash] a symbol defining a \
block or a module; otherwise, False is returned. Moreover, through the \
optional argument y \[Dash] an indefinite variable the call BlockModQ[x,y \
returns the type of the object x in the context of {\\\"Block\\\", \\\"Module\
\\\"} on condition that main result is True.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"QBlockMod", "::", "usage"}], "=", 
   "\"\<The call QBlockMod[x] returns True, if x \[Dash] a symbol defining a \
block or a module, including objects of the same name; otherwise, False is \
returned.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SingleDefQ", "::", "usage"}], "=", 
   "\"\<The call SingleDefQ[x] returns True if the actual argument x defines \
a name of a procedure, a block or a function having single definition; in \
other cases the function call returns False.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StructProcFunc", "::", "usage"}], "=", 
   "\"\<The call StructProcFunc[x] returns the simple or nested list, whose \
elements depending on the type {\\\"Block\\\", \\\"Module\\\", \\\"Function\\\
\"} of the actual argument x possess the format {Type, Heading, Locals, Body} \
for {\\\"Block\\\", \\\"Module\\\"} and {Type, Heading, Body} for \
Function\\\"; in addition, under the function is understood such object x \
that QFunction[x] = True. Procedure reveals the general structural \
organization of objects of the above type.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StrNestedMod", "::", "usage"}], "=", 
   "\"\<In some cases there is a problem of the structural analysis of the \
nested procedures of Module\[Dash]type. The procedure call StrNestedMod[x] \
returns the nested list of names in string format of subprocedures of a \
procedure x; at that, each name is located at an appropriate level of \
nesting. Whereas the procedure call StrNestedMod[x, y] with the second \
optional argument y \[Dash] an undefinite variable \[Dash] through y returns \
the list of names of all subprocedures of the procedure x, in which the first \
element \[Dash] a name x of the main procedure. If a procedure x doesn't \
contain subprocedures, the procedure call StrNestedMod[x, y] returns {\\\"x\\\
\"} whereas the second argument y retains own value.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BFMSubsQ", "::", "usage"}], "=", 
   "\"\<The call BFMSubsQ[x] returns the list of format {True, Heading}, if \
the definition of a symbol x, defining a block or a module, including objects \
of the same name; otherwise, {False, Heading} is returned. In case of an \
object x of the above type of the same name, the call returns the nested list \
whose sublists have the above format. On an object x of type, different from \
{Block, Module}, the call returns False. In addition, the call BFMSubsQ[x, y] \
with the 2nd optional argument y \[Dash] an indefinite variable \[Dash] \
through y returns the list of format {Heading, N}, where N defines number of \
blocks, functions, and modules entering into a subobject with the heading \
Heading of the object of the same name x.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ProcLocals", "::", "usage"}], "=", 
   "\"\<The call ProcLocals[x] with one argument returns the list of local \
variables of a procedure x in string-format, whereas the call ProcLocals[x, \
y] in addition through an undefined variable y returns number of the position \
in string-representation of definition of a procedure x with which its body \
begins.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ProcBody", "::", "usage"}], "=", 
   "\"\<The call ProcBody[x] returns strictly speaking the body of a block, a \
function with heading or a module x in string-format. The procedure \
successfully processes also the objects of the same name x, returning the \
list of bodies of subobjects composing the object x.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PatternQ", "::", "usage"}], "=", 
   "\"\<The call PatternQ[x] returns True if x is a pattern, and False \
otherwise.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StringStringQ", "::", "usage"}], "=", 
   "\"\<The call StringStringQ[x] returns True if x is a string of type \
StringString, and False otherwise.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CurrentNb", "::", "usage"}], "=", 
   "\"\<The function call CurrentNb[] returns the name of the current  \
document of the format {\\\"cdf\\\", \\\"nb\\\"}.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StringJoin1", "::", "usage"}], "=", 
   "\"\<The StringJoin1 procedure is a modification of the standard function \
StringJoin. The call StringJoin1[x] returns the result of consecutive \
concatenation of elements-strings parted by the comma of a list x.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StringLevels", "::", "usage"}], "=", 
   "\"\<The call StringLevels[x] returns the level of nesting of a string x \
of StringString-type; in addition, the null level is defined for the usual \
strings.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StringDependAllQ", "::", "usage"}], "=", 
   "\"\<The call StringDependAllQ[s, p] returns True only if a string p is \
the substring of a string s, or every string from a list p is contained in \
the string s.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StringPat", "::", "usage"}], "=", 
   "\"\<The procedure call StringPat[x, y] returns the string expression \
formed by strings of a list x and objects {\\\"_\\\", \\\"__\\\", \
\\\"___\\\"}; the call returns x if x \[Dash] a string.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StringCases1", "::", "usage"}], "=", 
   "\"\<The procedure call StringCases1[x, y, z] returns the list of the \
substrings in a string x that match a string expression, created by the call \
StringPat[x, y].\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StringCases2", "::", "usage"}], "=", 
   "\"\<The procedure call StringCases2[x, y] returns a list of the disjoint \
substrings in a string x that match the string expression of the format \
Shortest[j1~~__~~j2 ~~__~~ ... ~~__~~jk], where y = {j1, j2, ..., jk} and y \
is different from {}.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StringFreeQ1", "::", "usage"}], "=", 
   "\"\<The function call StringFreeQ1[x, y, z] returns True if no substring \
in a string x matches a string expression, created by the call StringPat[x, \
y], and False otherwise.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StringFreeQ2", "::", "usage"}], "=", 
   "\"\<The function call StringFreeQ2[x, {a1, a2, a3, ...}] returns True if \
all substrings {a1, a2, a3, ...} are absent in a string x, and False \
otherwise.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SelectStrings", "::", "usage"}], "=", 
   "\"\<The procedure call SelectStrings[x, y, J] in mode IgnoreCase \[Dash]> \
J\!\(\*
StyleBox[\" \",
FontSize->9]\)\!\(\*
StyleBox[\"\[Element]\",
FontSize->14]\)\!\(\*
StyleBox[\" \",
FontSize->9]\){True, False} finds all elements of a list x consisting from \
strings that are free from all substrings from a list y. At that, the setting \
{True|False} for the optional argument J is equivalent to the option \
IgnoreCase \[Dash]> {True|False} that treats lowercase and uppercase letters \
as equivalent or not at search of the demanded elements of x. If argument had \
been omitted, it should be replaced by True.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SelectContains", "::", "usage"}], "=", 
   "\"\<The SelectContains procedure is a certain extension of standard \
functions Select, Cases and StringCases in the case of a list of strings. The \
procedure call SelectContains[x, y, r, Ig] according to the value False or \
True of the r argument returns the list of elements-strings of a list x that \
contain elements-strings from a list y or don't contain occurrences from the \
list y respectively. At that, the setting {True (the default in the case of \
the omitted argument)|False} for the optional argument Ig is equivalent to \
the option IgnoreCase \[Dash]> {True|False} that considers lowercase and \
uppercase letters as equivalent or not at search of substrings.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StringFreeQ3", "::", "usage"}], "=", 
   "\"\<The StringFreeQ3 function extends the StringFreeQ function onto a \
case of the first argument different from a string. The function call \
StringFreeQ3[x, y] returns True if an expression x doesn't contain \
occurrences of a string y, and False otherwise.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Ver", "::", "usage"}], "=", 
   "\"\<The call Ver[] returns the string with type refinement of an \
operational platform.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"$Version1", "::", "usage"}], " ", "=", " ", 
   "\"\<The $Version1 variable returns the number of the Mathematica version \
for Microsoft Windows.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"$Version2", "::", "usage"}], " ", "=", " ", 
   "\"\<The $Version2 variable is an analog of the $Version1 variable and \
returns the number of the Mathematica version for Microsoft Windows.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PCOS", "::", "usage"}], "=", " ", 
   "\"\<Values of the global variables $System, $SystemID and \
$OperatingSystem define the strings describing the current operational \
platform. Meanwhile, in a number of cases the specification of the current \
operational platform represented by them can be insufficient, in that case it \
is possible to use the PCOS procedure, whose call PCOS[] returns the \
2\[Dash]element list, whose first element determines the name of the computer \
owner, whereas the second element \[Dash] the type of an operating \
platform.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"OSplatform", "::", "usage"}], "=", 
   "\"\<The procedure call OSplatform[] in string format returns the \
2\[Dash]element list, whose the first element \[Dash] the type of the current \
operating system, and the second element \[Dash] main characteristics of this \
system.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Table1", "::", "usage"}], "=", 
   "\"\<For simulation of the main operations with structures of the table \
organization, similar to the Maple system, in the environment of Mathematica \
the procedure Table1[L, x] can be used which considers a list L of the \
ListList\[Dash]type, whose 2\[Dash]element sublists {x, y} which correspond \
to {index, entry} of Maple\[Dash]table respectively, as the table. As the \
second x\[Dash]argument may be: (1) a list {a, b}, (2) a word {\\\"index\\\"|\
\\\"entry\\\"} or (3) an expression of other type. Result of the call \
Table1[L, x] is the list of ListList\[Dash]type which is derivable from the \
initial list L as follows. Case (1): in the presence in the L of a sublist \
with the first element a it is replaced by a list {a, b}, otherwise it \
supplements L; if the argument x has view {a, Null}, then in the L the \
sublist with the first element a is removed. Case (2): the list of \
{indices|entries} of the list L is returned; whereas in case (3) the \
procedure call returns entry for a X\[Dash]index if such in the given table L \
really exists. On other tuples of the actual arguments the call Table1[x, y] \
returns $Failed.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TabLib", "::", "usage"}], "=", 
   "\"\<On the basis of the table organization supported by the Table1 \
procedure, enough simply the user libraries of procedures and functions can \
be defined. On this basis as one of such approaches we will give the LibBase \
library example whose structural organization has the format of the ListList \
list and whose elements have length 2. Such library has the following basic \
view:\n\nLibBase := {{Help, {\\\"O1::usage = \\\"Help on O1. \\\", ..., \
\\\"On::usage = \\\"Help on On. \\\"}}, {O1, PureDefinition[O1]}, {O2, \
PureDefinition[O2]},..., {On, PureDefinition[On]}}\n\nThe first \
2\[Dash]element sublist of LibBase library by the first element contains Help \
while the second element represents the list of usages in string\[Dash]format \
on all objects, whose definitions are in LibBase library; in addition, their \
actual presence at the library isn't required. The rest elements of the \
library are 2\[Dash]element sublists of the format {Oj, PureDefinition[Oj]}, \
where Oj \[Dash] the name of j\[Dash]object, and PureDefinition[Oj] \[Dash] \
its definition in string\[Dash]format. The main operations with the library \
organized thus are provided by the TabLib procedure. TabLib call[x, y] \
depending on the second argument y returns or the current contents of the \
library being in a mx\[Dash]file x, or the names of the objects being in the \
library, or their definitions, namely:\n\nTabLib[x, \\\"index\\\"] \[Dash] \
returns the list of names of the objects whose definitions are in the library \
x, including the name Help of the HelpBase of the library;\nTabLib[x, \
\\\"entry\\\"] \[Dash] returns the list of definitions of objects which are \
contained in the library x, including the Help base of the library;\n\
TabLib[x, {N, Df}] \[Dash] returns the contents  of library x after its \
extension onto a new definition of an object with name N if Df is different \
from Null; in addition, the old definition of N\[Dash]object is updated;\n\
TabLib[x, {N, Null}] \[Dash] returns the contents of the library x as a \
result of removal from it of definition of object with a name N; in addition, \
the help (usage) for N remains;\nTabLib[x, N, y, z, ...] \[Dash] returns the \
result of the call N[y, z, ...] of a procedure/function from the library x; \
if the object N is absent in the library, $Failed is returned;\nTabLib[x, N] \
\[Dash] if N \[Dash] the help (usage) concerning an object N, it supplements \
the help base of the library x with return of the updated contents of the \
library x.\n\nIn other cases the call is returned unevaluated or returns \
$Failed. More detailed information concerning the TabLib procedure can be \
found in our latest book [6].\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UsageBase", "::", "usage"}], "=", 
   "\"\<On the basis of the list organization supported by the Mathematica \
system, enough simply is possible to define a help base for the user \
libraries. On this basis as one of such approaches we will give an example of \
the help BaseHelp base, whose structural organization has the list format \
with elements of the following view. Below, the basic type of such help base \
is presented, namely:\n\nBaseHelp := {{\\\"O1::usage = \\\"Help on O1.\\\", \
..., \\\"On::usage = \\\"Help on On.\\\"}\n\nThus, the help base represents \
the list of references (usage) in string\[Dash]format concerning all \
Oj\[Dash]objects, whose definitions are in the user library; moreover, as the \
initial help BaseHelp base intended for its filling by the necessary \
contents, the empty list can be defined, namely:\n\nBaseHelp := {}\n\nBase \
operations with the database of usages, organized thus, the UsageBase \
procedure provides. The call UsageBase[x, y] depending on the second argument \
y returns the current contents of the help base being in a mx\[Dash]file x, \
or deletes its usages, either updates or activates them in the current \
session, namely:\n\nUsageBase[x, \\\"?\\\"] \[Dash] returns the contents of \
the BaseHelp database in the list format which is in a mx\[Dash]file x;\n\n\
UsageBase[x] \[Dash] returns Null, i.e. nothing, activating in the current \
session the help database which has been set by the mx\[Dash]file x;\n\n\
UsageBase[x, y] \[Dash] returns Null, i.e. nothing, deleting from the help \
database (which has been set by the mx\[Dash]file x) the usage concerning an \
object with the name y if such exists;\n\nUsageBase[x, y] \[Dash] returns \
Null, i.e. nothing, supplementing the help database which has been set by the \
mx\[Dash]file x, by the usage y of the above\[Dash]mentioned format, or \
replaces in the help database the usage by an usage y if names of \
Oj\[Dash]objects in both usages coincide.\n\nMore detailed information \
concerning the UsageBase procedure can be found in our latest book \
[6].\>\""}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Usages", "::", "usage"}], "=", 
   "\"\<The Usages procedure provides maintaining of help database \
irrespective of library, what is rather convenient in a series of cases of \
the organization of the user software. For initial filling of a help database \
in the current session all usages known at present concerning means which are \
planned for inclusion into the user library are evaluated. Then, by the call \
Usages[x, y] is provided the saving in a x\[Dash]datafile of \
ASCII\[Dash]format of all usages relating to program means whose names are \
defined by a list y. In addition, the saving of usages in a x\[Dash]datafile \
is made in the append mode; if the specified datafile x is absent, the empty \
datafile x is created. While the call Usages[x, y, z, ...] when as arguments, \
since the second argument, the names {y, z, ...} of software are given, from \
help database the usages concerning these means are deleted. At last, the \
call Usages[x] activates all usages contained in help database x in the \
current session, making them available irrespectively from existence of a \
library of the means described by these usages. Moreover, the successful call \
of the Usages procedure returns the Null, i.e. nothing, otherwise $Failed is \
returned, in particular, in case of the call Usages[x] at the absent or empty \
datafile x.\>\""}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Usages1", "::", "usage"}], "=", 
   "\"\<The call of the simple function Usages1[x] provides the output of all \
usages describing the means contained in the user package activated in the \
current session and associated with a context x.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UsagesMNb", "::", "usage"}], "=", 
   "\"\<The call UsagesMNb[x] returns the list of references concerning \
software of the user package being in a datafile x of the format {\\\"m\\\", \
\\\"nb\\\"}. These references is returned in string\[Dash]format. In \
addition, for a datafile x of the m\[Dash]format the list of the references \
containing a prefix \\\"Name:: usage =\\\" is returned, whereas for a \
datafile x of the nb\[Dash]format the list of references in \
string\[Dash]format without such prefixes is returned. If for a package from \
a datafile x of the m\[Dash]format its activation in the current session \
isn't required, then for a package from a datafile x of nb\[Dash]format x \
such activation is required.\nNB: The UsageMNb procedure correctly operates \
only on files of {m, nb}-type that have been created in Mathematica of \
versions 10.3.0.0 and below because of change of internal formats of these \
files, beginning with Mathematica of version 10.4.0.0.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CallSave", "::", "usage"}], "=", 
   "\"\<The procedure call CallSave[x, y, z] returns the result of the call \
y[z] of a procedure/function y on a list z of factual arguments passed the y \
provided that object definition y with usage are located in a txt\[Dash]file \
x that has been earlier created by the Save function. If an object with the \
given name y is absent in a datafile x, the procedure call returns $Failed. \
If a datafile x contains definitions of several procedures or functions of \
the same name y, the procedure call is executed relative to their definition \
whose formal arguments correspond to a list z of actual arguments.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"QSaveGUI", "::", "usage"}], "=", 
   "\"\<The function call QSaveGUI[x] returns True if a m\[Dash]file x has \
the format corresponding to the format of a file created by means of commands \
chain of the GUI \\\"File -> Save As -> Mathematica Package (*.m)\\\", and \
False otherwise.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PackageUsages", "::", "usage"}], "=", 
   "\"\<The question of documenting of the user package is an important \
enough its component; at that, absence in a package of usage for an object \
contained in it does such object as inaccessible at uploading the package \
into the current session. So, description of each object of the user package \
has to be supplied with the corresponding usage. At the same time it must be \
kept in mind that mechanism of documenting of the user libraries in the Maple \
system is much more developed, than similar mechanism of documenting of the \
user package in the Mathematica system. Thus, if the mechanism of formation \
of the user libraries in the Maple is simple enough, providing simple \
documenting of library means and providing access both to means of library, \
and to their references at the level of the system means, in the Mathematica \
system the similar mechanism is absent. Receiving of the usage concerning a x \
package tool is possible only by means of calls ?x or Information[x] provided \
that a package has been uploaded into the current session. Meanwhile, in case \
the package contains enough many means, for obtaining the usages concerning \
the demanded means it is necessary to be sure in their existence, first of \
all. The next PackageUsages procedure can be rather useful to these purposes. \
The procedure call PackageUsages[x] returns the path to a datafile in which \
the extension \\\".m\\\" of a datafile x is replaced on \\\"_Usages.txt\\\"; \
the received datafile contains usages of the user package formed standardly \
in the form of a nb\[Dash]document (see above) with the subsequent its saving \
in a m\[Dash]file x by means of chain of the commands \\\"File \[Dash] >Save \
As\\\" of the GUI. The information on the specific package tool y has the \
format y = \\\"Help on y\\\". The received txt\[Dash]file allows to look \
through easily its contents regarding search of necessary means of the user \
package.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExcessVarsPack", "::", "usage"}], "=", 
   "\"\<When uploading the package along with the main exports can be \
generated so\[Dash]called excess symbols whose analysis represents a quite \
certain interest. The procedure call ExcessVarsPack[x] returns the nested \
four\[Dash]element list of the names of the excess symbols that are generated \
by the uploading of the package with a context x into the current session. \
The procedure call with a context x which is absent in the list determined by \
the $Packages variable is returned unevaluated. The elements of the above \
nested list are determined as follows: (1) the list of names of the excess \
temporary definite symbols with context x of the package, (2) the list of \
names of the excess temporary undefinite symbols with context x of the \
package, (3) the list of names of the excess definite symbols with context x \
of the package, (4) the list of names of the excess undefinite symbols with \
context x of the package, finally (5) the list of other excess symbols of the \
package with context x.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RedMfile", "::", "usage"}], "=", 
   "\"\<It is supposed that a datafile x of m\[Dash]format structurally \
corresponds to the standard file with a package; an example of such datafile \
of m\[Dash]format is given in the first shaded area of the previous fragment. \
The procedure call RedMfile[x,n,y] returns the full path to a m\[Dash]file, \
whose FileBaseName has view FileBaseName[x] <> \\\"$\\\" which is a result of \
application to an initial m\[Dash]file of an operation y concerning its \
object determined by a name n, namely:\n\n\\\"delete\\\" \[Dash] from a x \
datafile the usage and definition of object with a n name are removed, the \
initial datafile doesn't change; if such object in the datafile is absent, \
the full path to the initial datafile is returned;\n\\\"add\\\" \[Dash] usage \
and definition of object with a n name are added into a x file whereas the \
initial datafile doesn't change; if such object in the file already exists, \
the full path to the initial datafile x is returned;\n\\\"replace\\\" \[Dash] \
usage and definition of object with a n name are replaced in a x file while \
the initial datafile doesn't change; if such object in a file is absent, \
$Failed is returned.\n\nIf an initial datafile x has structure, different \
from specified, the procedure call returns $Failed; at that, successful \
performance of the operations \\\"add\\\" and \\\"replace\\\" requires \
preliminary evaluation in the current session of the construction n::usage \
along with definition for object n.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RedMxFile", "::", "usage"}], "=", 
   "\"\<The RedMxFile procedure provides automation of a modification of \
datafiles of mx\[Dash]format which is considered above. The call RedMxFile[x, \
y, r, f] returns the full path to a mx\[Dash]datafile, whose FileBaseName has \
view FileBaseName[x] <> \\\"$\\\" that is a result of application to an \
initial mx\[Dash]file of an operation r concerning its object determined by a \
name y, namely:\n\n\\\"delete\\\" \[Dash] from a x datafile the usage and \
definition of object with a y name are removed, the initial datafile doesn't \
change; if such object in the datafile is absent, the procedure call returns \
$Failed;\n\\\"add\\\" \[Dash] usage and definition of object with a y name \
are added into a x file whereas the initial datafile doesn't change; if such \
object in the file already exists, the procedure call returns $Failed; the \
fourth argument f defines mx\[Dash]file containing the usage and definition \
of the supplemented object y;\n\\\"replace\\\" \[Dash] usage and definition \
of object with a y name are replaced in a x file while the initial datafile \
doesn't change; if such object in a file is absent, the procedure call \
returns $Failed; the fourth argument f defines a mx\[Dash]file containing a \
package with context of the initial mx\[Dash]file x along with usage and \
definition of the added y object. At that, if an object y is undefined the \
procedure call returns $Failed.\n\nThus, return of the path to an updated \
datafile \\\"x$.mx\\\" serves as an indicator of success of the RedMxFile \
procedure call. At that, successful performance of the operations \\\"add\\\" \
and \\\"replace\\\" requires preliminary evaluation in the current session of \
the expressions of the following formats, namely:\n\n\
Cont`Name[\[Ellipsis].]:= Definition of an object Name\nCont`Name::usage = \\\
\"Help on the object Name.\\\"\n\nwhere Name \[Dash] the name of an object \
and \\\"Cont`\\\" is the context ascribed to the updated initial \
mx\[Dash]file x, with the subsequent saving of the forenamed evaluated object \
Cont`Name in a mx\[Dash]file f. The unsuccessful procedure call returns \
$Failed or is returned unevaluated.\>\""}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ContextForPackage", "::", "usage"}], "=", 
   "\"\<The procedure call ContextForPackage[x, y] returns two\[Dash]element \
list whose first element determines a new context y, assigned to the user \
package from mx\[Dash]file x, while the second element defines path to the \
file which contains the updated file x. The updated file is saved in the same \
directory as the datafile x, but with the name FileBaseName[x] <> \
\\\"$.mx\\\". At the same time, irrespective of whether the initial file x \
has been loaded into the current session, as a result of the procedure call \
the file is removed from the current session, remaining in external memory \
without change. At the same time, if the initial package from x file has been \
already uploaded up the procedure call, then the package with the updated y \
context remains in the current session, otherwise it is removed from the \
current session.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AddMxFile", "::", "usage"}], "=", 
   "\"\<The AddMxFile procedure illustrates the use of the ContextForPackage \
procedure for merging of mx\[Dash]files with the user packages with saving of \
the result in a mx\[Dash]file with an ascribed context y. It is supposed that \
the merged mx\[Dash]files haven't been loaded in the current session and have \
been supplied with appropriate contexts. The procedure call AddMxFile[x, y] \
returns the 2\[Dash]element list whose the first element defines context y, \
whereas the second element determines mx\[Dash]file with the result of \
merging of mx\[Dash]files which are defined by the list x. At last, the call \
AddMxFile[x, y, z] with the third optional argument z \[Dash] an arbitrary \
expression \[Dash] additionally allows to save in the current session the \
means with the y context, otherwise the package with y context is unloaded \
from the current session. Meantime, the AddMxFile procedure has quite \
concrete appendices in practical programming.\>\""}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MathPackages", "::", "usage"}], "=", 
   "\"\<The call MathPackages[] returns the sorted list of names of packages \
of the current version of Mathematica system. Whereas the call \
MathPackages[w] with optional argument w \[Dash] an indefinite variable \
\[Dash] additionally provides return through it the 3\[Dash]element list \
whose first element defines the current version of the Mathematica system, \
the second element defines the type of the license, and the third element \
defines a deadline of action of the license.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SystemPackages", "::", "usage"}], "=", 
   "\"\<The SystemPackages procedure is used for testing of the system \
packages (m\[Dash]files) being in the catalog, defined by the variable \
$InstallationDirectory. The call SystemPackages[] returns the list whose 2\
\[Dash]element sublists have the format {Package, its context} while the call \
SystemPackages[w] through optional argument w \[Dash] an indefinite variable \
\[Dash] additionally returns the list of the system packages which aren't \
possessing contexts, i.e. are used for internal needs of the system.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ActUcontexts", "::", "usage"}], "=", 
   "\"\<The ActUcontexts procedure provides obtaining of the list of contexts \
of the current session which are associated with the user packages. The \
procedure call ActUcontexts[] for obtaining of the list uses an algorithm \
that is based on the analysis of system datafiles of formats {\\\"m\\\", \
\\\"tr\\\"}, while the call ActUcontexts[x] where optional argument x is \
arbitrary expression, is based on the search of system datafiles of the view \
\\\"StringTake[Context, {1, \[Dash]2}]<>{\\\"m\\\", \\\"tr\\\"}\\\". If the \
first algorithm is more universal, whereas the second significantly more high\
\[Dash]speed.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SysContexts", "::", "usage"}], "=", 
   "\"\<The procedure call SysContexts[] returns a list of all system \
contexts at the current moment.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MainContexts", "::", "usage"}], "=", 
   "\"\<The function call MainContexts[] returns a list of all main contexts \
at the current moment, supplementing the system Contexts function.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AllContexts", "::", "usage"}], "=", 
   "\"\<The procedure call AllContexts[] returns the list of contexts \
contained in system packages of the current Mathematica version, whereas the \
call AllContexts[x] returns True, if x \[Dash] a context of the above type, \
and False otherwise.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MultipleContexts", "::", "usage"}], "=", 
   "\"\<The mechanism of contexts of the Mathematica system allows existence \
in the current session of symbols of the same name with various contexts. The \
procedure call MultipleContexts[x] returns the list of contexts attributed to \
a symbol x.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContextsCS", "::", "usage"}], "=", 
   "\"\<The function call ContextsCS[] returns the list of contexts of the \
current Mathematica session.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SystemSymbols", "::", "usage"}], "=", 
   "\"\<The function call SystemSymbols[] returns all system symbols at the \
current moment.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContextsInModule", "::", "usage"}], "=", 
   "\"\<The procedure call ContextsInModule[x] returns the nested list of the \
following format, namely:\n\n{{\\\"Args\\\", ...}, {\\\"Locals\\\", ...}, {\\\
\"SubProcs\\\", ...}, {\\\"Context1'\\\", ...}, ..., {\\\"ContextN'\\\", \
...}}\n\nwhere the first sublist defines formal arguments of a module x, the \
second sublist defines its local variables, the third sublist defines names \
of subprocedures of the procedure x whereas  other sublists, starting with \
the fourth, define variables of the module x with the contexts corresponding \
to them. All elements of sublists of the returned list have string \
format.\>\""}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContentObj", "::", "usage"}], "=", 
   "\"\<The procedure call ContentObj[x] returns the list of the format \
{Contextj, j1, j2, ...}, where jk \[Dash] the user means, used by a \
block/function/module x, and Contextj \[Dash] a context corresponding to \
them. In the case of several contexts the nested list is returned whose \
sublists have the above\[Dash]mentioned format. The call returns all means of \
the user packages on which a x object depends. In the absence of such means \
the procedure call returns the empty list, i.e. {}.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StrToList", "::", "usage"}], "=", 
   "\"\<The StrToList procedure is intended for converting of strings of the \
structure \\\"{xxxxxxx... x}\\\" or \\\"xxxxxxx... x\\\" to the list of \
strings received from the strings of the mentioned format, parted by symbols \
of comma \\\",\\\" and/or \\\"=\\\". Examples from the above books quite \
visually illustrate the principle of performance of StrToList procedure along \
with format of results of converting of strings returned by it.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReplaceLevelList", "::", "usage"}], "=", 
   "\"\<In some problems of programming which use the list structures arises \
a quite urgent need of replacement of values of the lists which are located \
at the given nesting levels. Standard means of Mathematica system don't give \
such opportunity. In this regard the procedure has been created whose call \
ReplaceLevelList[x, n, y, z] returns result of replacement of an element y of \
a list x  that is located at a nesting level n onto a value z. Lists which \
have identical length also can act as arguments y, n and z. At violation of \
this condition the procedure call returns $Failed. In case of absence of the \
fourth optional argument z the call ReplaceLevelList[x, n, y] returns result \
of removal of elements y which are located on nesting level n of a list x. \
The procedure uses our procedures GenRules, LevelsOfList, ToString4 and \
IntegerListQ of the AVZ_Package package.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReplaceListCond", "::", "usage"}], "=", 
   "\"\<In addition to standard functions of so\[Dash]called \
Replace\[Dash]group a rather simple ReplaceListCond procedure provides \
conditional replacement of elements of a list. The call ReplaceListCond[x, f, \
y] returns result of replacement of the elements of a x list which meet a \
condition defined by the testing Boolean f function onto an expression y. At \
that, the lists can be used as f and y; more precisely, w objects for which \
FunctionQ[w] = True or SysFuncQ[w] = True are admitted as an argument \
f.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PositionsListCond", "::", "usage"}], "=", 
   "\"\<The procedure call PositionsListCond[x, f] returns list of positions \
of the elements of a x list which meet a condition determined by the testing \
Boolean f function or their list. At that, the list can be used as f; more \
precisely, w objects for which FunctionQ[w] = True or SysFuncQ[w] = True are \
admitted as an argument f.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LevelsList", "::", "usage"}], "=", 
   "\"\<The procedure call LevelsList[x] returns the nesting level of a list \
x. For example, LevelsList[{{{{{{a, b, c}, {{x, y, z}}, m, n}}}}}] = 5 and \
LevelsList[{{a, b, c}, {{x, y, z}}, m, n}] = 1. The procedure is useful \
enough at processing of the nested lists.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"EquExprPatt", "::", "usage"}], "=", 
   "\"\<The call EquExprPatt[x, p] returns True if an expression x \
corresponds to a pattern p, and False otherwise.\>\""}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EquExprPatt1", "::", "usage"}], "=", 
   "\"\<The call EquExprPatt1[x, y] returns True if an expression x \
structurally corresponds to an expression y, and False otherwise.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"OpSys", "::", "usage"}], "=", 
   "\"\<The procedure call OpSys[] returns the type of used operational \
platform. The procedure is useful in certain appendices above all of the \
system character.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Riffle1", "::", "usage"}], "=", 
   "\"\<The procedure call Riffle1[x] restructures a ListList\[Dash]list x \
into the ListList\[Dash]list as follows:\nRiffle1[{{a1, b1, c1, ...}, {a2, \
b2, c2, ...}, ...] \[RightArrow] {{a1, a2, a3, ...}, {b1, b2, b3, ...}, ...}.\
\>\""}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExprComp", "::", "usage"}], "=", 
   "\"\<The call ExprComp[x] returns the set of all subexpressions composing \
an expression x, whereas the call ExprComp[x, z], where the second optional \
argument z is an indefinite variable, through z is additionally returned the \
enclosed list of subexpressions of the expression x by the levels, since the \
first level.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Cost", "::", "usage"}], "=", 
   "\"\<An expression can be composed by using the arithmetic operators. Such \
expressions can be one of three types, namely: type `+`, type `*`, type `^` \
along with type `Indexed` and `Function`. That is, the expression a \[Dash] b \
is of type `+` with operands a and \[Dash]b. Similarly, a/b is of type `*` \
with operands a and b^(\[Dash]1). Finally, a^b is of type `^` with operands a \
and b. Cost is used to compute an operation count for the numerical \
evaluation of the given expressions. The operation count is expressed as a \
polynomial in the names Plus, Times, Power, Indexed and Function with non\
\[Dash]negative integer coefficients. The procedure of the same name provides \
calculation of this Cost indicator. The call Cost[x] returns the Cost \
indicator of the above format for an arbitrary algebraic expression x; in the \
absence for x operators the procedure call returns 0.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SubLists", "::", "usage"}], "=", 
   "\"\<The call SubLists[x] returns the list of all possible sublists of a \
nested list x, taking into account their nesting. If the list x is simple, \
the call SubLists[x] returns the empty list, i.e. {}.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ElemsList", "::", "usage"}], "=", 
   "\"\<The successful procedure call ElemsList[x, y] returns the elements of \
a list x depending on list of their positions given by a list y. The list y \
format in the general case has the view  {n1, ..., nt, {m1 ; ... ; mp}}, \
returning elements of a list x according to a standard relation x[[n1]] ... \
[[nt]][[m1 ; ... ; mp]]. At that, the argument y allows the following formats \
of the coding {n1, ..., nt}, {m1 ; ... ; mp}}, {}.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SubListsMin", "::", "usage"}], "=", 
   "\"\<The SubListsMin procedure as a whole is useful for operations with \
lists. The call SubListsMin[L, x, y, t] returns the sublists of a list L that \
are limited by elements {x, y} and have the minimum length; at t = \\\"r\\\" \
selection is made from left to right, and at t = by \\\"l\\\" from right to \
left. Whereas the call SubListsMin[L, x, y, t, z] with optional 5th argument \
z \[Dash] an arbitrary expression \[Dash] returns sublists without the \
limiting elements {x, y}.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SubListsMin", "::", "usage"}], "=", 
   "\"\<The call ElemsList[x, y] returns elements of a list x depending on a \
list y of their positions which have been set by the list y. Generally, the \
list y has format of the view {n1,...,nt, {m1;...;mp}}, returning elements of \
the list x according to the standard formula x[[n1]]...[[nt]][[m1;...;mp]]; \
otherwise $Failed is returned. The argument y, meanwhile, admits the \
following formats of the coding {n1,...,nt}, {{m1;...;mp}} and {}.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LevelsOfList", "::", "usage"}], "=", 
   "\"\<The procedure call LevelsOfList[L] returns the list of levels of \
elements of a list Flatten[L] of an initial list L. At that, in case of L = \
{} the empty list is returned, i.e. {}; in case of a simple list L the single \
list of length Length[Flatten[L]], i.e. {1, 1, ..., 1} is returned. Level of \
elements of a simple list is equal 1. For example, LevelsOfList[{a, m, n, \
{{b}, {c}, {{m, {{{g}}}, n, {{{{{gs}}}}}}}}, d}]  \[Dash]>  {1, 1, 1, 3, 3, \
4, 7, 4, 9, 1}.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ListTrim", "::", "usage"}], "=", 
   "\"\<In contrast to the function StringTrim the procedure ListTrim[L, p] \
trims sublists of a list L that match p from the beginning and end. At that, \
an arbitrary expression or their list can be as a actual argument p.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Split1", "::", "usage"}], "=", 
   "\"\<Unlike two standard functions Split and SplitBy, the call Split1[x, \
y] splits a list x into the sublists consisting of its elements, located \
between occurrences of an element or a list of elements y. If y don't belong \
to the list x, the initial list x is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SplitList", "::", "usage"}], "=", 
   "\"\<The call SplitList[L, x] returns the result of splitting of an \
initial list L onto sublists by an element or elements x; in addition, \
dividers x from the result are removed. If elements x don't belong to the \
list L, the procedure call returns the initial list L.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SplitList1", "::", "usage"}], "=", 
   "\"\<The call SplitList1[L, y, z] returns the sublists of a list L that \
are limited by its sublists y and z; in addition, dividers y and z from the \
result are removed. If elements y,z don't belong to the list L, the procedure \
call returns the empty list, i.e. {}.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MultEntryList", "::", "usage"}], "=", 
   "\"\<The call MultEntryList[x] returns the ListList\[Dash]list; the first \
element of its sublists defines the element of a list x whereas the second \
element defines multiplicity of it in the list x irrespective of its nesting. \
If the list x is empty, the call SubLists[x] returns the empty list, i.e. {}.\
\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReloadPackage", "::", "usage"}], "=", 
   "\"\<The call of procedure ReloadPackage[x] returns nothing, providing \
activation in the current session of all means of a package located in a \
m-file x as though their definitions were calculated in input stream. If call \
ReloadPackage[x, y] contains the second optional y-argument - the list of \
names - the reload is made only for means of the package with names specified \
in y. The call ReloadPackage[x, y, t] additionally with third optional \
argument t, where t is an arbitrary expression, returns nothing also, \
providing the reload in the current session of all means of the package x, \
excluding only means of the package with names, specified in the list \
y.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReloadPackage1", "::", "usage"}], "=", 
   "\"\<The ReloadPackage1 procedure is a functionally equivalent \
modification of the ReloadPackage procedure. This modification is of interest \
from the point of view of approaches used by the procedure. The call of \
procedure ReloadPackage1[x] returns nothing, providing activation in the \
current session of all means of a package located in a m\[Dash]file x as \
though their definitions were calculated in input stream. If call \
ReloadPackage1[x, y] contains the second optional y\[Dash]argument \[Dash] \
the list of names \[Dash] the reload is made only for means of the package \
with names specified in y. The call ReloadPackage1[x, y, t] additionally with \
third optional argument t, where t is an arbitrary expression, returns \
nothing also, providing the reload in the current session of all means of the \
package x, excluding only means of the package with names, specified in the \
list y.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ConvertMtoMx", "::", "usage"}], "=", 
   "\"\<In [4-6,8] the organization of the user package, simple and \
convenient for modifications and saved in a m\[Dash]file by means of chain of \
the GUI commands \\\"File \[Dash]> Save As \[Dash]> Mathematica Package (*.m)\
\\\" is presented. The \\\"AVZ_Package.m\\\" package was organized and \
modified exactly in such way [10]. The procedure call ConvertMtoMx[x, y] \
returns Null, providing converting of a m\[Dash]file x created by the above \
method into the datafile with the same main name, but with \\\"mx\\\" \
extension; through the 2nd argument y \[Dash] a symbol \[Dash] the list of \
names in string format of objects which are contained in the m\[Dash]file x \
with a package is returned. Whereas the procedure call ConvertMtoMx[x, y, z] \
with the 3rd optional argument z \[Dash] an arbitrary expression \[Dash] in \
addition unload a package contained in datafile x from the current session.\>\
\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContUsageMfile", "::", "usage"}], "=", 
   "\"\<In [4-6,8] the organization of the user package, simple and \
convenient for modifications and saved in a m\[Dash]file by means of chain of \
the GUI commands \\\"File \[Dash]> Save As \[Dash]> Mathematica Package (*.m)\
\\\" is presented. The present package was organized and modified exactly in \
such way. The function call ContUsageMfile[x] returns the sorted list of \
names in string format of objects which are contained in the m\[Dash]file x \
with a package. Whereas the function call ContUsageMfile[x, y] returns the \
usage in string format of an object which is contained in a m\[Dash]file x \
with a package and has name y.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CodeObjMfile", "::", "usage"}], "=", 
   "\"\<In [4-6,8] the organization of the user package, simple and \
convenient for modifications and saved in a m\[Dash]file by means of chain of \
the GUI commands \\\"File \[Dash]> Save As \[Dash]> Mathematica Package (*.m)\
\\\" is presented. The present package was organized and modified exactly in \
such way. The function call CodeObjMfile[x, y] returns the source code in \
string format of an object with name y that is contained in the m\[Dash]file \
x with a package organized by the above manner.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContCodeUsageM", "::", "usage"}], "=", 
   "\"\<In [4-6,8] the organization of the user package, simple and \
convenient for modifications and saved in a m\[Dash]file by means of chain of \
the GUI commands \\\"File \[Dash]> Save As \[Dash]> Mathematica Package (*.m)\
\\\" is presented. The procedure call ContCodeUsageM[x] returns the sorted \
list of names in string format of objects which are contained in the \
m\[Dash]file x with a package. The procedure call ContCodeUsageM[x, y] \
returns the usage in string format of an object which is contained in a m\
\[Dash]file x with a package and has name y. Whereas the procedure call \
ContCodeUsageM[x, y, z] with the third optional argument z \[Dash] an \
arbitrary expression - returns the source code in string format of an object \
which is contained in a m\[Dash]file x with a package and has name y.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LoadMyPackage", "::", "usage"}], "=", 
   "\"\<The call of procedure LoadMyPackage[x, y] returns Null, i.e. nothing, \
providing the loading into the current session of a package located in a \
mx-file x with a context y with subsequent re-evaluation of all definitions \
contained in the package, what provides optimal format of all such \
definitions, i.e. without context.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LoadPackage", "::", "usage"}], "=", 
   "\"\<The call LoadPackage[x] returns Null, i.e. nothing, loading a package \
contained in a datafile x of the mx\[Dash]format, into the current session of \
Mathematica with activation of all definitions contained in it in a mode \
similar to the mode of the Input\[Dash]paragraph of Mathematica \
system.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtrOfMfile", "::", "usage"}], "=", 
   "\"\<The call ExtrOfMfile[x, y] returns nothing, loading into the current \
session the definitions of only those means which are defined by argument y \
and are in the m\[Dash]format datafile x with a package. In addition, in case \
of existence in the m\[Dash]datafile of several means of the same name, the \
last from them is loaded into the current session only. Whereas the call \
ExtrOfMfile[x, y, z] with the third optional argument z \[Dash] an indefinite \
variable \[Dash] through z additionally returns the list of definitions of \
means from y being in the m\[Dash]datafile x with package. In absence in the \
m\[Dash]datafile x of means from y, the procedure call returns \
$Failed.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtrDefFromM", "::", "usage"}], "=", 
   "\"\<To certain extent, to the ExtrOfMfile procedure the following \
procedure adjoins whose call ExtrDefFromM[x, y] in tabular form returns the \
usage and definition of a y tool contained in a x m\[Dash]file with the user \
package. At the same time, in the absence of one of these components of a y \
tool the message \\\"Usage for y is absent\\\" or \\\"Definition for y is \
absent\\\" is returned accordingly; while in the absence of the both \
components $Failed is returned. At last, the procedure call ExtrDefFromM[x, \
y, z] with the third optional argument z \[Dash] an arbitrary expression \
\[Dash] additionally in the current session the usage and definition of y \
tool are evaluated. We will note that procedure doesn't demand loading of x \
package into the current session, allowing in it selectively to activate the \
tools of the user package.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtrFromNBfile", "::", "usage"}], "=", 
   "\"\<The successful call ExtrFromNBfile[x, y] returns an object definition \
in string format with a name y, given in string format, from a datafile x of \
the format {\\\"cdf\\\", \\\"nb\\\"}, at the same time activating this \
definition in the current session. Otherwise, the procedure call returns \
$Failed. In addition, the loading in the current session of the datafile x \
isn't required.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtrFromNBfile3", "::", "usage"}], "=", 
   "\"\<The procedure call ExtrFromNBfile3[x, n] returns in string format the \
definition of an object located in a x file of format {\\\"cdf\\\", \
\\\"nb\\\"} that is defined by a name n in string format or by their list; if \
the names list is as an argument n, the list of their definitions is returned \
generally speaking. Whereas the procedure call ExtrFromNBfile3[x, n, y] with \
third optional y argument \[Dash] an undefined variable \[Dash] through it \
returns the list of elements of the kind {mnw, $Failed} that defines names \
mnw whose definitions are absent in the x file with the user package. It is \
assumed that the user package located in the x file is arranged in the above \
format, and tools definitions of the same name which are in it, are in \
different blocks of the format \\\"Begin[...] ... End[]\\\". In some cases \
the approach used in this procedure seems an useful enough.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CdfNbToText", "::", "usage"}], "=", 
   "\"\<In some cases the approach used in the following procedure may be an \
useful enough means at programming of tools based on the internal format \
{\\\"cdf\\\", \\\"nb\\\"}. The procedure call CdfNbToText[x] returns full \
path to txt-file which contains in text format the content of x file of the \
format {\\\"cdf\\\", \\\"nb\\\"}. Whereas the call CdfNbToText[x, y] with \
second optional argument \[Dash] an arbitrary expression \[Dash] returns the \
2-element list whose first element is the above path to the txt-file, and the \
second element \[Dash] the content of this txt-file, including system \
characteristics of document contained in the x file.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtrFromM", "::", "usage"}], "=", 
   "\"\<The procedure call ExtrFromM[x, y] returns nothing, evaluating in the \
current session a separate means or their list whose names are defined by \
argument y that are supplied with usages and whose definitions are in a \
datafile x of the \\\"m\\\" format. Whereas the procedure call ExtrFromM[x, \
y, z] where z \[Dash] an undefinite symbol \[Dash] through argument z returns \
the four\[Dash]element list whose elements are names lists of y that \[Dash] \
(1) have definitions and usages, (2) have usages without definitions, (3) \
have definitions without usages, (4) have neither definitions or usages. At \
that, uploading of the file x into the current session isn't required.\>\""}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtrFromNBfile1", "::", "usage"}], "=", 
   "\"\<The successful procedure call ExtrFromNBfile1[x, y] returns the \
definition of an object in the DisplayForm format with a name y given in \
string format from an unuploaded datafile x of format {\\\"cdf\\\", \
\\\"nb\\\"}, activating the object y in the current Mathematica session; \
otherwise, the call returns the empty list, i.e. {}, whereas the call \
ExtrFromNBfile1[x, y, t], where t \[Dash] an undefinite variable through t \
additionally returns full path to cdf\[Dash]file with definition of the \
object y. Qua of an useful property of this procedure is the circumstance \
that a datafile x not require of uploading into the current session.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtrFromNBfile2", "::", "usage"}], "=", 
   "\"\<The procedure call ExtrFromNBfile2[x, n] returns the definition of an \
object with a name n given in string format from the unuploaded or uploaded \
user package located in a datafile x of format {\\\"cdf\\\", \\\"nb\\\"}. At \
the same time, definition of an object n saves in the \\\"n.cdf\\\" file of \
the the current working directory. At that, the datafile x not require of \
uploading into the current session. If the user package located in the file x \
of the format {\\\"cdf\\\", \\\"nb\\\"} has been loaded into the current \
session before ExtrFromNBfile2 procedure call, it remains active in the \
current session, otherwise the user package will be unloaded after the \
procedure call. The unsuccessful procedure call returns $Failed or is \
returned unevaluated.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"EvaluateCdfNbFile", "::", "usage"}], "=", 
   "\"\<The function call EvaluateCdfNbFile[w] returns nothing, calculating \
in the current session a file w of the format {\\\"cdf\\\", \\\"nb\\\"} \
without its visualization and uploading in the current session. While the \
call EvaluateCdfNbFile[w, y] with the second optional argument y \[Dash] an \
arbitrary expression \[Dash] does the above actions, visualizing additionally \
the datafile w.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContentsCdfNb", "::", "usage"}], "=", 
   "\"\<The procedure call ContentsCdfNb[x] returns the sorted list of \
objects names whose definitions are located in a file x of the format \
{\\\"cdf\\\", \\\"nb\\\"} without uploading of datafile x into the current \
session. The procedure allows to obtain the contents of the {\\\"cdf\\\", \
\\\"nb\\\"}\[Dash]files without uploading their into the current session. In \
many applications, the given tool is quite useful in a program mode.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContentsMx", "::", "usage"}], "=", 
   "\"\<The procedure call ContentsMx[x] returns the list of means names \
contained in a mx\[Dash]file x with a context; the x file is not necessarily \
loaded into the current session; if the x file has been already uploaded into \
the current session, then the file remains in it, otherwise the file is \
unloaded from it.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContentOfNbCdf", "::", "usage"}], "=", 
   "\"\<As it was already noted earlier, definitions of the user package \
without the usages corresponding to them, are ignored at uploading of the \
package into the current session. Thus, the means testing such situations are \
presented to us as rather important. So, the procedure call ContentOfNbCdf[w] \
returns the sorted list of objects names whose definitions are located in a \
datafile w of the format {\\\"cdf\\\", \\\"nb\\\"} without uploading of \
datafile w into the current session. Whereas the procedure call \
ContentOfNbCdf[w, y] where y \[Dash] an undefinite symbol \[Dash] \
additionally through y returns 3\[Dash]element list whose the first element \
represents the sorted list of objects names whose definitions are located in \
the file w and have usages, the second element represents the sorted list of \
objects names whose definitions are located in the file w and have not \
usages, the third element presents the sorted list of objects  names which \
have not the corresponding definitions. The given procedure allows to verify \
the contents of the {\\\"cdf\\\", \\\"nb\\\"}\[Dash]files without uploading \
their into the current Mathematica session.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UsagesCdfNb", "::", "usage"}], "=", 
   "\"\<The procedure call UsagesCdfNb[x, y] provides usages output relative \
to the means defined by a separate symbol or their list y that are in a file \
x of the format {\\\"cdf\\\", \\\"nb\\\"} without its uploading into the \
current session. For a single means the result is returned in the format \
\\\"y::usage\\\" or \\\"y::No\\\" if the usage for a means with name N is \
absent in the datafile x.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ActivateMeansFromCdfNb", "::", "usage"}], "=", 
   "\"\<The procedure call ActivateMeansFromCdfNb[x, y] returns nothing, \
evaluating in the current session a separate means or their list whose names \
are defined by argument y along with their usages whose definitions are in a \
datafile x of the format {\\\"cdf\\\", \\\"nb\\\"}. At that, uploading of the \
datafile x into the current session isn't required.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TestCdfNbFile", "::", "usage"}], "=", 
   "\"\<It is known that definitions of means of the user packages kept in \
files of the format {\\\"cdf\\\", \\\"nb\\\"}, have to be supplied with \
usages of the corresponding format. The given requirement is obligatory for \
ensuring availability of these means at evaluation of such datafiles in the \
current session. In this connexion it is expedient to have the means for \
testing of supply of means of such {\\\"cdf\\\", \\\"nb\\\"}\[Dash]files with \
the corresponding usages. The procedure call TestCdfNbFile[x] returns the \
sorted list of means of a file x of the format {\\\"cdf\\\", \\\"nb\\\"} \
which have not usages; otherwise the empty list, i.e. {} is returned. Whereas \
the procedure call TestCdfNbFile[x, y] where y \[Dash] an undefinite variable \
\[Dash] through y additionally returns the list of means names, whose \
definition are in the datafile x with the user package. It should be noted \
that testing of the above datafiles of the format {\\\"cdf\\\", \\\"nb\\\"} \
is carried out without their uploading into the current session.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtrFromMfile", "::", "usage"}], "=", 
   "\"\<The next ExtrFromMfile procedure is specific complement of the \
ExtrFromNBfile procedure, providing extraction of definitions of functions \
and procedures along with their usages from an unuploaded package that is \
located in a datafile of m\[Dash]format. The procedure call ExtrFromMfile[x, \
y] returns the definition of an object in the string format with a name or \
list of their names y given in string format from an unuploaded file x of m\
\[Dash]format, at the same time activating these definitions and usages \
corresponding to them in the current session; otherwise, the call returns \
empty list, i.e. {}.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MfilePackageQ", "::", "usage"}], "=", 
   "\"\<The call MfilePackageQ[x] returns True only in case a string x \
defines the real datafile of m\[Dash]format that is the standard \
package.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PackageFileQ", "::", "usage"}], "=", 
   "\"\<The call PackageFileQ[x] returns True if the argument x defines a \
datafile of formats {\\\"cdf\\\", \\\"mx\\\", \\\"m\\\", \\\"nb\\\"} with a \
package, otherwise False is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UserPackTempVars", "::", "usage"}], "=", 
   "\"\<As a rule, rather large packages of the user contain in own structure \
the variables of several types which appear at their loading into the current \
session of the system. For definition of such variables the procedure can be \
used, whose call UserPackTempVars[x] returns the 3\[Dash]element nested list \
where the first sublist determines the undefinite variables associated with \
the package determined by a context x, the second sublist defines the \
temporary variables associated with the package and having names of the \
format \\\"Name$\\\" whereas the third sublist defines symbols of the format \
\\\"Name$Integer\\\" which in the current session aren't distinguished as \
symbols.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TempInPack", "::", "usage"}], "=", 
   "\"\<The function call TempInPack[x] returns the list of the temporary \
variables associated with the package defined by a context x. The TempInPack \
function, based on the TemporaryQ function is a simplified version of the \
UserPackTempVars procedure.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"$UserContexts", "::", "usage"}], "=", 
   "\"\<The global variable $UserContexts defining a list of contexts of the \
user packages loaded into the current session completes the given fragment. \
At that, the variable defines only contexts of the packages that generate in \
the current session the variables of two types presented above according to \
the UserPackTempVars procedure.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContMxFile", "::", "usage"}], "=", 
   "\"\<The call ContMxFile[x] returns the nested list, whose first element \
defines the context associated with a package that is contained in a \
mx\[Dash]datafile x while the second element defines the list of names in \
string format of all objects of this package irrespective of existence of the \
references (usages) for them, i.e. both local, and global objects. Whereas \
the call ContMxFile[x, y] where the second argument y \[Dash] an arbitrary \
expression \[Dash] returns the nested list of analogous structure, but with \
the difference, that its second element defines the list of names of objects \
of this package that are provided with references (usages), i.e. only global \
objects. Withal, it should be noted that ContMxFile procedure presented in \
the previous fragment is intended for usage with the mx\[Dash]files created \
on platform Windows XP/7 Professional, its use for other platforms can demand \
the appropriate adaptation. The reason of it consists in that the algorithm \
of the ContMxFile procedure is based on an analysis of structure of \
mx\[Dash]files that depends on platform used at creation of such datafiles.\>\
\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContMxFile1", "::", "usage"}], "=", 
   "\"\<The procedure ContMxFile1 is an useful enough modification of the \
ContMxFile procedure which also uses an analysis of structure of \
mx\[Dash]files which depends on platform used at creation of such datafiles. \
The procedure call ContMxFile1[x] returns the nested list whose first element \
defines the context associated with the package contained in a \
mx\[Dash]datafile x while the second element determines the list of names in \
string format of all objects of this package irrespectively from existence \
for them of usages, i.e. local and global objects. Furthermore, similarly to \
the ContMxFile procedure the returned names determine objects whose \
definition returned by the call Definition contains the context. At that, is \
supposed that a mx\[Dash]datafile x is recognized by the FileExistsQ \
function.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContMxFile2", "::", "usage"}], "=", 
   "\"\<Unlike the procedures ContMxFile and ContMxFile1, the ContMxFile2 \
procedure is based on another algorithm whose essence is as follows. First of \
all the existence in a mx\[Dash]file x of a package is checked; at its \
absence $Failed is returned. Then upload in the current session of a package \
containing in the mx\[Dash]file x is checked. At positive result the required \
result without unloading of a package x is returned, otherwise the required \
result with unloading of a package is returned. In both cases a call \
ContMxFile2[x] returns the 2\[Dash]element list, whose first element \
determines a package context whereas the second \[Dash] the list of names in \
string format of means, contained in the package. The procedure essentially \
uses the IsPackageQ procedure.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContMxW7", "::", "usage"}], "=", 
   "\"\<For the platform Windows 7 Professional the algorithm of the \
ContMxFile procedure is modified in the corresponding manner, taking into \
account the internal structure of the mx\[Dash]datafiles created on the \
specified platform. This algorithm is realized by the procedure ContMxW7, \
whose call ContMxW7[x] returns the nested list whose first element defines \
the context connected with the package contained in a mx\[Dash]file x whereas \
the second element defines the list of names in string format of all global \
objects of this package whose definitions contains a context ascribed to the \
package. Whereas on a mx\[Dash]file without context the procedure call \
returns $Failed. At that, is supposed that a file x is recognized by the \
FileExistsQ function.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DiffContexts", "::", "usage"}], "=", 
   "\"\<The objects of the same name have various headings therefore in \
certain cases arises a question of their more exact identification. The next \
procedure provides one of such approaches, trying to associate the components \
composing such objects with the contexts ascribed to them. At the heart of \
the procedure algorithm lies a principle of creation for separate components \
of an object of the same name of packages in m\[Dash]files with the unique \
contexts ascribed to them. Then, having removed an object x of the same name \
from the current session, by means of uploading of these m-files into the \
current session we have opportunity of access to components of the object x \
of the same name through a construction of the \\\"Context'x\\\" format.\nThe \
procedure call   DiffContexts[x] returns the nested list of \
ListList\[Dash]type whose sublists by the first element define context while \
the second element define heading of a certain component of an object of the \
same name x in the format {{\\\"xn'\\\", \\\"cn'\\\"}, \[Ellipsis], \
{\\\"x2'\\\", \\\"c2'\\\"}, {\\\"x1'\\\", \\\"c1'\\\"}} whose order is \
defined by order of the contexts in the list defined by the $Packages \
variable, where n \[Dash] number of components of the object of the same name \
x. Moreover, the datafiles  \\\"xj.m\\\" with the packages with components \
definitions composing the object of the same name x remain in the current \
directory of the session (j=1..n). At the same time the procedure call \
DiffContexts[x, y] with the 2nd argument y \[Dash] an arbitrary expression \
\[Dash] returns the above result, removing the intermediate m-files. Whereas \
on x objects different from objects of the same name the procedure call \
DiffContexts[x] returns the context of an object x.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MxPackNames", "::", "usage"}], "=", 
   "\"\<After loading in the current session of the user package from a \
datafile of format {m, nb}, the most part of definitions of its means \
received by the standard Definition function, will include context links of \
the format \\\"Context'x'\\\", where x \[Dash] the name of a means, and \
\\\"Context'\\\" \[Dash] the context, ascribed to this package. The call \
MxPackNames[x] returns the list of names of means of nb\[Dash]file y \[Dash] \
analog of the datafile x \[Dash] whose definitions after loading of this \
datafile y into the current session the system function Definition will \
return with context links of the above format.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NamesFromMx", "::", "usage"}], "=", 
   "\"\<The call NamesFromMx[x] returns the list of names of the means whose \
definitions are in a datafile of the mx\[Dash]format with a package. In case \
this package wasn't loaded into the current session, the call NamesFromMx \
leaves it unloaded.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PackReplaceQ", "::", "usage"}], "=", 
   "\"\<The procedure call PackReplaceQ[x] returns True, if definitions \
contained in a m\[Dash]file x with package replace the definitions activated \
in the current session, and False otherwise at uploading of the file x into \
current session. At that, the procedure call leaves the datafile x unloaded. \
Whereas the call PackReplaceQ[x, y] through optional argument y \[Dash] an \
undefinite variable \[Dash] returns the list of objects of the current \
session whose definitions will be replaced at uploading of the file x into \
current session.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NamesFromMx1", "::", "usage"}], "=", 
   "\"\<The call NamesFromMx1[x] returns the list of names of the means whose \
definitions are in a datafile x of the mx\[Dash]format with a package. \
Procedure doesn't demand the loading of datafile x into the current session. \
In addition, only those names of the means whose definitions received by the \
call of standard function Definition contain a context associated with the \
package are returned.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NamesFromMx2", "::", "usage"}], "=", 
   "\"\<The call NamesFromMx2[x] returns the list of names of the means whose \
definitions are in a datafile x of the mx\[Dash]format with a package. \
Procedure doesn't demand the loading of datafile x into the current session. \
In contrast to the NamesFromMx1 procedure, the NamesFromMx2 returns the list \
of names of the means irrespectively from context existence in their \
definitions returned by the Definition function.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"$ProcName", "::", "usage"}], "=", 
   "\"\<The procedural variable $ProcName which is used only in the body of a \
procedure activated in the current session, returns the list, whose first \
element defines a name, whereas the second - the heading in string format of \
the procedure containing it. Moreover, for maintenance of the given \
opportunity in the list of local variables of the procedure containing the \
variable $ProcName, it is necessary to code expression of the kind \
$$NameProc$$ = \\\"Name_Procedure\\\"; otherwise, the call of procedure \
returns \\\"UndefinedName\\\" as a value for the variable $ProcName.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"$InBlockMod", "::", "usage"}], "=", 
   "\"\<The call of the procedural $InBlockMod variable in a procedure body \
of the type Block or Module in string\[Dash]format returns an initial code of \
the procedure without its heading in a point of its call. When using the \
procedural $InBlockMod variable it must be kept in mind that it makes sense \
only in a procedures body of the type Block or Module, without returning \
anything, i.e. Null, in other expressions or in the \
Input\[Dash]paragraph.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MathematicaDF", "::", "usage"}], "=", 
   "\"\<The call MathematicaDF[] returns the list of the ListList\[Dash]type \
whose 2\[Dash]element members by the first element contain type of an element \
of Mathematica file system whereas by the second element the quantity of \
elements of this type. In addition, \\\"Dir\\\" defines the catalog, \
\\\"NoExtension\\\" \[Dash] files without extension, whereas others \[Dash] \
type of file extension (in particular, datafiles with name of the format \
\\\".xxxxxx\\\" also are understood as extension).\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Memory", "::", "usage"}], "=", 
   "\"\<The successful call Memory[] provides return of the list, whose \
elements define the structural organization of a computer memory. While the \
call Memory[x] with optional argument x \[Dash] an arbitrary expression \
\[Dash] in addition deletes the program mem.exe from the catalog determined \
by system variable $InstallationDirectory.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefWithContext", "::", "usage"}], "=", 
   "\"\<The call DefWithContext[x] returns the 2-element nested list: its \
first element defines the list of names in string-format of means of a \
package loaded from a m-file x, whose definitions do not contain context \
identifiers whereas the second - the list of names in string-format of means \
whose definitions contain context identifiers.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContextMXfile", "::", "usage"}], "=", 
   "\"\<The call ContextMXfile[x] returns the context associated with the \
package contained in a datafile x of mx-format. Furthermore, the uploading of \
the package into the current session is not needed.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContextInMxFile", "::", "usage"}], "=", 
   "\"\<The procedure call ContextInMxFile[x] returns the context that is \
associated with a mx\[Dash]file x. In the absence of a context the procedure \
call returns $Failed. Furthermore, the uploading of the datafile x into the \
current session is not needed.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContextFromMx", "::", "usage"}], "=", 
   "\"\<The procedure call ContextFromMx[x] returns the context ascribed to \
the user package contained in a mx\[Dash]file, at a context absence $Failed \
is returned. The procedure operates on platform Windows XP Professional and \
Windows 7 Professional. Moreover, performance of the procedure is higher if \
it is applied to a mx\[Dash]file created on the current platform.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContextsInFiles", "::", "usage"}], "=", 
   "\"\<The procedure ContextsInFiles provides evaluation of the context \
ascribed to a datafile of the format {\\\"m\\\", \\\"mx\\\", \\\"cdf\\\", \
\\\"nb\\\"}. The procedure call ContextsInFiles[w] returns the single context \
ascribed to a file w of the above formats. In the absence of a context the \
call returns $Failed. At that, it must be kept in mind that the context in \
datafiles of the specified format is sought relative to the key word \
\\\"BeginPackage\\\", which is typically used at the beginning of a \
Mathematica package. A return of the list of the format {\\\"Context1\\\", \\\
\"Context2\\\", \[Ellipsis], \\\"Contextp\\\"} is equivalent to existence in \
the file of m\[Dash]format of construction BeginPackage[\\\"context1'\\\", \
{\\\"context2'\\\", ..., \\\"contextp'\\\"}] where {\\\"context2'\\\",  ..., \
\\\"contextp'\\\"} define uploadings of the appropriate files if their \
contexts aren't in the $Packages variable.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContextInMfile", "::", "usage"}], "=", 
   "\"\<The procedure ContextInMfile provides evaluation of all contexts \
contained in a datafile of the m\[Dash]format. The procedure call \
ContextInMfile[x] returns the list of contexts contained in a m\[Dash]file x. \
In the absence of context the call returns the empty list, i.e. {}. At that, \
it must be kept in mind that contexts in m-files are sought relative to the \
key words {\\\"BeginPackage\\\", \\\"Needs\\\", \\\"Get\\\", \\\"Package\\\"} \
which are used in m\[Dash]files.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContextFromMx1", "::", "usage"}], "=", 
   "\"\<The procedure call ContextFromMx1[x] returns the context ascribed to \
the user package contained in a mx\[Dash]file, at a context absence $Failed \
is returned. The procedure operates on platform Windows XP Professional and \
Windows 7 Professional. Moreover, performance of the procedure is higher if \
it is applied to a mx\[Dash]file created on the current platform.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContextFromFile", "::", "usage"}], "=", 
   "\"\<The call ContextFromFile[x] returns the context associated with the \
user package contained in a datafile x of formats {cdf, m, mx, nb}, and \
$Failed otherwise. Furthermore, the loading of the package into the current \
session is not done and the file x remains closed.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContextDef", "::", "usage"}], "=", 
   "\"\<The call ContextDef[x] returns the list of contexts associated with a \
symbol x. If x isn't associated with a context, the empty list is returned, \
i.e. {}.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContentOfMfile", "::", "usage"}], "=", 
   "\"\<The call ContentOfMfile[f] returns the list of names in \
string\[Dash]format of all means, whose definitions are in a package \
(m\[Dash]datafile) determined by argument f. In absence in the \
m\[Dash]datafile of definitions of means in the standard package format the \
call returns the empty list, i.e. { }.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContentOfMfile1", "::", "usage"}], "=", 
   "\"\<The function ContentOfMfile1 is functionally equivalent to the \
procedure ContentOfMfile, however has a rather other implementation.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContentOfMfile2", "::", "usage"}], "=", 
   "\"\<The function ContentOfMfile2 is functionally equivalent to the \
procedure ContentOfMfile1, however has a rather other implementation.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContextToFileName1", "::", "usage"}], "=", 
   "\"\<The procedure ContextToFileName1 is useful enough addition to the \
standard function ContextToFileName. The procedure call ContextToFileName1[] \
returns the list of contexts associated with system m-files, whereas the \
procedure call ContextToFileName1[y] returns the full path to m-file \
associated with a context y.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SymbolsContext", "::", "usage"}], "=", 
   "\"\<The function call SymbolsContext[x] returns the list of all symbols \
associated with a context x that is activated in the current session. In \
particular, the function is useful enough at receiving of names of all main \
objects contained in the package with the given context x.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"VizContext", "::", "usage"}], "=", 
   "\"\<The call VizContext[x] returns the notebook containing all \
definitions of the user package that is downloaded in the current session and \
associated with a context x. The notebook is returned in the separate window, \
providing comfortable scan of definitions with possibility of their \
subsequent saving in a datafile of formats {cdf, m, nb, ...}. In case of \
absence of the context x in the current session the procedure call returns \
$Failed.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"VizContentsNB", "::", "usage"}], "=", 
   "\"\<A quite simple VizContentsNB procedure provides the print of a \
datafile of the nb\[Dash]format in a readable view that is quite convenient \
for expeditious viewing of contents, in particular, of a package containing \
in the nb\[Dash]datafile without its loading into the current session. In \
addition, the call VizContentsNB[w] in the readable view outputs the contents \
of nb\[Dash]datafile w onto the monitor, otherwise $Failed is \
returned.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ToContextPath", "::", "usage"}], "=", 
   "\"\<The call ToContextPath[x] provides updating of contents of the \
current list determined by the system variable $ContextPath by means of \
adding to its end of all contexts from a m\[Dash]file x containing simple or \
the nested package. The successful call ToContextPath[x] returns the updated \
value of $ContextPath variable.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DeleteOptsAttr", "::", "usage"}], "=", 
   "\"\<The call DeleteOptsAttr[x] returns Null, i.e. nothing, deleting the \
options ascribed to a symbol x; whereas the call DeleteOptsAttr[x, y] returns \
Null also, i.e. nothing, deleting both the options and attributes ascribed to \
a symbol x; in addition, an arbitrary expression can be used as the second \
optional argument y.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefFromPackage", "::", "usage"}], "=", 
   "\"\<The call DefFromPackage[x] returns the 3-element list: its first \
element \[Dash] the definition in string-format of a symbol x whose context \
is different from {\\\"Global`\\\", \\\"System`\\\"}, the second element \
\[Dash] help (usage) concerning the symbol x, and the third element \[Dash] \
the list of attributes of the symbol x. On symbols associated with the above \
contexts the procedure call returns the list of their attributes.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefFromM", "::", "usage"}], "=", 
   "\"\<The call DefFromM[x, y] returns the object definition with a name y \
which is in a datafile x of the m\[Dash]format with a package, whereas the \
call DefFromM[x, y, z] where z \[Dash] an arbitrary expression, in addition \
evaluates this definition in the current session, making object y \
available.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MxToTxt", "::", "usage"}], "=", 
   "\"\<The procedure MxToTxt allows from 2 to 4 actual arguments. The \
procedure call MxToTxt[x, y] returns Null, i.e. nothing, saving both in a \
datafile y of txt-format, and in the current session all definitions of the \
user package being in a datafile x of mx-format. In addition, definitions of \
the file x remain in the optimal format (without the context associated with \
the package). If the call MxToTxt[x, y, z], since the 3rd argument, contains \
optional argument \\\"Del\\\", the package x isn't loaded into the current \
session, otherwise its definitions remain in the current session in the \
optimal format. If at call arguments of procedure, since the third, contain \
an undefinite variable, through it the list of all objects whose definitions \
are in the datafile x with the user package are returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MxToTxt1", "::", "usage"}], "=", 
   "\"\<The procedure MxToTxt1 is a modification of the above procedure \
MxToTxt. The procedure MxToTxt1 allows from 2 to 4 actual arguments too. The \
procedure call MxToTxt1[x, y] returns Null, i.e. nothing, saving both in a \
datafile y of txt-format, and in the current session all definitions of the \
user package being in a datafile x of mx-format. In addition, definitions of \
the file x remain in the optimal format (without the context associated with \
the package). If the call MxToTxt1[x, y, z], since the 3rd argument, contains \
optional argument \\\"Del\\\", the package x isn't loaded into the current \
session, otherwise its definitions remain in the current session in the \
optimal format. If at call arguments of procedure, since the third, contain \
an undefinite variable, through it the list of all objects whose definitions \
are in the datafile x with the user package are returned. The call Get[y] \
returns \\\"OK!\\\" activating in the current session all definitions from \
the datafile y.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MxToTxt2", "::", "usage"}], "=", 
   "\"\<The MxToTxt2 procedure represents a quite useful modification of the \
procedures MxToTxt and MxToTxt1, allowing 2 factual arguments and saving in \
ASCII\[Dash]datafile which is defined by the second argument, all definitions \
contained in a mx\[Dash]file which is defined by the first argument. The call \
MxToTxt2[x, y] returns \\\"OK!\\\", saving in the datafile y all definitions \
from the mx\[Dash]file x, that are parted by string \\\"OK!\\\". In addition, \
if the package from the mx\[Dash]file x wasn't loaded into the current \
session, then and after the call MxToTxt2 the package will be inaccessible in \
the current session.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MxToMpackage", "::", "usage"}], "=", 
   "\"\<The MxToMpackage procedure provides converting of the package that is \
in a mx\[Dash]file into the package of the format presented here and in our \
books [4-6,8] which is rather convenient at creation of the user packages. \
The procedure call MxToMpackage[x] returns the path to the file \
FileBaseName[x] <> \\\".m\\\" which will contain the package of the above \
format contained in a mx\[Dash]file x, while  the procedure call \
MxToMpackage[x, y] returns the path to the file FileBaseName[y] <> \
\\\".m\\\"; at that, if a package from the mx\[Dash]file x yet has been \
uploaded into the current session,  then it remains in it, otherwise it is \
unloaded from the current session. At impossibility of such converting, the \
procedure call is returned unevaluated or returns $Failed.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MxFileToMfile", "::", "usage"}], "=", 
   "\"\<The MxFileToMfile procedure provides converting of a package located \
in a datafile of the mx\[Dash]format, into datafile of the m\[Dash]format. \
The call MxFileToMfile[x, y] returns the path to a datafile y \[Dash] result \
of converting of the mx\[Dash]file x with the package into the datafile of \
the m\[Dash]format. Moreover, the procedure call deletes packages x and y \
from the current session.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MfileToMx", "::", "usage"}], "=", 
   "\"\<The MfileToMx procedure provides converting of a package located in a \
datafile of the m\[Dash]format, into datafile of the mx\[Dash]format. The \
call MfileToMx[x] returns the path to a datafile \[Dash] result of converting \
of the m\[Dash]datafile x with the package into the datafile of the \
mx\[Dash]format whose name coincides with a name of the initial datafile x \
with replacement of its extension \\\"m\\\" on \\\"mx\\\". Moreover, the \
procedure call deletes package x from the current session if until the call \
MfileToMx the datafile wasn't loaded into the current session, otherwise not.\
\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HeadToCall", "::", "usage"}], "=", 
   "\"\<The call HeadToCall[h] in string format returns the call of a \
procedure/function on the basis of its heading on `pure` formal arguments \
(i.e. without the tests for an admissibility ascribed to them), where h \
\[Dash] admissible heading of a procedure/function.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CallListable", "::", "usage"}], "=", 
   "\"\<The call CallListable[x, y] returns the list of values Map[x, \
Flatten[{y}]], where x \[Dash] a block, a function or a module from one \
formal argument, and y \[Dash] the list or sequence of the factual arguments \
which can be and empty.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefOnHead", "::", "usage"}], "=", 
   "\"\<The call DefOnHead[h] returns the list whose the first element is the \
definition in string-format of a procedure/function with the heading h (or \
list of definitions for the objects of the same name), whereas the others \
\[Dash] options (if they exist) and the list of attributes ascribed to the \
given procedure/function. In case of impossibility to evaluate the definition \
the call returns $Failed.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CompActPF", "::", "usage"}], "=", 
   "\"\<The call CompActPF[x] returns the nested 2-element list whose the \
first element contains the list of all blocks, functions and modules, \
composing a block/function/modules x, whereas the second element contains the \
list of headings corresponding to them. In addition, into the list are \
included only means whose definition were activated in the current session. \
For calls entering into object x are added also and all their calls on the \
full depth of multiplicity.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CompActPF1", "::", "usage"}], "=", 
   "\"\<The call CompActPF1[x] returns the nested list whose elements \
represent sublists of the following format, namely:\n\[Dash] the sublist with \
the first \\\"System\\\" element defines the calls of system functions in \
definition of a block, function or a module x;\n\[Dash] the sublist with the \
first \\\"Undefined\\\" element defines names of objects which aren't entered \
into the list of arguments and local variables of a block, function or a \
module x;\n\[Dash] the sublist of a format, different from \
above\[Dash]stated, contains the user couples {block/function/module, its \
heading}, whose calls are available in definition of an object x.\>\""}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FuncToPure", "::", "usage"}], "=", 
   "\"\<The procedure FuncToPure provides converting of a function defined by \
the format G[x _, y _,...] := W(x, y,...), into pure function of any \
admissible format, namely: the call FuncToPure[x] returns the pure function \
being analog of a function x, of the third format (short format), whereas the \
call FuncToPure[x, p] where p \[Dash] an arbitrary expression, returns the \
pure function of the two first formats.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PureToFunc", "::", "usage"}], "=", 
  "\"\<The following procedure in a certain measure is inverse to the \
FuncToPure procedure, its call PureToFunc[x, y] where x \[Dash] definition of \
a pure function, and y \[Dash] an unevaluated symbol \[Dash] returns Null, \
i.e. nothing, providing converting of definition of a pure function x into \
the evaluated definition of equivalent function with a name y. In addition, \
on inadmissible actual arguments the procedure call is returned \
unevaluated.\>\""}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{"ModToPureFunc", "::", "usage"}], "=", 
   "\"\<The call ModToPureFunc[x] provides the converting of a module or a \
block x into the corresponding pure function under the following conditions, \
namely: (1) the module/block x can't have local variables or all its local \
variables have the initial values; (2) the module/block x can't have active \
global variables, i.e. variables to which in object x assignments are made; \
(3) formal arguments of the returned function don't keep tests for \
admissibility of corresponding factual arguments; (4) the returned function \
inherits attributes and options of the object x. The successful call \
ModToPureFunc[x] returns the name of the returned pure function in the form \
ToString[Unique[x]], otherwise the call returns the enclosed list of the \
format {$Failed, {\\\"Locals\\\"|\\\"Globals\\\"}, {the list of variables \
string format}} whose the first element $Failed defines inadmissibility of \
the above converting, the second element \[Dash] type of the variables whose \
were at the bottom of it, and the third element \[Dash] the list of variables \
of this type in string format.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SyntCorProcQ", "::", "usage"}], "=", 
   "\"\<The call of procedure SyntCorProcQ[x] returns True if definition of a \
procedure x, activated in the current session, is syntactically correct in \
the context, presented in our book [4]; otherwise, False is returned. If x - \
not a procedure the call is returned unevaluated.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RealProcQ", "::", "usage"}], "=", 
   "\"\<A real procedure is understood as an object of type {Module, Block} \
which in the software environment of Mathematica is functionally equivalent \
to Module, i.e. to the procedure in its classical understanding. The call \
RealProcQ[x] returns True if the symbol x defines a Module or a Block which \
is equivalent to a Module, and False otherwise. At that, it is supposed  that \
a certain block is equivalent to a module if all its local variables have \
initial values or some local variables have initial values while others \
obtain values by the operator \\\"=\\\" in the block body. From all our means \
solving the problem of testing of the procedural objects, the above RealProcQ \
procedure with the greatest possible reliability identifies the procedure in \
its classical understanding; in addition, the procedure can be of type \
{Module, Block}.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TestBFM", "::", "usage"}], "=", 
   "\"\<The call TestBFM[x] in the format \\\"Module\\\", \\\"Block\\\", \
\\\"Function\\\" or \\\"DynamicModule\\\" returns the type of procedural or \
functional object x; whereas on argument x of other types the procedure call \
returns &Failed. Moreover, if x defines an object of the same name, the call \
TestBFM[x] returns the list of types of the subobjects composing it, that has \
one-to-one correspondence with the list of definitions returned by the call \
PureDefinition[x].\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TestArgsCall", "::", "usage"}], "=", 
   "\"\<The call TestArgsCall[x, y] returns the definition or list of \
definitions of a block/function/module x on which the procedure call with \
tuple of factual arguments y is correct; i.e. their types corresponds to \
admissible types of formal arguments. Otherwise, the call returns the empty \
list, i.e. {}; on inadmissible argument x different from a \
lock/function/module the procedure call is returned unevaluated.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TestArgsLocals", "::", "usage"}], "=", 
   "\"\<As noted in [9], the Mathematica system at evaluation of definitions \
of objects of types {Block, Function, Module} does not identify situations of \
duplication of formal arguments, local variables and/or their intersections \
as clearly illustrates the examples in [9]. These situations are tested by \
means of the procedure whose call TestArgsLocals[x] returns False if a \
block/function/module x has a duplication of formal arguments, local \
variables and/or their intersections, and True otherwise. Whereas the \
procedure call TestArgsLocals[x, y] through the second optional argument y \
\[Dash] an undefinite symbol \[Dash] in case of the main return False returns \
the 2\[Dash]element list whose elements-sublists are in one-to-one \
correspondence. The first element defines the definitions, composing the x \
object, for which the above situations exist, whereas the second element \
defines the list of sublists of the format {t1, t2, t3};\!\(\*
StyleBox[\" \",
FontSize->9]\)(tj\!\(\*
StyleBox[\" \",
FontSize->9]\)\!\(\*
StyleBox[\"\[Element]\",
FontSize->14]\)\!\(\*
StyleBox[\" \",
FontSize->14]\)\!\(\*
StyleBox[\" \",
FontSize->9]\){True,\!\(\*
StyleBox[\"  \",
FontSize->9]\)False}; j=1\!\(\*
StyleBox[\"\[Divide]\",
FontSize->14]\)3); its tj elements define the duplication of formal \
arguments, duplication of local variables, and/or their intersections \
{False/True} accordingly.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TestFactArgs", "::", "usage"}], "=", 
   "\"\<The procedure call TestFactArgs[x, y] returns the list from True and \
False that defines who of the actual arguments determined by a sequence y \
will be admissible in the call x[y], where x \[Dash] an object name with a \
heading (block, function, module). The procedure assumes equal number of the \
formal and actual arguments defined by a sequence y, along with existence for \
an object x of the fixed number of arguments; otherwise, the call \
TestFactArgs returns $Failed.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FormalArgs", "::", "usage"}], "=", 
   "\"\<The call FormalArgs[x] returns the list of formal arguments of a \
heading x irrespective of the definition assigned to it. On an inadmissible \
argument x the call returns $Failed.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SyntaxLength1", "::", "usage"}], "=", 
   "\"\<The call of procedure SyntaxLength1[x] returns the maximal number of \
position in a string x such that ToExpression[StringTake[x, {1, p}]] is a \
syntactically correct expression, and 0 otherwise, whereas the call \
SyntaxLength1[x, y] through second optional argument y \[Dash] an indefinite \
variable \[Dash] additionally returns the list containing substrings of the \
string x which represent syntactically correct expressions.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ProcFuncCS", "::", "usage"}], "=", 
   "\"\<The call of function ProcFuncCS[] returns the 3-element nested list, \
whose sublists define names in string-format of the user blocks, functions \
and modules accordingly whose definitions have been evaluated in the current \
session.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ProcActCallsQ", "::", "usage"}], "=", 
   "\"\<The procedure tests the existence in the user block, function or \
module x of calls of active user software provided by standard supplemental \
information (usage). The call ProcActCallsQ[x] returns True, if the \
definition of a block/function/module x contains the calls of such software. \
In addition, through the second optional argument y \[Dash] an undefinite \
variable \[Dash] the call ProcActCallsQ[x, y] returns the exhaustive list of \
software whose calls are contained in the definition of x.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CompileFuncQ", "::", "usage"}], "=", 
   "\"\<The call CompileFuncQ[x] returns True if x represents a Compile \
function, and False otherwise.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GC", "::", "usage"}], "=", 
   "\"\<The call GC[x] returns the unique decimal code of an arbitrary \
x-expression.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"$AobjNobj", "::", "usage"}], "=", 
   "\"\<Global variable for certain package means, in particular, \
Aobj1.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ArgsTypes", "::", "usage"}], "=", 
   "\"\<Procedure ArgsTypes serves for testing formal arguments of a \
block/function/module, including pure functions and Compile functions, which \
are active in the current session of Mathematica. The call of procedure \
ArgsTypes[x] returns the nested list, whose 2-element sublists in \
string-format define names of formal arguments and their allowable types (and \
in a more comprehensive sense tests their for admissibility and initial \
values by default) accordingly. In case of absence for an argument of type it \
is defined as \\\"Arbitrary\\\" whereas one actual argument initiates return \
of the simple list of the mentioned format; on inadmissible formal argument \
the call is returned unevaluated. In addition, the Args procedure processes \
the situation \\\" the objects of the same name with various headings \\\", \
returning the nested list of formal arguments concerning of all subobjects of \
an object x in the order determined by the function Definition.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FilesDistrDirs", "::", "usage"}], "=", 
   "\"\<The FilesDistrDirs procedure in a certain measure bears structural \
character for a directory which has been defined by its factual argument. The \
call FilesDistrDirs[x] returns the nested list, whose elements are sublists \
of the following format {dir_p, f1, f2, ..., fn}, where dir_p \[Dash] the \
catalog x and all its subdirectories of any nesting level, whereas f1, f2, \
..., fn \[Dash] names of the datafiles located exactly in this \
catalog.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"QmultiplePF", "::", "usage"}], "=", 
   "\"\<The procedure call QmultiplePF[x] returns True, if x \[Dash] an \
object of the same name (block, function, module), and False otherwise. While \
the procedure call QmultiplePF[x, y] with the 2nd optional argument y \[Dash] \
an indefinite variable \[Dash] returns through y the list of definitions of \
all subobjects with a name x.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FindFile1", "::", "usage"}], "=", 
   "\"\<The FindFile1 procedure serves as useful extension of the standard \
FindFile function, providing search of a datafile within file system of the \
computer. The procedure call  FindFile1[x] returns a full path to the found \
datafile x, or the list of full paths (if datafile x is located in different \
directories of file system of the computer), otherwise the call returns the \
empty list, i.e. {}. While the call FindFile1[x, y] with the second optional \
argument y \[Dash] full path to a directory \[Dash] returns a full path to \
the found datafile x, or the list of full paths located in the directory y \
and its subdirectories.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FindFile2", "::", "usage"}], "=", 
   "\"\<The FindFile2 function serves as an useful extension of the standard \
FindFile function, providing search of a y datafile within a x directory. The \
function call FindFile2[x, y] returns the list of full paths to the found \
datafile y, otherwise the call returns the empty list, i.e. {}. Search is \
done in the directory x and all its subdirectories.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DeleteFile1", "::", "usage"}], "=", 
   "\"\<Removal of a datafile in the current session is made by means of the \
standard DeleteFile function whose call DeleteFile[{x, y, z,...}] returns \
Null, i.e. nothing in case of successful removal of the given datafile or \
their list, and $Failed otherwise. At that, in the list of datafiles only \
those are deleted that have no Protected\[Dash]attribute. Moreover, this \
operation doesn't save the deleted datafiles in the system Recycle Bin \
directory, that in certain cases is extremely undesirable, first of all, in \
the light of possibility of their subsequent restoration. The fact that the \
system function DeleteFile is based on the Dos command Del that according to \
specifics of this operating system immediately deletes a datafile from file \
system of the computer without its preservation, that significantly differs \
from similar operation of the Windows system that by default saves the \
deleted datafile in the special Recycle Bin directory.\nFor elimination of \
similar shortcoming the DeleteFile1 procedure has been offered, whose source \
code with examples of application are represented by the fragment below. The \
successful procedure call DeleteFile1[x] returns 0, deleting datafiles given \
by an argument x with saving them in the Recycle Bin directory of the Windows \
system. Meanwhile, the datafiles removed   by means of procedure call \
DeleteFile1[x] are saved in Recycle Bin directory, however they are invisible \
to viewing by the system means, for example, by means of Ms Explorer, \
complicating cleaning of the given system directory. Whereas the procedure \
call DeleteFile1[x, t] with the 2nd optional argument t \[Dash] an undefinite \
variable \[Dash] thru it in addition returns the list of datafiles which for \
one reason or another were not removed. At that, in the system Recycle Bin \
directory a copy only of the last deleted datafile always turns out. This \
procedure is oriented on Windows XP and Windows 7, however it can be spread \
to other operational platforms.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearRecycler", "::", "usage"}], "=", 
   "\"\<The datafiles x removed by means of the call DeleteFile1[x] remain in \
the directory Recycle Bin, but they are invisible to viewing by system means, \
for example, Ms Explorer, complicating cleaning of this system directory. For \
removal from the directory Recycle Bin of the datafiles saved by the \
DeleteFile1 procedure, the procedure, whose successful call ClearRecycler[] \
returns 0 is used, deleting the specified datafiles from the system directory \
Recycle Bin with preservation in it of other datafiles removed by means of \
Windows or its appendices. At last, the Dick Cleanup command in Windows XP in \
some cases completely doesn't clear the system Recycler directory from \
datafiles but it successfully does the call ClearRecycler[\\\"ALL\\\"] with \
returning 0 and providing removal of all datafiles from the system Recycler \
directory.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearRecyclerBin", "::", "usage"}], "=", 
   "\"\<The successful procedure call ClearRecyclerBin[] returns Null, i.e. \
nothing, and provides removal from the system Recycle Bin directory of \
directories and datafiles that are caused by the DeleteFile1 procedure. While \
the procedure call ClearRecyclerBin[x], where x \[Dash] an arbitrary \
expression \[Dash] also returns Null, i.e. nothing, and provides removal from \
the system Recycle Bin directory of all directories and datafiles whatever \
the cause of their appearance in the given directory. At that, the procedure \
call on the empty Recycler directory returns $Failed.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"WhatValue", "::", "usage"}], "=", 
   "\"\<The call WhatValue[x] returns value ascribed to a variable x; on an \
undefined variable x the list of format {\\\"Undefined\\\", x} is returned \
while on a system variable x the list of format {\\\"System\\\", x}, and on a \
local variable x the list of format {\\\"Local\\\", x} is returned.\>\""}], 
  " ", "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CountOptions", "::", "usage"}], "=", 
   "\"\<The call CountOptions[] returns the nested list whose elements are \
both lists, and separate options. The list contains the name of a group of \
options as the first element, whereas the second \[Dash] number of options in \
this group. Whereas the call CountOptions[p] in addition through argument p \
\[Dash] an undefined variable \[Dash] returns the total of the preset \
options/suboptions of the package.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FreeSpaceVol", "::", "usage"}], "=", 
   "\"\<The procedure call FreeSpaceVol[x] depending on type of an actual \
argument x which should define the logical name in string format of a device, \
returns simple or the nested list; elements of its sublists determine a \
device name, a volume of free memory on the volume of direct access, and the \
unit of its measurement respectively. In the case of absence or inactivity of \
the device x the procedure call returns the message \\\"Device is not ready\\\
\".\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"VolDir", "::", "usage"}], "=", 
   "\"\<The procedure call VolDir[x] returns the nested 2\[Dash]element list, \
whose first element determines the volume occupied by a directory x in bytes \
whereas the second element determines the size of free space on a hard disk \
with the given directory.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DirsFiles", "::", "usage"}], "=", 
   "\"\<The procedure call DirsFiles[x] returns the nested 2\[Dash]element \
list, whose first element defines the list of directories contained in a \
directory x, including x, and the second element defines the list of all \
datafiles contained in the given directory.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TypeActObj", "::", "usage"}], "=", 
   "\"\<The call TypeActObj[] returns the nested list whose sublists contain \
names of objects activated in the current session (in Input-mode) in string \
format and as the first element - their type, recognized by the package or \
defined by us, in particular, {\\\"Procedure\\\", \\\"Function\\\"}.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TypeWinMx", "::", "usage"}], "=", 
   "\"\<In view of distinctions of the mx\[Dash]files created on different \
platforms there is a natural expediency of creation of the means testing any \
mx\[Dash]file regarding a platform in which it was created in virtue of the \
DumpSave function. The following TypeWinMx procedure is one of such means. \
The procedure call TypeWinMx[x] in string format returns the type of \
operating platform on which a mx\[Dash]file x has been created; at that, \
correct result is returned for case of Windows platform, while on other \
platforms $Failed is returned. This is conditioned by lack of a possibility \
to carry out debugging on other platforms.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PureDefinition", "::", "usage"}], "=", 
   "\"\<The call PureDefinition[x] returns the definition in string format or \
their list of a procedure/function x without options and attributes, ascribed \
to it whereas the call PureDefinition[x, t] with the second optional argument \
t \[Dash] an undefined variable \[Dash] returns through it the list of \
options and attributes, ascribed to x, including defaults for its formal \
arguments if they exist. In case of inadmissible argument x the call of \
procedure is returned unevaluated.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"OpenFiles", "::", "usage"}], "=", 
   "\"\<call OpenFiles[] returns the 2\[Dash]element nested list, whose the \
first sublist with the first \\\"read\\\" element contains full paths to the \
datafiles opened on reading whereas the second sublist with the first \
\\\"write\\\" element contains full paths to the files opened on writing in \
the current session. In the absence of such datafiles the procedure call \
returns the empty list, i.e. {}. Whereas the call OpenFiles[x] with one \
actual argument x \[Dash] a datafile classifier \[Dash] returns result of the \
above format relative to the open datafile x irrespective of a format of \
coding of its qualifier. If x defines a closed or nonexistent datafile then \
the procedure call returns the empty list, i.e. {}.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StreamFiles", "::", "usage"}], "=", 
   "\"\<call StreamFiles[] returns the nested list from two sublists, the \
first sublist with the first \\\"in\\\" element contains full paths/names of \
the files opened on the reading while the second sublist with the first \
\\\"out\\\" element contains full paths/names of the datafiles opened on the \
recording. Whereas in the absence of the open datafiles the procedure call \
StreamFiles[] returns \\\"AllFilesClosed\\\".\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PathToFileQ", "::", "usage"}], "=", 
   "\"\<The call PathToFileQ[x] returns True if x defines a potentially \
allowable full path to a directory or a datafile, and False otherwise.\>\""}],
   "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ProcQ", "::", "usage"}], "=", 
   "\"\<The call ProcQ[x] returns the True if x is a procedure and the False \
otherwise.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"$TestArgsTypes", "::", "usage"}], "=", 
   "\"\<The global variable $TestArgsType defined by the procedures \
TestArgsTypes and TestArgsTypes1.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TestArgsTypes", "::", "usage"}], "=", 
   "\"\<Like the Maple system, the Mathematica system doesn't give a \
possibility to test inadmissibility of all actual arguments in a \
block/function/module in a point of its call, interrupting its call already \
on the first inadmissible actual argument. Meanwhile, in view of importance \
of definition of all inadmissible actual arguments only for one pass, the \
TestArgsTypes procedure solving this important enough problem has been \
created. Call of the above procedure TestArgsTypes[x, x[...]] processes a \
procedure x call in way that returns result of a procedure call x[...] in \
case of absence of inadmissible actual arguments and equal number of the \
factual and formal arguments in a point of procedure call x; otherwise \
$Failed is returned. At that through the global variable $TestArgsTypes the \
nested list is returned, whose two-element sublists define the set of \
inadmissible actual arguments, namely: the first element of a sublist defines \
number of inadmissible actual argument while the second element \[Dash] its \
value. At discrepancy of number of formal arguments to number of actual \
arguments through $TestArgsTypes the appropriate diagnostic message is \
returned, namely: \\\"Quantities of formal and factual arguments are \
different \\\". Meanwhile, for simplification of the testing algorithm \
realized by the above procedure it is supposed that formal arguments of a \
certain procedure x are typified by the pattern \\\"_\\\" or by construction \
\\\"Argument_/; Test\\\". Moreover, it is supposed that the unevaluated \
procedure call x is caused by discrepancy of types of the actual arguments to \
the formal arguments or by discrepancy of their quantities only. So, the \
question of testing of the actual arguments is considered at the level of the \
heading of a block/function/module only for a case when their number is \
fixed. If a procedure/function allows optional arguments, their typifying \
assumes correct usage of any expressions as the actual values, i.e. the type \
of the format \\\"x_\\\" is supposed. In this regard at necessity, their \
testing should be made in the body of a procedure/function as it is \
illustrated by useful enough examples. So, at difficult enough algorithms of \
check of the received actual arguments onto admissibility it is recommended \
to program them in the body of blocks/modules what is more appropriate as a \
whole.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TestArgsTypes1", "::", "usage"}], "=", 
   "\"\<Meanwhile, as an expansion of the TestArgsTypes procedure the \
possibility of testing of the actual arguments onto admissibility on \
condition of existence in headings of formal arguments of types  \
{\\\"x__\\\",\\\"x___\\\"} can be considered.The receptions,used in the \
TestArgsTypes1 procedure which is one useful modification of the above \
TestArgsTypes procedure is a rather perspective prerequisite for further \
expansion of functionality of these means.A result of call \
TestArgsTypes1[x,x[...]] is similar to the call TestArgsTypes[x,x[...]] only \
with difference that values of inadmissible actual arguments are given in \
string format.Meanwhile,it must be kept in mind that use by procedures \
TestArgsTypes and TestArgsTypes1 of the global variable $TestArgsTypes \
through which information on the inadmissible actual arguments received by a \
tested block/procedure at its calls is returned,should be defined in the \
user's package that contains definitions of these procedures,i.e.to be \
predetermined,otherwise diagnostic information isn't returned thru it.\>\""}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TestArgsTypes2", "::", "usage"}], "=", 
   "\"\<In some cases the TestArgsTypes2 procedure which is a modification of \
the procedures TestArgsTypes and TestArgsTypes1 is a rather useful means; the \
call TestArgsTypes2[P, y], where P \[Dash] a block, function with the \
heading, or module, and y \[Dash] a nonempty sequence of the actual arguments \
passed to the P, returns the list of the format {True, P[y]} if all arguments \
y are admissible; the call returns the nested list whose elements are \
2-element sublists whose first element defines an actual argument whereas the \
second element defines its admissibility {True, False}; at last, in case of \
discrepancy of quantities of formal and actual arguments the next message is \
returned: \\\"Quantities of formal and factual arguments are different\\\".\>\
\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ProcQ1", "::", "usage"}], "=", 
   "\"\<The ProcQ1 procedure generalizes the ProcQ procedure, first of all, \
in case of the objects of the same name. The previous fragment represents \
source code of the ProcQ1 procedure with  examples of its most typical \
application. The call ProcQ1[x] returns True if the symbol x defines a \
procedural object of the type {Block, Module, DynamicModule} with unique \
definition along with an object consisting of their any combinations with \
different headings (the objects of the same name). Moreover, in case of a \
separate object or an object x of the same name True is returned only when \
all its components is procedural objects in the sense stated above, i.e. they \
have a type {Block, DynamicModule, Module}. Meanwhile, the procedure call \
ProcQ1[x, y] with the 2nd optional argument y \[Dash] an undefinite variable \
\[Dash] thru it returns simple or the nested list of the following format\n\n \
                                                                  {{a1, a2, \
a3,\[Ellipsis], ap}, {b1, b2, b3,\[Ellipsis], bp}}\n\nwhere \
aj\[Element]{True, False} whereas bj\[Element]{\\\"Block\\\", \
\\\"DynamicModule\\\", \\\"Function\\\", \\\"Module\\\"}; at that, between \
elements of the above sublists exists one-to-one correspondence while pairs \
{aj, bj} (j=1..p) correspond to subobjects of the object x according to their \
order as a result of the call Definition[x].\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ProcBMQ", "::", "usage"}], "=", 
   "\"\<The call ProcBMQ[x] returns True if a block or a module x is a real \
procedure in the traditional sense, and False otherwise. In addition, the \
given procedure is oriented only onto single objects of the mentioned type, \
i.e. whose definitions are unique. The call ProcBMQ[x] with one argument \
returns True, if a block or a module x \[Dash] a real procedure in the above \
context, and False otherwise; the procedure call ProcBMQ[x, y] with the \
second optional argument y \[Dash] an undefinite variable \[Dash] returns \
thru it the list of local variables of the block x in string format which \
have no initial values or for which in a body of the block x the assignments \
of values weren't made. We will note, the ProcBMQ procedure is oriented only \
on one-defined objects whose definitions are unique while the message  \
\\\"Object <x> has multiple definitions\\\" is returned on objects x of the \
same name.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RedundantLocals", "::", "usage"}], "=", 
   "\"\<The call RedundantLocals[W] returns the list of redundant local \
variables of a block or a module W, i.e. local variables which have not \
obtained initial values or values in the body of W, or are not names of \
traditional functions (with headings) or of blocks/modules whose definitions \
are in the object W. Meanwhile, and the local variables used as argument at a \
call of one or another function in a body of the object W can be in such \
list. Let's note, the RedundantLocals procedure is focused only on the single \
objects W whose definitions are unique whereas otherwise, the message \
\\\"Object <W> has multiple definitions\\\" is returned. At the same time the \
RedundantLocals procedure quite successfully processes the objects containing \
in the body the definitions of typical functions, modules and blocks.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RedundantLocalsM", "::", "usage"}], "=", 
   "\"\<The RedundantLocalsM procedure expands the RedundantLocals procedure \
onto the objects of the same name. The call RedundantLocalsM[W] on a single \
object W of the type block/module is similar to the call RedundantLocals[W] \
whereas on a traditional function W \\\"Function\\\" is returned; on an \
object W of the same name of type \:0431\:043b\:043e\:043a/\:043c\:043e\:0434\
\:0443\:043b\:044c/\:0444\:0443\:043d\:043a\:0446\:0438\:044f the list of \
applications of RedundantLocals to its subobjects of type block/module and \\\
\"Function\\\" on traditional functions-subobjects is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ProcFuncTypeQ", "::", "usage"}], "=", 
   "\"\<Math\[Dash]language identifies procedures and functions not by their \
names, but by headings, admitting not only the procedures with the same name \
with different headings, but also their combinations with functions. In this \
connection it is very expedient to define some testing procedure that \
determines belonging of an object x to a group {Block, CompiledFunction, \
Function, Module, PureFunction, ShortPureFunction}. As one of similar \
approaches it is possible to offer procedure, whose call ProcFuncTypeQ[x] \
returns the list of format {True, {t1, t2, ... ,tp}} if a simple object x or \
subobjects of an object x of the same name whose name x is coded in string \
format have the types tj from the set {CompiledFunction, PureFunction, \
ShortPureFunction, Block, Function, Module}, otherwise the list of format \
{False, x, \\\"Expression\\\"} or {False, x, \\\"System \\\"} is returned. In \
the case of an object x of the same name a sublist of types {t1, t2, ... ,tp} \
(j=1..p) of subobjects composing x is returned; whereas \\\"System\\\" and \\\
\"Expression\\\" determines a system function x and an expression x \
respectively.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SubsProcs", "::", "usage"}], "=", 
   "\"\<The procedure call SubsProcs[x] returns generally the nested list of \
definitions in string format of all subobjects of the type {Block, Module} \
whose definitions are in the body of an object x of type {Block, Module}. At \
that, the first sublist defines subobjects of Module\[Dash]type, the second \
sublist defines subobjects of Block\[Dash]type. In the presence of only one \
sublist the simple list is returned  while in the presence of the \
1\[Dash]element simple list its element is returned. At lack of subobjects of \
the above type the call SubsProcs[x] returns the empty list, i.e. {} while on \
an object x, different from a block or module, the call SubsProcs[x] is \
returned unevaluated.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SubStrSymbolParity", "::", "usage"}], "=", 
   "\"\<The call of procedure SubStrSymbolParity[x, y, z, d] with four \
arguments returns the list of substrings of a string x, limited by \
one-symbolical strings {y, z} (y \[NotEqual] z); in addition, search of such \
substrings is made from left to right for d = 0 whereas for d=1 the search in \
the string x is made from right to left. Furthermore, the call of procedure \
SubStrSymbolParity[x, y, z, d, t] with fifth optional argument - a positive \
integer t > 0 - provides search in a substring of x which is limited by a \
position t and the end of the string for d = 0, and by the beginning of the \
string and t for d = 1. At receiving of inadmissible actual arguments the \
call of procedure is returned unevaluated, whereas in case of impossibility \
of extraction of the required substrings the call of procedure returns \
$Failed.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SubStrSymbolParity1", "::", "usage"}], "=", 
   "\"\<Meanwhile, in many cases it is quite possible to use the simpler and \
reactive version of the above procedure SubStrSymbolParity, namely the \
procedure, whose call SubStrSymbolParity1[x,y,z] with 3 actual arguments \
returns the list of substrings of a string x limited by the one-symbols \
strings {y, z} (y \[NotEqual] z); in addition, search of such substrings is \
done from left to right end of the string x. In case of lack of such \
substrings the call returns the empty list, i.e. { }.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StrSymbParity", "::", "usage"}], "=", 
   "\"\<The procedure StrSymbParity is a very useful modification of the \
SubStrSymbolParity1 procedure; its call StrSymbParity[S, S1, x, y] returns \
the list, whose elements \[Dash] the substrings of a string S which have \
format S1W and on condition of parity of the minimum number of occurrences of \
symbols x, y (x \[NotEqual] y) into substring W. In a case of lack of such \
substrings or identity of symbols x and y the call returns the empty list, \
i.e. { }.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RedSymbStr", "::", "usage"}], "=", 
   "\"\<The call RedSymbStr[x, y, z] returns the result of replacement of all \
substrings consisting of a symbol y, in a string x onto a symbol or a string \
z. In case of absence of occurrences of y in string x, the call of procedure \
returns the string x without change.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SubCfEntries", "::", "usage"}], "=", 
   "\"\<The procedure call SubCfEntries[x, n, y] generally returns the nested \
list of ListList\[Dash]type, whose elements \[Dash] 2\[Dash]element sublists \
whose first elements define the multiplicity while the second elements define \
the substrings of n length of a string x which have the specified \
multiplicity > 1 of their occurrences into x string. At that, with the \
default argument y = False, overlapping substrings are not treated as \
separate whereas the setting y = True, the SubCfEntries counts substrings \
that overlap as separate.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReduceList", "::", "usage"}], "=", 
   "\"\<The call ReduceList[L,x,z,t] returns the result of reducing of \
elements of a list L that are determined by a separate element x or their \
list to a multiplicity determined by a separate element z or their list. If \
elements of x don't belong to the list L, the procedure call returns the \
initial list L. At that, if Length[z] < Length[x] a list z is padded on the \
right by 1 to the list length x. In addition, the fourth argument t defines \
direction of reducing in the list L (on the left at t = 1 and on the right at \
t = 2).\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ListPosition", "::", "usage"}], "=", 
   "\"\<The simple enough procedure ListPosition expands the standard \
function Position onto the list as its second actual argument. The call \
ListPosition[x, y], where x - a simple list and y - a list of arbitrary \
expressions, returns the nested list whose elements define lists of positions \
of elements of the list y in the list x.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PosSubList", "::", "usage"}], "=", 
   "\"\<The procedure call PosSubList[x, y], where x - a simple list and y - \
a list of arbitrary expressions, returns the nested list whose elements \
define positions of a tuple of elements given by a list y.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ListableQ", "::", "usage"}], "=", 
   "\"\<The call of function ListableQ[x] returns True if an object x has \
Listable-attribute, and False otherwise.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ShortPureFuncQ", "::", "usage"}], "=", 
   "\"\<The call ShortPureFuncQ[x] returns True if x determines a pure \
function in short format, and False otherwise.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ActBFMuserQ", "::", "usage"}], "=", 
   "\"\<A quite natural interest represents the question of existence of the \
user procedures and functions activated in the current session. The solution \
of the given question can be received  by means of the procedure whose \
procedure call ActBFMuserQ[] returns True if such objects in the current \
session exist, and False otherwise; meanwhile, the call ActBFMuserQ[x] \
through optional argument x \[Dash] an undefinite variable \[Dash] returns \
the 2\[Dash]element nested list, whose the first element contains name of the \
user object in string format whereas the second element defines  the list of \
its types in string format respectively.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GroupIdentMult", "::", "usage"}], "=", 
   "\"\<The procedure GroupIdentMult is intended for the grouping of elements \
of a list according to their multiplicity. The call GroupIdentMult[x] returns \
the nested list of the following format, namely:\n{{{n1}, {x1, x2,..., xa}}, \
{{n2}, {y1, y2,..., yb}},..., {{nk}, {z1, z2,..., zc}}}\n where {xi, yj, zp} \
\[Dash] elements of a list x and nt \[Dash] multiplicities corresponding to \
them {j=1..a; j=1..b; p=1..c; t=1..k}. The call GroupIdentMult[{}] returns \
the empty list, i.e. {}.\>\""}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearValues", "::", "usage"}], "=", 
   "\"\<The call ClearValues[x] returns the empty list, by removing from the \
current session all variables having values from the list x; whereas the call \
ClearValues[x, y] with the second optional argument y \[Dash] an arbitrary \
expression \[Dash] returns the empty list too, however such variables are \
only cleared of values and attributes without removal from the current \
session.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearContextVars", "::", "usage"}], "=", 
   "\"\<Unlike the ClearValues function, the function call \
ClearContextVars[x] clears all values, definitions, attributes, messages, and \
defaults associated with symbols having a context x while the function call \
ClearContextVars[x, y] removes the above symbols completely, so that their \
names are no longer recognized in the current session where y \[Dash] an \
arbitrary expression. At that, in both cases the call returns the list of the \
cleared\\removed symbols. If the used context x not belong to the list of \
main contexts of the current session the function call is returned \
unevaluated.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"VarsValues", "::", "usage"}], "=", 
   "\"\<The call VarsValues[x] returns the list of variables in string-format \
that have values from a list x.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ListableC", "::", "usage"}], "=", 
   "\"\<The call ListableC[h] returns the list of attributes of h-object, \
providing the setting of Listable-attribute for h-object (the user\
\[CloseCurlyQuote]s procedure/function or standard function).\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ListAssignP", "::", "usage"}], "=", 
   "\"\<The call ListAssignP[x, n, y] returns the updated value of the list x \
which is based on result of assignment of a single value, or the list of \
values to n-th elements of the list x as which can act one position of the \
list or their list. Moreover, in case lists n and y have different lengths, \
their minimum value is chosen.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Levels", "::", "usage"}], "=", 
   "\"\<The call Levels[x, h] returns the list of all subexpressions for an \
expression x on its all possible levels, whereas through second argument h - \
an undefined variable - the maximal number of levels of the expression x is \
returned.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ListNumericQ", "::", "usage"}], "=", 
   "\"\<The call of function ListNumericQ[x] returns True if x is a numeric \
list, including all its sublists of any nesting level, and False otherwise. \
In addition, instead of the list x the list N[x] is considered.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IntegerListQ", "::", "usage"}], "=", 
   "\"\<The call of function IntegerListQ[x] returns True if x is a integer \
list, including all its sublists of any nesting level, and False otherwise.\>\
\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ElemLevelsL", "::", "usage"}], "=", 
   "\"\<The call ElemLevelsL[x] returns the nested list whose elements are \
2-element lists whose first element defines the nesting level whereas the \
second one - the list of elements of this level with type, different from \
List.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ElemLevelsN", "::", "usage"}], "=", 
   "\"\<The call ElemLevelsN[x] returns the nested list whose elements are \
2-element lists whose first element defines the nesting level whereas the \
second one - amount of elements of this level with type, different from List.\
\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ElemOnLevels", "::", "usage"}], "=", 
   "\"\<Generally, the call ElemOnLevels[x] returns the nested list whose \
elements are the sublists whose the first elements are levels of a nested \
list x while the others \[Dash] elements of this level. In case of lack of \
elements at w\[Dash]level the sublist takes on form {w}; the call \
ElemOnLevels[x] on a simple list x returns {0, x}, i.e. an arbitrary simple \
list has nesting level 0.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ElemsOnLevelList", "::", "usage"}], "=", 
   "\"\<The procedure call ElemsOnLevelList[L] returns the nested list whose \
elements \[Dash] the nested 2\[Dash]element lists, whose first elements are \
nesting levels of a list L whereas the second elements \[Dash] lists of \
elements at these nesting levels. In case of the empty list L, i.e. {}, {} is \
returned.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ListSymbolQ", "::", "usage"}], "=", 
   "\"\<The call of function ListSymbolQ[x] returns True if x is a symbolic \
list,including all its sublists of any nesting level,and False \
otherwise.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SymbolGreater", "::", "usage"}], "=", 
   "\"\<The call of function SymbolLess[x, y] returns True if a symbolic \
expression x is greater than a symbolic expression y; in addition, the \
comparison is done on the basis of their character codes.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SymbolLess", "::", "usage"}], "=", 
   "\"\<The call of function SymbolLess[x, y] returns True if a symbolic \
expression x is less than a symbolic expression y; in addition, the \
comparison is done on the basis of their character codes.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ListExprHeadQ", "::", "usage"}], "=", 
   "\"\<The call of function ListExprHeadQ[x, h] returns True if x is a list \
containing only elements t for which the following relation Head[t]==h takes \
place, and False otherwise.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RemoveNames", "::", "usage"}], "=", 
   "\"\<The call of procedure RemoveNames[] provides the removal from the \
current session of names, whose types are distinct from procedures and \
functions whose definitions have been evaluated in the current session; names \
are removed so, that they more will not be recognizable by the package. The \
call RemoveNames[] along with removal of the above-mentioned names from the \
current session returns the nested 2-element list, whose first element \
defines the list of names of procedures, whereas the second - the list of \
names of functions whose definitions have been evaluated in the current \
session of the package.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RemovePF", "::", "usage"}], "=", 
   "\"\<Mathematica supposes presence of the same objects with various \
headings which identify objects, instead of their names. Standard function \
Definition, and also our procedures DefFunc, Deffunc3, PureDefinition etc. \
allow to receive by name of an object the definitions of all active objects \
in the current session with identical names, but with various headings. In \
view of told, there is quite a specific problem of removal from the current \
session not of all objects with a concrete name, but only the objects with \
concrete headings. The given problem is solved by means of procedure \
RemovePF, whose call RemovePF[x] returns Null, i.e. nothing, providing \
removal from the current session of objects with the headings determined by \
the factual argument x (a heading in string-format or their list). The call \
RemovePF[x] is returned unevaluated if x not defines headings.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RemovePackage", "::", "usage"}], "=", 
   "\"\<The call of procedure RemovePackage[x] returns Null, i.e. nothing, \
providing removal from the current session of the package, defined by a \
context x, including all its exported symbols and accordingly updating the \
lists $Packages, $ContextPath and Contexts[].\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RemoveContext", "::", "usage"}], "=", 
   "\"\<Sometimes, it is expedient to replace a context of means of the user \
package uploaded into the current session. This problem is solved by the \
procedure RemoveContext, whose successful call RemoveContext[w, x, y, z, ...] \
returns nothing, replacing in the current session w context ascribed to means \
{x, y, z, ...} of the user package by the context \\\"Global'\\\". In the \
absence of means {x, y, z, ...} with w context the procedure call returns \
$Failed. In particular, the procedure can be useful enough in case of \
replacing  in the current session of the definitions of the uploaded user \
package, cancelling their contexts.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DeletePackage", "::", "usage"}], "=", 
   "\"\<The procedure DeletePackage is a version of the RemovePackage \
procedure. The procedure call DeletePackage[x] returns Null, i.e. nothing, \
providing removal from the current session of the package, defined by a \
context x, including all its exported symbols and accordingly updating the \
lists $Packages, $ContextPath and Contexts[]. The difference of the \
DeletePackage from RemovePackage is that the symbols defined by the package, \
removes completely, so that their names are no longer recognized in the \
current session.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DelOfPackage", "::", "usage"}], "=", 
   "\"\<Natural addition to the DeletePackage and RemovePackage procedures is \
the DelOfPackage procedure providing removal from the current session of the \
given means of a loaded package. Its call DelOfPackage[x, y] returns the list \
y of means names of a package given by its context x which have been removed \
from the current session. While the call DelOfPackage[x, y, z] with the third \
optional argument z \[Dash] a mx\[Dash]file \[Dash] returns 2\[Dash]element \
list whose the first element defines mx\[Dash]file z, while the second \
element defines the list y of means of a package x that have been removed \
from the current session and have been saved in mx\[Dash]file z. At that, \
only means of y that are contained in a package x will be removed.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PackageQ", "::", "usage"}], "=", 
   "\"\<The call PackageQ[x] returns True if x is a package containing global \
symbols, and False otherwise.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Packages", "::", "usage"}], "=", 
   "\"\<The call Packages[] returns the list of contexts of active actual \
packages, i.e. packages that define global symbols (exports).\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SaveCurrentSession", "::", "usage"}], "=", 
   "\"\<The procedure call SaveCurrentSession[] saves a state of the \
Mathematica current session in the m\[Dash]file \\\"SaveCS.m\\\" with \
returning of the name of a target datafile. While the call \
SaveCurrentSession[x] saves a state of the Mathematica current session in a m\
\[Dash]file x with returning of the name of the target datafile x; at that, \
if a datafile x has not extension \\\"m\\\" then this extension is added to \
the x\[Dash]string.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RestoreCS", "::", "usage"}], "=", 
   "\"\<The procedure call RectoreCS[] restores the Mathematica current \
session that has been previously stored by means of the SaveCurrentSession \
procedure in datafile \\\"SaveCS.m\\\" with returning the Null, i.e. nothing. \
While the call RectoreCS[x] restores the Mathematica current session that has \
been previously stored by means of the procedure SaveCurrentSession in a m\
\[Dash]datafile x with returning the Null, i.e. nothing. In absence of the \
above datafile the procedure call returns $Failed.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DumpSaveP", "::", "usage"}], "=", 
   "\"\<The call DumpSaveP[f, x] is equivalent to the call DumpSave[f, x] if \
x defines a package containing global symbols; otherwise, the call returns \
$Failed.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DumpSave1", "::", "usage"}], "=", 
   "\"\<The successful call DumpSave1[x, y] returns the nested list whose \
first element defines the full path to a receiving datafile x of mx-format \
(if necessary to the datafile is assigned the mx-extension) whereas the \
second element defines the list of objects and/or contexts from the list \
determined by argument y whose definitions were unloaded into the datafile x \
of mx-format. In case of absence of objects (symbols with definitions, and/or \
the contexts which are present at the list defined by the system variable \
$ContextPath) which are defined by argument y, the call DumpSave1 returns the \
$Failed.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DumpSave2", "::", "usage"}], "=", 
   "\"\<At evaluation of definition of a symbol x in the current session it \
will associate with the context of \\\"Global'\\\" which remains at its \
unloading into a mx\[Dash]file by the DumpSave function. Whereas in some \
cases there is a need of saving of symbols in the mx\[Dash]files with other \
contexts. This problem is solved by the procedure, whose call DumpSave2[f, x, \
y] returns nothing, unloading into mx\[Dash]file f the definition of a symbol \
or the list of symbols x that have the context \\\"Global'\\\", with a \
context y. Thus, in the current session the symbols x receive context \
y.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SaveInMx", "::", "usage"}], "=", 
   "\"\<At evaluation of definition of a symbol x in the current session it \
will associate with the context of \\\"Global'\\\" which remains at its \
unloading into a mx\[Dash]file by the DumpSave function. Whereas in some \
cases there is a need of saving of symbols in the mx\[Dash]files with other \
contexts. This problem is solved by the procedure DumpSave2 whereas the \
procedure SaveInMx is more user\[Dash]friendly whose call SaveInMx[x, y, z] \
returns nothing, unloading into mx\[Dash]file x with context z the definition \
of a symbol or the list of symbols y whose definitions have been defined in \
the current session.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CurrentPackageQ", "::", "usage"}], "=", 
   "\"\<The call CurrentPackage[w] returns True, if w is the context for a \
package active in the current session, and False otherwise.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PackageMxCont", "::", "usage"}], "=", 
   "\"\<The procedure call PackageMxCont[x, y] thru the 2nd optional argument \
\[Dash] an undefinite variable y \[Dash] returns the nested list whose first \
element defines the context of x, while the second element determines the \
list of global symbols of the package that are contained in the mx\[Dash]file \
x [33,48]. On mx\[Dash]files without context or local/ global symbols the \
procedure call PackageMxCont[x] returns $Failed or the empty list, i.e. {}, \
accordingly. The procedure PackageMxCont is oriented on platforms Windows XP \
Professional and Windows 7 Professional.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearOut", "::", "usage"}], "=", 
   "\"\<The call ClearOut[x] returns nothing, simultaneously deleting \
Out-paragraphs with numbers determined by a  positive integer or their list \
x.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReplaceOut", "::", "usage"}], "=", 
   "\"\<Successful call ReplaceOut[x, y] returns nothing, at the same time \
carrying out the replacement of contents of existing Out-paragraphs which are \
given by a positive integer or their list x, onto the new expressions defined \
by y-argument. The call presumes parity of number of the replaced \
Out-paragraphs to number of the expressions replacing their current values; \
otherwise, the call of procedure ReplaceOut[x, y] is returned unevaluated. \
Procedure ReplaceOut generalizes the above procedure ClearOut.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GroupNames", "::", "usage"}], "=", 
   "\"\<Procedure GroupNames makes a grouping of the expressions given by \
argument L, according to their types determined by the function Head2; in \
addition, a single expression or their list is coded as argument L. The call \
GroupNames[L] returns the list or the nested list, whose elements are lists, \
whose first element is a type of an object according to the function Head2, \
whereas the others are expressions of the given type. A x name that is \
returned by the procedure call GroupNames[x] belongs to a group defined by \
the procedure call Head2[x].\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DelSuffPref", "::", "usage"}], "=", 
   "\"\<The call DelSuffPref[x, y, n] provides return of the result of \
truncation of a string x by a substring y at the left (n=1), on the right \
(n=2) or from both ends (n=3); otherwise, the string x is returned without \
change.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SubsBstr", "::", "usage"}], "=", 
   "\"\<The call SubsBstr[S, x, y] returns the list of all non-overlapping \
substrings in a string S that are limited by symbols x and y; otherwise, the \
empty list, i.e. {} is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SubsStrLim", "::", "usage"}], "=", 
   "\"\<The call SubsStrLim[x, y, z] returns the list of substrings of a \
string x which are limited by symbols {y, z} provided that such symbols do \
not belong to the given substrings, excepting their ends.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SubsStrLim1", "::", "usage"}], "=", 
   "\"\<The call SubsStrLim1[x, y, z] returns the list of substrings of a \
string x which are limited by symbols {y, z} provided that the given symbols \
or do not belong to the given substrings, excepting their ends, or together \
with their ends have the same number of occurrences of y and z.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SubsList", "::", "usage"}], "=", 
   "\"\<The call SubsList[x, y, z] returns the list of all non-overlapping \
sublists in a list x that are limited by elements y and z; the lists can act \
as elements {y, z}. If any element {y, z} no belongs to x the empty list, \
i.e. {} is returned.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Definition1", "::", "usage"}], "=", 
   "\"\<A lot of functions of Math-language suppose only the objects of types \
{Symbol, String, HoldPattern[Symbol]} as actual arguments, what in some cases \
is rather inconvenient at programming of problems of various purpose. In \
particular, function Definition evidently gives such example. With a view of \
expansion of the standard function onto the types which are distinct from \
above-mentioned ones, the procedure Definition1 is presented, whose the call \
Definition1[x] in string-format returns the definition of an object x, \
\\\"Null\\\" if x is not determined, otherwise $Failed is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Definition2", "::", "usage"}], "=", 
   "\"\<The call Definition2[x] returns the list whose the first element is \
the identifier \\\"System\\\" if a symbol x defines a system function, \
whereas the second element is the list of the attributes, attributed to the \
symbol x. In other cases of a defined symbol x the first element of the \
returned list is the sequence of all definitions in string-format for the \
symbol x whereas the second element of the returned list remains the same as \
it was mentioned earlier. On an undefined x the call Definition2[x] is \
returned unevaluated.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Definition3", "::", "usage"}], "=", 
   "\"\<The call Definition3[x, y] returns the optimum definition of a \
procedure or a function x, whereas through the second argument y \[Dash] an \
undefined variable -  the type of x from the angle of {\\\"Procedure\\\", \
\\\"Function\\\",  \\\"Procedure&Function\\\"} is returned if x is procedure \
or function, on system functions the procedure call returns the list \
{\\\"Function\\\", {Attributes}} whereas thru the second argument y the first \
argument is returned; at inadmissibility of the first argument x the call is \
returned unevaluated, i.e. Definition[x].\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Definition4", "::", "usage"}], "=", 
   "\"\<The call Definition4[x] in a convenient format returns the definition \
of an object x whose name is coded in string format, namely: (1) on a system \
function x its attributes are returned, (2) on the user block, function or \
module the call returns the definition of object x in string format with the \
attributes, options and/or values by default for formal arguments ascribed to \
it (if such are available), (3) the call returns the definition of the object \
x in string format for assignments by operators {\\\":=\\\", \\\"=\\\"}, and \
(4) in other cases the call returns $Failed.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Def", "::", "usage"}], "=", 
   "\"\<The calls of procedures Def[x] and Def1[x] return the pure \
definitions of x-object. Pure definition is a definition of object x without \
attributes (if such attributes exist), that are ascribed to it. Attributes \
remain without change. Functionally identical procedures have various \
implementations, intended for an illustration of different mechanisms of \
implementation.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Def1", "::", "usage"}], "=", 
   "\"\<The calls of procedures Def[x] and Def1[x] return the optimized \
definitions of x-object. Optimized definition is a definition of object x \
without attributes (if such attributes exist), that are ascribed to it. \
Attributes remain without change. In event of an object x of the same name \
the procedure call Def1[x] returns the list of the optimized definitions of \
the object x in string format without the attributes ascribed to it. If x \
defines an unique name, the call returns the optimized definition of the \
object x in string format without the attributes ascribed to it. The name of \
an object x is given in string format; in addition, on unacceptable values of \
argument x $Failed is returned.Functionally identical procedures have various \
implementations, intended for an illustration of different mechanisms of \
implementation.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"OptRes", "::", "usage"}], "=", 
   "\"\<The call OptRes[x, y] returns a result y optimized for the subsequent \
processing that is returned by a function/procedure x.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CsProcsFuncs", "::", "usage"}], "=", 
   "\"\<The call CsProcsFuncs[] returns the list of procedures and functions \
whose definition have been evaluated in the current session.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GlobalToLocal", "::", "usage"}], "=", 
   "\"\<The call GlobalToLocal[x] provides the converting of definition of a \
procedure x into definition of procedure $$$x in which all global variables \
of initial procedure x are included in tuple of its local variables; the \
procedure call returns a name of the procedure activated in the current \
session which has no global variables. Resultant procedure is equivalent to \
the initial procedure provided that the generated values of global variables \
aren't as values of global variables for the current session. Whereas the \
call GlobalToLocal[x, y] with the second optional argument y \[Dash] an \
indefinite variable \[Dash] additionally through it returns the nested list, \
whose the  first element defines the sublist of local variables, and the \
second element defines the sublist of global variables of a procedure \
x.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GlobalToLocalM", "::", "usage"}], "=", 
   "\"\<The call GlobalToLocalM[x] returns Null, i.e. nothing, converting a \
block or a module x into object x of the same type and with the same \
attributes and options in which global variables (if such variables were) of \
the source object receive the status of the local variables. In addition, in \
case of the objects of the same name x the procedure provides correct \
converting.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LocalsGlobals", "::", "usage"}], "=", 
   "\"\<The call LocalsGlobals[x] returns the 2-element nested list whose \
first element defines the list of local variables with initial values (if \
such values exist) in string format whereas the second element defines the \
list of global variables in string format of a procedure (block or module) x.\
\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LocalsGlobals1", "::", "usage"}], "=", 
   "\"\<The call LocalsGlobals1[x] returns the nested 3-element list whose \
first element defines the list of local variables in string format, the \
second one \[Dash] local variables in string format with initial values (if \
such values exist), whereas the third element defines the list of global \
variables in string format of a block or module x. On argument x of type \
different from block/module the procedure call is returned \
unevaluated.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LocalsGlobalsM", "::", "usage"}], "=", 
   "\"\<The procedure LocalsGlobalsM expands the procedure LocalsGlobals1 \
onto a case of the blocks/modules of the same name; the call \
LocalsGlobalsM[x] returns the list of the nested 3-element lists of the \
format similar to the format of results returned by the call \
LocalsGlobals1[x] whose elements are biunique with subobjects x, according to \
their order at the call PureDefinition[x]. On argument x of type different \
from block/module the procedure call is returned unevaluated.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CsProcsFuncs1", "::", "usage"}], "=", 
   "\"\<The call CsProcsFuncs1[] returns the nested list whose elements are \
lists whose the first element defines a procedure or function whose \
definition have been evaluated in the current session, whereas the second \
element defines multiplicity of it, i.e. number of objects of the same name .\
\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Attributes1", "::", "usage"}], "=", 
   "\"\<A lot of functions of Math-language suppose only the objects of types \
{Symbol, String, HoldPattern[Symbol]} as actual arguments, what in some cases \
is rather inconvenient at programming of problems of various purpose. In \
particular, function Attributes evidently gives such example. With a view of \
expansion of the standard function onto the types which are distinct from \
above-mentioned ones, the procedure Attributes1 is presented, whose the call \
Attributes1[x, y, z, ...] on objects different from admissible ones by the \
Attributes function, returns the empty list, i.e. { }, without print of error \
messages, what in a number of cases is more preferably from the point of view \
of processing of erroneous and special situations. While on admissible \
objects x, y, z, ... an the call Attributes1[x, y, z, ...] returns the list \
of the attributes, ascribed to objects x, y, z, ... .\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AttributesQ", "::", "usage"}], "=", 
   "\"\<The call AttributesQ[x] returns True, if x \[Dash] the list of \
admissible attributes of the current version of Mathematica, and False \
otherwise. Moreover, the call AttributesQ[x, y] with the 2nd optional \
argument y \[Dash] an undefined variable \[Dash] returns through y the list \
of elements of the list x which aren't attributes.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ParVar", "::", "usage"}], "=", 
   "\"\<In a whole series of cases it is necessary to execute assignments of \
expressions to variables whose number is beforehand not known and which is \
determined as a result of some calculations, for example, of cyclic \
character. The given problem is solved by simple enough procedure ParVar. The \
call ParVar[x, y] provides the assignment of elements of a list y to the list \
of variables generated on the basis of a symbol x  with return of the list in \
string-format of these variables.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Save1", "::", "usage"}], "=", 
   "\"\<The call of procedure Save1[x, y] saves in a file defined by the \
first actual argument x, definitions of the objects defined by the second \
actual argument y which can be by the name of an active object in the current \
session or by its heading in string-format, or by their combination in the \
form of the list. The successful call of the procedure returns Null; \
otherwise $Failed or unevaluated call is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Save2", "::", "usage"}], "=", 
   "\"\<The function call Save2[x, y] append to a datafile x the definitions \
of the means given by a name or their list y in the format convenient for the \
subsequent processing by a number of means, in particular, by the CallSave \
procedure. The essence of such formatting consists in completion of a \
datafile created by the Save1 function by the separator \\\"\\\\\\\\r \
\\\\\\\\n \\\\\\\\r \\\\\\\\n\\\". The successful function call returns Null, \
i.e. nothing. This function is a rather useful extension of the standard Save \
function [8].\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SysFuncQ", "::", "usage"}], "=", 
   "\"\<The call SysFuncQ[F] returns True if a F-object is a standard \
function of the Mathematica system, and False otherwise.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SysUserSoft", "::", "usage"}], "=", 
   "\"\<Generally, the call SysUserSoft[x] returns the enclosed \
2\[Dash]element list, whose first element contains 2\[Dash]element sublists, \
whose the first element \[Dash] a name in string format of system function, \
and the second element \[Dash] its frequency, whereas the second element of \
the list also contains 2-element sublists, whose the first element \[Dash] a \
name in string format of the user means (Block, Function, Module), and the \
second element \[Dash] its frequency. In absence for x of means of the above \
types the call SysUserSoft[x] returns the empty list, i.e. { }. If the type \
of the actual argument x is different from (Block, Function, Module), the \
call SysUserSoft[x] is returned unevaluated.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExprPatternQ", "::", "usage"}], "=", 
   "\"\<The call ExprPatternQ[x] returns True if an expression x contains \
occurences at least one of the patterns {\\\"_\\\", \\\"__\\\", \\\"___\\\"}, \
and False otherwise.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ProcFuncBlQ", "::", "usage"}], "=", 
   "\"\<The call ProcFuncBlQ[x, y] returns True if x is a function, a \
procedure or a block, and False otherwise. Moreover, at return the True \
through argument y the type of x-object {\\\"DynamicModule\\\", \
\\\"Module\\\", \\\"Function\\\", \\\"PureFunction\\\", \\\"Block\\\"} is \
returned; otherwise, the second argument y remains indefinite. It should be \
noted that this procedure is correctly carried out only on objects of the \
specified type provided that they have the unique definitions, returning \
False otherwise.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ProcFuncBlQ1", "::", "usage"}], "=", 
   "\"\<The ProcFuncBlQ1 procedure can appear as an useful enough extension \
for the testing of objects, its call ProcFuncBlQ1[x, y] returns True if x is \
a procedure, function or block, otherwise False is returned. Moreover, at \
return of True, through argument y \[Dash] an undefinite variable \[Dash] a x\
\[Dash]object type is returned {\\\"DynamicModule\\\", \\\"Module\\\", \
\\\"Function\\\", \\\"PureFunction\\\", \\\"Block\\\"}, otherwise the second \
argument remains undefinite. It should be noted that the above procedure is \
correctly executed both on single objects, and on objects of the same name, \
otherwise False is returned. The following fragment represents source code of \
the ProcFuncBlQ1 procedure with the most typical examples of its \
usage.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BootDrive", "::", "usage"}], "=", 
   "\"\<The call BootDrive[] returns the 2-element list whose first element \
defines the name of a device of initial loading of operational system whereas \
the second element defines the type of operational system. In the absence \
(damage of system or system is more senior than Windows XP) of file \
\\\"boot.ini\\\" of initialization of loading of an operational system, the \
call of procedure returns the $Failed. Procedure BootDrive successfully \
functions in Mathematica of releases 7 - 8 on platform Windows \
{2000|2003|NT|XP} with several operational environments too.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BootDrive1", "::", "usage"}], "=", 
   "\"\<The BootDrive procedure is correct for Windows 2000|2003| NT|XP while \
since Windows 7, it is necessary to use the BootDrive1 function. The call \
BootDrive1[] returns the 3\[Dash]element list, whose first element \[Dash] \
homedrive, the second \[Dash] the system catalog, the third \[Dash] type of \
an operating system. Furthermore, this function can be used for an arbitrary \
operation system, supported by the Mathematica. Meantime the type of an \
operating system in some cases by the call GetEnvironment[] that is used by \
the BootDrive1 is returned incorrectly; in particular, the Windows 7 is \
recognized as the Windows_NT.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtrName", "::", "usage"}], "=", 
   "\"\<The call ExtrName[x, n, p] returns the substring of a string x which \
is limited by a position n on the one hand and includes only symbols which \
are allowable in composition of names of objects. Whereas the third argument \
p defines the direction of extraction of the substring (p=1 - to the right \
and p=-1 - to the left from position p; in addition, the symbol in the \
position p is ignored).\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtrVarsOfStr", "::", "usage"}], "=", 
   "\"\<The call ExtrVarsOfStr[S, t] returns at t = 2 the sorted list and at \
t = 1 the unsorted list of variables in string format that were successfully \
extracted from a string S; in the absence of such variables the empty list is \
returned, i.e. {}. Whereas the call ExtrVarsOfStr[S, t, y] with the 3nd \
optional argument y \[Dash] an arbitrary expression \[Dash] returns the list \
of variables contained in S, without reducing of their frequencies to 1. In \
addition, under a variable is understood an identifier to which a value can \
be appropriated. For correct use of the procedure ExtrVarsOfStr is supposed \
that an expression Expr defined by a string S, is in InputForm-format, i.e. S \
= ToString[InputForm[Expr]].\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BlockFuncModVars", "::", "usage"}], "=", 
   "\"\<The call BlockFuncModVars[x] returns the enclosed 6\[Dash]element \
list, whose the first element \[Dash] the list of the system functions used \
by a block/module x, whose the first element \\\"System\\\", whereas others \
\[Dash] names of system functions in string format; the second element \
\[Dash] the list of the user means used by the block/module x, whose the \
first element \\\"Users\\\" whereas the others define names of means in \
string format; the third element \[Dash] the list of formal arguments of the \
block/module; the fourth element \[Dash] the list of local variables of the \
block/module x in string format; the fifth element \[Dash] the list of active \
global variables of the block/module x in string format; at last, the sixth \
element defines the list of passive global variables of the block/module x in \
string format. Whereas on a function x the call BlockFuncModVars[x] returns \
the enclosed 4\[Dash]element list, whose the first element \[Dash] the list \
of the system functions used by a function x, whose the first element \
\\\"System\\\", whereas others \[Dash] names of system functions in string \
format; the second element \[Dash] the list of the user means used by the \
function x, whose the first element \\\"Users\\\" whereas the others define \
names of means in string format; the third element \[Dash] the list of formal \
arguments of the function x, and the fourth element \[Dash] the list of \
global variables of the function x in string format.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtrNames", "::", "usage"}], "=", 
   "\"\<The call ExtrNames[x] returns the nested 3-element list whose first \
element defines the list of all local variables of a procedure x in \
string-format, the second - the list of local variables of the procedure x in \
string-format for which assignments of expressions by operators {\\\":=\\\", \
\\\"=\\\"} are made in body of the procedure x, while the third element \
defines the list of global variables for which assignments of expressions by \
operators by operators {\\\":=\\\", \\\"=\\\"}  in body of the procedure x \
are made.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SysFuncQ1", "::", "usage"}], "=", 
   "\"\<This function is a modification of the procedure SysFuncQ. The call \
SysFuncQ1[F] returns True if a F-object is a standard function of the package \
Mathematica, and False otherwise.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UnevaluatedQ", "::", "usage"}], "=", 
   "\"\<The call UnevaluatedQ[F, x] returns True if a call F[x] is returned \
unevaluated, otherwise False is returned; in addition, in case of erroneous \
call F[x] the value \\\"ErrorInNumArgs\\\" is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ComplexQ", "::", "usage"}], "=", 
   "\"\<The call ComplexQ[x] returns the True if x is a complex number, and \
the False otherwise.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ListStrQ", "::", "usage"}], "=", 
   "\"\<The call ListStrQ[x] returns True if x is a list whose all elements \
are strings, and False otherwise.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MaxParts", "::", "usage"}], "=", 
   "\"\<The call MaxParts[x] returns the quantity of all parts of an \
expression x.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StringDependQ", "::", "usage"}], "=", 
   "\"\<The call StringDependQ[x, y] returns True if a string x contains \
occurrences of a substring or all substrings, given by a list y, and False \
otherwise. Whereas the call StringDependQ[x, y, z] in the presence of the \
third optional argument \[Dash] an undefined variable \[Dash] through z \
additionally is returned the list of substrings not having occurrences in the \
string x.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StringDependQ1", "::", "usage"}], "=", 
   "\"\<The procedure call StringDependQ1[x, y] returns True if a string x \
contains occurrences of a chain of the substrings determined by a list of \
strings y and in the order determined by their order in the list y, otherwise \
False is returned.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DO", "::", "usage"}], "=", 
   "\"\<The call DO[x, y, k] returns the list of values of cyclic evaluation \
of an expression x on variable k which possesses the values from a list \
Op[y].\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NestListQ", "::", "usage"}], "=", 
   "\"\<The call of function NestListQ[x] returns the True, if x - a nested \
list, and False otherwise. In addition, by the nested list is understood list \
whose all elements are lists.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NestListQ1", "::", "usage"}], "=", 
   "\"\<The call of function NestListQ1[x] returns the True, if x - a nested \
list, and False otherwise. In addition, by the nested list is understood list \
for which at least one element is list.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GotoLabel", "::", "usage"}], "=", 
   "\"\<The call GotoLabel[P] allows to analyse the user block or module P, \
whose definition is active in the current session, for the purpose of formal \
correctness of use by it of Goto-functions and the labels Label corresponding \
to them. The call of the given procedure returns the nested 3-element list, \
whose first element represents the list of all Goto-functions used by the \
block/module P, the second - the list of all labels (without taking their \
multiplicity), and the third element - the list whose sublists define \
functions Goto with labels corresponding to them (in addition, the first \
elements of such sublists are the calls of Goto, whereas multiplicities of \
Goto-functions and Labels are saved).\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SubProcs", "::", "usage"}], "=", 
   "\"\<The procedure call SubProcs[P] returns the 2-element nested list of \
ListList-type whose the first element is the list of headings of \
subprocedures composing a main procedure P of Module-type whereas the second \
element is the list of the generated names of all these subprocedures \
including a main procedure P which are activated in the current session P. \
Between the both lists one-to-one correspondence exists.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SubProcs1", "::", "usage"}], "=", 
   "\"\<The procedure call SubProcs1[P] depending on existence of procedures \
P of the same name but with different headings returns the 2-element nested \
list of ListList-type whose the first element is the heading of procedure \
with name P whereas the second element is number of subprocedures composing a \
procedure P with the given heading. If a procedure P has unique heading then \
simple 2-element list is returned. In other cases $Failed is returned.\>\""}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SubProcs2", "::", "usage"}], "=", 
   "\"\<The call SubProcs2[y] depending on an unique procedure y or of the \
same name with various headings, returns simple or nested list. For the \
returned list or sublists the first element is the procedure y heading, while \
the others \[Dash] definitions in string format of subprocedures of the \
Module type that enter into the y definition. In absence for y of \
subprocedures of the specified type or in the case of type of argument y, \
different from Module, the procedure call SubProcs2[y] returns $Failed. In \
case of the second optional argument z \[Dash] an arbitrary expression \
\[Dash] the call SubProcs3[y, z] returns the similar result with simultaneous \
activation of these subprocedures in the current session.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SubProcs3", "::", "usage"}], "=", 
   "\"\<The call SubProcs3[y] differs from the call SubProcs2[y] by the \
following two moments, namely: (1) as argument y can act both the user block, \
function or module, and (2) the returned list contains the heading in \
string-format of an object y as the first element whereas other element are \
definitions of blocks, functions and modules contained in definition of y. In \
case of the object y of the same name, the nested list is returned, its \
sublists have the format stated above. Thus, the call SubProcs3[y, z] with \
the second optional argument z \[Dash] an arbitrary expression, returning the \
list stated above, at the same time does all objects of the above type, which \
are entered into the object y as active in the current session. If a function \
with heading acts as an object y, its heading is returned only; the similar \
result takes place and in case the object y doesn't contain subobjects of the \
above type whereas on object y of type different from the user block, \
function or module, the call SubProcs3 returns the value $Failed.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SubsProcQ", "::", "usage"}], "=", 
   "\"\<The call SubsProcQ[x, y] returns True if y is a global active \
subobject of an object x of the above type, and False otherwise. But as the \
Math-objects of the given type differ not by names as that is accepted in the \
majority of programming systems, but by headings then through the 3rd \
optional argument - an undefinite variable - the procedure call returns the \
nested list whose sublists as first element contain headings with a name x \
while the second element contain the headings of subobjects corresponding to \
them with a name y. On the first 2 arguments {x,y} of the types, different \
from specified in a procedure heading, the procedure call SubsProcQ[x, y] \
returns False. In principle, on the basis of the above five means {SubProcs \
\[Divide] SubProcs3, SubsProcQ} it is possible to program a number of useful \
enough means of work with expressions of the types {Block, Module}.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NotSubsProcs", "::", "usage"}], "=", 
   "\"\<The Mathematica system allows use of the nested procedures containing \
other procedures of various nesting in its body. Such organization of the \
nested procedures is supposed as correct when the name of each nested \
procedure has to be in the list of local variables of a procedure, which \
directly its contains. In this case by a call of the main procedure the \
access to all its subprocedures is inaccessible, for example, by means of the \
Definition function. For testing of correctness of the above type of any \
procedure of Module-type a procedure has been programmed , whose call \
NotSubsProcs[x, y] returns the list of names in string format of \
subprocedures of a procedure x that don't satisfy to the specified agreement \
and whose definitions are available in the current session after a procedure \
call x. Whereas through the second optional argument y \[Dash] an undefinite \
variable \[Dash] the list of names in string format of all subprocedures of \
the procedure x without their nesting is returned. As an indication of \
correctness of a nested procedure x is the return of the empty list, i.e. {} \
by means of call NotSubsProcs[x]. The NotSubsProcs procedure is intended for \
testing of the nested procedures of Module-type with only one heading, \
however it can be rather simply extended and onto procedures of the same \
name.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SubsStr", "::", "usage"}], "=", 
   "\"\<The call of procedure SubsStr[x, y, h, t] returns result of \
replacement in a string x of occurrences of substrings, formed by means of \
concatenation (on the right, if t=1 or at the left, if t=0) of a substring y \
with strings from a list h, onto the strings from the list h accordingly. In \
case of impossibility of execution of replacement the initial string x is \
returned.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StrOfSymb", "::", "usage"}], "=", 
   "\"\<The function call StrOfSymb[x, y] returns the string composed of \
symbols of a string x which satisfy a pure function y.\>\""}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ProcContent", "::", "usage"}], "=", 
   "\"\<In some cases the certain interest represents a question of \
definition of all means being used by the user block, function or module. \
Procedure ProcContent provides such analysis of an object x activated in the \
current session with correct heading for the purpose of use in its definition \
of the user internal means, and external means, supplied with usage \
information or without it. The call ProcContent[x] returns the nested \
3-element list whose the first element defines the name of a \
block/function/module x, the second \[Dash] the list of names of all external \
blocks, functions or the modules used by object x, and the third \[Dash] the \
list of names of internal blocks, functions or the modules defined in the \
body of x.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CallsInMean", "::", "usage"}], "=", 
   "\"\<The CallsInMean procedure provides the analysis of means of a package \
uploaded into the current session regarding existence in their definitions of \
calls of the means supplied with usages. The procedure call CallsInMean[x] \
returns the 2\[Dash]element list, whose the first element is x \[Dash] the \
symbol defining the means name of a package while the second element \[Dash] \
the list of names of the means that enter in definition of the symbol x. On a \
symbol x, whose context is \\\"System`\\\" or \\\"Global`\\\", the procedure \
call returns $Failed.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CallsInMeansPackage", "::", "usage"}], "=", 
   "\"\<The CallsInMeansPackage procedure that is based on the previous \
procedure provides the analysis of all means of the package given by a \
context x and uploaded into the current session, regarding existence in their \
definitions of calls of the means supplied with references. The procedure \
call CallsInMeansPackage[x] returns the 3\[Dash]element list, whose the first \
element defines the list of names of the means which aren't containing such \
calls, the second element \[Dash] the list of names of means containing such \
calls, and the third element \[Dash] the list returned by the procedure call \
CallsInMean for the means having the maximum number of such calls \
occurrences. On a x context \\\"System`\\\" or \\\"Global`\\\", the procedure \
call returns $Failed.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HeadName", "::", "usage"}], "=", 
   "\"\<The call HeadName[x] returns the name of a heading x in the string \
format provided that the heading is distinguished by procedure HeadingQ or \
HeadingQ1 as a syntactically correct heading, i.e. the call HeadingQ[x] or \
HeadingQ1[x] returns True; otherwise, the function call HeadName[x] will be \
returned unevaluated.\>\""}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HeadName1", "::", "usage"}], "=", 
   "\"\<The procedure call HeadName1[x] returns the heading name of a correct \
x heading, and False otherwise.\>\""}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BitSet1", "::", "usage"}], "=", 
   "\"\<The call BitSet1[n, p] returns the result of setting into positions \
of binary representation of an integer n which are defined by the first \
elements of sublists of a nested list p values {0|1}; in case of non-nested \
list p replacement of value only in a unique position of number n is \
made.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BitGet1", "::", "usage"}], "=", 
   "\"\<The call BitGet1[x, n, p] returns the list of bits in positions of \
binary representation of an integer n, that are defined by a list p; in case \
of an integer p the bit in a position p is returned. Whereas the call \
BitGet1[x, n, p] through a symbol x in addition returns number of bits in \
binary representation of an integer n.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CodeEncode", "::", "usage"}], "=", 
   "\"\<The call CodeEncode[x] returns the coded string x of Latin printable \
ASCII\[Dash]symbols, and vice versa.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CodeEncode1", "::", "usage"}], "=", 
   "\"\<The CodeEncode1 procedure is a rather useful extension of the \
CodeEncode procedure in the event of datafiles of ASCII format. The procedure \
call CodeEncode1[x] is equivalent to a call CodeEncode[x] if x is a string \
consisting of ASCII symbols. While the call CodeEncode1[x] in case of x \
argument defining a datafile consisting of ASCII symbols, returns nothing, \
updating in situ the initial uncoded datafile x onto the coded file x. At \
last, the procedure call CodeEncode1[x] in case of x argument defining a \
coded datafile consisting of ASCII symbols, returns contents of the decoded \
datafile x, at the same time updating in situ a coded file x onto the decoded \
datafile x.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StringPosition1", "::", "usage"}], "=", 
   "\"\<The call StringPosition1[x, y] returns a nested list whose sublists \
define y in string-format along with the starting and ending positions at \
which y appears as a substring of a string x. The call StringPosition1[x, \
{y1, y2, ..., yp}] returns a sorted nested list whose sublists define each of \
yj (j=1..p) in string-format along with the starting and ending positions at \
which yj appear as a substrings of a string x. At absence of occurrences y in \
x the empty list is returned, i.e. {}.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearAllAttributes", "::", "usage"}], "=", 
   "\"\<The call ClearAllAttributes[x, y, z, ...] cancels all attributes of \
symbols {x, y, z, ...}. If to symbols {x, y, z, ...} have been assigned \
values, their names are coded in the string format, i.e. {\\\"x\\\", \
\\\"y\\\", \\\"z\\\", ...}.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DelRestPF", "::", "usage"}], "=", 
   "\"\<For temporary removal from the current session of the user blocks, \
functions and modules the procedure DelRestPF serves. The call \
DelRestPF[\\\"d\\\", x, y, z, ...] returns Null with deleting from the \
current session of the user blocks, functions and modules defined by list {x, \
y, z, ...} whereas the subsequent call DelRestPF[\\\"r\\\"] restores their \
availability in the current session or in other sessions with preservation of \
the options and attributes, ascribed to them, returning Null.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DelRestPF1", "::", "usage"}], "=", 
   "\"\<This procedure is an useful extension of procedure DelRestPF. The \
call DelRestPF1[\\\"d\\\", f, x, y, z, ...] returns Null with deleting from \
the current session of the user blocks, functions and modules defined by list \
{x, y, z, ...} with their saving in a datafile f, whereas the subsequent call \
DelRestPF1[\\\"r\\\", f] restores their availability in the current session \
or in other sessions from the datafile f with preservation of the options and \
attributes, ascribed to them, returning Null.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContOfContext", "::", "usage"}], "=", 
   "\"\<The call ContOfContext[x] returns the nested 2-element list whose \
first element defines the sublist of all names in string-format of software \
of the user package defined by a context x whose definitions received by \
means of function Definition in the current session are returned with the \
context x included into them, whereas the second element defines the sublist \
of all names in string-format of means of the package defined by the context \
x whose definitions received by means of function Definition in the current \
session are returned without the context x. In the absence of the context x \
in the current session $Failed is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SubsDel", "::", "usage"}], "=", 
   "\"\<The call of procedure SubsDel[S, x, y, p] returns the result of \
deleting from a S-string of all substrings which are limited on the right (at \
the left) by substring x and at the left (on the right) by the first met \
symbol in string format of a list y; moreover, search of a y-symbols is made \
to the left (p = -1) or to the right (p = 1). In addition, the deleted \
substrings will contain substring x from one end along with the first symbol \
up to met of y from other end. Furthermore, if not symbols of the list y that \
were not found, then the rest in the string S is deleted.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HeadPF", "::", "usage"}], "=", 
   "\"\<The following procedure serves as an useful enough means at \
manipulating with procedures and functions, its call HeadPF[x] returns \
heading in string format of a block, module or function with a name x \
activated in the current session, i.e. of function in its traditional \
understanding with heading. While on other values of argument x the call is \
returned unevaluated. Meanwhile, the problem of definition of headings is \
actual also in the case of the objects of the above type of the same name \
which have more than one heading. In this case the procedure call HeadPF[w] \
returns the list of headings in string format of the subobjects composing an \
object w as a whole.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Headings", "::", "usage"}], "=", 
   "\"\<The Headings procedure \[Dash] an useful enough expansion of the \
HeadPF procedure in the case of the blocks/functions/modules of the same name \
but with various headings. Generally the call Headings[x] returns the nested \
list whose elements are the sublists defining respectively headings of \
subobjects composing an object x; the first elements of such sublists defines \
the types of subobjects whereas others define the headings corresponding to \
them. On x arguments different from the block/function/module, the procedure \
call Headings[x] is returned unevaluated.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HeadingsPF", "::", "usage"}], "=", 
   "\"\<Generally the procedure call HeadingsPF[] returns the nested list, \
whose elements are the sublists defining respectively headings of functions, \
blocks and modules whose definitions have been evaluated in the current \
session; the first element of each such sublist defines an object type in the \
context of {\\\"Block\\\", \\\"Module\\\", \\\"Function\\\"} while the others \
define the headings corresponding to it. The procedure call returns the \
simple list if any of sublists doesn't contain headings; at that, if in the \
current session the evaluations of definitions of objects of the specified \
three types weren't made, the procedure call returns the empty list. At that, \
the procedure call with any arguments is returned unevaluated. But it must be \
kept in mind that performance of the procedure directly depends on stage of \
the current session when the HeadingsPF procedure has been called and how \
many definitions for the user means of the type {Function, Module, Block} \
were calculated in the current session.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HS", "::", "usage"}], "=", 
   "\"\<The HS[Ltf, Cf, P] procedure has 3 formal arguments allowing to \
define the actual values for: Ltf \[Dash] a local transition function which \
is given by the set of parallel substitutions; Cf \[Dash] an initial finite \
configuration, and P \[Dash] the demanded quantity of copies of Cf. The \
successful conclusion of the analysis prints the initial Cf studied to \
reproducibility, with number of its copies, and quantity of steps, required \
for this purpose while through global variable CFfin is returned a final \
configuration on which P copies was reached.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Predecessors", "::", "usage"}], "=", 
   "\"\<The procedure call Predecessors[Ltf, Co, n] on the basis of a list \
Ltf that defines the local transition function of a 1-dimensional classical \
homogeneous structure, of the size n of its neighbourhood template and an \
initial configuration Co of a finite block of states of elementary automata \
of the structure returns the list of configurations-predecessors for the \
block configuration Co. At that, parallel substitutions (x1x2...xn -> x`1) \
that define the local transition function of the structure in the list Ltf \
are presented by strings of the form \\\"x1x2...xn x`1\\\". The procedure can \
identify existence for a structure of nonconstructability of NCF-type, \
printing the appropriate message.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PredecessorsL", "::", "usage"}], "=", 
   "\"\<The procedure call PredecessorsL[Ltf, Co, n, Cf] on the basis of a \
list Ltf that defines the local transition function of a 1-dimensional \
classical homogeneous structure, of the size n of its neighbourhood template \
and an initial configuration Co of a finite block of states of elementary \
automata of the structure returns the number of configurations-predecessors \
for the block configuration Co, whereas through Cf-argument the list of all \
predecessors is returned. At that, parallel substitutions (x1x2...xn -> x`1) \
that define the local transition function of the structure in the list Ltf \
are presented by strings of the form \\\"x1x2...xn x`1\\\". The procedure can \
identify existence for a structure of nonconstructability of NCF-type.\>\""}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PredecessorsR", "::", "usage"}], "=", 
   "\"\<The procedure call PredecessorsR[Ltf, Co, n, Cf] on the basis of a \
list Ltf that defines the local transition function of a 1-dimensional \
classical homogeneous structure, of the size n of its neighbourhood template \
and an initial configuration Co of a finite block of states of elementary \
automata of the structure returns the number of configurations-predecessors \
for the block configuration Co, whereas through Cf-argument the list of all \
predecessors is returned. At that, parallel substitutions (x1x2...xn -> x`1) \
that define the local transition function of the structure in the list Ltf \
are presented by strings of the form \\\"x1x2...xn x`1\\\". Its difference \
from the procedure PredecessorsL is considered in the above books. The \
procedure can identify existence for a structure of nonconstructability of \
NCF-type.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NcfQ", "::", "usage"}], "=", 
   "\"\<The procedure call NcfQ[Ltf, S, t] returns True, if a finite block \
configuration S is the NCF in a classical structure 1\[Dash]HS with local \
transition function, defined by the list of parallel substitutions Ltf, and \
in alphabet A={0,1,...,t} (t \[LessEqual] 9); otherwise the procedure call \
returns False.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MinNCF", "::", "usage"}], "=", 
   "\"\<The procedure call MinNCF[Ltf, n] returns the minimal block with NCF \
for a classical binary structure 1\[Dash]HS with the local transition \
function, defined by the list of parallel substitutions Ltf; in addition, n \
defines a predictable size of minimal NCF; furthermore, it is supposed that \
the structure possesses the NCF nonconstructability.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NfToLtf", "::", "usage"}], "=", 
   "\"\<The procedure NfToLtf has an auxilary character; its call NfToLtf[p, \
n] (p \[Dash] length of neighbourhood template, n \[Dash] an integer < 2^2^m) \
returns the list of parallel substitutions defining a local transition \
function for binary 1\[Dash]HS with a discriminating number n. Note, the \
procedure NfToLtf along with use for the problem considered here can be a \
rather useful in a number of other problems of experimental study of binary 1\
\[Dash]HS.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ComposeGTF", "::", "usage"}], "=", 
   "\"\<The procedure call ComposeGTF[g] returns the 2\[Dash]element list, \
whose first element defines the neighbourhood template size and the second \
defines the discriminating number of GTF that is result of composition of two \
or more global transition functions, whose the local transition functions are \
determined by neighbourhood template sizes {n1,...,nk} and discriminating \
numbers {m1, ..., mk} respectively. In addition, in the call ComposeGTF[g] \
the pairs {nj,mj} (j=1..k) are used as argument g, i.e. ComposeGTF[n1, \
m1,...,nk, mk]; number of such pairs should be at least two. Meanwhile, if \
the procedure call contains odd number of actual arguments (as the last \
argument can be used an arbitrary expression) the list of parallel \
substitutions defining the LTF of the resulting GTF is returned. The \
procedure ComposeGTF processes the basic especial and erroneous situations.\>\
\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GtfMod2", "::", "usage"}], "=", 
   "\"\<The call GtfMod2[n] returns the discriminating number of a structure \
1\[Dash]HS with LTF \[Sigma](n)=\[CapitalSigma]j xj (mod 2); \
xj\[Element]{0,1}; j=1..n.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CFsequences", "::", "usage"}], "=", 
   "\"\<The procedure call CFsequences[Co, A, Ltf, n] prints the sequence of \
configurations generated by a 1\[Dash]CA with alphabet of states A = {0,1, \
..., p} (p = 1..9), local transition function Ltf from a finite configuration \
Co given in string format for n steps of the automaton. At the same time, a \
function of the kind F[x, y, z, ..., t] := x*, and the list of substitutions \
of the kind \\\"xyz...t\\\" \[Dash]> \\\"x*\\\" {x, x*, y, z, ..., t}\!\(\*
StyleBox[\"\[Element]\",
FontSize->14]\)A can act as the third argument Ltf. The procedure processes \
basic mistakes arisen at encoding an initial configuration Co, an alphabet A \
and/or a local transition function Ltf, returning $Failed with output of \
strings with the appropriate messages.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GtfMod2Q", "::", "usage"}], "=", 
   "\"\<The procedure call GtfMod2Q[n, m] returns True if composition \
\[Tau]1(n)\[Tau]2(m) of two 1\[Dash]dimensional GTF with LTF of the above \
form is a GTF \[Tau](n+m\[Dash]1) with LTF of the same form, and False \
otherwise.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FunctionToRules", "::", "usage"}], "=", 
   "\"\<In some cases at computer research of 1\[Dash]CA it is preferable to \
define their local transition functions not functionally in the form Ltf[x_, \
y_, z_, ...] := x*, but in the form of the list of parallel substitutions of \
the format \\\"xyz ... \\\" \[Dash]> \\\"x*\\\". The given problem is solved \
by a simple enough function, whose call FunctionToRules[x, A] returns the \
list of parallel substitutions of the above format on the basis of a function \
x and alphabet A = {0, ..., n} (n = 1..9).\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SystemQ", "::", "usage"}], "=", 
   "\"\<The call SystemQ[S] returns True if an object with name S is system \
object, i.e. is determined by package Mathematica, and False \
otherwise.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SysFunctionQ", "::", "usage"}], "=", 
   "\"\<The procedure call SysFunctionQ[x] returns True if x determines a \
function of the Mathematica language, and False otherwise.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StringMultiple", "::", "usage"}], "=", 
   "\"\<The procedure call StringMultiple[s, p] with two arguments returns a \
string \[Dash] result of p\[Dash]fold concatenation of a string s. Whereas \
the call StringMultiple[s, p, h] on three arguments (3-rd an arbitrary \
expression) returns the result of p\[Dash]fold concatenation of a string s \
parted by a string h. In case of receiving of an inadmissible tuple of actual \
arguments the call of procedure is returned unevaluated.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StringMultiple1", "::", "usage"}], "=", 
   "\"\<The procedure call StringMultiple1[s, p] returns the string \[Dash] \
result of p\[Dash]fold concatenation of a string s. The procedure is a simple \
variant of the StringMultiple procedure.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NbCallProc", "::", "usage"}], "=", 
   "\"\<The call NbCallProc[x] returns Null, i.e. nothing, over-activating \
the definition of a procedure/function x in the current session, whose \
definition was in a nb-file loaded and was previously activated in the \
current session.It is necessary to note, that the call of procedure \
NbCallProc[x] over-activates all definitions of procedures/functions with an \
identical name x and with various headings in the current session.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ListStrList", "::", "usage"}], "=", 
   "\"\<The call of procedure ListStrList[x] on a list x = {a, b, ...} \
returns a string s of the format \\\"ahbh...\\\", whereas x = ListStrList[s], \
where h = FromCharacterCode[2]. In case of absence in a s-string of the \
h-symbol the call ListStrList[s] returns the string s. So, the calls of \
procedure ListStrList operate by principle of the switch.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"OP", "::", "usage"}], "=", 
   "\"\<The procedure call OP[x] returns the list of atomic elements \
composing an expression x.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Op", "::", "usage"}], "=", 
   "\"\<The procedure call Op[x] extracts operands from an expression x. The \
procedure is an analog of built-in function of Maple accurate within \
axiomatics of both packages.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UnDefVars", "::", "usage"}], "=", 
   "\"\<The call UnDefVars[x] returns the list of all independent variables \
in an arbitrary expression x.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UnDefVars1", "::", "usage"}], "=", 
   "\"\<The call UnDefVars1[x] returns the list of all independent variables \
in string format in an arbitrary expression x.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Sequences", "::", "usage"}], "=", 
   "\"\<The function Sequences[x] generalizes the standard function \
Sequence[x], allowing a list {a, b, c, ...} as an actual argument x and \
returning Sequence[a, b, c, ...].\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Sq", "::", "usage"}], "=", 
   "\"\<The function Sq[x] is a modification of the above function \
Sequences[x].\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ProtectedQ", "::", "usage"}], "=", 
   "\"\<The call ProtectedQ[x] returns the True if x has attribute Protected, \
and the False otherwise.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExprOfStr", "::", "usage"}], "=", 
   "\"\<The call ExprOfStr[w, m, n, L] returns the result of extracting from \
a string w, limited by its m-th position and the end, of the first correct \
expression on condition that search is made to the left (n = -1)/to the right \
(n = 1) from the given position and a symbol following or in front of a found \
expression should belong to a list L. The result of the procedure call is \
returned in string-format; at absence of a correct expression $Failed is \
returned, while the call on inadmissible actual arguments is returned \
unevaluated.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExprOfStr1", "::", "usage"}], "=", 
   "\"\<The call ExprOfStr1[x, n, p] returns a substring minimal on length of \
a string x in which the boundary element is a symbol in n-th position of the \
string x containing correct expression. In addition, search of such substring \
is made to the right from n-th position and prior to the end of the string x \
at p=1, and to the left from n-th position of the string x and prior to the \
beginning of the string x at p=-1. In case of absence of such substring the \
call of procedure ExprOfStr1[x, n, p] returns $Failed.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IndexedQ", "::", "usage"}], "=", 
   "\"\<The call IndexedQ[Quiet[x]] returns the True if x is an indexed \
expression, and the False otherwise.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IndexQ", "::", "usage"}], "=", 
   "\"\<The call IndexQ[x] returns True if x given in string-format is an \
indexed expression; otherwise, False is returned. In addition, under the \
indexed is understood any expression in a reduced form which ends with the \
index bracket \\\"]]\\\".\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Index", "::", "usage"}], "=", 
   "\"\<The call Index[Quiet[x]] returns the index of an indexed expression \
x; otherwise the call is returned unevaluated.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Indices", "::", "usage"}], "=", 
   "\"\<The call Indices[x] returns the index part of an indexed expression \
x, given in string-format; otherwise, the call is returned \
unevaluated.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ListStrToStr", "::", "usage"}], "=", 
   "\"\<Procedure ListStrToStr represents indubitable interest in work with \
lists in the string format, more precisely, the call of procedure \
ListStrToStr[x] with single factual argument x where argument x has format \
{\\\"a\\\", \\\"b\\\", \\\"c\\\",...}, converts \:0445 into string of the \
format \\\"a, b, c, ... \\\"; if the procedure call uses any additional \
expression p as the second argument, the call returns a string of the format \
\\\"abcd...\\\".\>\""}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExprQ", "::", "usage"}], "=", 
   "\"\<The procedure ExprQ provides testing of a string construction W for \
presence in it of a correct expression; in addition, not a substring of W \
(substring as an expression), but a string W is completely considered. \
Successful call of ExprQ[W] returns True; otherwise, False is \
returned.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Nvalue", "::", "usage"}], "=", 
   "\"\<The procedure call Nvalue[w] returns the list of global names to \
which in the current session the value w has been assigned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Nvalue1", "::", "usage"}], "=", 
   "\"\<The procedure Nvalue1 is an extension of functionalities of earlier \
presented procedure Nvalue. The call of procedure Nvalue1[x] returns the list \
of names of variables in string-format for which in the current session a \
value x had been assigned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ProcsAct", "::", "usage"}], "=", 
   "\"\<The procedure call ProcsAct[] returns the nested 5-element list in \
which the sublists as the first element define types of objects in the \
context of \\\"Block\\\", \\\"Module\\\", \\\"DynamicModule\\\", \\\"Function\
\\\" and \\\"Others\\\", whereas other elements of sublists define names in \
string format of the user objects that have been activated in the current \
session and have the appropriate type. The user objects can be activated by \
means of immediate evaluations of their definitions or by mediated activation \
by the user packages containing them.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RemProcOnHead", "::", "usage"}], "=", 
   "\"\<The successful call of the procedure RemProcOnHead[x] returns \
\\\"Done\\\", having removed from the current session a procedure/function or \
their list with heading or accordingly with list of the headings x that are \
given in the string format; at that, on inadmissible factual argument x the \
procedure call returns $Failed or is returned unevaluated.\nAt the same time, \
the remaining subobjects with the name of the processed object x save options \
and attributes, except in the case when the object x is removed completely. \
At that, it is necessary to do two remarks, namely: (1) the means of this \
fragment which are used as examples have only formally correct code, no more, \
and (2) a heading in the procedure call RemProcOnHead[x] is coded according \
to the format ToString1[x], as the following example illustrates:\n\n\
In[2564]:= ToString1[F[x_/;SameQ[x,\\\"avz\\\"],y_]]\nOut[2564]= \\\"F[x_ /; \
x === \\\"avz\\\", y_]\\\".\>\""}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RemProcOnHead1", "::", "usage"}], "=", 
   "\"\<Procedure RemProcOnHead1 is an extension of the above procedure \
RemProcOnHead onto case of existence of attributes for an object with heading \
x. The call RemProcOnHead1[x] returns \\\"Done\\\", having removed from the \
current session a separate block/function/module with heading x or \
blocks/functions/modules with the headings determined by the list x, \
irrespective of existence of attributes at object with the name HeadName[x]. \
The procedure call on the heading of an inactive object returns \\\"Done\\\" \
also with output of the corresponding message. In addition, the remaining \
subobjects with name HeadName[x] keep options and attributes, excepting the \
case when the object with name HeadName[x] is removed completely.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LocObj", "::", "usage"}], "=", 
   "\"\<The call LocObj[x] returns the three-element list, whose first \
element defines an object x, the second defines its type in the context of \
{\\\"Module\\\", \\\"SFunction\\\" (system function), \\\"Function\\\", \
\\\"Expression\\\"}, whereas the third \[Dash] its initial location in the \
context of {\\\"Global`\\\" \[Dash] the current session, \\\"System`\\\" \
\[Dash] library or kernel of Mathematica, and \\\"Context\\\" \[Dash] a \
system or user package, which is associated with the Context and is loaded \
into the current session, and contains the definition of the object \
x}.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FileExistsQ1", "::", "usage"}], "=", 
   "\"\<The call of procedure FileExistsQ1[x] with one actual argument \
returns the True if x defines a real datafile in system of directories of a \
computer, and False otherwise; whereas the call FileExistsQ1[x, y] in \
addition through 2-nd actual argument returns the list of full paths to the \
found datafile x if the basic result of the call is True.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RestoreDelPackage", "::", "usage"}], "=", 
   "\"\<The RestoreDelPackage procedure restores the packages removed by Del \
command of Ms Dos system, and by our DeleteFile1 function from the Recycler \
directory. The successful call RestoreDelPackage[F, \\\"Context'\\\"], where \
\[Dash] the first argument F defines a name of datafile of the format \
{\\\"cdf\\\", \\\"m\\\", \\\"mx\\\", \\\"nb\\\"} which is subject to \
restoration, whereas the second argument defines a context associated with \
the package, returns the list of full paths to the restored datafiles, at the \
same time with deleting from the Recycler directory of the restored datafiles \
with the demanded package.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RestoreDelFile", "::", "usage"}], "=", 
   "\"\<The successful call RestoreDelFile[F, r], where the first argument F \
defines the name of a datafile or their list that are subject to restoration \
whereas the second argument determines the name of a target directory or full \
path to it for the restored datafiles returns the list of paths to the \
restored datafiles; at the same time, the deleting of the restored files from \
the directory Recycler Bin isn't done. In the absence of the requested files \
in the directory Recycler Bin the procedure call returns the empty list, i.e. \
{}. It should be noted that only nonempty datafiles are restored. If the \
second argument r defines a directory name in string format, but not the full \
path to it, a target directory r is created in the active directory of the \
current session.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ListOp", "::", "usage"}], "=", 
   "\"\<The procedure call ListOp[x, y, z] returns the list whose elements \
are results of application of a procedure/function z to the corresponding \
elements of lists x and y; in addition, in case of various lengths of the \
given lists the described procedure is applied to both lists within the \
minimal length of lists, leaving other elements of the greater list without \
change.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ListsAssign", "::", "usage"}], "=", 
   "\"\<The package does not support the assignments such as x = y in a case \
of different lengths of lists x and y whereas this operation is supported by \
the call ListsAssign[x, y], returning the renewed list x. In addition, the \
procedure processes the erroneous and especial situations conditioned by \
assignments x = y.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Avg", "::", "usage"}], "=", 
   "\"\<Procedure Avg is internal, i.e. the procedure call Avg[] is \
meaningful only in the body of other block or module, returning the list of \
nesting {1|2}, whose elements define or local variables in string-format of \
the block/module external in relation to Avg, or 2-element lists whose first \
elements define local variables in string-format of external procedure \
whereas the second ones - their initial values in string format; in addition, \
lack of initial value is coded by the symbol \\\"None\\\". At absence for the \
external block/module of local variables the procedure call Avg[] returns the \
empty list, i.e. {}. The call Avg[] outside a block/module doesn't make \
special sense, returning the list of the above format  for two local \
variables of the Avg procedure.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NestQL", "::", "usage"}], "=", 
   "\"\<The procedure call NestQL[L] returns the True if L is the nested \
list; otherwise, the False is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Tuples1", "::", "usage"}], "=", 
   "\"\<The procedure call Tuples1[A, n] returns the list of all possible \
tuples in string format of length n, composed from symbols of an alphabet \
A.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SelectPos", "::", "usage"}], "=", 
   "\"\<The SelectPos procedure provides the choice of elements from a list \
according to the given positions. The call SelectPos[x, y, z] returns the \
list of elements of a list x, whose positions are different from elements of \
a integer list y at z = 1, while at z = 2 the list of elements of the list x \
whose positions coincide with elements of the integer list y is \
returned.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ActRemObj", "::", "usage"}], "=", 
   "\"\<The procedure call ActRemObj[x, y] depending on value {\\\"Act\\\", \
\\\" Rem\\\"} of the second factual argument deletes from the current session \
of the package an object defined by its name in string-format, or activates \
it in the current session or in other session accordingly. Successful removal \
of  an object from the current session of the package returns the value \
\\\"Remove\\\" whereas its restoration in the current session of the package \
returns the value \\\"Activate\\\". If the file containing definition of a \
removed object, has not been found in the user home directory $HomeDirectory \
the procedure call ActRemObj is returned unevaluated. In addition, on \
inadmissible argument x the call ActRemObj[x, y] returns $Failed.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AtomicQ", "::", "usage"}], "=", 
   "\"\<The procedure call AtomicQ[x] yields True if x is an expression which \
cannot be divided into subexpressions, and yields False otherwise.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StringTake1", "::", "usage"}], "=", 
   "\"\<The procedure call StringTake1[x, y] returns the list of substrings \
of a string x which are partitioned by substrings y; any expression or their \
list can be as an argument y.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StringTake2", "::", "usage"}], "=", 
   "\"\<The procedure StringTake2[x, y] is functionally equivalent to the \
procedure StringTake1 but it realizes  other algorithm. At that, for \
StringTake2 the strings should not be included in the second argument.\>\""}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StringTake3", "::", "usage"}], "=", 
   "\"\<The procedure call StringTake3[x, y] returns the list of substrings \
of a string x which are partitioned by substrings y; any expression or their \
list can be as an argument y.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Decomp", "::", "usage"}], "=", 
   "\"\<The call Decomp[Expr] returns the list of atomic components composing \
an expression Expr, including names of variables, functions, procedures, \
operations along with constants.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ProcCalls", "::", "usage"}], "=", 
   "\"\<Objects of type {Block, Function, Module}, and in combination with \
objects of other types can be as objects of the same name; in whole series of \
cases at calculations with such objects especial or erroneous situations \
arise. For removal from the objects of the same name of subobjects of types, \
different from {Block, Function, Module} the quite simple procedure can be \
useful whose the call ProcCalls[g] returns Null, i.e. nothing, removing from \
the sublist of the object g of the same name the subobjects of types, \
different from {Block, Function, Module}. Argument g is coded in string \
format.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ProcCalls1", "::", "usage"}], "=", 
   "\"\<The ProcCalls1 procedure is a rather interesting analog of the \
ProcCalls procedure. The given procedure is based on the TestDefBFM \
procedure; the call ProcCalls1[w] returns Null, i.e. nothing, removing from \
the sublist of an object w of the same name the subobjects of types, \
different from {Block, Function, Module}. At that, the argument w is coded in \
string format.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ScanLikeProcs", "::", "usage"}], "=", 
   "\"\<In addition to the procedure ProcCalls with the purpose of definition \
of the same procedures of the current session of the package rather simple \
procedure is intended, whose call ScanLikeProcs[] returns the list of all \
same procedures which have been activated in the current session whereas as a \
result of call ScanLikeProcs[W] in addition through variable W the list of \
headings of similar procedures in string-format is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TestDefBFM", "::", "usage"}], "=", 
   "\"\<The procedure call TestDefBFM[x, y] returns True if a string x \
contains the definition of an object of type {Block, Function, Module} with a \
name y given in string format, and False otherwise.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Default1", "::", "usage"}], "=", 
   "\"\<The call Default1[x, y, z] returns Null, i.e. nothing, providing \
setting of default values, defined by a list z, for arguments of a \
function/procedure x, whose positions are defined by a list y of \
PosIntList-type.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Defaults", "::", "usage"}], "=", 
   "\"\<The procedure Defaults[G, y] for any subtuple of a tuple of formal \
arguments of a block, a function or a module G which is defined by a \
2-element list y (the first element \[Dash] number of position of an \
argument; the second element \[Dash] an expression) provides the setting of \
an expression as value by default for a formal argument. For several values \
by default the list y has ListList-type, whose sublists have the specified \
format. Procedure successfully works with objects of the given type of the \
same name, processing only the first subobject from the list of the \
subobjects returned by the call Definition[G]. The successful call returns \
Null, i.e. nothing, whereas in special situations the call returns $Failed or \
is returned unevaluated.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefaultsM", "::", "usage"}], "=", 
   "\"\<The procedure DefaultsM extends the above procedure Defaults onto \
case of objects of the same name. The procedure DefaultsM[G, y] for any \
subtuple of a tuple of formal arguments of a block, a function or a module G \
which is defined by a 2-element list y (the first element \[Dash] number of \
position of an argument; the second element \[Dash] an expression) provides \
the setting of an expression as value by default for a formal argument. For \
several values by default the list y has ListList-type, whose sublists have \
the specified format. Procedure successfully works with objects of the given \
type of the same name, processing all subobjects from the list returned by \
the call Definition[G]. The successful call returns Null, i.e. nothing, \
whereas in special situations the call is returned unevaluated.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefaultValues1", "::", "usage"}], "=", 
   "\"\<The call DefaultValues1[x] returns the list of format {{N1} :> \
V1,..., {Np} :> Vp}, where Nj and Vj (j=1..p) - numbers of positions of \
formal arguments in a function/procedure x along with default values, \
ascribed to them, accordingly, irrespective of the method of their \
definition; in addition, the priority is taken into account (the setting of \
default values in heading of functions/procedures has the highest \
priority).\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefaultValues2", "::", "usage"}], "=", 
   "\"\<The following DefaultValues2 procedure to a certain degree extends \
the DefaultValues1 procedure, its call DefaultValues2[x, y, z], where y \
\[Dash] the list of the positions of arguments in the heading of x and z \
\[Dash] the list of default values corresponding to them, returns the list of \
format {{N1} \[Dash]> V1, ..., {Np} \[Dash]> Vp}, where Nj and Vj (j=1..p) \
\[Dash] numbers of positions of formal arguments in a function/procedure x \
and default values, ascribed to them, accordingly, irrespective of the method \
of their definition; at that, the priority is taken into account (the \
settings of default values in heading of the functions/procedures have the \
highest priority). The procedure call does in the current session x as an \
active object of the above type with the new default values with saving of \
options and attributes of old x object.\>\""}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MapInSitu", "::", "usage"}], "=", 
   "\"\<The call MapInSitu[x, y] returns the result of evaluation Map[x, y]; \
in addition a factual argument y is updated in situ. The procedure demands to \
code argument y in string format. The procedure MapInSitu1[x, y] is a \
modification of the above procedure, updating y in situ also, however every \
time for argument y must be used the same identifier y.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MapInSitu1", "::", "usage"}], "=", 
   "\"\<The procedure MapInSitu1[x, y] is a modification of the above \
procedure MapInSitu, updating y in situ also, however every time for argument \
y must be used the same identifier y.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MapInSitu2", "::", "usage"}], "=", 
   "\"\<The procedure MapInSitu2[x, y] is a modification of the above \
procedures MapInSitu and MapInSitu1, updating y in situ also, however instead \
of factual argument y is used an expression but not an identifier y to which \
this expression was ascribed. In addition, all identifiers for which in the \
current session the above expression was ascribed obtain value Map[x, y]; it \
constitutes the essence of updating in situ.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MemberQ1", "::", "usage"}], "=", 
   "\"\<The procedure call MemberQ1[L, x, y] returns the True if x is an \
element of any level of nesting of a list L (provided that a non-nested list \
has level of nesting 0); otherwise, the False is returned. In case of return \
True through the third argument y the list of levels of the list L which \
contain occurrences of x-value is returned. The procedure MemberQ1 in the \
certain degree expands the standard function MemberQ onto the nested lists.\>\
\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MemberQ2", "::", "usage"}], "=", 
   "\"\<The procedure call MemberQ2[L, x, y] returns the True if x is an \
element of a list L; otherwise, the False is returned. In case of return the \
True through the third argument y the number of occurences of a x-expression \
into list L is returned. The procedure MemberQ2 in the certain degree expands \
the standard function MemberQ onto the number of occurrences of x-expressions \
into lists.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MemberQ3", "::", "usage"}], "=", 
   "\"\<The call MemberQ3[x, y] returns True if all elements of the list y \
belong to a list x, however without taking into consideration the nesting, \
and False otherwise. Whereas the call MemberQ3[x, y, t] with the third \
optional argument \[Dash] an arbitrary expression \[Dash] returns True, if \
the list y is a sublist of the list x on any nesting level, and False \
otherwise.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MemberQ4", "::", "usage"}], "=", 
   "\"\<The call MemberQ4[x, y] returns True if at least one element of a \
list y or an element y is a part of the list x, and False otherwise. Whereas \
the call MemberQ4[x, y, z] where z \[Dash] optional positive integer \[Dash] \
returns the True if at least z elements of a list y are a part of the list x, \
and False otherwise.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MemberT", "::", "usage"}], "=", 
   "\"\<The procedure call MemberT[L, x] returns the total number of \
occurences of an expression x into a list L.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MemberQL", "::", "usage"}], "=", 
   "\"\<The call MemberQ[x,y] returns True if an expression y belongs to any \
nesting level of a list x, and False otherwise. Whereas the call with the \
third optional argument z \[Dash] an undefinite variable \[Dash] in addition \
through z returns the list of ListList\[Dash]type, the first element of each \
its sublist defines a level of the list x whereas the second defines quantity \
of elements y on this  level provided that the main output is True, otherwise \
z remains undefinite.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MinusList", "::", "usage"}], "=", 
   "\"\<The call of procedure MinusList[x, y] returns the result of \
subtraction of a list y from a list x which consists in removal from the list \
x of all occurrences of elements from the list y.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MinusLists", "::", "usage"}], "=", 
   "\"\<The call MinusLists[x, y, 1] returns result of subtraction of a list \
y from a list x that consists in deletion in the list x of all occurrences of \
elements from the list y. Whereas the  call MinusLists[x, y, 2] returns \
result of subtraction of a list y from a list x which consists in parity \
removal from the list x of entries of elements from the list y, i.e. the \
number of the elements deleted from the list x strictly correspond to their \
number in the list y.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HelpPrint", "::", "usage"}], "=", 
   "\"\<The call of procedure HelpPrint[n] prints information in \
string-format concerning all means of the user package. The mechanism of use \
of the procedure is simple enough, namely: during work with Mathematica in \
mode of the document on a certain step, in particular, Out[n] into the \
current session is loaded a package which is located in a datafile of the \
format {\\\"cdf\\\", \\\"m\\\",  \\\"mx\\\", \\\"nb\\\"} or is reloaded \
already loaded package, then the call HelpPrint[n+1] prints the above \
information, prenex by a context associated with the package.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HelpBasePac", "::", "usage"}], "=", 
   "\"\<The function call HelpBasePac[w] prints the contents of help database \
of all means provided by usages, of a package with context w on condition of \
its availability in the current session. Whereas the call HelpBasePac[w, p], \
where p \[Dash] an arbitrary expression, additionally prints the definitions \
of all such means of the package w.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FreeQ1", "::", "usage"}], "=", 
   "\"\<The simple procedure FreeQ1 enough essentially extends the standard \
function FreeQ, providing the extended testing of occurrences in an \
expression of subexpressions. FreeQ1[x, y] returns True if an expression x \
does not contain subexpressions y; otherwise, False is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FreeQ2", "::", "usage"}], "=", 
   "\"\<The function FreeQ2 expands the standard function FreeQ onto the list \
as the second actual argument. The call FreeQ2[x, p] returns True if an \
expression x do not contain a subexpression p or subexpressions from a list \
p; otherwise, False is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MinusList1", "::", "usage"}], "=", 
   "\"\<The call of procedure MinusList1[x, y] returns result of subtraction \
of the list y from the list x which consists in parity removal from the list \
x of all occurrences of elements from the list y.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ModLibraryPath", "::", "usage"}], "=", 
   "\"\<The procedure call ModLibraryPath[x] extends the list, defined by the \
global variable $LibraryPath onto subdirectory x with the user dynamical \
library. The procedure call returns the Null, i.e. nothing, with saving of \
attributes of variable $LibraryPath.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ListToString", "::", "usage"}], "=", 
   "\"\<The procedure call ListToString[L] returns the result of converting \
into an integrated string of all elements of a list L, disregarding its \
nesting.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtProgExe", "::", "usage"}], "=", 
   "\"\<The following procedure facilitates the solution of the problem of \
use of the external Mathematica programs or operational platform. The \
procedure call ExtProgExe[x, y, h] provides search in file system of the \
computer of a {exe| com} file with the program with its subsequent execution \
on parameters y of the command string. Both arguments x and y should be \
encoded in string format. Successful performance of the given procedure \
returns the full path to \\\"$TempFile$\\\" datafile of ASCII\[Dash]format \
containing result of execution of a program x, and this datafile can be \
processed by means of standard means on the basis of its structure. At that, \
in case of absence of the datafile with the demanded program x the procedure \
call returns $Failed while  at using of the third optional argument h \[Dash] \
an arbitrary expression \[Dash] the datafile with the program x uploaded into \
the current directory determined by the call Directory[], is removed from \
this directory; also the datafile \\\"$TempFile$\\\" is removed if it is \
empty or implementation of the program x was terminated abnormally.\>\""}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FullUserTools", "::", "usage"}], "=", 
   "\"\<The procedure call FullUserTools[x] returns the list of names in \
string format, that enter in definition of the active user \
block/function/module x; in addition, the first element of the list is a \
context of these tools. Whereas in a case of tools with different contexts \
the call returns the nested list of sublists of the above format. In turn, \
the procedure call FullUserTools[x, y] through the optional argument y \
\[Dash] an undefinite variable \[Dash] returns 2\[Dash]element list whose the \
first element defines the list of tools without usages, and the second \
element defines the unidentified tools.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FullToolsCalls", "::", "usage"}], "=", 
   "\"\<Unlike the FullUserTools procedure the FullToolsCalls procedure \
provides the analysis of the user block, function or module regarding \
existence in its definition of calls of both the user and the system means. \
The procedure call FullToolsCalls[x] returns the list of names, whose calls \
are in definition of the active user block/function/module x; in addition, \
the first element of the list is a context of these tools. While in case of \
means with different contexts the procedure call returns the nested list of \
sublists of the above format. In case of absence in a x definition of the \
user or system calls the procedure call FullToolsCalls[x] returns the empty \
list, i.e. {}.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FullToolsCallsM", "::", "usage"}], "=", 
   "\"\<Unlike the previous procedure the FullToolsCallsM procedure provides \
the above analysis of the user block, function or module of the same name. \
The procedure call FullToolsCallsM[x] returns the nested list of results of \
application of the FullToolsCalls procedure to subobjects (blocks, functions, \
modules) which compose an object of the same name x. The order of elements in \
the returned list corresponds to an order of definitions of the subobjects \
returned by the call Definition[x].\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AllCalls", "::", "usage"}], "=", 
   "\"\<Unlike the previous FullToolsCallsM procedure the AllCalls procedure \
provides the analysis of the user block, function or module in the context of \
full form of calls entering in it. The procedure call AllCalls[x] returns the \
nested list of sublists containing the full form of calls entering in \
definitions of subobjects that compose an object of the same name or a simple \
object x. The order of elements in the returned list corresponds to an order \
of definitions of the subobjects returned by the call Definition[x].\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MemberLN", "::", "usage"}], "=", 
   "\"\<The procedure call MemberLN[L, x] returns the list of ListList-type, \
for which each sublist defines number of a level of nesting of a nested list \
L by its first element, along with number of occurrences of an expression x \
into the given level by its second element.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExpArgs", "::", "usage"}], "=", 
   "\"\<The call ExpFunc[G, {x, y, z, ...}] provides expansion of the tuple \
of formal arguments of a function, module or block G by arguments {x, y, z, \
...} to the right from the tuple, with returning Null, i.e. nothing, and \
activation in the current session of the updated definition of the object G. \
Expansion of the tuple of formal arguments is made for object of G only on \
variables from the list {x, y, z, ...} which aren't neither its formal \
arguments, nor local variables; otherwise any expansion isn't made. List of \
elements {x, y, z, ...} for updating can be both symbols in string format, \
and names of arguments with tests attributed by it for their admissibility. \
In addition, the call ExpArgs[G, x] on inadmissible object G, in particular, \
on system functions, or on the empty list x is returned unevaluated.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Npackage", "::", "usage"}], "=", 
   "\"\<The function call Npackage[w] returns the list of names in \
string-format of objects whose definition contain in a package w activated in \
the current session. In a case of inactivity in the current session of a \
package x or its absence the function call returns the value $Failed.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefInPackage", "::", "usage"}], "=", 
   "\"\<For test of a package loaded into the current session or a not loaded \
package being in a m\[Dash]datafile, concerning existence in it of global and \
local objects exists the procedure DefInPackage. The call DefInPackage[x], \
where x defines a m\[Dash]datafile or a full path to it or the context \
associated with a package, returns the nested list, whose first element \
defines a context of the package, the second \[Dash] the list of local \
variables, and the third \[Dash] the list of global variables of the package \
x. If x doesn't define a package or a context, the call DefInPackage[x] is \
returned unevaluated. In case of a fictitious context x the procedure call \
returns $Failed.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FullCalls", "::", "usage"}], "=", 
   "\"\<The call FullCalls[x] returns the list whose the first element is the \
context associated with a package loaded into the current session, whereas \
its other elements are symbols from the package that are used by a procedure \
or a function x. In case of use by x of symbols from some packages, the call \
returns the nested list from lists of the above type.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FullCalls1", "::", "usage"}], "=", 
   "\"\<The call FullCalls1[x] returns the nested list whose the first \
element is the result of the call FullCalls1[x] of the above procedure, \
whereas the second defines the names of procedures/functions, used by x, \
excluding the means belonging to the loaded user packages.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FindFileObject", "::", "usage"}], "=", 
   "\"\<In some cases there is a problem of finding of a m-file containing \
definition of some x-object, active in the current session. The given problem \
is solved successfully with procedure, whose the call FindFileObject[x] \
returns the list of the files containing definition of object x, including \
the standard help on it; at absence of such m-files the call of procedure \
returns the empty list. The call FindFileObject[x, y, z, ...] with \
unessential arguments {y, z, ...} - the names in string-format of devices of \
external memory with direct access - provides search of m-files on the \
specified devices instead of search on all file system of a computer in case \
of call of procedure with 1 argument. On undefined argument x the call is \
returned unevaluated.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UserLib", "::", "usage"}], "=", 
   "\"\<The procedure UserLib provides a series of main functions for \
maintenance of the user library of procedures/functions located in a \
txt-datafile L. The procedure call UserLib[L, f] executes the functions with \
a library datafile given by its name L or by full path to it according to the \
second factual argument that represents 2-element list f in the following \
way, namely:\n\n{\\\"names\\\", \\\"list\\\"} - the return of the list of \
names of procedures/functions, whose definitions are in a library datafile L; \
in case of the empty datafile the procedure call is returned unevaluated;\n\n\
{\\\"print\\\", \\\"all\\\"} - the print on the screen of all contents of a \
library datafile L; whereas in case of the empty datafile the procedure call \
is returned unevaluated;\n\n{\\\"print\\\", \\\"Name\\\"} - the print on the \
screen of definition of a procedure/function with name Name, being in a \
library datafile L; for the empty datafile the procedure call is returned \
unevaluated; at absence in the library datafile L of required facility the \
procedure call returns the Null, i.e. nothing; in that case the procedure \
call prints the message of the following general form \\\"Name is absent in \
Library L\\\";\n\n{\\\"add\\\", \\\"Name\\\"} - saving in a library datafile \
L in Append-mode of a procedure or function with name Name; its definition \
should be preliminary evaluated in the current session of the package in \
Input-mode;\n\n{\\\"load\\\", \\\"all\\\"} - upload into the current session \
of all means whose definitions are in a library datafile L; whereas in case \
of the empty datafile the procedure call is returned unevaluated;\n\n\
{\\\"load\\\", \\\"Name\\\"} - upload into the current session a \
procedure/function with name Name, whose definition is in a library datafile \
L; whereas in case of the empty datafile L the procedure call is returned \
unevaluated; in case of absence in the datafile L of a required facility the \
procedure call returns the Null, i.e. nothing, printing the message of the \
following general form \\\"Name is absent in Library L\\\".\nIn other cases \
the procedure call is returned unevaluated.\>\""}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SequenceQ", "::", "usage"}], "=", 
   "\"\<The call Sequence[x] returns the True if x is an object defined by \
the function Sequence, and the False otherwise; at that, name x of the object \
is coded in string-format.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SortQ", "::", "usage"}], "=", 
   "\"\<The call SortQ[x] returns value True if x is a string, sorted \
symbol-by-symbol, and value False otherwise.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SortLS", "::", "usage"}], "=", 
   "\"\<The function SortLS is an expansion of standard function Sort onto \
separate strings and integers. The call SortLS[x, y] allows a list with \
elements of type {Numeric, Symbol, String}, a string and an integer as the \
first argument x; the second optional argument y has the same sense, as and \
for the function Sort.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"EmptyFileQ", "::", "usage"}], "=", 
   "\"\<The call EmptyFileQ[f] returns True if a datafile f is empty, and \
False otherwise. If a datafile f is absent in file system of the computer, \
the call EmptyFileQ[f] returns the $Failed. Moreover, if in the course of \
search of the datafile f its multiplicity in file system of the computer is \
detected, all datafiles from list of the found datafiles are tested, \
including also datafiles that are located in the Recycle Bin directory. At \
that, the procedure call EmptyFileQ[f, y] with two actual arguments where \
optional argument y \[Dash] an expression, returns the nested 2\[Dash]element \
list whose first sublist defines emptiness/nonemptiness (True/False) of the \
datafile f in the list of datafiles of the same name whereas the second \
sublist defines full paths to the datafiles f of the same name. At that, \
between both sublists the one\[Dash]to\[Dash]one correspondence takes \
place.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Contexts1", "::", "usage"}], "=", 
   "\"\<The call Contexts1[] returns the list of contexts corresponding to \
packages whose components are activated in the current session. The procedure \
is a modification of the standard function Contexts.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContextQ", "::", "usage"}], "=", 
   "\"\<The following simple function provides testing of a string for its \
admissibility as a context; in addition, the admissibility is considered from \
the point of view of syntactic correctness only. The call of function \
ContextQ[x] returns True, if x - a potentially allowable context, and False \
otherwise.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContextSymbol", "::", "usage"}], "=", 
   "\"\<The call ContextSymbol[x] returns the context associated with a \
symbol x.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContextToSymbol", "::", "usage"}], "=", 
   "\"\<Whereas the procedure call ContextToSymbol[x, y] returns the list of \
format {x, {y}}, ascribing in the current session a context y to a definite \
symbol x. The symbol with a new context keeps attributes and usage of an old \
symbol. In particular, the given means is quite useful in the case of \
necessity of saving of objects in mx\[Dash]files.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ToContext", "::", "usage"}], "=", 
   "\"\<Unlike the above ContextToSymbol procedure the procedure call \
ToContext[x, y] returns nothing, providing the assignment of a context y to a \
symbol or their list x. At the same time it must be kept in mind that a \
procedure call ToContext[x, y], providing assignment of a new context y to \
symbols x, at the same time doesn't keep the attributes and options \
attributed to them. It is necessary to do it outside of the ToContext \
procedure.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContextToSymbol1", "::", "usage"}], "=", 
   "\"\<The ContextToSymbol1 procedure provides assignment of the given \
context to a definite or undefinite symbol. The procedure call \
ContextToSymbol1[x, y, z] returns Null, i.e. nothing, providing assignment of \
a certain y context to a symbol x; at that, the third optional argument z \
\[Dash] the string, defining for x the usage; at its absence for an \
undefinite symbol x the usage \[Dash] empty string, i.e. \\\"\\\", while for \
a definite symbol x the usage has view \\\"Help on x\\\". At that along with \
possibility of assignment of the given context to symbols the \
ContextToSymbol1 procedure is an useful enough means for extension by new \
means of the user package contained in a mx-file. The technology of similar \
updating is as follows. On the first step a file x of mx\[Dash]format with \
the user's package having y context is uploaded into the current session by \
the function call Get[x]. Then, in the same session the definition of a new \
means f with its usage u which describes the given means is evaluated. At \
last, by the procedure call ContextToSymbol1[f, y, u] the assignment of a y \
context to the symbol f along with its usage u is provided. Moreover, the \
usage u can be directly coded in the procedure call, or be determined by a \
certain string u. At last, by the function call DumpSave[x, y] the saving in \
the mx\[Dash]file x of all objects having y context is provided. Similar \
approach provides a rather effective mechanism of updating in the context of \
both definitions and usages of the means entering the user's package which is \
located in a mx\[Dash]file.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContextToSymbol2", "::", "usage"}], "=", 
   "\"\<The next useful procedure in a certain relation extends the \
ContextToSymbol1 procedure and provides assignment of the given context to a \
definite symbol. The successful procedure call ContextToSymbol2[x, y] returns \
two-element list of the format {Cont`x, y}, where Cont \[Dash] a previous \
context of a definite x symbol and y \[Dash] its new context, providing \
assignment of a certain y context to the definite symbol x; while the \
procedure call ContextToSymbol2[x, y, z] with optional third argument z \
\[Dash] an arbitrary expression \[Dash] also returns two-element list of the \
above format {Cont`x, y}, providing assignment of certain y context to the \
definite symbol x with saving of symbol definition x along with its \
attributes and usage in datafile \\\"x.mx\\\".\nTherefore, before a procedure \
call ContextToSymbol2[x, y] for change of the existing context of a symbol x \
onto a new symbol y in the current session it is necessary to evaluate \
definition of a symbol x and its usage in the format x::usage = \\\"Help on \
an object x.\\\" (if the usage exists) with assignment to the symbol x of \
necessary attributes.\nAt that along with possibility of assignment of the \
given context to symbols the ContextToSymbol2 procedure is an useful enough \
means for extension by new means of the user package contained in a \
mx\[Dash]file. The technology of similar updating is as follows. On the first \
step the definition of a new means x with its usage u which describes the \
given means is evaluated along with ascribing of the necessary attributes. \
Then, by means of the procedure call ContextToSymbol2[x, y, j] the assignment \
of a y context to a symbol x along with its usage with saving of the updated \
object x in \\\"x.mx\\\" file is provided. At last, the function call Get[p] \
loads in the current session the revised user package located in a \
mx\[Dash]file p with y context, whereas the subsequent call DumpSave[p, y] \
saves in the updated mx\[Dash]file p all objects having y context, including \
the objects that earlier have been obtained by the procedure call \
ContextToSymbol2[x, y] or Get[\\\"x.mx\\\"]. Such approach provides a rather \
effective mechanism of updating of the user packages located in \
mx\[Dash]files.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContextRepMx", "::", "usage"}], "=", 
   "\"\<The procedure call ContextRepMx[x, y] provides replacement of the \
context j of a mx\[Dash]file x by a new context y, returning the list of \
format {x, j, y} where x defines file with result of such replacement, j \
\[Dash] an old context and y \[Dash] a new context. At that, if context in \
file x is absent, the call returns $Failed. The call ContextRepMx[x, y, z] \
where z defines a mx-file with result of replacement returns {z, j, \
y}.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContextActQ", "::", "usage"}], "=", 
   "\"\<The simple enough function ContextActQ provides check of a context \
for the purpose of its presence in the list of contexts of the current \
session. The call ContextActQ[w] returns True if a context w is in the list \
of all contexts of the current session; otherwise, False is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FindFileContext", "::", "usage"}], "=", 
   "\"\<The call of standard function Context[x] returns the context which is \
associated with a symbol x. Meanwhile, a m-file with the package containing \
the given context is represented as interesting enough. Call \
FindFileContext[x] returns the list of files with the packages containing the \
given context x; at absence of such files the call of procedure returns the \
empty list, i.e. {}. In addition, the call FindFileContext[x, y, z, ...] with \
optional arguments {y, z, ...}  -  the names in string-format of devices of \
external memory with direct access - provides search of required files on the \
specified devices instead of search on all file system of the computer in \
case of the call of procedure with one actual argument.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FindFileContext1", "::", "usage"}], "=", 
   "\"\<Depending on the status of a context x the procedure call \
FindFileContext1[x] returns the following values:\n         {\\\"Current\\\", \
{m-files}} \[Dash] the context x is the current and is in m-files;\n         \
\\\"Current\\\" \[Dash] the context x is the current, but isn't associated \
with m-files;\n         {m-files} \[Dash] the context x is in m-files, but \
not in the list $ContextPath;\n         {} \[Dash] the context x is formally \
correct, but not factual.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContextInFile", "::", "usage"}], "=", 
   "\"\<As an essential enough addition to the above procedures \
FindFileContext and FindFileContext1 is the ContextInFile procedure providing \
search of datafiles of the types {\\\"cdf\\\", \\\"m\\\", \\\"mx\\\", \
\\\"nb\\\", \\\"tr\\\"} containing definitions of packages with the given \
context. The procedure call ContextInFile[x, y] returns the list of full \
paths to datafiles of the indicated types containing definitions of packages \
with a context x. At that, search is executed in a directory, defined by the \
second optional argument y; in its absence the search of datafiles is \
executed in the \\\"C:\\\" directory. Return of the empty list, i.e. {}, \
determines absence of the sought-for datafiles in the given path of search.\>\
\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SeqUnion", "::", "usage"}], "=", 
   "\"\<The call SeqUnion[x, y, z, ...] returns the result of union of \
sequences <x, y, z, ...> where arbitrary expressions may be as \
arguments.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Rename", "::", "usage"}], "=", 
   "\"\<In the regular mode the procedure Rename[x, y] returns Null-value, \
i.e. nothing, providing replacement of a name x of a defined object onto a \
name y with preservation of all attributes of the x-object. If  y-argument \
defines a name of an defined object or of an undefined name with attributes \
attributed to it, the procedure call is returned unevaluated. Meanwhile, the \
Rename procedure successfully processes also the objects x of the same name \
of the type {Block, Function, Module}.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Rename1", "::", "usage"}], "=", 
   "\"\<The Rename1 procedure is a quite useful modification of the above \
procedure, being based on procedure Definition2. The call Rename1[x, y] is \
similar to the call Rename[x, y] whereas the call Rename1[x, y, z] with the \
third optional z\[Dash]argument \[Dash] an arbitrary expression \[Dash] \
performs the same functions as the call Rename1[x, y] without change of an \
initial object x.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RenameH", "::", "usage"}], "=", 
   "\"\<As against previous procedure Rename, the procedure RenameH provides \
in the certain measure a selective renaming of the same procedures/functions \
on the basis of their headings. Successful call RenameH[x, y] returns Null, \
i.e. nothing, renaming an object with heading x onto a name y with \
preservation of all attributes; in addition, the initial object with heading \
x is removed from the current session of the package. Moreover, the call \
RenameH[x, y, z] with the third optional argument z - any expression is \
supposed - renames object with heading x onto a name y with preservation of \
attributes; meanwhile, the initial object with heading x is kept in the \
current session of the package. In a case of erroneous situations $Failed is \
returned.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RenBlockFuncMod", "::", "usage"}], "=", 
   "\"\<The call RenBlockFuncMod[x, y] in string format returns a new name of \
a block/function/module x determined by the following format Unique [y] <>H, \
where y \[Dash] an arbitrary symbol, whereas H \[Dash] one of symbols \
{\\\"B\\\", \\\"F\\\", \\\"M\\\"} depending on the type of an object x or the \
type of a subobject composing it in case of the object of the same name x. In \
addition, the object x is removed from the current session while the result \
of this renaming keeps options and attributes of the initial object x. \
Moreover, the symbol y can be definite, since its definition doesn't change \
at the procedure call.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RenBlockFuncMod1", "::", "usage"}], "=", 
   "\"\<The procedure call RenBlockFuncMod1[x, y] returns a new name of a \
block/function/module x, where y \[Dash] an arbitrary undefinite symbol; at \
that, y saves options and attributes of the initial object x. Furthermore, an \
object x can be of the same name whereas the initial symbol x becomes as an \
undefinite symbol.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefAttributesH", "::", "usage"}], "=", 
   "\"\<Procedure DefAttributesH expands the functions SetAttributes and \
ClearAttributes  on a case of the same procedures/functions with various \
headings and with the any attributes ascribed to it. The call DefAttributesH \
[x, y, z, p, h, ...] returns Null, i.e. nothing, ascribing {y = \\\"Set\\\"} \
or deleting {y = \\\"Clear\\\"} for object with a heading x the attributes \
defined by arguments {z, p, ...}. Whereas in attempt of assignment or \
deletion of attributes nonexistent in the current version of system, the  \
procedure call returns the list, whose the first element is $Failed, whereas \
the second element \[Dash] the list of expressions, different from the \
current attributes.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AttributesH", "::", "usage"}], "=", 
   "\"\<AttributesH is inverse function to the above procedure \
DefAttributesH. The call AttributesH[x] returns the list of attributes, \
ascribed to an object with heading x.\>\""}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DefaultsQ", "::", "usage"}], "=", 
   "\"\<The call DefaultsQ[x] returns True if definition of a block, function \
or a module x contains defaults for formal arguments, and False otherwise. \
Whereas the call DefaultsQ[x, y], where the second argument y \[Dash] an \
indefinite variable \[Dash] through y additionally returns the list of the \
used types of defaults {\\\"_.\\\", \\\"_:\\\"}.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"WhatObj", "::", "usage"}], "=", 
   "\"\<The call WhatObj[x] returns the value depending on location of an \
x-symbol, activated in the current session, namely: \\\"Undefined\\\" \[Dash] \
undefined object; \\\"System\\\" \[Dash] standard function of the system; \
\\\"CS\\\" \[Dash] object, whose definition had been evaluated in the current \
session; \\\"Context`\\\" \[Dash] context defining a package which had been \
activated in the current session, and which contains the definition of the x\
\[Dash]symbol; otherwise, the procedure call is returned unevaluated.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Subs", "::", "usage"}], "=", 
   "\"\<The procedure call Subs[x, y, z] returns the result of substitutions \
into an expression x of expressions z instead of occurrences in it of \
subexpressions y. In addition, if as x any correct expression admitted by \
Math-language then as a single substitution or their set coded as y \
\[Congruent] {y1, y2, ..., yn} and z \[Congruent] {z1, z2, ..., zn} are \
allowable as the second and third arguments determining substitutions of the \
format y -> z, defining a set of substitutions {y1 -> z1, y2 -> z2, ..., yn \
-> zn} carried out consistently.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Subs1", "::", "usage"}], "=", 
   "\"\<A simple enough Subs1 function can be considered as a certain \
extension and complement of the previous Subs procedure. The function call \
Subs1[x, {y, z}] returns the result of replacement of all occurrences of an \
subexpression y of an expression x onto an expression z; at that, the \
function call qua of the second argument allows both the simple \
2\[Dash]element list, and the list of ListList\[Dash]type.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Subs2", "::", "usage"}], "=", 
   "\"\<A simple enough Subs2 function can be considered as a certain \
extension and complement of the previous Subs procedure and function Subs1. \
The function call Subs2[x, y, z] returns the result of replacement of all \
occurrences of an subexpression y of an expression x onto an expression z. \
The function admits a number of interesting enough extensions.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Subs1Q", "::", "usage"}], "=", 
   "\"\<The function call Subs1Q[x, y] returns True if a call Subs1[x, y] is \
allowable, and False otherwise.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Substitution", "::", "usage"}], "=", 
   "\"\<Substitution is an integrated procedure of the above means Subs, \
Subs1 and Subs2. The procedure call Substitution[x, y, z] returns the result \
of substitutions into an arbitrary expression  x of an expression z instead \
of occurrences in it of all subexpressions y. In addition, if as expression x \
any correct expression admitted by Math\[Dash]language is used whereas as a \
single  substitution or their set coded as the lists y \[Congruent] {y1, y2, \
..., yn} and z \[Congruent] {z1, z2, ..., zn} of the same length are \
allowable as the second and third arguments determining substitutions of the \
format y \[Dash]> z, defining a set of substitutions y1 \[Dash]> z1, y2 \
\[Dash]> z2, ..., yn \[Dash]> zn} carried out consistently. If the lists y \
and z have different length the procedure call is returned unevaluated, while \
at absence of allowable substitutions the initial expression x is returned.\>\
\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Substitution1", "::", "usage"}], "=", 
   "\"\<The Substitution1 procedure can be considered as an analog of the \
above Substitution procedure. The procedure call Substitution1[x, y, z] \
returns the result of substitutions into an arbitrary expression  x of an \
expression z instead of occurrences in it of all subexpressions y. In \
addition, if as expression x any correct expression admitted by \
Math\[Dash]language is used whereas as a single  substitution or their set \
coded as the lists y \[Congruent] {y1, y2, ..., yn} and z \[Congruent] {z1, \
z2, ..., zn} of the same length are allowable as the second and third \
arguments determining substitutions of the format y \[Dash]> z, defining a \
set of substitutions y1 \[Dash]> z1, y2 \[Dash]> z2, ..., yn \[Dash]> zn} \
carried out consistently. If the lists y and z have different length the \
procedure call is returned unevaluated, while at absence of allowable \
substitutions the initial expression x is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Integrate2", "::", "usage"}], "=", 
   "\"\<On the basis of the previous Subs1 function an useful enough \
procedure has been realized, whose call Integrate2[x, y] provides integrating \
of an arbitrary expression x on the subexpressions determined by a sequence \
y. At that, the procedure with the returned result by means of Simplify \
function performs a sequence of algebraic and other transformations and \
returns the simplest form it finds.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Diff1", "::", "usage"}], "=", 
   "\"\<The procedure call Diff1[x,y,z, ...] that is also realized on the \
basis of the Subs1 function returns the differentiation result of an \
arbitrary expression x on the generalized {y,z,  ...} variables which can be \
an arbitrary expressions. The result is returned in the simplified form on \
the basis of the Simplify function.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Diff2", "::", "usage"}], "=", 
   "\"\<The procedure call Diff2[x, y, z, h, ...] that is realized on the \
basis of the Substitution1 function returns the differentiation result of an \
arbitrary expression x on the generalized {y, z, h, ...} variables which can \
be an arbitrary expressions. The result is returned in the simplified form on \
the basis of the Simplify function.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MaxNestLevel", "::", "usage"}], "=", 
   "\"\<The call MaxNestLevel[L] returns the maximal level of nesting of a \
list L; in addition, a list whose elements are not lists (pure list) has \
level of nesting 0.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MaxLevel", "::", "usage"}], "=", 
   "\"\<The call MaxLevel[L] returns the maximal level of nesting of a list \
L; in addition, a list whose elements are not lists (pure list) has level of \
nesting 0.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ListLevels", "::", "usage"}], "=", 
   "\"\<The call ListLevels[L] returns the list of levels of nesting of a \
list L; in addition, if L is the empty list, i.e. {}, the list 0 is returned.\
\>\""}], " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Arity", "::", "usage"}], "=", 
   "\"\<On blocks/functions/modules with indefinite number of arguments the \
call Arity[x] returns \\\"Undefined\\\" value, on the system functions - \
\\\"System\\\" while on the objects having fixed number of the actual \
arguments, their quantity is returned; in other cases the call is returned \
unevaluated. Let's note that the Arity procedure processes the special \
situation \\\"the procedures of the same name with various headings\\\", \
returning the list of arities of subobjects composing object x. In addition, \
between this list and the list of definitions of subobjects that is returned \
by the call Definition[x] there is one-to-one correspondence. On inadmissible \
arguments the procedure call is returned unevaluated.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Arity1", "::", "usage"}], "=", 
   "\"\<The Arity1 procedure \[Dash] a rather effective equivalent analog of \
the Arity procedure.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ArityBFM", "::", "usage"}], "=", 
   "\"\<On a block/function/module with indefinite number of arguments the \
call ArityBFM[x] returns \\\"Undefined\\\" value, while on the objects having \
fixed number of the factual arguments, their quantity is returned. Let's note \
that the ArityBFM procedure processes the special situation \\\"the \
procedures of the same name with various headings\\\", returning the list of \
arities of subobjects composing object x. In addition, between this list and \
the list of definitions of subobjects that is returned by the call \
Definition[x] there is one-to-one correspondence. On factual arguments \
different from the above type the procedure call is returned unevaluated. In \
addition, under the \\\"function\\\" a function of classical type (i.e. with \
heading) is realized.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ArityBFM1", "::", "usage"}], "=", 
   "\"\<The ArityBFM1procedure provides more detailed information on the \
arity of a block/function/module. The procedure call ArityBFM1[x] returns the \
arity (number of formal arguments) of a block/function/module x in the form \
of 4\[Dash]element list whose the first, the second and the third elements \
determine amount of formal arguments with patterns \\\"_\\\", \\\"__\\\" and \
\\\"___\\\" accordingly. While the fourth element defines common number of \
formal arguments that can be different from the number of factual arguments. \
Thus, the x heading should has classical type, i.e. it should not include \
non-standard, but acceptable methods of headings definition. The unsuccessful \
procedure call returns $Failed.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AritySystemFunction", "::", "usage"}], "=", 
   "\"\<The procedure call AritySystemFunction[x] generally returns the 2\
\[Dash]element list whose first element defines number of formal arguments \
whereas the second element \[Dash] number of admissible factual arguments. \
Whereas the procedure call AritySystemFunction[x, y] with the second optional \
argument y \[Dash] an indefinite variable \[Dash] through it returns the \
generalized template of formal arguments. The infinity symbol says about \
arbitrary number of factual arguments. Return of the one-element list speaks \
about equality of quantities of formal and the allowed actual \
arguments.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AritySystemFunction1", "::", "usage"}], "=", 
   "\"\<The AritySystemFunction1 procedure is similar to the \
AritySystemFunction procedure, but is based on other basis. The procedure \
call AritySystemFunction1[x] generally returns the 2\[Dash]element list whose \
the first and the second element define minimal and maximal number of \
admissible factual arguments accordingly. In case of their coincidence \
1-element list is returned. Whereas the procedure call \
AritySystemFunction1[x, y] with the second optional argument y \[Dash] an \
indefinite symbol \[Dash] through it returns the generalized template of \
formal arguments. The infinity symbol says about arbitrary number of \
admissible factual arguments. An unsuccessful procedure call returns \
$False.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MessagesOut", "::", "usage"}], "=", 
   "\"\<In some cases the processing of messages generated by the calls of \
blocks, functions and modules in the program mode, for example, in a module \
body is required. The problem is solved by the procedure whose call \
MessagesOut[x] returns the message generated by a G block/function/module \
call given in the format x = \\\"G[...]\\\". Whereas the procedure call \
MessagesOut[x, y] with the second optional argument \[Dash] an indefinite \
symbol \[Dash] through it returns the messages in the format {MessageName, \\\
\"Message\\\"}. In the absence of any messages the empty list, i.e. {}, is \
returned. At that, if for the user object G (block, function, module) is \
ascribed only usage, the usage is returned. An unsuccessful procedure call \
returns $Failed.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReplaceAll1", "::", "usage"}], "=", 
   "\"\<The call ReplaceAll1[x, y, z] returns the result of substitution of \
all entries of an subexpression y onto an expression z in an expression x. \
The procedure expands standard function ReplaceAll.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReplaceAll2", "::", "usage"}], "=", 
   "\"\<Unlike the Replace4 procedure, the call ReplaceAll2[x, r] returns the \
result of application to an expression x of a rule r (a \[Dash]> b) or of \
consecutive application of rules from the list r; any expressions are allowed \
as the left parts of the rules.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReplaceSubLists", "::", "usage"}], "=", 
   "\"\<The call ReplaceSubLists[x, y] returns the result of replacement of \
elements (including adjacent elements) of a list x on the basis of a rule or \
list of rules y. In addition, the lists can act as parts of the rules.\>\""}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReplaceProc", "::", "usage"}], "=", 
   "\"\<The call ReplaceProc[P, w] returns the definition in string format of \
a procedure \[Dash] result of application to a procedure P of transformation \
rules w (a rule or their list); in addition, from rules w are eliminated the \
rules whose left parts coincide with formal arguments of the procedure \
P.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StringReplace1", "::", "usage"}], "=", 
   "\"\<The call StringReplace1[S, L, P] returns the result of substitution \
in a string S of strings or expressions from a list P instead of its \
substrings, defined by positions of a nest list L of ListList-type. The \
procedure well supplements the standard function StringReplace.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StringReplace2", "::", "usage"}], "=", 
   "\"\<The call StringReplace2[S, s, Exp] returns the result of replacement \
of all occurrences in a string S of its substrings s onto an expression Exp; \
in addition, the replaced substrings s should not be limited by letters. If \
the string S does not contain occurrences of s, the call returns the initial \
string S whereas on empty string S the empty string is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StringReplace3", "::", "usage"}], "=", 
   "\"\<The call StringReplace3[S, x, x1, y, y1, z, z1, ...] returns the \
result of replacement of all occurrences in a string S of its substrings {x, \
y, z, ...} onto strings {x1, y1, z1, ...} accordingly; in addition, the \
replaced substrings {x, y, z, ...} should not be limited by letters. If the \
string S does not contain occurrences of {x, y, z, ...}, the call returns the \
initial string S whereas on empty string S the empty string is \
returned.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StringReplaceS", "::", "usage"}], "=", 
   "\"\<The call StringReplaceS[S, s1, s2] returns the result of replacement \
of all occurrences in a string S of its substrings s1 that are limited from \
the left and the right by strings \\\"x\\\" (StringLength[\\\"x\\\"] = 1) \
from the given lists L and R accordingly, onto substrings s2. If the string S \
does not contain of occurrences s1, the procedure call returns the source \
string S.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StringReplacePart1", "::", "usage"}], "=", 
   "\"\<Unlike the standard StringReplacePart function the StringReplacePart1 \
procedure provides replacements in strings not on the basis of positions of \
the replaced substrings, but according to ordinal numbers of their \
occurrences. The procedure call StringReplacePart1[x, y, z, p] returns the \
result of replacement in a string x of substrings y onto a string z according \
to ordinal number(s) of occurrences of substrings y into the string x which \
are defined by an integer or an integer list p. In case of impossibility of \
such replacement, for example, the list p contains numbers that are different \
from  order numbers of occurrences of y in x, the call returns the initial \
string x. The procedure ignores inadmissible elements of the list p, without \
initiating an erroneous situation.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Replace1", "::", "usage"}], "=", 
   "\"\<The call Replace1[x, r] returns the result of applying of a rule r or \
their list to undefined variables of an expression x (to all or selectively). \
In case of detection by procedure of empty rules from r, the message with \
hint of the list of rules which appeared empty, i.e. whose left parts do not \
belong to the list of independent variables of an expression x is \
printed.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Replace2", "::", "usage"}], "=", 
   "\"\<The call Replace2[x, y, z] returns the result of replacement of all \
occurences of a subexpression y in an expression x onto an expression z. In \
case of impossibility to do such replacement  the call returns \
$Failed.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Replace3", "::", "usage"}], "=", 
   "\"\<The call Replace3[x, y, z] returns the result of replacement of all \
occurences of subexpressions y in an expression x onto expressions z. In \
addition, separate expressions or their lists can act as arguments {y, z}. \
Thus, in case of arguments {y, z} in the form of the list for them is chosen \
the common length determined by relation Min[Map[Length, {y, z}]], allowing \
to avoid the possible special and erroneous situations which demand the \
program processing, but with print of the relevant diagnostic \
information.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Replace4", "::", "usage"}], "=", 
   "\"\<The call Replace4[x, a \[Dash]> b] returns the result of application \
to an expression x of substitution a \[Dash]> b on condition that its left \
part a is an arbitrary expression. At absence in expression x of the \
occurrences of subexpression a initial expression x is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BlockQ", "::", "usage"}], "=", 
   "\"\<The call BlockQ[x] returns the True if x is a Block and the False \
otherwise.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BlockQ1", "::", "usage"}], "=", 
   "\"\<The call BlockQ1[x] returns the True if x is a Block and the False \
otherwise.\>\""}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefFunc", "::", "usage"}], "=", 
   "\"\<The call DefFunc[x] in a compact format returns the definition of an \
x-object contained in a package or a notebook loaded into the current \
session. The object name is given in string-format or Symbol-format depending \
on the object type (procedure, function, global variable, procedure variable \
etc.).\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefFunc3", "::", "usage"}], "=", 
   "\"\<The call DefFunc3[x] returns the list of definitions, given in string \
format, of x-procedures of the same name with the various headings which were \
activated in the current session of the package; In addition, the order of \
definitions of the returned list corresponds to the order of their output by \
standard function Definition of the package.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefOpt", "::", "usage"}], "=", 
   "\"\<The function Definition[x] in a lot of cases returns definition of a \
x-object together with a context corresponding to it that at enough large \
definitions becomes poorly foreseeable and less acceptable for the subsequent \
program processing. On the other hand, our procedures DefFunc, DefFunc1, \
DefFunc2, DefFunc3 also appear unsuitable, if necessary to obtain the \
definitions of some procedural variables, in particular, $TypeProc. And only \
the call of procedure DefOpt[x] returns definition of a x-object in an \
optimum format irrespective of type of the user object. On system functions \
and other string expressions the call DefOpt[x] returns \\\"Null\\\". In \
addition, the call DefOpt[x] not only returns the optimum format of \
definition of an object x, but also evaluates it in the current session what \
in some cases is rather useful; furthermore, the name of an object x is coded \
in string-format. At the same time it must be kept in mind that procedure \
DefOpt is useless for the procedures/functions of the same name, i.e. having \
several definitions with different headings.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefOpt1", "::", "usage"}], "=", 
   "\"\<The DefOpt1 procedure is seemed as effective enough for receiving of \
definition of the user procedure/function in optimized format in the above \
sense, i.e. without context. The procedure call DefOpt1[x] on a system \
function x returns its name, on an user function or procedure returns its \
optimized code in string format whereas on other values of argument x $Failed \
is returned.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"OptDefinition", "::", "usage"}], "=", 
   "\"\<The call of procedure OptDefinition[x] returns the definition of a \
procedure or function x in an optimum format, i.e without context.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefOptimum", "::", "usage"}], "=", 
   "\"\<The procedure call DefOptimum[x] returns the definition of a \
procedure or function x in an optimum format, i.e without context associated \
with a package containing x. This definition becomes active in the current \
session.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"OptDefPackage", "::", "usage"}], "=", 
   "\"\<The procedure call OptDefPackage[x] returns the 2\[Dash]element list \
whose first element \[Dash] the list with names of means of the user package \
with context x, uploaded into the current session whose definitions received \
by the Definition function are optimized in the above sense while the second \
element \[Dash] the list with names of means with a context x whose \
definitions aren't optimized in the above sense. In turn, the procedure call \
OptDefPackage[x, y] with the second optional y argument \[Dash] an arbitrary \
expression \[Dash] returns the above 2\[Dash]element list, in addition \
converting the means of the second sublist into means with the optimized \
format in the current session. The procedure call on an inactive context x \
returns $Failed.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SymbolsFromMx", "::", "usage"}], "=", 
   "\"\<A rather useful SymbolsFromMx procedure that allows to check a mx\
\[Dash]file with the user package for entering of symbols in it without \
uploading of the datafile into the current session. The procedure call \
SymbolsFromMx[x] returns the three\[Dash]element list whose first element \
\[Dash] the list with names of means of the user package, contained in a mx\
\[Dash]file x, whose definitions received by the system Definition function \
are not optimized in the above sense, while the second element represents the \
list with names of means with the context ascribed to the file x; at last, \
the third element represents the list with names of system means used by the \
user package located in the x file. In turn, the procedure call \
SymbolsFromMx[x, y] with the second optional y argument \[Dash] an indefinite \
symbol \[Dash] additionally returns the 2\[Dash]element list whose the first \
element \[Dash] the list with names of means of the user package, located in \
a mx\[Dash]file x, whose definitions received by the system Definition \
function are not optimized in the above sense, while the second element \
represents the list with names of means of the user package x, whose \
definitions obtained by the Definition function are optimized in the above \
sense considered in detail in our book [8].\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"OptimizedDefPackage", "::", "usage"}], "=", 
   "\"\<The OptimizedDefPackage procedure allows to check the user package \
located in a mx\[Dash]file x for existing in it of means whose definitions in \
case of uploading of the file in the current session are optimized in the \
above sense. The procedure call OptimizedDefPackage[x] returns the \
two\[Dash]element list whose the first element \[Dash] the list with names of \
means of the user package, located in a mx\[Dash]file x whose definitions are \
optimized in the above sense, while the second element represents the list \
with names of means that are not optimized. At the same time, the procedure \
call \:0441onverts all means of a package x whose definitions will be \
optimized in the current session. The procedure can be applied both to the \
unloaded and the uploaded mx\[Dash]file. At that, if the mx\[Dash]file is \
unloaded, than this file remains as unloaded.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"OptimizedMfile", "::", "usage"}], "=", 
   "\"\<The procedure call OptimizedMfile[x, y] ensures the saving of tools \
definitions with x context that are optimized in the above sense in a \
m\[Dash]file y with returning y. In turn, the call OptimizedMfile[x, y, z] \
additionally through the third argument z \[Dash] an indefinite symbol \
\[Dash] returns the 3-element list whose the first element defines list of \
tools whose definitions are optimized, the second element defines list of \
tools whose definitions are not optimized, and the third element defines the \
list of temporary symbols which have been generated at upload of the user \
package with context x into the current session.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefOp", "::", "usage"}], "=", 
   "\"\<The call DefOp[w] in string-format returns the type of the assignment \
applied to a name x encoded  in string-format too: (1) \\\"Undefined\\\" - \
the name w is not defined, (2) $Failed \[Dash] a name x defines object \
different from a simple variable, (3) \\\"=\\\" - to the name w immediate \
assignment, and (4) \\\":=\\\"  -  to a name w the lazy assignment has been \
applied. Whereas the call DefOp[w,y] through optional second argument - the \
undefined variable y - is returned an expression assigned to the symbol \
w.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SuffPref", "::", "usage"}], "=", 
   "\"\<The call SuffPref[S, s, N] returns the True if N=1 and a substring s \
or a string from the list s begins a string S, the True if N=2 and a \
substring s or a string from the list s ends a string S, and returns the True \
if N=3 and a substring s or a string from the list s limits a string S from \
both ends; otherwise the False is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Gather1", "::", "usage"}], "=", 
   "\"\<The call Gather1[L, n] returns the nested list formed on the basis of \
a list L of ListList-type by means of grouping of sublists of L by its n-th \
element. The procedure is an extension of the standard function Gather of the \
package.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Gather2", "::", "usage"}], "=", 
   "\"\<Similarly to procedure Gather1 the procedure Gather2 - one more \
modification of standard procedure Gather. The call Gather2[L] returns either \
the simple list, or the list of ListList-type that defines only multiple \
elements of a list L with their multiplicities. At absence of multiple \
elements in L the call of procedure returns the empty list, i.e. {}.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GatherStrLetters", "::", "usage"}], "=", 
   "\"\<The call GatherStrLetters[x] of a rather simple function returns the \
result of gathering of the letters of a string x into substrings of identical \
letters.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CharacterQ", "::", "usage"}], "=", 
   "\"\<The call CharacterQ[x] returns the True if x is a symbol with \
character code from range 0..255, and the False otherwise.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Characters1", "::", "usage"}], "=", 
   "\"\<The Characters1 extends the standard function Characters. The call \
Characters1[x] gives the list of characters in a string x//ToString.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HowAct", "::", "usage"}], "=", 
   "\"\<The call HowAct[Q] returns the value True if Q is an object active in \
the current session, and the False otherwise. In many cases the procedure \
HowAct is more suitable than standard function ValueQ, including local \
variables in procedures.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UndefinedQ", "::", "usage"}], "=", 
   "\"\<The procedure call UndefinedQ[x] returns True if x is a definite \
symbol, and False otherwise. In addition, unlike the HowAct function the \
UndefinedQ procedure returns True only on condition of empty definition for \
the tested symbol irrespective of existence for it of options and attributes. \
The given distinction is a rather essential, in particular, in case of \
programming of procedures at which as formal arguments undefinite variables \
through which additional results of procedures calls are returned are used. \
In this case it is necessary to use the format \\\"y_ /; ! HowAct[y]\\\" in \
the procedures headings.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefinedActSymbols", "::", "usage"}], "=", 
   "\"\<The function call DefinedActSymbols[] returns the list of the names \
of symbols different from temporary and undefined symbols in the current \
session.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SubsPosSymb", "::", "usage"}], "=", 
   "\"\<The call SubsPosSymb[x, n, y, z] returns the substring of a string x \
which is limited from the right (from the left) by a position n and from the \
left (from the right) by characters from a list y. In addition, the search in \
the string x is done from left to right (z = 1) and from right to the left (z \
= 0) starting with position n. The procedure call on inadmissible actual \
arguments is returned unevaluated.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Locals", "::", "usage"}], "=", 
   "\"\<The call Locals[x] returns the list whose elements in string-format \
represent the local variables together with their initial values of a block \
or a module x. While the call Locals[x, y] with the second optional argument \
y \[Dash] an indefinite variable \[Dash] provides the return through y in \
addition or the simple 2-element list, or the ListList-type list with \
2-element sublists, whose first elements define names of local variables of \
the block/module x in string-format, whereas the second element \[Dash] the \
initial values ascribed to them in string-format; lack of the initial values \
is defined by symbol \\\"No\\\". If the object x has no local variables,the \
call Locals[x,y] returns the empty list,i.e.{},the same result is returned \
through the second argument. Moreover,on a typical function the call of the \
procedure returns \\\"Function\\\" value.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PosIntQ", "::", "usage"}], "=", 
   "\"\<The call PosIntQ[n] returns True if n - a  positive number; \
otherwise, False is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PosIntListQ", "::", "usage"}], "=", 
   "\"\<The call PosIntListQ[W] returns True if W - a list of positive \
numbers; otherwise, False is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MapNestList", "::", "usage"}], "=", 
   "\"\<The procedure call MapNestList[x, f, y] returns result of application \
to all nesting levels of a list x of a function f with transfer of the \
arguments determined by optional argument y to it.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StrSub", "::", "usage"}], "=", 
   "\"\<The call StrSub[x, y, z, n] returns the result of replacement in a \
string x of occurrences of a substring y onto a  substring z according to \
numbers n of such occurrences defined by either a positive number or their \
list. In case of absence of occurrences y into string x or inadmissible value \
n the call of procedure StrSub returns value $Failed.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Locals1", "::", "usage"}], "=", 
   "\"\<The call Locals1[P] returns the list of names of local variables in \
string-format of a block or a module P, if local variables are absent for P, \
the call returns the empty list, i.e. {}. In addition, in case of an object P \
of the same name, the call returns the nested list whose elements are \
bijective relative to the elements of list PureDefinition[x].\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Locals2", "::", "usage"}], "=", 
   "\"\<The call Locals2[P] returns the list of names of local variables in \
string-format without initial values ascribed to them of a block or a module \
P, if local variables are absent for P, the call returns the empty list, i.e. \
{}. In addition, in case of an object P of the same name, the call returns \
the nested list whose elements are bijective relative to the elements of list \
PureDefinition[x]. If type of P is different from {Block, Module}, the call \
Locals2[P] is returned unevaluated.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Locals3", "::", "usage"}], "=", 
   "\"\<The procedure Locals3 essentially uses our procedure StringToList, \
and its call Locals3[x] returns the list whose elements in string format \
represent the local variables of a block/module/function x and/or \
2\[Dash]element lists of such variables whose the first element \[Dash] a \
local variable while the second element \[Dash] its initial value if it \
exists, of course. Whereas, on typical functions x the procedure call \
Locals3[x] returns \\\"Function\\\".\>\""}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Globals", "::", "usage"}], "=", 
   "\"\<The procedure call Globals[P] returns the list of global variables in \
string-format of a procedure P. If a procedure P has no global variables, the \
procedure call Globals[P] returns the empty list, i.e. {}. It is necessary to \
note, the procedure Globals[P] as a global variable understands the name of \
an object in the body of a procedure P for which assignment by operators {`: \
=`, `=`} is made and which is distinct from local variables of the main \
procedure P. Therefore the situation when the local variable of a \
subprocedure in procedure P can be determined by procedure Globals[P] as a \
global variable is quite probable.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Globals1", "::", "usage"}], "=", 
   "\"\<The procedure call Globals1[P] returns the list of global variables \
in string-format of a procedure P. If a procedure P has no global variables, \
the procedure call Globals1[P] returns the empty list, i.e. {}. In addition, \
the procedure is extension of procedure Globals onto case of an procedure P \
of arbitrary structure, allowing subprocedures of any level of nesting in own \
body.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Globals2", "::", "usage"}], "=", 
   "\"\<The simple enough function Globals2 distributes action of the \
procedures Globals and Globals1 onto procedures of an arbitrary type; the \
call Globals2[x] returns the list of names in string-format of global \
variables of a procedure x. If a procedure x has no global variables, the \
call Globals2[x] returns the empty list, i.e. {}.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"VarsInBlockMod", "::", "usage"}], "=", 
   "\"\<The procedure call VarsInBlockMod[x] returns the 4\[Dash]element \
list, whose first element defines the list of formal arguments, the second \
element defines the list of local variables, the third element defines the \
list of global variables and the fourth element defines the list of the \
variables other than system variables and names.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Spos", "::", "usage"}], "=", 
   "\"\<The call Spos[x, y, p, d] returns position number of the first \
occurence of an one-letter string y into a string x to the left (d=0) or to \
the right (d=1) from the given position p.\>\""}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SortNL", "::", "usage"}], "=", 
   "\"\<The call SortNL[L, p, b] sorts a listlist L on elements in a \
p-position of its sublists; b = {Greater|Less}. On inadmissible second \
argument p the corresponding message is printed; whereas on inadmissible \
first or third argument the function call is returned unevaluated.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrefixQ", "::", "usage"}], "=", 
   "\"\<The call PrefixQ[x, y] returns True if x is prefix of a string y, and \
False otherwise.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SuffixQ", "::", "usage"}], "=", 
   "\"\<The call SuffixQ[x, y] returns True if x is suffix of a string y, and \
False otherwise.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SortNL1", "::", "usage"}], "=", 
   "\"\<The call SortNL1[L, p, b] returns the result of sorting of a ListList \
L on elements in a p-position of its sublists on the basis of their unique \
decimal codes defined by the procedure GC; b={Greater|Less}. In a certain \
sense the procedure SortNL1 extends the procedure SortNL.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SortNestList", "::", "usage"}], "=", 
   "\"\<The SortNestList[x, p, y] returns the result of sorting of a nested \
numeric or symbolic list x on elements in a p-position of its sublists on the \
basis of sorting function defined by a comparison y; y={Greater|Less} for the \
numeric lists, and y={SymbolGreater|SymbolLess} for the symbolic lists. In \
addition, a nested list with the nesting level 1 is supposed as argument x; \
otherwise, the call returns the initial list x.\>\""}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SortLpos", "::", "usage"}], "=", 
   "\"\<The call SortLpos[L, n, SF] sorts a nested L on elements in a \
n-position of its sublists; SF={Greater|Less}. In addition, the nested list L \
can be different from list of ListList-type. The SortLpos procedure \
programmatically processes the main arising special and wrong situations, by \
returning on them $Failed.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SortString", "::", "usage"}], "=", 
   "\"\<The call SortString[x, F] sorts a string x symbol-by-symbol according \
to a sorting function F={Greater|Less}.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"D1", "::", "usage"}], "=", 
   "\"\<The call D1[x, y] returns the result of differentiation of an \
expression x by a subexpression y. In case of impossibility to do such \
differentiation the call returns $Failed.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Df", "::", "usage"}], "=", 
   "\"\<The call Df[x, y] returns the result of differentiation of x on y. \
The procedure expands standard function D.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Df1", "::", "usage"}], "=", 
   "\"\<The call Df1[x, y] returns the result of differentiation of x on y. \
The procedure expands standard function D. The procedure is an useful \
modification of the procedure Df and is more effective than procedure Df in a \
series of cases.\>\""}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Df2", "::", "usage"}], "=", 
   "\"\<The call Df2[x, y] returns the result of differentiation of x on y. \
The procedure expands standard function D. The procedure is an useful \
modification of the procedure Df and is more effective than procedure Df in a \
series of cases.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Difff", "::", "usage"}], "=", 
   "\"\<The call Diff[x, y, z, ...] returns the differentiation result of an \
expression x on the generalized {y, z, ...} variables which can be an \
arbitrary expressions. The result is returned in the simplified form on the \
basis of the Simplify function.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Diff", "::", "usage"}], "=", 
   "\"\<The call Diff[x, y, z, ...] returns the differentiation result of an \
expression x on the generalized {y, z, ...} variables which can be an \
arbitrary expressions. The result is returned in the simplified form on the \
basis of the Simplify function.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Int", "::", "usage"}], "=", 
   "\"\<The call Int[x, y] returns the result of integration of x on y. The \
procedure expands standard function Integrate.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Int1", "::", "usage"}], "=", 
   "\"\<The call Int1[x, y] returns the result of integration of x on y. The \
procedure expands standard function Integrate. The procedure is an useful \
modification of the procedure Int and is more effective than procedure Int in \
a series of cases.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Integrate1", "::", "usage"}], "=", 
   "\"\<The call Integrate1[x, y] returns the result of integration of an \
expression x by a subexpression y. In case of impossibility to do such \
integration the call returns $Failed.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Integral1", "::", "usage"}], "=", 
   "\"\<The call Integral1[x, y, z, ...] returns the result of integration of \
an expression x on the generalized {y, z, ...} variables which can be an \
arbitrary expressions. The result is returned in the simplified form on the \
basis of the Simplify function.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Integral2", "::", "usage"}], "=", " ", 
   "\"\<The call IntegraL[x, y, z, ...] returns the integration result of an \
expression x on the generalized {y, z, ...} variables which can be an \
arbitrary expressions. The result is returned in the simplified form on the \
basis of the Simplify function.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NamesProc", "::", "usage"}], "=", 
   "\"\<The call NamesProc[] returns the list of names of the user blocks, \
functions and modules directly activated in the current session.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FunctionQ", "::", "usage"}], "=", 
   "\"\<The call FunctionQ[x] returns True, if x is a function of any type \
(traditional or pure), and False otherwise. In addition, the name x of an \
object can be coded both in symbolical, and in string formats; in the second \
case the correct testing of the object x is provided, allowing multiplicity \
of definitions, i.e. object x can be of the same name in the sense stated \
above.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"QFunction", "::", "usage"}], "=", 
   "\"\<The call QFunction[x] returns True on a traditional function x and on \
x objects generated by the Compile function along with pure functions, and \
False otherwise. In addition, as the traditional function the function \
determined by construction of the format J[x_, y_, ...] {:=|=} W(x, y, ...) \
is understood.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"QFunction1", "::", "usage"}], "=", 
   "\"\<The call QFunction1[x] returns True on a traditional function x and \
on x objects, generated by the Compile function, and False otherwise; \
moreover, on an object of the same name x the True value is returned only if \
all its components are traditional functions and/or are generated by the \
Compile function. The call QFunction1[x] assumes coding of actual argument x \
in string-format. In addition, as the traditional function the function \
determined by construction of the format J[x_, y_, ...] {:=|=} W(x, y, ...) \
is understood.\>\""}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PureFuncQ", "::", "usage"}], "=", 
   "\"\<The call PureFuncQ[F] returns True if F is a pure function, and False \
otherwise.\>\""}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Mapp", "::", "usage"}], "=", 
   "\"\<The call Mapp[F, L, g] generalizes standard function Map on number of \
arguments the greater than 2. For example, Mapp[a, {b, c, d}, x, y, z] == \
{a[b, x, y, z], a[c, x, y, z], a[d, x, y, z]};  Mapp[StringReplace, \
{\\\"812345265\\\", \\\"72345957\\\"}, {\\\"2\\\" -> \\\"V\\\", \\\"5\\\" -> \
\\\"G\\\"}] == {\\\"81V34GV6G\\\", \\\"7V34G9G7\\\"}. In addition, the user \
procedure/function, a standard function or a symbol F can be as a factual \
argument F.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Mapp1", "::", "usage"}], "=", 
   "\"\<The call Mapp1[x, y] unlike the call Map[x,y] of the standard \
function returns the result of application of a procedure/function x to all \
elements of a list y, regardless of their membership to the list \
levels.\>\""}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FunCompose", "::", "usage"}], "=", 
   "\"\<The call FunComposep[L, x] returns the nested function from the given \
list of functions L from a variable (expression) x.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PackNames", "::", "usage"}], "=", 
   "\"\<The PackNames procedure solves the problem of obtaining of the names \
list of the objects whose definitions with usages are in a package, being in \
a datafile of the format {\\\"m\\\", \\\"nb\\\"}. In addition, it is supposed \
that package uploading into the current session isn't obligatory. The given \
problem is solved by a quite useful procedure, whose call PackNames[x] \
returns the names list of the above objects in a package, being in a datafile \
x of the format {\\\"m\\\", \\\"nb\\\"}.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PackNames1", "::", "usage"}], "=", 
   "\"\<The PackNames1 procedure solves the problem of obtaining of the names \
list of the objects whose definitions with usages are in a package, being in \
a datafile of the mx\[Dash]format. In addition, it is supposed that package \
loading into the current session isn't obligatory. The given problem is \
solved by a quite useful procedure, whose call PackNames1[x] returns the \
names list of the above objects in a package, being in a datafile x of the mx\
\[Dash]format whose definition are associated with the context of a \
mx\[Dash]file x, for example, by means of Definition function.\>\""}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PackNames2", "::", "usage"}], "=", 
   "\"\<The PackNames2 procedure using Shortest function, whose call \
Shortest[h] is a pattern object that matches the shortest sequence consistent \
with a pattern h, solves the problem of obtaining of the names list of \
objects whose definitions are in a package, being in a file of the \
nb\[Dash]format. At that, it is supposed that package loading into the \
current session isn't obligatory. The given problem is solved by means of a \
quite useful procedure, whose call PackNames2[x] returns the names list of \
the above objects in a package, being in a file x of the \
nb\[Dash]format.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Closes", "::", "usage"}], "=", 
   "\"\<The call Closes[x] closes a datafile x including the closed and null \
files without printing of erroneous messages.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RenDirFile", "::", "usage"}], "=", 
   "\"\<The procedure RenDirFile is an extension of standard functions \
RenameFile and RenameDirectory. Procedure RenDirFile[x, y] provides renaming \
of an element x (directory or datafile) in situ irrespective of its type and \
attributes with preservation of its type and all its attributes; at that, as \
argument y a new name of the element x is used. Therefore the successful \
procedure call RenDirFile[x, y] returns the full path to a renamed element x. \
In the case of existence of an element y the message \\\"Directory/datafile \
<y> already exists\\\" is returned. In other unsuccessful cases the procedure \
call returns the $Failed or is returned unevaluated.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DelEl", "::", "usage"}], "=", 
   "\"\<The call DelEl[L, w, N] returns a list L truncated from the left by \
elements w for N = 1, a list L truncated from the right by elements w for N = \
2, and for N = 3 truncated from both ends; at other values N the call is \
returned unevaluated.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StrDelEnds", "::", "usage"}], "=", 
   "\"\<The call StrDelEnds[S, h, p] returns a string S truncated from the \
left by symbols h for p = 1, a string S truncated from the right by symbols h \
for p = 2, and for p = 3 truncated from both ends; at other values p the \
procedure call is returned unevaluated.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StrDelEnds1", "::", "usage"}], "=", 
   "\"\<The call StrDelEnds1[S, h, p] returns a string S truncated from the \
left by symbols h for p = 1, a string S truncated from the right by symbols h \
for p = 2, and for p = 3 truncated from both ends; at other values p the \
procedure call is returned unevaluated.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StreamsU", "::", "usage"}], "=", 
   "\"\<The call StreamsU[] returns the list containing  Stream-objects \
active in the current session excluding system streams.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CloseAll", "::", "usage"}], "=", 
   "\"\<The call CloseAll[] closes all streams different from system streams \
and returns list of the closed files.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Close1", "::", "usage"}], "=", 
   "\"\<The Close1 procedure generalizes the standard Close function. The \
call Close1[x, y, z, ...] closes all existing datafiles from the list {x, y, \
z, ...} irrespective of quantity of streams on which they were open by \
various qualifiers, returning their list. In other cases the call on \
admissible actual arguments returns the empty list, i.e. { } whereas on \
inadmissible actual arguments the call is returned unevaluated.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Close2", "::", "usage"}], "=", 
   "\"\<The procedure Close2 is a functional analog of the above procedure \
Close1. The procedure call Close2[x, y, z, ...] closes all off \
really\[Dash]existing datafiles in a list {x, y, z, ...} irrespective of \
quantity of streams on which they have been opened by various files \
qualifiers with returning their list. In other cases the call on admissible \
actual arguments returns the empty list, i.e. {} whereas on inadmissible \
actual arguments a call is returned unevaluated.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MixCaseQ", "::", "usage"}], "=", 
   "\"\<The call MixCaseQ[x] returns the True if string x contains letters on \
different registers and the False otherwise. If x contains special symbols \
only the \\\"Special Characters\\\" is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FileOpenQ", "::", "usage"}], "=", 
   "\"\<The call FileOpenQ[F] returns the list {{R, F, Channel}, ...}, if \
file F is open for reading/writing (R = {\\\"read\\\"|\\\"write\\\"}), \
defines actually file F in the stylized format (LowerCase + all occurrences \
\\\"\\\\\\\" are replaced on \\\"/\\\") and element Channel defines the logic \
channel per which the file F was open; if file F is closed False is returned, \
if file F is absent $Failed is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FileOpenQ1", "::", "usage"}], "=", 
  "\"\<Procedure FileOpenQ1 is an enough useful extension of the procedure \
FileOpenQ. The procedure call FileOpenQ1[F] returns the nested list of the \
format {{R,x,y,...,z}, {{R,x1,y1,...,z1}} if a datafile F is open for reading \
or writing (R = {\\\"in\\\" | \\\"out\\\"}), and F defines the datafile in \
any format (Register + \\\"/\\\" and/or \\\"\\\\\\\"); if the datafile F is \
closed or is absent, the empty list is returned, i.e. {}. Moreover, sublists \
{x, y, ..., z} and {x1, y1, ..., z1} define datafiles or full paths to them \
that are open for reading and writing respectively. Moreover, if in the \
current session all user datafiles are closed, except system files, the call \
FileOPenQ1[x] on an arbitrary string x returns $Failed. The datafiles and \
paths to them are returned in formats which are defined in the list returned \
by the function call Streams[], irrespective of the format of the datafile F.\
\>\""}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{"InOutFiles", "::", "usage"}], "=", 
   "\"\<The call InOutFiles[] returns 2\[Dash]element list whose the first \
element defines the list of datafiles opened for reading while the second \
element defines the list of datafiles opened for writing; in the absence of \
the user's open datafiles the empty list is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"OpenFileQ", "::", "usage"}], "=", 
   "\"\<The call OpenFileQ[x] returns True if a datafile x accurate within \
standard format coincides with a datafile from the list InOutFiles[], \
otherwise False is returned; in addition, the call OpenFileQ[x, y] through an \
undefined symbol y returns the 2-element list with all such datafiles in case \
of the main result True. The first sublist defines the datafiles opened for \
reading whereas the second sublist defines the datafiles opened for \
writing.\>\""}], " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Need", "::", "usage"}], "=", 
   "\"\<The call Need[x] loads a package which corresponds to a \
x\[Dash]context into the current session provided that the corresponding \
datafile of the format {\\\".m\\\"|\\\".mx\\\"} is in one of the catalogs \
determined by the system variable $Path, with True return; otherwise the call \
returns value $Failed. While the call Need[x, y] loads a package which \
corresponds to a x\[Dash]context into the current session provided that the \
corresponding datafile of the format {\\\".m\\\"|\\\".mx\\\"} is or in one of \
the subdirectories determined by the system variable $Path, or is defined by \
argument y, with True return; otherwise value $Failed is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UpdatePath", "::", "usage"}], "=", 
   "\"\<The call UpdatePath[x] expands a list of directories defined by the \
global variable $Path onto directories defined by a list or a string \
x.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UpdatePackages", "::", "usage"}], "=", 
   "\"\<The call UpdatePackages[P] expands a list of packages defined by the \
global variable $Packages onto a package P or their list. Argument P defines \
the context of a package P, or the list of contexts of appropriate packages. \
The procedure call returns Null, i.e. nothing.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UpdateContextPaths", "::", "usage"}], "=", 
   "\"\<The call UpdateContextPaths[P] expands a list of paths defined by the \
global variable $ContextPaths onto a context P or their list. The procedure \
call returns Null, i.e. nothing.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Adrive", "::", "usage"}], "=", 
   "\"\<The call Adrive[] returns the list of names of all active devices of \
external memory in string-format in the current session.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Adrive1", "::", "usage"}], "=", 
   "\"\<Procedure Adrive1 extends the procedure Adrive. The call Adrive1[] \
returns the 2-element nested list, whose first sublist contains names of all \
active devices of external memory in string-format whereas the second sublist \
contains names of all inactive devices of external memory.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetDir", "::", "usage"}], "=", 
   "\"\<The procedure call SetDir[x] on an existing subdirectory x does it \
current while a nonexistent subdirectory is previously created and then it is \
defined as the current subdirectory. At that, if the factual x-argument at \
the call SetDir[x] is determined by a chain without name of the IO device, \
for example, \\\"aa\\\\\\\\...\\\\\\\\bb\\\", then a chain of the \
subdirectories Directory[] <> \\\"aa\\\\\\\\...\\\\\\\\bb\\\" is created that \
determines a full path to the created current subdirectory. The unsuccessful \
procedure call returns $Failed, for example, at an inactive IO device.\>\""}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetDir1", "::", "usage"}], "=", 
   "\"\<The SetDir1 \[Dash] an extension of the procedure SetDir. In case of \
lack of the device for the given chain of directories w the call SetDir1[w] \
returns the created chain of subdirectories on the device having the greatest \
possible volume of available memory among all active devices of direct access \
in the current session.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Nobj", "::", "usage"}], "=", 
   "\"\<The call of procedure Nobj[x, y] returns the list of names in \
string-format of objects, saved earlier in a file x by means of function Save \
whereas through the second actual argument y the list of headings in \
string-format of the given objects is returned. Such decision is essential \
enough since in a file x can be the same objects with various headings which \
identify uniqueness of an object.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Aobj", "::", "usage"}], "=", 
   "\"\<The procedure call Aobj[w, y] activates in the current session all \
objects with a name y from a m\[Dash]file w, which had been earlier created \
by means of the chain of functions GUI: `File \[Dash]> Save As \[Dash]> \
Mathematica Package (*.m)`, returning Null. Moreover, as the second argument \
y for the Aobj procedure a single symbol or their list can act. Besides that \
is supposed, before preservation in the m\[Dash]file x all definitions of \
objects in the current document were calculated in separate \
Input\[Dash]paragraphs and should have headings. The successful call of the \
Aobj procedure returns nothing with printing of the message concerning means \
which were loaded from the m\[Dash]file x or which are absent in the datafile \
x.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Aobj1", "::", "usage"}], "=", 
   "\"\<The Aobj1 procedure is a rather useful extension of the previous Aobj \
procedure. Like the Aobj procedure the Aobj1 procedure also is used for \
activation in the current session of the objects which are in a \
m\[Dash]datafile which is earlier created by means of chain `File -> Save As \
-> Mathematica Package (*.m)` of the GUI commands. The successful call \
Aobj1[x, y] returns Null, i.e. nothing with output of the messages concerning \
those means that were uploaded from a m\[Dash]file x and that are absent in \
the datafile. Moreover, as the second argument y at the procedure call Aobj1 \
the separate symbol or their list can be. Besides that is supposed, before \
saving in a m\[Dash]datafile x all definitions of objects in the saved \
document should be evaluated in separate Input\[Dash]paragraphs on the basis \
of delayed assignments however existence of headings not required. Right \
there it should be noted that for ability of correct processing of the m\
\[Dash]files created in the specified manner the predetermined $AobjNobj \
variable is used, that provides correct processing of the datafiles \
containing the procedures, in particular, Aobj and Aobj1.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map1", "::", "usage"}], "=", 
  "\"\<The call Map1[{F, G, H,...}, {x, y, z,...}] returns the list of the \
format {F[x, y, z,...], G[x, y, z,...], H[x, y, z,...],...}.\>\""}], "\
\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map2", "::", "usage"}], "=", 
  "\"\<The call Map2[F, {a, b, c,...}, {x, y, z,...}] returns the list of the \
format {F[a, x, y, z,...], F[b, x, y, z,...], F[c, x, y, z,...],...}.\>\""}], \
"\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map3", "::", "usage"}], "=", 
  "\"\<The call Map3[F, H, {x, y, z, h,...}] returns the list of the format \
{F[H, x], F[H, y], F[H, z], F[H, h],...}.\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map4", "::", "usage"}], "=", 
  "\"\<The call Map4[F, {x, y, z, h,...}, H] returns the list of the format \
{F[x,H], F[y, H], F[z, H], F[h, H],...}.\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map5", "::", "usage"}], "=", 
  "\"\<The call Map5[F, {{x1, y1, ...}, {x2, y2, ...}, {x3, y3, ...}, ...}] \
returns the list of the format {F[x1, y1, ...], F[x2, y2, ...], F[x3, y3, \
...], ...}.\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Map6", "::", "usage"}], "=", 
   "\"\<The call Map6[F, {{x1, y1, ...}, {x2, y2, ...}, {x3, y3, ...}, ...}] \
returns the list of the format {F[x1, y1, ...], F[x2, y2, ...], F[x3, y3, \
...], ...}, if a function F is presented in short form <#1,#2, ..., #3,...> \
&.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Map7", "::", "usage"}], "=", 
   "\"\<The call Map7[F, G, H, ..., V, {a, b, c, ..., v}], where F, G, H, \
..., V - the arbitrary symbols and {a, b, c, ..., v} - the list of arbitrary \
expressions, returns the list of the format {F[G[H[... V[a]]]] ... ], F[G[H[ \
... V[b]]]] ... ], F[G[H[ ... V[c]]]] ... ], ..., F[G[H[ ... V[v]]]] ...]}.\>\
\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Map8", "::", "usage"}], "=", 
   "\"\<The call Map8[F, G, H, ..., V, {a, b, c, ..., v}], where F, G, H, \
..., V - symbols and {a, b, c, ..., v} - the list of arbitrary expressions, \
returns the list of the format {F[a, b, c, ..., v], G[a, b, c, ..., v], H[a, \
b, c, ..., v], ..., V[a, b, c, ..., v]}.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Map9", "::", "usage"}], "=", 
   "\"\<The call Map9[F, {a, b, c, ..., v}, {a1, b1, c1, ..., v1}], where F - \
a symbol and {a, b, c, ..., v}, {a1, b1, c1, ..., v1} - the lists of \
arbitrary expressions, returns the list of the format {F[a, a1], F[b, b1], \
F[c, c1], ..., F[v, v1]}.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Map10", "::", "usage"}], "=", 
   "\"\<The call Map10[[F, x, {a, b, ..., v}, c1, c2, ..., cn], where F - a \
symbol whereas x and {a, b, c, ..., v} - an arbitrary expression and the list \
of arbitrary expressions accordingly, and c1, c2, ..., cn - optional \
arguments - returns the list of the format {F[x, a, c1, c2, ...], F[x, b, c1, \
c2, ...], F[x, c, c1, c2, ...], ..., F[x, v, c1, c2, ...]}.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Map11", "::", "usage"}], "=", 
   "\"\<The call Map11[F, {{x, y, z, ...}, {a, b, c, ...}, ...}, h], where F \
\[Dash] a symbol whereas {x, y, z, ...}, {a, b, c, ...}, ... and h \[Dash] \
arbitrary expressions returns the list of the format {{F[x, h], F[y, h], F[z, \
h], ...}, {F[a, h], F[b, h], F[c, h], ...}, ...}.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Map12", "::", "usage"}], "=", 
   "\"\<The call Map12[F, {{a, b, c, ..., v}, {a1, b1, c1, ..., v1}, ..., \
p,...,{ap, bp, cp, ..., vp}}], where F - an arbitrary symbol, whereas the \
second factual argument - the nested list of any nesting of arbitrary \
expressions accordingly - returns the list of the format {Map[F, {a, b, c, \
..., v}], Map[F, {a1, b1, c1, ..., v1}], ..., F[p] ,..., Map[F, {ap, bp, cp, \
..., vp}]}.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Map13", "::", "usage"}], "=", 
   "\"\<The call Map13[F, {{a, b, c, ..., v}, {a1, b1, c1, ..., v1}, ..., \
{ap, bp, cp, ..., vp}}], where F - an arbitrary symbol, whereas the second \
factual argument - the nested list of ListList-type of arbitrary expressions \
accordingly - returns the list of the format {F[a, a1, a2, ..., ap], F[b, b1, \
b2, ..., bp], F[c, c1, c2, ..., cp], ..., F[v, v1, v2, ..., vp]}.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Map14", "::", "usage"}], "=", 
   "\"\<The call Map14[F, {a, b, c, ..., v}, y], where F - an arbitrary \
symbol, whereas the second factual argument - the list of arbitrary \
expressions, and y is an arbitrary expression - returns the list of the \
format {F[a, y], F[b, y], F[c, y], F[d, y], ..., F[v, y]}. In addition, use \
in call Map14[F, {a, b, c, ..., v}, y, t] of the optional fourth actual \
argument - any expression - returns result of the following format, namely: {\
\\\"F[a, y]\\\", \\\"F[b, y]\\\", \\\"F[c, y]\\\", \\\"F[d, y]\\\",..., \
\\\"F[v, y]\\\"}.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Map15", "::", "usage"}], "=", 
   "\"\<The call Map15[F1, F2, ..., Fp, W], where Fj \[Dash] the arbitrary \
symbols (j=1..p), whereas W \[Dash] an arbitrary expression returns the list \
of the format F1[t], F2[t], F3[t], F4[t], ..., Fp[t]}.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Map16", "::", "usage"}], "=", 
   "\"\<The call Map16[F, {a, b, ..., v}, c1, c2, ..., cn], where F - a \
symbol whereas {a, b, c, ..., v} - the list of arbitrary expressions, and c1, \
c2, ..., cn - optional arguments accordingly - returns the list of the format \
{F[a, c1, c2, ...], F[b, c1, c2, ...], F[c, c1, c2, ...], ..., F[v, c1, c2, \
...]}.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Map17", "::", "usage"}], "=", 
   "\"\<The call Map17[F, {a \[Dash]> b, c \[Dash]> d, ...}], where F \[Dash] \
a symbol whereas {a \[Dash]> b, c \[Dash]> d, ...} \[Dash] the list of rules \
returns the list of the format {F[a] \[Dash]> F[b], F[c] \[Dash]> F[d], ...} \
without demanding any additional explanations in view of its \
transparency.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Map18", "::", "usage"}], "=", 
   "\"\<The call Map18[x, y], where x \[Dash] the list {x1, x2, ..., xn} of \
symbols and y \[Dash] the list {y1, y2, ..., yp} of any expressions, returns \
the nested list of the following format, namely:\n\n{{x1[y1], x1[y2], ..., \
x1[yp]}, {x2[y1], x2[y2],..., x2[yp]}, ..., {xn[y1], xn[y2], ..., xn[yp]}}\n\n\
The result returned by the function call Map18[x, y] is transparent enough \
and of special explanations doesn't demand.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Map19", "::", "usage"}], "=", 
   "\"\<The call Map19[x, y], where x \[Dash] the list {x1, x2, ..., xj, ..., \
xp} of symbols and y \[Dash] the list {y1, y2, ..., yj, ..., yp} of arbitrary \
expressions, returns the nested list of the following format, namely: \
{x1[y1], x2[y2], ..., xj[yj], ..., xp[yp]} (j = 1..p). If yj = {a, b, c, ...} \
then xj[a, b, c, ...]. The result returned by the function call Map19[x, y] \
is transparent enough and of special explanations doesn't demand.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Map20", "::", "usage"}], "=", 
   "\"\<The call Map20[x, y], where x \[Dash] the list {x1, x2, ..., xj, ..., \
xp} of symbols and y \[Dash] the nested list {{y1}, {y2}, ..., {yj, ..., \
yjn}, ..., {yp}} of NestList\[Dash]type of arbitrary expressions, returns the \
nested list of the following format, namely: {x1[y1], x2[y2], ..., xj[yj, \
..., yjn], ..., xp[yp]} (j = 1..p). If yj = {a, {b}, c, ...} then xj[a, {b}, \
c, ...]. The result returned by the function call Map20[x, y] is transparent \
enough and of special explanations doesn't demand.\>\""}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CDir", "::", "usage"}], "=", 
   "\"\<The call CDir[d] creates a chain of subdirectories defined by string \
d; in addition, if drive does not exist the first drive is chosen from list \
of existing active drivers that has maximal size of free space.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FileFormat1", "::", "usage"}], "=", 
   "\"\<The procedure call FileFormat1[x] returns the simple or nested list, \
first element of a simple list defines the full path to a datafile x while \
the second element \[Dash] its format that is recognized by the FileFormat \
function; at that, the required datafile can be located in any directory of \
file system of the computer; absence of a datafile x initiates the return of \
the empty list, i.e. {}. Moreover, at finding several datafiles with an \
identical name the nested list whose sublists have the specified format is \
returned.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FileFormat2", "::", "usage"}], "=", 
   "\"\<The procedure FileFormat2 is an extension of the procedure \
FileFormat1 in case of the root directories of direct-access volumes. The \
call of procedure FileFormat2[x] returns the format of a datafile x, located \
in any catalogue of file system of a computer, similarly to standard function \
FileFormat; in addition, absence of the datafile x initiates return of the \
empty list; otherwise, the simple or nested list is returned, at that the \
first element of such list defines full path to the datafile x whereas the \
second - its format, recognizable by function FileFormat. Moreover, at \
finding of several files with identical name x, the nested list whose \
sublists have the specified format is returned. If x - the root directory of \
a direct-access volume the \\\"Directory\\\" is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FileFormat3", "::", "usage"}], "=", 
   "\"\<The call FileFormat3[x] returns the type of a datafile which has been \
set by a name or a qualifier x. In addition, if the file has an expansion, it \
will be the type of datafile x. Whereas the call FileFormat3[x, y] with the \
second optional argument \[Dash] an expression y \[Dash] in case of the \
datafile without expansion of the name returns the full name of the file with \
the extension defined for it, at the same time renaming the file x to the \
evaluated format. In a certain relation the Format3 procedure complements the \
procedures Format1 and Format2.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LoadExtProg", "::", "usage"}], "=", 
   "\"\<The successful call LoadExtProg[x] provides search in file system of \
the computer of a program x given by the full name with its subsequent \
copying into the subdirectory defined by the call Directory[]. The successful \
procedure call LoadExtProg[x] searches out a datafile x in file system of the \
computer and copies it into the directory defined by the call Directory[], \
returning Directory[]<>\\\"\\\\\\\"<>x if the datafile already was in this \
subdirectory or has been copied into this directory. In addition the first \
directory containing the found datafile x supplements the list of the \
directories determined by the predetermined $Path variable. Whereas the \
procedure call LoadExtProg[x, y] with the second optional argument y \[Dash] \
an undefinite variable \[Dash] in addition through y returns the list of all \
full paths to the found datafile x without modification of the directories \
list determined by the predetermined $Path variable. In the case of absence \
of opportunity to find a required datafile x $Failed is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Range1", "::", "usage"}], "=", 
   "\"\<The call Range1[J1, Jp]  returns the list {J1, J2, J3, ..., Jp}, \
where J is a name and p is an positive integer. In addition, actual arguments \
{J1, Jp} are encoded in the format $xxx_yyyN (N = {0..p|1..p}).\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Range2", "::", "usage"}], "=", 
   "\"\<The call Range2[J , p]  returns the list {J1, J2, J3, ..., Jp}, where \
J is a name and p is an positive integer.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Range3", "::", "usage"}], "=", 
   "\"\<The call Range3[J , p]  returns the list {J1_, J2_, J3_, ..., Jp_}, \
where J is a name and p is an positive integer.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Range4", "::", "usage"}], "=", 
   "\"\<The calls Range4[x], Range4[x, y], Range4[x, y, z] on numerical \
arguments are equivalent to the calls Range[x], Range[x, y], Range[x, y, z] \
of standard function accordingly, at the same time as the call Range4[x, y] \
on symbols in string-format with codes 32 \[Divide] 4096 is equivalent to the \
call CharacterRange[x, y], the call Range4[x] returns the list of symbols \
with codes that are smaller or equal ToCharacterCode[x].\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Range5", "::", "usage"}], "=", 
   "\"\<The function call Range5[x] returns a list that is formed on the \
basis of tuple x consisting from simple elements and spans.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AssignToList", "::", "usage"}], "=", 
   "\"\<The call AssignToList[L, Z, n] assigns values of elements of a list L \
to the corresponding elements of the generated list {Z1, Z2, ..., Zn} (n >= \
1), returning the list of assigned values.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AssignL", "::", "usage"}], "=", 
   "\"\<The function call AssignL[x, y] provides correct assignment to \
elements (to all or the given elements) of an arbitrary expression or \
expressions from the list y, modeling assignments on the basis of \
constructions of the format {x, y, z, \[Ellipsis]}[[n]] = Ex and {x, y, z, \
\[Ellipsis]}[[n ;; p]] = {Exn, Exn+1, \[Ellipsis], Exp} and to them similar \
which the system doesn't support while the function call AssignL[x, y, w] \
where w \[Dash] an expression \[Dash] provides the correct delayed \
assignments of the above-stated kind, as visually illustrates the previous \
fragment. At that, the function call on inadmissible appointments returns \
$Failed.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TransListList", "::", "usage"}], "=", 
   "\"\<The call TransListList[x] returns result of transposition of a list x \
of ListList-type. Procedure TransListList operates by the principle of the \
switch.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CALL", "::", "usage"}], "=", 
   "\"\<The call CALL[G [x, ...], d] of the CALL procedure provides return of \
the result of the call G[x, ...] of a procedure/function G provided that its \
definition is in the datafile \\\"G.txt \\\" from a library directory which \
is defined by the second optional argument d. In case of the procedure call \
with one argument, the current directory defined by the call Directory[] is \
understood as the library directory. Moreover, if the datafile \\\"G.txt \\\" \
is absent then the procedure CALL returns $Failed. If procedure/function G is \
already activated in the current session, the datafile \\\"G.txt \\\" is \
ignored, and the call CALL[G[x, ...]] treats active object with name G. If \
the datafile \\\"G.txt \\\" contains definitions of several \
procedures/functions G of the same name, the call CALL[G[x, ...], d] is made \
concerning its last definition.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CALLmx", "::", "usage"}], "=", 
   "\"\<The CALLmx procedure is an useful extension of the CALL procedure; \
its call provides saving in a library directory of definitions of objects in \
the form of mx\[Dash]datafiles with possibility of their subsequent loading \
in the current session or other session of the system Mathematica. The call \
CALLmx[y, 1, d] returns the list, whose first element defines a library \
catalog, whereas the others define names of objects from the argument y (a \
separate name or their list) whose definitions are evaluated in the current \
session; the optional argument d defines the directory in which the evaluated \
definitions of objects from y in the form of mx\[Dash]datafiles with names \\\
\"Name.mx \\\" (where Name \[Dash] the name of an object determined by \
argument y) will be located; in case of absence of argument d the library \
catalog is determined by the call Directory[]. While the call CALLmx[y, 2, d] \
provides loading in the current session of objects, whose names are defined \
by argument y, from the library catalog determined by the third argument d or \
its absence.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CALLmxH", "::", "usage"}], "=", 
   "\"\<The CALLmxH procedure is one of possible modifications of the CALLmx \
procedure supporting work with help database of the user library. For help \
database the list structure of the following format is used, namely:\n\n      \
     Help[] := {F1::usage = \\\"Help on object F1\\\", ..., Fn::usage = \
\\\"Help on object Fn\\\"}\n\nWhereas the format of the procedure call \
becomes CALLmxH[{F1,...,Fn}, {1|2}, Help, d], when everything the told \
relative to the first, second and fourth arguments concerning the call \
CALLmx[{F1,...,Fn}, {1|2}, d] of the CALLmx procedure completely is upheld, \
whereas the argument Help defines a help database of a library. At such \
approach the call CALLmxH[{F1,...,Fn}, 1, Help, d] (where the argument d is \
optional) creates the set of mx-files with definitions of means of the user \
library and the mx\[Dash]file with help database. All subsequent loadings of \
the library by the call CALLmxH[{F1,...,Fn }, 2, Help, d] not only provide in \
the current session the availability of definitions of means {F1,...,Fn} that \
are situated in the user library, but also their usages from its help \
database.\>\""}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DirQ", "::", "usage"}], "=", 
   "\"\<The call DirQ[d] returns the True if string d defines a real \
directory, and the False otherwise. The procedure expands the conventional \
testing function DirectoryQ onto case of different codings of \
directories.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DirEmptyQ", "::", "usage"}], "=", 
   "\"\<The call DirEmptyQ[d] returns True if a directory d is empty; \
otherwise, False is returned. The call is returned unevaluated if d is not a \
real directory.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DirFD", "::", "usage"}], "=", 
   "\"\<In addition to the procedure DirEmptyQ, the procedure DirFD[d] \
provides return of the nested list whose first element defines the list of \
subdirectories of the first level of a directory d whereas the second - the \
list of datafiles of the directory d. If the directory d is empty, the call \
of procedure returns the empty list, i.e. {}.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DirFull", "::", "usage"}], "=", 
   "\"\<In addition to the DirFD procedure the DirFull procedure represents a \
quite certain interest, whose call  DirFull[d] returns the list of all full \
paths to the subdirectories and files contained in a directory d and its \
subdirectories; the first element of this list \[Dash] the directory d. While \
on an empty directory d the call DirFull[d] returns the empty list, i.e. {}. \
The fragment below represents source code of the DirFull procedure with \
examples of its usage.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FindSubDir", "::", "usage"}], "=", 
   "\"\<Procedure FindSubDir provides search in the file system of a computer \
or in the file system of the given devices of external memory with the direct \
access, given by their names in string-format, the full paths containing a \
subdirectory x, given by its name in string-format. In addition, the call \
FindSubDir[x] returns the list of full paths within of all file system of a \
computer, whereas the call FindSubDir[x, y, z, ...] - within of the file \
system of devices {y, z, ...} only.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TypeFilesD", "::", "usage"}], "=", 
  "\"\<In addition to the DirFull procedure the call TypeFilesD[d] of the \
procedure TypeFilesD returns the sorted list of types of the files located in \
a directory d with returning of \\\"undefined\\\" on datafiles without of a \
name extension.  At that, the datafiles located in the directory d and in all \
its subdirectories of an arbitrary nesting level are considered. Moreover, on \
the empty directory d the procedure call TypeFilesD[d] returns the empty \
list, i.e. {}.\>\""}], "\[IndentingNewLine]", "CopyFileToDir", "\
\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DirName", "::", "usage"}], "=", 
   "\"\<The call DirName[F] returns the \\\"None\\\" if F is a real \
directory, the path to a directory containing a datafile F, and $Failed \
otherwise. The procedure expands the standard function DirectoryName onto \
case of real existence of F. Moreover, search is done within all file system \
of the computer, but not within only system of subdirectories determined by \
the predetermined $Path variable.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CopyDir", "::", "usage"}], "=", 
   "\"\<The call CopyDir[d1, d2] copies a full directory d1 into a directory \
d2; if the target directory exists the directory d1 is copied as its \
subdirectory with returning path to the new directory. The function expands \
the standard function CopyDirectory onto case of existing target directories.\
\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CopyFileToDir", "::", "usage"}], "=", 
   "\"\<The procedure call CopyFileToDir[x, y] provides copying of a datafile \
or directory x into a directory y with return of the full path to the copied \
datafile or directory. If the copied datafile already exists, it isn't \
updated if the target directory already exists, the directory x is copied \
into its subdirectory of the same name.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CopyFile1", "::", "usage"}], "=", 
   "\"\<The CopyFile1 procedure is an useful enough generalization of the \
standard CopyFile function whose call CopyFile[w1, w2] returns the full name \
of the datafile it copies to and $Failed if it cannot do the copy; in \
addition, datafile w1 must already exist whereas datafile w2 must not. Thus, \
in the program mode the standard function is insufficiently convenient. The \
procedure call CopyFile1[w1, w2] returns the full path to the datafile that \
had been copied. In contrast to the standard function, the procedure call \
CopyFile1[w1, w2] returns the list of format {w2, w2*}, where w2 \[Dash] the \
full path to the copied datafile and w2* \[Dash] the full path to the \
previously existing copy of a datafile \\\"xyz.abc\\\" in the format \
\\\"$xyz$.abc\\\", if the target directory for w2 already contained datafile \
w1. In the case w1 \!\(\*
StyleBox[\"\[Congruent]\",
FontSize->18]\) w2 (where identity is considered up to standardized paths of \
both files) the procedure call returns the standardized path to the datafile \
w1, doing nothing. In the other successful cases the call CopyFile[w1, w2] \
returns the full path to the copied datafile. Even, if the nonexistent path \
to the target directory for the copied datafile is defined, then such path \
taking into account available devices of direct access will be \
created.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DelDirFile", "::", "usage"}], "=", 
   "\"\<Similarly to standard functions DeleteFile and DeleteDirectory, the \
call DelDirFile[x] deletes from file system of a computer a file or a \
directory x, returning Null, i.e. nothing. Whereas the call DelDirFile[x, y] \
with the second optional argument y \[Dash] an arbitrary expression \[Dash] \
deletes from file system of a computer a file or a directory x, \
irrespectively from existence of attribute Read-only.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DelDirFile1", "::", "usage"}], "=", 
   "\"\<The DelDirFile1 procedure presents an useful enough extension of the \
DelDirFile procedure onto the case of open datafiles in addition to the Read\
\[Dash]only attribute for both separate datafiles, and the datafiles being in \
the deleted directory. The call DelDirFile1[x] is fully equivalent to the \
call DelDirFile1[x, y], providing removal of a datafile or a directory \
irrespective of openness of the separate datafile and the Read\[Dash]only \
attribute ascribed to it, or existence of similar datafiles in the removed \
directory.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Attrib", "::", "usage"}], "=", 
   "\"\<The successful procedure call Attrib[f, \\\"Attr\\\"] returns the \
list of attributes of a given datafile or directory f in the context Archive \
(\\\"A\\\"), Read\[Dash]only (\\\"R\\\"), Hidden (\\\"H\\\") and System \
(\\\"S\\\"). At that, also other attributes inherent to the system datafiles \
and directories are possible; thus, in particular, on the main directories of \
devices of external memory \\\"Drive f\\\",  while on a nonexistent directory \
or datafile the message \\\"f isn't a directory or datafile\\\" is returned. \
At that, the call is returned in the form of the list of the format {x, y, \
..., z, F} where the last element determines a full path to a datafile or \
directory f; the datafiles and subdirectories of the same name can be in \
various directories, however processing of attributes is made only concerning \
the first datafile/ directory from the list of the objects of the same name. \
If the full path to a datafile/directory f is defined as the first argument \
of the Attrib procedure, specifically only this object is processed. The \
elements of the returned list that precede its last element determine \
attributes of a processed directory or datafile. The procedure call Attrib[f, \
{}] returns Null, i.e. nothing, canceling all attributes for a processed \
datafile/directory f whereas the procedure call Attrib[f, {\\\"x\\\", \\\"y\\\
\",..., \\\"z\\\"}] where x, y, z\[Element]{\\\"\[Dash]A\\\",  \\\"\[Dash]H\\\
\", \\\"\[Dash]S\\\", \\\"\[Dash]R\\\", \\\"+A\\\", \\\"+H\\\", \\\"+S\\\", \
\\\"+R\\\"}, also returns Null, i.e. nothing, setting/cancelling the \
attributes of the processed datafile/directory f determined by the second \
argument. At impossibility to execute processing of attributes the procedure \
call Attrib[f,x] returns the corresponding messages. The Attrib procedure \
allows to carry out processing of attributes of both the file, and the \
directory located in any place of file system of the computer.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Attrib1", "::", "usage"}], "=", 
   "\"\<The Attrib1 procedure in many respects is similar to the Attrib \
procedure both in the functional, and in the descriptive relation, but the \
Attrib1 procedure has certain differences. The successful procedure call \
Attrib[f, \\\"Attr\\\"] returns the list of attributes in string format of a \
directory or datafile f in the context Archive (\\\"A\\\"), Read-only \
(\\\"R\\\"), Hidden (\\\"H\\\"), System (\\\"S\\\"). The procedure call \
Attrib[f, {}] returns Null, i.e. nothing, canceling all attributes for the \
processed datafile/directory f whereas the procedure call Attrib[f, \
{\\\"x\\\", \\\"y\\\",..., \\\"z\\\"}] where x, y, z\[Element]{\\\"\[Dash]A\\\
\", \\\"\[Dash]H\\\", \\\"\[Dash]S\\\", \\\"\[Dash]R\\\", \\\"+A\\\", \
\\\"+H\\\", \\\"+S\\\", \\\"+R\\\"}, also returns Null, i.e. nothing, \
setting/cancelling the attributes of the processed datafile/directory f \
determined by the second argument, while call Attrib1[f, x, y] with the 3rd \
optional argument y \[Dash] an expression \[Dash] in addition deletes the \
program file \\\"attrib.exe\\\" from the directory determined by the call \
Directory[]. At that, the possibility of removal of the \\\"attrib.exe\\\" \
program file from the directory which is defiined by the call Directory[] \
after a call of the Attrib1 procedure leaves file Mathematica system \
unchanged.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Attribs", "::", "usage"}], "=", 
   "\"\<This procedure provides only two functions \[Dash] (1) obtaining the \
list of the attributes ascribed to a datafile or directory, and (2) removal \
of all ascribed attributes. The call  Attribs[x] returns the list of \
attributes in string format which are ascribed to a datafile or directory x. \
On the main directories of volumes of direct access the procedure call \
Attribs returns $Failed. While the call Attribs[x, y] with the second \
optional argument y \[Dash] an expression \[Dash] deletes all attributes \
which are ascribed to a datafile or directory x with returning at a \
successful  call 0. At that, the file \\\"attrib.exe\\\" is removed from the \
directory defined by the call Directory[] after a call of the \
procedure.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DelAllAttribs", "::", "usage"}], "=", 
   "\"\<The successful call DelAllAttribs[x] returns 0, providing the removal \
of all attributes, ascribed to a datafile or a directory x.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InsertN", "::", "usage"}], "=", 
   "\"\<The procedure call InsertN[S, L, n] returns the result of inserting \
into string S of substrings, defined by a list L after its positions defined \
by a list n. In a case n = {<1 | StringLength(S)} the corresponding substring \
from L is located before the beginning of string S or in its end accordingly. \
It is supposed that actual arguments L and n can contain different number of \
elements; in such case odd elements of n is ignored. In addition, processing \
of a string S is carried out concerning the list m of positions for inserts \
defined according to the following relation m = \
DeleteDuplicates[Sort[n]].\>\""}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DelSubStr", "::", "usage"}], "=", 
   "\"\<The procedure call DelSubStr[S, L] returns the result of deleting \
from a string S of substrings, defined by a list L of its extremal positions, \
and extreme symbols defined by list L of their positions.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GV", "::", "usage"}], "=", 
   "\"\<The call GV[] returns the list of special symbols and global \
variables of the package at the current session.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Names1", "::", "usage"}], "=", 
   "\"\<The call Names1[] returns the nested 4-element list, whose first \
element defines the list of names of the procedures, the second - the list of \
names of functions, the third element - the list of names whose definitions \
have been evaluated in the current session of the package, whereas the fourth \
element defines the list of other names associated with the current \
session.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CurrentNames", "::", "usage"}], "=", 
   "\"\<The procedure call CurrentNames[] returns the nested list, whose \
elements define sublists of names in string format of means of the current \
session which by the first element are identified by their context other than \
the context \\\"System'\\\". While the procedure call CurrentNames[x] where x \
\[Dash] an undefinite symbol \[Dash] through x returns the nested list of the \
above format whose first element of sublists is a context whereas the others \
define symbols with this context that have no definitions, i.e. so-called \
concomitant symbols of different types.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtrPackName", "::", "usage"}], "=", 
   "\"\<The call ExtrPackName[F, N] returns definition of an object N along \
with its calculation which is contained in a m-file F with a package, doing \
this definition as an accessible in the current session. If format of file F \
is distinct from the m-format, the call returns the value `$Failed` whereas \
at absence in the file F of requested object N the call returns the \
corresponding message.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SearchFile", "::", "usage"}], "=", 
   "\"\<The call SearchFile[F] returns the list containing full paths to a \
datafile F found in file system of a computer; if the datafile F has not been \
found, the empty list is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SearchFile1", "::", "usage"}], "=", 
   "\"\<The SearchFile1 procedure is a functional analog of the SearchFile \
procedure. The call SearchFile[F] returns the list of full paths to a \
datafile F found within file system of the computer; in the case of absence \
of the required file F the procedure call SearchFile[F] returns the empty \
list, i.e. {}. The procedure SearchFile1 essentially uses the procedure \
Adrive that is used by a number of our means of access. It should be noted \
that speed of both procedures generally very essentially depends on the sizes \
of file system of the computer, first of all, if a required datafile isn't \
defined by the full path and isn't in the directories determined by the $Path \
variable. Moreover, in this case the search is done even in the \
\\\"C:\\\\$Recycle.Bin\\\" directory.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SearchDir", "::", "usage"}], "=", 
   "\"\<The call SearchDir[d] returns the list of all paths in file system of \
the computer which are completed by a subdirectory d; in case of lack of such \
paths the procedure call SearchDir[d] returns the empty list, i.e. {}. In \
combination with the procedures FindFile1 and FileExistsQ1 the SearchDir \
procedure is useful at working with file system of the computer, as confirms \
their usage for the solution of tasks of similar type.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NbName", "::", "usage"}], "=", 
   "\"\<The call NbName[] returns the list of notebooks names loaded into the \
current session; in addition, order of notebooks is in accord with order of \
their loadings; at that, the first element of the list presents notebook \
active in the current session.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AllCurrentNb", "::", "usage"}], "=", 
   "\"\<The AllCurrentNb procedure is a rather useful means at operating with \
nb\[Dash]documents in the current session. The procedure call AllCurrentNb[] \
returns the nested list of ListList\[Dash]type, the first element of each \
sublist defines a name in string format of nb\[Dash]document activated in the \
current session whereas the second element determines the nb\[Dash]file from \
which it was uploaded into the current session. If nb\[Dash]document was \
created in the current session without saving, the second element of the \
sublist is the message \\\"nb has been not saved\\\". At that, the first \
sublist of the returned list defines the current nb\[Dash]document. If the \
returned list contains one sublist, it is converted in simple 2\[Dash]element \
list of the above format.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NotebookSave1", "::", "usage"}], "=", 
   "\"\<The NotebookSave1 procedure adjoins directly the procedure \
AllCurrentNb, significantly extending standard NotebookSave function. At \
that, the given procedure provides saving in a nb\[Dash]file of an arbitrary \
nb\[Dash]document opened in the current session. Moreover, the procedure \
provides saving of nb\[Dash]documents earlier saved in nb\[Dash]files, along \
with nb\[Dash]documents opened only in the current session without their \
preliminary saving in nb\[Dash]files, including documents \
\\\"Untitled\[Dash]n\\\" and \\\"Messages\\\". The procedure call \
NotebookSave1[x, y] returns the path to a nb\[Dash]file determined by the \
second y argument into which has been unloaded a nb\[Dash]document x opened \
in the current session. The saving of nb\[Dash]documents opened in the \
current session is done by the following manner, namely:\n(1) if \
nb\[Dash]document has been opened in the current session from a nb\[Dash]file \
then it will be saved in the same nb\[Dash]file, but not in a datafile y;\n\
(2) if nb\[Dash]document has been opened onle in the current session without \
preliminary saving in nb\[Dash]file then it will be saved in a datafile y; at \
that, nb\[Dash]document x receives name y in the current session, and it \
opens in a new window;\n(3) if a nb\[Dash]document x is not contained among \
nb\[Dash]documents opened in the current session then the procedure call \
returns Null, i.e. nothing.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"OpenCurrentNb", "::", "usage"}], "=", 
   "\"\<The procedure call OpenCurrentNb[x] in the program mode allows to \
open window with a nb\[Dash]document x opened in the current session with \
returning Null, i.e. nothing. At that, an existing nb-file or cdf-file, or a \
nb-document opened in the current session can be as argument x. Along with \
nb-documents the OpenCurrentNb procedure successfully processes CDF-documents \
too.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NbDocumentQ", "::", "usage"}], "=", 
   "\"\<The procedure call NbDocumentQ[x] returns True if x is a real nb\
\[Dash]document opened in the current session or located in a nb\[Dash]file \
x, otherwise False is returned. Whereas the procedure call NbDocumentQ[x, y] \
with the second optional argument y \[Dash] an indefinite variable \[Dash] \
through y returns the nb\[Dash]document type, namely: \\\"current\\\" \
(current nb\[Dash]document), \\\"opened\\\" (nb\[Dash]document, opened in the \
current session), or \\\"file\\\" (nb\[Dash]document located in a \
nb\[Dash]file x) if the main return is True, otherwise y is returned \
indefinite. Along with nb-documents the NbDocumentQ  procedure successfully \
processes CDF-documents too.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NbCurrentQ", "::", "usage"}], "=", 
   "\"\<The function NbCurrentQ is a simplistic version of the procedure \
NbDocumentQ. The function call NbCurrentQ[x] returns True, if x nb-document \
is opened in the current session, and False otherwise. Along with \
nb-documents the NbCurrentQ function successfully processes CDF-documents \
too.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FileCurrentNb", "::", "usage"}], "=", 
   "\"\<The the procedure call FileCurrentNb[x] returns the datafile \
containing x nb\[Dash]document uploaded in the current session; if the nb\
\[Dash]document wasn't open in the current session the $Failed is returned, \
whereas on a document X with the name \\\"Untitled\[Dash]n\\\" or \
\\\"Messages\\\" the message \\\"X wasn't saved\\\" is returned. Along with \
nb-documents the FileCurrentNb procedure successfully processes CDF-documents \
too.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NbFileEvaluate", "::", "usage"}], "=", 
   "\"\<The function call NbFileEvaluate[x] evaluates all the calculated \
cells in notebook located in a datafile x of the format {\\\"cdf\\\", \
\\\"nb\\\"} with its opening in the new window. At that,  the call evaluates \
the notebook as if all cells had been evaluated with hot keys \\\"Shift+Enter\
\\\". Messages, print output and other side effects are placed in the \
notebook along with  outputs.  If the call is used on a datafile x that is \
not open, the Mathematica will invisibly open the file, evaluate it entirely, \
save, and close the datafile. Whereas the function call NbFileEvaluate[x, y] \
with the second argument y \[Dash] an arbitrary expression \[Dash] opens a \
file x, evaluates it entirely and will leave the notebook completely \
unmodified.\>\""}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MfileEvaluate", "::", "usage"}], "=", 
   "\"\<The procedure call MfileEvaluate[x, y] evaluates a package located in \
a m\[Dash]file x and depending on value of the second argument y performs the \
following actions concerning the m\[Dash]file x with a package, namely:\ny=1 \
\[Dash] returns the list of all objects names whose definitions are in the m\
\[Dash]file x;\ny=2 \[Dash] returns the 2\[Dash]element list whose the first \
element defines the list of objects names of m\[Dash]file that are available \
in the current session while the second element \[Dash] the list of  names of \
m\[Dash]file that are not available in the current session;\ny=3 \[Dash] \
returns the context ascribed to a package located in the m\[Dash]file x;\ny=4 \
\[Dash] prints the usages concerning all objects located in the m\[Dash]file \
x in the format:\nName\nThe usage concerning Name.\nMeantime, the procedure \
call MfileEvaluate[x, y] where x defines a m\[Dash]file not contained a \
package or m\[Dash]file with a package containing the definition of the \
MfileEvaluate procedure returns the $Failed.\>\""}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MfileLoad", "::", "usage"}], "=", 
   "\"\<The procedure call MfileLoad[x] evaluates the package located in a m\
\[Dash]file x, returning Null, i.e. nothing. Whereas the call MfileLoad[x, y] \
with the second optional argument y \[Dash] an indefinite variable \[Dash] \
thru y additionally returns the 3\[Dash]element list whose elements define \
the context ascribed to the package x, list of main objects names whose \
definitions are in the package, and the list of names with the given context \
accordingly. In particular, the third element can define objects of the \
system packages built into the system as it takes place for the Combinatorica \
package, options, etc. The procedure call on a m\[Dash]file not contained a \
package returns $Failed.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LoadFile", "::", "usage"}], "=", 
   "\"\<In a lot of cases there is a necessity of loading into the current \
session of files {nb, m, mx, txt}-types or files of ASCII-format without \
extension of the name, that are located in one of directories of file system \
of a computer. The given problem is solved by means of procedure LoadFile, \
whose call LoadFile[F] loads into the current session a datafile given by its \
full name F with  extension {\\\".m\\\", \\\".nb\\\", \\\".mx\\\", \\\".txt\\\
\"} or at all without expansion. Moreover, at a finding of the list of such \
datafiles with identical name F the loading of the first file of the list \
with return of the corresponding message is made whereas through the global \
variable $Load$Files$ the procedure returns the list of all F datafiles found \
during search. In the case of lack of F datafiles through the $Load$Files$ \
variable the empty list, i.e. {} is returned. The procedure handles basic \
erroneous and especial situations.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IsFileOpen", "::", "usage"}], "=", 
   "\"\<The call IsFileOpen[F] returns True if a datafile F, defined by the \
name or the full path, is open, and False otherwise. If the argument F \
doesn't define an existing datafile, the call is returned unevaluated. \
Whereas the call IsFileOpen[F, h] with the second optional argument h \[Dash] \
an indefinite variable \[Dash] returns through h the nested list whose \
sublists have format {{\\\"read\\\", \\\"write\\\"}, {The list of streams on \
which datafile F is open on the reading/recording}} if the main result is \
True.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AcNb", "::", "usage"}], "=", 
   "\"\<The call AcNb[] returns full name of the current document earlier \
saved as a nb-file.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StrStr", "::", "usage"}], "=", 
   "\"\<The call StrStr[x] returns an expression x in string format if x is \
different from string; otherwise, the double string obtained from an \
expression x is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CNames", "::", "usage"}], "=", 
   "\"\<The call CNames[x] returns the list of all short names in a package \
with a context x, that have in it definitions, whereas the call CNames[x, y] \
in addition through optional argument y \[Dash] an undefinite variable \
\[Dash] returns the list of all undefined short names in the package with \
context x.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"VarExch", "::", "usage"}], "=", 
   "\"\<The procedure VarExch[L] provides the exchange of values of variables \
with the corresponding exchange of all their attributes. For example, for L = \
{x, y} variables x and y, having values 68 and 63, should receive values 63 \
and 68 accordingly with a corresponding exchange of all of their attributes. \
The procedure VarExch[L] solves the given problem{task}, returning the value \
Null, i.e. nothing. The list of two names of variables which should be \
exchanged by values and attributes in string-format along with the nested \
list from sublists of the specified type are supposed as argument L; in any \
case all elements of pairs should be defined; otherwise, the procedure call \
returns the value Null with printing of the corresponding diagnostic message.\
\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"VarExch1", "::", "usage"}], "=", 
   "\"\<The procedure VarExch1[L] similarly to the procedure VarExch[L] \
provides the exchange of values of variables with the corresponding exchange \
of all their attributes. The procedure call returns the value Null, i.e. \
nothing. The list of two names of variables which should be exchanged by \
values and attributes in string-format along with the nested list from \
sublists of the specified type are supposed as argument L; in any case all \
elements of pairs should be defined; otherwise, the procedure call is \
returned unevaluated  without printing of any diagnostic message.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ListListQ", "::", "usage"}], "=", 
   "\"\<The call ListListQ[L] returns the True if L defines a list of lists \
of identical length, and the False otherwise.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RestListList", "::", "usage"}], "=", 
   "\"\<The procedure call RestListList[x] returns the result of \
restructuring of a list {{x1, x2, ..., xn}, {y1, y2, ..., yn}, ..., {z1, z2, \
..., zn}} of ListList\[Dash]type into the list of the same type of the view \
{{x1, y1, ..., z1}, {x2, y2, ..., z2}, ...}.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RestListList1", "::", "usage"}], "=", 
   "\"\<The procedure RestListList1 is an analog of the RestListList \
procedure. The procedure call RestListList1[x] returns the result of \
restructuring of a list {{x1, x2, ..., xn}, {y1, y2, ..., yn}, ..., {z1, z2, \
..., zn}} of ListList\[Dash]type into the list of the same type of the view \
{{x1, y1, ..., z1}, {x2, y2, ..., z2}, ...}.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FullNestListQ", "::", "usage"}], "=", 
   "\"\<The procedure call FullNestListQ[x] returns True if all elements of a \
list x are the nested sublists, and False otherwise.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StrExprQ", "::", "usage"}], "=", 
   "\"\<The call StrExprQ[x] returns the True if a string x contains a \
correct expression, and the False otherwise.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExpressionQ", "::", "usage"}], "=", 
   "\"\<The call SyntaxQ[w] of standard Mathematica function returns True if \
a w string corresponds to syntactically correct input for a single \
expression, and returns False otherwise. At that, the function tests only \
syntax of expression, ignoring its semantics at its evaluation. While the \
ExpressionQ procedure along with the syntax provides testing of an expression \
regarding semantic correctness. The procedure call ExpressionQ[w] returns \
True if a string w corresponds to syntactically and semantically correct \
single expression, and returns False otherwise.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExprsInStrQ", "::", "usage"}], "=", 
   "\"\<The call ExprsInStrQ[x, y] returns True if a string x contains the \
correct expressions, and False otherwise. In addition, through the second \
optional argument \[Dash] an undefined variable y \[Dash] the list of all \
correct expressions contained in the string x is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SeqQ", "::", "usage"}], "=", 
   "\"\<The call SeqQ[x] returns the True if x is an Seq-object (sequence), \
and the False otherwise.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SeqToList", "::", "usage"}], "=", 
   "\"\<The call SeqToList[x] returns the result of converting of a \
Seq-object x into List.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ListToSeq", "::", "usage"}], "=", 
   "\"\<The call ListToSeq[x] returns the result of converting of a list x \
into Seq-object.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Head1", "::", "usage"}], "=", 
   "\"\<The call Head1[x] returns the heading of an expression x in the \
context {Block, Function, Module, System, Symbol, Head[x], PureFunction}. At \
that, on the objects of the same name that have one name with several \
definitions the procedure call returns $Failed.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Head2", "::", "usage"}], "=", 
   "\"\<The Head2 procedure seems as an useful enough means that is a \
modification of the Head1 procedure and that is based on the previous \
ProcFuncTypeQ procedure and the standard Head function. The procedure call \
Head2[x] returns the heading or the type of an object x, given in string \
format. In principle, the type of an object can quite be considered as a \
heading in its broad understanding. The Head2 procedure serves to such \
problem generalizing the standard Head function and returning the heading of \
an expression x in the context of {Block, CompiledFunction, Function, Module, \
PureFunction, ShortPureFunction, Symbol, System, Head[x]}.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Head3", "::", "usage"}], "=", 
   "\"\<The Head3 function expands the standard Head function and the above \
procedures Head1, Head2 provided that a tested expression x is considered \
accurate to the sign; as a whole, the call Head3[x] is similar to the call \
Head1[x].\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FullFormF", "::", "usage"}], "=", 
   "\"\<The call FullFormF[] returns the list of the most often used \
equivalents of functions and operators used in the full form of \
representation of expressions.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReductRes", "::", "usage"}], "=", 
   "\"\<The function call ReductRes[P, a] returns the reduced result a of a \
procedure call P. By the reduced result is understood a result without \
context associating with the user package containing the procedure P.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReplaceProcBody", "::", "usage"}], "=", 
   "\"\<The call of function ReplaceProcBody[x, y] that is based on the \
procedure PartProc, returns Null, i.e. nothing, and provides replacement of \
the body of a procedure x onto a new body y, given in string-format. \
Furthermore, the updated object x is activated in the current session.\>\""}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SeqIns", "::", "usage"}], "=", 
   "\"\<The call SeqIns[x, y, z] returns the inserting result of an element y \
(list, Seq-object, etc.) into a Seq-object x according to the given position \
z (z <= 0 - before x, z> = Length[x] - after x; otherwise, after z-position \
in x).\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SeqDel", "::", "usage"}], "=", 
   "\"\<The call SeqDel[x, y] returns the deletion result of an element y \
(list, Seq-object, etc.) from a Seq-object x.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LeftFold", "::", "usage"}], "=", 
   "\"\<The call LeftFold[F, id, s] procedure iterates procedure F over \
string s, composing the successive results from the left with the initial \
value id.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RightFold", "::", "usage"}], "=", 
   "\"\<The RightFold[F, id, s] procedure iterates procedure F over string s, \
composing the successive results from the right with the initial value \
id.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IsPermutation", "::", "usage"}], "=", 
   "\"\<The call IsPermutation[x] returns the True if x is a permutation; \
otherwise, the False is returned. A string is a permutation if, and only if, \
each character in the string occurs exactly once. The call IsPermutation[\\\"\
\\\"]  returnes the True.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CatN", "::", "usage"}], "=", 
   "\"\<The call CatN[s, n] returns the result of n-fold concatenation of a \
string s.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LongestCommonSubString", "::", "usage"}], "=", 
   "\"\<The procedure call LongestCommonSubString[x, y] returns the list of \
substrings of maximal length that are common for strings x and y.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LongestCommonSubSequence", "::", "usage"}], "=", 
   "\"\<The procedure LongestCommonSubSequence[x, y] is similar to the \
procedure LongestCommonSubString[x, y] however its call returns the list of \
maximal SubSequences common for strings x and y.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LongestCommonSubsequence1", "::", "usage"}], "=", 
   "\"\<In contrast to system function LongestCommonSubsequence the procedure \
call LongestCommonSubsequence1[x, y, J] in mode IgnoreCase \[Dash]> J\!\(\*
StyleBox[\" \",
FontSize->9]\)\!\(\*
StyleBox[\"\[Element]\",
FontSize->18]\)\!\(\*
StyleBox[\" \",
FontSize->9]\){True, False} of search of strings finds the longest contiguous \
substrings common to the strings x and y. Whereas the call \
LongestCommonSubsequence1[x, y, J, t] additionally through an undefinite \
variable t returns the list of all common contiguous substrings.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LongestCommonSubsequence2", "::", "usage"}], "=", 
   "\"\<The LongestCommonSubsequence2 procedure is an extension of the \
LongestCommonSubsequence1 procedure in the case of a finite number of strings \
in which the search for longest common continuous substrings must be done. \
The procedure call LongestCommonSubsequence2[x, y, ..., h, J] in mode \
IgnoreCase \[Dash]> J\!\(\*
StyleBox[\" \",
FontSize->9]\)\!\(\*
StyleBox[\"\[Element]\",
FontSize->18]\)\!\(\*
StyleBox[\" \",
FontSize->9]\){True, False} finds the longest contiguous substrings common to \
the strings x, y, ..., h. At that, the setting {True|False} for the last \
argument J is equivalent to the option IgnoreCase \[Dash]> {True|False} that \
treats lowercase and uppercase letters as equivalent or not at search of \
substrings.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PalindromeQ1", "::", "usage"}], "=", 
   "\"\<The call PalindromeQ1[x] returns the True if a string x is \
palindrome; otherwise, the False is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MaximalPalindromicSubstring", "::", "usage"}], "=", 
   "\"\<The procedure call MaximalPalindromicSubstring[x] returns the list of \
substrings of a string x of maximal length that are palindromes.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BinaryListQ", "::", "usage"}], "=", 
   "\"\<The call BinaryListQ[L] returns the True if L defines a binary list \
including its possible sublists, and the False otherwise.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SubDelStr", "::", "usage"}], "=", 
   "\"\<The call SubDelStr[x, L] provides deletion from a string x of all \
substrings whose numbers of positions are defined by a LisiList L.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ToString1", "::", "usage"}], "=", 
   "\"\<The call ToString1[x] returns the result of correct converting of an \
arbitrary x-expression into string format irrespective of presence in \
expression x of string components. The procedure extends the standard \
function ToString.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ToString2", "::", "usage"}], "=", 
   "\"\<The call ToString2[x] returns the result ToString1[x] if x \[Dash] \
not a list; otherwise, ToString1[x] under condition that ToString1 has \
Listable-attribute.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ToString3", "::", "usage"}], "=", 
   "\"\<The call ToString3[x] serves for converting of an expression x in \
string InputForm format.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ToString4", "::", "usage"}], "=", 
   "\"\<The call ToString4[x] is analogous to the call ToString1[x] if x \
\[Dash] a symbol, otherwise \\\"(\\\" <> ToString1[x] <> \\\")\\\" is \
returned.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefToString", "::", "usage"}], "=", 
   "\"\<The procedure call DefToString[x] in string format returns the \
definition of an object whose name x is encoded in string format.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ToStringRule", "::", "usage"}], "=", 
   "\"\<The call ToStringRule[x] returns a rule or list of rules x whose left \
and right parts are in string format. In addition, the right parts of rules \
are edged by brackets.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ToStringRule1", "::", "usage"}], "=", 
   "\"\<The call ToStringRule1[x] returns a rule or list of rules x whose \
left and right parts are in string format.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StringSplit1", "::", "usage"}], "=", 
   "\"\<As against function StringSplit[x, y], the call of procedure \
StringSplit1[x, y] carries out semantic splitting of a string x by a symbol y \
onto elements of the returned list. In this case the semantics consists in \
what in the returned list are located substrings of string x which contain \
correct expressions; in absence of such substrings the call of procedure \
returns the empty list, i.e. {}.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StringSplit2", "::", "usage"}], "=", 
   "\"\<As against function StringSplit[x, y], the call of procedure \
StringSplit2[x, y] includes in the returned list the substrings of a string x \
which begin with delimiter y. In case of absence of a delimiter y into string \
x, the call StringSplit2[x, y] returns {x}.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SubStr", "::", "usage"}], "=", 
   "\"\<The call SubStr[S, p, a, b, R] returns a substring of a string S that \
is limited from the left from p-position by the first symbol different from \
symbol a or from elements of list a, and is limited from the right from \
p-position by the first symbol different from symbol b or from elements of \
list b; whereas in erroneous case through argument R an appropriate warning \
is returned.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NamesCS", "::", "usage"}], "=", 
   "\"\<The call NamesCS[P, Pr, Pobj]  returns the Null-value, i.e. nothing, \
whereas through three arguments P, Pr and Pobj are returned the list of \
contexts corresponding to packages loaded into current session, the list of \
the user procedures whose definitions were activated in the current session, \
and the nested list accordingly. In addition, the nested list has the \
following structure, namely: the first element of each sublist defines the \
context corresponding to an appropriate package loaded into the current \
session, whereas its other elements defines names of objects of the package \
which were activated in the current session.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NamesContext", "::", "usage"}], "=", 
   "\"\<The call NamesContext[x] returns the list of names in \
string\[Dash]format of program objects of the current session which are \
associated with a context x. In case of absence of this context the empty \
list, i.e. {}, is returned whereas in case of value x, different from a \
context, the procedure call is returned unevaluated.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Bits", "::", "usage"}], "=", 
   "\"\<On a tuple of actual arguments <x, P> where x - a string of length 1 \
(character) and P - an integer in the range 0..8, the call Bits[x, P] returns \
binary representation of x in the form of the list if P=0, and the P-th bit \
of such representation of x otherwise. Whereas on a tuple of actual arguments \
<x, P> where x - a nonempty binary list of length no more than 8 and P=0, the \
call Bits[x, P] returns a symbol that corresponds to the given binary list x; \
in other cases the call of procedure is returned  unevaluated.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Nconcat", "::", "usage"}], "=", 
   "\"\<The call Nconcat[x] returns the concatenation of elements of a list x \
\[Dash] integers > 0; furthermore, the list Flatten[x] is considered instead \
of x, providing operations with the nested lists of any level of \
nesting.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StringTrim1", "::", "usage"}], "=", 
   "\"\<The procedure StringTrim1 is an useful extension of standard function \
StringTrim. The call StringTrim1[x,y,z] returns the result of truncation of a \
string x by a substring y on the left, and by a substring z on the right. In \
case y = z = \\\"\\\" the call StringTrim1[x, \\\"\\\", \\\"\\\"] is \
equivalent to the call StringTrim[x].\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StringTrim2", "::", "usage"}], "=", 
   "\"\<The procedure StringTrim2 is an useful extension of standard function \
StringTrim and procedure StringTrim1. the procedure call StringTrim2[x, y, z] \
returns the result of truncation of a   string x by symbols y on the left (z \
= 1), on the right (z = 2) or both ends (z = 3).. In case x = \\\"\\\" the \
procedure call returns the empty string, i.e. \\\"\\\"; at that, a single \
character or a list of them can act as an argument y.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TrueCallQ", "::", "usage"}], "=", 
   "\"\<In contrast to the above procedures TestArgsTypes, TestArgsTypes1 \
that provide the differentiated testing of the actual arguments received by a \
tested object for their admissibility, the simple function TrueCallQ provides \
testing of correctness of the call of an object of type {Block, Function, \
Module} as a whole; the call TrueCallQ[x, args] returns True if the call \
x[args] is correct, and False otherwise. At that, the lack of the fact of the \
unevaluated call, and lack of the special or erroneous situations \
distinguished by Mathematica is understood as a correctness of the \
call.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TestProcCalls", "::", "usage"}], "=", 
   "\"\<The call TestProcCalls[x, y] returns the nested list, whose elements \
have format {j, \\n\\, True|False}, where j \[Dash] order number of an \
argument, \\n\\ \[Dash] formal argument in string format, {True|False} \
\[Dash] value which defines the admissibility (True) or inadmissibility \
(False) of the actual value determined by the list y and received by a formal \
argument {j, n} in the call point of an object x. It is supposed that the \
object x defines the fixed number of formal arguments and lengths of lists, \
defining by formal arguments and y, are identical, otherwise the procedure \
call returns $Failed.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SymbolToList", "::", "usage"}], "=", 
   "\"\<The call SymbolToList[x] returns the result of converting of a symbol \
x into list.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GenRules", "::", "usage"}], "=", 
   "\"\<In Mathematica, the transformation rules generally are defined by the \
function Rule, whose call Rule[a, b] returns the transformation rule in the \
format a -> b. For dynamic generation of such rules the GenRules procedure \
can be quite useful, whose call GenRules[x, y] depending on a type of its \
arguments returns a rule or the list of rules; the call GenRules[x, y, z] \
with the third optional argument z - any expression - returns the list with \
one rule or the nested list of ListList-type. Depending on the format of \
coding of the procedure  call the following result is returned, namely:\n\t\
GenRules[{x, y, z, ...}, a]   \[DoubleLongRightArrow]\[DoubleLongRightArrow]  \
 {x -> a, y -> a, z -> a, ...}\n\tGenRules[{x, y, z, ...}, a, g]   \
\[DoubleLongRightArrow]\[DoubleLongRightArrow]   {{x -> a}, {y -> a}, {z -> \
a}, ...}\n\tGenRules[{x, y, z, ...}, {a, b, c, ...}]   \
\[DoubleLongRightArrow]\[DoubleLongRightArrow]   {x -> a, y -> b, z -> c, \
...}\n\tGenRules[{x, y, z, ...}, {a, b, c, ...}, g]   \[DoubleLongRightArrow]\
\[DoubleLongRightArrow]   {{x -> a}, {y -> b}, {z -> c}, ...}\n\tGenRules[x, \
{a, b, c, ...}]   \[DoubleLongRightArrow]\[DoubleLongRightArrow]   {x -> a}\n\
\tGenRules[x, {a, b, c, ...}, g]   \[DoubleLongRightArrow]\
\[DoubleLongRightArrow]   {x -> a}\n\tGenRules[x, a]   \
\[DoubleLongRightArrow]\[DoubleLongRightArrow]   {x -> a}\n\tGenRules[x, a, \
g]   \[DoubleLongRightArrow]\[DoubleLongRightArrow]   {x -> a}.\>\""}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GenRules1", "::", "usage"}], "=", 
   "\"\<In Mathematica, the transformation rules generally are defined by the \
function Rule, whose call Rule[a, b] returns the transformation rule in the \
format a -> b. For dynamic generation of such rules the GenRules procedure \
can be quite useful, whose call GenRules[x, y] depending on a type   of its \
arguments returns a rule or the list of rules; the call GenRules[x, y, z] \
with the third optional argument z - any expression -  returns the list with \
one rule or the nested list of ListList-type. Along with the above rules of \
type a \[Dash]> b Mathematica allows application of the so-called delayed \
rules (RuleDelayed) of type a :> b or a \[RuleDelayed] b which are realized \
only at the moment of their application. For the purpose of generation of \
lists of transformation rules of this type, the GenRules procedure, presented \
above in which the Rule function is replaced with the RuleDelayed function \
can be used, or its modification  GenRules1 adapted for use of one or another \
function by the corresponding coding of the 3rd actual argument is used. In \
the call GenRules1[x, y, h, z], where x, y, z \[Dash] arguments which are \
completely similar to the arguments of the GenRules procedure with the same \
names, whereas the argument h determines the mode of generation of the list \
of the usual or delayed rules on the basis of the value \\\"r\\\" received by \
it (simple rule) or \\\"rd\\\" (delayed rule). Depending on the format of \
coding of the procedure call the following result is returned (only for the \
delayed rules, for the usual rules see the above procedure GenRules, i.e. \
argument h has value \\\"rd\\\"), namely:\n\tGenRules[{x, y, z, ...}, \
\\\"rd\\\", a]   \[DoubleLongRightArrow]\[DoubleLongRightArrow]   {x \
\[RuleDelayed] a, y \[RuleDelayed] a, z \[RuleDelayed] a, ...}\n\t\
GenRules[{x, y, z, ...}, a, \\\"rd\\\", h1]   \[DoubleLongRightArrow]\
\[DoubleLongRightArrow]   {{x \[RuleDelayed] a}, {y \[RuleDelayed] a}, {z \
\[RuleDelayed] a}, ...}\n\tGenRules[{x, y, z, ...}, {a, b, c, ...}, \
\\\"rd\\\"]   \[DoubleLongRightArrow]\[DoubleLongRightArrow]   {x \
\[RuleDelayed] a, y \[RuleDelayed] b, z \[RuleDelayed] c, ...}\n\t\
GenRules[{x, y, z, ...}, {a, b, c, ...}, \\\"rd\\\", h1]   \
\[DoubleLongRightArrow]\[DoubleLongRightArrow]   {{x \[RuleDelayed] a}, {y \
\[RuleDelayed] b}, {z \[RuleDelayed] c}, ...}\n\tGenRules[x, {a, b, c, ...}, \
\\\"rd\\\"]   \[DoubleLongRightArrow]\[DoubleLongRightArrow]   {x \
\[RuleDelayed] a}\n\tGenRules[x, {a, b, c, ...}, \\\"rd\\\", h1]   \
\[DoubleLongRightArrow]\[DoubleLongRightArrow]   {x \[RuleDelayed] a}\n\t\
GenRules[x, a, \\\"rd\\\"]   \[DoubleLongRightArrow]\[DoubleLongRightArrow]   \
{x \[RuleDelayed] a}\n\tGenRules[x, a, \\\"rd\\\", h1]   \
\[DoubleLongRightArrow]\[DoubleLongRightArrow]   {x \[RuleDelayed] a}.\>\""}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GenRules2", "::", "usage"}], "=", 
   "\"\<The call GenRules2[x, y] where x \[Dash] a non\[Dash]nested list and \
y \[Dash] an expression different from list, or a list depending on type of \
the second argument y generates the list of transformation rules of the \
following formats respectively, namely:\n\tGenRules[{x, y, z, \[Ellipsis]}, \
a]   \[DoubleLongRightArrow]\[DoubleLongRightArrow]   {x \[Dash]> a, y \
\[Dash]> a, z \[Dash]> a, \[Ellipsis]}\n\tGenRules[{x, y, z, \[Ellipsis]}, \
{a, b, c, \[Ellipsis]}]   \[DoubleLongRightArrow]\[DoubleLongRightArrow]   {x \
\[Dash]> a, y \[Dash]> b, z \[Dash]> c, \[Ellipsis]}\>\""}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RevRules", "::", "usage"}], "=", 
   "\"\<The call RevRules[x] returns the rule or the list of rules that are \
reverse to the rules determined by argument x \[Dash] a rule of format \\\"a \
\[Dash]> b\\\" or their list.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"$Load$Files$", "::", "usage"}], "=", 
   "\"\<The predefined variable $Load$Files$ is used by the procedure \
LoadFile.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"WhatType", "::", "usage"}], "=", 
   "\"\<The procedure call WhatType[x] returns type of an object x of one of \
base data types {\\\"Module\\\", \\\"DynamicModule\\\", \\\"Block\\\", \
\\\"Complex\\\", \\\"Integer\\\", \\\"Rational\\\", \\\"Real\\\", \\\"Times\\\
\", \\\"Plus\\\", \\\"List\\\", \\\"Power\\\", \\\"And\\\", \\\"Rule\\\", \
\\\"Condition\\\", \\\"StringJoin\\\", \\\"UndirectedEdge\\\", \
\\\"Alternatives\\\", etc.}. Procedure WhatType does not support exhaustive \
testing of types, however on its basis it is enough simply to expand a class \
of checked types of the data.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TwoHandQ", "::", "usage"}], "=", 
   "\"\<The procedure call TwoHandQ[x] returns the True if an expression x \
has one of the following types, namely: {\\\"+\\\", \\\">=\\\", \\\"<=\\\", \
\\\"&&\\\", \\\"||\\\", \\\"-\\\", \\\"^\\\", \\\"**\\\", \\\"<\\\", \\\"==\\\
\", \\\"!=\\\", \\\">\\\", \\\"->\\\"}, and the False otherwise. In addition, \
in case of the call TwoHandQ[x, y] through the second argument y the type of \
x is returned if the main result of the call is True.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Iff", "::", "usage"}], "=", 
   "\"\<The procedure Iff[x,...] is equivalent to the standard function \
If[x,...] in the limits of number of arguments 2..4, returning the \
unevaluated call in case of other number of arguments. In addition, it is \
necessary to have in view, that all actual arguments, since the second one, \
are coded in string format in order to prevent their premature calculation at \
the call Iff[x,...] when actual arguments are calculated/simplified.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Args", "::", "usage"}], "=", 
   "\"\<The call Args[F] returns the list of formal arguments of a \
block/function/module x along with the pure functions and function Compile. \
In addition, the format of the returned result is defined by type of an \
object x, namely:\n\n\[Dash] the list of formal arguments is returned on the \
Compile function with the types ascribed to them;\n\[Dash] on a module/block \
and typical function the list of formal arguments with the tests ascribed to \
them for testing admissibility of the actual arguments or without them is \
returned; in addition, the Args procedure processes the situation \\\"the \
objects of the same name with various headings\\\", returning the nested list \
of formal arguments concerning of all subobjects of an object in the order \
determined by the function Definition;\n\[Dash] on a pure function in the \
short format the list of deputies of formal arguments {#1,..., #n} in string \
format, while for a standard pure function the list of formal arguments in \
string format is returned.\n\nMoreover, the call Args[W, h] with the second \
optional argument h - any admissible expression or any their sequence - can \
act, returns the result, similar to the call with the first argument, with \
that difference what all formal arguments are encoded in string format, but \
without the types ascribed to arguments and tests for testing of their \
admissibility. On an inadmissible actual argument W the call Args[W] is \
returned unevaluated.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Args1", "::", "usage"}], "=", 
   "\"\<The procedure call Args1[x] returns simple or the nested list, whose \
elements are 2\[Dash]element lists, whose first element represents the list \
of formal arguments with the types and tests, ascribed to them while the \
second \[Dash] an object type in the context {\\\"Module\\\", \\\"Block\\\", \
\\\"Function\\\"}. As argument x the objects on which BlockFuncModQ[x] \
returns True are allowed. On an unacceptable argument x the procedure call \
Args1[x] is returned unevaluated.\>\""}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ArgsBFM", "::", "usage"}], "=", 
   "\"\<The call ArgsBFM[x] returns the list of formal arguments in string \
format of a block/function/module x, whereas the call ArgsBFM[x, y] with the \
second optional argument y \[Dash] indefinite variable \[Dash] additionally \
returns through it the list of formal arguments of the block/function/module \
x with tests ascribed to them in string format.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ArgsBFM1", "::", "usage"}], "=", 
   "\"\<The procedure is an useful modification of the ArgsBFM procedure. The \
procedure call ArgsBFM1[x] generally returns the list of ListList\[Dash]type \
whose 2\[Dash]element sublists in string format define the name of a formal \
argument (the first element) and its admissibility test (the second element) \
of a x block/function/module. Lack of the test is coded as \\\"Arbitrary\\\"; \
at the same time, under lack of the test is understood not only its actual \
lack, but also the optional and default patterns ascribed to a formal \
argument. The given procedure successfully processes the objects of the same \
name too, i.e. the objects with several headings.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ArrayInd", "::", "usage"}], "=", 
   "\"\<The procedure call ArrayInd[H] returns the list of the form \
{\\\"H[n1]=c1\\\", ..., \\\"H[nk]=ck\\\"}, where H - a name of an array in \
string-format which has been created by means of assignments \
H[n]{=|:=}Value_n. If H is not an array of the above type, the call of \
procedure ArrayInd returns the empty list or the list with definition of an \
object H given in string-format.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MdP", "::", "usage"}], "=", 
   "\"\<The call MdP[x] returns a simple 2\[Dash]element list, in which the \
first element \[Dash] an object name in string format and the second element \
\[Dash] number of headings with such name (if x defines a  \
procedure/function/block activated in the current session; in the absence of \
similar object $Failed is returned); the nested list whose 2\[Dash]element \
sublists have the structure described  above (if an object x defines the list \
of the modules/functions/blocks activated in the current session), the nested \
list of the previous format (if x is empty, defining the list of all \
functions/blocks/modules activated in the current session); in the absence of \
the functions/modules/blocks activated in the current session the call MdP \
returns $Failed.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HeadingQ", "::", "usage"}], "=", 
   "\"\<The procedure call HeadingQ[x] returns True if an object x, given in \
string format, can be considered as a syntactic correct heading; otherwise \
False is returned; in case of inadmissible argument x the call HeadingQ[x] is \
returned unevaluated.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HeadingQ1", "::", "usage"}], "=", 
   "\"\<The procedure call HeadingQ1[x] returns True if the actual argument \
x, given in string format, can be considered as a syntactically correct \
heading; otherwise False is returned; in case of inadmissible argument x the \
call HeadingQ[x] is returned unevaluated [3].\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HeadingQ2", "::", "usage"}], "=", 
   "\"\<Analogously to the procedures HeadingQ and HeadingQ1, the procedure \
call HeadingQ2[x] returns True if actual argument x, set in string format, \
can be considered as a syntactically correct heading; otherwise False is \
returned [8].\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HeadingQ3", "::", "usage"}], "=", 
   "\"\<The call HeadingQ3[x] returns True if an actual argument x, set in \
string format, can be considered as a syntactically correct heading; \
otherwise, the call returns False [8].\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TestHeadingQ", "::", "usage"}], "=", 
   "\"\<The procedure call TestHeadingQ[x] returns True if x represents the \
heading in string format of a block/module/function, and False otherwise. \
Whereas the procedure call TestHeadingQ[x, y] with the second optional y \
argument \[Dash] an undefinite variable \[Dash] through it additionally \
returns information specifying the reasons of the incorrectness of x heading. \
Meanwhile, on the x objects of the same name  (multiple objects)  the \
procedure call  returns $Failed; extension of the procedure onto case of the \
multiple objects does not cause much difficulty. From the detailed analysis \
follows, that the TestHeadingQ procedure on the opportunities surpasses the \
testing procedures HeadingQ \!\(\*
StyleBox[\"\[Divide]\",
FontSize->18]\) HeadingQ3.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StandHead", "::", "usage"}], "=", 
   "\"\<Realization of algorithms of a number of the procedures that \
significantly use the headings requires the coding of headings in the format \
corresponding to the system agreements at evaluation of definitions of a \
procedure/function/block. For automation of representation of a heading in \
the standard format the StandHead procedure can be quite useful whose call \
StandHead[h] returns the heading of a block/ procedure/function in the format \
corresponding to the system agreements at evaluation of its \
definition.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtrProcFunc", "::", "usage"}], "=", 
   "\"\<The call ExtrProcFunc[h] returns an unique name of a generated \
block/function/ procedure that in the list of definitions has a heading h; \
otherwise, $Failed is returned. The procedure is characteristic in that \
leaves all definitions of a symbol HeadName[h] without change. At that, the \
returned object saves all options and attributes ascribed to the symbol \
HeadName[h].\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RepStandFunc", "::", "usage"}], "=", 
   "\"\<The procedure call RepStandFunc[x, y, z] returns the call of a means \
y of the same name with a standard function y, and whose definition is \
defined in string format by the argument x, on argument z of its actual \
arguments. At the same time, such call of the RepStandFunc procedure is once\
\[Dash]only in the sense that after the call the initial state of the \
standard function y remains without change.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetAttributes1", "::", "usage"}], "=", 
   "\"\<The call SetAttributes1[x, y] expands the standard function \
SetAttributes onto the form of representation of the first argument x by \
which can be indexed variables and lists, etc., in particular, providing \
setting of attributes y for elements of a list x.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AttrOpts", "::", "usage"}], "=", 
   "\"\<The procedure call AttrOpts[x] returns the 2\[Dash]element nested \
list whose first element determines options whereas the second element \
defines the list of the attributes ascribed to a symbol x of type {Block, \
Funcion, Module}. On a symbol x without options and attributes ascribed to \
it, the call AttrOpts[x] returns {{}, {}}.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"$Line1", "::", "usage"}], "=", 
   "\"\<The global variable $Line1 as against the standard global variable \
$Line defines the general number of Out-paragraphs of the current session of \
Mathematica, including results of calculation of the user packages loaded \
into it from datafiles of the format {\\\"cdf\\\", \\\"nb\\\"}.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"$ProcType", "::", "usage"}], "=", 
   "\"\<The procedure variable $ProcType is used only in the body of a block \
or a module and receives value of type in string-format of the object \
containing  it in the context of {\\\"Block\\\", \\\"Module\\\"}; outside of \
objects of the specified type the variable $ProcType accepts the \\\"ToString\
\\\" value which doesn't have special value.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"$TypeProc", "::", "usage"}], "=", 
   "\"\<The procedure variable $TypeProc is used only in the body of a \
procedure of any type and receives value of type in string-format of the \
given procedure in the context of \\\"Block\\\", \\\"Module\\\" and \
\\\"DynamicModule\\\"; outside of a procedure the variable has value $Failed, \
whereas use of the variable outside of  procedures is incorrectly, causing \
exigent condition with return $Failed.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"$CallProc", "::", "usage"}], "=", 
   "\"\<To $TypeProc the procedural variable $CallProc directly adjoins whose \
call returns contents of the body in string-format of a block or a module \
containing it, in moment of its call. In addition, for the module the body \
with local variables with the symbols \\\"$\\\" ascribed to them, whereas for \
the block its body in standard format is returned. The variable call outside \
of a block or a module receives \\\"StringTake[ToString1[Stack[_][[1]]], {10, \
\[Dash]2}]\\\" value.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ModuleQ", "::", "usage"}], "=", 
   "\"\<The procedure call ModuleQ[M, y] returns the value True if an object \
M an object M given by a symbol is a module; otherwise, the value False is \
returned. In addition, in case of True through the second argument y the type \
of module is returned, namely: \\\"Module\\\" or \\\"DynamicModule\\\". In \
case False y is returned unevaluated. In addition, the procedure call on a \
tuple of incorrect actual arguments is returned unevaluated. In other cases \
the call ModuleQ[M, y] returns False.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ModuleQ1", "::", "usage"}], "=", 
   "\"\<The call ModuleQ1[x] returns the True if x is a Module and the False \
otherwise.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ModuleQ2", "::", "usage"}], "=", 
   "\"\<The call ModuleQ2[x] returns the True if x is a Module and the False \
otherwise.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FuncBlockModQ", "::", "usage"}], "=", 
   "\"\<The call FuncBlockModQ[x, y] returns True, if x \[Dash] a symbol \
defining an object of type {Function, Module, Block}; in addition, in the \
presence for symbol x of several definitions the True is returned only when \
all its definitions accompanying x, will generate an object of the same type. \
Whereas through the 2nd argument y \[Dash] an undefinite variable \[Dash] the \
object type from the point of view of {\\\"Function\\\", \\\"Block\\\", \
\\\"Module\\\"} is returned. If the symbol x defines object of the same name, \
whose definitions associate with subobjects of different types, the call \
FuncBlockModQ[x, y] returns False whereas through the 2nd argument the value \
\\\"Multiple\\\" is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Affiliate", "::", "usage"}], "=", 
   "\"\<The procedure call Affiliate[x] returns the context for an arbitrary \
symbol x, given in string-format; the value \\\"Undefined\\\" is returned for \
a symbol fully undefined in the current session.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ListListGroup", "::", "usage"}], "=", 
   "\"\<The procedure call ListListGroup[x, n] returns the nested list - \
result of grouping of a ListList-list x on the basis of n-th elements of \
sublists composing x.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CallsInProc", "::", "usage"}], "=", 
   "\"\<The call CallsInProc[x] returns the nested 3\[Dash]element list whose \
first element \[Dash] the list of names in string\[Dash]format of system \
means, the second element \[Dash] the list of the user means in \
string\[Dash]format that are contained in an object x of type {block, \
function, module} whereas the third element \[Dash] the list of the contexts \
corresponding to the user means of the second element.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Border", "::", "usage"}], "=", 
   "\"\<The procedure call Border[x] returns the the border of a string x, \
where the border of a string x is the maximal prefix of x that is also a \
suffix of x.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Restart", "::", "usage"}], "=", 
   "\"\<The procedure call Restart[] returns nothing, deleting from the \
current session all objects defined in it. Moreover, from the given list are \
excluded the objects whose definitions are in the downloaded packages. While \
the call Restart[x] with optional argument x \[Dash] a context defining the \
user package which has been loaded into the current session \[Dash] also \
returns nothing, additionally deleting  from the current session all objects \
whose definitions are contained in the mentioned user package. Moreover, the \
system objects are not affected by the Restart. The procedure is easily \
extended to the case when the list of contexts is used as the argument x. The \
call Restart[x] deletes from the current session all objects with context \
x.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ObjType", "::", "usage"}], "=", 
   "\"\<The call of procedure ObjType[x] returns the type of an object x in \
the context of {Function, Module, Block or DynamicModule}, in other cases the \
type of the expression assigned to a symbol x in the current session by \
operators {: =, =} is returned.In addition, the procedure ObjType ascribes to \
the type Function not only especially functional objects, but also \
definitions of following format Name[x _, y _, z _, ...]: = Expression; in \
this case the call returns the list of the following format, namely: \
{\\\"Name[x _,y _,z _,...]\\\", {Function, Head [Expression]}}.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ObjInCurrentNb", "::", "usage"}], "=", 
   "\"\<The procedure call ObjInCurrentNb[] returns the nested list of the \
objects activated in a Nb\[Dash]document of the current session. In addition, \
the objects are grouped according to the contexts attributed to them. In each \
sublist of the returned list the first element defines the context while the \
others define names of objects in string format that have this \
context.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ObjInCurrentNb1", "::", "usage"}], "=", 
   "\"\<The ObjInCurrentNb1 procedure is a rather useful extension of the \
previous ObjInCurrentNb procedure. Similarly, the procedure call   \
ObjInCurrentNb1[x] returns the nested list of objects located in a \
nb\[Dash]document x opened in the current session or in a nb\[Dash]file x. \
These objects are grouped according to the contexts attributed to them. At \
that, in each sublist of the returned list the first element defines the \
context while the others define names of objects in string format that have \
this context. Furthermore, an attempt to analyze nb\[Dash]document x opened \
in the current session without saving in a nb-file returns the result of \
analysis in the current nb\[Dash]file (i.e. nb\[Dash]document in which the \
call ObjInCurrentNb1[x] was done).\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PartialSums", "::", "usage"}], "=", 
   "\"\<The procedure call PartialSums[L] returns the list of partial sums of \
the elements in a list L. In addition, if symbol L had been given in \
string-format then an initial list L is updated in situ.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ToDefOptPF", "::", "usage"}], "=", 
   "\"\<As a result of loading of the user package into the current session \
the definitions of a part of its means x, that are returned by the standard \
Definition function, contain constructs of the format Context[x] <> \
ToString[x] <> \\\"`\\\", sometimes it is essentially complicates both review \
of the definition, and its processing. The call ToDefOptPF[x] returns the \
definition of a procedure/function x really by converting it in the current \
session into the optimum format which isn't containing mentioned context \
constructions. In addition, the attributes, attributed to object (procedure \
or function) x, remain. Moreover, the procedure ToDefOptPF correctly \
processes also so-called objects of the same name, i.e. objects which under \
one name have more than one definition with various headings.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IFk", "::", "usage"}], "=", 
   "\"\<The procedure IFk implements a Maple clause <if L1 then V1 elif L2 \
then V2 elif L3 then V3 elif L4 then V4 ... else Vk end if (1)>, that is very \
useful for programming the branching algorithms. The procedure call IFk uses \
any number of actual arguments more than one  which are 2-element lists of \
the format {Lj , Vj}, excepting the last (1). As a last argument any correct \
expression of language is allowable; in addition, check of Lj on the boolean \
type is not made. The procedure call IFk on a tuple of correct actual \
arguments returns the result that is equivalent to execution of the \
corresponding Maple-clause (1).\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IFk1", "::", "usage"}], "=", 
   "\"\<Procedure IFk1 - a certain useful expansion of the procedure IFk \
which as against IFk admits only boolean expressions as actual arguments Lj; \
otherwise, the call is returned unevaluated. In the rest, the  procedures IFk \
and IFk1 are functionally identical.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NamesNbPackage", "::", "usage"}], "=", 
   "\"\<The call NamesNbPackage[F] returns the list of objects names saved as \
a package in a file F of nb-format; at that, it is presupposed that the \
objects are supplied by usages. In the absence of such objects the empty list \
is returned.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ToList", "::", "usage"}], "=", 
   "\"\<The procedure call ToList[x] returns the result of converting of an \
expression x into list.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PartProc", "::", "usage"}], "=", 
   "\"\<In a series of the problems caused by a processing of string \
representation of definitions of procedures, the problem of partition of the \
given representation onto two basic components,namely: the body of procedure \
and its bounding box with a closing procedural bracket \\\"]\\\" represents \
the certain interest. The call of procedure PartProc[P] returns the 2-element \
list, whose first element in string-format represents the bounding box with a \
closing procedural bracket \\\"]\\\" of a procedure; the place of the \
procedure body occupies the substring \\\"Procedure Body\\\" whereas the \
second element of the list in string-format represents the body of the \
procedure P. In addition, under the bounding box with the closing procedural \
bracket \\\"]\\\" is understood the construction of the format \\\"Heading: = \
Module[{locals}, ...]\\\". At erroneous situations the call is returned \
unevaluated, or $Failed is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Try", "::", "usage"}], "=", 
   "\"\<The Try function is similar to try-\:043f\:0440\:0435\:0434\:043b\
\:043e\:0436\:0435\:043d\:0438\:044e of the Maple, providing processing of x \
depending on the messages initiated by the evaluation of x. Furthermore, it \
is necessary to note that all messages initiated by such calculation of an \
expression x, should be activated in the current session. The call of the \
function has the following format, namely:\n                                  \
                                                 Try[\\\"x\[Dash]expression\\\
\", y}}]\n where the first argument x defines an expression x in string \
format whereas the second argument defines the message associated with a \
possible special or erroneous situation at calculation of expression x. In \
case evaluation of an expression x is correct, the result of its evaluation \
(for example, the procedure call) is returned, otherwise the nested list of \
the format {y, {Mes}} is returned where Mes defines the system message \
generated as a result of processing of a erroneous or special situation by \
the system. The function Try proved itself as a rather convenient means for \
processing of special and erroneous situations at programming of a number of \
applied and system problems.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NamesNbPackage1", "::", "usage"}], "=", 
   "\"\<The call NamesNbPackage1[F] returns the list of objects names saved \
as a package in a file F of nb-format; at that, it is presupposed that the \
objects are supplied by usages. In the absence of such objects the empty list \
is returned. The Procedure is an useful modification of procedure \
NamesNbPackage.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NamesMPackage", "::", "usage"}], "=", 
   "\"\<The call NamesMPackage[F] returns the list of objects names in \
string-format that have been saved as a package in datafile F of m-format; at \
that, it is presupposed that the objects are supplied by usages. In the \
absence of such objects the empty list is returned. The procedure is an \
useful expansion of procedures NamesNbPackage and NamesNbPackage1 in case of \
m-files.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LoadNameFromM", "::", "usage"}], "=", 
   "\"\<The call LoadNameFromM[F, N] returns the Null, i.e. nothing, loading \
into the current session the evaluated definitions of an object N or the \
objects from a list N that were saved as the package with context in a \
datafile F of m-format.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RhsLhs", "::", "usage"}], "=", 
   "\"\<The procedure call RhsLhs[x, y] depending on value {\\\"Lhs\\\", \
\\\"Rhs\\\"} of 2-nd argument y returns the left or right part of expression \
x accordingly in relation to operator Head[x] whereas the call RhsLhs[x, y, \
t] in addition through an undefined variable t returns operator Head[x] \
concerning which partition of expression x onto the left and right part was \
made. In addition, in case of impossibility of partition of an expression x \
onto parts the call of procedure RhsLhs is returned unevaluated.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RhsLhs1", "::", "usage"}], "=", 
   "\"\<This procedure is a functionally equivalent modification of the \
procedure RhsLhs. The procedure call RhsLhs1[x, y] depending on value \
{\\\"Lhs\\\", \\\"Rhs\\\"} of 2-nd argument y returns the left or right part \
of expression x accordingly in relation to operator Head[x] whereas the call \
RhsLhs[x, y, t] in addition through an undefined variable t returns operator \
Head[x] concerning which partition of the expression x onto the left and \
right part was made. In addition, in case of impossibility of partition of an \
expression x onto parts the call of procedure RhsLhs1 is returned \
unevaluated.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtrCall", "::", "usage"}], "=", 
   "\"\<The call ExtrCall[x, y] returns the True if the user block, function \
or module y contains the calls of a block/function/module x, and the False \
otherwise. If the call as argument x defines the list of \
blocks/functions/modules then sublist x of calls of of \
blocks/functions/modules of x that are contained in the object y is returned. \
In case the first optional argument x is absent, the call ExtrCall[y] returns \
the list of the system means, that compose definition of the user function, \
block or module y. Meanwhile, it must be kept in mind that the ExtrCall \
procedure correctly processes only unique objects, but not the objects of the \
same name, by returning on the last ones the value $Failed.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"WhichN", "::", "usage"}], "=", 
   "\"\<Simple procedure WhichN allows an arbitrary even number of arguments \
similar to standard function Which, otherwise returning the unevaluated call. \
In the rest the procedure WhichN is analogous to the  standard function \
Which. Procedure appears useful enough in case of dynamic generation of a \
Which-object.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SeqToList1", "::", "usage"}], "=", 
   "\"\<The call of simple function SeqToList1[a, b, c, ...] returns the list \
of its actual arguments.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetPathSeparator", "::", "usage"}], "=", 
   "\"\<The call of procedure SetPathSeparator[x] determines a separator \\\"\
\\\\\\\" or \\\"/\\\" for paths to files/directories for the period of the \
current session with the package, returning a new separator x.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FileDirStForm", "::", "usage"}], "=", 
   "\"\<The call of procedure FileDirStForm[x] returns a name or a path to a \
datafile x in the standard format - the symbols composing names of files and \
paths to them are coded in lower case, whereas as separators the standard one \
\\\"\\\\\\\" is used.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StandPath", "::", "usage"}], "=", 
   "\"\<The call of procedure StandPath[x] returns the path to a datafile x \
or a directory in the standard format - the symbols composing names of files \
and paths to them are coded in lower case, whereas the standard separators \\\
\"\\\\\\\" are used as separators. Moreover, the procedure StandPath for \
testing of admissibility of argument x as a real path uses the procedure \
PathToFileQ that represents an independent interest and provides the \
correctness of processing of the paths containing the blank symbols.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StandStrForm", "::", "usage"}], "=", 
   "\"\<The function call StandStrForm[x] returns the result of converting of \
all letters of a string x into lowercase with replacements of symbols \\\"/\\\
\" onto symbols \\\"\\\\\\\".\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DirFilePaths", "::", "usage"}], "=", 
   "\"\<The DirFilePaths procedure provides search in the given directory of \
chains of subdirectories and datafiles containing a string x as own \
components. The call DirFilePaths[x, y] returns the 2\[Dash]element list \
whose first element is a list of full paths to subdirectories of a directory \
y which contain components x whereas the second element is the list of full \
paths to datafiles whose names coincide with a string x. In the absence of \
the second optional argument y the procedure call instead of it supposes \
BootDrive1[][[1]] <> \\\"\\\\*.*\\\".\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SeqToString", "::", "usage"}], "=", 
   "\"\<The call of simple function SeqToString[a, b, c, ...] returns the \
list of its actual arguments in string format.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContextMfile", "::", "usage"}], "=", 
   "\"\<The call ContextMfile[x] returns the context associated with a \
package, located in a m-file x, given by the name or full path to it.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContextMfile1", "::", "usage"}], "=", 
   "\"\<Meanwhile, the ContextMfile procedure provides search only of the \
first context in a m\[Dash]file with a package whereas generally multiple \
contexts can be associated with a package. The    ContextMfile1 procedure \
provides the solution of this question in case of multiple contexts. The \
procedure call ContextMfile1[x] returns the list of the contexts or single \
context associated with a datafile x of formats {\\\"m\\\", \\\"tr\\\"}, in \
case of lack of contexts the empty list, i.e. {} is returned. Furthermore, \
the additional tr\[Dash]format allows to carry out search of contexts in the \
system datafiles containing contexts. Moreover, in case FileExistsQ[x] = \
False the search of a datafile x is done in file system of the computer as a \
whole.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContextNBfile", "::", "usage"}], "=", 
   "\"\<As distinct from procedure ContextMfile, the call ContextNBfile[x] \
returns the context associated with a package, located in a datafile x of the \
format {\\\"cdf\\\", \\\"nb\\\"}, given by the name or full path to it. If a \
datafile x of the format {\\\"cdf\\\", \\\"nb\\\"} does not contain a context \
identifier, the call of procedure ContextNBfile[x] returns $Failed.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StrFromStr", "::", "usage"}], "=", 
   "\"\<In a lot of cases at processing of string constructions it is \
necessary to take of them substrings, limited by the symbol {\\\"}, i.e. \
\\\"strings in strings\\\". This problem is solved by means of the procedure, \
whose call StrFromStr[x] returns the list of such substrings located in a \
string x; otherwise, the call StrFromStr[x] returns the empty list, i.e. \
{}.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Un", "::", "usage"}], "=", 
   "\"\<The simple function Un[x] is a software implementation of the \
standard function Unique[x].\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Unique1", "::", "usage"}], "=", 
   "\"\<The call Unique1[x, y] returns an unique name in string-format that \
depends on the second argument or its absence, at the same time assigning a \
value x to this name.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UniqueV", "::", "usage"}], "=", 
   "\"\<The procedure call UniqueV[X, y] returns a name in string format \
\\\"Xn\\\" of an unique variable of the current session to which value y was \
ascribed, where X \[Dash] a symbol, n \[Dash] an integer and y \[Dash] an \
arbitrary expression.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ListAssign", "::", "usage"}], "=", 
   "\"\<The call ListAssign[x, y] provides assignment of values of a list x \
to the generated variables of format y$nnn, returning the nested list, whose \
first element defines the list of the generated variables \\\"y$nnn\\\" in \
string format, whereas the second - the list of values of the list which were \
assigned for corresponding variables of the first list.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ListAppValue", "::", "usage"}], "=", 
   "\"\<The call of simple function ListAppValue[x, y] provides assignment of \
a value y to each element of a list x.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"OverLap", "::", "usage"}], "=", 
   "\"\<The procedure call OverLap[x, y] returns the length of the overlap \
between x and y in linear time. This is defined to be the length of the \
longest suffix of x that is a prefix of y; in addition, if the third argument \
had been coded then through it the overlap is returned. In case of especial \
or erroneous situations the call is returned unevaluated.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExpLocals", "::", "usage"}], "=", 
   "\"\<The ExpLocals procedure is intended for extension of the list of \
local variables of blocks and modules. Expansion is defined by the list of \
strings defining names of new local variables and/or local variables with \
initial values ascribed to them. It must be kept in mind, elements of the \
given list need to be encoded in string-format in order to avoid assignment \
to them of values of the variables of the current session of the same name \
and/or calculations which are defined by initial values ascribed to them. The \
call ExpLocals[x, y] returns the list of local variables with initial values \
ascribed to to them in string-format from the list y by which local variables \
of a block or a module x should be expanded. In addition, generally this list \
can be less than the given list y (or at all empty) inasmuch as the variables \
which are available in object x as formal arguments or local variables are \
excluded from it. The resultant object keeps all options and attributes of \
initial object x.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtrExpr", "::", "usage"}], "=", 
   "\"\<In a certain relation to the ExprOfStr procedure also the ExtrExpr \
procedure adjoins, whose call ExtrExpr[S, n, m] returns omnifarious correct \
expressions in string format which are  contained in the substring of a \
string S limited by positions with numbers n and m. In the absence of correct \
expressions the empty list, i.e. {} is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExprOnLevels", "::", "usage"}], "=", 
   "\"\<The call ExprOnLevels[x] returns the nested list whose sublists \
represent subexpressions of an expression x that are located on its levels \
starting with the first up to the last accordingly.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"XOR1", "::", "usage"}], "=", 
   "\"\<Operation 'x XOR1 y' with two positive integers x and y is defined as \
bit-by-bit operation XOR without a carrying over into the high\[Dash]order \
digits with binary equivalents of the given integers x, y; in addition, a \
length l of binary representation is defined by length of representation of \
the maximal integer, i.e. l = max{|x|,|y|}. The call XOR1[{x1,x2,...,xp}] \
returns the result of application of the above operation XOR1 to integers \
x1,x2,...,xp.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReprodXOR1", "::", "usage"}], "=", 
   "\"\<The procedure call ReprodXOR1[S,n,m] returns 2-element list whose the \
first element defines the number of iterations of a structure with template \
size n that generates from a string S a configuration containing m copies of \
S while the second element defines real number of copies. The call with \
fourth optional argument g additionally through g (indefinite variable) \
returns the resultant configuration.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReprodXOR11", "::", "usage"}], "=", 
   "\"\<Procedure ReprodXOR1 provides simulation of dynamics in 1\[Dash]HS of \
initial configurations containing symbols from alphabet A={0,1,2,...,a} where \
a is a prime no more then 7. While for case of arbitrary alphabet A allowing \
to use the initial configuration with symbols from alphabet A={0,1,2,...,a} \
(a \[Dash] an arbitrary integer) as an initial configuration can be used a \
modification of the above procedure ReprodXOR1 whose call ReprodXOR11[S,n,m] \
returns two\[Dash]element list whose the first element defines the number of \
steps of a structure with neighbourhood template size n which generates from \
a list S defining the initial configuration a configuration containing m \
copies of configuration S while the second element defines real number of \
such copies. At that, the procedure call ReprodXOR11[S,n,m,g] with fourth \
optional argument g additionally through actual argument g (indefinite \
variable) returns the list defining the resultant configuration.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SelfReprod", "::", "usage"}], "=", 
   "\"\<A successful procedure call SelfReprod[c, n, p, m], implemented in \
the environment of system Mathematica, returns the number of iterations of a \
linear global transition function with neighbourhood index \
X={0,1,...,n\[Dash]1} and alphabet A={0,1,...,p\[Dash]1} (p \[Dash] an \
apbitrary integer) that was required to generate m copies of an initial \
configuration c. In case of a rather long run of the procedure, it can be \
interrupted, by monitoring through the list {d, t} the reality of obtaining \
the required number of copies of configuration c, where d \[Dash] number of \
iterations and t \[Dash] quantity of initial configuration c.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SelfReprod1", "::", "usage"}], "=", 
   "\"\<The procedure call SubConf[Ltf, Cf, p, w] on the basis of the local \
transition function which is defined by the list Ltf of parallel \
substitutions along with the finite configuration Cf, number of the demanded \
copies p and a finite configuration w returns 2\[Dash]element list whose the \
first element defines number of steps used by the structure 1\[Dash]HS(a, n) \
with local transition function Ltf for generation p copies of configuration \
Cf from an initial configuration w whereas the second element defines number \
of really obtained copies of configuration Cf.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HSD", "::", "usage"}], "=", 
   "\"\<The procedure call HSD[A, dl, C, L, n, p] returns the configuration \
in the list form which is result of generation from configuration C on step p \
of a local transition function L given by the list of substitutions of a 1\
\[Dash]HSD with alphabet A, the delays d and neighbourhood template size n.\>\
\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReprodHSD", "::", "usage"}], "=", 
   "\"\<Procedure ReprodHSD allows experimentally to study in a structure 1\
\[Dash]HSD with alphabet A, the delays d, neighbourhood template size n and a \
local transition function ltf given by the list of substitutions the self\
\[Dash]reproductivity of an initial configuration Cf given in the list form. \
The procedure call ReprodHSD[A,dl,Cf,L,n,p,v] returns the 2\[Dash]element \
list whose first element defines the demanded quantity of copies p of a \
finite configuration Cf given in the list form, and the second element \
defines the quantity of copies in the Moore sense of the configuration Cf \
that have been really obtained in process of generation of 1\[Dash]HSD on \
interval out of no more than v steps.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReprodHSM", "::", "usage"}], "=", 
   "\"\<The procedure ReprodHSM has six formal arguments, namely: Cf \[Dash] \
a finite configuration in the list format, n \[Dash] the size of \
neighbourhood index of a structure, p \[Dash] memory depth, m - modulus of \
congruence, g - number of the required copies of configuration Cf in \
generated configurations, v \[Dash] the limiting number of steps of the \
structure. The call ReprodHSM[Cf, n, p, m, g, v] returns 2\[Dash]element list \
whose first element is g and the second defines the real number of copies of \
the configuration Cf in generated configurations. At long \
non\[Dash]performance of the condition (g) the procedure execution will end \
via v steps or can be interrupted manually.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReprodHSM1", "::", "usage"}], "=", 
   "\"\<In contrast to the above procedure ReprodHSM the call ReprodHSM1[Cf, \
n, p, m, g, v] returns 3\[Dash]element list whose first element is g, the \
second element defines the real number of copies of the configuration Cf, and \
third element \[Dash] number of the demanded steps of the structure.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReprodHSwVni", "::", "usage"}], "=", 
   "\"\<For computer research of self\[Dash]reproducibility in \
1\[Dash]dimensional homogeneous structures with variable neighbourhood index, \
the procedure ReprodHSwVni can be useful enough. The call ReprodHSwVni[A, Cf, \
m, g, v] returns 3\[Dash]element list whose first element defines the desired \
number (g) of copies of a configuration Cf in an alphabet A, the second \
defines the real number of copies of Cf, and third element defines number of \
structure steps. Other arguments of the ReprodHSwVni are analogous to the \
arguments of same name in the above procedure ReprodHSM.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SubConf", "::", "usage"}], "=", 
   "\"\<The procedure call SubConf[Ltf, Cf, p, w] on the basis of the local \
transition function which is defined by the list Ltf of parallel \
substitutions along with the finite configuration Cf, number of the demanded \
copies p and a finite configuration w returns 2\[Dash]element list whose the \
first element defines number of steps used by the structure 1\[Dash]HS(2, n) \
with local transition function Ltf for generation p copies of configuration \
Cf from an initial configuration w whereas the second element defines number \
of really obtained copies of configuration Cf.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReadFullFile", "::", "usage"}], "=", 
   "\"\<The call ReadFullFile[F] returns the contents of a datafile F with \
change of symbols \\\"\\\\r\\\\n\\\" of carriage return and form feed onto \
the symbols \\\"\\\" (empty string); if the datafile F is absent in file \
system of a computer, the call returns the value $Failed. In addition, the \
call ReadFullFile[F, y] with the second optional argument y \[Dash] an \
indefinite variable \[Dash] returns through it the full name or full path to \
the datafile F; if y is a string, it replaces in the returned contents of the \
datafile F symbols \\\"\\\\r\\\\n\\\" onto a string y; In case of other types \
of argument y change of symbols \\\"\\\\r\\\\n\\\" onto the symbols \\\"\\\" \
are done.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReadFullFile1", "::", "usage"}], "=", 
   "\"\<The call ReadFullFile1[F] returns the contents of a datafile F with \
change of symbols \\\"\\\\r\\\\n\\\" of carriage return and form feed onto \
the symbols \\\"\\\" (empty string); if the datafile F is absent in file \
system of a computer, the call is returned unevaluated. In case of \
inadmissible type of a datafile the call returns the empty string.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ToLTF", "::", "usage"}], "=", 
   "\"\<The procedure call ToLTF[A, n, G, p] returns the list of parallel \
substitutions defining a local transition function of 1\[Dash]HS with \
alphabet A, template size n and p=Length[A]; at that, G is the name of a \
function defined as G[x1,...,xn].\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SEQ", "::", "usage"}], "=", 
   "\"\<Procedure SEQ serves as an analogue of the same procedure of the \
package Maple. The procedure call SEQ[x, y, z] returns the list of values \
x[y] where y changes or in limits z=m;;n, or in limits z=m;;n;;p with step p; \
in addition, values {m, n, p} can accept only positive numerical values; at m \
<= n the value p is considered positive, otherwise negative. In case of zero \
or negative value of 3-rd argument the procedure call SEQ[x, y, z] is \
returned unevaluated.\>\""}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ExtrExpr`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExtrExpr", "[", 
   RowBox[{
    RowBox[{"S_", "/;", 
     RowBox[{"StringQ", "[", "S", "]"}]}], ",", 
    RowBox[{"N_", "/;", 
     RowBox[{"IntegerQ", "[", "N", "]"}]}], ",", 
    RowBox[{"M_", "/;", 
     RowBox[{"IntegerQ", "[", "M", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"StringLength", "[", "S", "]"}]}], ",", "b", ",", "c", ",", 
      RowBox[{"h", "=", 
       RowBox[{"{", "}"}]}], ",", "k", ",", " ", "j"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"1", "\[LessEqual]", "M", "\[LessEqual]", "a"}], "&&", 
         RowBox[{"N", "\[LessEqual]", "M"}]}], ")"}]}], ",", 
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"b", "=", 
        RowBox[{"StringTake", "[", 
         RowBox[{"S", ",", 
          RowBox[{"{", 
           RowBox[{"N", ",", "M"}], "}"}]}], "]"}]}], ";", " ", 
       RowBox[{"Do", "[", " ", 
        RowBox[{
         RowBox[{"Do", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"c", "=", 
             RowBox[{"Quiet", "[", 
              RowBox[{"StringTake", "[", 
               RowBox[{"b", ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", 
                  RowBox[{"M", "-", "N", "-", "k", "+", "1"}]}], "}"}]}], 
               "]"}], "]"}]}], ";", " ", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"ExpressionQ", "[", "c", "]"}], ",", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"h", ",", "c"}], "]"}], ";", 
               RowBox[{"Break", "[", "]"}]}], ",", "Null"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "0", ",", 
             RowBox[{"M", "-", "N", "+", "1"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"M", "-", "N"}]}], "}"}]}], "]"}], ";", " ", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"StringTrim2", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<+\>\"", ",", "\"\<-\>\"", ",", "\"\< \>\"", " ", ",", 
                 "\"\<_\>\""}], "}"}], ",", "3"}], "]"}], "&"}], ",", "h"}], 
           "]"}], ",", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\"\<\>\"", ",", "\"\< \>\""}], "}"}], ",", "#"}], 
             "]"}]}], "&"}]}], "]"}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ExtrCall`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExtrCall", "[", 
   RowBox[{"z___", ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"BlockFuncModQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b", ",", "p", ",", "g", ",", "x", ",", 
      RowBox[{"a", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"CharacterRange", "[", 
          RowBox[{"\"\<A\>\"", ",", "\"\<Z\>\""}], "]"}], ",", 
         RowBox[{"CharacterRange", "[", 
          RowBox[{"\"\<a\>\"", ",", "\"\<z\>\""}], "]"}]}], "]"}]}]}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", "z", "}"}], "\[Equal]", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{
       RowBox[{"p", "=", 
        RowBox[{"PureDefinition", "[", "y", "]"}]}], ";", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ListQ", "[", "p", "]"}], ",", 
         RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", " ", 
       RowBox[{"g", "=", 
        RowBox[{"ExtrVarsOfStr", "[", 
         RowBox[{"p", ",", "2"}], "]"}]}], ";", " ", 
       RowBox[{"g", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"g", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"\"\< \>\"", "<>", "#", "<>", "\"\<[\>\""}], "&"}], ",",
              "g"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"StringFreeQ", "[", 
             RowBox[{"p", ",", "#"}], "]"}]}], "&"}]}], "]"}]}], ";", 
       RowBox[{"g", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"SystemQ", "[", 
                RowBox[{"p", "=", 
                 RowBox[{"StringTake", "[", 
                  RowBox[{"#", ",", 
                   RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "2"}]}], "}"}]}], "]"}]}], "]"}], ",", "p"}],
               "]"}], "&"}], ",", "g"}], "]"}], ",", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"SameQ", "[", 
             RowBox[{"#", ",", "Null"}], "]"}]}], "&"}]}], "]"}]}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "g", "]"}], "\[Equal]", "1"}], ",", 
         RowBox[{"g", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "g"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"b", "[", "x_", "]"}], ":=", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"c", "=", 
             RowBox[{"DefFunc3", "[", 
              RowBox[{"ToString", "[", "y", "]"}], "]"}]}], ",", "d", ",", 
            "h", ",", 
            RowBox[{"k", "=", "1"}], ",", 
            RowBox[{"t", "=", 
             RowBox[{"{", "}"}]}]}], "}"}], ",", 
          RowBox[{
           RowBox[{"h", "=", 
            RowBox[{"StringPosition", "[", 
             RowBox[{"c", ",", 
              RowBox[{
               RowBox[{"ToString", "[", "x", "]"}], "<>", "\"\<[\>\""}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"h", "\[Equal]", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{"Return", "[", "False", "]"}], ",", 
             RowBox[{
              RowBox[{"d", "=", 
               RowBox[{"Map", "[", 
                RowBox[{"First", ",", "h"}], "]"}]}], ";", " ", 
              RowBox[{"For", "[", 
               RowBox[{"k", ",", 
                RowBox[{"k", "\[LessEqual]", 
                 RowBox[{"Length", "[", "d", "]"}]}], ",", 
                RowBox[{"k", "++"}], ",", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"t", ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"!", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{"StringTake", "[", 
                    RowBox[{"c", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"d", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "-", "1"}], ",", 
                    RowBox[{
                    RowBox[{"d", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
                    "]"}]}], "]"}]}], ",", "True", ",", "False"}], "]"}]}], 
                 "]"}]}], "]"}]}]}], "]"}], ";", " ", 
           RowBox[{"t", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"ListQ", "[", "z", "]"}]}], ",", 
         RowBox[{"b", "[", "z", "]"}], ",", 
         RowBox[{"Select", "[", 
          RowBox[{"z", ",", 
           RowBox[{
            RowBox[{"b", "[", "#", "]"}], "&"}]}], "]"}]}], "]"}]}]}], 
     "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ExtensionHeading`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExtensionHeading", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], ",", "y__"}], "]"}], ":=", 
  " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"HeadPF", "[", "x", "]"}], "}"}], "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"StringQ", "[", "x", "]"}], ",", 
         RowBox[{"Symbol", "[", "x", "]"}], ",", "x"}], "]"}]}], ",", "d", 
      ",", 
      RowBox[{"atr", "=", 
       RowBox[{"Attributes", "[", "x", "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"ClearAttributes", "[", 
      RowBox[{"x", ",", "atr"}], "]"}], ";", " ", 
     RowBox[{"d", "=", 
      RowBox[{"Args", "[", "x", "]"}]}], ";", " ", 
     RowBox[{"Clear", "[", "x", "]"}], ";", " ", 
     RowBox[{"d", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", "y", "}"}]}], "]"}], "&"}], ",", "d"}], "]"}]}], ";", 
     " ", 
     RowBox[{"d", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"ToString1", ",", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"c", "@@", "#"}], "&"}], ",", "d"}], "]"}]}], "]"}]}], ";",
      " ", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"ToExpression", "[", 
        RowBox[{"StringReplace", "[", 
         RowBox[{
          RowBox[{"a", "[", 
           RowBox[{"[", "k", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"b", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "\[Rule]", 
           RowBox[{"d", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{"Length", "[", "a", "]"}]}], "}"}]}], "]"}], ";", " ", 
     RowBox[{"Map", "[", 
      RowBox[{"ToExpression", ",", "d"}], "]"}], ";", " ", 
     RowBox[{"ReduceArgs", "[", "x", "]"}], ";", 
     RowBox[{"SetAttributes", "[", 
      RowBox[{"x", ",", "atr"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`QBlockMod`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"QBlockMod", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}]}], ",", "b", 
      ",", 
      RowBox[{"c", "=", "True"}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<System\>\"", ",", "$Failed"}], "}"}], ",", 
        RowBox[{"a", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "False", ",", 
      RowBox[{
       RowBox[{"b", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"HeadPF", "[", "x", "]"}], "}"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "a", "]"}]}], ",", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"SuffPref", "[", 
              RowBox[{
               RowBox[{"StringReplace", "[", 
                RowBox[{
                 RowBox[{"a", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"b", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "<>", "\"\< := \>\""}], 
                  "\[Rule]", "\"\<\>\""}], ",", "1"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"\"\<Module[{\>\"", ",", "\"\<Block[{\>\""}], "}"}], 
               ",", "1"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"c", "=", "False"}], ";", 
             RowBox[{"Break", "[", "]"}]}]}], "]"}], ";", 
          RowBox[{"k", "++"}]}]}], "]"}], ";", "c"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`RenDirFile`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RenDirFile", "[", 
   RowBox[{"x_", ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"StringQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", 
        RowBox[{"\"\</\>\"", ",", "\"\<\\\\\>\""}], "}"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"StringTrim", "[", 
        RowBox[{"x", ",", 
         RowBox[{"{", 
          RowBox[{"\"\</\>\"", ",", "\"\<\\\\\>\""}], "}"}]}], "]"}]}]}], 
     "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"FileExistsQ", "[", "b", "]"}], "||", 
       RowBox[{"DirectoryQ", "[", "b", "]"}]}], ",", 
      RowBox[{
       RowBox[{"c", "=", 
        RowBox[{"StringTrim", "[", 
         RowBox[{"y", ",", "c"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"a", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"FileExistsQ", "[", "b", "]"}], ",", "RenameFile", ",", 
          "RenameDirectory"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"PathToFileQ", "[", "b", "]"}], "&&", 
          RowBox[{"PathToFileQ", "[", "c", "]"}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{"FileNameSplit", "[", "b", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", " ", 
              RowBox[{"-", "2"}]}], "]"}], "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"FileNameSplit", "[", "c", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", 
              RowBox[{"-", "2"}]}], "]"}], "]"}]}]}], ",", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Check", "[", 
           RowBox[{
            RowBox[{"a", "[", 
             RowBox[{"b", ",", "c"}], "]"}], ",", 
            RowBox[{
            "\"\<Directory/datafile <\>\"", "<>", "y", "<>", 
             "\"\<> already exists\>\""}]}], "]"}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"PathToFileQ", "[", "b", "]"}], "&&", 
            RowBox[{"!", 
             RowBox[{"PathToFileQ", "[", "c", "]"}]}]}], ",", 
           RowBox[{"Quiet", "[", 
            RowBox[{"Check", "[", 
             RowBox[{
              RowBox[{"a", "[", 
               RowBox[{"b", ",", 
                RowBox[{"FileNameJoin", "[", 
                 RowBox[{"Append", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"FileNameSplit", "[", "b", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ";;", 
                    RowBox[{"-", "2"}]}], "]"}], "]"}], ",", 
                   RowBox[{"StringReplace", "[", 
                    RowBox[{"c", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\</\>\"", "->", "\"\<\>\""}], ",", 
                    RowBox[{"\"\<\\\\\>\"", "->", "\"\<\>\""}]}], "}"}]}], 
                    "]"}]}], "]"}], "]"}]}], "]"}], ",", 
              RowBox[{
              "\"\<Directory/datafile <\>\"", "<>", "y", "<>", 
               "\"\<> already exists\>\""}]}], "]"}], "]"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"!", 
               RowBox[{"PathToFileQ", "[", "b", "]"}]}], "&&", 
              RowBox[{"!", 
               RowBox[{"PathToFileQ", "[", "c", "]"}]}]}], ",", 
             RowBox[{"Quiet", "[", 
              RowBox[{"Check", "[", 
               RowBox[{
                RowBox[{"a", "[", 
                 RowBox[{"b", ",", 
                  RowBox[{"StringReplace", "[", 
                   RowBox[{"c", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\</\>\"", "->", "\"\<\>\""}], ",", 
                    RowBox[{"\"\<\\\\\>\"", "->", "\"\<\>\""}]}], "}"}]}], 
                   "]"}]}], "]"}], ",", 
                RowBox[{
                "\"\<Directory/datafile <\>\"", "<>", "y", "<>", 
                 "\"\<> already exists\>\""}]}], "]"}], "]"}], ",", 
             "$Failed"}], "]"}]}], "]"}]}], "]"}]}], ",", 
      RowBox[{"Defer", "[", 
       RowBox[{"RenDirFile", "[", 
        RowBox[{"x", ",", "y"}], "]"}], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`CharacterQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CharacterQ", "[", "c_", "]"}], ":=", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"NumberQ", "[", "c", "]"}]}], "&&", 
   RowBox[{
    RowBox[{"StringLength", "[", 
     RowBox[{"ToString", "[", "c", "]"}], "]"}], "\[Equal]", 
    "1"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Characters1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Characters1", "[", "x_", "]"}], ":=", 
  RowBox[{"Characters", "[", 
   RowBox[{"x", "//", "ToString"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`$Load$Files$`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"$Load$Files$", " ", ":=", "78"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`FileExistsQ1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FileExistsQ1", "[", 
   RowBox[{"x__", "/;", 
    RowBox[{"StringQ", "[", 
     RowBox[{
      RowBox[{"{", "x", "}"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"SearchFile", "[", 
        RowBox[{
         RowBox[{"{", "x", "}"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "x", "}"}]}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"a", "\[Equal]", 
       RowBox[{"{", "}"}]}], ",", "False", ",", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "b", "]"}], "\[Equal]", "2"}], "&&", 
          RowBox[{"!", 
           RowBox[{"HowAct", "[", 
            RowBox[{"b", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], ",", 
         RowBox[{"ToExpression", "[", 
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"b", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\< = \>\"", "<>", 
           RowBox[{"ToString1", "[", "a", "]"}]}], "]"}], ",", "Null"}], 
        "]"}], ";", "True"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`InOutFiles`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InOutFiles", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{"ToString1", ",", 
          RowBox[{"Streams", "[", "]"}]}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"3", ";;", 
          RowBox[{"-", "1"}]}], "]"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"a", "\[Equal]", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"SuffPref", "[", 
             RowBox[{"#", ",", "\"\<InputStream[\>\"", ",", "1"}], "]"}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"b", ",", 
              RowBox[{"StringTake", "[", 
               RowBox[{"#", ",", 
                RowBox[{"{", 
                 RowBox[{"13", ",", 
                  RowBox[{
                   RowBox[{"Flatten", "[", 
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"#", ",", "\"\<\\\", \>\""}], "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], "]"}], 
            ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"c", ",", 
              RowBox[{"StringTake", "[", 
               RowBox[{"#", ",", 
                RowBox[{"{", 
                 RowBox[{"14", ",", 
                  RowBox[{
                   RowBox[{"Flatten", "[", 
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"#", ",", "\"\<\\\", \>\""}], "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], 
             "]"}]}], "]"}], "&"}], ",", "a"}], "]"}], ";", 
       RowBox[{"Map", "[", 
        RowBox[{"ToExpression", ",", 
         RowBox[{"{", 
          RowBox[{"b", ",", "c"}], "}"}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`OpenFileQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"OpenFileQ", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"InOutFiles", "[", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"a", "\[Equal]", 
       RowBox[{"{", "}"}]}], ",", "False", ",", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ToLowerCase", "[", 
              RowBox[{"StandPath", "[", "x", "]"}], "]"}], "==", 
             RowBox[{"ToLowerCase", "[", 
              RowBox[{"StandPath", "[", "#", "]"}], "]"}]}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"b", ",", "#"}], "]"}]}], "]"}], "&"}], ",", 
         RowBox[{"a", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ToLowerCase", "[", 
              RowBox[{"StandPath", "[", "x", "]"}], "]"}], "==", 
             RowBox[{"ToLowerCase", "[", 
              RowBox[{"StandPath", "[", "#", "]"}], "]"}]}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"c", ",", "#"}], "]"}]}], "]"}], "&"}], ",", 
         RowBox[{"a", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ";", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"b", ",", "c"}], "}"}], "\[Equal]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "}"}], ",", 
            RowBox[{"{", "}"}]}], "}"}]}], ",", "False", ",", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"{", "y", "}"}], "\[NotEqual]", 
              RowBox[{"{", "}"}]}], "&&", 
             RowBox[{"SymbolQ", "[", "y", "]"}], "&&", 
             RowBox[{"!", 
              RowBox[{"HowAct", "[", "y", "]"}]}]}], ",", 
            RowBox[{"y", "=", 
             RowBox[{"{", 
              RowBox[{"b", ",", "c"}], "}"}]}]}], "]"}], ";", "True"}]}], 
        "]"}]}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`RestoreDelPackage`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RestoreDelPackage", "[", 
   RowBox[{
    RowBox[{"f_", "/;", 
     RowBox[{
      RowBox[{"StringQ", "[", "f", "]"}], "&&", 
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<cdf\>\"", ",", "\"\<m\>\"", ",", "\"\<mx\>\"", ",", 
          "\"\<nb\>\""}], "}"}], ",", 
        RowBox[{"FileExtension", "[", "f", "]"}]}], "]"}]}]}], ",", 
    "s_String"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{
        RowBox[{"FilesDistrDirs", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"BootDrive", "[", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "<>", "\"\<:\\\\Recycler\>\""}], 
         "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"-", "2"}]}], "]"}], "]"}]}], ",", "b", ",", "c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", "j", ",", "p", ",", "t", ",", 
      RowBox[{"h", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"b", "=", 
         RowBox[{"a", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "2"}], ",", 
          RowBox[{"j", "\[LessEqual]", 
           RowBox[{"Length", "[", "b", "]"}]}], ",", 
          RowBox[{"j", "++"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"SameQ", "[", 
              RowBox[{
               RowBox[{"FileExtension", "[", 
                RowBox[{"b", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "]"}], ",", 
               RowBox[{"FileExtension", "[", "f", "]"}]}], "]"}], "&&", 
             RowBox[{"SameQ", "[", 
              RowBox[{
               RowBox[{"ContextFromFile", "[", 
                RowBox[{
                 RowBox[{"b", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "<>", 
                 RowBox[{"b", "[", 
                  RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", "s"}], 
              "]"}]}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"d", ",", 
              RowBox[{
               RowBox[{"b", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "<>", 
               RowBox[{"b", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}]}], "]"}]}], "]"}]}], 
         "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"d", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", "$Failed", ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"b", "=", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"k", "=", "1"}]}], "}"}], ";", " ", 
        RowBox[{"For", "[", 
         RowBox[{"k", ",", 
          RowBox[{"k", "\[LessEqual]", 
           RowBox[{"Length", "[", "d", "]"}]}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"b", ",", 
             RowBox[{"CopyFile", "[", 
              RowBox[{
               RowBox[{"d", "[", 
                RowBox[{"[", "k", "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"CreateDirectory", "[", 
                 RowBox[{
                  RowBox[{"Directory", "[", "]"}], "<>", "\"\<\\\\$\>\"", "<>", 
                  RowBox[{"ToString", "[", "k", "]"}]}], "]"}], "<>", 
                "\"\<\\\\\>\"", "<>", 
                RowBox[{"FileNameTake", "[", 
                 RowBox[{"d", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], "]"}]}]}], "]"}]}], "]"}], 
           ";", 
           RowBox[{"DeleteFile", "[", 
            RowBox[{"d", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "]"}], ";", " ", 
           RowBox[{"a", "=", 
            RowBox[{"DirectoryName", "[", 
             RowBox[{"d", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "]"}]}], ";", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"SameQ", "[", 
               RowBox[{"a", ",", "\"\<\>\""}], "]"}]}], ",", 
             RowBox[{"DeleteDirectory", "[", 
              RowBox[{"a", ",", 
               RowBox[{"DeleteContents", "\[Rule]", "True"}]}], "]"}]}], 
            "]"}]}]}], "]"}], ";", "b"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`RestoreDelFile`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RestoreDelFile", "[", 
   RowBox[{
    RowBox[{"f_", "/;", 
     RowBox[{
      RowBox[{"StringQ", "[", "f", "]"}], "||", 
      RowBox[{"ListQ", "[", "f", "]"}]}]}], ",", 
    RowBox[{"r_", "/;", 
     RowBox[{"StringQ", "[", "r", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"b", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"Unique", "[", "\"\<ag\>\"", "]"}], "]"}]}], ",", "c", ",", 
      RowBox[{"p", "=", "$ArtKr$"}], ",", 
      RowBox[{"t", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"StandPath", ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", "f", "}"}], "]"}]}], "]"}]}], ",", "h"}], "}"}], ",", 
    RowBox[{
     RowBox[{"ClearAll", "[", "$ArtKr$", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"FileExistsQ1", "[", 
        RowBox[{"\"\<$recycle.bin\>\"", ",", "$ArtKr$"}], "]"}], ",", 
       RowBox[{
        RowBox[{"d", "=", 
         RowBox[{"$ArtKr$", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", 
        RowBox[{"$ArtKr$", "=", "p"}]}], ",", 
       RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", " ", 
     RowBox[{"Run", "[", 
      RowBox[{
      "\"\<Dir \>\"", "<>", "d", "<>", "\"\</B/S/L > \>\"", "<>", "b"}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"EmptyFileQ", "[", "b", "]"}], ",", "$Failed", ",", 
       RowBox[{
        RowBox[{"Quiet", "[", 
         RowBox[{"CreateDirectory", "[", "r", "]"}], "]"}], ";", " ", 
        RowBox[{"c", "=", 
         RowBox[{"ReadList", "[", 
          RowBox[{"b", ",", "String"}], "]"}]}]}]}], "]"}], ";", 
     RowBox[{"DeleteFile", "[", "b", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"h", "[", 
       RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
         RowBox[{"SuffPref", "[", 
          RowBox[{"x", ",", 
           RowBox[{"\"\<\\\\\>\"", "<>", "y"}], ",", "2"}], "]"}]}], ",", 
        RowBox[{"CopyFileToDir", "[", 
         RowBox[{"x", ",", 
          RowBox[{"StandPath", "[", "r", "]"}]}], "]"}], ",", 
        "\"\<Null\>\""}], "]"}]}], ";", " ", 
     RowBox[{"c", "=", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Outer", "[", 
          RowBox[{"h", ",", "c", ",", "t"}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"SameQ", "[", 
           RowBox[{"#", ",", "\"\<Null\>\""}], "]"}]}], "&"}]}], "]"}]}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Restart`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Restart", "[", "x___", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Quiet", "[", 
           RowBox[{"ClearAttributes", "[", 
            RowBox[{"#", ",", "Protected"}], "]"}], "]"}], ",", 
          RowBox[{"Quiet", "[", 
           RowBox[{"Remove", "[", "#", "]"}], "]"}]}], "}"}], "&"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", "x", "}"}], "\[NotEqual]", 
           RowBox[{"{", "}"}]}], " ", "&&", 
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"Contexts", "[", "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"StringCount", "[", 
                 RowBox[{"#", ",", "\"\<`\>\""}], "]"}], "\[Equal]", "1"}], 
               "&"}]}], "]"}], ",", "x"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Write", "[", 
             RowBox[{"\"\<$590$\>\"", ",", "90"}], "]"}], ",", 
            RowBox[{"Close", "[", "\"\<$590$\>\"", "]"}], ",", 
            RowBox[{"Names", "[", 
             RowBox[{"x", "<>", "\"\<*\>\""}], "]"}]}], "}"}], "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Names", "[", "\"\<`*\>\"", "]"}]}], "]"}]}], "]"}], ";", 
     " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Quiet", "[", 
         RowBox[{"Check", "[", 
          RowBox[{
           RowBox[{"Read", "[", "\"\<$590$\>\"", "]"}], ",", "500"}], "]"}], 
         "]"}], "\[Equal]", "90"}], ",", 
       RowBox[{
        RowBox[{"DeleteFile", "[", 
         RowBox[{"Close", "[", "\"\<$590$\>\"", "]"}], "]"}], ";", 
        RowBox[{"Unprotect", "[", 
         RowBox[{"$Packages", ",", "Contexts"}], "]"}], ";", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"$Packages", ",", "$ContextPath"}], "}"}], "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Complement", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", "x", "}"}]}], "]"}], "&"}], ",", 
           RowBox[{"{", 
            RowBox[{"$Packages", ",", "$ContextPath"}], "}"}]}], "]"}]}], ";", 
        RowBox[{
         RowBox[{"Contexts", "[", "]"}], "=", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Contexts", "[", "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Quiet", "[", 
              RowBox[{"Check", "[", 
               RowBox[{
                RowBox[{"StringTake", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", 
                    RowBox[{"StringLength", "[", "x", "]"}]}], "}"}]}], "]"}],
                 ",", "\"\<Null\>\""}], "]"}], "]"}], "\[NotEqual]", "x"}], 
            "&"}]}], "]"}]}], ";", " ", 
        RowBox[{"Protect", "[", 
         RowBox[{"$Packages", ",", "Contexts"}], "]"}]}], ",", "Null"}], 
      "]"}], ";"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`TypeActObj`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TypeActObj", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Names", "[", "\"\<`*\>\"", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", "c", ",", "d", ",", "h", ",", "p", ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Quiet", "[", 
      RowBox[{"For", "[", 
       RowBox[{"k", ",", 
        RowBox[{"k", "\[LessEqual]", 
         RowBox[{"Length", "[", "a", "]"}]}], ",", 
        RowBox[{"k", "++"}], ",", 
        RowBox[{
         RowBox[{"h", "=", 
          RowBox[{"a", "[", 
           RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"c", "=", 
          RowBox[{"ToExpression", "[", "h", "]"}]}], ";", 
         RowBox[{"p", "=", 
          RowBox[{"\"\<0\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"Head", "[", "c", "]"}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"!", 
             RowBox[{"StringFreeQ", "[", 
              RowBox[{"h", ",", "\"\<$\>\""}], "]"}]}], "||", 
            RowBox[{
             RowBox[{"p", "===", "Symbol"}], "&&", 
             RowBox[{
              RowBox[{"Definition", "[", "c", "]"}], "===", "Null"}]}]}], ",", 
           RowBox[{"Continue", "[", "]"}], ",", 
           RowBox[{"b", "=", 
            RowBox[{"Append", "[", 
             RowBox[{"b", ",", 
              RowBox[{"{", 
               RowBox[{"h", ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"ProcQ", "[", "c", "]"}], ",", "\"\<0Procedure\>\"",
                   ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Head1", "[", "c", "]"}], "===", "Function"}], 
                    ",", "\"\<0Function\>\"", ",", "p"}], "]"}]}], "]"}]}], 
               "}"}]}], "]"}]}]}], "]"}]}]}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"a", "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"Gather1", "[", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{"b", ",", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "===", "Symbol"}]}], "&"}]}], 
          "]"}], ",", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"a", "=", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"StringReplace", "[", 
        RowBox[{
         RowBox[{"ToString1", "[", 
          RowBox[{"Map", "[", 
           RowBox[{"DeleteDuplicates", ",", 
            RowBox[{"Map", "[", 
             RowBox[{"Sort", ",", 
              RowBox[{"Map", "[", 
               RowBox[{"Flatten", ",", "a"}], "]"}]}], "]"}]}], "]"}], "]"}], 
         ",", 
         RowBox[{
         "\"\<AladjevProcedures`TypeActObj`\>\"", "->", "\"\<\>\""}]}], "]"}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "=", 
          RowBox[{"StringTake", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", 
              RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", 
           RowBox[{"Length", "[", "a", "]"}]}], "}"}]}], "]"}]}], "]"}], ";", 
     "a"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Gather2`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Gather2", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ListQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Gather", "[", 
          RowBox[{"Flatten", "[", "x", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "#", "]"}], ">", "1"}], "&"}]}], "]"}]}], 
      ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"a", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"{", "}"}], "]"}], ",", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"b", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"b", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"a", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"Length", "[", 
               RowBox[{"a", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", 
           RowBox[{"Length", "[", "a", "]"}]}], "}"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "b", "]"}], ">", "1"}], ",", "b", ",", 
       RowBox[{"First", "[", "b", "]"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`GatherStrLetters`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GatherStrLetters", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"StringJoin", "[", 
   RowBox[{"Map", "[", 
    RowBox[{"StringJoin", ",", 
     RowBox[{"Map", "[", 
      RowBox[{"FromCharacterCode", ",", 
       RowBox[{"Gather", "[", 
        RowBox[{
         RowBox[{"ToCharacterCode", "[", "x", "]"}], ",", 
         RowBox[{
          RowBox[{"#1", "\[Equal]", "#2"}], "&"}]}], "]"}]}], "]"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`BitGet1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BitGet1", "[", 
   RowBox[{"x___", ",", 
    RowBox[{"n_", "/;", 
     RowBox[{
      RowBox[{"IntegerQ", "[", "n", "]"}], "&&", 
      RowBox[{"n", "\[GreaterEqual]", "0"}]}]}], ",", 
    RowBox[{"p_", "/;", 
     RowBox[{
      RowBox[{
       RowBox[{"IntegerQ", "[", "p", "]"}], "&&", 
       RowBox[{"p", ">", "0"}]}], "||", 
      RowBox[{"ListQ", "[", "p", "]"}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"b", "=", "1"}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", "d", ",", 
      RowBox[{"a", "=", 
       RowBox[{"ToExpression", "[", 
        RowBox[{"Characters", "[", 
         RowBox[{"IntegerString", "[", 
          RowBox[{"n", ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
      RowBox[{"h", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ListQ", "[", "p", "]"}], ",", "p", ",", 
         RowBox[{"{", "p", "}"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{"b", ",", 
       RowBox[{"b", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{"b", "++"}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"c", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{"h", ",", "b"}], "]"}], ",", 
            RowBox[{"a", "[", 
             RowBox[{"[", "b", "]"}], "]"}], ",", "Null"}], "]"}]}], 
         "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"HowAct", "[", "x", "]"}]}], ",", 
       RowBox[{"x", "=", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", "Null"}], "]"}], ";", 
     RowBox[{"Select", "[", 
      RowBox[{"c", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"ToString", "[", "#", "]"}], "\[NotEqual]", "\"\<Null\>\""}],
         "&"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`WhichN`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WhichN", "[", "x__", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", "x", "}"}]}], ",", 
      RowBox[{"c", "=", "\"\<Which[\>\""}], ",", "d", ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{"Length", "[", "a", "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OddQ", "[", "d", "]"}], ",", 
       RowBox[{"Defer", "[", 
        RowBox[{"WhichN", "[", "x", "]"}], "]"}], ",", 
       RowBox[{"ToExpression", "[", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{"k", ",", 
           RowBox[{"k", "\[LessEqual]", "d"}], ",", 
           RowBox[{"k", "++"}], ",", 
           RowBox[{"c", "=", 
            RowBox[{"c", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"a", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "]"}], "<>", "\"\<,\>\""}]}]}],
           "]"}], ";", " ", 
         RowBox[{
          RowBox[{"StringTake", "[", 
           RowBox[{"c", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"-", "2"}]}], "}"}]}], "]"}], "<>", "\"\<]\>\""}]}], 
        "]"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Ind`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ind", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"InputForm", "[", "x", "]"}], "]"}]}], ",", "b", ",", "c"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"StringPosition", "[", 
        RowBox[{"a", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<[\>\"", ",", "\"\<]\>\""}], "}"}]}], "]"}], "]"}]}], 
     ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"b", "\[Equal]", 
         RowBox[{"{", "}"}]}], "||", 
        RowBox[{
         RowBox[{"StringTake", "[", 
          RowBox[{"a", ",", 
           RowBox[{"-", "1"}]}], "]"}], "!=", "\"\<]\>\""}]}], ",", "x", ",", 
       RowBox[{"Quiet", "[", 
        RowBox[{"Check", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{"ToExpression", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"StringTake", "[", 
               RowBox[{"a", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", 
                  RowBox[{
                   RowBox[{"b", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
               "]"}], ",", 
              RowBox[{"\"\<{\>\"", "<>", 
               RowBox[{"StringTake", "[", 
                RowBox[{"a", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"b", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], ",", 
                   RowBox[{
                    RowBox[{"b", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "-", "1"}]}], "}"}]}], 
                "]"}], "<>", "\"\<}\>\""}]}], "}"}]}], "]"}], ",", "x"}], 
         "]"}], "]"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StringPosition1`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StringPosition1", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", "y_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"c", "=", "1"}], ",", "d", ",", 
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"ListQ", "[", "y", "]"}], ",", 
           RowBox[{"Map", "[", 
            RowBox[{"ToString", ",", "y"}], "]"}], ",", 
           RowBox[{"ToString", "[", "y", "]"}]}], "]"}], "}"}], "]"}]}]}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{"c", ",", 
       RowBox[{"c", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{"c", "++"}], ",", 
       RowBox[{
        RowBox[{"d", "=", 
         RowBox[{"a", "[", 
          RowBox[{"[", "c", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"b", ",", 
          RowBox[{"{", 
           RowBox[{"d", ",", 
            RowBox[{"Flatten", "[", 
             RowBox[{"StringPosition", "[", 
              RowBox[{"x", ",", "d"}], "]"}], "]"}]}], "}"}]}], "]"}]}]}], 
      "]"}], ";", 
     RowBox[{"Sort", "[", 
      RowBox[{"Select", "[", 
       RowBox[{"b", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", 
          RowBox[{"{", "}"}]}], "&"}]}], "]"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SubsPosSymb`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SubsPosSymb", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"n_", "/;", 
     RowBox[{"PosIntQ", "[", "n", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{"ListQ", "[", "y", "]"}], "&&", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"CharacterQ", ",", "y"}], "]"}], "]"}], "\[Equal]", 
       RowBox[{"{", "True", "}"}]}]}]}], ",", 
    RowBox[{"z_", "/;", 
     RowBox[{
      RowBox[{"z", "\[Equal]", "0"}], "||", 
      RowBox[{"z", "\[Equal]", "1"}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "\"\<\>\""}], ",", 
      RowBox[{"k", "=", "n"}], ",", "b"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"n", ">", 
       RowBox[{"StringLength", "[", "x", "]"}]}], ",", 
      RowBox[{"Return", "[", 
       RowBox[{"Defer", "[", 
        RowBox[{"SubsPosSymb", "[", 
         RowBox[{"x", ",", "n", ",", "y", ",", "z"}], "]"}], "]"}], "]"}], 
      ",", 
      RowBox[{
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"z", "\[Equal]", "0"}], ",", 
           RowBox[{"k", "\[GreaterEqual]", "1"}], ",", 
           RowBox[{"k", "<=", 
            RowBox[{"StringLength", "[", "x", "]"}]}]}], "]"}], ",", 
         RowBox[{
          RowBox[{"b", "=", 
           RowBox[{"StringTake", "[", 
            RowBox[{"x", ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", "k"}], "}"}]}], "]"}]}], ";", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"MemberQ", "[", 
              RowBox[{"y", ",", "b"}], "]"}]}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"z", "\[Equal]", "0"}], ",", 
              RowBox[{"a", "=", 
               RowBox[{"b", "<>", "a"}]}], ",", 
              RowBox[{"a", "=", 
               RowBox[{"a", "<>", "b"}]}]}], "]"}], ",", 
            RowBox[{"Break", "[", "]"}]}], "]"}], ";", " ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"z", "\[Equal]", "0"}], ",", 
            RowBox[{"k", "--"}], ",", 
            RowBox[{"k", "++"}]}], "]"}]}]}], "]"}], ";", "a"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StrOfSymb`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StrOfSymb", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"PureFuncQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"StringJoin", "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Characters", "[", "x", "]"}], ",", "y"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`TwoHandQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TwoHandQ", "[", "x__", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"InputForm", "[", 
         RowBox[{
          RowBox[{"{", "x", "}"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", 
        RowBox[{
        "\"\<+\>\"", ",", "\"\<>=\>\"", ",", "\"\<<=\>\"", ",", "\"\<&&\>\"", 
         ",", "\"\<||\>\"", ",", "\"\<-\>\"", ",", "\"\<^\>\"", ",", 
         "\"\<**\>\"", ",", "\"\<<\>\"", ",", "\"\<==\>\"", ",", "\"\<!=\>\"",
          ",", "\"\<>\>\"", ",", "\"\<->\>\""}], "}"}]}], ",", "c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "x", "}"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"c", "=", 
      RowBox[{"StringPosition", "[", 
       RowBox[{"a", ",", "b"}], "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"StringFreeQ", "[", 
          RowBox[{"a", ",", "\"\<->\>\""}], "]"}], "&&", 
         RowBox[{"StringFreeQ", "[", 
          RowBox[{"a", ",", "\"\<>=\>\""}], "]"}], "&&", 
         RowBox[{
          RowBox[{"Length", "[", "c", "]"}], ">", "2"}]}], "||", 
        RowBox[{
         RowBox[{"Length", "[", "c", "]"}], "\[Equal]", "0"}]}], ",", "False",
        ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "d", "]"}], ">", "1"}], "&&", 
           RowBox[{"!", 
            RowBox[{"HowAct", "[", 
             RowBox[{"d", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "&&", 
           RowBox[{"!", 
            RowBox[{"ProtectedQ", "[", 
             RowBox[{"d", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], ",", 
          RowBox[{"ToExpression", "[", 
           RowBox[{
            RowBox[{"ToString", "[", 
             RowBox[{"d", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<=\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"Head", "[", 
              RowBox[{
               RowBox[{"{", "x", "}"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"Return", "[", 
           RowBox[{"Defer", "[", 
            RowBox[{"TwoHandQ", "[", "x", "]"}], "]"}], "]"}]}], "]"}], ";", 
        "True"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`GC`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GC", "[", "x_", "]"}], ":=", 
  RowBox[{"ToExpression", "[", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"ToString", "[", 
      RowBox[{"ToCharacterCode", "[", 
       RowBox[{"ToString", "[", 
        RowBox[{"InputForm", "[", "x", "]"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<{\>\"", "\[Rule]", "\"\<\>\""}], ",", 
       RowBox[{"\"\<,\>\"", "\[Rule]", "\"\<\>\""}], ",", 
       RowBox[{"\"\<}\>\"", "\[Rule]", "\"\<\>\""}]}], "}"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ExprOfStr`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExprOfStr", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"n_", "/;", 
     RowBox[{
      RowBox[{"IntegerQ", "[", "n", "]"}], "&&", 
      RowBox[{"n", ">", "0"}]}]}], ",", 
    RowBox[{"m_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "m"}], "]"}]}], ",", 
    RowBox[{"L_", "/;", 
     RowBox[{"ListQ", "[", "L", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "\"\<\>\""}], ",", "b", ",", "k"}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"n", "\[GreaterEqual]", 
        RowBox[{"StringLength", "[", "x", "]"}]}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"Defer", "[", 
         RowBox[{"ExprOfStr", "[", 
          RowBox[{"x", ",", "n", ",", "m", ",", "L"}], "]"}], "]"}], "]"}], 
       ",", "Null"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "n"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"m", "\[Equal]", 
          RowBox[{"-", "1"}]}], ",", 
         RowBox[{"k", "\[GreaterEqual]", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"StringLength", "[", "x", "]"}]}]}], "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"m", "\[Equal]", 
          RowBox[{"-", "1"}]}], ",", 
         RowBox[{"k", "--"}], ",", 
         RowBox[{"k", "++"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"m", "\[Equal]", 
           RowBox[{"-", "1"}]}], ",", 
          RowBox[{"a", "=", 
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{"x", ",", 
              RowBox[{"{", 
               RowBox[{"k", ",", "k"}], "}"}]}], "]"}], "<>", "a"}]}], ",", 
          RowBox[{"a", "=", 
           RowBox[{"a", "<>", 
            RowBox[{"StringTake", "[", 
             RowBox[{"x", ",", 
              RowBox[{"{", 
               RowBox[{"k", ",", "k"}], "}"}]}], "]"}]}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"SyntaxQ", "[", "a", "]"}]}], ",", "Null", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"m", "\[Equal]", 
                RowBox[{"-", "1"}]}], ",", 
               RowBox[{"k", "\[Equal]", "1"}], ",", 
               RowBox[{"k", "\[Equal]", 
                RowBox[{"StringLength", "[", "x", "]"}]}]}], "]"}], "||", 
             RowBox[{"MemberQ", "[", 
              RowBox[{"L", ",", 
               RowBox[{"Quiet", "[", 
                RowBox[{"StringTake", "[", 
                 RowBox[{"x", ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"m", "\[Equal]", 
                    RowBox[{"-", "1"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"k", "-", "1"}], ",", 
                    RowBox[{"k", "-", "1"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"k", "+", "1"}], ",", 
                    RowBox[{"k", "+", "1"}]}], "}"}]}], "]"}]}], "]"}], 
                "]"}]}], "]"}]}], ",", 
            RowBox[{"Return", "[", "a", "]"}], ",", "Null"}], "]"}]}], 
         "]"}]}]}], "]"}], ";", "$Failed"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`HeadToCall`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HeadToCall", "[", 
   RowBox[{"h_", "/;", 
    RowBox[{"HeadingQ", "[", "h", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"HeadName", "[", "h", "]"}]}], ",", "b"}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"\"\<{\>\"", "<>", 
       RowBox[{"StringTake", "[", 
        RowBox[{
         RowBox[{"StringReplace", "[", 
          RowBox[{"h", ",", 
           RowBox[{
            RowBox[{"a", "<>", "\"\<[\>\""}], "\[Rule]", "\"\<\>\""}], ",", 
           "1"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "2"}]}], "}"}]}], "]"}], "<>", "\"\<}\>\""}]}], ";", 
     RowBox[{"b", "=", 
      RowBox[{"StrToList", "[", "b", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"b", ",", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"StringFreeQ", "[", 
           RowBox[{"#", ",", "\"\<_\>\""}], "]"}]}], "&"}]}], "]"}]}], ";", 
     RowBox[{"b", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringTake", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{"StringPosition", "[", 
                 RowBox[{"#", ",", "\"\<_\>\""}], "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], "]"}], 
         "&"}], ",", "b"}], "]"}]}], ";", 
     RowBox[{"a", "<>", "\"\<[\>\"", "<>", 
      RowBox[{"StringTake", "[", 
       RowBox[{
        RowBox[{"ToString", "[", "b", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "]"}], "<>", "\"\<]\>\""}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ExprOfStr1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExprOfStr1", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"n_", "/;", 
     RowBox[{"IntegerQ", "[", "n", "]"}]}], ",", 
    RowBox[{"p_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "p"}], "]"}]}]}], "]"}], 
  ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"StringTake", "[", 
         RowBox[{"x", ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "n"}], "}"}]}], "]"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"StringLength", "[", "x", "]"}]}], ",", "k"}], "}"}], ",", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"n", "\[GreaterEqual]", "1"}], "&&", 
       RowBox[{"n", "\[LessEqual]", "b"}], "&&", 
       RowBox[{"!", 
        RowBox[{"SameQ", "[", 
         RowBox[{"a", ",", "$Failed"}], "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"p", "\[Equal]", 
             RowBox[{"-", "1"}]}], ",", 
            RowBox[{"n", "-", "1"}], ",", 
            RowBox[{"n", "+", "1"}]}], "]"}]}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"p", "\[Equal]", 
            RowBox[{"-", "1"}]}], ",", 
           RowBox[{"k", "\[GreaterEqual]", "1"}], ",", 
           RowBox[{"k", "\[LessEqual]", "b"}]}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"p", "\[Equal]", 
            RowBox[{"-", "1"}]}], ",", 
           RowBox[{"k", "--"}], ",", 
           RowBox[{"k", "++"}]}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"SyntaxQ", "[", "a", "]"}]}], ",", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"p", "\[Equal]", 
               RowBox[{"-", "1"}]}], ",", 
              RowBox[{"a", "=", 
               RowBox[{
                RowBox[{"StringTake", "[", 
                 RowBox[{"x", ",", 
                  RowBox[{"{", 
                   RowBox[{"k", ",", "k"}], "}"}]}], "]"}], "<>", "a"}]}], 
              ",", 
              RowBox[{"a", "=", 
               RowBox[{"a", "<>", 
                RowBox[{"StringTake", "[", 
                 RowBox[{"x", ",", 
                  RowBox[{"{", 
                   RowBox[{"k", ",", "k"}], "}"}]}], "]"}]}]}]}], "]"}], ";", 
            " ", 
            RowBox[{"Continue", "[", "]"}]}], ",", 
           RowBox[{"Return", "[", "a", "]"}]}], "]"}]}], "]"}], ";", " ", 
       "$Failed"}], ",", "$Failed"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ListableQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListableQ", "[", "x_", "]"}], ":=", 
  RowBox[{"MemberQ", "[", 
   RowBox[{
    RowBox[{"Quiet", "[", 
     RowBox[{"Check", "[", 
      RowBox[{
       RowBox[{"Attributes", "[", "x", "]"}], ",", 
       RowBox[{"{", "}"}]}], "]"}], "]"}], ",", "Listable"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`LevelsList`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LevelsList", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ListQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ToString", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "=", 
         RowBox[{"StringTake", "[", 
          RowBox[{"a", ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", 
             RowBox[{"-", "2"}]}], "}"}]}], "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"SyntaxQ", "[", "a", "]"}]}], ",", 
          RowBox[{"Break", "[", "]"}], ",", 
          RowBox[{"b", "++"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "Infinity"}], "}"}]}], "]"}], ";", 
     "b"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ListableC`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListableC", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"SystemQ", "[", "x", "]"}], "||", 
     RowBox[{"ProcQ", "[", "x", "]"}], "||", 
     RowBox[{"QFunction", "[", 
      RowBox[{"ToString", "[", "x", "]"}], "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Attributes", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{
           RowBox[{"Attributes", "[", "x", "]"}], ",", "Protected"}], "]"}], 
         ",", "\"\<Protected\>\"", ",", "\"\<Null\>\""}], "]"}]}]}], "}"}], 
    ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"a", ",", "Listable"}], "]"}], ",", "a", ",", 
      RowBox[{
       RowBox[{"Unprotect", "[", "x", "]"}], ";", 
       RowBox[{"SetAttributes", "[", 
        RowBox[{"x", ",", "Listable"}], "]"}], ";", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"b", "\[Equal]", "\"\<Protected\>\""}], ",", 
         RowBox[{"Protect", "[", "x", "]"}]}], "]"}], ";", " ", 
       RowBox[{"Attributes", "[", "x", "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ListAssignP`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListAssignP", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"ListQ", "[", "x", "]"}]}], ",", 
    RowBox[{"n_", "/;", 
     RowBox[{
      RowBox[{"PosIntQ", "[", "n", "]"}], "||", 
      RowBox[{"PosIntListQ", "[", "n", "]"}]}]}], ",", "y_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", "n", "}"}], "]"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", "y", "}"}], "]"}]}], ",", "c", ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}], ">", 
        RowBox[{"Length", "[", "x", "]"}]}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"Defer", "[", 
         RowBox[{"ListAssignP", "[", 
          RowBox[{"x", ",", "n", ",", "y"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"Min", "[", 
         RowBox[{
          RowBox[{"Length", "[", "a", "]"}], ",", 
          RowBox[{"Length", "[", "b", "]"}]}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", "c"}], ",", 
       RowBox[{
        RowBox[{"Quiet", "[", 
         RowBox[{"Check", "[", 
          RowBox[{
           RowBox[{"ToExpression", "[", 
            RowBox[{
             RowBox[{"ToString", "[", 
              RowBox[{"x", "[", 
               RowBox[{"[", 
                RowBox[{"a", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "]"}], "<>", 
             "\"\< = \>\"", "<>", 
             RowBox[{"ToString1", "[", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"ListQ", "[", "n", "]"}], ",", 
                RowBox[{"b", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], ",", "y"}], "]"}], "]"}]}], 
            "]"}], ",", "Null"}], "]"}], "]"}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"NestListQ1", "[", "x", "]"}], ",", 
       RowBox[{"x", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}], ",", "x"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ListNumericQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListNumericQ", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ListQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"SameQ", "[", 
   RowBox[{
    RowBox[{"DeleteDuplicates", "[", 
     RowBox[{"Map", "[", 
      RowBox[{"NumericQ", ",", 
       RowBox[{"N", "[", 
        RowBox[{"Flatten", "[", "x", "]"}], "]"}]}], "]"}], "]"}], ",", 
    RowBox[{"{", "True", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`IntegerListQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IntegerListQ", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"ListQ", "[", "x", "]"}], "&&", 
   RowBox[{
    RowBox[{"Length", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", "x", "]"}], ",", 
       RowBox[{
        RowBox[{"IntegerQ", "[", "#", "]"}], "&"}]}], "]"}], "]"}], 
    "\[Equal]", 
    RowBox[{"Length", "[", 
     RowBox[{"Flatten", "[", "x", "]"}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Split1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Split1", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"ListQ", "[", "x", "]"}]}], ",", "y_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", "d", ",", "h", ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"MemberQ3", "[", 
        RowBox[{"x", ",", "y"}], "]"}], "||", 
       RowBox[{"MemberQ", "[", 
        RowBox[{"x", ",", "y"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"ListQ", "[", "y", "]"}], ",", 
          RowBox[{"Sort", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Position", "[", 
                RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", "y"}], "]"}], 
            "]"}], "]"}], ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"Position", "[", 
            RowBox[{"x", ",", "y"}], "]"}], "]"}]}], "]"}]}], ";", 
       RowBox[{"h", "=", "a"}], ";", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"a", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "\[NotEqual]", "1"}], ",", 
         RowBox[{"PrependTo", "[", 
          RowBox[{"a", ",", "1"}], "]"}]}], "]"}], ";", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"a", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}], "\[NotEqual]", 
          RowBox[{"Length", "[", "x", "]"}]}], ",", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"a", ",", 
           RowBox[{"Length", "[", "x", "]"}]}], "]"}]}], "]"}], ";", " ", 
       RowBox[{"d", "=", 
        RowBox[{"Length", "[", "a", "]"}]}], ";", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"d", "-", "1"}]}], ",", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"c", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"a", "[", 
                RowBox[{"[", "k", "]"}], "]"}], ";;", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"k", "\[Equal]", 
                  RowBox[{"d", "-", "1"}]}], ",", 
                 RowBox[{"a", "[", 
                  RowBox[{"[", 
                   RowBox[{"k", "+", "1"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"a", "[", 
                   RowBox[{"[", 
                    RowBox[{"k", "+", "1"}], "]"}], "]"}], "-", "1"}]}], 
                "]"}]}], "]"}], "]"}]}], "]"}], ";", " ", 
          RowBox[{"k", "++"}]}]}], "]"}], ";", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"h", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}], "\[Equal]", 
          RowBox[{"Length", "[", "x", "]"}]}], ",", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"c", ",", 
           RowBox[{"{", 
            RowBox[{"x", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}], "}"}]}], "]"}]}], "]"}], ";", 
       " ", "c"}], ",", "x"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SplitList`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SplitList", "[", 
   RowBox[{
    RowBox[{"L_", "/;", 
     RowBox[{"ListQ", "[", "L", "]"}]}], ",", "x_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", "x", "}"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"Unique", "[", "\"\<$a$\>\"", "]"}], "]"}]}], ",", "c", ",", 
      "d", ",", "h"}], "}"}], ",", 
    RowBox[{
     RowBox[{"c", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ToString", "[", "#", "]"}], "<>", "b"}], "&"}], ",", "a"}],
        "]"}]}], ";", 
     RowBox[{"d", "=", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ToString", "[", "#", "]"}], "<>", "b"}], "&"}], ",", 
         "L"}], "]"}], "]"}]}], ";", " ", 
     RowBox[{"h", "=", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"StringSplit", "[", 
         RowBox[{"d", ",", "c"}], "]"}], ",", 
        RowBox[{
         RowBox[{"#", "\[NotEqual]", "\"\<\>\""}], "&"}]}], "]"}]}], ";", " ", 
     RowBox[{"h", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringReplace", "[", 
          RowBox[{"#", ",", 
           RowBox[{"b", "\[Rule]", "\"\<,\>\""}]}], "]"}], "&"}], ",", "h"}], 
       "]"}]}], ";", 
     RowBox[{"h", "=", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\"\<{\>\"", "<>", 
           RowBox[{"StringTake", "[", 
            RowBox[{"#", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"-", "2"}]}], "}"}]}], "]"}], "<>", "\"\<}\>\""}], 
          "&"}], ",", "h"}], "]"}], "]"}]}], ";", " ", 
     RowBox[{"Remove", "[", "b", "]"}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "h", "]"}], "\[Equal]", "1"}], ",", 
       RowBox[{"h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "h"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SplitList1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SplitList1", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"ListQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"ListQ", "[", "y", "]"}]}], ",", 
    RowBox[{"z_", "/;", 
     RowBox[{"ListQ", "[", "z", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"c", ",", 
      RowBox[{"a", "=", 
       RowBox[{"Map12", "[", 
        RowBox[{"ToString", ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"Unique", "[", "\"\<$\>\"", "]"}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"c", "=", 
      RowBox[{"Map11", "[", 
       RowBox[{"StringJoin", ",", "a", ",", "b"}], "]"}]}], ";", 
     RowBox[{"c", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"StringJoin", ",", "c"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"SubsString1", "[", 
       RowBox[{
        RowBox[{"c", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"c", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{"c", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{
         RowBox[{"StringQ", "[", "#", "]"}], "&"}], ",", "0"}], "]"}]}], ";", 
     " ", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"Map11", "[", 
       RowBox[{"StringSplit", ",", "c", ",", "b"}], "]"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Intersection1`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Intersection1", "[", 
   RowBox[{
    RowBox[{"x__", "/;", 
     RowBox[{
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ListQ", "[", "#", "]"}], "&"}], ",", 
         RowBox[{"{", "x", "}"}]}], "]"}], "]"}], "\[Equal]", 
      RowBox[{"{", "True", "}"}]}]}], ",", 
    RowBox[{"Ig_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"False", ",", "True"}], "}"}], ",", "Ig"}], "]"}]}]}], "]"}], 
  ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"b", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"{", "x", "}"}], "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"c", ",", 
         RowBox[{"Map", "[", 
          RowBox[{"StringQ", ",", 
           RowBox[{
            RowBox[{"{", "x", "}"}], "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "b"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Flatten", "[", "c", "]"}], "]"}], "\[NotEqual]", 
        RowBox[{"{", "True", "}"}]}], ",", "$Failed", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Ig", "\[Equal]", "False"}], ",", 
         RowBox[{"Intersection", "[", "x", "]"}], ",", 
         RowBox[{
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"d", ",", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"j", ",", "#", ",", 
                   RowBox[{"ToUpperCase", "[", 
                    RowBox[{"ToString", "[", "#", "]"}], "]"}]}], "}"}], 
                 "&"}], ",", 
                RowBox[{
                 RowBox[{"{", "x", "}"}], "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", "b"}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"c", "=", 
           RowBox[{"Map", "[", 
            RowBox[{"DeleteDuplicates", ",", 
             RowBox[{"Gather", "[", 
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"Join", "[", "d", "]"}], ",", "1"}], "]"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"#1", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", 
                 RowBox[{"#2", "[", 
                  RowBox[{"[", "3", "]"}], "]"}]}], "&"}]}], "]"}]}], "]"}]}],
           ";", " ", 
          RowBox[{"c", "=", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"Select", "[", 
              RowBox[{"c", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "#", "]"}], "\[GreaterEqual]", "b"}], 
                "&"}]}], "]"}], ",", "1"}], "]"}]}], ";", " ", 
          RowBox[{"c", "=", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"DeleteDuplicates", "[", 
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", "c"}], "]"}], 
               "]"}], "\[NotEqual]", 
              RowBox[{"Range", "[", 
               RowBox[{"1", ",", "b"}], "]"}]}], ",", 
             RowBox[{"{", "}"}], ",", 
             RowBox[{"DeleteDuplicates", "[", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "&"}], ",", "c"}], "]"}], 
              "]"}]}], "]"}]}]}]}], "]"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`IntersectStrings`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IntersectStrings", "[", 
   RowBox[{
    RowBox[{"x__", "/;", 
     RowBox[{
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"StringQ", ",", 
          RowBox[{"{", "x", "}"}]}], "]"}], "]"}], "]"}], "\[Equal]", 
      RowBox[{"{", "True", "}"}]}]}], ",", 
    RowBox[{"Ig_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"False", ",", "True"}], "}"}], ",", "Ig"}], "]"}]}]}], "]"}], 
  ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"{", "x", "}"}], "]"}], "\[Equal]", "1"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "x"}], "}"}], ",", 
         RowBox[{"{", "x", "}"}]}], "]"}]}], ",", "c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", "h"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "==", "\"\<\>\""}], ",", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{
       RowBox[{"c", "=", 
        RowBox[{"Length", "[", "b", "]"}]}], ";", 
       RowBox[{"h", "=", 
        RowBox[{
         RowBox[{"Subsets", "[", 
          RowBox[{"b", ",", "2"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"c", "+", "2"}], ";;", 
           RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", " ", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ClearAll", "[", "p", "]"}], ",", 
           RowBox[{"LongestCommonSubsequence1", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"h", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"h", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "Ig", ",", "p"}], "]"}], 
           ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"a", ",", "p"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", 
           RowBox[{"Length", "[", "h", "]"}]}], "}"}]}], "]"}], ";", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"h", "=", 
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"ToExpression", "[", 
          RowBox[{"\"\<Intersection1[\>\"", "<>", 
           RowBox[{"StringTake", "[", 
            RowBox[{
             RowBox[{"ToString1", "[", "a", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", 
               RowBox[{"-", "2"}]}], "}"}]}], "]"}], "<>", "\"\<,\>\"", "<>", 
           " ", 
           RowBox[{"ToString", "[", "Ig", "]"}], "<>", "\"\<]\>\""}], "]"}], 
         "]"}]}], ";", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"Sort", ",", 
          RowBox[{"Gather", "[", 
           RowBox[{"h", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"StringLength", "[", "#1", "]"}], "==", 
              RowBox[{"StringLength", "[", "#2", "]"}]}], "&"}]}], "]"}]}], 
         "]"}], "]"}]}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ElemOnLevels`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ElemOnLevels", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ListQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", 
      RowBox[{"p", "=", "0"}], ",", "k", ",", 
      RowBox[{"j", "=", "1"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"NestListQ1", "[", "x", "]"}]}], ",", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "x"}], "}"}], "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "c", ",", "d"}], "}"}], "=", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"{", "}"}], ",", 
          RowBox[{"{", "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"NestListQ1", "[", "a", "]"}], ",", 
         RowBox[{
          RowBox[{"b", "=", 
           RowBox[{"{", 
            RowBox[{"p", "++"}], "}"}]}], ";", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"k", "=", "1"}], ",", 
            RowBox[{"k", "\[LessEqual]", 
             RowBox[{"Length", "[", "a", "]"}]}], ",", 
            RowBox[{"k", "++"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"ListQ", "[", 
                RowBox[{"a", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "]"}]}], ",", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"b", ",", 
                 RowBox[{"a", "[", 
                  RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ";", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"c", ",", "k"}], "]"}]}]}], "]"}]}], "]"}], ";", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"d", ",", "b"}], "]"}], ";", " ", 
          RowBox[{"a", "=", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"Delete", "[", 
              RowBox[{"a", ",", 
               RowBox[{"Map", "[", 
                RowBox[{"List", ",", "c"}], "]"}]}], "]"}], ",", "1"}], 
            "]"}]}], ";", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"b", ",", "c"}], "}"}], "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "}"}], ",", 
             RowBox[{"{", "}"}]}], "}"}]}], ";", 
          RowBox[{"j", "++"}]}]}], "]"}], ";", " ", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"d", ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"p", "++"}], ",", "a"}], "}"}], "]"}]}], "]"}]}]}], 
     "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ElemsOnLevelList`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ElemsOnLevelList", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ListQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"LevelsOfList", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Flatten", "[", "x", "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", "t"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"c", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"[", 
             RowBox[{"t", "=", 
              RowBox[{"k", "++"}]}], "]"}], "]"}], ",", 
           RowBox[{"b", "[", 
            RowBox[{"[", "t", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"Length", "[", "a", "]"}], "}"}]}], "]"}], ";", " ", 
     RowBox[{"c", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"Flatten", ",", 
        RowBox[{"Gather", "[", 
         RowBox[{"c", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#1", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
            RowBox[{"#2", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}], "]"}]}], ";",
      " ", 
     RowBox[{"k", "=", "1"}], ";", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"d", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"c", "[", 
             RowBox[{"[", 
              RowBox[{"t", "=", 
               RowBox[{"k", "++"}]}], "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"c", "[", 
              RowBox[{"[", "t", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"EvenQ", "[", 
               RowBox[{
                RowBox[{"Flatten", "[", 
                 RowBox[{"Position", "[", 
                  RowBox[{
                   RowBox[{"c", "[", 
                    RowBox[{"[", "t", "]"}], "]"}], ",", "#"}], "]"}], "]"}], 
                "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "&"}]}], "]"}]}], 
          "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"Length", "[", "c", "]"}], "}"}]}], "]"}], ";", " ", "d"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`LevelsOfList`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LevelsOfList", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ListQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "L", ",", "L1", ",", "t", ",", "p", ",", "k", ",", "h", ",", "g"}], 
     "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[Equal]", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"NestListQ1", "[", "x", "]"}]}], ",", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "^", "0"}], "&"}], ",", 
          RowBox[{"Range", "[", 
           RowBox[{"1", ",", 
            RowBox[{"Length", "[", "x", "]"}]}], "]"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"FullNestListQ", "[", "x", "]"}], ",", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "^", "0"}], "&"}], ",", 
            RowBox[{"Range", "[", 
             RowBox[{"1", ",", 
              RowBox[{"Length", "[", 
               RowBox[{"Flatten", "[", "x", "]"}], "]"}]}], "]"}]}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"p", ",", "h", ",", "L", ",", "L1", ",", "g"}], "}"}], 
            "=", 
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"FromCharacterCode", "[", "2", "]"}], ",", "x", ",", 
              RowBox[{"{", "}"}], ",", 
              RowBox[{"{", "}"}]}], "}"}]}], ";", 
           RowBox[{"ClearAll", "[", "t", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"k", "=", "1"}], ",", 
                RowBox[{"k", "<=", 
                 RowBox[{"Length", "[", "L", "]"}]}], ",", 
                RowBox[{"k", "++"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"!", 
                    RowBox[{"ListQ", "[", 
                    RowBox[{"L", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "]"}]}], "&&", 
                   RowBox[{"!", 
                    RowBox[{"SuffPref", "[", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"L", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "]"}], ",", "h", ",", 
                    "1"}], "]"}]}]}], ",", 
                  RowBox[{
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"g", ",", "0"}], "]"}], ";", 
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"L1", ",", 
                    RowBox[{"h", "<>", 
                    RowBox[{"ToString", "[", "p", "]"}]}]}], "]"}]}], ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"ListQ", "[", 
                    RowBox[{"L", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "]"}]}], "&&", 
                    RowBox[{"!", 
                    RowBox[{"SuffPref", "[", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"L", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "]"}], ",", "h", ",", 
                    "1"}], "]"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"g", ",", "0"}], "]"}], ";", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"L1", ",", 
                    RowBox[{"L", "[", 
                    RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"g", ",", "1"}], "]"}], ";", " ", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"L1", ",", 
                    RowBox[{"L", "[", 
                    RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}]}], "]"}]}], 
                 "]"}]}], "]"}], ";", "\[IndentingNewLine]", " ", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"!", 
                 RowBox[{"MemberQ", "[", 
                  RowBox[{"g", ",", "1"}], "]"}]}], ",", "L1", ",", 
                RowBox[{
                 RowBox[{"L", "=", 
                  RowBox[{"Flatten", "[", 
                   RowBox[{"L1", ",", "1"}], "]"}]}], ";", " ", 
                 RowBox[{"L1", "=", 
                  RowBox[{"{", "}"}]}], ";", " ", 
                 RowBox[{"g", "=", 
                  RowBox[{"{", "}"}]}], ";", " ", 
                 RowBox[{"p", "++"}]}]}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Levels", "[", 
                RowBox[{"x", ",", "t"}], "]"}], ";", " ", "t"}], "}"}]}], 
            "]"}], ";", 
           RowBox[{"ToExpression", "[", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"StringDrop", "[", 
                RowBox[{"#", ",", "1"}], "]"}], "&"}], ",", "L"}], "]"}], 
            "]"}]}]}], "]"}]}], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ListExprHeadQ`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListExprHeadQ", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"ListQ", "[", "x", "]"}]}], ",", "h_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Length", "[", "x", "]"}], "\[Equal]", 
   RowBox[{"Length", "[", 
    RowBox[{"Select", "[", 
     RowBox[{"x", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Head", "[", "#", "]"}], "===", "h"}], "&"}]}], "]"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`$ProcType`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"$ProcType", ":=", 
  RowBox[{"ToString", "[", 
   RowBox[{
    RowBox[{"Stack", "[", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SubsStrLim`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SubsStrLim", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{"StringQ", "[", "y", "]"}], "&&", 
      RowBox[{
       RowBox[{"StringLength", "[", "y", "]"}], "\[Equal]", "1"}]}]}], ",", 
    RowBox[{"z_", "/;", 
     RowBox[{
      RowBox[{"StringQ", "[", "z", "]"}], "&&", 
      RowBox[{
       RowBox[{"StringLength", "[", "z", "]"}], "\[Equal]", "1"}]}]}]}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"b", "=", 
       RowBox[{"x", "<>", 
        RowBox[{"FromCharacterCode", "[", "6", "]"}]}]}], ",", 
      RowBox[{"c", "=", "y"}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", "p", ",", "j", ",", 
      RowBox[{"k", "=", "1"}], ",", "n", ",", "h"}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"!", 
         RowBox[{"StringFreeQ", "[", 
          RowBox[{"b", ",", "y"}], "]"}]}], "&&", 
        RowBox[{"!", 
         RowBox[{"StringFreeQ", "[", 
          RowBox[{"b", ",", "z"}], "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"a", "=", 
         RowBox[{"StringPosition", "[", 
          RowBox[{"b", ",", "y"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"n", "=", 
         RowBox[{"Length", "[", "a", "]"}]}], ";", 
        RowBox[{"For", "[", 
         RowBox[{"k", ",", 
          RowBox[{"k", "\[LessEqual]", "n"}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{
           RowBox[{"p", "=", 
            RowBox[{
             RowBox[{"a", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", 
           RowBox[{"j", "=", "p"}], ";", " ", "\[IndentingNewLine]", 
           RowBox[{"While", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"h", "=", 
               RowBox[{"Quiet", "[", 
                RowBox[{"StringTake", "[", 
                 RowBox[{"b", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"j", "+", "1"}], ",", 
                    RowBox[{"j", "+", "1"}]}], "}"}]}], "]"}], "]"}]}], ";", 
              RowBox[{"h", "\[NotEqual]", "z"}]}], ",", 
             RowBox[{
              RowBox[{"c", "=", 
               RowBox[{"c", "<>", "h"}]}], ";", 
              RowBox[{"j", "++"}]}]}], "]"}], ";", 
           RowBox[{"c", "=", 
            RowBox[{"c", "<>", "z"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"StringFreeQ", "[", 
              RowBox[{
               RowBox[{"StringTake", "[", 
                RowBox[{"c", ",", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", 
                   RowBox[{"-", "2"}]}], "}"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"y", ",", "z"}], "}"}]}], "]"}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"d", ",", "c"}], "]"}]}], "]"}], ";", 
           RowBox[{"c", "=", "y"}]}]}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Select", "[", 
      RowBox[{"d", ",", 
       RowBox[{
        RowBox[{"StringFreeQ", "[", 
         RowBox[{"#", ",", 
          RowBox[{"FromCharacterCode", "[", "6", "]"}]}], "]"}], "&"}]}], 
      "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StringDependAllQ`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StringDependAllQ", "[", 
   RowBox[{
    RowBox[{"s_", "/;", 
     RowBox[{"StringQ", "[", "s", "]"}]}], ",", 
    RowBox[{"a_", "/;", 
     RowBox[{
      RowBox[{"StringQ", "[", "a", "]"}], "||", 
      RowBox[{
       RowBox[{"ListQ", "[", "a", "]"}], "&&", 
       RowBox[{"!", 
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{"StringQ", ",", "a"}], "]"}], ",", "False"}], 
         "]"}]}]}]}]}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"StringFreeQ", "[", 
        RowBox[{"s", ",", "#"}], "]"}], "&"}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"StringQ", "[", "a", "]"}], ",", 
        RowBox[{"{", "a", "}"}], ",", "a"}], "]"}]}], "]"}], "]"}], 
   "\[Equal]", 
   RowBox[{"{", "False", "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SubsStrLim1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SubsStrLim1", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{"StringQ", "[", "y", "]"}], "&&", 
      RowBox[{
       RowBox[{"StringLength", "[", "y", "]"}], "\[Equal]", "1"}]}]}], ",", 
    RowBox[{"z_", "/;", 
     RowBox[{
      RowBox[{"StringQ", "[", "z", "]"}], "&&", 
      RowBox[{
       RowBox[{"StringLength", "[", "z", "]"}], "\[Equal]", "1"}]}]}]}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"b", "=", 
       RowBox[{"x", "<>", 
        RowBox[{"FromCharacterCode", "[", "6", "]"}]}]}], ",", 
      RowBox[{"c", "=", "y"}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", "p", ",", "j", ",", 
      RowBox[{"k", "=", "1"}], ",", "n", ",", "m", ",", "h"}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"!", 
         RowBox[{"StringFreeQ", "[", 
          RowBox[{"b", ",", "y"}], "]"}]}], "&&", 
        RowBox[{"!", 
         RowBox[{"StringFreeQ", "[", 
          RowBox[{"b", ",", "z"}], "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"a", "=", 
         RowBox[{"StringPosition", "[", 
          RowBox[{"b", ",", "y"}], "]"}]}], ";", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"n", ",", "m"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Length", "[", "a", "]"}], ",", 
           RowBox[{"StringLength", "[", "x", "]"}]}], "}"}]}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{"k", ",", 
          RowBox[{"k", "\[LessEqual]", "n"}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{
           RowBox[{"p", "=", 
            RowBox[{
             RowBox[{"a", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", " ", 
           "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"j", "=", 
              RowBox[{"p", "+", "1"}]}], ",", 
             RowBox[{"j", "\[LessEqual]", "m"}], ",", 
             RowBox[{"j", "++"}], ",", " ", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"h", "=", 
               RowBox[{"StringTake", "[", 
                RowBox[{"b", ",", 
                 RowBox[{"{", 
                  RowBox[{"j", ",", "j"}], "}"}]}], "]"}]}], ";", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"h", "\[NotEqual]", "z"}], ",", 
                RowBox[{"c", "=", 
                 RowBox[{"c", "<>", "h"}]}], ",", 
                RowBox[{
                 RowBox[{"c", "=", 
                  RowBox[{"c", "<>", "z"}]}], ";", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{"DeleteDuplicates", "[", 
                    RowBox[{"Map10", "[", 
                    RowBox[{"StringCount", ",", "c", ",", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", "z"}], "}"}]}], "]"}], "]"}], "]"}], 
                    "\[Equal]", "1"}], ",", 
                   RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"d", ",", "c"}], "]"}], ";", 
                    RowBox[{"c", "=", "y"}], ";", 
                    RowBox[{"Break", "[", "]"}]}], ",", 
                   RowBox[{"Continue", "[", "]"}]}], "]"}]}]}], "]"}]}]}], 
            "]"}]}]}], "]"}]}]}], "]"}], ";", "d"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`PosIntQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PosIntQ", "[", "n_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"IntegerQ", "[", "n", "]"}], "&&", 
     RowBox[{"n", ">", "0"}]}], ",", "True", ",", "False"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ShortPureFuncQ`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ShortPureFuncQ", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"PureFuncQ", "[", 
    RowBox[{"ToExpression", "[", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"StringQ", "[", "x", "]"}], ",", "x", ",", 
       RowBox[{"ToString", "[", "x", "]"}]}], "]"}], "]"}], "]"}], "&&", 
   RowBox[{
    RowBox[{"StringTake", "[", 
     RowBox[{
      RowBox[{"StringTrim", "[", 
       RowBox[{"ToString", "[", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"StringQ", "[", "x", "]"}], ",", 
          RowBox[{"ToExpression", "[", "x", "]"}], ",", 
          RowBox[{"ToString", "[", "x", "]"}]}], "]"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", 
        RowBox[{"-", "1"}]}], "}"}]}], "]"}], "\[Equal]", 
    "\"\<&\>\""}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`PosIntListQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PosIntListQ", "[", 
   RowBox[{"L_", "/;", 
    RowBox[{"ListQ", "[", "L", "]"}]}], "]"}], ":=", 
  RowBox[{"SameQ", "[", 
   RowBox[{
    RowBox[{"DeleteDuplicates", "[", 
     RowBox[{"Map", "[", 
      RowBox[{"PosIntQ", ",", "L"}], "]"}], "]"}], ",", 
    RowBox[{"{", "True", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ExtProgExe`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExtProgExe", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"StringQ", "[", "y", "]"}]}], ",", "h___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "\"\<$TempFile$\>\""}], ",", 
      RowBox[{"b", "=", 
       RowBox[{
        RowBox[{"Directory", "[", "]"}], "<>", "\"\<\\\\\>\"", "<>", "x"}]}], 
      ",", "c"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Empty", "::", "datafile"}], "=", 
      "\"\<Datafile $TempFile$ is empty; the datafile had been \
deleted.\>\""}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"FileExistsQ", "[", "b", "]"}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"Run", "[", 
         RowBox[{
         "x", ",", "\"\< \>\"", ",", "y", ",", "\"\< > \>\"", ",", "a"}], 
         "]"}]}], ",", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"LoadExtProg", "[", "x", "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"c", "===", "$Failed"}], ",", 
          RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", " ", 
        RowBox[{"c", "=", 
         RowBox[{"Run", "[", 
          RowBox[{
          "x", ",", "\"\< \>\"", ",", "y", ",", "\"\< > \>\"", ",", "a"}], 
          "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", "h", "}"}], "\[NotEqual]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"DeleteFile", "[", "b", "]"}]}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"c", "\[NotEqual]", "0"}], ",", 
       RowBox[{
        RowBox[{"DeleteFile", "[", "a", "]"}], ";", "$Failed"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"EmptyFileQ", "[", "a", "]"}], ",", 
         RowBox[{
          RowBox[{"DeleteFile", "[", "a", "]"}], ";", " ", 
          RowBox[{"Message", "[", 
           RowBox[{"Empty", "::", "datafile"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Directory", "[", "]"}], "<>", "\"\<\\\\\>\"", "<>", 
          "a"}]}], "]"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`MfilePackageQ`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MfilePackageQ", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
     RowBox[{
      RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", "\"\<m\>\""}]}], 
    ",", 
    RowBox[{"StringDependAllQ", "[", 
     RowBox[{
      RowBox[{"ReadFullFile", "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<(* ::Package:: *)\>\"", ",", "\"\<(* ::Input:: *)\>\"", ",", 
        "\"\<::usage\>\"", ",", "\"\<BeginPackage[\\\"\>\"", ",", 
        "\"\<EndPackage[]\>\""}], "}"}]}], "]"}], ",", "False"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`PackageUsages`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PackageUsages", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
     RowBox[{
      RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", "\"\<m\>\""}]}]}],
    "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"StringSplit", "[", 
        RowBox[{
         RowBox[{"ReadString", "[", "x", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<(**)\>\"", ",", "\"\<*)\\r\\n(*\>\""}], "}"}]}], 
        "]"}]}], ",", "b", ",", "c", ",", "d", ",", "f"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"a", ",", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"StringFreeQ", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<::usage=\>\"", ",", "\"\<::usage = \>\""}], "}"}]}],
            "]"}]}], "&"}]}], "]"}]}], ";", " ", 
     RowBox[{"c", "=", 
      RowBox[{"FileNameSplit", "[", "x", "]"}]}], ";", 
     RowBox[{"d", "=", 
      RowBox[{
       RowBox[{"FileBaseName", "[", 
        RowBox[{"c", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}], "]"}], "<>", 
       "\"\<_Usages.txt\>\""}]}], ";", 
     RowBox[{"f", "=", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"c", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", 
            RowBox[{"-", "2"}]}], "]"}], "]"}], ",", 
         RowBox[{"{", "d", "}"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"WriteString", "[", 
           RowBox[{"f", ",", 
            RowBox[{"StringReplace", "[", 
             RowBox[{"#", ",", 
              RowBox[{"\"\<::usage\>\"", "->", "\"\<\>\""}]}], "]"}]}], "]"}],
           ",", 
          RowBox[{"WriteString", "[", 
           RowBox[{"f", ",", "\"\<\\n\\n\>\""}], "]"}]}], "}"}], "&"}], ",", 
       "b"}], "]"}], ";", " ", 
     RowBox[{"Close", "[", "f", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`CountOptions`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CountOptions", "[", "h___", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"SystemOptions", "[", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", "d", ",", 
      RowBox[{"c", "=", "1"}], ",", "k"}], "}"}], ",", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"c", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{
        RowBox[{"d", "=", 
         RowBox[{"a", "[", 
          RowBox[{"[", "c", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"b", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"ListQ", "[", 
             RowBox[{"Part", "[", 
              RowBox[{"d", ",", "2"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Part", "[", 
               RowBox[{"d", ",", "1"}], "]"}], ",", 
              RowBox[{"Length", "[", 
               RowBox[{"Part", "[", 
                RowBox[{"d", ",", "2"}], "]"}], "]"}]}], "}"}], ",", "d"}], 
           "]"}]}], "]"}], ";", 
        RowBox[{"c", "++"}]}]}], "]"}], ";", " ", 
     RowBox[{"b", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Gather", "[", 
         RowBox[{"b", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Head", "[", "#1", "]"}], "\[Equal]", 
            RowBox[{"Head", "[", "#2", "]"}]}], "&"}]}], "]"}], ",", "1"}], 
       "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "h", "}"}], "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", "b", ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"HowAct", "[", "h", "]"}], ",", 
          RowBox[{"Defer", "[", 
           RowBox[{"CountOptions", "[", "h", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"d", "=", "0"}], ";", " ", 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"ListQ", "[", 
                RowBox[{"b", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "]"}], ",", 
               RowBox[{"d", "=", 
                RowBox[{"d", "+", 
                 RowBox[{
                  RowBox[{"b", "[", 
                   RowBox[{"[", "k", "]"}], "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
               RowBox[{"d", "=", 
                RowBox[{"d", "+", "1"}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", 
               RowBox[{"Length", "[", "b", "]"}]}], "}"}]}], "]"}]}]}], "]"}],
         ";", " ", 
        RowBox[{
         RowBox[{"{", "h", "}"}], "=", 
         RowBox[{"{", "d", "}"}]}], ";", " ", "b"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`RepStandFunc`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RepStandFunc", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"SymbolQ", "[", "y", "]"}]}], ",", "z__"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Unique", "[", "y", "]"}]}], ",", "b"}], "}"}], ",", " ", 
    RowBox[{
     RowBox[{"ToExpression", "[", 
      RowBox[{"StringReplace", "[", 
       RowBox[{"x", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"ToString", "[", "y", "]"}], "<>", "\"\<[\>\""}], "\[Rule]", 
         RowBox[{
          RowBox[{"ToString", "[", "a", "]"}], "<>", "\"\<[\>\""}]}], ",", 
        "1"}], "]"}], "]"}], ";", " ", 
     RowBox[{"b", "=", 
      RowBox[{"a", "[", "z", "]"}]}], ";", 
     RowBox[{"Remove", "[", "a", "]"}], ";", " ", "b"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SysUserSoft`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SysUserSoft", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b", ",", 
      RowBox[{"s", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"u", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"h", "=", 
       RowBox[{"Args", "[", 
        RowBox[{"x", ",", "6"}], "]"}]}], ",", "c", ",", 
      RowBox[{"a", "=", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"QFunction", "[", "x", "]"}], ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"LocalsGlobals1", "[", "x", "]"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"ExtrVarsOfStr", "[", 
       RowBox[{"a", ",", "2", ",", " ", "90"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"b", ",", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ToString", "[", "x", "]"}], ",", "h", ",", 
               "\"\<True\>\"", ",", "\"\<False\>\"", ",", "\"\<$Failed\>\"", 
               ",", 
               RowBox[{"Quiet", "[", 
                RowBox[{"d", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
               RowBox[{"Quiet", "[", 
                RowBox[{"d", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
            "#"}], "]"}]}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"Quiet", "[", 
           RowBox[{"SystemQ", "[", "#", "]"}], "]"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"s", ",", "#"}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"BlockFuncModQ", "[", "#", "]"}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"u", ",", "#"}], "]"}]}], "]"}]}], "]"}], "&"}], ",", 
       "c"}], "]"}], ";", " ", 
     RowBox[{"c", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"Gather", ",", 
        RowBox[{"{", 
         RowBox[{"s", ",", "u"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Flatten", "[", "#", "]"}], "&"}], ",", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#", ",", 
               RowBox[{"Length", "[", "#", "]"}]}], "}"}], "&"}], ",", 
            RowBox[{"c", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Flatten", "[", "#", "]"}], "&"}], ",", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#", ",", 
               RowBox[{"Length", "[", "#", "]"}]}], "}"}], "&"}], ",", 
            RowBox[{"c", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "]"}]}], "}"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"DeleteDuplicates", "[", "#", "]"}], "&"}], ",", 
          RowBox[{"c", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"DeleteDuplicates", "[", "#", "]"}], "&"}], ",", 
          RowBox[{"c", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", "c", "]"}], "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"{", "}"}], ",", "c"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SetAttributes1`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes1", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"ToExpression", "[", 
   RowBox[{"\"\<SetAttributes[SetAttributes, Listable]; SetAttributes[\>\"", "<>", 
    RowBox[{"ToString", "[", "x", "]"}], "<>", "\"\<, \>\"", "<>", 
    RowBox[{"ToString", "[", "y", "]"}], "<>", 
    "\"\<]; ClearAttributes[SetAttributes, Listable]\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`RemovePackage`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RemovePackage", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ContextQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"CNames", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"ClearAttributes", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"$Packages", ",", "Contexts"}], "}"}], ",", "Protected"}], 
        "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Quiet", "[", 
      RowBox[{"Map", "[", 
       RowBox[{"Remove", ",", "a"}], "]"}], "]"}], ";", " ", 
     RowBox[{"$Packages", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"$Packages", ",", 
        RowBox[{
         RowBox[{"StringFreeQ", "[", 
          RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "]"}]}], ";", 
     RowBox[{
      RowBox[{"Contexts", "[", "]"}], "=", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Contexts", "[", "]"}], ",", 
        RowBox[{
         RowBox[{"StringFreeQ", "[", 
          RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "]"}]}], ";", " ", 
     RowBox[{"SetAttributes", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"$Packages", ",", "Contexts"}], "}"}], ",", "Protected"}], 
      "]"}], ";", " ", 
     RowBox[{"$ContextPath", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"$ContextPath", ",", 
        RowBox[{
         RowBox[{"StringFreeQ", "[", 
          RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "]"}]}], ";"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`RemoveContext`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RemoveContext", "[", 
   RowBox[{
    RowBox[{"at_", "/;", 
     RowBox[{"ContextQ", "[", "at", "]"}]}], ",", "x__"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", "}"}]}], ",", "b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"ToString", ",", 
         RowBox[{"{", "x", "}"}]}], "]"}]}], ",", 
      RowBox[{"f", "=", "\"\<$Art27$Kr20$\>\""}], ",", "Attr"}], "}"}], ",", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{"Intersection", "[", 
       RowBox[{
        RowBox[{"CNames", "[", "at", "]"}], ",", "d"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"PureDefinition", ",", "d"}], "]"}], "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"b", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", "$Failed", ",", 
       RowBox[{
        RowBox[{"Attr", ":=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"#", ",", 
              RowBox[{"Attributes", "[", "#", "]"}]}], "}"}], "&"}], ",", 
           "d"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"a", ",", 
            RowBox[{"StringReplace", "[", 
             RowBox[{
              RowBox[{"b", "[", 
               RowBox[{"[", "k", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"at", "<>", 
                RowBox[{"d", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "<>", "\"\<`\>\""}], "->", 
               "\"\<\>\""}]}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", 
            RowBox[{"Length", "[", "d", "]"}]}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Write", "[", 
         RowBox[{"f", ",", "a"}], "]"}], ";", 
        RowBox[{"Close", "[", "f", "]"}], ";", " ", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"c", ",", 
            RowBox[{"at", "<>", 
             RowBox[{"d", "[", 
              RowBox[{"[", "k", "]"}], "]"}]}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", 
            RowBox[{"Length", "[", "d", "]"}]}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"c", "=", 
         RowBox[{"Flatten", "[", "c", "]"}]}], ";", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"ClearAttributes", "[", 
              RowBox[{"#", ",", "Protected"}], "]"}], ",", 
             RowBox[{"Remove", "[", "#", "]"}]}], "}"}], "&"}], ",", "d"}], 
         "]"}], ";", " ", 
        RowBox[{"Map", "[", 
         RowBox[{"ToExpression", ",", 
          RowBox[{"Get", "[", "f", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"DeleteFile", "[", "f", "]"}], ";", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ToExpression", "[", 
            RowBox[{"\"\<SetAttributes[\>\"", "<>", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "<>", "\"\<,\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<]\>\""}], 
            "]"}], "&"}], ",", "Attr"}], "]"}], ";"}]}], " ", "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DeletePackage`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DeletePackage", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "a", "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"MemberQ", "[", 
        RowBox[{"$Packages", ",", "x"}], "]"}]}], ",", "$Failed", ",", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{"Names", "[", 
         RowBox[{"x", "<>", "\"\<*\>\""}], "]"}]}], ";", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ClearAttributes", "[", 
           RowBox[{"#", ",", "Protected"}], "]"}], "&"}], ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"\"\<$Packages\>\"", ",", "\"\<Contexts\>\"", ",", "a"}], 
           "}"}], "]"}]}], "]"}], ";", " ", 
       RowBox[{"Quiet", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"Remove", ",", "a"}], "]"}], "]"}], ";", 
       RowBox[{"$Packages", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"$Packages", ",", 
          RowBox[{
           RowBox[{"#", "\[NotEqual]", "x"}], "&"}]}], "]"}]}], ";", " ", 
       RowBox[{"$ContextPath", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"$ContextPath", ",", 
          RowBox[{
           RowBox[{"#", "\[NotEqual]", "x"}], "&"}]}], "]"}]}], ";", " ", 
       RowBox[{
        RowBox[{"Contexts", "[", "]"}], "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Contexts", "[", "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"StringCount", "[", 
             RowBox[{"#", ",", "x"}], "]"}], "\[Equal]", "0"}], "&"}]}], 
         "]"}]}], ";", " ", 
       RowBox[{"Quiet", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"Remove", ",", 
          RowBox[{"Names", "[", 
           RowBox[{"x", "<>", "\"\<*\>\""}], "]"}]}], "]"}], "]"}], ";", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"SetAttributes", "[", 
           RowBox[{"#", ",", "Protected"}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<$Packages\>\"", ",", "\"\<Contexts\>\""}], "}"}]}], 
        "]"}], ";"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DelOfPackage`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DelOfPackage", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"ContextQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{"SymbolQ", "[", "y", "]"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ListQ", "[", "y", "]"}], "&&", 
        RowBox[{
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"Map", "[", 
           RowBox[{"SymbolQ", ",", "y"}], "]"}], "]"}], "\[Equal]", 
         RowBox[{"{", "True", "}"}]}]}], ")"}]}]}], ",", "z___"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"MemberQ", "[", 
        RowBox[{"$Packages", ",", "x"}], "]"}]}], ",", "$Failed", ",", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Set", "[", 
          RowBox[{"b", ",", 
           RowBox[{"Intersection", "[", 
            RowBox[{
             RowBox[{"Names", "[", 
              RowBox[{"x", "<>", "\"\<*\>\""}], "]"}], ",", 
             RowBox[{"a", "=", 
              RowBox[{"Map", "[", 
               RowBox[{"ToString", ",", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", "y", "}"}], "]"}]}], "]"}]}]}], "]"}]}], "]"}], 
         "\[Equal]", 
         RowBox[{"{", "}"}]}], ",", "$Failed", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", "z", "}"}], "\[NotEqual]", 
             RowBox[{"{", "}"}]}], "&&", 
            RowBox[{"StringQ", "[", "z", "]"}], "&&", 
            RowBox[{"SuffPref", "[", 
             RowBox[{"z", ",", "\"\<.mx\>\"", ",", "2"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"ToExpression", "[", 
             RowBox[{"\"\<DumpSave[\>\"", "<>", 
              RowBox[{"ToString1", "[", "z", "]"}], "<>", "\"\<,\>\"", "<>", 
              RowBox[{"ToString", "[", "b", "]"}], "<>", "\"\<]\>\""}], "]"}],
             ";", 
            RowBox[{"c", "=", 
             RowBox[{"{", 
              RowBox[{"z", ",", "b"}], "}"}]}]}], ",", 
           RowBox[{"c", "=", "b"}]}], "]"}], ";", 
         RowBox[{"ClearAttributes", "[", 
          RowBox[{"b", ",", "Protected"}], "]"}], ";", 
         RowBox[{"Map", "[", 
          RowBox[{"Remove", ",", "b"}], "]"}], ";", "c"}]}], "]"}]}], "]"}]}],
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ContMxFile`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContMxFile", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
       "\"\<mx\>\""}]}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ReadFullFile", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", "\"\<CONT\>\""}], ",", 
      RowBox[{"c", "=", "\"\<ENDCONT\>\""}], ",", 
      RowBox[{"d", "=", "\"\<`\>\""}], ",", "h", ",", "t"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"h", "=", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"StringPosition", "[", 
         RowBox[{"a", ",", 
          RowBox[{"{", 
           RowBox[{"b", ",", "c"}], "}"}]}], "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "4"}], "]"}], "]"}]}], ";", 
     RowBox[{"h", "=", 
      RowBox[{"StringReplace", "[", 
       RowBox[{
        RowBox[{"StringTake", "[", 
         RowBox[{"a", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"h", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ",", 
            RowBox[{
             RowBox[{"h", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "-", "2"}]}], "}"}]}], "]"}], 
        ",", 
        RowBox[{"\"\<\.10\>\"", "->", "\"\<\>\""}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"h", "=", 
      RowBox[{
       RowBox[{"StringJoin", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Characters", "[", "h", "]"}], ",", 
          RowBox[{
           RowBox[{"SymbolQ", "[", "#", "]"}], "&"}]}], "]"}], "]"}], "<>", 
       "d"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"h", "\[Equal]", "\"\<\>\""}], ",", 
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"$Packages", ",", "h"}], "]"}], "&&", 
          RowBox[{
           RowBox[{"{", "y", "}"}], "\[NotEqual]", 
           RowBox[{"{", "}"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"h", ",", 
           RowBox[{"CNames", "[", "h", "]"}]}], "}"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"!", 
             RowBox[{"MemberQ", "[", 
              RowBox[{"$Packages", ",", "h"}], "]"}]}], "&&", 
            RowBox[{
             RowBox[{"{", "y", "}"}], "\[NotEqual]", 
             RowBox[{"{", "}"}]}]}], ",", 
           RowBox[{
            RowBox[{"Quiet", "[", 
             RowBox[{"Get", "[", "x", "]"}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"h", ",", 
                 RowBox[{"CNames", "[", "h", "]"}]}], "}"}], ",", 
               RowBox[{"RemovePackage", "[", "h", "]"}]}], "}"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"t", "=", 
             RowBox[{"SubsString", "[", 
              RowBox[{"a", ",", 
               RowBox[{"{", 
                RowBox[{"h", ",", "\"\<`\>\""}], "}"}]}], "]"}]}], ";", " ", 
            RowBox[{"t", "=", 
             RowBox[{"Select", "[", 
              RowBox[{"t", ",", 
               RowBox[{
                RowBox[{"!", 
                 RowBox[{"MemberQ", "[", 
                  RowBox[{
                   RowBox[{"ToCharacterCode", "[", "#", "]"}], ",", "0"}], 
                  "]"}]}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"h", ",", 
              RowBox[{"Sort", "[", 
               RowBox[{"DeleteDuplicates", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"StringReplace", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"h", "\[Rule]", "\"\<\>\""}], ",", 
                    RowBox[{"\"\<`\>\"", "\[Rule]", "\"\<\>\""}]}], "}"}]}], 
                    "]"}], "&"}], ",", "t"}], "]"}], "]"}], "]"}]}], 
             "}"}]}]}], "]"}]}], "]"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ContMxFile1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContMxFile1", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
     RowBox[{
      RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
      "\"\<mx\>\""}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ReadFullFile", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", "\"\<CONT\>\""}], ",", 
      RowBox[{"c", "=", "\"\<ENDCONT\>\""}], ",", "d", ",", "h", ",", "t"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"h", "=", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"StringPosition", "[", 
         RowBox[{"a", ",", 
          RowBox[{"{", 
           RowBox[{"b", ",", "c"}], "}"}]}], "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "4"}], "]"}], "]"}]}], ";", 
     RowBox[{"h", "=", 
      RowBox[{"StringReplace", "[", 
       RowBox[{
        RowBox[{"StringTake", "[", 
         RowBox[{"a", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"h", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ",", 
            RowBox[{
             RowBox[{"h", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "-", "2"}]}], "}"}]}], "]"}], 
        ",", 
        RowBox[{"\"\<\.10\>\"", "->", "\"\<\>\""}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"h", "=", 
      RowBox[{
       RowBox[{"StringJoin", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Characters", "[", "h", "]"}], ",", 
          RowBox[{
           RowBox[{"SymbolQ", "[", "#", "]"}], "&"}]}], "]"}], "]"}], "<>", 
       "\"\<`\>\""}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"h", "\[Equal]", "\"\<\>\""}], ",", 
       RowBox[{"{", "}"}], ",", 
       RowBox[{
        RowBox[{"d", "=", 
         RowBox[{
          RowBox[{"StringPosition", "[", 
           RowBox[{"a", ",", "h"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"2", ";;", 
            RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"d", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"StringTrim", "[", 
             RowBox[{"#", ",", "\"\<`\>\""}], "]"}], "&"}], ",", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"SubStrToSymb", "[", 
               RowBox[{"a", ",", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ",", 
                "\"\<`\>\"", ",", "1"}], "]"}], "&"}], ",", "d"}], "]"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"h", ",", 
          RowBox[{"Sort", "[", 
           RowBox[{"Select", "[", 
            RowBox[{"d", ",", 
             RowBox[{
              RowBox[{"StrAllSymbNumQ", "[", "#", "]"}], "&"}]}], "]"}], 
           "]"}]}], "}"}]}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ContMxFile2`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContMxFile2", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
     RowBox[{
      RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
      "\"\<mx\>\""}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "$Packages"}], ",", 
      RowBox[{"b", "=", "\"\<AvzAgnVsvArtKr`\>\""}], ",", "c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"Unique", "[", "\"\<ag\>\"", "]"}]}], ",", "g", ",", "h"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"h", "=", 
      RowBox[{"ToString", "[", "d", "]"}]}], ";", 
     RowBox[{"g", "=", 
      RowBox[{"IsPackageQ", "[", 
       RowBox[{"x", ",", "d"}], "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"g", "===", "$Failed"}], ",", "$Failed", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"g", "===", "True"}], ",", 
         RowBox[{"{", 
          RowBox[{"d", ",", 
           RowBox[{"AladjevProcedures`CNames", "[", "d", "]"}], ",", 
           RowBox[{"ToExpression", "[", 
            RowBox[{"\"\<Remove[\>\"", "<>", "h", "<>", " ", "\"\<]\>\""}], 
            "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
          "ToExpression", "[", 
           "\"\<InputForm[BeginPackage[\\\"AvzAgnVsvArtKr`\\\"];EndPackage[]]\
\>\"", "]"}], ";", 
          RowBox[{"Off", "[", 
           RowBox[{"General", "::", "shdw"}], "]"}], ";", 
          RowBox[{"Get", "[", "x", "]"}], ";", " ", 
          RowBox[{"c", "=", 
           RowBox[{"$Packages", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", " ", 
          RowBox[{"b", "=", 
           RowBox[{"{", 
            RowBox[{"c", ",", 
             RowBox[{"AladjevProcedures`CNames", "[", "c", "]"}]}], "}"}]}], 
          ";", " ", 
          RowBox[{"AladjevProcedures`RemovePackage", "[", "c", "]"}], ";", 
          " ", 
          RowBox[{"On", "[", 
           RowBox[{"General", "::", "shdw"}], "]"}], ";", " ", "b"}]}], 
        "]"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ContMxW7`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContMxW7", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
     RowBox[{
      RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
      "\"\<mx\>\""}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"FromCharacterCode", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"BinaryReadList", "[", "x", "]"}], ",", 
          RowBox[{
           RowBox[{"#", "\[NotEqual]", "0"}], "&"}]}], "]"}], "]"}]}], ",", 
      RowBox[{"b", "=", "\"\<CONT\>\""}], ",", 
      RowBox[{"c", "=", "\"\<ENDCONT\>\""}], ",", 
      RowBox[{"d", "=", "\"\<`\>\""}], ",", "h", ",", "t", ",", 
      RowBox[{"g", "=", 
       RowBox[{"{", "}"}]}], ",", "k", ",", "f", ",", "n"}], "}"}], ",", 
    RowBox[{
     RowBox[{"h", "=", 
      RowBox[{
       RowBox[{"StringPosition", "[", 
        RowBox[{"a", ",", 
         RowBox[{"{", 
          RowBox[{"b", ",", "c"}], "}"}]}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"h", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", 
         RowBox[{"h", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "\[Equal]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", "0"}], "}"}]}], ",", "$Failed", ",", 
       RowBox[{
        RowBox[{"t", "=", 
         RowBox[{"StringTrim", "[", 
          RowBox[{"StringTake", "[", 
           RowBox[{"a", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"h", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}], "+", "2"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"h", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", "2"}]}], "}"}]}], "]"}], 
          "]"}]}], ";", " ", "\[IndentingNewLine]", 
        RowBox[{"a", "=", 
         RowBox[{"StringTake", "[", 
          RowBox[{"a", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"h", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", 
        RowBox[{"f", "=", 
         RowBox[{"StringPosition", "[", 
          RowBox[{"a", ",", "t"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"c", "=", "\"\<\>\""}], ",", 
             RowBox[{
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"k", "=", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "+", "1"}]}], ",", 
                RowBox[{"k", "\[LessEqual]", 
                 RowBox[{"StringLength", "[", "a", "]"}]}], ",", 
                RowBox[{"k", "++"}], ",", 
                RowBox[{
                 RowBox[{"n", "=", 
                  RowBox[{"StringTake", "[", 
                   RowBox[{"a", ",", 
                    RowBox[{"{", 
                    RowBox[{"k", ",", "k"}], "}"}]}], "]"}]}], ";", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"n", "\[Equal]", "d"}], ",", 
                   RowBox[{"Break", "[", "]"}], ",", 
                   RowBox[{"c", "=", 
                    RowBox[{"c", "<>", "n"}]}]}], "]"}]}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"StringFreeQ", "[", 
                 RowBox[{"c", ",", 
                  RowBox[{"StringTake", "[", 
                   RowBox[{"t", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "2"}]}], "}"}]}], "]"}]}], "]"}], ",", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"g", ",", "c"}], "]"}], ",", "Null"}], "]"}]}]}], 
            "}"}], "&"}], ",", "f"}], "]"}], ";", " ", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Sort", "[", "g", "]"}], ",", 
            RowBox[{
             RowBox[{"StrAllSymbNumQ", "[", "#", "]"}], "&"}]}], "]"}]}], 
         "}"}]}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DiffContexts`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DiffContexts", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"SymbolQ", "[", "x", "]"}], "&&", 
      RowBox[{"!", 
       RowBox[{"UnevaluatedQ", "[", 
        RowBox[{"HeadPF", ",", "x"}], "]"}]}]}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", 
        RowBox[{"\"\<(*BeginPackage[\\\"\.12`\\\"]*)\>\"", ",", 
         RowBox[{"\"\<(*\.0f::usage=\\\"\\\"\>\"", "<>", "\"\<*)\>\""}], ",", 
         "\"\<(*Begin[\\\"`\.06`\\\"]*)\>\"", ",", "\"\<(*\.04*)\>\"", ",", 
         "\"\<(*End[]*)\>\"", ",", "\"\<(*EndPackage[]*)\>\""}], "}"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"FromCharacterCode", ",", 
         RowBox[{"{", 
          RowBox[{"18", ",", "15", ",", "6", ",", "4"}], "}"}]}], "]"}]}], 
      ",", 
      RowBox[{"c", "=", 
       RowBox[{
        RowBox[{"Definition2", "[", "x", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"-", "2"}]}], "]"}], "]"}]}], ",", "d", ",", 
      RowBox[{"h", "=", 
       RowBox[{"ToString", "[", "x", "]"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", "j", ",", 
      RowBox[{"t", "=", 
       RowBox[{"{", "}"}]}], ",", "p", ",", 
      RowBox[{"f", "=", 
       RowBox[{"{", "}"}]}], ",", "z"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "c", "]"}], "<", "2"}], ",", 
      RowBox[{"Context", "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"z", "=", 
        RowBox[{"HeadPF", "[", "x", "]"}]}], ";", " ", 
       RowBox[{"Clear", "[", "x", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{"k", ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "c", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{
          RowBox[{"d", "=", 
           RowBox[{"{", "}"}]}], ";", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "\[LessEqual]", 
             RowBox[{"Length", "[", "a", "]"}]}], ",", 
            RowBox[{"j", "++"}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"d", ",", 
              RowBox[{"StringReplace", "[", 
               RowBox[{
                RowBox[{"a", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"b", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
                   RowBox[{"h", "<>", 
                    RowBox[{"ToString", "[", "k", "]"}]}]}], ",", 
                  RowBox[{
                   RowBox[{"b", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "\[Rule]", "h"}], ",", 
                  RowBox[{
                   RowBox[{"b", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "\[Rule]", "h"}], ",", 
                  RowBox[{
                   RowBox[{"b", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "\[Rule]", 
                   RowBox[{"c", "[", 
                    RowBox[{"[", "k", "]"}], "]"}]}]}], "}"}]}], "]"}]}], 
             "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"t", ",", 
            RowBox[{"p", "=", 
             RowBox[{"h", "<>", 
              RowBox[{"ToString", "[", "k", "]"}], "<>", "\"\<.m\>\""}]}]}], 
           "]"}], ";", " ", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"f", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"h", "<>", 
               RowBox[{"ToString", "[", "k", "]"}], "<>", "\"\<`\>\""}], ",", 
              RowBox[{"z", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"BinaryWrite", "[", 
                RowBox[{"p", ",", 
                 RowBox[{
                  RowBox[{"ToCharacterCode", "[", "#", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"3", ";;", 
                    RowBox[{"-", "3"}]}], "]"}], "]"}]}], "]"}], ",", 
               RowBox[{"BinaryWrite", "[", 
                RowBox[{"p", ",", 
                 RowBox[{"{", 
                  RowBox[{"32", ",", "10"}], "}"}]}], "]"}]}], "}"}], "&"}], 
            ",", "d"}], "]"}], ";", 
          RowBox[{"Close", "[", "p", "]"}], ";", 
          RowBox[{"Quiet", "[", 
           RowBox[{"Get", "[", "p", "]"}], "]"}]}]}], "]"}], ";", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "y", "}"}], "\[NotEqual]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"Map", "[", 
          RowBox[{"DeleteFile", ",", "t"}], "]"}], ",", "Null"}], "]"}], ";", 
       RowBox[{"Reverse", "[", "f", "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContextToSymbol", "[", 
    RowBox[{
     RowBox[{"x_", "/;", 
      RowBox[{"AladjevProcedures`SymbolQ", "[", "x", "]"}]}], ",", 
     RowBox[{"y_", "/;", 
      RowBox[{"AladjevProcedures`ContextQ", "[", "y", "]"}]}], ",", "z___"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", 
       RowBox[{"b", "=", 
        RowBox[{"ToString", "[", "x", "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"Off", "[", 
       RowBox[{"General", "::", "shdw"}], "]"}], ";", 
      RowBox[{"a", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{
        "\"\<BeginPackage[\\\"AvzAgnVsvArtKr`\\\"]\\n90::usage=73\\nBegin[\\\"\
`90`\\\"]\\n500\\nEnd[]\\nEndPackage[]\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<AvzAgnVsvArtKr`\>\"", "\[Rule]", "y"}], ",", 
           RowBox[{"\"\<73\>\"", "\[Rule]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"AladjevProcedures`PureDefinition", "[", "x", "]"}], "===",
                "$Failed"}], ",", "\"\<\\\"\\\"\>\"", ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"{", "z", "}"}], "\[NotEqual]", 
                  RowBox[{"{", "}"}]}], "&&", 
                 RowBox[{"StringQ", "[", "z", "]"}]}], ",", 
                RowBox[{"AladjevProcedures`ToString1", "[", "z", "]"}], ",", 
                RowBox[{"AladjevProcedures`ToString1", "[", 
                 RowBox[{"\"\<Help on \>\"", "<>", "b"}], "]"}]}], "]"}]}], 
             "]"}]}], ",", 
           RowBox[{"\"\<90\>\"", "\[Rule]", "b"}], ",", 
           RowBox[{"\"\<500\>\"", "\[Rule]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"AladjevProcedures`PureDefinition", "[", "x", "]"}], "===",
                "$Failed"}], ",", "b", ",", 
              RowBox[{"AladjevProcedures`PureDefinition", "[", "x", "]"}]}], 
             "]"}]}]}], "}"}]}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
      RowBox[{"Remove", "[", "x", "]"}], ";", " ", 
      RowBox[{"ToExpression", "[", "a", "]"}], ";", "  ", 
      RowBox[{"On", "[", 
       RowBox[{"General", "::", "shdw"}], "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`PackageFileQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PackageFileQ", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"StringQ", "[", "x", "]"}], "&&", 
     RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<cdf\>\"", ",", "\"\<m\>\"", ",", "\"\<mx\>\"", ",", 
         "\"\<nb\>\""}], "}"}], ",", 
       RowBox[{"FileExtension", "[", "x", "]"}]}], "]"}]}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"SameQ", "[", 
       RowBox[{
        RowBox[{"ContextFromFile", "[", "x", "]"}], ",", "$Failed"}], "]"}], 
      ",", "False", ",", "True"}], "]"}], ",", "False"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`MxPackNames`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MxPackNames", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
     RowBox[{
      RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
      "\"\<mx\>\""}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b", ",", 
      RowBox[{"a", "=", 
       RowBox[{"FromCharacterCode", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"ToCharacterCode", "[", 
           RowBox[{"ReadFullFile", "[", "x", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"#", ">", "31"}], "&"}]}], "]"}], "]"}]}], ",", "c", ",", 
      "d", ",", 
      RowBox[{"g", "=", 
       RowBox[{"{", "}"}]}], ",", "k", ",", "j"}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{
       RowBox[{"StringPosition", "[", 
        RowBox[{"a", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<CONT\>\"", ",", "\"\<ENDCONT\>\""}], "}"}]}], "]"}], 
       "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"StringTake", "[", 
       RowBox[{"a", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"b", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "+", "2"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"b", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], "]"}]}], 
     ";", " ", 
     RowBox[{"b", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], "&"}], ",", 
        RowBox[{
         RowBox[{"StringPosition", "[", 
          RowBox[{"a", ",", "b"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"2", ";;", 
           RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}]}], ";", " ", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "b", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"c", "=", "\"\<\>\""}], ";", " ", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", 
           RowBox[{"b", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ",", 
          RowBox[{"j", "<", "Infinity"}], ",", 
          RowBox[{"j", "++"}], ",", 
          RowBox[{
           RowBox[{"d", "=", 
            RowBox[{"StringTake", "[", 
             RowBox[{"a", ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "j"}], "}"}]}], "]"}]}], ";", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"d", "==", "\"\<`\>\""}], ",", 
             RowBox[{"Break", "[", "]"}], ",", 
             RowBox[{"c", "=", 
              RowBox[{"c", "<>", "d"}]}]}], "]"}]}]}], "]"}], ";", " ", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"g", ",", "c"}], "]"}]}]}], "]"}], ";", " ", 
     RowBox[{
      RowBox[{"Sort", "[", 
       RowBox[{"Select", "[", 
        RowBox[{"g", ",", 
         RowBox[{
          RowBox[{"StringFreeQ", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<[\>\"", ",", "\"\<(\>\""}], "}"}]}], "]"}], "&"}]}],
         "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ";;", 
        RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`PackReplaceQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PackReplaceQ", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
       "\"\<m\>\""}]}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "$Packages"}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"ContentOfMfile", "[", "x", "]"}]}], ",", "c"}], "}"}], ",", 
    RowBox[{
     RowBox[{"c", "=", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Quiet", "[", 
               RowBox[{"CNames", "[", "#", "]"}], "]"}], "&"}], ",", "a"}], 
            "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"StringFreeQ", "[", 
            RowBox[{"#", ",", "\"\<`\>\""}], "]"}], "&"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"b", ",", "#"}], "]"}], "&"}]}], "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", "y", "}"}], "\[NotEqual]", 
         RowBox[{"{", "}"}]}], "&&", 
        RowBox[{"!", 
         RowBox[{"HowAct", "[", "y", "]"}]}]}], ",", 
       RowBox[{"y", "=", "c"}], ",", "Null"}], "]"}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"c", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", "False", ",", "True"}], "]"}]}]}], " ", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`LangHoldFuncQ`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LangHoldFuncQ", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"SystemQ", "[", "x", "]"}], "&&", 
     RowBox[{
      RowBox[{"Intersection", "[", 
       RowBox[{
        RowBox[{"Quiet", "[", 
         RowBox[{"Check", "[", 
          RowBox[{
           RowBox[{"Attributes", "[", "x", "]"}], ",", "False"}], "]"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"HoldAll", ",", "HoldFirst", ",", "HoldRest"}], "}"}]}], 
       "]"}], "\[NotEqual]", 
      RowBox[{"{", "}"}]}]}], ",", "True", ",", "False"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{"Begin", "[", "\"\<`AddMxFile`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AddMxFile", "[", 
    RowBox[{
     RowBox[{"x_", "/;", 
      RowBox[{
       RowBox[{"ListQ", "[", "x", "]"}], "&&", 
       RowBox[{
        RowBox[{"Length", "[", "x", "]"}], "\[GreaterEqual]", "1"}], "&&", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"FileExistsQ", "[", "#", "]"}], "&&", 
             RowBox[{
              RowBox[{"FileExtension", "[", "#", "]"}], "\[Equal]", 
              "\"\<mx\>\""}]}], "&"}], ",", "x"}], "]"}], "]"}], "\[Equal]", 
        RowBox[{"{", "True", "}"}]}], "&&", " ", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"!", 
             RowBox[{"MemberQ", "[", 
              RowBox[{"$Packages", ",", 
               RowBox[{"ContextInMxFile", "[", "#", "]"}]}], "]"}]}], "&"}], 
           ",", "x"}], "]"}], "]"}], "\[Equal]", 
        RowBox[{"{", "True", "}"}]}]}]}], ",", 
     RowBox[{"y_", "/;", 
      RowBox[{"ContextQ", "[", "y", "]"}]}], ",", "z___"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{"{", "}"}]}], ",", "b"}], "}"}], ",", 
     RowBox[{
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"a", ",", 
          RowBox[{"ContextForPackage", "[", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "k", "]"}], "]"}], ",", "y"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", 
          RowBox[{"Length", "[", "x", "]"}]}], "}"}]}], "]"}], ";", " ", 
      RowBox[{"DumpSave", "[", 
       RowBox[{
        RowBox[{"b", "=", 
         RowBox[{
          RowBox[{"StringTake", "[", 
           RowBox[{"y", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"-", "2"}]}], "}"}]}], "]"}], "<>", "\"\<.mx\>\""}]}], 
        ",", "y"}], "]"}], ";", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "z", "}"}], "\[NotEqual]", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"RemovePackage", "[", "y", "]"}], ",", "Null"}], "]"}], ";", 
      " ", 
      RowBox[{"{", 
       RowBox[{"y", ",", "b"}], "}"}]}]}], "]"}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ContextForPackage`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContextForPackage", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
       "\"\<mx\>\""}]}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{"ContextQ", "[", "y", "]"}], "&&", 
      RowBox[{"!", 
       RowBox[{"MemberQ", "[", 
        RowBox[{"$Packages", ",", "y"}], "]"}]}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ContextInMxFile", "[", "x", "]"}]}], ",", "b", ",", "c"}], 
     "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"a", "===", "$Failed"}], ",", "$Failed", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"a", "\[Equal]", "y"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "x"}], "}"}], ",", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"$Packages", ",", "a"}], "]"}], ",", 
           RowBox[{"b", "=", "74"}], ",", 
           RowBox[{"Get", "[", "x", "]"}]}], "]"}], ";", " ", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ContextToSymbol", "[", 
             RowBox[{"#", ",", "y"}], "]"}], "&"}], ",", 
           RowBox[{"CNames", "[", "a", "]"}]}], "]"}], ";", " ", 
         RowBox[{"DumpSave", "[", 
          RowBox[{
           RowBox[{"c", "=", 
            RowBox[{"FileNameJoin", "[", 
             RowBox[{"Reverse", "[", 
              RowBox[{"ReplacePart", "[", 
               RowBox[{
                RowBox[{"Reverse", "[", 
                 RowBox[{"FileNameSplit", "[", "x", "]"}], "]"}], ",", 
                RowBox[{"1", " ", "->", 
                 RowBox[{
                  RowBox[{"FileBaseName", "[", "x", "]"}], "<>", 
                  "\"\<$.mx\>\""}]}]}], "]"}], "]"}], "]"}]}], ",", "y"}], 
          "]"}], ";", " ", 
         RowBox[{"RemovePackage", "[", "a", "]"}], ";", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"b", "\[Equal]", "74"}], ",", "Null", ",", 
           RowBox[{"RemovePackage", "[", "y", "]"}]}], "]"}], ";", " ", 
         RowBox[{"{", 
          RowBox[{"y", ",", "c"}], "}"}]}]}], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DefInPackage`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DefInPackage", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"MfilePackageQ", "[", "x", "]"}], "||", 
     RowBox[{"ContextQ", "[", "x", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", 
        RowBox[{"\"\<Begin[\\\"`\>\"", ",", "\"\<`\\\"]\>\""}], "}"}]}], ",", 
      RowBox[{"c", "=", "\"\<BeginPackage[\\\"\>\""}], ",", "d", ",", "p", 
      ",", "g", ",", "t", ",", 
      RowBox[{"k", "=", "1"}], ",", "f", ",", 
      RowBox[{"n", "=", "x"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Label", "[", "Avz", "]"}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ContextQ", "[", "n", "]"}], "&&", 
        RowBox[{
         RowBox[{"Contexts", "[", "n", "]"}], "\[NotEqual]", 
         RowBox[{"{", "}"}]}]}], ",", 
       RowBox[{
        RowBox[{"f", "=", "\"\<$Kr20Art27$\>\""}], ";", " ", 
        RowBox[{"Save", "[", 
         RowBox[{"f", ",", "x"}], "]"}], ";", " ", 
        RowBox[{"g", "=", 
         RowBox[{"FromCharacterCode", "[", "17", "]"}]}], ";", " ", 
        RowBox[{"t", "=", 
         RowBox[{"n", "<>", "\"\<Private`\>\""}]}], ";", " ", 
        RowBox[{"a", "=", 
         RowBox[{"ReadFullFile", "[", 
          RowBox[{"f", ",", "g"}], "]"}]}], ";", 
        RowBox[{"DeleteFile", "[", "f", "]"}], ";", " ", 
        RowBox[{"d", "=", 
         RowBox[{"CNames", "[", "n", "]"}]}], ";", " ", 
        RowBox[{"p", "=", 
         RowBox[{"SubsString", "[", 
          RowBox[{"a", ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "g"}], "}"}]}], "]"}]}], ";", 
        RowBox[{"p", "=", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"StringCases", "[", 
              RowBox[{"#", ",", 
               RowBox[{"t", "~~", 
                RowBox[{"Shortest", "[", "___", "]"}], "~~", 
                RowBox[{"\"\<[\>\"", "<>", "t"}], "~~", 
                RowBox[{"Shortest", "[", "___", "]"}], "~~", 
                "\"\< := \>\""}]}], "]"}], "&"}], ",", "p"}], "]"}], "]"}]}], 
        ";", 
        RowBox[{"p", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"StringLength", "[", "t", "]"}], "+", "1"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Flatten", "[", 
                   RowBox[{"StringPosition", "[", 
                    RowBox[{"#", ",", "\"\<[\>\""}], "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
             "]"}], "&"}], ",", 
           RowBox[{"Flatten", "[", "p", "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"n", ",", 
          RowBox[{"DeleteDuplicates", "[", "p", "]"}], ",", "d"}], "}"}]}], 
       ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"FileExistsQ", "[", "n", "]"}], ",", " ", 
         RowBox[{
          RowBox[{"a", "=", 
           RowBox[{"ReadFullFile", "[", "n", "]"}]}], ";", "  ", 
          RowBox[{"f", "=", 
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{
              RowBox[{"SubsString", "[", 
               RowBox[{"a", ",", 
                RowBox[{"{", 
                 RowBox[{"c", ",", "\"\<`\\\"]\>\""}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"15", ",", 
                RowBox[{"-", "3"}]}], "}"}]}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{"$Packages", ",", "f"}], "]"}], ",", 
            RowBox[{
             RowBox[{"n", "=", "f"}], ";", " ", 
             RowBox[{"Goto", "[", "Avz", "]"}]}]}], "]"}], ";", " ", 
          RowBox[{"b", "=", 
           RowBox[{"StringSplit", "[", 
            RowBox[{"a", ",", "\"\<*)(*\>\""}], "]"}]}], ";", 
          RowBox[{"d", "=", 
           RowBox[{"Select", "[", 
            RowBox[{"b", ",", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"StringFreeQ", "[", 
                RowBox[{
                 RowBox[{"StringReplace", "[", 
                  RowBox[{"#", ",", 
                   RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}]}], "]"}], 
                 ",", "\"\<::usage=\>\""}], "]"}]}], "&"}]}], "]"}]}], ";", 
          " ", 
          RowBox[{"d", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"StringTake", "[", 
               RowBox[{"#", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"#", ",", "\"\<::\>\""}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
               "]"}], "&"}], ",", "d"}], "]"}]}], ";", 
          RowBox[{"p", "=", 
           RowBox[{"DeleteDuplicates", "[", 
            RowBox[{"Select", "[", 
             RowBox[{"b", ",", 
              RowBox[{
               RowBox[{"StringDependAllQ", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"{", 
                  RowBox[{"\"\<Begin[\\\"`\>\"", ",", "\"\<`\\\"]\>\""}], 
                  "}"}]}], "]"}], "&"}]}], "]"}], "]"}]}], ";", 
          RowBox[{"p", "=", 
           RowBox[{"MinusList", "[", 
            RowBox[{
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"StringTake", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"{", 
                   RowBox[{"9", ",", 
                    RowBox[{"-", "4"}]}], "}"}]}], "]"}], "&"}], ",", "p"}], 
              "]"}], ",", 
             RowBox[{"{", "\"\<Private\>\"", "}"}]}], "]"}]}], ";", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"t", "=", 
           RowBox[{"Flatten", "[", 
            RowBox[{"StringSplit", "[", 
             RowBox[{
              RowBox[{"SubsString", "[", 
               RowBox[{"a", ",", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<Begin[\\\"`Private`\\\"]\>\"", ",", "\"\<End[]\>\""}], 
                 "}"}]}], "]"}], ",", "\"\<*)(*\>\""}], "]"}], "]"}]}], ";", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"t", "\[Equal]", 
             RowBox[{"{", "}"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"f", ",", 
              RowBox[{"MinusList", "[", 
               RowBox[{"d", ",", "p"}], "]"}], ",", "p"}], "}"}], ",", 
            RowBox[{
             RowBox[{"g", "=", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"StringReplace", "[", 
                  RowBox[{"#", ",", 
                   RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}]}], "]"}], 
                 "&"}], ",", 
                RowBox[{"t", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ";;", 
                   RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}]}], ";", " ", 
             RowBox[{"g", "=", 
              RowBox[{"Select", "[", 
               RowBox[{"g", ",", 
                RowBox[{
                 RowBox[{"!", 
                  RowBox[{"StringFreeQ", "[", 
                   RowBox[{"#", ",", "\"\<:=\>\""}], "]"}]}], "&"}]}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"g", "=", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"#", ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"#", ",", "\"\<:\>\""}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
                  "]"}], "&"}], ",", "g"}], "]"}]}], ";", 
             RowBox[{"g", "=", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Quiet", "[", 
                  RowBox[{"Check", "[", 
                   RowBox[{
                    RowBox[{"StringTake", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"#", ",", "\"\<[\>\""}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
                    "]"}], ",", "#"}], "]"}], "]"}], "&"}], ",", "g"}], 
               "]"}]}], ";", " ", 
             RowBox[{"{", 
              RowBox[{"f", ",", "g", ",", "d"}], "}"}]}]}], "]"}]}], ",", 
         "$Failed"}], "]"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ContentOfMfile`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContentOfMfile", "[", 
   RowBox[{"f_", "/;", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "f", "]"}], "&&", 
     RowBox[{
      RowBox[{"FileExtension", "[", "f", "]"}], "\[Equal]", "\"\<m\>\""}]}]}],
    "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b", ",", 
      RowBox[{"a", "=", 
       RowBox[{"ReadFullFile", "[", "f", "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"StringSplit", "[", 
       RowBox[{"a", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<(*\>\"", ",", "\"\<*)\>\""}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"b", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"!", 
           RowBox[{"StringFreeQ", "[", 
            RowBox[{"#", ",", 
             RowBox[{"{", 
              RowBox[{"\"\<Begin[\\\"`\>\"", ",", "\"\<`\\\"]\>\""}], "}"}]}],
             "]"}]}], "&&", 
          RowBox[{"StringFreeQ", "[", 
           RowBox[{"#", ",", "\"\<BeginPackage[\>\""}], "]"}]}], "&"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"StringCases", "[", 
           RowBox[{"#", ",", 
            RowBox[{"\"\<\\\"`\>\"", "~~", "__", "~~", "\"\<`\\\"\>\""}]}], 
           "]"}], "&"}], ",", "b"}], "]"}], "]"}]}], ";", " ", 
     RowBox[{"b", "=", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"StringTake", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", 
             RowBox[{"3", ",", 
              RowBox[{"-", "3"}]}], "}"}]}], "]"}], "&"}], ",", "b"}], "]"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Sort", "[", 
      RowBox[{"Select", "[", 
       RowBox[{"b", ",", 
        RowBox[{
         RowBox[{"StringFreeQ", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{
            "\"\<=\>\"", ",", "\"\<,\>\"", ",", "\"\<`\>\"", ",", "\"\<[\>\"",
              ",", "\"\<]\>\"", ",", "\"\<(\>\"", ",", "\"\<)\>\"", ",", 
             "\"\<^\>\"", ",", "\"\<^\>\"", ",", "\"\<;\>\"", ",", 
             "\"\<{\>\"", ",", "\"\<}\>\"", ",", "\"\<\\\\\>\"", ",", 
             "\"\</\>\""}], "}"}]}], "]"}], "&"}]}], "]"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ContentOfMfile1`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContentOfMfile1", "[", 
   RowBox[{"f_", "/;", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "f", "]"}], "&&", 
     RowBox[{
      RowBox[{"FileExtension", "[", "f", "]"}], "==", "\"\<m\>\""}]}]}], 
   "]"}], ":=", 
  RowBox[{"Sort", "[", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringTake", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"9", ",", 
             RowBox[{"-", "4"}]}], "}"}]}], "]"}], "&"}], ",", 
        RowBox[{"SubsString", "[", 
         RowBox[{
          RowBox[{"ReadFullFile", "[", "f", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\"\<Begin[\\\"`\>\"", ",", "\"\<`\\\"]\>\""}], "}"}]}], 
         "]"}]}], "]"}], ",", 
      RowBox[{
       RowBox[{"StringFreeQ", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<=\>\"", ",", "\"\<,\>\"", ",", "\"\<`\>\"", ",", "\"\<[\>\"", 
           ",", "\"\<]\>\"", ",", "\"\<(\>\"", ",", "\"\<)\>\"", ",", 
           "\"\<^\>\"", ",", "\"\<;\>\"", ",", "\"\<{\>\"", ",", "\"\<}\>\"", 
           ",", "\"\<\\\\\>\"", ",", "\"\</\>\""}], "}"}]}], "]"}], "&"}]}], 
     "]"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ContentOfMfile2`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContentOfMfile2", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
     RowBox[{
      RowBox[{"FileExtension", "[", "x", "]"}], "==", "\"\<m\>\""}]}]}], 
   "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Sort", "[", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"StringReplace", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<Begin[\\\"`\>\"", "->", "\"\<\>\""}], ",", 
           RowBox[{"\"\<`\\\"]\>\"", "->", "\"\<\>\""}]}], "}"}]}], "]"}], 
       "&"}], ",", 
      RowBox[{"SubsString", "[", 
       RowBox[{
        RowBox[{"StringReplace", "[", 
         RowBox[{
          RowBox[{"ReadFullFile", "[", "x", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], ",", 
            RowBox[{"\"\<\\n\>\"", "\[Rule]", "\"\<\>\""}], ",", 
            RowBox[{"\"\<\\t\>\"", "->", "\"\<\>\""}], ",", 
            RowBox[{"\"\<\\r\>\"", "->", "\"\<\>\""}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Begin[\\\"`\>\"", ",", "\"\<`\\\"]\>\""}], "}"}]}], 
       "]"}]}], "]"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ContextDef`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContextDef", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"SymbolQ", "[", "x", "]"}]}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "$ContextPath"}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"ToString", "[", "x", "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", " ", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"SameQ", "[", 
           RowBox[{
            RowBox[{"ToString", "[", 
             RowBox[{"Quiet", "[", 
              RowBox[{"Check", "[", 
               RowBox[{
                RowBox[{"ToExpression", "[", 
                 RowBox[{"\"\<Definition1[\>\"", "<>", 
                  RowBox[{"ToString1", "[", 
                   RowBox[{
                    RowBox[{"a", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "<>", "b"}], "]"}], "<>", 
                  "\"\<]\>\""}], "]"}], ",", "\"\<Null\>\""}], "]"}], "]"}], 
             "]"}], ",", "\"\<Null\>\""}], "]"}]}], ",", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"c", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"a", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "<>", "b"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"ToString", "[", 
                 RowBox[{"Definition", "[", "b", "]"}], "]"}], "!=", 
                "\"\<Null\>\""}], ",", 
               RowBox[{"\"\<Global`\>\"", "<>", "b"}], ",", "Nothing"}], 
              "]"}]}], "}"}]}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{"Length", "[", "a", "]"}]}], "}"}]}], "]"}], ";", 
     RowBox[{"Flatten", "[", "c", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`MainContexts`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MainContexts", "[", "]"}], ":=", 
  RowBox[{"DeleteDuplicates", "[", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"StringTake", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"StringPosition", "[", 
             RowBox[{"#", ",", "\"\<`\>\""}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], "&"}], ",", 
     RowBox[{"Contexts", "[", "]"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ContextsInModule`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContextsInModule", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"BlockQ", "[", "x", "]"}], "||", 
     RowBox[{"ModuleQ", "[", "x", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"ExtrVarsOfStr", "[", 
          RowBox[{
           RowBox[{"PureDefinition", "[", "x", "]"}], ",", "1"}], "]"}], ",", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<Block\>\"", ",", "\"\<Module\>\""}], "}"}], ",", 
             "#"}], "]"}]}], "&"}]}], "]"}]}], ",", "b", ",", "c", ",", "d", 
      ",", "h", ",", "Sf"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Sf", "[", "y_", "]"}], ":=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{"y", ",", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"StringFreeQ", "[", 
              RowBox[{"#", ",", "\"\<`\>\""}], "]"}]}], "&"}]}], "]"}], ",", 
         RowBox[{"Select", "[", 
          RowBox[{"y", ",", 
           RowBox[{
            RowBox[{"StringFreeQ", "[", 
             RowBox[{"#", ",", "\"\<`\>\""}], "]"}], "&"}]}], "]"}]}], "}"}], 
       "]"}]}], ";", " ", 
     RowBox[{"ClearAll", "[", "h", "]"}], ";", " ", 
     RowBox[{"NotSubsProcs", "[", 
      RowBox[{"x", ",", "h"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"a", "=", 
      RowBox[{"MinusList", "[", 
       RowBox[{"a", ",", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"b", "=", 
            RowBox[{"Args", "[", 
             RowBox[{"x", ",", "90"}], "]"}]}], ",", 
           RowBox[{"c", "=", 
            RowBox[{"Locals1", "[", "x", "]"}]}], ",", "h"}], "}"}], "]"}]}], 
       "]"}]}], ";", " ", 
     RowBox[{"h", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PrependTo", "[", 
         RowBox[{"b", ",", "\"\<Args\>\""}], "]"}], ",", 
        RowBox[{"PrependTo", "[", 
         RowBox[{"c", ",", "\"\<Locals\>\""}], "]"}], ",", 
        RowBox[{"PrependTo", "[", 
         RowBox[{"h", ",", "\"\<SubProcs\>\""}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"h", ",", 
         RowBox[{"Map", "[", 
          RowBox[{"Sf", ",", 
           RowBox[{"Map", "[", 
            RowBox[{"DeleteDuplicates", ",", 
             RowBox[{"Map", "[", 
              RowBox[{"Flatten", ",", 
               RowBox[{"Gather", "[", 
                RowBox[{
                 RowBox[{"Map", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"#", ",", 
                    RowBox[{"Context", "[", "#", "]"}]}], "}"}], "&"}], ",", 
                   "a"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
                   RowBox[{"#2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]}], 
              "]"}]}], "]"}]}], "]"}]}], "}"}], ",", "1"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ContextToFileName1`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContextToFileName1", "[", "y___", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Directory", "[", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"SetDirectory", "[", "$InstallationDirectory", "]"}]}], ",", 
      "c", ",", "d"}], "}"}], ",", 
    RowBox[{
     RowBox[{"c", "=", 
      RowBox[{"FileNames", "[", 
       RowBox[{
        RowBox[{"{", "\"\<*.m\>\"", "}"}], ",", 
        RowBox[{"{", "\"\<*\>\"", "}"}], ",", "Infinity"}], "]"}]}], ";", 
     RowBox[{"d", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Flatten", "[", 
                   RowBox[{"StringPosition", "[", 
                    RowBox[{"#", ",", "\"\<\\\\\>\""}], "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}], "+", "1"}], ",", 
                RowBox[{"-", "3"}]}], "}"}]}], "]"}], "<>", "\"\<`\>\""}], 
           "&"}], ",", "c"}], "]"}], "]"}], "]"}]}], ";", 
     RowBox[{"SetDirectory", "[", "a", "]"}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", "y", "}"}], "\[NotEqual]", 
         RowBox[{"{", "}"}]}], "&&", 
        RowBox[{"ContextQ", "[", 
         RowBox[{
          RowBox[{"{", "y", "}"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"b", "<>", "\"\<\\\\\>\"", "<>", "#1"}], "&"}], ",", 
         RowBox[{"Select", "[", 
          RowBox[{"c", ",", 
           RowBox[{
            RowBox[{"SuffPref", "[", 
             RowBox[{"#", ",", 
              RowBox[{"\"\<\\\\\>\"", "<>", 
               RowBox[{"StringTake", "[", 
                RowBox[{"y", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", 
                   RowBox[{"-", "2"}]}], "}"}]}], "]"}], "<>", "\"\<.m\>\""}],
               ",", "2"}], "]"}], "&"}]}], "]"}]}], "]"}], ",", "d"}], 
      "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`FullCalls`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FullCalls", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"ProcQ", "[", "x", "]"}], "||", 
     RowBox[{"FunctionQ", "[", "x", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", "}"}]}], ",", "b", ",", "d", ",", 
      RowBox[{"c", "=", "\"\<::usage = \>\""}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Save", "[", 
      RowBox[{
       RowBox[{"b", "=", 
        RowBox[{"ToString", "[", "x", "]"}]}], ",", "x"}], "]"}], ";", " ", 
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "<", "Infinity"}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"d", "=", 
         RowBox[{"Read", "[", 
          RowBox[{"b", ",", "String"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"d", "===", "EndOfFile"}], ",", 
          RowBox[{"Break", "[", "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"StringFreeQ", "[", 
             RowBox[{"d", ",", "c"}], "]"}], ",", 
            RowBox[{"Continue", "[", "]"}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"a", ",", 
              RowBox[{
               RowBox[{"StringSplit", "[", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"d", ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"d", ",", "c"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
                  "]"}], ",", "\"\< /: \>\""}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "]"}]}], "]"}]}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"a", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"a", ",", 
        RowBox[{
         RowBox[{"SymbolQ", "[", "#", "]"}], "&"}]}], "]"}]}], ";", 
     RowBox[{"DeleteFile", "[", 
      RowBox[{"Close", "[", "b", "]"}], "]"}], ";", " ", 
     RowBox[{"a", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", 
           RowBox[{"Context", "[", "#", "]"}]}], "}"}], "&"}], ",", 
        RowBox[{"DeleteDuplicates", "[", "a", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"a", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "1"}], ",", "a", ",", 
        RowBox[{"Map", "[", 
         RowBox[{"DeleteDuplicates", ",", 
          RowBox[{"Map", "[", 
           RowBox[{"Flatten", ",", 
            RowBox[{"Gather", "[", 
             RowBox[{"a", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"#1", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "===", 
                RowBox[{"#2", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]}], "]"}]}], 
         "]"}]}], "]"}]}], ";", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"d", ",", "k"}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "}"}], ",", "1"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{
        RowBox[{"b", "=", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"[", "k", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"ContextQ", "[", "#", "]"}], "&"}]}], "]"}]}], ";", " ", 
        RowBox[{"c", "=", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"[", "k", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"ContextQ", "[", "#", "]"}]}], "&"}]}], "]"}]}], ";", 
        " ", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"d", ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"b", ",", 
             RowBox[{"Sort", "[", "c", "]"}]}], "}"}], "]"}]}], "]"}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"d", "=", 
      RowBox[{"MinusList", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "d", "]"}], "\[Equal]", "1"}], ",", 
          RowBox[{"Flatten", "[", "d", "]"}], ",", "d"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"ToString", "[", "x", "]"}], "}"}]}], "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"d", "\[Equal]", 
        RowBox[{"{", 
         RowBox[{"Context", "[", "x", "]"}], "}"}]}], ",", 
       RowBox[{"{", "}"}], ",", "d"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Rule1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rule1", "[", "x__", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", "x", "}"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"{", "x", "}"}], "]"}]}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"b", "\[Equal]", "2"}], ",", 
      RowBox[{
       RowBox[{"a", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
       RowBox[{"a", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"b", ">", "2"}], "&&", 
         RowBox[{"EvenQ", "[", "b", "]"}]}], ",", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"a", "[", 
             RowBox[{"[", "#", "]"}], "]"}], "\[Rule]", 
            RowBox[{"a", "[", 
             RowBox[{"[", 
              RowBox[{"#", "+", "1"}], "]"}], "]"}]}], "&"}], ",", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"1", ",", "b"}], "]"}], ",", 
            RowBox[{
             RowBox[{"OddQ", "[", "#", "]"}], "&"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"b", "\[Equal]", "1"}], "&&", 
           RowBox[{"ListQ", "[", "x", "]"}], "&&", 
           RowBox[{"EvenQ", "[", 
            RowBox[{"Length", "[", "x", "]"}], "]"}]}], ",", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"x", "[", 
               RowBox[{"[", "#", "]"}], "]"}], "\[Rule]", 
              RowBox[{"x", "[", 
               RowBox[{"[", 
                RowBox[{"#", "+", "1"}], "]"}], "]"}]}], "&"}], ",", 
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"1", ",", 
                RowBox[{"Length", "[", "x", "]"}]}], "]"}], ",", 
              RowBox[{
               RowBox[{"OddQ", "[", "#", "]"}], "&"}]}], "]"}]}], "]"}], ",", 
          RowBox[{"Defer", "[", 
           RowBox[{"Rule", "[", "x", "]"}], "]"}]}], "]"}]}], "]"}]}], 
     "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`FullCalls1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FullCalls1", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"ProcQ", "[", "x", "]"}], "||", 
     RowBox[{"FunctionQ", "[", "x", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", "}"}]}], ",", "b", ",", 
      RowBox[{"c", "=", "\"\<\>\""}], ",", "d", ",", 
      RowBox[{"k", "=", "1"}], ",", "n", ",", "p"}], "}"}], ",", 
    RowBox[{
     RowBox[{"Save", "[", 
      RowBox[{
       RowBox[{"b", "=", 
        RowBox[{"ToString", "[", "x", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "c"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "<", "Infinity"}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"d", "=", 
         RowBox[{"Read", "[", 
          RowBox[{"b", ",", "String"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"d", "===", "EndOfFile"}], ",", 
          RowBox[{"Break", "[", "]"}], ",", " ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"d", "!=", "\"\< \>\""}], ",", 
            RowBox[{"c", "=", 
             RowBox[{"c", "<>", "d"}]}], ",", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"n", "=", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"StringPosition", "[", 
                   RowBox[{"c", ",", "\"\< := \>\""}], "]"}], "]"}]}], ";", 
                RowBox[{"n", "\[NotEqual]", 
                 RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"Quiet", "[", 
                  RowBox[{"HeadingQ", "[", 
                   RowBox[{"p", "=", 
                    RowBox[{"StringTake", "[", 
                    RowBox[{"c", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{"n", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
                    "]"}]}], "]"}], "]"}], ",", 
                 RowBox[{"a", "=", 
                  RowBox[{"Append", "[", 
                   RowBox[{"a", ",", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{"HeadName", "[", 
                    RowBox[{"StringTake", "[", 
                    RowBox[{"c", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{"n", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
                    "]"}], "]"}], "]"}]}], "]"}]}]}], "]"}]}], "]"}], ";", 
             " ", 
             RowBox[{"c", "=", "\"\<\>\""}]}]}], "]"}]}], "]"}]}]}], "]"}], 
     ";", " ", 
     RowBox[{"DeleteFile", "[", 
      RowBox[{"Close", "[", "b", "]"}], "]"}], ";", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"b", "=", 
        RowBox[{"FullCalls", "[", "x", "]"}]}], ",", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"MinusList", "[", 
          RowBox[{"a", ",", 
           RowBox[{"{", 
            RowBox[{"ToString", "[", "x", "]"}], "}"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", "b", "]"}], ",", "#"}], "]"}]}], "&"}]}],
         "]"}]}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StrSub`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StrSub", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"StringQ", "[", "y", "]"}]}], ",", 
    RowBox[{"z_", "/;", 
     RowBox[{"StringQ", "[", "z", "]"}]}], ",", 
    RowBox[{"n_", "/;", 
     RowBox[{
      RowBox[{"PosIntQ", "[", "n", "]"}], "||", 
      RowBox[{"PosIntListQ", "[", "n", "]"}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"StringPosition", "[", 
        RowBox[{"x", ",", "y"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Sort", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", "n", "}"}], "]"}], "]"}]}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"a", "\[Equal]", 
        RowBox[{"{", "}"}]}], "||", 
       RowBox[{
        RowBox[{"Length", "[", "a", "]"}], "<", 
        RowBox[{"b", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}]}], ",", "$Failed", ",", 
      RowBox[{"StringReplacePart", "[", 
       RowBox[{"x", ",", "z", ",", 
        RowBox[{"Part", "[", 
         RowBox[{"a", ",", "b"}], "]"}]}], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StrToList`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StrToList", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", "d", ",", "h", ",", 
      RowBox[{"k", "=", "1"}], ",", "j", ",", 
      RowBox[{"y", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"StringTake", "[", 
            RowBox[{"x", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1"}], "}"}]}], "]"}], "\[Equal]", 
           "\"\<{\>\""}], "&&", 
          RowBox[{
           RowBox[{"StringTake", "[", 
            RowBox[{"x", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", "1"}]}], "}"}]}], "]"}], "\[Equal]", 
           "\"\<}\>\""}]}], ",", 
         RowBox[{"StringTake", "[", 
          RowBox[{"x", ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", 
             RowBox[{"-", "2"}]}], "}"}]}], "]"}], ",", "x"}], "]"}]}]}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"StringPosition", "[", 
          RowBox[{"y", ",", "\"\<=\>\""}], "]"}], "]"}], "+", "2"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"d", "=", 
      RowBox[{"StringLength", "[", "y", "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"a", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"Map", "[", 
        RowBox[{"StringTrim", ",", 
         RowBox[{"StringSplit", "[", 
          RowBox[{"y", ",", "\"\<,\>\""}], "]"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"k", "\[LessEqual]", 
           RowBox[{"Length", "[", "a", "]"}]}], ",", 
          RowBox[{
           RowBox[{"c", "=", "\"\<\>\""}], ";", 
           RowBox[{"j", "=", 
            RowBox[{"a", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{"j", ",", 
             RowBox[{"j", "\[LessEqual]", "d"}], ",", 
             RowBox[{"j", "++"}], ",", 
             RowBox[{
              RowBox[{"c", "=", 
               RowBox[{"c", "<>", 
                RowBox[{"StringTake", "[", 
                 RowBox[{"y", ",", 
                  RowBox[{"{", 
                   RowBox[{"j", ",", "j"}], "}"}]}], "]"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"!", 
                  RowBox[{"SameQ", "[", 
                   RowBox[{
                    RowBox[{"Quiet", "[", 
                    RowBox[{"ToExpression", "[", "c", "]"}], "]"}], ",", 
                    "$Failed"}], "]"}]}], "&&", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"j", "\[Equal]", "d"}], "||", 
                   RowBox[{
                    RowBox[{"StringTake", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"j", "+", "1"}], ",", 
                    RowBox[{"j", "+", "1"}]}], "}"}]}], "]"}], "\[Equal]", 
                    "\"\<,\>\""}]}], ")"}]}], ",", 
                RowBox[{
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"b", ",", 
                   RowBox[{"c", "\[Rule]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Unique", "[", "$Art$Kr$", "]"}], "]"}]}]}], 
                  "]"}], ";", 
                 RowBox[{"Break", "[", "]"}]}]}], "]"}]}]}], "]"}], ";", 
           RowBox[{"k", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"h", "=", 
         RowBox[{"Map", "[", 
          RowBox[{"StringTrim", ",", 
           RowBox[{"StringSplit", "[", 
            RowBox[{
             RowBox[{"StringReplace", "[", 
              RowBox[{"y", ",", "b"}], "]"}], ",", "\"\<,\>\""}], "]"}]}], 
          "]"}]}], ";", " ", 
        RowBox[{"Map14", "[", 
         RowBox[{"StringReplace", ",", "h", ",", 
          RowBox[{"RevRules", "[", "b", "]"}]}], "]"}]}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ArrayInd`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ArrayInd", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", "=", 
      RowBox[{"StringSplit", "[", 
       RowBox[{
        RowBox[{"ToString", "[", 
         RowBox[{"InputForm", "[", 
          RowBox[{"DefFunc", "[", "x", "]"}], "]"}], "]"}], ",", 
        "\"\<\\n \\n\>\""}], "]"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"a", "==", 
       RowBox[{"{", "\"\<Null\>\"", "}"}]}], ",", 
      RowBox[{"{", "}"}], ",", "a"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StrOfSymblQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StrOfSymblQ", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"A_", "/;", 
     RowBox[{"ListQ", "[", "A", "]"}]}]}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"DeleteDuplicates", "[", 
      RowBox[{"Map3", "[", 
       RowBox[{"MemberQ", ",", 
        RowBox[{"Map", "[", 
         RowBox[{"ToString", ",", "A"}], "]"}], ",", 
        RowBox[{"Characters", "[", "x", "]"}]}], "]"}], "]"}], "\[Equal]", 
     RowBox[{"{", "True", "}"}]}], ",", "True", ",", "False"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StrPartition`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StrPartition", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{
       RowBox[{"StringQ", "[", "y", "]"}], "&&", 
       RowBox[{
        RowBox[{"StringLength", "[", "y", "]"}], "\[Equal]", "1"}]}], "||", 
      RowBox[{
       RowBox[{"ListQ", "[", "y", "]"}], "&&", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"StringQ", "[", "#", "]"}], "&"}], ",", "y"}], "]"}], 
         "]"}], "\[Equal]", 
        RowBox[{"{", "True", "}"}]}], "&&", " ", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"StringLength", "[", "#", "]"}], "&"}], ",", "y"}], "]"}],
          "]"}], "\[Equal]", 
        RowBox[{"{", "1", "}"}]}]}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{"StringPosition", "[", 
          RowBox[{"x", ",", "y"}], "]"}], "]"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", 
    RowBox[{"Flatten", "[", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"b", ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"StringTake", "[", 
           RowBox[{"x", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "#"}], "}"}]}], "]"}], "&"}], ",", "a"}], 
        "]"}]}], "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Un`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Un", "[", "x___", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "a", "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", "x", "}"}], "\[Equal]", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"Return", "[", 
       RowBox[{"Symbol", "[", 
        RowBox[{"\"\<$\>\"", "<>", 
         RowBox[{"ToString", "[", "$ModuleNumber", "]"}]}], "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "[", "y_", "]"}], ":=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"StringQ", "[", "y", "]"}], ",", 
          RowBox[{"Symbol", "[", 
           RowBox[{"y", "<>", 
            RowBox[{"ToString", "[", "$ModuleNumber", "]"}]}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Head", "[", "y", "]"}], "==", "Symbol"}], ",", 
            RowBox[{"Symbol", "[", 
             RowBox[{
              RowBox[{"ToString", "[", "y", "]"}], "<>", "\"\<$\>\"", "<>", 
              RowBox[{"ToString", "[", "$ModuleNumber", "]"}]}], "]"}], ",", 
            "y"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ListQ", "[", "x", "]"}], ",", 
         RowBox[{"Map", "[", 
          RowBox[{"a", ",", 
           RowBox[{"Flatten", "[", "x", "]"}]}], "]"}], ",", 
         RowBox[{"a", "[", "x", "]"}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Unique1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Unique1", "[", 
   RowBox[{"x_", ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Unique", "[", "y", "]"}]}], ",", "b"}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"ToString", "[", "a", "]"}]}], ";", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
       RowBox[{"ToString", "[", "a", "]"}], "<>", "\"\<=\>\"", "<>", 
       RowBox[{"ToString1", "[", "x", "]"}]}], "]"}], ";", "b"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ListSymbolQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListSymbolQ", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ListQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"SameQ", "[", 
   RowBox[{
    RowBox[{"DeleteDuplicates", "[", 
     RowBox[{"SymbolQ", "/@", 
      RowBox[{"Flatten", "[", "x", "]"}]}], "]"}], ",", 
    RowBox[{"{", "True", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`MemberQL`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MemberQL", "[", 
   RowBox[{
    RowBox[{"x_", "/;", " ", 
     RowBox[{"ListQ", "[", "x", "]"}]}], ",", "y_", ",", "z___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ElemOnLevels", "[", "x", "]"}]}], ",", "b", ",", "c"}], "}"}],
     ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"NestListQ", "[", "a", "]"}]}], ",", 
       RowBox[{"a", "=", 
        RowBox[{"{", "a", "}"}]}], ",", "Null"}], "]"}], ";", 
     RowBox[{"b", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "1"}], ",", "Null",
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"Count", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ";;", 
                  RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "y"}], "]"}]}], 
            "}"}]}], "]"}], "&"}], ",", "a"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"b", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"!", 
           RowBox[{"SameQ", "[", 
            RowBox[{"#", ",", "Null"}], "]"}]}], "&&", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", "0"}]}], "&"}]}], 
       "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"b", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", "False", ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", "z", "}"}], "\[NotEqual]", 
            RowBox[{"{", "}"}]}], "&&", 
           RowBox[{"!", 
            RowBox[{"HowAct", "[", "z", "]"}]}]}], ",", 
          RowBox[{"z", "=", "b"}], ",", "Null"}], "]"}], ";", "True"}]}], 
      "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`IsMonotonic`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IsMonotonic", "[", "x__", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", "x", "}"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{
        RowBox[{"{", "x", "}"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"StringQ", "[", 
          RowBox[{
           RowBox[{"{", "x", "}"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
         RowBox[{"ToCharacterCode", "[", 
          RowBox[{
           RowBox[{"{", "x", "}"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "\"\<Err\>\""}], 
        "]"}]}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"c", "===", "\"\<Err\>\""}], ",", 
      RowBox[{"Return", "[", 
       RowBox[{"Defer", "[", 
        RowBox[{"IsMonotonic", "[", "x", "]"}], "]"}], "]"}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"c", "\[Equal]", 
         RowBox[{"Sort", "[", 
          RowBox[{"c", ",", 
           RowBox[{
            RowBox[{"#1", ">", "#2"}], "&"}]}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "a", "]"}], ">", "1"}], "&&", 
            RowBox[{"!", 
             RowBox[{"HowAct", "[", 
              RowBox[{"a", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], ",", 
           RowBox[{"ToExpression", "[", 
            RowBox[{
             RowBox[{"ToString", "[", 
              RowBox[{"a", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<=\>\"", 
             "<>", "\"\<\\\"Decrease\\\"\>\""}], "]"}], ",", "Null"}], "]"}], 
         ";", "\[IndentingNewLine]", "True"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"c", "\[Equal]", 
           RowBox[{"Sort", "[", 
            RowBox[{"c", ",", 
             RowBox[{
              RowBox[{"#1", "<", "#2"}], "&"}]}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "a", "]"}], ">", "1"}], "&&", 
              RowBox[{"!", 
               RowBox[{"HowAct", "[", 
                RowBox[{"a", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], ",", 
             RowBox[{"ToExpression", "[", 
              RowBox[{
               RowBox[{"ToString", "[", 
                RowBox[{"a", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<=\>\"", 
               "<>", "\"\<\\\"Increase\\\"\>\""}], "]"}], ",", "Null"}], 
            "]"}], ";", "True"}], ",", "False"}], "]"}]}], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ListStrQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListStrQ", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ListQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Length", "[", 
     RowBox[{"Select", "[", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"StringQ", "[", "#", "]"}], "&"}]}], "]"}], "]"}], "\[Equal]", 
    RowBox[{"Length", "[", "x", "]"}]}], "&&", 
   RowBox[{
    RowBox[{"Length", "[", "x", "]"}], "\[NotEqual]", 
    "0"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Contexts1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Contexts1", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Contexts", "[", "]"}]}], ",", "c", ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "b", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"b", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"DeleteDuplicates", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{"StringPosition", "[", 
                RowBox[{"c", ",", "\"\<`\>\""}], "]"}], "]"}], "]"}], "]"}], 
            "\[Equal]", "1"}], "&&", 
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{"c", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", 
                RowBox[{"-", "1"}]}], "}"}]}], "]"}], "\[Equal]", 
            "\"\<`\>\""}]}], ",", 
          RowBox[{"a", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"a", ",", "c"}], "]"}]}], ",", 
          RowBox[{"Next", "[", "]"}]}], "]"}]}]}], "]"}], ";", "a"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`UserPackTempVars`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UserPackTempVars", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ContextQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", "}"}]}], ",", "p", ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"Names", "[", 
        RowBox[{"x", "<>", "\"\<*\>\""}], "]"}]}], ",", 
      RowBox[{"h", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Quiet", "[", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"p", "=", 
            RowBox[{"Definition2", "[", "#", "]"}]}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"UnevaluatedQ", "[", 
              RowBox[{"Definition2", ",", "#"}], "]"}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"d", ",", "#"}], "]"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"p", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
                 RowBox[{"{", "}"}]}], "&&", 
                RowBox[{
                 RowBox[{"p", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
                 "\"\<Undefined\>\""}]}], ",", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"a", ",", "#"}], "]"}], ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"p", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
                  RowBox[{"{", "Temporary", "}"}]}], ",", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"b", ",", "#"}], "]"}], ",", "6"}], "]"}]}], 
              "]"}]}], "]"}]}], "}"}], "&"}], ",", "c"}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"p", "=", 
           RowBox[{"Flatten", "[", 
            RowBox[{"StringPosition", "[", 
             RowBox[{"#", ",", "\"\<$\>\""}], "]"}], "]"}]}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"p", "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}], "\[Equal]", 
             RowBox[{"StringLength", "[", "#", "]"}]}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"a", ",", "#"}], "]"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"IntegerQ", "[", 
               RowBox[{"ToExpression", "[", 
                RowBox[{"StringTake", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"p", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "+", "1"}], ",", 
                    RowBox[{"StringLength", "[", "#", "]"}]}], "}"}]}], "]"}],
                 "]"}], "]"}], ",", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"h", ",", "#"}], "]"}]}], "]"}]}], "]"}]}], "}"}], 
        "&"}], ",", "b"}], "]"}], ";", " ", 
     RowBox[{"{", 
      RowBox[{"d", ",", "a", ",", "h"}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`TempInPack`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TempInPack", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ContextQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Names", "[", 
     RowBox[{"x", "<>", "\"\<*\>\""}], "]"}], ",", 
    RowBox[{
     RowBox[{"TemporaryQ", "[", "#", "]"}], "&"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`$UserContexts`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"$UserContexts", ":=", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"UserPackTempVars", "[", "#", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"2", ";;", "3"}], "]"}], "]"}], "]"}], "\[NotEqual]", 
          RowBox[{"{", "}"}]}], ",", "#"}], "]"}], "&"}], ",", 
      RowBox[{"Select", "[", 
       RowBox[{"$Packages", ",", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<Global`\>\"", ",", "\"\<System`\>\""}], "}"}], ",", 
            "#"}], "]"}]}], "&"}]}], "]"}]}], "]"}], ",", 
    RowBox[{
     RowBox[{"!", 
      RowBox[{"SameQ", "[", 
       RowBox[{"#", ",", "Null"}], "]"}]}], "&"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SystemSymbols`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SystemSymbols", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Names", "[", "\"\<*\>\"", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"FromCharacterCode", ",", 
           RowBox[{"Range", "[", 
            RowBox[{"63488", ";", "63596"}], "]"}]}], "]"}], ",", 
         RowBox[{"CNames", "[", "\"\<Global`\>\"", "]"}]}], "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"ActUcontexts", "[", "590", "]"}]}]}], "}"}], ",", 
    RowBox[{"MinusList", "[", 
     RowBox[{"a", ",", 
      RowBox[{"Join", "[", 
       RowBox[{"b", ",", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"CNames", "[", "#", "]"}], "&"}], ",", "c"}], "]"}], 
         "]"}]}], "]"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SubLists`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SubLists", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ListQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"NestListQ1", "[", "x", "]"}]}], ",", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{"ToString", "[", "x", "]"}]}], ";", 
       RowBox[{"b", "=", 
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Flatten", "[", 
          RowBox[{"StringPosition", "[", 
           RowBox[{"a", ",", "\"\<{\>\""}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "b", "]"}]}], ",", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"c", ",", 
            RowBox[{
             RowBox[{"SubStrSymbolParity1", "[", 
              RowBox[{
               RowBox[{"StringTake", "[", 
                RowBox[{"a", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"b", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], ",", 
                   RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "\"\<{\>\"", 
               ",", "\"\<}\>\""}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";", 
          RowBox[{"k", "++"}]}]}], "]"}], ";", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"c", "[", 
          RowBox[{"[", 
           RowBox[{"2", ";;", 
            RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ContextQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContextQ", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"StringQ", "[", "x", "]"}], "&&", 
   RowBox[{
    RowBox[{"StringLength", "[", "x", "]"}], ">", "1"}], "&&", 
   RowBox[{"Quiet", "[", 
    RowBox[{"SymbolQ", "[", 
     RowBox[{"Symbol", "[", 
      RowBox[{"StringTake", "[", 
       RowBox[{"x", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "]"}], "]"}], "]"}], "]"}], "&&", 
   RowBox[{
    RowBox[{"StringTake", "[", 
     RowBox[{"x", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", 
        RowBox[{"-", "1"}]}], "}"}]}], "]"}], "\[Equal]", 
    "\"\<`\>\""}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ContextToSymbol`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContextToSymbol", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"SymbolQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"ContextQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ToString", "[", "x", "]"}]}], ",", " ", 
      RowBox[{"b", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}]}], ",", "c", 
      ",", "d", ",", 
      RowBox[{"h", "=", 
       RowBox[{"Attributes", "[", "x", "]"}]}], ",", "f"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"b", "===", 
       RowBox[{"{", "$Failed", "}"}]}], ",", "$Failed", ",", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"$ContextPath", ",", "y"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"f", "=", 
        RowBox[{"a", "<>", "\"\<.mx\>\""}]}], ";", " ", 
       RowBox[{
        RowBox[{"Attributes", "[", "x", "]"}], "=", 
        RowBox[{"{", "}"}]}], ";", " ", 
       RowBox[{"Quiet", "[", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"y", "<>", "#"}], "&"}], ",", "b"}], "]"}], "]"}], "]"}], 
       ";", " ", 
       RowBox[{"c", "=", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"y", "<>", "a"}], "]"}]}], ";", " ", 
       RowBox[{"ToExpression", "[", 
        RowBox[{"y", "<>", "a", "<>", "\"\<::usage = \>\"", "<>", 
         RowBox[{"ToString1", "[", 
          RowBox[{"d", "=", 
           RowBox[{"ToExpression", "[", 
            RowBox[{"a", "<>", "\"\<::usage\>\""}], "]"}]}], "]"}]}], "]"}], 
       ";", " ", 
       RowBox[{"DumpSave", "[", 
        RowBox[{"f", ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "d"}], "}"}]}], "]"}], ";", " ", 
       RowBox[{"Remove", "[", "x", "]"}], ";", " ", 
       RowBox[{"Get", "[", "f", "]"}], ";", 
       RowBox[{"ToExpression", "[", 
        RowBox[{"\"\< SetAttributes[\>\"", "<>", "a", "<>", "\"\<,\>\"", "<>", 
         RowBox[{"ToString", "[", "h", "]"}], "<>", "\"\<]\>\""}], "]"}], ";",
        " ", 
       RowBox[{"DeleteFile", "[", "f", "]"}], ";", " ", 
       RowBox[{"{", 
        RowBox[{"c", ",", "y"}], "}"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ToContext`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ToContext", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"SymbolQ", "[", "x", "]"}], "||", 
      RowBox[{
       RowBox[{"ListQ", "[", "x", "]"}], "&&", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Map", "[", 
          RowBox[{"SymbolQ", ",", "x"}], "]"}], "]"}], "\[Equal]", 
        RowBox[{"{", "True", "}"}]}]}]}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"ContextQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"h", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", "x", "}"}], "]"}]}], ",", "a", ",", "attr", ",", "b", 
      ",", "c"}], "}"}], ",", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"PureDefinition", ",", "h"}], "]"}]}], ";", " ", 
     RowBox[{"attr", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"Attributes", ",", "h"}], "]"}]}], ";", " ", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ClearAttributes", "[", 
         RowBox[{"#", ",", "Protected"}], "]"}], "&"}], ",", "h"}], "]"}], 
     ";", " ", 
     RowBox[{"Map", "[", 
      RowBox[{"Remove", ",", "h"}], "]"}], ";", 
     RowBox[{"Quiet", "[", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "\"\<BeginPackage[\\\"\>\"", "<>", "y", "<>", "\"\<\\\"]\>\""}], ",", 
         RowBox[{"ToString", "[", 
          RowBox[{"Flatten", "[", "a", "]"}], "]"}], ",", 
         RowBox[{
         "\"\<Map[Attributes[#[[1]]] = #[[2]]&,\>\"", "<>", 
          "\"\<Partition[Riffle[\>\"", "<>", 
          RowBox[{"ToString", "[", "h", "]"}], "<>", "\"\<,\>\"", "<>", 
          RowBox[{"ToString", "[", "attr", "]"}], "<>", "\"\<], 2]]\>\""}], 
         ",", "\"\<EndPackage[]\>\""}], "}"}], "]"}], "]"}], ";"}]}], " ", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ContextToSymbol1`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContextToSymbol1", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"AladjevProcedures`SymbolQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"AladjevProcedures`ContextQ", "[", "y", "]"}]}], ",", "z___"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"b", "=", 
       RowBox[{"ToString", "[", "x", "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Off", "[", 
      RowBox[{"General", "::", "shdw"}], "]"}], ";", 
     RowBox[{"a", "=", 
      RowBox[{"StringReplace", "[", 
       RowBox[{
       "\"\<BeginPackage[\\\"AvzAgnVsvArtKr`\\\"]\\n90::usage=74\\nBegin[\\\"`\
90`\\\"]\\n500\\nEnd[]\\nEndPackage[]\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<AvzAgnVsvArtKr`\>\"", "\[Rule]", "y"}], ",", 
          RowBox[{"\"\<74\>\"", "\[Rule]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"AladjevProcedures`PureDefinition", "[", "x", "]"}], "===",
               "$Failed"}], ",", "\"\<\\\"\\\"\>\"", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"{", "z", "}"}], "\[NotEqual]", 
                 RowBox[{"{", "}"}]}], "&&", 
                RowBox[{"StringQ", "[", "z", "]"}]}], ",", 
               RowBox[{"AladjevProcedures`ToString1", "[", "z", "]"}], ",", 
               RowBox[{"AladjevProcedures`ToString1", "[", 
                RowBox[{"\"\<Help on \>\"", "<>", "b"}], "]"}]}], "]"}]}], 
            "]"}]}], ",", 
          RowBox[{"\"\<90\>\"", "\[Rule]", "b"}], ",", 
          RowBox[{"\"\<500\>\"", "\[Rule]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"AladjevProcedures`PureDefinition", "[", "x", "]"}], "===",
               "$Failed"}], ",", "b", ",", 
             RowBox[{"AladjevProcedures`PureDefinition", "[", "x", "]"}]}], 
            "]"}]}]}], "}"}]}], "]"}]}], ";", " ", 
     RowBox[{"Remove", "[", "x", "]"}], ";", " ", 
     RowBox[{"ToExpression", "[", "a", "]"}], ";", "  ", 
     RowBox[{"On", "[", 
      RowBox[{"General", "::", "shdw"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ContextToSymbol2`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContextToSymbol2", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"SymbolQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"ContextQ", "[", "y", "]"}]}], ",", "z___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"ToString", "[", "x", "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{
        RowBox[{"ToString", "[", "x", "]"}], "<>", "\"\<.mx\>\""}]}], ",", 
      "d", ",", "h", ",", "t"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"a", "===", 
       RowBox[{"{", "$Failed", "}"}]}], ",", "$Failed", ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"t", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"StringQ", "[", 
            RowBox[{"Set", "[", 
             RowBox[{"t", ",", 
              RowBox[{"ToExpression", "[", 
               RowBox[{"b", "<>", "\"\<::usage\>\""}], "]"}]}], "]"}], 
            "]"}]}], ",", "Nothing", ",", 
          RowBox[{"y", "<>", "b", "<>", "\"\<::usage = \>\"", "<>", 
           RowBox[{"ToString1", "[", "t", "]"}]}]}], "]"}]}], ";", " ", 
       RowBox[{"a", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"a", ",", "t"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Map", "[", 
        RowBox[{"ToExpression", ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"StringReplace", "[", 
             RowBox[{"#", ",", 
              RowBox[{
               RowBox[{"b", "<>", "\"\<[\>\""}], "\[Rule]", 
               RowBox[{"y", "<>", "b", "<>", "\"\<[\>\""}]}], ",", "1"}], 
             "]"}], "&"}], ",", "a"}], "]"}]}], "]"}], ";", " ", 
       RowBox[{"d", "=", 
        RowBox[{"Attributes", "[", "x", "]"}]}], ";", " ", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"$ContextPath", ",", "y"}], "]"}], ";", " ", 
       RowBox[{"DumpSave", "[", 
        RowBox[{"c", ",", "y"}], "]"}], ";", " ", 
       RowBox[{"Unprotect", "[", 
        RowBox[{"x", ",", "h"}], "]"}], ";", " ", 
       RowBox[{"ClearAll", "[", 
        RowBox[{"x", ",", "h"}], "]"}], ";", " ", 
       RowBox[{"Get", "[", "c", "]"}], ";", " ", 
       RowBox[{"ToExpression", "[", 
        RowBox[{
        "\"\<SetAttributes[\>\"", "<>", "y", "<>", "b", "<>", "\"\<,\>\"", "<>", 
         RowBox[{"ToString", "[", "d", "]"}], "<>", "\"\<]\>\""}], "]"}], ";",
        " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "z", "}"}], "==", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{
          RowBox[{"DeleteFile", "[", "c", "]"}], ";", " ", 
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ContextSymbol`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContextSymbol", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"SymbolQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"CNames", "[", "#", "]"}], ",", 
            RowBox[{"ToString", "[", "x", "]"}]}], "]"}], "||", 
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"CNames", "[", "#", "]"}], ",", 
            RowBox[{"#", "<>", 
             RowBox[{"ToString", "[", "x", "]"}]}]}], "]"}]}], ",", "#"}], 
        "]"}], "&"}], ",", 
      RowBox[{"DeleteDuplicates", "[", "$ContextPath", "]"}]}], "]"}], ",", 
    RowBox[{
     RowBox[{"!", 
      RowBox[{"SameQ", "[", 
       RowBox[{"#1", ",", "Null"}], "]"}]}], "&"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ContextRepMx`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContextRepMx", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
       "\"\<mx\>\""}]}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"ContextQ", "[", "y", "]"}]}], ",", "z___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ContextMXfile", "[", "x", "]"}]}], ",", "b", ",", "c", ",", 
      "t"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"SameQ", "[", 
       RowBox[{"a", ",", "$Failed"}], "]"}], ",", "$Failed", ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", "z", "}"}], "\[NotEqual]", 
           RowBox[{"{", "}"}]}], "&&", 
          RowBox[{
           RowBox[{"FileExtension", "[", "z", "]"}], "\[Equal]", 
           "\"\<mx\>\""}]}], ",", 
         RowBox[{"c", "=", "z"}], ",", 
         RowBox[{"c", "=", "x"}]}], "]"}], ";", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"$Packages", ",", "a"}], "]"}], ",", 
         RowBox[{"t", "=", "74"}], ",", 
         RowBox[{"Get", "[", "x", "]"}]}], "]"}], ";", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"b", "=", 
        RowBox[{"CNames", "[", "a", "]"}]}], ";", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Quiet", "[", 
           RowBox[{"ContextToSymbol", "[", 
            RowBox[{"#", ",", "y"}], "]"}], "]"}], "&"}], ",", "b"}], "]"}], 
       ";", "  ", 
       RowBox[{"ToExpression", "[", 
        RowBox[{"\"\<RemovePackage[\>\"", "<>", 
         RowBox[{"ToString1", "[", "a", "]"}], "<>", "\"\<]\>\""}], "]"}], 
       ";", " ", 
       RowBox[{"DumpSave", "[", 
        RowBox[{"c", ",", "y"}], "]"}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"t", "\[Equal]", "74"}], ",", 
         RowBox[{"Get", "[", "c", "]"}], ",", 
         RowBox[{"RemovePackage", "[", "y", "]"}]}], "]"}], ";", " ", 
       RowBox[{"{", 
        RowBox[{"c", ",", "a", ",", "y"}], "}"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`RemoveNames`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RemoveNames", "[", "x___", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Names", "[", "\"\<`*\>\"", "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"Definition", "[", "#", "]"}], "]"}], "\[NotEqual]", 
           "\"\<Null\>\""}], "&"}]}], "]"}]}], ",", "b"}], "}"}], ",", 
    RowBox[{
     RowBox[{"ToExpression", "[", 
      RowBox[{"\"\<Remove[\>\"", "<>", 
       RowBox[{"StringTake", "[", 
        RowBox[{
         RowBox[{"ToString", "[", 
          RowBox[{"MinusList", "[", 
           RowBox[{"a", ",", 
            RowBox[{"Select", "[", 
             RowBox[{"a", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"ProcQ", "[", "#", "]"}], "||", 
                RowBox[{"!", 
                 RowBox[{"SameQ", "[", 
                  RowBox[{
                   RowBox[{"ToString", "[", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{"DefFunc", "[", "#", "]"}], "]"}], "]"}], ",", 
                   "\"\<Null\>\""}], "]"}]}], "||", 
                RowBox[{"Quiet", "[", 
                 RowBox[{"Check", "[", 
                  RowBox[{
                   RowBox[{"QFunction", "[", "#", "]"}], ",", "False"}], 
                  "]"}], "]"}]}], "&"}]}], "]"}]}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", 
           RowBox[{"-", "2"}]}], "}"}]}], "]"}], "<>", "\"\<]\>\""}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"a", ",", 
        RowBox[{
         RowBox[{"ProcQ", "[", "#", "]"}], "&"}]}], "]"}]}], ";", " ", 
     RowBox[{"{", 
      RowBox[{"b", ",", 
       RowBox[{"MinusList", "[", 
        RowBox[{"a", ",", "b"}], "]"}]}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`RhsLhs`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RhsLhs", "[", "x__", "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Head", "[", 
        RowBox[{
         RowBox[{"{", "x", "}"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"InputForm", "[", 
         RowBox[{
          RowBox[{"{", "x", "}"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], ",", "d", ",", 
      RowBox[{"h", "=", 
       RowBox[{"{", "x", "}"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Greater", ",", "\"\<>\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"GreaterEqual", ",", "\"\<>=\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Span", ",", "\"\<;;\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"And", ",", "\"\<&&\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"LessEqual", ",", "\"\<<=\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Unequal", ",", "\"\<!=\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Or", ",", "\"\<||\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Rule", ",", "\"\<->\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Less", ",", "\"\<<\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Plus", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<+\>\"", ",", "\"\<-\>\""}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Power", ",", "\"\<^\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Equal", ",", "\"\<==\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"NonCommutativeMultiply", ",", "\"\<**\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Times", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<*\>\"", ",", "\"\</\>\""}], "}"}]}], "}"}]}], 
        "}"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "h", "]"}], "<", "2"}], "||", 
        RowBox[{"!", 
         RowBox[{"MemberQ", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Lhs\>\"", ",", "\"\<Rhs\>\""}], "}"}], ",", 
           RowBox[{"h", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}]}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"Defer", "[", 
         RowBox[{"RhsLhs", "[", "x", "]"}], "]"}], "]"}], ",", "Null"}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"!", 
         RowBox[{"MemberQ", "[", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", "c", "]"}], ",", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"StringQ", "[", "#", "]"}]}], "&"}]}], "]"}], ",", 
           "a"}], "]"}]}], "||", 
        RowBox[{"a", "\[Equal]", "Symbol"}]}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"Defer", "[", 
         RowBox[{"RhsLhs", "[", "x", "]"}], "]"}], "]"}], ",", "Null"}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"d", "=", 
      RowBox[{"StringPosition", "[", 
       RowBox[{"b", ",", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"c", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "a"}], "&"}]}], 
            "]"}], ",", "1"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
     RowBox[{"a", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Select", "[", 
        RowBox[{"c", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "a"}], "&"}]}], "]"}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "h", "]"}], "\[GreaterEqual]", "3"}], "&&", 
        RowBox[{"!", 
         RowBox[{"HowAct", "[", 
          RowBox[{"h", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}]}]}], ",", 
       RowBox[{"ToExpression", "[", 
        RowBox[{
         RowBox[{"ToString", "[", 
          RowBox[{"h", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}], "<>", "\"\<=\>\"", "<>", 
         RowBox[{"ToString1", "[", "a", "]"}]}], "]"}], ",", "Null"}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"h", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "\"\<Lhs\>\""}], ",", 
        RowBox[{"StringTrim", "[", 
         RowBox[{"StringTake", "[", 
          RowBox[{"b", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"d", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], "]"}], 
         "]"}], ",", 
        RowBox[{"StringTrim", "[", 
         RowBox[{"StringTake", "[", 
          RowBox[{"b", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"d", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}]}], "]"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`RhsLhs1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RhsLhs1", "[", 
   RowBox[{"x_", ",", "y__"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Head", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}]}], ",", "d", ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Greater", ",", "\"\<>\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"GreaterEqual", ",", "\"\<>=\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"And", ",", "\"\<&&\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"LessEqual", ",", "\"\<<=\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Unequal", ",", "\"\<!=\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Or", ",", "\"\<||\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Rule", ",", "\"\<\[Dash]>\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Less", ",", "\"\<<\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Plus", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<+\>\"", ",", "\"\<\[Dash]\>\""}], "}"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"Power", ",", "\"\<^\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Equal", ",", "\"\<==\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Span", ",", "\"\<;;\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"NonCommutativeMultiply", ",", "\"\<**\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Times", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<*\>\"", ",", "\"\</\>\""}], "}"}]}], "}"}]}], 
        "}"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", "c", "]"}], ",", "a"}], "]"}]}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"Defer", "[", 
         RowBox[{"RhsLhs1", "[", 
          RowBox[{"x", ",", "y"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"d", "=", 
        RowBox[{"Level", "[", 
         RowBox[{"x", ",", "1"}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "b", "]"}], ">", "2"}], "&&", 
        RowBox[{"!", 
         RowBox[{"HowAct", "[", 
          RowBox[{"b", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}]}]}], ",", 
       RowBox[{"ToExpression", "[", 
        RowBox[{
         RowBox[{"ToString", "[", 
          RowBox[{"b", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}], "<>", "\"\< = \>\"", "<>", 
         RowBox[{"ToString1", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"Select", "[", 
            RowBox[{"c", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "===", "a"}], "&"}]}], "]"}], 
           "]"}], "]"}]}], "]"}], ",", "Null"}], "]"}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"b", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "\"\<Lhs\>\""}], ",", 
       RowBox[{"d", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"b", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "\"\<Rhs\>\""}], ",", 
         RowBox[{"d", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"Defer", "[", 
          RowBox[{"RhsLhs1", "[", 
           RowBox[{"x", ",", "y"}], "]"}], "]"}]}], "]"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`BitSet1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BitSet1", "[", 
   RowBox[{
    RowBox[{"n_", "/;", 
     RowBox[{
      RowBox[{"IntegerQ", "[", "n", "]"}], "&&", 
      RowBox[{"n", "\[GreaterEqual]", "0"}]}]}], ",", 
    RowBox[{"p_", "/;", 
     RowBox[{"ListQ", "[", "p", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"b", "=", "1"}], ",", "c", ",", "d", ",", 
      RowBox[{"a", "=", 
       RowBox[{"ToExpression", "[", 
        RowBox[{"Characters", "[", 
         RowBox[{"IntegerString", "[", 
          RowBox[{"n", ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
      RowBox[{"h", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ListListQ", "[", "p", "]"}], ",", "p", ",", 
         RowBox[{"{", "p", "}"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ListListQ", "[", "h", "]"}], "&&", 
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"Select", "[", 
           RowBox[{"h", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "2"}], "&&", 
              RowBox[{"IntegerQ", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "&&", 
              RowBox[{"IntegerQ", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "]"}], "&&", 
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}], ",", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "&"}]}], "]"}], 
          "]"}], "\[Equal]", 
         RowBox[{"Length", "[", "h", "]"}]}]}], ",", "Null", ",", 
       RowBox[{"Return", "[", 
        RowBox[{"Defer", "[", 
         RowBox[{"BitSet1", "[", 
          RowBox[{"n", ",", "p"}], "]"}], "]"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{"b", ",", 
       RowBox[{"b", "\[LessEqual]", 
        RowBox[{"Length", "[", "h", "]"}]}], ",", 
       RowBox[{"b", "++"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"c", ",", "d"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"h", "[", 
             RowBox[{"[", "b", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"h", "[", 
             RowBox[{"[", "b", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"c", "\[LessEqual]", 
           RowBox[{"Length", "[", "a", "]"}]}], ",", 
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"[", "c", "]"}], "]"}], "=", "d"}], ",", "Null"}], 
         "]"}]}]}], "]"}], ";", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "[", 
         RowBox[{"[", "k", "]"}], "]"}], "*", 
        RowBox[{"2", "^", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Length", "[", "a", "]"}], "-", "k"}], ")"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", 
         RowBox[{"Length", "[", "a", "]"}]}], "}"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`OP`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"OP", "[", "expr_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"InputForm", "[", "expr", "]"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", "c", ",", "d", ",", "k", ",", "h"}], "}"}], 
    ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"StringTake", "[", 
         RowBox[{"a", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "]"}], "\[Equal]", "\"\<]\>\""}], 
       ",", 
       RowBox[{"a", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Ind", "[", "expr", "]"}], "]"}]}], ",", 
       RowBox[{"a", "=", 
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Quiet", "[", 
          RowBox[{"ToList", "[", "expr", "]"}], "]"}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Label", "[", "ArtKr", "]"}], ";", 
     RowBox[{"d", "=", 
      RowBox[{"Length", "[", "a", "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"h", "=", 
         RowBox[{"a", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", 
        RowBox[{"c", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"ToList", "[", "h", "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"DeleteDuplicates", "[", "c", "]"}], ",", "$Failed"}], 
           "]"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"b", ",", 
            RowBox[{"Ind", "[", "h", "]"}]}], "]"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"b", ",", "c"}], "]"}]}], "]"}]}]}], "]"}], ";", 
     RowBox[{"a", "=", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Flatten", "[", "b", "]"}], "]"}]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"d", "\[Equal]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{"Sort", "[", "a", "]"}], ",", 
       RowBox[{
        RowBox[{"b", "=", 
         RowBox[{"{", "}"}]}], ";", 
        RowBox[{"Goto", "[", "ArtKr", "]"}]}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Op`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Op", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", "}"}]}], ",", "b"}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ListQ", "[", "x", "]"}], ",", 
       RowBox[{"a", "=", "x"}], ",", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"a", "=", 
          RowBox[{"Insert", "[", 
           RowBox[{"a", ",", 
            RowBox[{
             RowBox[{"Part", "[", "x", "]"}], "[", 
             RowBox[{"[", "b", "]"}], "]"}], ",", 
            RowBox[{"-", "1"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"b", ",", 
           RowBox[{"Length", "[", "x", "]"}]}], "}"}]}], "]"}]}], "]"}], ";", 
     "a"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`FullFormF`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FullFormF", "[", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
   "And", ",", "AngleBracket", ",", "CapitalDifferentialD", ",", "CenterDot", 
    ",", "Complex", ",", "Condition", ",", "Congruent", ",", "Decrement", ",",
     "DifferentialD", ",", "DoubleVerticalBar", ",", "DirectedEdge", ",", 
    "Element", ",", "Equal", ",", "Equivalent", ",", "Exists", ",", "ForAll", 
    ",", "Function", ",", "GreaterFullEqual", ",", "Greater", ",", 
    "GreaterEqual", ",", "Implies", ",", "Increment", ",", "Infinity", ",", 
    "Intersection", ",", "LeftArrow", ",", "LessEqual", ",", "Less", ",", 
    "LessFullEqual", ",", "LessLess", ",", "MessageName", ",", "MinusPlus", 
    ",", "Not", ",", "NotDoubleVerticalBar", ",", "NotCongruent", ",", 
    "NotElement", ",", "NotExists", ",", "NotReverseElement", ",", 
    "NotSubset", ",", "NotSuperset", ",", "Or", ",", "Part", ",", "Pattern", 
    ",", "Plus", ",", "PlusMinus", ",", "Power", ",", "Product", ",", 
    "Proportion", ",", "Proportional", ",", "Rational", ",", "Repeated", ",", 
    "ReverseElement", ",", "RoundImplies", ",", "Rule", ",", "RuleDelayed", 
    ",", "SameQ", ",", "Span", ",", "StringJoin", ",", "Subset", ",", 
    "SubsetEqual", ",", "Sum", ",", "Superset", ",", "SupersetEqual", ",", 
    "TildeEqual", ",", "TildeTilde", ",", "Times", ",", "UndirectedEdge", ",",
     "Unequal", ",", "Union", ",", "UpArrow", ",", "VerticalBar", ",", 
    "VerticalSeparator"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`UnDefVars`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UnDefVars", "[", "x_", "]"}], ":=", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"OP", "[", "x", "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Quiet", "[", 
       RowBox[{"ToString", "[", 
        RowBox[{"Definition", "[", "#", "]"}], "]"}], "]"}], "==", 
      "\"\<Null\>\""}], "&"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`MinusLists`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MinusLists", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"ListQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"ListQ", "[", "y", "]"}]}], ",", 
    RowBox[{"z_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", "z"}], "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", 
      RowBox[{"k", "=", "1"}], ",", "n"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"z", "\[Equal]", "1"}], ",", 
      RowBox[{"Select", "[", 
       RowBox[{"x", ",", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"y", ",", "#"}], "]"}]}], "&"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{"Intersection", "[", 
         RowBox[{"x", ",", "y"}], "]"}]}], ";", 
       RowBox[{"b", "=", 
        RowBox[{"Map", "[", 
         RowBox[{"Flatten", ",", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"Position", "[", 
               RowBox[{"x", ",", "#"}], "]"}], "&"}], "]"}], ",", "a"}], 
           "]"}]}], "]"}]}], ";", 
       RowBox[{"c", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Count", "[", 
            RowBox[{"y", ",", "#"}], "]"}], "&"}], ",", "a"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"n", "=", 
        RowBox[{"Length", "[", "b", "]"}]}], ";", 
       RowBox[{"For", "[", 
        RowBox[{"k", ",", 
         RowBox[{"k", "\[LessEqual]", "n"}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{
          RowBox[{"b", "[", 
           RowBox[{"[", "k", "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{"b", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", 
             RowBox[{"c", "[", 
              RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "]"}]}]}], "]"}], ";", 
       " ", 
       RowBox[{"c", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"GenRules", "[", 
            RowBox[{"#", ",", "Null"}], "]"}], "&"}], ",", "b"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"ReplacePart", "[", 
          RowBox[{"x", ",", 
           RowBox[{"Flatten", "[", "c", "]"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"SameQ", "[", 
            RowBox[{"#", ",", "Null"}], "]"}]}], "&"}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`UnDefVars1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UnDefVars1", "[", "x_", "]"}], ":=", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"ExtrVarsOfStr", "[", 
     RowBox[{
      RowBox[{"ToString", "[", "x", "]"}], ",", "2"}], "]"}], ",", 
    RowBox[{
     RowBox[{"!", 
      RowBox[{"SystemQ", "[", "#", "]"}]}], "&"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`MultEntryList`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MultEntryList", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ListQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"Length", "[", "#", "]"}]}], "}"}], "&"}], ",", 
    RowBox[{"Gather", "[", 
     RowBox[{"Flatten", "[", "x", "]"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ContextActQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContextActQ", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ContextQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"MemberQ", "[", 
   RowBox[{
    RowBox[{"DeleteDuplicates", "[", 
     RowBox[{"Contexts1", "[", "]"}], "]"}], ",", "x"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ReloadPackage`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReloadPackage", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
       "\"\<m\>\""}]}]}], ",", "y___List", ",", "t___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"NamesMPackage", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"ContextMfile", "[", "x", "]"}]}], ",", 
      RowBox[{"c", "=", "\"\<$Art27$Kr20$.txt\>\""}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "y", "}"}], "\[NotEqual]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"ToExpression", "[", 
          RowBox[{"Map14", "[", 
           RowBox[{"StringJoin", ",", 
            RowBox[{"Map", "[", 
             RowBox[{"ToString", ",", "y"}], "]"}], ",", "\"\<[\>\"", ",", 
            "90"}], "]"}], "]"}], ",", 
         RowBox[{"{", "}"}]}], "]"}]}], ",", "p", ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Put", "[", "c", "]"}], ";", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{
        RowBox[{"p", "=", 
         RowBox[{"a", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", 
        RowBox[{"PutAppend", "[", 
         RowBox[{
          RowBox[{"StringReplace", "[", 
           RowBox[{
            RowBox[{"ToString1", "[", 
             RowBox[{"ToExpression", "[", 
              RowBox[{"\"\<Definition[\>\"", "<>", "p", "<>", "\"\<]\>\""}], 
              "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"b", "<>", "p", "<>", "\"\<`\>\""}], "\[Rule]", 
             "\"\<\>\""}]}], "]"}], ",", "c"}], "]"}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"d", "==", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"\"\<Clear[\>\"", "<>", 
          RowBox[{"StringTake", "[", 
           RowBox[{
            RowBox[{"ToString", "[", "a", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", 
              RowBox[{"-", "2"}]}], "}"}]}], "]"}], "<>", "\"\<]\>\""}], 
         "]"}], ",", "Null"}], "]"}], "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"b", "!=", "\"\<EndOfFile\>\""}], ",", 
        RowBox[{
         RowBox[{"b", "=", 
          RowBox[{"ToString", "[", 
           RowBox[{"Read", "[", "c", "]"}], "]"}]}], ";", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"b", "===", "\"\<EndOfFile\>\""}], ",", 
           RowBox[{"Break", "[", "]"}]}], "]"}], ";", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"d", "\[Equal]", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{
            RowBox[{"Quiet", "[", 
             RowBox[{"ToExpression", "[", "b", "]"}], "]"}], ";", 
            RowBox[{"Continue", "[", "]"}]}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", "t", "}"}], "\[Equal]", 
                 RowBox[{"{", "}"}]}], ",", "MemberQ", ",", 
                RowBox[{"!", "MemberQ"}]}], "]"}], "[", 
              RowBox[{"d", ",", 
               RowBox[{"StringTake", "[", 
                RowBox[{"b", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", 
                   RowBox[{"Quiet", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"b", ",", "\"\<[\>\"", ",", "1"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}],
               "]"}], ",", 
             RowBox[{
              RowBox[{"Quiet", "[", 
               RowBox[{"ToExpression", "[", "b", "]"}], "]"}], ";", 
              RowBox[{"Break", "[", "]"}]}], ",", 
             RowBox[{"Continue", "[", "]"}]}], "]"}]}], "]"}]}]}], "]"}]}], 
     ";", " ", 
     RowBox[{"DeleteFile", "[", 
      RowBox[{"Close", "[", "c", "]"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ReloadPackage1`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReloadPackage1", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
       "\"\<m\>\""}]}]}], ",", 
    RowBox[{"y_:", " ", "0"}], ",", 
    RowBox[{"t_:", " ", "0"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"NamesMPackage", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"ReadFullFile", "[", "x", "]"}]}], ",", "c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"ToString", ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", "y", "}"}], "]"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"c", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"SubsString", "[", 
           RowBox[{"b", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
              "\"\<*)(*Begin[\\\"`\>\"", "<>", "#", "<>", 
               "\"\<`\\\"]*)(*\>\""}], ",", "\"\<*)(*End[]*)\>\""}], "}"}], 
            ",", "90"}], "]"}], "&"}], ",", "a"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringReplace", "[", 
          RowBox[{"#", ",", 
           RowBox[{"\"\<*)(*\>\"", "\[Rule]", "\"\<\>\""}]}], "]"}], "&"}], 
        ",", "c"}], "]"}]}], ";", " ", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"d", "\[Equal]", 
           RowBox[{"{", "\"\<0\>\"", "}"}]}], ",", 
          RowBox[{"Quiet", "[", 
           RowBox[{"ToExpression", "[", "#", "]"}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"ListQ", "[", "y", "]"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", "t", "}"}], "\[Equal]", 
               RowBox[{"{", "0", "}"}]}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"MemberQ", "[", 
                 RowBox[{"d", ",", 
                  RowBox[{"StringTake", "[", 
                   RowBox[{"#", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<[\>\"", ",", "\"\< :=\>\"", ",", "\"\<=\>\""}], 
                    "}"}]}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}]}], 
                 "]"}], ",", 
                RowBox[{"ToExpression", "[", "#", "]"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"!", 
                   RowBox[{"MemberQ", "[", 
                    RowBox[{"d", ",", 
                    RowBox[{"StringTake", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<[\>\"", ",", "\"\< :=\>\"", ",", "\"\<=\>\""}], 
                    "}"}]}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}]}], 
                    "]"}]}], ",", 
                  RowBox[{"Quiet", "[", 
                   RowBox[{"ToExpression", "[", "#", "]"}], "]"}]}], "]"}]}], 
               "]"}]}], "]"}]}], "]"}]}], "]"}], "&"}], ",", "c"}], "]"}], 
     ";"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DefWithContext`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DefWithContext", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
     RowBox[{
      RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", "\"\<m\>\""}]}]}],
    "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ContextMfile", "[", "x", "]"}]}], ",", "b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"CNames", "[", "a", "]"}]}], ";", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"StringFreeQ", "[", 
           RowBox[{
            RowBox[{"Definition4", "[", "#", "]"}], ",", 
            RowBox[{"a", "<>", "#", "<>", "\"\<`\>\""}]}], "]"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"c", ",", "#"}], "]"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"d", ",", "#"}], "]"}]}], "]"}], "&"}], ",", "b"}], "]"}], 
     ";", " ", 
     RowBox[{"{", 
      RowBox[{"c", ",", "d"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`TypeWinMx`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TypeWinMx", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
     RowBox[{
      RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
      "\"\<mx\>\""}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"StringFreeQ", "[", 
       RowBox[{"$OperatingSystem", ",", "\"\<Windows\>\""}], "]"}], ",", 
      "$Failed", ",", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Characters", "[", 
            RowBox[{"ReadString", "[", "x", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"SymbolQ", "[", "#", "]"}], "||", 
             RowBox[{"Quiet", "[", 
              RowBox[{"IntegerQ", "[", 
               RowBox[{"ToExpression", "[", "#", "]"}], "]"}], "]"}], "||", 
             RowBox[{"#", "\[Equal]", "\"\<-\>\""}]}], "&"}]}], "]"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"d", "=", 
        RowBox[{"Map", "[", 
         RowBox[{"FromCharacterCode", ",", 
          RowBox[{"Range", "[", 
           RowBox[{"2", ",", "27"}], "]"}]}], "]"}]}], ";", " ", 
       RowBox[{"b", "=", 
        RowBox[{"StringPosition", "[", 
         RowBox[{"a", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<CONT\>\"", ",", "\"\<ENDCONT\>\""}], "}"}]}], "]"}]}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"b", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
          RowBox[{
           RowBox[{"b", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{"c", "=", 
          RowBox[{"StringCases1", "[", 
           RowBox[{"a", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<Windows\>\"", ",", "\"\<ENDCONT\>\""}], "}"}], ",", 
            "\"\<___\>\""}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"b", "=", 
           RowBox[{"StringPosition", "[", 
            RowBox[{"a", ",", 
             RowBox[{"{", 
              RowBox[{"\"\<Windows\>\"", ",", "\"\<CONT\>\""}], "}"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"c", "=", 
           RowBox[{"StringTake", "[", 
            RowBox[{"a", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"b", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"b", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}]}]}], "]"}],
        ";", " ", 
       RowBox[{"c", "=", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"c", ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"GenRules", "[", 
              RowBox[{"d", ",", "\"\<\>\""}], "]"}], ",", 
             RowBox[{"\"\<ENDCONT\>\"", "->", "\"\<\>\""}], ",", 
             RowBox[{"\"\<CONT\>\"", "->", "\"\<\>\""}]}], "}"}], "]"}]}], 
         "]"}]}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ListQ", "[", "c", "]"}], ",", 
         RowBox[{"c", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "c"}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Ver`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ver", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "\"\<$Art24$Kr17$.txt\>\""}], ",", "b"}], "}"}], ",", 
    RowBox[{
     RowBox[{"Run", "[", 
      RowBox[{"\"\<Ver > \>\"", "<>", "a"}], "]"}], ";", " ", 
     RowBox[{"b", "=", 
      RowBox[{"Read", "[", 
       RowBox[{"a", ",", "String"}], "]"}]}], ";", 
     RowBox[{"DeleteFile", "[", 
      RowBox[{"Close", "[", "a", "]"}], "]"}], ";", "b"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`$Version1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"$Version1", ":=", 
  RowBox[{
   RowBox[{"StringSplit", "[", 
    RowBox[{"$Version", ",", "\"\< \>\""}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`$Version2`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"$Version2", ":=", 
  RowBox[{"StringTrim", "[", 
   RowBox[{"ReadString", "[", 
    RowBox[{"$InstallationDirectory", "<>", "\"\<\\\\.VersionID\>\""}], "]"}],
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`PCOS`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PCOS", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"Unique", "[", "\"\<agn\>\"", "]"}], "]"}]}], ",", "b"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"Run", "[", 
      RowBox[{"\"\<SYSTEMINFO > \>\"", "<>", "a"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringSplit", "[", "#", "]"}], "&"}], ",", 
        RowBox[{
         RowBox[{"ReadList", "[", 
          RowBox[{"a", ",", "String"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "2"}], "]"}], "]"}]}], "]"}]}], ";", 
     RowBox[{"DeleteFile", "[", "a", "]"}], ";", 
     RowBox[{"b", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"3", ";;", 
            RowBox[{"-", "1"}]}], "]"}], "]"}], "&"}], ",", "b"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"b", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"StringReplace", "[", 
        RowBox[{
         RowBox[{"ListToString", "[", 
          RowBox[{
           RowBox[{"b", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", " ", "\"\< \>\""}], "]"}], 
         ",", 
         RowBox[{"\"\<\\\"\>\"", " ", "->", "\"\<\>\""}]}], "]"}]}], 
      "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`OSplatform`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"OSplatform", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "\"\<$Art27$Kr20$\>\""}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Run", "[", 
      RowBox[{"\"\<systeminfo > \>\"", "<>", "a"}], "]"}], ";", " ", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"b", ",", 
         RowBox[{"Read", "[", 
          RowBox[{"a", ",", "String"}], "]"}]}], "]"}], ",", "3"}], "]"}], 
     ";", " ", 
     RowBox[{"DeleteFile", "[", 
      RowBox[{"Close", "[", "a", "]"}], "]"}], ";", " ", 
     RowBox[{"b", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringSplit", "[", 
          RowBox[{"#", ",", "\"\<:\>\""}], "]"}], "&"}], ",", 
        RowBox[{"b", "[", 
         RowBox[{"[", 
          RowBox[{"2", ";;", "3"}], "]"}], "]"}]}], "]"}]}], ";", " ", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"StringTrim", "[", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}], "&"}], ",", "b"}], "]"}]}]}],
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DO`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DO", "[", 
   RowBox[{"x_", ",", "y_", ",", "k_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "x"}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Op", "[", "y", "]"}]}], ",", "c", ",", 
      RowBox[{"d", "=", "1"}], ",", 
      RowBox[{"R", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", " ", 
    RowBox[{
     RowBox[{"c", ":=", 
      RowBox[{
       RowBox[{"Length", "[", "b", "]"}], "+", "1"}]}], ";", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"d", "<", "c"}], ",", 
       RowBox[{
        RowBox[{"R", "=", 
         RowBox[{"Insert", "[", 
          RowBox[{"R", ",", 
           RowBox[{"a", "/.", 
            RowBox[{"k", " ", "->", 
             RowBox[{"b", "[", 
              RowBox[{"[", "d", "]"}], "]"}]}]}], ",", " ", 
           RowBox[{"-", "1"}]}], "]"}]}], ";", 
        RowBox[{"a", ":=", "x"}], ";", 
        RowBox[{"d", "++"}]}]}], "]"}], ";", "R"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`CopyFileToDir`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CopyFileToDir", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"PathToFileQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"DirQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"DirQ", "[", "x", "]"}], ",", 
      RowBox[{"CopyDir", "[", 
       RowBox[{"x", ",", "y"}], "]"}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"FileExistsQ", "[", "x", "]"}], ",", 
        RowBox[{
         RowBox[{"a", "=", 
          RowBox[{
           RowBox[{"FileNameSplit", "[", "x", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}]}], ";", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"FileExistsQ", "[", 
            RowBox[{"b", "=", 
             RowBox[{"y", "<>", "\"\<\\\\\>\"", "<>", "a"}]}], "]"}], ",", 
           "b", ",", 
           RowBox[{"CopyFile", "[", 
            RowBox[{"x", ",", "b"}], "]"}]}], "]"}]}], ",", "$Failed"}], 
       "]"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`CopyFile1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CopyFile1", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"FileExistsQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"StringQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", 
      RowBox[{"p", "=", 
       RowBox[{"StandPath", "[", "x", "]"}]}], ",", 
      RowBox[{"j", "=", 
       RowBox[{"StandPath", "[", "y", "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"StandPath", "[", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Set", "[", 
           RowBox[{"a", ",", 
            RowBox[{"DirectoryName", "[", "j", "]"}]}], "]"}], "===", 
          "\"\<\>\""}], ",", 
         RowBox[{"Directory", "[", "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"DirectoryQ", "[", "a", "]"}], ",", "a", ",", 
           RowBox[{"CDir", "[", "a", "]"}]}], "]"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"p", "\[Equal]", "j"}], ",", "p", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"FileExistsQ", "[", "j", "]"}], ",", 
         RowBox[{
          RowBox[{"Quiet", "[", 
           RowBox[{"Close", "[", "j", "]"}], "]"}], ";", " ", 
          RowBox[{"Quiet", "[", 
           RowBox[{"RenameFile", "[", 
            RowBox[{"j", ",", 
             RowBox[{"c", "=", 
              RowBox[{"StringReplace", "[", 
               RowBox[{"j", ",", 
                RowBox[{
                 RowBox[{"Set", "[", 
                  RowBox[{"d", ",", 
                   RowBox[{"FileBaseName", "[", "j", "]"}]}], "]"}], "->", 
                 RowBox[{"\"\<$\>\"", "<>", "d", "<>", "\"\<$\>\""}]}]}], 
               "]"}]}]}], "]"}], "]"}], ";", 
          RowBox[{"CopyFileToDir", "[", 
           RowBox[{"p", ",", "b"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"b", "<>", "\"\<\\\\\>\"", "<>", 
             RowBox[{"FileNameTake", "[", "p", "]"}]}], ",", 
            RowBox[{"j", "=", 
             RowBox[{"b", "<>", "\"\<\\\\\>\"", "<>", "c"}]}]}], "}"}]}], ",", 
         RowBox[{"CopyFileToDir", "[", 
          RowBox[{"p", ",", "b"}], "]"}]}], "]"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Head1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Head1", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", "=", 
      RowBox[{"PureDefinition", "[", "x", "]"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"ListQ", "[", "a", "]"}], ",", "$Failed", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"a", "===", "\"\<System\>\""}], ",", "System", ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"BlockQ", "[", "x", "]"}], ",", "Block", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"ModuleQ2", "[", "x", "]"}], ",", "Module", ",", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"PureFuncQ", "[", "x", "]"}], ",", "PureFunction", ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"Quiet", "[", 
                 RowBox[{"Check", "[", 
                  RowBox[{
                   RowBox[{"FunctionQ", "[", "x", "]"}], ",", "False"}], 
                  "]"}], "]"}], ",", "Function", ",", 
                RowBox[{"Head", "[", "x", "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
         "]"}]}], "]"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Head2`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Head2", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"Check", "[", 
         RowBox[{
          RowBox[{"ProcFuncTypeQ", "[", 
           RowBox[{"ToString", "[", "x", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"Head", "[", "x", "]"}], "}"}]}], "]"}], "]"}]}], ",", 
      "b"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"SameQ", "[", 
       RowBox[{
        RowBox[{"a", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}], ",", "\"\<System\>\""}], "]"}], 
      ",", "\"\<System\>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{
          RowBox[{"a", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}], ",", "\"\<Expression\>\""}], 
         "]"}], ",", 
        RowBox[{"Head", "[", "x", "]"}], ",", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"ListQ", "[", "a", "]"}], ",", 
           RowBox[{"b", "=", 
            RowBox[{"a", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}]}]}], "]"}], ";", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "b", "]"}], "\[Equal]", "1"}], ",", 
           RowBox[{"b", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "b"}], "]"}]}]}], "]"}]}], 
     "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Head3`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Head3", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Part", "[", 
      RowBox[{"x", ",", "1"}], "]"}], "===", 
     RowBox[{"-", "1"}]}], ",", 
    RowBox[{"Head1", "[", 
     RowBox[{
      RowBox[{"-", "1"}], "*", "x"}], "]"}], ",", 
    RowBox[{"Head1", "[", "x", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ReductRes`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReductRes", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"SymbolQ", "[", "x", "]"}]}], ",", "y_"}], "]"}], ":=", 
  RowBox[{"ToExpression", "[", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"ToString", "[", "y", "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Context", "[", "x", "]"}], "<>", 
       RowBox[{"ToString", "[", "x", "]"}], "<>", "\"\<`\>\""}], "->", 
      "\"\<\>\""}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ListListGroup`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListListGroup", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"ListListQ", "[", "x", "]"}]}], ",", " ", 
    RowBox[{"n_", "/;", 
     RowBox[{
      RowBox[{"IntegerQ", "[", "n", "]"}], "&&", 
      RowBox[{"n", ">", "0"}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"x", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "<", "n"}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"Defer", "[", 
         RowBox[{"ListListGroup", "[", 
          RowBox[{"x", ",", "n"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"For", "[", 
        RowBox[{"k", ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "x", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"b", ",", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "[", 
             RowBox[{"[", "n", "]"}], "]"}]}], "]"}], ";", " ", 
          RowBox[{"b", "=", 
           RowBox[{"DeleteDuplicates", "[", 
            RowBox[{"Flatten", "[", "b", "]"}], "]"}]}]}]}], "]"}]}], "]"}], 
     ";", " ", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "b", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"a", ",", 
         RowBox[{"Select", "[", 
          RowBox[{"x", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "\[Equal]", 
             RowBox[{"b", "[", 
              RowBox[{"[", "k", "]"}], "]"}]}], "&"}]}], "]"}]}], "]"}]}], 
      "]"}], ";", "a"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ReplaceLevelList`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReplaceLevelList", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"ListQ", "[", "x", "]"}]}], ",", 
    RowBox[{"n_", "/;", 
     RowBox[{
      RowBox[{
       RowBox[{"IntegerQ", "[", "n", "]"}], "&&", 
       RowBox[{"n", ">", "0"}]}], "||", 
      RowBox[{"IntegerListQ", "[", "n", "]"}]}]}], ",", "y_", ",", "z___"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"b", "=", 
       RowBox[{"SetAttributes", "[", 
        RowBox[{"ToString4", ",", "Listable"}], "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"Flatten", "[", "x", "]"}]}], ",", "d", ",", 
      RowBox[{"h", "=", 
       RowBox[{"FromCharacterCode", "[", "2", "]"}]}], ",", "k", ",", 
      RowBox[{"p", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"g", "=", 
       RowBox[{"FromCharacterCode", "[", "3", "]"}]}], ",", 
      RowBox[{"u", "=", 
       RowBox[{"FromCharacterCode", "[", "4", "]"}]}], ",", "m", ",", 
      RowBox[{"n1", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", "n", "}"}], "]"}]}], ",", 
      RowBox[{"y1", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", "y", "}"}], "]"}]}], ",", "z1"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "z", "}"}], "\[NotEqual]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"z1", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", "z", "}"}], "]"}]}], ",", 
       RowBox[{"z1", "=", "y1"}]}], "]"}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"Map", "[", 
           RowBox[{"Length", ",", 
            RowBox[{"{", 
             RowBox[{"n1", ",", "y1", ",", "z1"}], "}"}]}], "]"}], "]"}], 
         "]"}], "\[NotEqual]", "1"}], ",", "$Failed", ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"a", "=", 
         RowBox[{"ToString4", "[", "x", "]"}]}], ";", 
        RowBox[{"SetAttributes", "[", 
         RowBox[{"StringJoin", ",", "Listable"}], "]"}], ";", 
        RowBox[{"b", "=", 
         RowBox[{"ToExpression", "[", 
          RowBox[{"ToString4", "[", 
           RowBox[{"StringJoin", "[", 
            RowBox[{"u", ",", "a", ",", 
             RowBox[{"g", "<>", "h"}]}], "]"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", " ", 
        RowBox[{"b", "=", 
         RowBox[{"ToString", "[", "b", "]"}]}], ";", " ", 
        RowBox[{"m", "=", 
         RowBox[{"StringPosition", "[", 
          RowBox[{"b", ",", "h"}], "]"}]}], ";", " ", 
        RowBox[{"d", "=", 
         RowBox[{"LevelsOfList", "[", "x", "]"}]}], ";", " ", 
        RowBox[{"b", "=", 
         RowBox[{"StringReplacePart", "[", 
          RowBox[{
           RowBox[{"ToString", "[", "b", "]"}], ",", 
           RowBox[{"Map", "[", 
            RowBox[{"ToString", ",", "d"}], "]"}], ",", "m"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "1"}], ",", 
          RowBox[{"k", "\[LessEqual]", 
           RowBox[{"Length", "[", "n1", "]"}]}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"p", ",", 
            RowBox[{
             RowBox[{"u", "<>", 
              RowBox[{
               RowBox[{"Map", "[", 
                RowBox[{"ToString4", ",", "y1"}], "]"}], "[", 
               RowBox[{"[", "k", "]"}], "]"}], "<>", "g", "<>", 
              RowBox[{
               RowBox[{"Map", "[", 
                RowBox[{"ToString", ",", "n1"}], "]"}], "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], "\[Rule]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"{", "z", "}"}], "\[Equal]", 
                RowBox[{"{", "}"}]}], ",", "\"\<\>\"", ",", 
               RowBox[{
                RowBox[{"Map", "[", 
                 RowBox[{"ToString", ",", "z1"}], "]"}], "[", 
                RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}]}], "]"}]}], "]"}], 
        ";", "  ", 
        RowBox[{"b", "=", 
         RowBox[{"StringReplace", "[", 
          RowBox[{"b", ",", "p"}], "]"}]}], ";", "\[IndentingNewLine]", " ", 
        RowBox[{"d", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"g", "<>", "#"}], "&"}], ",", 
           RowBox[{"Map", "[", 
            RowBox[{"ToString", ",", "d"}], "]"}]}], "]"}]}], ";", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ClearAttributes", "[", 
            RowBox[{"#", ",", "Listable"}], "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"StringJoin", ",", "ToString4"}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"StringReplace", "[", 
          RowBox[{"b", ",", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"u", "->", "\"\<\>\""}], ",", 
              RowBox[{"\"\<, }\>\"", "->", "\"\<}\>\""}], ",", 
              RowBox[{"\"\<{,\>\"", "->", "\"\<{\>\""}], ",", 
              RowBox[{"\"\<, ,\>\"", "->", "\"\<,\>\""}], ",", " ", 
              RowBox[{"\"\< , ,\>\"", "->", "\"\<\>\""}], ",", " ", 
              RowBox[{"\"\< , \>\"", "->", "\"\<\>\""}], ",", 
              RowBox[{"GenRules", "[", 
               RowBox[{"d", ",", "\"\<\>\""}], "]"}]}], "}"}], "]"}]}], "]"}],
          "]"}]}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ReplaceListCond`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReplaceListCond", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"ListQ", "[", "x", "]"}]}], ",", 
    RowBox[{"f_", "/;", 
     RowBox[{
      RowBox[{"SymbolQ", "[", "f", "]"}], "||", 
      RowBox[{
       RowBox[{"ListQ", "[", "f", "]"}], "&&", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"SysFuncQ", "[", "#", "]"}], "||", 
             RowBox[{"FunctionQ", "[", "#", "]"}]}], "&"}], ",", "f"}], "]"}],
          "]"}], "\[Equal]", 
        RowBox[{"{", "True", "}"}]}]}]}]}], ",", "y__"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "func"}], "}"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"func", "[", 
       RowBox[{
        RowBox[{"x1_", "/;", 
         RowBox[{"ListQ", "[", "x1", "]"}]}], ",", "f1_", ",", "y1_"}], "]"}],
       ":=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"!", 
              RowBox[{"UnevaluatedQ", "[", 
               RowBox[{"f1", ",", "#"}], "]"}]}], "&&", 
             RowBox[{"f1", "[", "#", "]"}]}], "||", 
            RowBox[{"f1", "[", "#", "]"}]}], ",", 
           RowBox[{"Replace", "[", 
            RowBox[{"#", ",", 
             RowBox[{"#", "\[Rule]", "y1"}]}], "]"}], ",", "#"}], "]"}], 
         "&"}], ",", "x1"}], "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"ListQ", "[", "f", "]"}]}], ",", 
       RowBox[{"func", "[", 
        RowBox[{"x", ",", "f", ",", "y"}], "]"}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a", ",", "b"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", "y", "}"}], "]"}]}], "}"}]}], " ", ";", " ", 
        RowBox[{"Quiet", "[", 
         RowBox[{"Do", "[", 
          RowBox[{
           RowBox[{"a", "=", 
            RowBox[{"func", "[", 
             RowBox[{"a", ",", 
              RowBox[{"f", "[", 
               RowBox[{"[", "k", "]"}], "]"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "b", "]"}], "==", "1"}], ",", 
                RowBox[{"b", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"b", "[", 
                 RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "b", "]"}], "==", "1"}], ",", 
               RowBox[{"Length", "[", "f", "]"}], ",", 
               RowBox[{"Min", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Length", "[", "f", "]"}], ",", 
                  RowBox[{"Length", "[", "b", "]"}]}], "}"}], "]"}]}], 
              "]"}]}], "}"}]}], "]"}], "]"}], ";", " ", "a"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`PositionsListCond`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PositionsListCond", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"ListQ", "[", "x", "]"}]}], ",", 
    RowBox[{"f_", "/;", 
     RowBox[{
      RowBox[{"SymbolQ", "[", "f", "]"}], "||", 
      RowBox[{
       RowBox[{"ListQ", "[", "f", "]"}], "&&", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"SysFuncQ", "[", "#", "]"}], "||", 
             RowBox[{"FunctionQ", "[", "#", "]"}]}], "&"}], ",", "f"}], "]"}],
          "]"}], "\[Equal]", 
        RowBox[{"{", "True", "}"}]}]}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"x", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "]"}], "&"}], ",", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", "f", "}"}], "]"}]}], "]"}], ",", "True"}], "]"}], 
         ",", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"b", ",", "k"}], "]"}], ",", "Null"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{"Length", "[", "x", "]"}]}], "}"}]}], "]"}], ";", " ", 
     "b"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`FreeSpaceVol`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FreeSpaceVol", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"MemberQ3", "[", 
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"CharacterRange", "[", 
         RowBox[{"\"\<a\>\"", ",", "\"\<z\>\""}], "]"}], ",", 
        RowBox[{"CharacterRange", "[", 
         RowBox[{"\"\<A\>\"", ",", "\"\<Z\>\""}], "]"}]}], "]"}], ",", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", "x", "}"}], "]"}]}], "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"Unique", "[", "\"\<ag\>\"", "]"}], "]"}]}], ",", "c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", "x", "}"}], "]"}]}], ",", "f"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", "y_", "]"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "b"}], "}"}], ",", 
        RowBox[{
         RowBox[{"n", "=", 
          RowBox[{"Run", "[", 
           RowBox[{
           "\"\<Dir \>\"", "<>", "y", "<>", "\"\<:\\\\ > \>\"", "<>", "a"}], 
           "]"}]}], ";", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"n", "\[NotEqual]", "0"}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", "\"\<Device is not ready\>\""}], "}"}], ",", 
           RowBox[{
            RowBox[{"b", "=", 
             RowBox[{
              RowBox[{"StringSplit", "[", 
               RowBox[{"ReduceAdjacentStr", "[", 
                RowBox[{
                 RowBox[{"ReadFullFile", "[", "a", "]"}], ",", "\"\< \>\"", 
                 ",", "1"}], "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"-", "3"}], ";;", 
                RowBox[{"-", "2"}]}], "]"}], "]"}]}], ";", 
            RowBox[{"{", 
             RowBox[{"y", ",", 
              RowBox[{"ToExpression", "[", 
               RowBox[{"StringReplace", "[", 
                RowBox[{
                 RowBox[{"b", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"\"\<\[YDoubleDot]\>\"", "->", "\"\<\>\""}]}], "]"}],
                "]"}], ",", 
              RowBox[{"b", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}]}], "]"}]}]}], 
       "]"}]}], ";", " ", 
     RowBox[{"c", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"f", ",", "d"}], "]"}]}], ";", " ", 
     RowBox[{"DeleteFile", "[", "a", "]"}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "c", "]"}], "\[Equal]", "1"}], ",", 
       RowBox[{"c", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "c"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`VolDir`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"VolDir", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"DirectoryQ", "[", "x", "]"}], "||", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "<>", "\"\<:\>\""}], "&"}], ",", 
         RowBox[{"Adrive", "[", "]"}]}], "]"}], ",", 
       RowBox[{"ToUpperCase", "[", "x", "]"}]}], "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"Unique", "[", "\"\<agn\>\"", "]"}], "]"}]}], ",", "b", ",", 
      "c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"StandPath", "[", "x", "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"Run", "[", 
       RowBox[{"\"\<DIR /S \>\"", "<>", "d", "<>", "\"\< > \>\"", "<>", "a"}],
        "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"b", "\[NotEqual]", "0"}], ",", "$Failed", ",", 
       RowBox[{"c", "=", 
        RowBox[{"Map", "[", 
         RowBox[{"StringTrim", ",", 
          RowBox[{
           RowBox[{"ReadList", "[", 
            RowBox[{"a", ",", "String"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "2"}], ";;", 
             RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}]}]}], "]"}], ";", " ", 
     RowBox[{"DeleteFile", "[", "a", "]"}], ";", 
     RowBox[{"c", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"StringTrim", ",", 
        RowBox[{"Mapp", "[", 
         RowBox[{"StringReplace", ",", "c", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<\[YDoubleDot]\>\"", "->", "\"\<\>\""}], ",", 
            RowBox[{"\"\<bytes\>\"", "->", "\"\<\>\""}], " ", ",", 
            RowBox[{"\"\<free\>\"", "->", "\"\<\>\""}]}], "}"}]}], "]"}]}], 
       "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"StringSplit", "[", "#", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], "&"}], ",", "c"}], "]"}], 
      "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DirsFiles`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DirsFiles", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"DirectoryQ", "[", "x", "]"}], "||", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "<>", "\"\<:\>\""}], "&"}], ",", 
         RowBox[{"Adrive", "[", "]"}]}], "]"}], ",", 
       RowBox[{"ToUpperCase", "[", "x", "]"}]}], "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"Unique", "[", "\"\<agn\>\"", "]"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "x", "}"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"StandPath", "[", "x", "]"}]}], ",", "f"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Run", "[", 
        RowBox[{
        "\"\<DIR /A/B/S \>\"", "<>", "d", "<>", "\"\< > \>\"", "<>", "a"}], 
        "]"}], "\[NotEqual]", "0"}], ",", "$Failed", ",", 
      RowBox[{
       RowBox[{"f", "=", 
        RowBox[{"ReadList", "[", 
         RowBox[{"a", ",", "String"}], "]"}]}], ";", " ", 
       RowBox[{"DeleteFile", "[", "a", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"DirectoryQ", "[", "#", "]"}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"b", ",", "#"}], "]"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"FileExistsQ", "[", "#", "]"}], ",", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"c", ",", "#"}], "]"}], ",", "Null"}], "]"}]}], "]"}], 
          "&"}], ",", "f"}], "]"}], ";", " ", 
       RowBox[{"{", 
        RowBox[{"b", ",", "c"}], "}"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`GroupNames`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GroupNames", "[", "L_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ListQ", "[", "L", "]"}], ",", "L", ",", 
         RowBox[{"{", "L", "}"}]}], "]"}]}], ",", "c", ",", "d", ",", "p", 
      ",", "t", ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"\"\<Null\>\"", ",", "\"\<Null\>\""}], "}"}], "}"}]}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"a", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", 
        RowBox[{"d", "=", 
         RowBox[{"Head2", "[", "c", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"t", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Select", "[", 
           RowBox[{"b", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "===", "d"}], "&"}]}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"t", "\[Equal]", 
            RowBox[{"{", "}"}]}], "&&", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"d", "===", "Symbol"}], " ", "&&", 
             RowBox[{
              RowBox[{"Attributes", "[", "c", "]"}], "===", 
              RowBox[{"{", "Temporary", "}"}]}]}], ")"}]}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"b", ",", 
            RowBox[{"{", 
             RowBox[{"Temporary", ",", "c"}], "}"}]}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"t", "\[Equal]", 
             RowBox[{"{", "}"}]}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"b", ",", 
              RowBox[{"{", 
               RowBox[{"d", ",", "c"}], "}"}]}], "]"}], ",", 
            RowBox[{
             RowBox[{"p", "=", 
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{"Position", "[", 
                 RowBox[{"b", ",", "t"}], "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{
               RowBox[{"b", "[", 
                RowBox[{"[", "p", "]"}], "]"}], ",", "c"}], "]"}]}]}], 
           "]"}]}], "]"}]}]}], "]"}], ";", " ", 
     RowBox[{"b", "=", 
      RowBox[{"b", "[", 
       RowBox[{"[", 
        RowBox[{"2", ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", " ", 
     RowBox[{"b", "=", 
      RowBox[{"Gather", "[", 
       RowBox[{"b", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "==", 
          RowBox[{"#2", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", " ", 
     RowBox[{"b", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"Flatten", "[", "#", "]"}], "]"}], "&"}], ",", "b"}], 
       "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "b", "]"}], "\[Equal]", "1"}], ",", 
       RowBox[{"Flatten", "[", "b", "]"}], ",", "b"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`LeftFold`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LeftFold", "[", 
   RowBox[{"F_", ",", "id_", ",", 
    RowBox[{"s_", "/;", 
     RowBox[{"StringQ", "[", "s", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"StringLength", "[", "s", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{
        RowBox[{"ToString", "[", "F", "]"}], "<>", "\"\<[\>\""}]}], ",", 
      RowBox[{"c", "=", "\"\<\>\""}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", "a"}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"c", "<>", "b", "<>", 
         RowBox[{"ToString1", "[", 
          RowBox[{"StringTake", "[", 
           RowBox[{"s", ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "k"}], "}"}]}], "]"}], "]"}], "<>", 
         "\"\<, \>\""}]}]}], "]"}], ";", " ", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"c", "<>", 
       RowBox[{"ToString", "[", "id", "]"}], "<>", 
       RowBox[{"CatN", "[", 
        RowBox[{"\"\<]\>\"", ",", "a"}], "]"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`RightFold`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RightFold", "[", 
   RowBox[{"F_", ",", "id_", ",", 
    RowBox[{"s_", "/;", 
     RowBox[{"StringQ", "[", "s", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"StringLength", "[", "s", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{
        RowBox[{"ToString", "[", "F", "]"}], "<>", "\"\<[\>\""}]}], ",", 
      RowBox[{"c", "=", "\"\<\>\""}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", "a"}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"c", "<>", "b", "<>", 
         RowBox[{"ToString1", "[", 
          RowBox[{"StringTake", "[", 
           RowBox[{"s", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "k"}], ",", 
              RowBox[{"-", "k"}]}], "}"}]}], "]"}], "]"}], "<>", 
         "\"\<, \>\""}]}]}], "]"}], ";", " ", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"c", "<>", 
       RowBox[{"ToString", "[", "id", "]"}], "<>", 
       RowBox[{"CatN", "[", 
        RowBox[{"\"\<]\>\"", ",", "a"}], "]"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Names1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Names1", "[", 
   RowBox[{"x___", "/;", 
    RowBox[{
     RowBox[{"{", "x", "}"}], "\[Equal]", 
     RowBox[{"{", "}"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"c", "=", "1"}], ",", "d", ",", "h", ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "}"}]}], "}"}]}], ",", 
      RowBox[{"a", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Names", "[", "\"\<`*\>\"", "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"StringTake", "[", 
            RowBox[{"#", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1"}], "}"}]}], "]"}], "\[NotEqual]", 
           "\"\<$\>\""}], "&"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"c", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{
        RowBox[{"d", "=", 
         RowBox[{"a", "[", 
          RowBox[{"[", "c", "]"}], "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"ProcQ", "[", "d", "]"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"b", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "d"}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"Quiet", "[", 
             RowBox[{"Check", "[", 
              RowBox[{
               RowBox[{"QFunction", "[", "d", "]"}], ",", "False"}], "]"}], 
             "]"}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{
              RowBox[{"b", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "d"}], "]"}], ",", 
            RowBox[{
             RowBox[{"h", "=", 
              RowBox[{"ToString", "[", 
               RowBox[{"Quiet", "[", 
                RowBox[{"DefFunc", "[", "d", "]"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"!", 
                 RowBox[{"SameQ", "[", 
                  RowBox[{"h", ",", "\"\<Null\>\""}], "]"}]}], "&&", 
                RowBox[{"h", "\[Equal]", 
                 RowBox[{
                 "\"\<Attributes[\>\"", "<>", "d", "<>", 
                  "\"\<] = {Temporary}\>\""}]}]}], ",", 
               RowBox[{"AppendTo", "[", 
                RowBox[{
                 RowBox[{"b", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], ",", "d"}], "]"}]}], 
              "]"}]}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{
              RowBox[{"b", "[", 
               RowBox[{"[", "4", "]"}], "]"}], ",", "d"}], "]"}]}], "]"}]}], 
         "]"}], ";", " ", 
        RowBox[{"c", "++"}]}]}], "]"}], ";", " ", "b"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`CurrentNames`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CurrentNames", "[", "x___", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Complement", "[", 
        RowBox[{
         RowBox[{"Names", "[", "\"\<*\>\"", "]"}], ",", 
         RowBox[{"Names", "[", "\"\<System`*\>\"", "]"}]}], "]"}]}], ",", "b",
       ",", "c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Context", "[", "#", "]"}], ",", "#"}], "}"}], "&"}], ",", 
        "a"}], "]"}]}], ";", 
     RowBox[{"c", "=", 
      RowBox[{"Gather", "[", 
       RowBox[{"b", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
          RowBox[{"#2", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", " ", 
     RowBox[{"c", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"Flatten", "[", "#", "]"}], "]"}], "&"}], ",", "c"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", "x", "}"}], "\[NotEqual]", 
         RowBox[{"{", "}"}]}], "&&", 
        RowBox[{"!", 
         RowBox[{"HowAct", "[", "x", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{"d", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"$Failed", ",", "\"\<Undefined\>\""}], "}"}], ",", 
                    RowBox[{"PureDefinition", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "]"}]}], "]"}], ",", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], ",", "Nothing"}], "]"}]}],
                 "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", "2", ",", 
               RowBox[{"Length", "[", "#", "]"}]}], "}"}]}], "]"}], "&"}], 
          ",", "c"}], "]"}], ";", 
        RowBox[{"x", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"DeleteDuplicates", "[", 
             RowBox[{"Flatten", "[", "#", "]"}], "]"}], "&"}], ",", 
           RowBox[{"Gather", "[", 
            RowBox[{"d", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#1", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
               RowBox[{"#2", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}], "]"}]}]}],
        ",", "Null"}], "]"}], ";", " ", "c"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`OverLap`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"OverLap", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", "y__"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}]}], ",", 
      RowBox[{"p", "=", "0"}], ",", 
      RowBox[{"h", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"StringQ", "[", 
         RowBox[{"d", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"Defer", "[", 
         RowBox[{"OverLap", "[", 
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "b"}], "}"}], "=", 
        RowBox[{"Map", "[", 
         RowBox[{"StringLength", ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"d", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}]}], "]"}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Min", "[", 
         RowBox[{"a", ",", "b"}], "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"StringTake", "[", 
           RowBox[{
            RowBox[{"d", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "k"}], "]"}], "\[NotEqual]", 
          RowBox[{"StringTake", "[", 
           RowBox[{"x", ",", 
            RowBox[{"-", "k"}]}], "]"}]}], ",", 
         RowBox[{"Continue", "[", "]"}], ",", 
         RowBox[{"h", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"h", ",", "k"}], "]"}]}]}], "]"}]}], "]"}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"p", "\[Equal]", 
        RowBox[{"Min", "[", 
         RowBox[{"a", ",", "b"}], "]"}]}], ",", 
       RowBox[{"Return", "[", "$Failed", "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "d", "]"}], "\[GreaterEqual]", "3"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"HowAct", "[", 
             RowBox[{"d", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "]"}]}], ",", 
           RowBox[{"ToExpression", "[", 
            RowBox[{
             RowBox[{"ToString", "[", 
              RowBox[{"d", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "]"}], "<>", "\"\<=\>\"", "<>", 
             RowBox[{"ToString1", "[", 
              RowBox[{"StringTake", "[", 
               RowBox[{
                RowBox[{"d", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"h", "\[Equal]", 
                   RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"Return", "[", "$Failed", "]"}], ",", 
                  RowBox[{"h", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}]}], "]"}], 
              "]"}]}], "]"}], ",", 
           RowBox[{"Return", "[", 
            RowBox[{"Defer", "[", 
             RowBox[{"OverLap", "[", 
              RowBox[{"{", 
               RowBox[{"x", ",", "y"}], "}"}], "]"}], "]"}], "]"}], ",", 
           "Null"}], "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"h", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"Return", "[", "$Failed", "]"}], ",", 
       RowBox[{"h", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`NbCallProc`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NbCallProc", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", "=", 
      RowBox[{"SubsDel", "[", 
       RowBox[{
        RowBox[{"StringReplace", "[", 
         RowBox[{
          RowBox[{"ToString1", "[", 
           RowBox[{"DefFunc", "[", "x", "]"}], "]"}], ",", 
          RowBox[{"\"\<\\n \\n\>\"", "->", "\"\<;\>\""}]}], "]"}], ",", 
        RowBox[{"\"\<`\>\"", "<>", 
         RowBox[{"ToString", "[", "x", "]"}], "<>", "\"\<`\>\""}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<[\>\"", ",", "\"\<,\>\""}], "}"}], ",", " ", 
        RowBox[{"-", "1"}]}], "]"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Clear", "[", "x", "]"}], ";", 
     RowBox[{"ToExpression", "[", "a", "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ExtrFromM`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExtrFromM", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"FileExtension", "[", "x", "]"}], "==", "\"\<m\>\""}]}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{"SymbolQ", "[", "y", "]"}], "||", 
      RowBox[{
       RowBox[{"ListQ", "[", "y", "]"}], "&&", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"SymbolQ", "[", "#", "]"}], "&"}], ",", "y"}], "]"}], 
         "]"}], "\[Equal]", 
        RowBox[{"{", "True", "}"}]}]}]}]}], ",", "z___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ReadString", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"ToString", ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", "y", "}"}], "]"}]}], "]"}], "]"}]}], ",", "c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"h", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"g", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"s", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"t", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"c", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"StringCases", "[", 
             RowBox[{"a", ",", 
              RowBox[{
               RowBox[{"\"\<(*\>\"", "<>", "#", "<>", "\"\<[\>\""}], "~~", 
               RowBox[{"Shortest", "[", "X__", "]"}], "~~", "\"\<*)\>\""}]}], 
             "]"}], ",", 
            RowBox[{"StringCases", "[", 
             RowBox[{"a", ",", 
              RowBox[{
               RowBox[{"\"\<(*\>\"", "<>", "#", "<>", "\"\<::usage\>\""}], "~~", 
               RowBox[{"Shortest", "[", "X__", "]"}], "~~", "\"\<*)\>\""}]}], 
             "]"}]}], "}"}], "]"}], "&"}], ",", "b"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "c", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"c", "[", 
           RowBox[{"[", "k", "]"}], "]"}], "\[Equal]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"t", ",", 
           RowBox[{"b", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"c", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "]"}], "\[Equal]", "1"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"SuffPref", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"c", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"\"\<(*\>\"", "<>", 
                RowBox[{"b", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "<>", "\"\<::usage\>\""}], 
               ",", "1"}], "]"}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"d", ",", 
               RowBox[{"b", "[", 
                RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"h", ",", 
               RowBox[{"b", "[", 
                RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"s", ",", 
              RowBox[{"b", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ";", " ", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"g", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"StringTake", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"c", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"3", ",", 
                    RowBox[{"-", "3"}]}], "}"}]}], "]"}], ",", 
                RowBox[{"StringTake", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"c", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"3", ",", 
                    RowBox[{"-", "3"}]}], "}"}]}], "]"}]}], "}"}]}], 
             "]"}]}]}], "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Quiet", "[", 
      RowBox[{"Map", "[", 
       RowBox[{"ToExpression", ",", "g"}], "]"}], "]"}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", "z", "}"}], "\[NotEqual]", 
         RowBox[{"{", "}"}]}], "&&", 
        RowBox[{"!", 
         RowBox[{"HowAct", "[", "z", "]"}]}]}], ",", 
       RowBox[{"z", "=", 
        RowBox[{"{", 
         RowBox[{"s", ",", "d", ",", "h", ",", "t"}], "}"}]}], ",", "Null"}], 
      "]"}], ";"}]}], " ", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ExtrOfMfile`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExtrOfMfile", "[", 
   RowBox[{
    RowBox[{"f_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "f", "]"}], "&&", 
      RowBox[{
       RowBox[{"FileExtension", "[", "f", "]"}], "==", "\"\<m\>\""}]}]}], ",", 
    RowBox[{"s_", "/;", 
     RowBox[{
      RowBox[{"StringQ", "[", "s", "]"}], "||", 
      RowBox[{"ListQ", "[", "s", "]"}]}]}], ",", "z___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Vsv", ",", 
      RowBox[{"p", "=", 
       RowBox[{"{", "}"}]}], ",", "v", ",", "m"}], "}"}], ",", 
    RowBox[{
     RowBox[{"m", "=", 
      RowBox[{"ReadFullFile", "[", "f", "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"StringFreeQ", "[", 
        RowBox[{"m", ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
            "\"\<(*Begin[\\\"`\>\"", "<>", "#", "<>", "\"\<`\\\"]*)\>\""}], 
            "&"}], ",", 
           RowBox[{"Map", "[", 
            RowBox[{"ToString", ",", "s"}], "]"}]}], "]"}]}], "]"}], ",", 
       "$Failed", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Vsv", "[", 
          RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"a", "=", "m"}], ",", 
             RowBox[{"b", "=", 
              RowBox[{"FromCharacterCode", "[", "17", "]"}]}], ",", 
             RowBox[{"c", "=", 
              RowBox[{"FromCharacterCode", "[", "24", "]"}]}], ",", 
             RowBox[{"d", "=", 
              RowBox[{
              "\"\<(*Begin[\\\"`\>\"", "<>", "y", "<>", 
               "\"\<`\\\"]*)\>\""}]}], ",", 
             RowBox[{"h", "=", "\"\<(*End[]*)\>\""}], ",", 
             RowBox[{"g", "=", 
              RowBox[{"{", "}"}]}], ",", "t"}], "}"}], ",", 
           RowBox[{
            RowBox[{"a", "=", 
             RowBox[{"StringReplace", "[", 
              RowBox[{"a", ",", 
               RowBox[{"h", "\[Rule]", "c"}]}], "]"}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"StringFreeQ", "[", 
               RowBox[{"a", ",", "d"}], "]"}], ",", "$Failed", ",", 
              RowBox[{
               RowBox[{"While", "[", 
                RowBox[{
                 RowBox[{"!", 
                  RowBox[{"StringFreeQ", "[", 
                   RowBox[{"a", ",", "d"}], "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"a", "=", 
                   RowBox[{"StringReplace", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{"d", "\[Rule]", "b"}], ",", "1"}], "]"}]}], ";", 
                  " ", 
                  RowBox[{"t", "=", 
                   RowBox[{"StringTake", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"SubStrSymbolParity1", "[", 
                    RowBox[{"a", ",", "b", ",", "c"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", 
                    RowBox[{"-", "4"}]}], "}"}]}], "]"}]}], ";", 
                  RowBox[{"t", "=", 
                   RowBox[{"StringReplace", "[", 
                    RowBox[{"t", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\<(*\>\"", "\[Rule]", "\"\<\>\""}], ",", 
                    RowBox[{"\"\<*)\>\"", "\[Rule]", "\"\<\>\""}]}], "}"}]}], 
                    "]"}]}], ";", " ", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"g", ",", "t"}], "]"}], ";", " ", 
                  RowBox[{"a", "=", 
                   RowBox[{"StringReplace", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{"b", "\[Rule]", "\"\<\>\""}], ",", "1"}], "]"}]}],
                   ";", " ", 
                  RowBox[{"Continue", "[", "]"}]}]}], "]"}], ";", " ", 
               RowBox[{"{", 
                RowBox[{"g", ",", 
                 RowBox[{"ToExpression", "[", 
                  RowBox[{"g", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "]"}]}], "}"}]}]}], 
             "]"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"StringQ", "[", "s", "]"}], ",", 
          RowBox[{"v", "=", 
           RowBox[{"Quiet", "[", 
            RowBox[{"Check", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Vsv", "[", 
                RowBox[{"f", ",", "s"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "$Failed"}], "]"}], 
            "]"}]}], ",", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"v", "=", 
                RowBox[{"Quiet", "[", 
                 RowBox[{"Check", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Vsv", "[", 
                    RowBox[{"f", ",", "#"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "$Failed"}], "]"}], 
                 "]"}]}], ",", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"p", ",", "v"}], "]"}]}], "}"}], "&"}], ",", 
            RowBox[{"Map", "[", 
             RowBox[{"ToString", ",", "s"}], "]"}]}], "]"}]}], "]"}], ";", 
        " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", "z", "}"}], "\[NotEqual]", 
            RowBox[{"{", "}"}]}], "&&", 
           RowBox[{"!", 
            RowBox[{"HowAct", "[", "z", "]"}]}]}], ",", 
          RowBox[{"z", "=", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"StringQ", "[", "s", "]"}], ",", "v", ",", "p"}], 
            "]"}]}]}], "]"}], ";"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ExtrDefFromM`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExtrDefFromM", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"SymbolQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "y", "]"}], "&&", 
      RowBox[{
       RowBox[{"FileExtension", "[", "y", "]"}], "\[Equal]", 
       "\"\<m\>\""}]}]}], ",", "z___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ReadString", "[", "y", "]"}]}], ",", 
      RowBox[{"b", "=", "\"\<(*Begin[\\\"`$`\\\"]*)\>\""}], ",", 
      RowBox[{"c", "=", "\"\<(*End[]*)\>\""}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"ToString", "[", "x", "]"}]}], ",", 
      RowBox[{"h", "=", "\"\<(*$::usage=\>\""}], " ", ",", "c1", ",", "h1"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"c", "=", 
      RowBox[{"StringCases", "[", 
       RowBox[{"a", ",", 
        RowBox[{"Shortest", "[", 
         RowBox[{
          RowBox[{"StringReplace", "[", 
           RowBox[{"b", ",", 
            RowBox[{"\"\<$\>\"", "\[Rule]", "d"}]}], "]"}], "~~", "__", "~~", 
          "c"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"h", "=", 
      RowBox[{"StringCases", "[", 
       RowBox[{"a", ",", 
        RowBox[{"Shortest", "[", 
         RowBox[{
          RowBox[{"StringReplace", "[", 
           RowBox[{"h", ",", 
            RowBox[{"\"\<$\>\"", "\[Rule]", "d"}]}], "]"}], "~~", "__", "~~", 
          "\"\<*)\>\""}], "]"}]}], "]"}]}], ";", " ", 
     RowBox[{"h1", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"h", "\[Equal]", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"\"\<Usage for \>\"", "<>", "d", "<>", "\"\< is absent\>\""}],
         ",", 
        RowBox[{"StringReplace", "[", 
         RowBox[{
          RowBox[{"h", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<(*\>\"", "->", "\"\<\>\""}], ",", 
            RowBox[{"\"\<*)\>\"", "->", "\"\<\>\""}], ",", 
            RowBox[{
             RowBox[{"d", "<>", "\"\<::usage=\>\""}], "\[Rule]", 
             "\"\<\>\""}]}], "}"}]}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"c1", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"c", "\[Equal]", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{
        "\"\<Definition for \>\"", "<>", "d", "<>", "\"\< is absent\>\""}], 
        ",", 
        RowBox[{
         RowBox[{"c", "=", 
          RowBox[{"StringReplace", "[", 
           RowBox[{
            RowBox[{"c", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\"\<\\r\\n\>\"", "->", "\"\<\>\""}], ",", 
              RowBox[{"\"\<(*\>\"", "->", "\"\<\>\""}], ",", 
              RowBox[{"\"\<*)\>\"", "->", "\"\<\>\""}]}], "}"}]}], "]"}]}], 
         ";", " ", 
         RowBox[{"c", "=", 
          RowBox[{"StringTake", "[", 
           RowBox[{"c", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"StringLength", "[", "d", "]"}], "+", "12"}], ",", 
              RowBox[{"-", "6"}]}], "}"}]}], "]"}]}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"h", "\[Equal]", 
         RowBox[{"{", "}"}]}], "&&", 
        RowBox[{"c", "\[Equal]", 
         RowBox[{"{", "}"}]}]}], ",", "$Failed", ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", "z", "}"}], "\[NotEqual]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"Map", "[", 
           RowBox[{"ToExpression", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d", "<>", "\"\<::usage=\>\"", "<>", "h1"}], ",", "c"}],
              "}"}]}], "]"}], ",", "Null"}], "]"}], ";", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ToExpression", "[", "h1", "]"}], ",", "c1"}], "}"}], ",",
           "1"}], "]"}]}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ExtrFromNBfile`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExtrFromNBfile", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<cdf\>\"", ",", "\"\<nb\>\""}], "}"}], ",", 
        RowBox[{"FileExtension", "[", "x", "]"}]}], "]"}]}]}], ",", 
    RowBox[{"n_", "/;", 
     RowBox[{"StringQ", "[", "n", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ToString1", "[", 
        RowBox[{"Get", "[", "x", "]"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"\"\<`\>\"", "<>", "n", "<>", "\"\<`\>\""}]}], ",", "c", ",", 
      "d", ",", "p"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"StringFreeQ", "[", 
       RowBox[{"a", ",", 
        RowBox[{
        "\"\<\\\\\\\"`\>\"", "<>", "n", "<>", "\"\<`\\\\\\\"\\\"\>\""}]}], 
       "]"}], ",", "$Failed", ",", " ", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{"StringTake", "[", 
         RowBox[{"a", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"StringPosition", "[", 
               RowBox[{"a", ",", "\"\<Notebook[\>\""}], "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"c", "=", 
        RowBox[{
         RowBox[{"StringCases", "[", 
          RowBox[{"a", ",", 
           RowBox[{"Shortest", "[", 
            RowBox[{
             RowBox[{
             "\"\<RowBox[{\\\"Begin\\\", \\\"[\\\", \\\"\\\\\\\"\>\"", "<>", 
              "b", "<>", " ", "\"\<\\\\\\\"\\\", \\\"]\\\"}]\>\""}], "~~", 
             "__", "~~", " ", 
             "\"\<RowBox[{\\\"End\\\", \\\"[\\\", \\\"]\\\"}]\>\""}], " ", 
            "]"}]}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"p", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"StringFreeQ", "[", 
           RowBox[{"c", ",", "\"\<[IndentingNewLine]\>\""}], "]"}], ",", "74",
           ",", "69"}], "]"}]}], ";", " ", 
       RowBox[{"c", "=", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"c", ",", 
          RowBox[{
          "\"\<, \\\"\\\\[IndentingNewLine]\>\"", "->", "\"\<\>\""}]}], 
         "]"}]}], ";", " ", 
       RowBox[{"d", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", 
          RowBox[{"StringPosition", "[", 
           RowBox[{"c", ",", "\"\<RowBox\>\""}], "]"}]}], "]"}]}], ";", " ", 
       RowBox[{"c", "=", 
        RowBox[{"StringTake", "[", 
         RowBox[{"c", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"d", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"p", "\[Equal]", "74"}], ",", 
              RowBox[{
               RowBox[{"d", "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}], "-", "9"}], ",", 
              RowBox[{
               RowBox[{"d", "[", 
                RowBox[{"[", 
                 RowBox[{"-", "2"}], "]"}], "]"}], "-", "4"}]}], "]"}]}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"d", "=", 
        RowBox[{"DisplayForm", "[", 
         RowBox[{"ToExpression", "[", "c", "]"}], "]"}]}], ";", 
       RowBox[{"CDFDeploy", "[", 
        RowBox[{"n", ",", "d", ",", 
         RowBox[{"\"\<Target\>\"", "->", "\"\<CDFPlayer\>\""}]}], "]"}], ";", 
       RowBox[{"d", "=", 
        RowBox[{"StringTake", "[", 
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{"Import", "[", 
            RowBox[{
             RowBox[{"n", "<>", "\"\<.cdf\>\""}], ",", "\"\<Plaintext\>\""}], 
            "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "5"}]}], "}"}]}], "]"}]}], ";", 
       RowBox[{"DeleteFile", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"n", "<>", "\"\<.cdf\>\""}], ",", 
          RowBox[{"n", "<>", "\"\<.png\>\""}]}], "}"}], "]"}], ";", "d"}]}], 
     "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ExtrFromNBfile1`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExtrFromNBfile1", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<cdf\>\"", ",", "\"\<nb\>\""}], "}"}], ",", 
        RowBox[{"FileExtension", "[", "x", "]"}]}], "]"}]}]}], ",", 
    RowBox[{"n_", "/;", 
     RowBox[{"StringQ", "[", "n", "]"}]}], ",", "m___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"InputForm", "[", 
         RowBox[{"Get", "[", "x", "]"}], "]"}], "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"\"\<`\>\"", "<>", "n", "<>", "\"\<`\>\""}]}], ",", 
      RowBox[{
      "b", "=", "\"\<RowBox[{\\\"End\\\", \\\"[\\\", \\\"]\\\"}]\>\""}], ",", 
      "d", ",", "h", ",", "t"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{"StringCases", "[", 
       RowBox[{"a", ",", 
        RowBox[{"c", "~~", 
         RowBox[{"Shortest", "[", "X__", "]"}], "~~", "b"}]}], "]"}]}], ";", 
     " ", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"d", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"{", "}"}], ",", " ", 
       RowBox[{
        RowBox[{"d", "=", 
         RowBox[{"StringTake", "[", 
          RowBox[{"d", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"StringPosition", "[", 
                RowBox[{"d", ",", "\"\<RowBox[{\>\""}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"d", "=", 
         RowBox[{"StringReplace", "[", 
          RowBox[{
           RowBox[{"d", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"b", "->", "\"\<\>\""}]}], "]"}]}], ";", 
        RowBox[{"h", "=", "d"}], ";", " ", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"SyntaxQ", "[", "h", "]"}]}], ",", 
          RowBox[{"h", "=", 
           RowBox[{"StringTake", "[", 
            RowBox[{"h", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"-", "2"}]}], "}"}]}], "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"NotebookEvaluate", "[", 
         RowBox[{
          RowBox[{"NotebookOpen", "[", 
           RowBox[{"x", ",", 
            RowBox[{"Visible", "\[Rule]", "False"}]}], "]"}], ",", 
          RowBox[{"EvaluationElements", "\[Rule]", "All"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"h", "=", 
         RowBox[{"DisplayForm", "[", 
          RowBox[{"ToExpression", "[", 
           RowBox[{"t", "=", "h"}], "]"}], "]"}]}], ";", " ", 
        RowBox[{"CDFDeploy", "[", 
         RowBox[{"n", ",", "h", ",", 
          RowBox[{"\"\<Target\>\"", "->", "\"\<CDFPlayer\>\""}]}], "]"}], ";",
         " ", 
        RowBox[{"DeleteFile", "[", " ", 
         RowBox[{"n", "<>", "\"\<.png\>\""}], "]"}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", "m", "}"}], "\[NotEqual]", 
            RowBox[{"{", "}"}]}], "&&", 
           RowBox[{"!", 
            RowBox[{"HowAct", "[", "m", "]"}]}]}], ",", 
          RowBox[{"m", "=", 
           RowBox[{
            RowBox[{"Directory", "[", "]"}], "<>", "\"\<\\\\\>\"", "<>", "n", 
            "<>", "\"\<.cdf\>\""}]}], ",", "Null"}], "]"}], ";", " ", "h"}]}],
       "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ExtrFromNBfile2`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExtrFromNBfile2", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<cdf\>\"", ",", "\"\<nb\>\""}], "}"}], ",", 
        RowBox[{"FileExtension", "[", "x", "]"}]}], "]"}]}]}], ",", 
    RowBox[{"n_", "/;", 
     RowBox[{"StringQ", "[", "n", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ContextFromFile", "[", "x", "]"}]}], ",", "b", ",", "c", ",", 
      "d"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"a", "===", "$Failed"}], ",", "$Failed", ",", 
      RowBox[{
       RowBox[{"d", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"PathToFileQ", "[", "x", "]"}], ",", "x", ",", 
          RowBox[{
           RowBox[{"Directory", "[", "]"}], "<>", "\"\<\\\\\>\"", "<>", 
           "x"}]}], "]"}]}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"$Packages", ",", "a"}], "]"}], ",", 
         RowBox[{
          RowBox[{"c", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"StringReplace", "[", 
               RowBox[{"#", ",", 
                RowBox[{
                 RowBox[{"a", "<>", "n", "<>", "\"\<`\>\""}], "->", 
                 "\"\<\>\""}]}], "]"}], "&"}], ",", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"PureDefinition", "[", "n", "]"}], "}"}], "]"}]}], 
            "]"}]}], ";", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ListQ", "[", "c", "]"}], "&&", 
             RowBox[{
              RowBox[{"Length", "[", "c", "]"}], "\[Equal]", "1"}]}], ",", 
            RowBox[{"c", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "c"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Quiet", "[", 
           RowBox[{"Activate", "[", 
            RowBox[{"ExtrFromNBfile1", "[", 
             RowBox[{"d", ",", "n"}], "]"}], "]"}], "]"}], ";", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"CNames", "[", "a", "]"}], ",", "n"}], "]"}]}], ",", 
            "$Failed", ",", 
            RowBox[{
             RowBox[{"b", "=", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"PureDefinition", "[", "n", "]"}], "}"}], "]"}]}], 
             ";", " ", 
             RowBox[{"c", "=", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"StringReplace", "[", 
                  RowBox[{"#", ",", 
                   RowBox[{
                    RowBox[{"a", "<>", "n", "<>", "\"\<`\>\""}], "->", 
                    "\"\<\>\""}]}], "]"}], "&"}], ",", "b"}], "]"}]}], ";", 
             " ", 
             RowBox[{"RemovePackage", "[", "a", "]"}], ";", " ", 
             RowBox[{"Unprotect", "[", "n", "]"}], ";", 
             RowBox[{"Quiet", "[", 
              RowBox[{"Remove", "[", "n", "]"}], "]"}], ";", " ", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"ListQ", "[", "c", "]"}], "&&", 
                RowBox[{
                 RowBox[{"Length", "[", "c", "]"}], "\[Equal]", "1"}]}], ",", 
               RowBox[{"c", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "c"}], "]"}]}]}], 
           "]"}]}]}], "]"}]}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ExtrFromNBfile3`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExtrFromNBfile3", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<cdf\>\"", ",", "\"\<nb\>\""}], "}"}], ",", 
        RowBox[{"FileExtension", "[", "x", "]"}]}], "]"}]}]}], ",", 
    RowBox[{"n_", "/;", 
     RowBox[{
      RowBox[{"StringQ", "[", "n", "]"}], "||", 
      RowBox[{
       RowBox[{"ListQ", "[", "n", "]"}], "&&", 
       RowBox[{"n", "\[NotEqual]", 
        RowBox[{"{", "}"}]}], "&&", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"StringQ", "[", "#", "]"}], "&"}], ",", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", "n", "}"}], "]"}]}], "]"}], "]"}], "\[Equal]", 
        RowBox[{"{", "True", "}"}]}]}]}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Get", "[", "x", "]"}]}], ",", "b", ",", "c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"g", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"h", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", "n", "}"}], "]"}]}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", " ", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"DisplayForm", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"CDFDeploy", "[", 
      RowBox[{
       RowBox[{"c", "=", "\"\<$Art27$Kr20$.cdf\>\""}], ",", "b", ",", 
       RowBox[{"\"\<Target\>\"", "->", "\"\<CDFPlayer\>\""}]}], "]"}], ";", 
     RowBox[{"b", "=", 
      RowBox[{"ToString1", "[", 
       RowBox[{"Import", "[", 
        RowBox[{"c", ",", "\"\<Plaintext\>\""}], "]"}], "]"}]}], ";", 
     RowBox[{"Quiet", "[", 
      RowBox[{"DeleteFile", "[", 
       RowBox[{"{", 
        RowBox[{"c", ",", 
         RowBox[{
          RowBox[{"FileBaseName", "[", "c", "]"}], "<>", "\"\<.png\>\""}]}], 
        "}"}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "h", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"StringFreeQ", "[", 
          RowBox[{"b", ",", 
           RowBox[{"\"\<Begin[\\\\\\\"`\>\"", "<>", 
            RowBox[{"h", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "<>", "\"\<`\\\\\\\"]\>\""}]}], 
          "]"}], ",", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"g", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"h", "[", 
              RowBox[{"[", "k", "]"}], "]"}], ",", "$Failed"}], "}"}]}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"c", "=", 
           RowBox[{"DeleteDuplicates", "[", 
            RowBox[{"StringCases", "[", 
             RowBox[{"b", ",", 
              RowBox[{"Shortest", "[", 
               RowBox[{
                RowBox[{"\"\<Begin[\\\\\\\"`\>\"", "<>", 
                 RowBox[{"h", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], "<>", 
                 "\"\<`\\\\\\\"]\>\""}], "~~", "__", "~~", "\"\<End[]\>\""}], 
               "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"c", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"StringTake", "[", 
               RowBox[{"#", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Flatten", "[", 
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{
                    RowBox[{"h", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "<>", "\"\<[\>\""}]}], 
                    "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"-", "6"}]}], "}"}]}], "]"}], "&"}], ",", "c"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"c", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"StringReplace", "[", 
               RowBox[{"#", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\"\<\\\\r\>\"", "->", "\"\<\>\""}], ",", 
                  RowBox[{"\"\<\\\\n\>\"", "->", "\"\<\>\""}], ",", 
                  RowBox[{"\"\<\\\\\>\"", "->", "\"\<\>\""}]}], "}"}]}], 
               "]"}], "&"}], ",", "c"}], "]"}]}], ";", " ", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"d", ",", "c"}], "]"}]}]}], "]"}]}], "]"}], ";", 
     RowBox[{"d", "=", 
      RowBox[{"Flatten", "[", "d", "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", "y", "}"}], "\[NotEqual]", 
         RowBox[{"{", "}"}]}], "&&", 
        RowBox[{"!", 
         RowBox[{"HowAct", "[", "y", "]"}]}]}], ",", 
       RowBox[{"y", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "g", "]"}], "\[Equal]", "1"}], ",", 
          RowBox[{"g", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "g"}], "]"}]}], ",", "Null"}],
       "]"}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "d", "]"}], "\[Equal]", "1"}], ",", 
       RowBox[{"d", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "d"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`CdfNbToText`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CdfNbToText", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<cdf\>\"", ",", "\"\<nb\>\""}], "}"}], ",", 
        RowBox[{"FileExtension", "[", "x", "]"}]}], "]"}]}]}], ",", "y___"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Get", "[", "x", "]"}]}], ",", "b", ",", "c"}], "}"}], ",", 
    " ", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"DisplayForm", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"CDFDeploy", "[", 
      RowBox[{
       RowBox[{"c", "=", "\"\<$Art27$Kr20$.cdf\>\""}], ",", "b", ",", 
       RowBox[{"\"\<Target\>\"", "->", "\"\<CDFPlayer\>\""}]}], "]"}], ";", 
     RowBox[{"b", "=", 
      RowBox[{"ToString1", "[", 
       RowBox[{"Import", "[", 
        RowBox[{"c", ",", "\"\<Plaintext\>\""}], "]"}], "]"}]}], ";", 
     RowBox[{"Quiet", "[", 
      RowBox[{"DeleteFile", "[", 
       RowBox[{"{", 
        RowBox[{"c", ",", 
         RowBox[{
          RowBox[{"FileBaseName", "[", "c", "]"}], "<>", "\"\<.png\>\""}]}], 
        "}"}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{
       RowBox[{"DirectoryName", "[", "x", "]"}], "<>", 
       RowBox[{"FileBaseName", "[", "x", "]"}], "<>", "\"\<.txt\>\""}]}], ";",
      " ", 
     RowBox[{"b", "=", 
      RowBox[{"StringReplace", "[", 
       RowBox[{"b", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<\\\\r\>\"", "\[Rule]", " ", "\"\<\>\""}], ",", 
          RowBox[{"\"\<\\\\n\>\"", "->", "\"\<\\n\>\""}], ",", 
          RowBox[{"\"\<\\\\\>\"", "->", "\"\<\>\""}]}], "}"}]}], "]"}]}], ";",
      " ", 
     RowBox[{"WriteString", "[", 
      RowBox[{"c", ",", "b"}], "]"}], ";", " ", 
     RowBox[{"Close", "[", "c", "]"}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "y", "}"}], "\[NotEqual]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", "b"}], "}"}], ",", "c"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`EvaluateCdfNbFile`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EvaluateCdfNbFile", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<cdf\>\"", ",", "\"\<nb\>\""}], "}"}], ",", 
        RowBox[{"FileExtension", "[", "x", "]"}]}], "]"}]}]}], ",", "y___"}], 
   "]"}], ":=", 
  RowBox[{"NotebookEvaluate", "[", 
   RowBox[{
    RowBox[{"NotebookOpen", "[", 
     RowBox[{"x", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "y", "}"}], "\[NotEqual]", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"Visible", "\[Rule]", "True"}], ",", 
        RowBox[{"Visible", "\[Rule]", "False"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"EvaluationElements", "\[Rule]", "All"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ContentsCdfNb`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContentsCdfNb", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<cdf\>\"", ",", "\"\<nb\>\""}], "}"}], ",", 
       RowBox[{"FileExtension", "[", "x", "]"}]}], "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ToString1", "[", 
        RowBox[{"Get", "[", "x", "]"}], "]"}]}], ",", 
      RowBox[{
      "b", "=", "\"\<RowBox[{\\\"Begin\\\", \\\"[\\\", \\\"\\\\\\\"`\>\""}], 
      ",", 
      RowBox[{"c", "=", "\"\<`\\\\\\\"\\\", \\\"]\\\"}]\>\""}], ",", "d"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{"StringCases", "[", 
       RowBox[{"a", ",", 
        RowBox[{"b", "~~", 
         RowBox[{"Shortest", "[", "X__", "]"}], "~~", "c"}]}], "]"}]}], ";", 
     RowBox[{"Sort", "[", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringReplace", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"b", "->", "\"\<\>\""}], ",", 
             RowBox[{"c", "->", "\"\<\>\""}]}], "}"}]}], "]"}], "&"}], ",", 
        "d"}], "]"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ContentsMx`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContentsMx", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
     RowBox[{
      RowBox[{"FileExtension", "[", "x", "]"}], "==", "\"\<mx\>\""}]}]}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ContextInMxFile", "[", "x", "]"}]}], ",", "b"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"a", "===", "$Failed"}], ",", "$Failed", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{"$Packages", ",", "a"}], "]"}], ",", 
        RowBox[{"CNames", "[", "a", "]"}], ",", 
        RowBox[{
         RowBox[{"Get", "[", "x", "]"}], ";", 
         RowBox[{"b", "=", 
          RowBox[{"CNames", "[", "a", "]"}]}], ";", " ", 
         RowBox[{"RemovePackage", "[", "a", "]"}], ";", " ", "b"}]}], "]"}]}],
      "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ContentOfNbCdf`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContentOfNbCdf", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<cdf\>\"", ",", "\"\<nb\>\""}], "}"}], ",", 
        RowBox[{"FileExtension", "[", "x", "]"}]}], "]"}]}]}], ",", "y___"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"Get", "[", "x", "]"}], "]"}]}], ",", "b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"StringTrim", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{"\"\< \\\"`\>\"", ",", "\"\<`\\\"\>\""}], "}"}]}], 
              "]"}], "&"}], ",", 
            RowBox[{"StringCases", "[", 
             RowBox[{"a", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Shortest", "[", 
                 RowBox[{
                 "\"\< \\\"`\>\"", "~~", "__", "~~", "\"\<`\\\"\>\""}], "]"}],
                 ",", 
                RowBox[{"Shortest", "[", 
                 RowBox[{"\"\<`\>\"", "~~", "__", "~~", "\"\<`\>\""}], 
                 "]"}]}], "}"}], ",", 
              RowBox[{"Overlaps", "\[Rule]", "True"}]}], "]"}]}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"SymbolQ", "[", "#", "]"}], "&&", 
            RowBox[{"#", "\[NotEqual]", "\"\<Private\>\""}]}], "&"}]}], "]"}],
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", "y", "}"}], "\[NotEqual]", 
         RowBox[{"{", "}"}]}], "&&", 
        RowBox[{"!", 
         RowBox[{"HowAct", "[", "y", "]"}]}]}], ",", " ", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"StringFreeQ", "[", 
               RowBox[{"a", ",", 
                RowBox[{
                "\"\<{\>\"", "<>", "#", "<>", "\"\<, ::, usage}\>\""}]}], 
               "]"}]}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"c", ",", "#"}], "]"}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"d", ",", "#"}], "]"}]}], "]"}], "&"}], ",", "b"}], 
         "]"}], ";", " ", 
        RowBox[{"y", "=", 
         RowBox[{"{", 
          RowBox[{"c", ",", "d", ",", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"SubsPosSymb", "[", 
                   RowBox[{"a", ",", 
                    RowBox[{"#", "-", "1"}], ",", 
                    RowBox[{"{", "\"\<{\>\"", "}"}], ",", "0"}], "]"}], "&"}],
                  ",", 
                 RowBox[{"Map", "[", 
                  RowBox[{"First", ",", 
                   RowBox[{"StringPosition", "[", 
                    RowBox[{"a", ",", "\"\<, ::, usage}\>\""}], "]"}]}], 
                  "]"}]}], "]"}], ",", 
               RowBox[{
                RowBox[{"!", 
                 RowBox[{"MemberQ", "[", 
                  RowBox[{"b", ",", "#"}], "]"}]}], "&"}]}], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"SymbolQ", "[", "#", "]"}], "&&", 
               RowBox[{"#", "!=", "\"\<p\>\""}]}], " ", "&"}]}], "]"}]}], 
          "}"}]}], ";", " ", "b"}], ",", "b"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`TestCdfNbFile`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TestCdfNbFile", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<cdf\>\"", ",", "\"\<nb\>\""}], "}"}], ",", 
        RowBox[{"FileExtension", "[", "x", "]"}]}], "]"}]}]}], ",", "y___"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"InputForm", "[", 
         RowBox[{"Get", "[", "x", "]"}], "]"}], "]"}]}], ",", 
      RowBox[{
      "b", "=", "\"\<RowBox[{\\\"Begin\\\", \\\"[\\\", \\\"\\\\\\\"`\>\""}], 
      ",", 
      RowBox[{"c", "=", "\"\<`\\\\\\\"\\\", \\\"]\\\"}]\>\""}], ",", 
      RowBox[{
      "d", "=", "\"\<RowBox[{\\\"590\\\", \\\"::\\\", \\\"usage\\\"}]\>\""}], 
      " ", ",", 
      RowBox[{"h", "=", 
       RowBox[{"{", "}"}]}], ",", "p"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"p", "=", 
      RowBox[{"StringCases", "[", 
       RowBox[{"a", ",", 
        RowBox[{"b", "~~", 
         RowBox[{"Shortest", "[", "X__", "]"}], "~~", "c"}]}], "]"}]}], ";", 
     RowBox[{"p", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringReplace", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"b", "->", "\"\<\>\""}], ",", 
             RowBox[{"c", "->", "\"\<\>\""}]}], "}"}]}], "]"}], "&"}], ",", 
        "p"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"StringFreeQ", "[", 
           RowBox[{"a", ",", 
            RowBox[{"StringReplace", "[", 
             RowBox[{"d", ",", 
              RowBox[{"\"\<590\>\"", "\[Rule]", "#"}]}], "]"}]}], "]"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"h", ",", "#"}], "]"}], ",", "Null"}], "]"}], "&"}], ",", 
       "p"}], "]"}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", "y", "}"}], "\[NotEqual]", 
         RowBox[{"{", "}"}]}], "&&", 
        RowBox[{"!", 
         RowBox[{"HowAct", "[", "y", "]"}]}]}], ",", 
       RowBox[{"y", "=", 
        RowBox[{"Sort", "[", "p", "]"}]}], ",", "Null"}], "]"}], ";", " ", 
     "h"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`UsagesCdfNb`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UsagesCdfNb", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<cdf\>\"", ",", "\"\<nb\>\""}], "}"}], ",", 
        RowBox[{"FileExtension", "[", "x", "]"}]}], "]"}]}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{"SymbolQ", "[", "y", "]"}], "||", 
      RowBox[{
       RowBox[{"ListQ", "[", "y", "]"}], "&&", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"SymbolQ", "[", "#", "]"}], "&"}], ",", "y"}], "]"}], 
         "]"}], "\[Equal]", 
        RowBox[{"{", "True", "}"}]}]}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"InputForm", "[", 
         RowBox[{"Get", "[", "x", "]"}], "]"}], "]"}]}], ",", 
      RowBox[{
      "b", "=", 
       "\"\<RowBox[{RowBox[{\\\"590\\\", \\\"::\\\", \\\"usage\\\"}], \\\"=\\\
\", \>\""}], ",", 
      RowBox[{"c", "=", "\"\<}], \\\"\[IndentingNewLine]\\\"}]\>\""}], ",", 
      RowBox[{
      "b1", "=", 
       "\"\<RowBox[{RowBox[{\\\"590\\\", \\\"::\\\", \\\"usage\\\"}], \\\"=\\\
\", \>\""}], ",", 
      RowBox[{"c1", "=", "\"\<}]\>\""}], ",", "f", ",", "p", ",", "g"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", "t_", "]"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"z", "=", 
           RowBox[{"StringReplace", "[", 
            RowBox[{"b", ",", 
             RowBox[{"\"\<590\>\"", "\[Rule]", "t"}]}], "]"}]}], ",", 
          RowBox[{"z1", "=", 
           RowBox[{"StringReplace", "[", 
            RowBox[{"b1", ",", 
             RowBox[{"\"\<590\>\"", "\[Rule]", "t"}]}], "]"}]}], ",", "h", 
          ",", "d"}], "}"}], ",", "  ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"d", "=", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"StringCases", "[", 
             RowBox[{"a", ",", 
              RowBox[{"z", "~~", 
               RowBox[{"Shortest", "[", "X__", "]"}], "~~", "c"}]}], "]"}], 
            ",", 
            RowBox[{"StringCases", "[", 
             RowBox[{"a", ",", 
              RowBox[{"z1", "~~", 
               RowBox[{"Shortest", "[", "X__", "]"}], "~~", "c1"}]}], "]"}]}],
            "]"}]}], ";", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"d", "\[Equal]", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{"ToExpression", "[", 
            RowBox[{"ToExpression", "[", 
             RowBox[{"StringReplace", "[", 
              RowBox[{
               RowBox[{"d", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"z", "->", "\"\<\>\""}], ",", 
                 RowBox[{"c", "->", "\"\<\>\""}], ",", 
                 RowBox[{"z1", "->", "\"\<\>\""}], ",", 
                 RowBox[{"c1", "->", "\"\<\>\""}]}], "}"}]}], "]"}], "]"}], 
            "]"}]}], "]"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"g", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"p", "=", 
             RowBox[{"f", "[", "#", "]"}]}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"p", "===", " ", 
               RowBox[{"{", "}"}]}], ",", 
              RowBox[{
              "#", "<>", "\"\<::\>\"", "<>", "\"\<No\>\"", "<>", 
               "\"\<\\n\>\""}], ",", 
              RowBox[{
              "#", "<>", "\"\<::\>\"", "<>", "p", "<>", "\"\<\\n\>\""}]}], 
             "]"}]}], "}"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "&"}], ",", 
        RowBox[{"Map", "[", 
         RowBox[{"ToString", ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", "y", "}"}], "]"}]}], "]"}]}], "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "g", "]"}], "\[Equal]", "1"}], ",", 
       RowBox[{"g", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"StringJoin", "[", "g", "]"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ActivateMeansFromCdfNb`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ActivateMeansFromCdfNb", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<cdf\>\"", ",", "\"\<nb\>\""}], "}"}], ",", 
        RowBox[{"FileExtension", "[", "x", "]"}]}], "]"}]}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{"SymbolQ", "[", "y", "]"}], "||", 
      RowBox[{
       RowBox[{"ListQ", "[", "y", "]"}], "&&", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"SymbolQ", "[", "#", "]"}], "&"}], ",", "y"}], "]"}], 
         "]"}], "\[Equal]", 
        RowBox[{"{", "True", "}"}]}]}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"ToString", ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", "y", "}"}], "]"}]}], "]"}]}], ",", "b", ",", "c"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"UsagesCdfNb", "[", 
       RowBox[{"x", ",", "a"}], "]"}]}], ";", " ", 
     RowBox[{"b", "=", 
      RowBox[{"StringSplit", "[", 
       RowBox[{
        RowBox[{"\"\<\\n\>\"", "<>", "b"}], ",", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"\"\<\\n\>\"", "<>", "#", "<>", "\"\<::\>\""}], "->", 
            RowBox[{"#", "<>", "\"\<::\>\""}]}], "&"}], ",", "a"}], "]"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"ToExpression", "[", 
        RowBox[{
         RowBox[{"b", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"2", "*", "k"}], "-", "1"}], "]"}], "]"}], "<>", 
         "\"\<usage=\>\"", "<>", 
         RowBox[{"ToString1", "[", 
          RowBox[{"b", "[", 
           RowBox[{"[", 
            RowBox[{"2", "*", "k"}], "]"}], "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{
          RowBox[{"Length", "[", "b", "]"}], "/", "2"}]}], "}"}]}], "]"}], 
     ";", " ", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Quiet", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ClearAll", "[", "c", "]"}], ",", 
           RowBox[{"ExtrFromNBfile1", "[", 
            RowBox[{"x", ",", "#", ",", "c"}], "]"}], ",", 
           RowBox[{"DeleteFile", "[", "c", "]"}]}], "}"}], "]"}], "&"}], ",", 
       "a"}], "]"}], ";"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ExtrFromMfile`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExtrFromMfile", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"FileExtension", "[", "x", "]"}], "==", "\"\<m\>\""}]}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{"SymbolQ", "[", "y", "]"}], "||", 
      RowBox[{
       RowBox[{"ListQ", "[", "y", "]"}], "&&", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Map", "[", 
          RowBox[{"SymbolQ", ",", "y"}], "]"}], "]"}], "\[Equal]", 
        RowBox[{"{", "True", "}"}]}]}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ReadString", "[", "x", "]"}]}], ",", "b", ",", "c", ",", "d", 
      ",", "d1", ",", "n"}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"StringSplit", "[", 
       RowBox[{"a", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<(**)\>\"", ",", "\"\<(* ::Input:: *)\>\""}], "}"}]}], 
       "]"}]}], ";", " ", 
     RowBox[{"b", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"StringFreeQ", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{
               "\"\<::usage=\>\"", ",", "\"\<BeginPackage[\\\"\>\"", ",", 
                " ", "\"\<End[]\>\""}], "}"}]}], "]"}]}], ",", "#", ",", 
           "Null"}], "]"}], "&"}], ",", "b"}], "]"}]}], ";", 
     RowBox[{"b", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"b", ",", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"SameQ", "[", 
           RowBox[{"#", ",", "Null"}], "]"}]}], "&"}]}], "]"}]}], ";", " ", 
     RowBox[{"c", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"ToString", ",", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", "y", "}"}], "]"}]}], "]"}]}], ";", " ", 
     RowBox[{"d", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"\"\<Begin[\\\"`\>\"", "<>", "#", "<>", "\"\<`\\\"]\>\""}], 
         "&"}], ",", "c"}], "]"}]}], ";", " ", 
     RowBox[{"d1", "=", 
      RowBox[{"Map", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"\"\<(*\>\"", "<>", "#", "<>", "\"\<::usage=\>\""}], "&"}], 
        ",", "c"}], "]"}]}], ";", " ", 
     RowBox[{"b", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"b", ",", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"StringFreeQ", "[", 
           RowBox[{"#", ",", 
            RowBox[{"Join", "[", 
             RowBox[{"d", ",", "d1"}], "]"}]}], "]"}]}], "&"}]}], "]"}]}], 
     ";", " ", 
     RowBox[{"b", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringTake", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", 
             RowBox[{"-", "5"}]}], "}"}]}], "]"}], "&"}], ",", "b"}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"SuffPref", "[", 
            RowBox[{"#", ",", "d1", ",", "1"}], "]"}], ",", 
           RowBox[{"StringTake", "[", 
            RowBox[{"#", ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", 
               RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"n", "=", 
             RowBox[{"StringReplace", "[", 
              RowBox[{"#", ",", 
               RowBox[{"GenRules", "[", 
                RowBox[{"d", ",", "\"\<\>\""}], "]"}]}], "]"}]}], ";", " ", 
            RowBox[{"n", "=", 
             RowBox[{"StringReplace", "[", 
              RowBox[{"n", ",", 
               RowBox[{"\"\<*)\\r\\n(*\>\"", "->", "\"\<\>\""}]}], "]"}]}], 
            ";", " ", 
            RowBox[{"StringTake", "[", 
             RowBox[{"n", ",", 
              RowBox[{"{", 
               RowBox[{"3", ",", 
                RowBox[{"-", "6"}]}], "}"}]}], "]"}]}]}], "]"}], "&"}], ",", 
        "b"}], "]"}]}], ";", " ", 
     RowBox[{"ToExpression", "[", "c", "]"}], ";", " ", "c"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`AtomicQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AtomicQ", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "F", "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"F", ",", "x"}], "]"}], "===", "x"}], ",", "True", ",", 
      "False"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SymbolGreater`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SymbolGreater", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"SymbolQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"SymbolQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Greater", "[", 
   RowBox[{
    RowBox[{"ToExpression", "[", 
     RowBox[{"StringJoin", "[", 
      RowBox[{"Map", "[", 
       RowBox[{"ToString", ",", 
        RowBox[{"ToCharacterCode", "[", 
         RowBox[{"ToString", "[", "x", "]"}], "]"}]}], "]"}], "]"}], "]"}], 
    ",", 
    RowBox[{"ToExpression", "[", 
     RowBox[{"StringJoin", "[", 
      RowBox[{"Map", "[", 
       RowBox[{"ToString", ",", 
        RowBox[{"ToCharacterCode", "[", 
         RowBox[{"ToString", "[", "y", "]"}], "]"}]}], "]"}], "]"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SymbolLess`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SymbolLess", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"SymbolQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"SymbolQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Less", "[", 
   RowBox[{
    RowBox[{"ToExpression", "[", 
     RowBox[{"StringJoin", "[", 
      RowBox[{"Map", "[", 
       RowBox[{"ToString", ",", 
        RowBox[{"ToCharacterCode", "[", 
         RowBox[{"ToString", "[", "x", "]"}], "]"}]}], "]"}], "]"}], "]"}], 
    ",", 
    RowBox[{"ToExpression", "[", 
     RowBox[{"StringJoin", "[", 
      RowBox[{"Map", "[", 
       RowBox[{"ToString", ",", 
        RowBox[{"ToCharacterCode", "[", 
         RowBox[{"ToString", "[", "y", "]"}], "]"}]}], "]"}], "]"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StrFromStr`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StrFromStr", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "\"\<\\\"\>\""}], ",", "b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"StringPosition", "[", 
         RowBox[{"x", ",", "a"}], "]"}], "]"}], "]"}]}], ";", 
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{
         RowBox[{"Length", "[", "b", "]"}], "-", "1"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"Append", "[", 
          RowBox[{"c", ",", 
           RowBox[{"ToExpression", "[", 
            RowBox[{"StringTake", "[", 
             RowBox[{"x", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"b", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], ",", 
                RowBox[{"b", "[", 
                 RowBox[{"[", 
                  RowBox[{"k", "+", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], 
            "]"}]}], "]"}]}], ";", " ", 
        RowBox[{"k", "=", 
         RowBox[{"k", "+", "1"}]}]}]}], "]"}], ";", "c"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StringStringQ`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StringStringQ", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", "False", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"SuffPref", "[", 
        RowBox[{"x", ",", "\"\<\\\"\>\"", ",", "1"}], "]"}], "&&", 
       RowBox[{"SuffPref", "[", 
        RowBox[{"x", ",", "\"\<\\\"\>\"", ",", "2"}], "]"}]}], ",", "True", 
      ",", "False"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StringLevels`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StringLevels", "[", "x_String", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "x"}], ",", 
      RowBox[{"n", "=", 
       RowBox[{"-", "1"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"StringQ", "[", "a", "]"}], ",", 
       RowBox[{
        RowBox[{"a", "=", 
         RowBox[{"ToExpression", "[", "a", "]"}]}], ";", 
        RowBox[{"n", "++"}], ";", 
        RowBox[{"Continue", "[", "]"}]}]}], "]"}], ";", "n"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Npackage`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Npackage", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"MemberQ", "[", 
     RowBox[{
      RowBox[{"Contexts1", "[", "]"}], ",", "x"}], "]"}], ",", 
    RowBox[{"Sort", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"Names", "[", 
        RowBox[{"x", "<>", "\"\<*\>\""}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"StringTake", "[", 
           RowBox[{"#", ",", 
            RowBox[{"-", "1"}]}], "]"}], "\[NotEqual]", "\"\<$\>\""}], "&&", 
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{"Definition", "[", "#", "]"}], "]"}], "\[NotEqual]", 
          "\"\<Null\>\""}]}], "&"}]}], "]"}], "]"}], ",", "$Failed"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`LocObj`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LocObj", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Head1", "[", "x", "]"}]}], ",", "b"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"b", "[", "y_", "]"}], ":=", 
      RowBox[{"Context", "[", "y", "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"a", "===", "Module"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "\"\<Module\>\"", ",", 
         RowBox[{"b", "[", "x", "]"}]}], "}"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"a", "===", "Function"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "\"\<Function\>\"", ",", 
           RowBox[{"b", "[", "x", "]"}]}], "}"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"SystemQ", "[", "x", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "\"\<SFunction\>\"", ",", 
             RowBox[{"b", "[", "x", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "\"\<Expression\>\"", ",", "\"\<Global\>\""}], 
            "}"}]}], "]"}]}], "]"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Affiliate`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Affiliate", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"Context", "[", "x", "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ToString", "[", "a", "]"}], "===", 
       RowBox[{"\"\<Context[\>\"", "<>", "x", "<>", "\"\<]\>\""}]}], ",", 
      "\"\<Undefined\>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"Contexts", "[", "]"}], ",", "a"}], "]"}], "&&", 
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"Quiet", "[", 
             RowBox[{"DefFunc", "[", "x", "]"}], "]"}], "]"}], "\[Equal]", 
           "\"\<Null\>\""}]}], "||", 
         RowBox[{
          RowBox[{"Attributes", "[", "x", "]"}], "===", 
          RowBox[{"{", "Temporary", "}"}]}]}], ",", "\"\<Undefined\>\"", ",", 
        "a"}], "]"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`LoadNameFromM`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LoadNameFromM", "[", 
   RowBox[{
    RowBox[{"F_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "F", "]"}], "&&", 
      RowBox[{
       RowBox[{"FileExtension", "[", "F", "]"}], "\[Equal]", "\"\<m\>\""}], 
      " ", "&&", 
      RowBox[{
       RowBox[{"StringTake", "[", 
        RowBox[{
         RowBox[{"ToString", "[", 
          RowBox[{"ContextFromFile", "[", "F", "]"}], "]"}], ",", 
         RowBox[{"-", "1"}]}], "]"}], "\[Equal]", "\"\<`\>\""}]}]}], ",", 
    RowBox[{"p_", "/;", 
     RowBox[{
      RowBox[{"StringQ", "[", "p", "]"}], "||", 
      RowBox[{"ListStringQ", "[", "p", "]"}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ReadFullFile", "[", "F", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"c", "=", "\"\<*)(*End[]*)\>\""}], ",", "d", ",", 
      RowBox[{"h", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", "p", "}"}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"SubsString", "[", 
          RowBox[{"a", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
             "\"\<(*Begin[\\\"`\>\"", "<>", "#", "<>", "\"\<`\\\"]*)(*\>\""}],
              ",", "c"}], "}"}], ",", "90"}], "]"}], "&"}], ",", "h"}], 
       "]"}]}], ";", 
     RowBox[{"b", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "b", "]"}], "\[Equal]", "1"}], ",", 
        RowBox[{"Flatten", "[", "b", "]"}], ",", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", "b"}], "]"}]}], 
       "]"}]}], ";", " ", 
     RowBox[{"Map", "[", 
      RowBox[{"ToExpression", ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"StringReplace", "[", 
           RowBox[{"#", ",", 
            RowBox[{"\"\<*)(*\>\"", "\[Rule]", "\"\< \>\""}]}], "]"}], "&"}], 
         ",", "b"}], "]"}]}], "]"}], ";"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`OpenFiles`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"OpenFiles", "[", "x___String", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{
        RowBox[{"Streams", "[", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"3", ";;", 
          RowBox[{"-", "1"}]}], "]"}], "]"}]}], ",", "b", ",", "c", ",", "d", 
      ",", 
      RowBox[{"h1", "=", 
       RowBox[{"{", "\"\<read\>\"", "}"}]}], " ", ",", 
      RowBox[{"h2", "=", 
       RowBox[{"{", "\"\<write\>\"", "}"}]}]}], " ", "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"a", "\[Equal]", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{
       RowBox[{"d", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Part", "[", 
              RowBox[{"#", ",", "0"}], "]"}], ",", 
             RowBox[{"Part", "[", 
              RowBox[{"#", ",", "1"}], "]"}]}], "}"}], "&"}], ",", "a"}], 
         "]"}]}], ";", 
       RowBox[{"b", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"d", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "==", "InputStream"}], "&"}]}], 
         "]"}]}], ";", " ", 
       RowBox[{"c", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"d", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "==", "OutputStream"}], "&"}]}], 
         "]"}]}], ";", "  ", "\[IndentingNewLine]", 
       RowBox[{"b", "=", 
        RowBox[{"Map", "[", 
         RowBox[{"DeleteDuplicates", ",", 
          RowBox[{"Map", "[", 
           RowBox[{"Flatten", ",", 
            RowBox[{"Gather", "[", 
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{"b", ",", "c"}], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"#1", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
                RowBox[{"#2", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}], "]"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"b", "=", 
        RowBox[{"Map", "[", 
         RowBox[{"Flatten", ",", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"SameQ", "[", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "InputStream"}], "]"}],
                ",", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"h1", ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ";;", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}], ",", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"h2", ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ";;", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}]}], "]"}], 
             "&"}], ",", "b"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "x", "}"}], "\[Equal]", 
          RowBox[{"{", "}"}]}], ",", "b", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"SameQ", "[", 
            RowBox[{
             RowBox[{"FileExistsQ", "[", "x", "]"}], ",", "True"}], "]"}], 
           ",", 
           RowBox[{
            RowBox[{"c", "=", 
             RowBox[{"Map", "[", 
              RowBox[{"Flatten", ",", 
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"Select", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"StandPath", "[", "#", "]"}], "===", 
                    RowBox[{"StandPath", "[", "x", "]"}]}], "&"}]}], "]"}]}], 
                   "}"}], "&"}], ",", "b"}], "]"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"c", "==", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "\"\<read\>\"", "}"}], ",", 
                 RowBox[{"{", "\"\<write\>\"", "}"}]}], "}"}]}], ",", 
              RowBox[{"{", "}"}], ",", 
              RowBox[{
               RowBox[{"c", "=", 
                RowBox[{"Select", "[", 
                 RowBox[{"c", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Length", "[", "#", "]"}], ">", "1"}], "&"}]}], 
                 "]"}]}], ";", " ", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "c", "]"}], ">", "1"}], ",", "c", 
                 ",", 
                 RowBox[{"c", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ",", 
              RowBox[{"{", "}"}]}], "]"}]}]}], "]"}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`FilesDistrDirs`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FilesDistrDirs", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"DirQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", "}"}]}], ",", "b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"FromCharacterCode", "[", "17", "]"}]}], ",", "d", ",", "g", 
      ",", 
      RowBox[{"h", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"f", "=", "\"\<$Art27Kr20$\>\""}], ",", 
      RowBox[{"k", "=", "1"}], ",", "t"}], "}"}], ",", 
    RowBox[{
     RowBox[{"Run", "[", 
      RowBox[{"\"\<Dir \>\"", "<>", 
       RowBox[{"StandPath", "[", "x", "]"}], "<>", "\"\< /A/B/OG/S > \>\"", "<>",
        "f"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "<", "Infinity"}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"b", "=", 
         RowBox[{"Read", "[", 
          RowBox[{"f", ",", "String"}], "]"}]}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"b", ",", "EndOfFile"}], "]"}], ",", 
          RowBox[{
           RowBox[{"DeleteFile", "[", 
            RowBox[{"Close", "[", "f", "]"}], "]"}], ";", 
           RowBox[{"Break", "[", "]"}]}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"a", ",", "b"}], "]"}]}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"Gather", "[", 
       RowBox[{
        RowBox[{"PrependTo", "[", 
         RowBox[{"a", ",", 
          RowBox[{"StringReplace", "[", 
           RowBox[{"x", ",", 
            RowBox[{"\"\</\>\"", "->", "\"\<\\\\\>\""}]}], "]"}]}], "]"}], 
        ",", 
        RowBox[{
         RowBox[{
          RowBox[{"DirQ", "[", "#1", "]"}], "===", 
          RowBox[{"DirQ", "[", "#2", "]"}]}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"d", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Sort", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"StringJoin", "[", 
              RowBox[{"#", ",", "\"\<\\\\\>\""}], "]"}], "&"}], ",", 
            RowBox[{"b", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"StringCount", "[", 
             RowBox[{"#1", ",", "\"\<\\\\\>\""}], "]"}], "\[GreaterEqual]", 
            RowBox[{"StringCount", "[", 
             RowBox[{"#2", ",", "\"\<\\\\\>\""}], "]"}]}], "&"}]}], "]"}], 
        ",", 
        RowBox[{"Quiet", "[", 
         RowBox[{"Check", "[", 
          RowBox[{
           RowBox[{"b", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], "]"}]}], "}"}]}], ";", 
     RowBox[{"a", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"ToLowerCase", ",", 
        RowBox[{"Flatten", "[", "d", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", 
         RowBox[{"d", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"t", "=", 
         RowBox[{"ToLowerCase", "[", 
          RowBox[{
           RowBox[{"d", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "k", "]"}], "]"}], "]"}]}], ";", " ", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"h", ",", 
          RowBox[{"g", "=", 
           RowBox[{"Select", "[", 
            RowBox[{"a", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"SuffPref", "[", 
                RowBox[{"#", ",", "t", ",", "1"}], "]"}], "&&", 
               RowBox[{"StringFreeQ", "[", 
                RowBox[{
                 RowBox[{"StrDelEnds", "[", 
                  RowBox[{"#", ",", "t", ",", "1"}], "]"}], ",", 
                 "\"\<\\\\\>\""}], "]"}]}], "&"}]}], "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"a", "=", 
         RowBox[{"MinusList", "[", 
          RowBox[{"a", ",", "g"}], "]"}]}]}]}], "]"}], ";", " ", 
     RowBox[{"a", "=", 
      RowBox[{"{", "}"}]}], ";", " ", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "h", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"b", "=", 
         RowBox[{"h", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", " ", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"a", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"b", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"StrDelEnds", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"b", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], "&"}], 
              ",", 
              RowBox[{"b", "[", 
               RowBox[{"[", 
                RowBox[{"2", ";;", 
                 RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}]}], "}"}]}], 
         "]"}]}]}], "]"}], ";", " ", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", "#", "]"}], "&"}], ",", "a"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DirFilePaths`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DirFilePaths", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_:", 
     RowBox[{
      RowBox[{
       RowBox[{"BootDrive1", "[", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "<>", "\"\<\\\\*.*\>\""}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", "h", ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"Unique", "[", "\"\<avz\>\"", "]"}], "]"}]}], ",", 
      RowBox[{"a", "=", 
       RowBox[{"StringTrim", "[", 
        RowBox[{
         RowBox[{"StandStrForm", "[", "x", "]"}], ",", "\"\<\\\\\>\""}], 
        "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Run", "[", 
      RowBox[{"\"\<DIR /A/B/S \>\"", "<>", 
       RowBox[{"StandPath", "[", "y", "]"}], "<>", "\"\< > \>\"", "<>", "b"}],
       "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"h", "=", 
      RowBox[{"ReadList", "[", 
       RowBox[{"b", ",", "String"}], "]"}]}], ";", 
     RowBox[{"DeleteFile", "[", "b", "]"}], ";", " ", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"StringFreeQ", "[", 
            RowBox[{
             RowBox[{"StandPath", "[", "#", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\"\<\\\\\>\"", "<>", "a", "<>", "\"\<\\\\\>\""}], ",", 
               RowBox[{"\"\<\\\\\>\"", "<>", "a"}]}], "}"}]}], "]"}]}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"DirectoryQ", "[", "#", "]"}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"c", ",", "#"}], "]"}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"d", ",", "#"}], "]"}]}], "]"}], ",", "Null"}], "]"}], 
        "&"}], ",", "h"}], "]"}], ";", 
     RowBox[{"{", 
      RowBox[{"c", ",", "d"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`MathematicaDF`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MathematicaDF", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "\"\<Art27$Kr20$\>\""}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"c", "=", "\"\<\>\""}], ",", "d"}], "}"}], ",", 
    RowBox[{
     RowBox[{"Run", "[", 
      RowBox[{"\"\<Dir \>\"", "<>", "\"\< /A/B/S \>\"", "<>", 
       RowBox[{"StrStr", "[", "$InstallationDirectory", "]"}], "<>", 
       "\"\< > \>\"", "<>", "a"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"SameQ", "[", 
         RowBox[{"c", ",", "EndOfFile"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"Read", "[", 
          RowBox[{"a", ",", "String"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Quiet", "[", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"DirectoryQ", "[", "c", "]"}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"b", ",", "\"\<dir\>\""}], "]"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"FileExistsQ", "[", "c", "]"}], ",", 
             RowBox[{
              RowBox[{"d", "=", 
               RowBox[{"ToLowerCase", "[", 
                RowBox[{"FileExtension", "[", "c", "]"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"b", ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"d", "===", "\"\<\>\""}], ",", 
                  "\"\<NoExtension\>\"", ",", "d"}], "]"}]}], "]"}]}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"b", ",", "\"\<NoFile\>\""}], "]"}]}], "]"}]}], "]"}], 
         "]"}]}]}], "]"}], ";", 
     RowBox[{"DeleteFile", "[", 
      RowBox[{"Close", "[", "a", "]"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Sort", "[", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"Length", "[", "#", "]"}]}], "}"}], "&"}], ",", 
         RowBox[{"Gather", "[", 
          RowBox[{"b", ",", 
           RowBox[{
            RowBox[{"#1", "===", "#2"}], "&"}]}], "]"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Order", "[", 
          RowBox[{
           RowBox[{"#1", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"#2", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "\[Equal]", "1"}], 
        "&"}]}], "]"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Memory`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Memory", "[", "x___", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "\"\<$Memory$\>\""}], ",", "b", ",", 
      RowBox[{"c", "=", "\"\<mem.exe\>\""}], ",", "d"}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", " ", 
      RowBox[{"$InstallationDirectory", "<>", "\"\<\\\\\>\"", "<>", "c"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"FileExistsQ", "[", "b", "]"}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"Run", "[", 
         RowBox[{"c", ",", "\"\< > \>\"", ",", "a"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"d", "=", 
         RowBox[{"LoadExtProg", "[", "c", "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"d", "===", "$Failed"}], ",", 
          RowBox[{"Return", "[", "$Failed", "]"}], ",", 
          RowBox[{"c", "=", 
           RowBox[{"Run", "[", 
            RowBox[{"c", ",", "\"\< > \>\"", ",", "a"}], "]"}]}]}], "]"}]}]}],
       "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "x", "}"}], "!=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"DeleteFile", "[", "b", "]"}]}], "]"}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"c", "!=", "0"}], ",", 
       RowBox[{
        RowBox[{"DeleteFile", "[", "a", "]"}], ";", "$Failed"}], ",", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"Map", "[", 
          RowBox[{"StringTrim", ",", 
           RowBox[{"ReadList", "[", 
            RowBox[{"a", ",", "String"}], "]"}]}], "]"}]}], ";", 
        RowBox[{"DeleteFile", "[", "a", "]"}], ";", "c"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`EmptyFileQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EmptyFileQ", "[", 
   RowBox[{
    RowBox[{"f_", "/;", 
     RowBox[{"StringQ", "[", "f", "]"}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"FileExistsQ", "[", "f", "]"}], ",", 
       RowBox[{"b", "=", 
        RowBox[{"{", "f", "}"}]}], ",", 
       RowBox[{
        RowBox[{"c", "=", "Art27$Kr20"}], ";", 
        RowBox[{"ClearAll", "[", "Art27$Kr20", "]"}], ";", 
        RowBox[{"a", "=", 
         RowBox[{"FileExistsQ1", "[", 
          RowBox[{"f", ",", "Art27$Kr20"}], "]"}]}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", "a"}], ",", 
       RowBox[{"Return", "[", "$Failed", "]"}], ",", 
       RowBox[{
        RowBox[{"b", "=", "Art27$Kr20"}], ";", 
        RowBox[{"Art27$Kr20", "=", "c"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "b", "]"}]}], ",", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"d", ",", 
          RowBox[{
           RowBox[{"Quiet", "[", 
            RowBox[{"Close", "[", 
             RowBox[{"b", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Quiet", "[", 
               RowBox[{"Read", "[", 
                RowBox[{"b", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "===", 
              "EndOfFile"}], ",", 
             RowBox[{"Quiet", "[", 
              RowBox[{
               RowBox[{"Close", "[", 
                RowBox[{"b", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "]"}], ";", "True"}], "]"}], 
             ",", 
             RowBox[{
              RowBox[{"Quiet", "[", 
               RowBox[{"Close", "[", 
                RowBox[{"b", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], ";", 
              "False"}]}], "]"}]}]}], "]"}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"d", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "d", "]"}], "\[Equal]", "1"}], ",", 
        RowBox[{"d", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "d"}], "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "y", "}"}], "\[NotEqual]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"d", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "b", "]"}], "\[Equal]", "1"}], ",", 
           RowBox[{"b", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "b"}], "]"}]}], "}"}], ",", 
       "d"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DeleteFile1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DeleteFile1", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"StringQ", "[", "x", "]"}], "||", 
      RowBox[{"ListQ", "[", "x", "]"}]}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"ToString", ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", "x", "}"}], "]"}]}], "]"}]}], ",", "b", ",", 
      RowBox[{"c", "=", "$ArtKr$"}], ",", "d", ",", "p", ",", "t"}], "}"}], 
    ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"StringFreeQ", "[", 
          RowBox[{
           RowBox[{"Ver", "[", "]"}], ",", "\"\< XP \>\""}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"FilesDistrDirs", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"BootDrive", "[", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "<>", "\"\<:\\\\Recycler\>\""}], 
          "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"p", "=", "90"}], ";", 
         RowBox[{"ClearAll", "[", "$ArtKr$", "]"}], ";", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"FileExistsQ1", "[", 
            RowBox[{"\"\<$recycle.bin\>\"", ",", "$ArtKr$"}], "]"}], ",", 
           RowBox[{"d", "=", 
            RowBox[{"$ArtKr$", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", 
           RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"b", "=", 
          RowBox[{
           RowBox[{"SortBy", "[", 
            RowBox[{
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{"FilesDistrDirs", "[", "d", "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"DirectoryQ", "[", "#", "]"}], "&"}]}], "]"}], ",", 
             RowBox[{
              RowBox[{"Length", "[", "#", "]"}], "&"}]}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}]}], "]"}]}], ";", 
     RowBox[{"$ArtKr$", "=", "c"}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"StandPath", ",", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"StringFreeQ", "[", 
              RowBox[{"#", ",", "\"\<:\>\""}], "]"}], ",", 
             RowBox[{
              RowBox[{"Directory", "[", "]"}], "<>", "\"\<\\\\\>\"", "<>", 
              "#"}], ",", "#"}], "]"}], "&"}], ",", "a"}], "]"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"t", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Run", "[", 
          RowBox[{"\"\<Copy /Y \>\"", "<>", "#", "<>", "\"\< \>\"", "<>", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"p", "\[Equal]", "90"}], ",", 
             RowBox[{"b", "<>", 
              RowBox[{
               RowBox[{"FileNameSplit", "[", "#", "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"-", "1"}], "]"}], "]"}]}], ",", 
             RowBox[{"b", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "]"}], "&"}], ",", 
        "c"}], "]"}]}], ";", " ", 
     RowBox[{"t", "=", 
      RowBox[{"Position", "[", 
       RowBox[{"t", ",", "1"}], "]"}]}], ";", " ", 
     RowBox[{"c", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"t", "\[NotEqual]", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"MinusList", "[", 
         RowBox[{"c", ",", 
          RowBox[{"b", "=", 
           RowBox[{"Extract", "[", 
            RowBox[{"c", ",", "t"}], "]"}]}]}], "]"}], ",", "Null"}], "]"}]}],
      ";", "\[IndentingNewLine]", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"t", "\[NotEqual]", 
         RowBox[{"{", "}"}]}], "&&", 
        RowBox[{
         RowBox[{"{", "y", "}"}], "\[NotEqual]", 
         RowBox[{"{", "}"}]}], "&&", 
        RowBox[{"!", 
         RowBox[{"HowAct", "[", "y", "]"}]}]}], ",", 
       RowBox[{"Quiet", "[", 
        RowBox[{"y", "=", "b"}], "]"}], ",", 
       RowBox[{"Quiet", "[", 
        RowBox[{"y", "=", 
         RowBox[{"{", "}"}]}], "]"}]}], "]"}], ";", " ", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Attrib", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", 
          RowBox[{"Quiet", "[", 
           RowBox[{"DeleteFile", "[", "#", "]"}], "]"}]}], "}"}], "&"}], ",", 
       "c"}], "]"}], ";", " ", "0"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ClearRecycler`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearRecycler", "[", "x___", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"c", "=", "\"\<\>\""}], ",", 
      RowBox[{"k", "=", "2"}], ",", 
      RowBox[{"d", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"BootDrive", "[", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "<>", "\"\<:\\\\Recycler\>\""}]}], 
      ",", "a"}], "}"}], ",", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"FilesDistrDirs", "[", "d", "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", "x", "}"}], "\[NotEqual]", 
         RowBox[{"{", "}"}]}], "&&", 
        RowBox[{"x", "===", "\"\<ALL\>\""}]}], ",", 
       RowBox[{
        RowBox[{"Run", "[", 
         RowBox[{
         "\"\<Dir \>\"", "<>", "d", "<>", "\"\< /A/B/S/W > Dir.txt\>\""}], 
         "]"}], ";", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"SameQ", "[", 
            RowBox[{"c", ",", "EndOfFile"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"c", "=", 
            RowBox[{"Read", "[", 
             RowBox[{"\"\<Dir.txt\>\"", ",", "String"}], "]"}]}], ";", " ", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"b", ",", "c"}], "]"}], ";", " ", 
           RowBox[{"Continue", "[", "]"}]}]}], "]"}], ";", 
        RowBox[{"DeleteFile", "[", 
         RowBox[{"Close", "[", "\"\<Dir.txt\>\"", "]"}], "]"}], ";", " ", 
        RowBox[{"b", "=", 
         RowBox[{"b", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", 
            RowBox[{"-", "2"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "1"}], ",", 
          RowBox[{"k", "\[LessEqual]", 
           RowBox[{"Length", "[", "b", "]"}]}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{
           RowBox[{"c", "=", 
            RowBox[{"b", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"DirectoryQ", "[", "c", "]"}], ",", 
             RowBox[{"DeleteDirectory", "[", 
              RowBox[{"c", ",", 
               RowBox[{"DeleteContents", "\[Rule]", "True"}]}], "]"}], ",", 
             RowBox[{"Run", "[", 
              RowBox[{"\"\<Del /F /A[:AHR] \>\"", "<>", "c"}], "]"}]}], 
            "]"}]}]}], "]"}], ";", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"a", "=", 
         RowBox[{
          RowBox[{"FilesDistrDirs", "[", "d", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"a", "\[Equal]", 
           RowBox[{"{", "\"\<c:\\\\recycler\\\\\>\"", "}"}]}], ",", "0", ",", 
          " ", 
          RowBox[{
           RowBox[{"While", "[", 
            RowBox[{
             RowBox[{"k", "\[LessEqual]", 
              RowBox[{"Length", "[", "a", "]"}]}], ",", 
             RowBox[{
              RowBox[{"c", "=", 
               RowBox[{"FileBaseName", "[", 
                RowBox[{"a", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"c", "\[NotEqual]", "\"\<desktop\>\""}], "&&", 
                 RowBox[{"!", 
                  RowBox[{"StringMatchQ", "[", 
                   RowBox[{"c", ",", 
                    RowBox[{
                    "\"\<info\>\"", "~~", "___", "~~", "NumberString"}]}], 
                   "]"}]}], "&&", 
                 RowBox[{"!", 
                  RowBox[{"StringMatchQ", "[", 
                   RowBox[{"c", ",", 
                    RowBox[{
                    "\"\<dc\>\"", "~~", "___", "~~", "NumberString"}]}], 
                   "]"}]}]}], ",", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"b", ",", 
                  RowBox[{"a", "[", 
                   RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], "]"}], ";", 
              RowBox[{"k", "++"}]}]}], "]"}], ";", 
           RowBox[{"c", "=", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"StringJoin", "[", 
                RowBox[{
                 RowBox[{"a", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "#"}], "]"}], "&"}], 
              ",", "b"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"c", "=", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Run", "[", 
                RowBox[{"\"\<Del \>\"", "<>", 
                 RowBox[{"StandPath", "[", "#", "]"}]}], "]"}], "&"}], ",", 
              "c"}], "]"}]}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
               RowBox[{"Flatten", "[", "c", "]"}]}], "]"}], ",", "0", ",", 
             "0"}], "]"}]}]}], "]"}]}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ClearRecyclerBin`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearRecyclerBin", "[", "x___", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"b", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"Unique", "[", "\"\<ag\>\"", "]"}], "]"}]}], ",", 
      RowBox[{"c", "=", "$ArtKr$"}], ",", "d", ",", "p"}], "}"}], ",", 
    RowBox[{
     RowBox[{"ClearAll", "[", "$ArtKr$", "]"}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"FileExistsQ1", "[", 
         RowBox[{"\"\<$recycle.bin\>\"", ",", "$ArtKr$"}], "]"}]}], ",", 
       "$Failed", ",", 
       RowBox[{
        RowBox[{"d", "=", 
         RowBox[{"StandPath", "[", 
          RowBox[{"$ArtKr$", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", 
        RowBox[{"$ArtKr$", "=", "c"}], ";", " ", 
        RowBox[{"Run", "[", 
         RowBox[{
         "\"\<Dir \>\"", "<>", "d", "<>", "\"\</B/S/L > \>\"", "<>", "b"}], 
         "]"}], ";", " ", 
        RowBox[{"p", "=", 
         RowBox[{"ReadList", "[", 
          RowBox[{"b", ",", "String"}], "]"}]}], ";", " ", 
        RowBox[{"DeleteFile", "[", "b", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"p", "\[Equal]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"Return", "[", "$Failed", "]"}], ",", " ", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", "x", "}"}], "\[Equal]", 
                 RowBox[{"{", "}"}]}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"SuffPref", "[", 
                    RowBox[{
                    RowBox[{"a", "=", 
                    RowBox[{
                    RowBox[{"FileNameSplit", "[", "#", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], ",", "\"\<$\>\"", ",",
                     "1"}], "]"}], "||", 
                   RowBox[{"a", "===", "\"\<desktop.ini\>\""}]}], ",", "Null",
                   ",", " ", 
                  RowBox[{
                   RowBox[{"Attribs", "[", 
                    RowBox[{"#", ",", "90"}], "]"}], ";", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"FileExistsQ", "[", "#", "]"}], ",", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{"Check", "[", 
                    RowBox[{
                    RowBox[{"DeleteFile", "[", "#", "]"}], ",", 
                    RowBox[{"DeleteDirectory", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"DeleteContents", "\[Rule]", "True"}]}], "]"}]}], 
                    "]"}], "]"}], ",", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{"Check", "[", 
                    RowBox[{
                    RowBox[{"DeleteDirectory", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"DeleteContents", "\[Rule]", "True"}]}], "]"}], 
                    ",", 
                    RowBox[{"DeleteFile", "[", "#", "]"}]}], "]"}], "]"}]}], 
                    "]"}]}]}], "]"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"FileNameSplit", "[", "#", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "==", 
                   "\"\<desktop.ini\>\""}], ",", "Null", ",", 
                  RowBox[{
                   RowBox[{"Attribs", "[", 
                    RowBox[{"#", ",", "90"}], "]"}], ";", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"DirQ", "[", "#", "]"}], ",", 
                    RowBox[{"Run", "[", 
                    RowBox[{"\"\<RD /S/Q \>\"", "<>", "#"}], "]"}], ",", 
                    RowBox[{"Run", "[", 
                    RowBox[{"\"\<DEL /F/Q \>\"", "<>", "#"}], "]"}]}], 
                    "]"}]}]}], "]"}]}], "]"}], "&"}], ",", "p"}], "]"}], 
           ";"}]}], " ", "]"}]}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StandPath`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StandPath", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"b", "=", "\"\<\>\""}], ",", "c", ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Outer", "[", 
          RowBox[{"StringJoin", ",", 
           RowBox[{"CharacterRange", "[", 
            RowBox[{"\"\<a\>\"", ",", "\"\<z\>\""}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<:/\>\"", ",", "\"\<:\\\\\>\""}], "}"}]}], "]"}], 
         "]"}], ",", 
        RowBox[{"c", "=", 
         RowBox[{"ToLowerCase", "[", "x", "]"}]}]}], "]"}], ",", 
      RowBox[{"StringReplace", "[", 
       RowBox[{"c", ",", 
        RowBox[{"\"\</\>\"", "->", "\"\<\\\\\>\""}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"PathToFileQ", "[", "x", "]"}], ",", 
        RowBox[{
         RowBox[{"a", "=", 
          RowBox[{"FileNameSplit", "[", 
           RowBox[{"StringReplace", "[", 
            RowBox[{
             RowBox[{"ToLowerCase", "[", 
              RowBox[{"ToLowerCase", "[", "x", "]"}], "]"}], ",", 
             RowBox[{"\"\</\>\"", "\[Rule]", "\"\<\\\\\>\""}]}], "]"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{"k", ",", 
           RowBox[{"k", "\[LessEqual]", 
            RowBox[{"Length", "[", "a", "]"}]}], ",", 
           RowBox[{"k", "++"}], ",", 
           RowBox[{
            RowBox[{"c", "=", 
             RowBox[{"a", "[", 
              RowBox[{"[", "k", "]"}], "]"}]}], ";", " ", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"StringFreeQ", "[", 
                RowBox[{"c", ",", "\"\< \>\""}], "]"}]}], ",", 
              RowBox[{"b", "=", 
               RowBox[{"b", "<>", 
                RowBox[{"StrStr", "[", "c", "]"}], "<>", "\"\<\\\\\>\""}]}], 
              ",", 
              RowBox[{"b", "=", 
               RowBox[{"b", "<>", "c", "<>", "\"\<\\\\\>\""}]}]}], "]"}]}]}], 
          "]"}], ";", " ", 
         RowBox[{"StringTake", "[", 
          RowBox[{"b", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "2"}]}], "}"}]}], "]"}]}], ",", 
        RowBox[{"ToLowerCase", "[", "x", "]"}]}], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`NestQL`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NestQL", "[", 
   RowBox[{"L_", "/;", 
    RowBox[{"ListQ", "[", "L", "]"}]}], "]"}], ":=", 
  RowBox[{"MemberQ", "[", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ListQ", "[", "#", "]"}], "&"}], ",", "L"}], "]"}], ",", 
    "True"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SelectPos`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SelectPos", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"ListQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{"ListQ", "[", "y", "]"}], "&&", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"IntegerQ", "[", "#", "]"}], "&&", 
            RowBox[{"#", ">", "0"}]}], "&"}], ",", "y"}], "]"}], "]"}], 
       "\[Equal]", 
       RowBox[{"{", "True", "}"}]}]}]}], ",", 
    RowBox[{"z_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", "z"}], "]"}]}]}], "]"}], ":=", 
  RowBox[{"Select", "[", 
   RowBox[{"x", ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"z", "\[Equal]", "2"}], ",", "Equal", ",", "Unequal"}], 
         "]"}], "[", 
        RowBox[{
         RowBox[{"Intersection", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"Position", "[", 
             RowBox[{"x", ",", "#"}], "]"}], "]"}], ",", "y"}], "]"}], ",", 
         RowBox[{"{", "}"}]}], "]"}], ",", "False", ",", "True"}], "]"}], 
     "&"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ElemsList`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ElemsList", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"ListQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"ListQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"y", ",", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"ListQ", "[", "#", "]"}]}], "&"}]}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"y", ",", 
         RowBox[{
          RowBox[{"ListQ", "[", "#", "]"}], "&"}]}], "]"}]}], ",", 
      RowBox[{"c", "=", "\"\<\>\""}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"a", "\[Equal]", 
        RowBox[{"{", "}"}]}], "&&", 
       RowBox[{"b", "\[Equal]", 
        RowBox[{"{", "}"}]}]}], ",", "x", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"a", "\[Equal]", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"Quiet", "[", 
         RowBox[{"Check", "[", 
          RowBox[{
           RowBox[{"ToExpression", "[", 
            RowBox[{
             RowBox[{"ToString", "[", "x", "]"}], "<>", "\"\<[[\>\"", "<>", 
             RowBox[{"StringTake", "[", 
              RowBox[{
               RowBox[{"ToString", "[", "b", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"3", ",", 
                 RowBox[{"-", "3"}]}], "}"}]}], "]"}], "<>", "\"\<]]\>\""}], 
            "]"}], ",", "$Failed"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"b", "\[Equal]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{
           RowBox[{"c", "=", 
            RowBox[{"ToString", "[", "x", "]"}]}], ";", 
           RowBox[{"While", "[", 
            RowBox[{
             RowBox[{"k", "\[LessEqual]", 
              RowBox[{"Length", "[", "a", "]"}]}], ",", 
             RowBox[{
              RowBox[{"c", "=", 
               RowBox[{"c", "<>", "\"\<[[\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"a", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], "]"}], "<>", 
                "\"\<]]\>\""}]}], ";", 
              RowBox[{"k", "++"}]}]}], "]"}], ";", 
           RowBox[{"Quiet", "[", 
            RowBox[{"Check", "[", 
             RowBox[{
              RowBox[{"ToExpression", "[", "c", "]"}], ",", "$Failed"}], 
             "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"c", "=", 
            RowBox[{"ToString", "[", "x", "]"}]}], ";", 
           RowBox[{"While", "[", 
            RowBox[{
             RowBox[{"k", "\[LessEqual]", 
              RowBox[{"Length", "[", "a", "]"}]}], ",", 
             RowBox[{
              RowBox[{"c", "=", 
               RowBox[{"c", "<>", "\"\<[[\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"a", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], "]"}], "<>", 
                "\"\<]]\>\""}]}], ";", 
              RowBox[{"k", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"Quiet", "[", 
            RowBox[{"Check", "[", 
             RowBox[{
              RowBox[{"ToExpression", "[", 
               RowBox[{"c", "<>", "\"\<[[\>\"", "<>", 
                RowBox[{"StringTake", "[", 
                 RowBox[{
                  RowBox[{"ToString", "[", "b", "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"3", ",", 
                    RowBox[{"-", "3"}]}], "}"}]}], "]"}], "<>", 
                "\"\<]]\>\""}], "]"}], ",", "$Failed"}], "]"}], "]"}]}]}], 
         "]"}]}], "]"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`PosListTest`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PosListTest", "[", 
   RowBox[{
    RowBox[{"L_", "/;", 
     RowBox[{"ListQ", "[", "L", "]"}]}], ",", 
    RowBox[{"p_", "/;", 
     RowBox[{"PureFuncQ", "[", "p", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "L", "]"}]}], ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"L", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "}"}], ",", "p"}], "]"}], 
           "\[NotEqual]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"a", ",", "k"}], "]"}]}], "]"}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", "a"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`FirstPositionsList`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FirstPositionsList", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ListQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"DeleteDuplicates", "[", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"SequencePosition", "[", 
         RowBox[{"x", ",", 
          RowBox[{"{", "#", "}"}]}], "]"}], "&"}], ",", "x"}], "]"}]}], "]"}],
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SeqQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SeqQ", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", "=", 
      RowBox[{"ToString", "[", "x", "]"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"StringLength", "[", "a", "]"}], "\[GreaterEqual]", "4"}], "&&", 
       RowBox[{
        RowBox[{"StringTake", "[", 
         RowBox[{"a", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "\[Equal]", 
        "\"\<Seq[\>\""}], "&&", 
       RowBox[{
        RowBox[{"StringTake", "[", 
         RowBox[{"a", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "]"}], "\[Equal]", "\"\<]\>\""}]}],
       ",", "True", ",", "False"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SeqToList`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SeqToList", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"SeqQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"ToExpression", "[", 
   RowBox[{"\"\<{\>\"", "<>", 
    RowBox[{"StringTake", "[", 
     RowBox[{
      RowBox[{"ToString", "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", ",", 
        RowBox[{"-", "2"}]}], "}"}]}], "]"}], "<>", "\"\<}\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ListCount`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListCount", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"ListQ", "[", "x", "]"}]}], ",", "y__List"}], "]"}], ":=", 
  RowBox[{"StringCount", "[", 
   RowBox[{
    RowBox[{"ToString", "[", "x", "]"}], ",", 
    RowBox[{"Mapp", "[", 
     RowBox[{"StringTake", ",", 
      RowBox[{"Map", "[", 
       RowBox[{"ToString", ",", 
        RowBox[{"{", "y", "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", 
        RowBox[{"-", "2"}]}], "}"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ListToSeq`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListToSeq", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ListQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"ToExpression", "[", 
   RowBox[{"\"\<Seq[\>\"", "<>", 
    RowBox[{"StringTake", "[", 
     RowBox[{
      RowBox[{"ToString", "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", 
        RowBox[{"-", "2"}]}], "}"}]}], "]"}], "<>", "\"\<]\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`TransListList`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TransListList", "[", 
   RowBox[{"L_", "/;", 
    RowBox[{"ListListQ", "[", "L", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Length", "[", "L", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"L", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", "j"}], "}"}], ",", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", "b"}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "1"}], ",", 
          RowBox[{"j", "\[LessEqual]", "a"}], ",", 
          RowBox[{"j", "++"}], ",", 
          RowBox[{"d", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"d", ",", 
             RowBox[{
              RowBox[{"L", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "[", 
              RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}]}], "]"}], ";", " ", 
        RowBox[{"c", "=", 
         RowBox[{"Append", "[", 
          RowBox[{"c", ",", "d"}], "]"}]}], ";", " ", 
        RowBox[{"d", "=", 
         RowBox[{"{", "}"}]}]}]}], "]"}], ";", "c"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ElemLevelsL`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ElemLevelsL", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ListQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "x"}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"m", "=", 
       RowBox[{"{", "}"}]}], ",", "n", ",", 
      RowBox[{"k", "=", "0"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"NestListQ1", "[", "a", "]"}], ",", 
       RowBox[{
        RowBox[{"n", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"a", ",", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"ListQ", "[", "#", "]"}]}], "&"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"c", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"k", "++"}], ",", 
            RowBox[{"Complement", "[", 
             RowBox[{"n", ",", "m"}], "]"}]}], "}"}]}], "]"}], ";", 
        RowBox[{"m", "=", "n"}], ";", 
        RowBox[{"a", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"a", ",", "1"}], "]"}]}], ";", " ", 
        RowBox[{"Continue", "[", "]"}]}]}], "]"}], ";", 
     RowBox[{"Append", "[", 
      RowBox[{"c", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"k", "++"}], ",", 
         RowBox[{"Complement", "[", 
          RowBox[{"a", ",", "m"}], "]"}]}], "}"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ElemLevelsN`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ElemLevelsN", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ListQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "x"}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"m", "=", "0"}], ",", "n", ",", 
      RowBox[{"k", "=", "0"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"NestListQ1", "[", "a", "]"}], ",", 
       RowBox[{
        RowBox[{"n", "=", 
         RowBox[{"Length", "[", 
          RowBox[{"Select", "[", 
           RowBox[{"a", ",", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"ListQ", "[", "#", "]"}]}], "&"}]}], "]"}], "]"}]}], 
        ";", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"c", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"k", "++"}], ",", 
            RowBox[{"n", "-", "m"}]}], "}"}]}], "]"}], ";", " ", 
        RowBox[{"m", "=", "n"}], ";", " ", 
        RowBox[{"a", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"a", ",", "1"}], "]"}]}], ";", " ", 
        RowBox[{"Continue", "[", "]"}]}]}], "]"}], ";", " ", 
     RowBox[{"Append", "[", 
      RowBox[{"c", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"k", "++"}], ",", 
         RowBox[{
          RowBox[{"Length", "[", "a", "]"}], "-", "m"}]}], "}"}]}], "]"}]}]}],
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SeqIns`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SeqIns", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"SeqQ", "[", "x", "]"}]}], ",", "y_", ",", 
    RowBox[{"z_", "/;", 
     RowBox[{"IntegerQ", "[", "z", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"SeqToList", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SeqQ", "[", "y", "]"}], ",", 
         RowBox[{"SeqToList", "[", "y", "]"}], ",", "y"}], "]"}]}]}], "}"}], 
    ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"z", "\[LessEqual]", "0"}], ",", 
       RowBox[{"b", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"c", ",", "a"}], "]"}]}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"z", "\[GreaterEqual]", 
          RowBox[{"Length", "[", "a", "]"}]}], ",", 
         RowBox[{"b", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"a", ",", "c"}], "]"}]}], ",", 
         RowBox[{"b", "=", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"a", "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", "z"}], "]"}], "]"}], ",", "c", ",", 
            RowBox[{"a", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"z", "+", "1"}], ";;", 
               RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}]}]}], "]"}]}], 
      "]"}], ";", 
     RowBox[{"ListToSeq", "[", 
      RowBox[{"Flatten", "[", "b", "]"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`UniqueV`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UniqueV", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"SymbolQ", "[", "x", "]"}]}], ",", "y_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", "=", 
      RowBox[{"ToString", "[", 
       RowBox[{"Unique", "[", 
        RowBox[{"ToString", "[", "x", "]"}], "]"}], "]"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"ToExpression", "[", 
      RowBox[{"a", "<>", "\"\<= \>\"", "<>", 
       RowBox[{"ToString1", "[", "y", "]"}]}], "]"}], ";", "a"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SubProcs`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SubProcs", "[", 
   RowBox[{"P_", "/;", 
    RowBox[{"BlockModQ", "[", "P", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", "d", ",", "t", ",", "h", ",", 
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"p", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"g", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"a", "=", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"PureDefinition", "[", "P", "]"}], "}"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"StringPosition", "[", 
       RowBox[{"a", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<] := Block[{\>\"", ",", "\"\<] := Module[{\>\""}], 
         "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "b", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"d", "=", 
         RowBox[{"b", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"p", ",", 
          RowBox[{"ExprOfStr", "[", 
           RowBox[{"a", ",", 
            RowBox[{"d", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\< \>\"", ",", "\"\<,\>\"", ",", "\"\<;\>\""}], 
             "}"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"c", ",", 
          RowBox[{
           RowBox[{"h", "=", 
            RowBox[{
             RowBox[{"ExprOfStr", "[", 
              RowBox[{"a", ",", 
               RowBox[{"d", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"-", "1"}], ",", 
               RowBox[{"{", 
                RowBox[{"\"\< \>\"", ",", "\"\<,\>\"", ",", "\"\<;\>\""}], 
                "}"}]}], "]"}], "<>", "\"\< := \>\"", "<>", 
             RowBox[{"ExprOfStr", "[", 
              RowBox[{"a", ",", 
               RowBox[{
                RowBox[{"d", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "+", "5"}], ",", "1", ",", 
               RowBox[{"{", 
                RowBox[{"\"\< \>\"", ",", "\"\<,\>\"", ",", "\"\<;\>\""}], 
                "}"}]}], "]"}]}]}], ";", " ", 
           RowBox[{"t", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{"StringPosition", "[", 
              RowBox[{"h", ",", "\"\<[\>\""}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"h", "=", 
            RowBox[{"Quiet", "[", 
             RowBox[{"StringReplacePart", "[", 
              RowBox[{"h", ",", 
               RowBox[{"ToString", "[", 
                RowBox[{"Unique", "[", 
                 RowBox[{"ToExpression", "[", 
                  RowBox[{"StringTake", "[", 
                   RowBox[{"h", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{"t", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
                   "]"}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{
                  RowBox[{"t", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
              "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"g", ",", 
             RowBox[{"StringTake", "[", 
              RowBox[{"h", ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Flatten", "[", 
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"h", ",", "\"\<[\>\""}], "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
              "]"}]}], "]"}], ";", "h"}]}], "]"}]}]}], "]"}], ";", " ", 
     RowBox[{"Map", "[", 
      RowBox[{"ToExpression", ",", "c"}], "]"}], ";", 
     RowBox[{"{", 
      RowBox[{"p", ",", 
       RowBox[{"Map", "[", 
        RowBox[{"ToExpression", ",", "g"}], "]"}]}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SubProcs1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SubProcs1", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", "c", ",", "d", ",", 
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}]}]}], "}"}], 
    ",", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"a", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"d", "=", 
         RowBox[{"StringPosition", "[", 
          RowBox[{"c", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<] := Module[{\>\"", ",", "\"\<] := Block[{\>\""}], 
            "}"}]}], "]"}]}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"d", "\[Equal]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"Continue", "[", "]"}]}], "]"}], ";", " ", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"b", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{"c", ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{
                 RowBox[{"d", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
            RowBox[{
             RowBox[{"Length", "[", "d", "]"}], "-", "1"}]}], "}"}]}], 
         "]"}]}]}], "]"}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "b", "]"}], "\[Equal]", "1"}], ",", 
       RowBox[{"Flatten", "[", "b", "]"}], ",", "b"}], "]"}]}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SubProcs2`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SubProcs2", "[", 
   RowBox[{"y_", ",", "z___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"m", "=", "1"}], ",", "SB", ",", 
      RowBox[{"v", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"PureDefinition", "[", "y", "]"}], "}"}], "]"}]}]}], "}"}], 
    ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"BlockFuncModQ", "[", "y", "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"SB", "[", "x_String", "]"}], ":=", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"b", "=", "\"\<Module[\>\""}], ",", "c", ",", "d", ",", 
            "h", ",", 
            RowBox[{"g", "=", "\"\<\>\""}], ",", "t", ",", "k", ",", "p", ",",
             "q", ",", "j", ",", "s", ",", "w", ",", 
            RowBox[{"a", "=", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", 
               RowBox[{"StringPosition", "[", 
                RowBox[{"x", ",", "\"\<Module[{\>\""}], "]"}]}], "]"}]}]}], 
           "}"}], ",", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"a", "\[Equal]", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{"Return", "[", "]"}]}], "]"}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "1"}], ",", 
             RowBox[{"Return", "[", "$Failed", "]"}], ",", 
             RowBox[{"d", "=", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "-", "5"}], "&"}], ",", "a"}], "]"}]}]}], "]"}],
            ";", " ", 
           RowBox[{"c", "=", 
            RowBox[{"{", 
             RowBox[{"StringTake", "[", 
              RowBox[{"x", ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"d", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], "}"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"k", "=", 
              RowBox[{"Length", "[", "a", "]"}]}], ",", 
             RowBox[{"k", ">", "1"}], ",", 
             RowBox[{"k", "--"}], ",", 
             RowBox[{
              RowBox[{"h", "=", "b"}], ";", 
              RowBox[{"g", "=", "\"\<\>\""}], ";", 
              RowBox[{"t", "=", "\"\<\>\""}], ";", " ", 
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"j", "=", 
                 RowBox[{
                  RowBox[{"a", "[", 
                   RowBox[{"[", "k", "]"}], "]"}], "+", "7"}]}], ",", 
                RowBox[{"j", "<", "Infinity"}], ",", 
                RowBox[{"j", "++"}], ",", 
                RowBox[{
                 RowBox[{"h", "=", 
                  RowBox[{"h", "<>", 
                   RowBox[{"StringTake", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "j"}], "}"}]}], "]"}]}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"SameQ", "[", 
                    RowBox[{
                    RowBox[{"Quiet", "[", 
                    RowBox[{"Check", "[", 
                    RowBox[{
                    RowBox[{"ToExpression", "[", "h", "]"}], ",", 
                    "\"\<Error\>\""}], "]"}], "]"}], ",", "\"\<Error\>\""}], 
                    "]"}], ",", 
                   RowBox[{"Continue", "[", "]"}], ",", 
                   RowBox[{
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"j", "=", 
                    RowBox[{"d", "[", 
                    RowBox[{"[", "k", "]"}], "]"}]}], ",", 
                    RowBox[{"j", ">", "1"}], ",", 
                    RowBox[{"j", "--"}], ",", 
                    RowBox[{
                    RowBox[{"g", "=", 
                    RowBox[{
                    RowBox[{"StringTake", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "j"}], "}"}]}], "]"}], "<>", "g"}]}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"SameQ", "[", 
                    RowBox[{
                    RowBox[{"Quiet", "[", 
                    RowBox[{"Check", "[", 
                    RowBox[{
                    RowBox[{"ToExpression", "[", "g", "]"}], ",", 
                    "\"\<Error\>\""}], "]"}], "]"}], ",", "\"\<Error\>\""}], 
                    "]"}], ",", 
                    RowBox[{"Continue", "[", "]"}], ",", 
                    RowBox[{"Break", "[", "]"}]}], "]"}]}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{"j", ">", "1"}], ",", 
                    RowBox[{
                    RowBox[{"p", "=", 
                    RowBox[{"StringTake", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "j"}], "}"}]}], "]"}]}], ";", " ", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"SameQ", "[", 
                    RowBox[{"p", ",", "\"\< \>\""}], "]"}]}], ",", 
                    RowBox[{"t", "=", 
                    RowBox[{"p", "<>", "t"}]}], ",", 
                    RowBox[{"Break", "[", "]"}]}], "]"}], ";", 
                    RowBox[{"j", "--"}]}]}], "]"}], ";", " ", 
                    RowBox[{"p", "=", 
                    RowBox[{
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"\"\< \>\"", "<>", "t", "<>", "\"\<[\>\""}]}], 
                    "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"s", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"SubStrSymbolParity1", "[", 
                    RowBox[{
                    RowBox[{"StringTake", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"p", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "\"\<[\>\"", 
                    ",", "\"\<]\>\""}], "]"}], "]"}]}], ";", " ", 
                    RowBox[{"w", "=", "1"}], ";", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{"w", "\[LessEqual]", 
                    RowBox[{
                    RowBox[{"Length", "[", "s", "]"}], "-", "1"}]}], ",", 
                    RowBox[{
                    RowBox[{"q", "=", 
                    RowBox[{"s", "[", 
                    RowBox[{"[", "w", "]"}], "]"}]}], ";", " ", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"StringFreeQ", "[", 
                    RowBox[{"q", ",", "\"\<_\>\""}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"s", "=", 
                    RowBox[{"t", "<>", "q", "<>", "\"\< := Module\>\"", "<>", 
                    RowBox[{"s", "[", 
                    RowBox[{"[", 
                    RowBox[{"w", "+", "1"}], "]"}], "]"}]}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Break", "[", "]"}]}]}], "]"}], ";", 
                    RowBox[{"w", "++"}]}]}], "]"}], ";", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"c", ",", "s"}], "]"}], ";", 
                    RowBox[{"Break", "[", "]"}]}]}], "]"}]}]}], "]"}]}]}], 
            "]"}], ";", "c"}]}], "]"}]}], ";", " ", 
       RowBox[{"For", "[", 
        RowBox[{"m", ",", 
         RowBox[{"m", "\[LessEqual]", 
          RowBox[{"Length", "[", "v", "]"}]}], ",", 
         RowBox[{"m", "++"}], ",", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"n", ",", 
           RowBox[{"SB", "[", 
            RowBox[{"v", "[", 
             RowBox[{"[", "m", "]"}], "]"}], "]"}]}], "]"}]}], "]"}], ";", 
       " ", "\[IndentingNewLine]", 
       RowBox[{"n", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"n", ",", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"SameQ", "[", 
             RowBox[{"#", ",", "Null"}], "]"}]}], "&"}]}], "]"}]}], ";", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"n", "\[Equal]", 
          RowBox[{"{", "}"}]}], ",", "$Failed", ",", 
         RowBox[{
          RowBox[{"n", "=", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "n", "]"}], "\[Equal]", "1"}], ",", 
             RowBox[{"n", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "n"}], "]"}]}], ";", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", "z", "}"}], "\[NotEqual]", 
             RowBox[{"{", "}"}]}], ",", 
            RowBox[{"ToExpression", "[", "n", "]"}]}], "]"}], ";", "n"}]}], 
        "]"}]}], ",", "$Failed"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`NotSubsProcs`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NotSubsProcs", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"ModuleQ", "[", "x", "]"}]}], ",", "y___"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"SubsProcs", "[", "x", "]"}]}], ",", 
      RowBox[{"at", "=", 
       RowBox[{"Attributes", "[", "x", "]"}]}], ",", "b", ",", "c", ",", "d", 
      ",", "h", ",", 
      RowBox[{"t", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"a", "\[Equal]", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{
       RowBox[{"b", "=", 
        RowBox[{"PureDefinition", "[", "x", "]"}]}], ";", " ", 
       RowBox[{"ClearAttributes", "[", 
        RowBox[{"x", ",", "at"}], "]"}], ";", 
       RowBox[{"c", "=", 
        RowBox[{"HeadPF", "[", "x", "]"}]}], ";", " ", 
       RowBox[{"d", "=", 
        RowBox[{"Args", "[", 
         RowBox[{"x", ",", "90"}], "]"}]}], ";", " ", 
       RowBox[{"h", "=", 
        RowBox[{"ToString", "[", 
         RowBox[{"Unique", "[", "\"\<a\>\"", "]"}], "]"}]}], ";", " ", 
       RowBox[{"ToExpression", "[", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"b", ",", 
          RowBox[{"c", "\[Rule]", 
           RowBox[{"h", "<>", "\"\<[\>\"", "<>", 
            RowBox[{"StringTake", "[", 
             RowBox[{
              RowBox[{"ToString", "[", 
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "<>", "\"\<_\>\""}], "&"}], ",", "d"}], "]"}], 
               "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"2", ",", 
                RowBox[{"-", "2"}]}], "}"}]}], "]"}], "<>", "\"\<]\>\""}]}], 
          ",", "1"}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Quiet", "[", 
        RowBox[{"Check", "[", 
         RowBox[{
          RowBox[{"ToExpression", "[", 
           RowBox[{"h", "<>", "\"\<[\>\"", "<>", 
            RowBox[{"StringTake", "[", 
             RowBox[{
              RowBox[{"ToString", "[", "d", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"2", ",", 
                RowBox[{"-", "2"}]}], "}"}]}], "]"}], "<>", "\"\<]\>\""}], 
           "]"}], ",", "Null"}], "]"}], "]"}], ";", " ", 
       RowBox[{"d", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"StringTake", "[", 
            RowBox[{"#", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{"StringPosition", "[", 
                   RowBox[{"#", ",", "\"\<[\>\"", ",", "1"}], "]"}], "]"}], 
                 "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], "]"}],
            "&"}], ",", "a"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", "y", "}"}], "\[NotEqual]", 
           RowBox[{"{", "}"}]}], "&&", 
          RowBox[{"!", 
           RowBox[{"HowAct", "[", "y", "]"}]}]}], ",", 
         RowBox[{"y", "=", "d"}], ",", "Null"}], "]"}], ";", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"UnevaluatedQ", "[", 
              RowBox[{"HeadPF", ",", "#"}], "]"}], "||", 
             RowBox[{"!", 
              RowBox[{"StringFreeQ3", "[", 
               RowBox[{
                RowBox[{"HeadPF", "[", "#", "]"}], ",", "\"\<$_\>\""}], 
               "]"}]}]}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"t", ",", "#"}], "]"}], ",", "Null"}], "]"}], "&"}], ",",
          "d"}], "]"}], ";", " ", 
       RowBox[{"ToExpression", "[", "b", "]"}], ";", " ", 
       RowBox[{"t", "=", 
        RowBox[{"MinusList", "[", 
         RowBox[{"d", ",", "t"}], "]"}]}], ";", 
       RowBox[{"SetAttributes", "[", 
        RowBox[{"x", ",", "at"}], "]"}], ";", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"Quiet", "[", 
           RowBox[{"Map", "[", 
            RowBox[{"ClearAll", ",", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"h", ",", "d"}], "}"}], "]"}]}], "]"}], "]"}]}], "}"}],
         "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`$ProcName`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"$ProcName", ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"d", "=", "\"\<$$ArtKr$$\>\""}], ",", "a", ",", "b", ",", "c", 
      ",", 
      RowBox[{"t", "=", "\"\<\>\""}], ",", "k"}], "}"}], ",", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"ToString1", "[", 
       RowBox[{"Stack", "[", "_", "]"}], "]"}]}], ";", 
     RowBox[{"d", "=", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"StringPosition", "[", 
         RowBox[{"a", ",", "d"}], "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"StringPosition", "[", 
         RowBox[{"a", ",", "\"\<$$NameProc$$\>\""}], "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"b", ">", "d"}], "||", 
        RowBox[{
         RowBox[{"ToString", "[", "b", "]"}], "\[Equal]", "\"\<\>\""}]}], ",", 
       RowBox[{"Return", "[", "\"\<UndefinedName\>\"", "]"}], ",", 
       RowBox[{"k", "=", "b"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "b"}], ",", 
       RowBox[{"k", "\[LessEqual]", "d"}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"StringTake", "[", 
          RowBox[{"a", ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "k"}], "}"}]}], "]"}]}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<,\>\"", ",", "\"\<}\>\""}], "}"}], ",", "c"}], 
           "]"}], ",", 
          RowBox[{"Break", "[", "]"}], ",", 
          RowBox[{
           RowBox[{"t", "=", 
            RowBox[{"t", "<>", "c"}]}], ";", 
           RowBox[{"Continue", "[", "]"}]}]}], "]"}]}]}], "]"}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"b", "=", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"ToExpression", "[", 
          RowBox[{
           RowBox[{"StringSplit", "[", 
            RowBox[{"t", ",", "\"\<=\>\""}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}]}], ",", 
       RowBox[{"HeadPF", "[", "b", "]"}]}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ModToPureFunc`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ModToPureFunc", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"QBlockMod", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"Atr", "=", 
       RowBox[{"Attributes", "[", "x", "]"}]}], ",", "c", ",", "d", ",", "p", 
      ",", 
      RowBox[{"O", "=", 
       RowBox[{"Options", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{"n", "=", 
       RowBox[{"\"\<$$$\>\"", "<>", 
        RowBox[{"ToString", "[", "x", "]"}]}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", "j", ",", "t", ",", 
      RowBox[{"q", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"ToExpression", "[", 
      RowBox[{"\"\<$$$\>\"", "<>", "b"}], "]"}], ";", 
     RowBox[{"c", "=", 
      RowBox[{"LocalsGlobals1", "[", 
       RowBox[{"Symbol", "[", "n", "]"}], "]"}]}], ";", " ", 
     RowBox[{"a", "=", 
      RowBox[{"Args", "[", 
       RowBox[{
        RowBox[{"Symbol", "[", "n", "]"}], ",", "90"}], "]"}]}], ";", " ", 
     RowBox[{"d", "=", 
      RowBox[{"StringReplace", "[", 
       RowBox[{
        RowBox[{"PureDefinition", "[", "n", "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"HeadPF", "[", "n", "]"}], "<>", "\"\< := \>\""}], "->", 
         "\"\<\>\""}], ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"\"\<ClearAll[\>\"", "<>", "n", "<>", "\"\<]\>\""}], "]"}], ";",
      " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"c", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "\[NotEqual]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"$Failed", ",", "\"\<Globals\>\"", ",", 
          RowBox[{"c", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "]"}]}], "]"}], ";", " ", 
     RowBox[{"c", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", 
           RowBox[{"ToString", "[", 
            RowBox[{"Unique", "[", "#", "]"}], "]"}]}], "}"}], "&"}], ",", 
        RowBox[{"Join", "[", 
         RowBox[{"a", ",", 
          RowBox[{"c", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "c", "]"}]}], ",", 
       RowBox[{
        RowBox[{"p", "=", 
         RowBox[{"c", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", 
        RowBox[{"d", "=", 
         RowBox[{"StringReplaceS", "[", 
          RowBox[{"d", ",", 
           RowBox[{"p", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"p", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", " ", 
     RowBox[{"d", "=", 
      RowBox[{"ToString", "[", 
       RowBox[{"ToExpression", "[", "d", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"t", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"ToString", ",", 
        RowBox[{"UnDefVars", "[", 
         RowBox[{"ToExpression", "[", "d", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"t", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringTake", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"StringFreeQ", "[", 
                RowBox[{"#", ",", "\"\<$\>\""}], "]"}], ",", " ", 
               RowBox[{"-", "1"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{"StringPosition", "[", 
                   RowBox[{"#", ",", "\"\<$\>\""}], "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}]}], 
            "}"}]}], "]"}], "&"}], ",", "t"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"k", "=", "1"}], ";", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "t", "]"}]}], ",", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ";", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"j", "\[LessEqual]", 
           RowBox[{"Length", "[", "c", "]"}]}], ",", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"t", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "\[Equal]", 
              RowBox[{
               RowBox[{"c", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"q", ",", 
               RowBox[{
                RowBox[{"c", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "]"}], ";", 
           RowBox[{"j", "++"}]}]}], "]"}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", 
     RowBox[{"k", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "c", "]"}]}], ",", 
       RowBox[{
        RowBox[{"p", "=", 
         RowBox[{"c", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", 
        RowBox[{"d", "=", 
         RowBox[{"StringReplaceS", "[", 
          RowBox[{"d", ",", 
           RowBox[{"p", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{"p", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"p", "=", 
         RowBox[{"MinusList", "[", 
          RowBox[{"q", ",", "a"}], "]"}]}], ";", 
        RowBox[{"p", "\[NotEqual]", 
         RowBox[{"{", "}"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"$Failed", ",", "\"\<Locals\>\"", ",", "p"}], "}"}], ",", 
       RowBox[{
        RowBox[{"ToExpression", "[", 
         RowBox[{"\"\<ClearAll[\>\"", "<>", "n", "<>", "\"\<]\>\""}], "]"}], 
        ";", 
        RowBox[{"n", "=", 
         RowBox[{"\"\<$$$\>\"", "<>", 
          RowBox[{"ToString", "[", "x", "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"n", "<>", "\"\< := Function[\>\"", "<>", 
          RowBox[{"ToString", "[", "a", "]"}], "<>", "\"\<, \>\"", "<>", "d", 
          "<>", "\"\<]\>\""}], "]"}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"Atr", "\[NotEqual]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"ToExpression", "[", 
           RowBox[{"\"\<SetAttributes[\>\"", "<>", "n", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", "Atr", "]"}], "<>", "\"\<]\>\""}], 
           "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"O", "\[NotEqual]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"ToExpression", "[", 
           RowBox[{"\"\<SetOptions[\>\"", "<>", "n", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", "O", "]"}], "<>", "\"\<]\>\""}], "]"}]}],
          "]"}], ";", "n"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SubProcs3`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SubProcs3", "[", 
   RowBox[{"y_", ",", "z___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"m", "=", "1"}], ",", "Sv", ",", 
      RowBox[{"v", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"PureDefinition", "[", "y", "]"}], "}"}], "]"}]}]}], "}"}], 
    ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"BlockFuncModQ", "[", "y", "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Sv", "[", "S_String", "]"}], ":=", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"a", "=", 
             RowBox[{"ExtrVarsOfStr", "[", 
              RowBox[{"S", ",", "1"}], "]"}]}], ",", "b", ",", 
            RowBox[{"c", "=", 
             RowBox[{"{", "}"}]}], ",", "d", ",", 
            RowBox[{"t", "=", "2"}], ",", 
            RowBox[{"k", "=", "1"}], ",", 
            RowBox[{"cc", "=", 
             RowBox[{"{", "}"}]}], ",", "n", ",", "p", ",", "j", ",", 
            RowBox[{"h", "=", 
             RowBox[{"{", 
              RowBox[{"StringTake", "[", 
               RowBox[{"S", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"S", ",", "\"\< := \>\""}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
               "]"}], "}"}]}]}], "}"}], ",", 
          RowBox[{
           RowBox[{"a", "=", 
            RowBox[{"Select", "[", 
             RowBox[{"a", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"!", 
                 RowBox[{"SystemQ", "[", 
                  RowBox[{"Symbol", "[", "#", "]"}], "]"}]}], "&&", 
                RowBox[{"!", 
                 RowBox[{"MemberQ", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"ToString", "[", "G", "]"}], "}"}], ",", "#"}], 
                  "]"}]}]}], "&"}]}], "]"}]}], ";", " ", 
           RowBox[{"b", "=", 
            RowBox[{"StringPosition", "[", 
             RowBox[{"S", ",", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"\"\< \>\"", "<>", "#", "<>", "\"\<[\>\""}], "&"}], 
                ",", "a"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"p", "=", 
            RowBox[{"Select", "[", 
             RowBox[{"a", ",", 
              RowBox[{
               RowBox[{"!", 
                RowBox[{"StringFreeQ", "[", 
                 RowBox[{"S", ",", 
                  RowBox[{"\"\< \>\"", "<>", "#", "<>", "\"\<[\>\""}]}], 
                 "]"}]}], "&"}]}], "]"}]}], ";", " ", 
           RowBox[{"b", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"SubStrSymbolParity1", "[", 
                 RowBox[{
                  RowBox[{"StringTake", "[", 
                   RowBox[{"S", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "\"\<[\>\"", 
                  ",", "\"\<]\>\""}], "]"}], "&"}], ",", "b"}], "]"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"j", "=", "1"}], ",", 
             RowBox[{"j", "\[LessEqual]", 
              RowBox[{"Length", "[", "p", "]"}]}], ",", 
             RowBox[{"j", "++"}], ",", 
             RowBox[{
              RowBox[{"n", "=", 
               RowBox[{"p", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], ";", " ", 
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"k", "=", "1"}], ",", 
                RowBox[{"k", "\[LessEqual]", 
                 RowBox[{
                  RowBox[{"Length", "[", "b", "]"}], "-", "1"}]}], ",", 
                RowBox[{"k", "++"}], ",", 
                RowBox[{
                 RowBox[{"d", "=", 
                  RowBox[{"b", "[", 
                   RowBox[{"[", "k", "]"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"!", 
                    RowBox[{"StringFreeQ", "[", 
                    RowBox[{"d", ",", "\"\<_\>\""}], "]"}]}], "&&", 
                    RowBox[{
                    RowBox[{"StringTake", "[", 
                    RowBox[{
                    RowBox[{"b", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", "+", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "]"}], "\[Equal]", 
                    "\"\<[\>\""}]}], ",", 
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"c", ",", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"n", "<>", "d", "<>", "\"\< := \>\"", "<>", "#", "<>", 
                    RowBox[{"b", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", "+", "1"}], "]"}], "]"}]}], "&"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<Block\>\"", ",", "\"\<Module\>\""}], "}"}]}],
                     "]"}]}], "]"}]}], "]"}]}]}], "]"}]}]}], "]"}], ";", 
           RowBox[{"c", "=", 
            RowBox[{"DeleteDuplicates", "[", 
             RowBox[{"Flatten", "[", "c", "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"k", "=", "1"}], ",", 
             RowBox[{"k", "\[LessEqual]", 
              RowBox[{"Length", "[", "c", "]"}]}], ",", 
             RowBox[{"k", "++"}], ",", 
             RowBox[{
              RowBox[{"d", "=", 
               RowBox[{"c", "[", 
                RowBox[{"[", "k", "]"}], "]"}]}], ";", " ", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"!", 
                 RowBox[{"StringFreeQ", "[", 
                  RowBox[{"S", ",", "d"}], "]"}]}], ",", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"h", ",", "d"}], "]"}], ",", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"cc", ",", 
                  RowBox[{"StringTake", "[", 
                   RowBox[{"d", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"d", ",", "\"\< := \>\""}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
                   "]"}]}], "]"}]}], "]"}]}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"h", ",", "cc"}], "}"}], "=", 
            RowBox[{"Map", "[", 
             RowBox[{"DeleteDuplicates", ",", 
              RowBox[{"{", 
               RowBox[{"h", ",", "cc"}], "}"}]}], "]"}]}], ";", " ", 
           RowBox[{"p", "=", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"StringTake", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", 
                   RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"#", ",", "\"\<[\>\""}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], "&"}], 
              ",", "h"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"cc", "=", 
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"Select", "[", 
               RowBox[{"cc", ",", 
                RowBox[{
                 RowBox[{"!", 
                  RowBox[{"SuffPref", "[", 
                   RowBox[{"#", ",", "p", ",", "1"}], "]"}]}], "&"}]}], "]"}],
               ",", 
              RowBox[{
               RowBox[{"!", 
                RowBox[{"StringFreeQ", "[", 
                 RowBox[{"S", ",", "#"}], "]"}]}], "&"}]}], "]"}]}], ";", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"cc", "\[Equal]", 
              RowBox[{"{", "}"}]}], ",", "h", ",", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"k", "=", "1"}], ",", 
               RowBox[{"k", "\[LessEqual]", 
                RowBox[{"Length", "[", "cc", "]"}]}], ",", 
               RowBox[{"k", "++"}], ",", 
               RowBox[{
                RowBox[{"p", "=", 
                 RowBox[{"cc", "[", 
                  RowBox[{"[", "k", "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"p", "=", 
                 RowBox[{"StringCases", "[", 
                  RowBox[{"S", ",", 
                   RowBox[{
                    RowBox[{"p", "<>", "\"\< := \>\""}], "~~", "__", "~~", 
                    "\"\<; \>\""}]}], "]"}]}], ";", " ", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"h", ",", 
                  RowBox[{"StringTake", "[", 
                   RowBox[{"p", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"p", ",", "\"\<;\>\""}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
                   "]"}]}], "]"}]}]}], "]"}]}], "]"}], ";", 
           RowBox[{"Flatten", "[", "h", "]"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{"m", ",", 
         RowBox[{"m", "\[LessEqual]", 
          RowBox[{"Length", "[", "v", "]"}]}], ",", 
         RowBox[{"m", "++"}], ",", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"u", ",", 
           RowBox[{"Sv", "[", 
            RowBox[{"v", "[", 
             RowBox[{"[", "m", "]"}], "]"}], "]"}]}], "]"}]}], "]"}], ";", 
       " ", 
       RowBox[{"u", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"u", ",", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"SameQ", "[", 
             RowBox[{"#", ",", "Null"}], "]"}]}], "&"}]}], "]"}]}], ";", " ", 
       RowBox[{"u", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "u", "]"}], "\[Equal]", "1"}], ",", 
          RowBox[{"u", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "u"}], "]"}]}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "z", "}"}], "\[NotEqual]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"ToExpression", "[", "u", "]"}]}], "]"}], ";", "u"}], ",", 
      "$Failed"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`BFMSubsQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BFMSubsQ", "[", 
   RowBox[{"x_", ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", "p", ",", "h", ",", 
      RowBox[{"g", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"BlockModQ", "[", "x", "]"}]}], ",", "False", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "b"}], "}"}], "=", 
        RowBox[{"Map", "[", 
         RowBox[{"Flatten", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"HeadPF", "[", "x", "]"}], "}"}]}], "}"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{"k", ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "a", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{
          RowBox[{"p", "=", 
           RowBox[{"a", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ";", " ", 
          RowBox[{"p", "=", 
           RowBox[{"StringReplace", "[", 
            RowBox[{"p", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"b", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "<>", "\"\< := \>\""}], "->", 
              "\"\<\>\""}], ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"c", "=", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"ExtrVarsOfStr", "[", 
              RowBox[{"p", ",", "1"}], "]"}], ",", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"SystemQ", "[", "#", "]"}]}], "&"}]}], "]"}]}], ";", 
          " ", 
          RowBox[{"h", "=", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"StrSymbParity", "[", 
                RowBox[{"p", ",", 
                 RowBox[{"\"\< \>\"", "<>", "#"}], ",", "\"\<[\>\"", ",", 
                 "\"\<]\>\""}], "]"}], "&"}], ",", "c"}], "]"}], "]"}]}], ";",
           "\[IndentingNewLine]", 
          RowBox[{"h", "=", 
           RowBox[{"Select", "[", 
            RowBox[{"h", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"SuffPref", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"Map", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"StringJoin", "[", 
                    RowBox[{"\"\< \>\"", "<>", "#", "<>", "\"\<[\>\""}], 
                    "]"}], "&"}], ",", "c"}], "]"}], ",", "1"}], "]"}], "&&", 
               RowBox[{"!", 
                RowBox[{"StringFreeQ", "[", 
                 RowBox[{"#", ",", "\"\<_\>\""}], "]"}]}]}], "&"}]}], "]"}]}],
           ";", " ", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"g", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"b", "[", 
               RowBox[{"[", "k", "]"}], "]"}], ",", 
              RowBox[{"Length", "[", "h", "]"}]}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"d", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"h", "\[NotEqual]", 
                 RowBox[{"{", "}"}]}], ",", "True", ",", "False"}], "]"}], 
              ",", 
              RowBox[{"b", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], "}"}]}], "]"}]}]}], "]"}], 
       ";", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", "y", "}"}], "\[NotEqual]", 
           RowBox[{"{", "}"}]}], "&&", 
          RowBox[{"!", 
           RowBox[{"HowAct", "[", "y", "]"}]}]}], ",", 
         RowBox[{"y", "=", "g"}]}], "]"}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "d", "]"}], "\[Equal]", "1"}], ",", 
         RowBox[{"d", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "d"}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`CallQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CallQ", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Quiet", "[", 
            RowBox[{"Part", "[", 
             RowBox[{"x", ",", "1"}], "]"}], "]"}], "===", 
           RowBox[{"-", "1"}]}], ",", 
          RowBox[{
           RowBox[{"Part", "[", 
            RowBox[{"x", ",", "1"}], "]"}], "*", "x"}], ",", "x"}], "]"}], 
        "]"}]}], ",", "b", ",", "c"}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"StringPosition", "[", 
        RowBox[{"a", ",", "\"\<[\>\""}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"b", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", "False", ",", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"b", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"SymbolQ", "[", 
            RowBox[{"StringTake", "[", 
             RowBox[{"a", ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"c", "-", "1"}]}], "}"}]}], "]"}], "]"}], "&&", 
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{"a", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"c", "+", "1"}], ",", 
                RowBox[{"c", "+", "1"}]}], "}"}]}], "]"}], "\[NotEqual]", 
            "\"\<[\>\""}], "&&", 
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{"a", ",", 
              RowBox[{"-", "1"}]}], "]"}], "\[Equal]", "\"\<]\>\""}]}], ",", 
          "True", ",", "False"}], "]"}]}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StructProcFunc`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StructProcFunc", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"c", ",", "d", ",", 
      RowBox[{"h", "=", 
       RowBox[{"{", "}"}]}], ",", "p", ",", 
      RowBox[{"k", "=", "1"}], ",", "t", ",", 
      RowBox[{"b", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"HeadPF", "[", "x", "]"}], "}"}], "]"}]}], ",", 
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}]}]}], "}"}], 
    ",", 
    RowBox[{
     RowBox[{"c", "=", 
      RowBox[{"Map9", "[", 
       RowBox[{"StringReplace", ",", "a", ",", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"StringJoin", "[", 
             RowBox[{"#", ",", "\"\< := \>\""}], "]"}], "\[Rule]", 
            "\"\<\>\""}], "&"}], ",", "b"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "b", "]"}]}], ",", 
       RowBox[{
        RowBox[{"d", "=", 
         RowBox[{"c", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SuffPref", "[", 
           RowBox[{"d", ",", "\"\<Module[{\>\"", ",", "1"}], "]"}], ",", 
          RowBox[{"t", "=", "\"\<Module\>\""}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"SuffPref", "[", 
             RowBox[{"d", ",", "\"\<Block[{\>\"", ",", "1"}], "]"}], ",", 
            RowBox[{"t", "=", "\"\<Block\>\""}], ",", 
            RowBox[{"t", "=", "\"\<\>\""}]}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"t", "\[NotEqual]", "\"\<\>\""}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"h", ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{"b", "[", 
               RowBox[{"[", "k", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"p", "=", 
                RowBox[{
                 RowBox[{"SubStrSymbolParity1", "[", 
                  RowBox[{"d", ",", "\"\<{\>\"", ",", "\"\<}\>\""}], "]"}], 
                 "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"StrToList", "[", "p", "]"}]}], ",", 
              RowBox[{"StringReplace", "[", 
               RowBox[{
                RowBox[{"StringTake", "[", 
                 RowBox[{"d", ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", 
                    RowBox[{"-", "2"}]}], "}"}]}], "]"}], ",", 
                RowBox[{
                 RowBox[{
                 "t", "<>", "\"\<[\>\"", "<>", "p", "<>", "\"\<, \>\""}], 
                 "\[Rule]", "\"\<\>\""}]}], "]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"h", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<Function\>\"", ",", 
              RowBox[{"b", "[", 
               RowBox[{"[", "k", "]"}], "]"}], ",", 
              RowBox[{"StringReplace", "[", 
               RowBox[{"d", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"b", "[", 
                   RowBox[{"[", "k", "]"}], "]"}], "<>", "\"\< := \>\""}], 
                 "\[Rule]", "\"\<\>\""}]}], "]"}]}], "}"}]}], "]"}]}], "]"}], 
        ";", " ", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "h", "]"}], "\[Equal]", "1"}], ",", 
       RowBox[{"h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "h"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`AssignL`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AssignL", "[", 
   RowBox[{"x_", ",", "y_", ",", "z___"}], "]"}], ":=", 
  RowBox[{"Quiet", "[", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", "z", "}"}], "\[NotEqual]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"x", ":=", "y"}], ",", 
     RowBox[{"x", "=", "y"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SubsProcQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SubsProcQ", "[", 
   RowBox[{"x_", ",", "y_", ",", "z___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", 
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"j", "=", "1"}], ",", 
      RowBox[{"Res", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"BlockModQ", "[", "x", "]"}], "&&", 
       RowBox[{"BlockFuncModQ", "[", "y", "]"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "b"}], "}"}], "=", 
        RowBox[{"Map", "[", 
         RowBox[{"Flatten", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Definition4", "[", 
              RowBox[{"ToString", "[", "x", "]"}], "]"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Definition4", "[", 
              RowBox[{"ToString", "[", "y", "]"}], "]"}], "}"}]}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{"k", ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "b", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", " ", 
         RowBox[{"For", "[", 
          RowBox[{"j", ",", 
           RowBox[{"j", "\[LessEqual]", 
            RowBox[{"Length", "[", "a", "]"}]}], ",", 
           RowBox[{"j", "++"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"StringFreeQ", "[", 
               RowBox[{
                RowBox[{"a", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], ",", 
                RowBox[{"b", "[", 
                 RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"Res", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{
                   RowBox[{"a", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"StringPosition", "[", 
                    RowBox[{
                    RowBox[{"a", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", "\"\< := \>\""}], 
                    "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
                  "]"}], ",", 
                 RowBox[{"StringTake", "[", 
                  RowBox[{
                   RowBox[{"b", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"StringPosition", "[", 
                    RowBox[{
                    RowBox[{"b", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], ",", "\"\< := \>\""}], 
                    "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
                  "]"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"Continue", "[", "]"}]}], "]"}]}], "]"}]}], "]"}], ";", 
       " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Res", "\[NotEqual]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", "z", "}"}], "\[NotEqual]", 
             RowBox[{"{", "}"}]}], "&&", 
            RowBox[{"!", 
             RowBox[{"HowAct", "[", "z", "]"}]}]}], ",", 
           RowBox[{
            RowBox[{"z", "=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "Res", "]"}], "\[Equal]", "1"}], ",", 
               RowBox[{"Res", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "Res"}], "]"}]}], ";", 
            " ", "True"}]}], "]"}], ",", "False"}], "]"}]}], ",", "False"}], 
     "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ReplaceProcBody`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReplaceProcBody", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"BlockModQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"StringQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"ToExpression", "[", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"PureDefinition", "[", "x", "]"}], ",", 
     RowBox[{
      RowBox[{"ProcBody", "[", "x", "]"}], "\[Rule]", "y"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ReplaceProc`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReplaceProc", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"ProcQ", "[", "x", "]"}]}], ",", 
    RowBox[{"r_", "/;", 
     RowBox[{
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"RuleQ", ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", "r", "}"}], "]"}]}], "]"}], "]"}], "\[Equal]", 
      RowBox[{"{", "True", "}"}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Definition2", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"HeadPF", "[", "x", "]"}]}], ",", "c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", "r", "}"}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"c", "=", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"\"\<Hold[\>\"", "<>", 
        RowBox[{"StringTrim", "[", 
         RowBox[{
          RowBox[{"a", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"b", "<>", "\"\< := \>\""}]}], "]"}], "<>", "\"\<]\>\""}], 
       "]"}]}], ";", " ", 
     RowBox[{"d", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"d", ",", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"Args1", "[", "x", "]"}], ",", 
            RowBox[{"ToString", "[", 
             RowBox[{"Part", "[", 
              RowBox[{"#", ",", "1"}], "]"}], "]"}]}], "]"}]}], "&"}]}], 
       "]"}]}], ";", 
     RowBox[{"c", "=", 
      RowBox[{"ToString1", "[", 
       RowBox[{"ReplaceAll", "[", 
        RowBox[{"c", ",", "d"}], "]"}], "]"}]}], ";", " ", 
     RowBox[{"b", "<>", "\"\< := \>\"", "<>", 
      RowBox[{"StringTake", "[", 
       RowBox[{"c", ",", 
        RowBox[{"{", 
         RowBox[{"6", ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "]"}]}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`CallSave`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CallSave", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"FileExistsQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{"SymbolQ", "[", "y", "]"}], "||", 
      RowBox[{"ListQ", "[", "y", "]"}]}]}], ",", 
    RowBox[{"z_", "/;", 
     RowBox[{"ListQ", "[", "z", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{
         RowBox[{"StringTake", "[", 
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"InputForm", "[", 
             RowBox[{"ReadString", "[", "x", "]"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", 
             RowBox[{"-", "2"}]}], "}"}]}], "]"}], ",", 
         RowBox[{
         "\"\<\\\\r\\\\n\\\\r\\\\n\>\"", "\[Rule]", 
          "\"\<\\\\r\\\\n \\\\r\\\\n\>\""}]}], "]"}]}], ",", "b", ",", "c", 
      ",", "d", ",", "nf", ",", "u", ",", "p", ",", "t", ",", "v", ",", 
      RowBox[{"s", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"ToString", ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", "y", "}"}], "]"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"StringSplit", "[", 
       RowBox[{"a", ",", "\"\<\\\\r\\\\n \\\\r\\\\n\>\""}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nf", "[", "g_", "]"}], ":=", 
      RowBox[{"StringTake", "[", 
       RowBox[{"g", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"StringPosition", "[", 
              RowBox[{"g", ",", "\"\<[\>\"", ",", "1"}], "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], "]"}]}], 
     ";", " ", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"b", ",", 
        RowBox[{
         RowBox[{"SuffPref", "[", 
          RowBox[{"#", ",", 
           RowBox[{"p", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Map4", "[", 
                RowBox[{"StringJoin", ",", "s", ",", "\"\<[\>\""}], "]"}], 
               ",", 
               RowBox[{"Map4", "[", 
                RowBox[{"StringJoin", ",", "s", ",", "\"\< /: \>\""}], 
                "]"}]}], "}"}], "]"}]}], ",", "1"}], "]"}], "&"}]}], "]"}]}], 
     ";", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"d", ",", "u", ",", "t", ",", "v"}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", "}"}], ",", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "<>", "\"\< /: \>\""}], "&"}], ",", "s"}], "]"}], ",", 
        RowBox[{"{", "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SuffPref", "[", 
           RowBox[{"#", ",", "t", ",", "1"}], "]"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"u", ",", 
            RowBox[{"DelSuffPref", "[", 
             RowBox[{
              RowBox[{"StringReplace", "[", 
               RowBox[{
                RowBox[{"StringTrim", "[", 
                 RowBox[{"#", ",", "t"}], "]"}], ",", 
                RowBox[{"\"\<\\\\\>\"", "->", "\"\<\>\""}]}], "]"}], ",", 
              "\"\<rn\>\"", ",", "2"}], "]"}]}], "]"}], ",", " ", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"d", ",", "#"}], "]"}]}], "]"}], "&"}], ",", "c"}], "]"}], 
     ";", " ", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{"ToExpression", ",", 
       RowBox[{"{", 
        RowBox[{"d", ",", "u"}], "}"}]}], "]"}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"d", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", "$Failed", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "d", "]"}], "\[Equal]", "1"}], ",", 
         RowBox[{
          RowBox[{"Symbol", "[", 
           RowBox[{"nf", "[", 
            RowBox[{"d", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
          RowBox[{"Sequences", "[", "z", "]"}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"DeleteDuplicates", "[", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"nf", "[", "#", "]"}], "&"}], ",", "d"}], "]"}], 
              "]"}], "]"}], "\[Equal]", "1"}], ",", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Symbol", "[", 
                 RowBox[{"nf", "[", "#", "]"}], "]"}], "[", 
                RowBox[{"Sequences", "[", "z", "]"}], "]"}], "&"}], ",", 
              "d"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"nf", "[", "#", "]"}], "&"}], ",", "d"}], "]"}]}], 
          "]"}]}], "]"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DefOnHead`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DefOnHead", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"HeadingQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", 
      RowBox[{"h", "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"Check", "[", 
         RowBox[{
          RowBox[{"RedSymbStr", "[", 
           RowBox[{
            RowBox[{"StringReplace", "[", 
             RowBox[{
              RowBox[{"StandHead", "[", "x", "]"}], ",", 
              RowBox[{"\"\<,\>\"", "\[Rule]", "\"\<, \>\""}]}], "]"}], ",", 
            "\"\< \>\"", ",", "\"\< \>\""}], "]"}], ",", "x"}], "]"}], 
        "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"HeadName", "[", "h", "]"}]}], ";", 
     RowBox[{"b", "=", 
      RowBox[{"Definition2", "[", 
       RowBox[{"ToExpression", "[", "a", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"b", ",", 
        RowBox[{
         RowBox[{"SuffPref", "[", 
          RowBox[{"#", ",", 
           RowBox[{"Map3", "[", 
            RowBox[{"StringJoin", ",", "h", ",", 
             RowBox[{"{", 
              RowBox[{"\"\< := \>\"", ",", "\"\< = \>\""}], "}"}]}], "]"}], 
           ",", "1"}], "]"}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"b", ",", 
        RowBox[{
         RowBox[{"SuffPref", "[", 
          RowBox[{"#", ",", 
           RowBox[{"Quiet", "[", 
            RowBox[{"Map3", "[", 
             RowBox[{"StringJoin", ",", 
              RowBox[{"\"\<Options[\>\"", "<>", "a", "<>", "\"\<]\>\""}], ",", 
              RowBox[{"{", 
               RowBox[{"\"\< = \>\"", ",", "\"\< := \>\""}], "}"}]}], "]"}], 
            "]"}], ",", "1"}], "]"}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"b", ",", "\"\<Undefined\>\""}], "]"}], ",", "$Failed", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"d", "\[Equal]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"c", ",", 
           RowBox[{"b", "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"Join", "[", 
          RowBox[{"c", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"b", "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], "]"}]}], 
      "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StandHead`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StandHead", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"HeadingQ", "[", "x", "]"}], "||", 
     RowBox[{"HeadingQ1", "[", "x", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"HeadName", "[", "x", "]"}]}], ",", "b"}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"StringReplace", "[", 
       RowBox[{"x", ",", 
        RowBox[{
         RowBox[{"a", "<>", "\"\<[\>\""}], "\[Rule]", "\"\<\>\""}], ",", 
        "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"ToString1", "[", 
       RowBox[{"ToExpression", "[", 
        RowBox[{"\"\<{\>\"", "<>", 
         RowBox[{"StringTake", "[", 
          RowBox[{"b", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "2"}]}], "}"}]}], "]"}], "<>", "\"\<}\>\""}], "]"}],
        "]"}]}], ";", " ", 
     RowBox[{"a", "<>", "\"\<[\>\"", "<>", 
      RowBox[{"StringTake", "[", 
       RowBox[{"b", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "]"}], "<>", "\"\<]\>\""}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ExtrProcFunc`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExtrProcFunc", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"HeadingQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"StandHead", "[", "x", "]"}]}], ",", "c", ",", "d", ",", 
      RowBox[{"b", "=", 
       RowBox[{"HeadName", "[", "x", "]"}]}], ",", "g", ",", "p"}], "}"}], 
    ",", 
    RowBox[{
     RowBox[{"c", "=", 
      RowBox[{"Definition2", "[", 
       RowBox[{"ToExpression", "[", "b", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"c", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "\"\<Undefined\>\""}], 
       ",", "$Failed", ",", 
       RowBox[{
        RowBox[{"d", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"c", ",", 
           RowBox[{
            RowBox[{"SuffPref", "[", 
             RowBox[{"#", ",", 
              RowBox[{"a", "<>", "\"\< := \>\""}], ",", "1"}], "]"}], "&"}]}],
           "]"}]}], ";", 
        RowBox[{"c", "=", 
         RowBox[{"ToString", "[", 
          RowBox[{"Unique", "[", "b", "]"}], "]"}]}], ";", "  ", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"d", "\[NotEqual]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{
           RowBox[{"ToExpression", "[", 
            RowBox[{"c", "<>", 
             RowBox[{"d", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";", " ", 
           RowBox[{"g", "=", 
            RowBox[{"AttrOpts", "[", "b", "]"}]}], ";", " ", 
           RowBox[{"p", "=", 
            RowBox[{"c", "<>", "b"}]}], ";", " ", 
           RowBox[{
            RowBox[{"Options", "[", "p", "]"}], "=", 
            RowBox[{"g", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", " ", 
           RowBox[{"SetOptions", "[", 
            RowBox[{"p", ",", 
             RowBox[{"g", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";", 
           RowBox[{"ToExpression", "[", 
            RowBox[{"\"\<SetAttributes[\>\"", "<>", "p", "<>", "\"\<,\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"g", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<]\>\""}], 
            "]"}], ";", " ", 
           RowBox[{"Clear", "[", "c", "]"}], ";", " ", "p"}], ",", " ", 
          RowBox[{
           RowBox[{"Clear", "[", "c", "]"}], ";", " ", "$Failed"}]}], 
         "]"}]}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SeqToList1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SeqToList1", "[", "x___", "]"}], ":=", 
  RowBox[{"{", "x", "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SeqDel`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SeqDel", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"SeqQ", "[", "x", "]"}]}], ",", "y_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"SeqToList", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SeqQ", "[", "y", "]"}], ",", 
         RowBox[{"SeqToList", "[", "y", "]"}], ",", "y"}], "]"}]}]}], "}"}], 
    ",", 
    RowBox[{"ListToSeq", "[", 
     RowBox[{"Select", "[", 
      RowBox[{"a", ",", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"MemberQ", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"{", "b", "}"}], "]"}], ",", "#"}], "]"}]}], "&"}]}], 
      "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Default1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Default1", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"SymbolQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"PosIntListQ", "[", "y", "]"}]}], ",", 
    RowBox[{"z_", "/;", 
     RowBox[{"ListQ", "[", "z", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"Length", ",", 
          RowBox[{"{", 
           RowBox[{"y", ",", "z"}], "}"}]}], "]"}], "]"}]}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", "a"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Default", "[", 
          RowBox[{"x", ",", 
           RowBox[{"y", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "=", 
         RowBox[{"z", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Defaults`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Defaults", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{
       RowBox[{"ListQ", "[", "y", "]"}], "&&", 
       RowBox[{
        RowBox[{"Length", "[", "y", "]"}], "\[Equal]", "2"}]}], "||", 
      RowBox[{
       RowBox[{"ListListQ", "[", "y", "]"}], "&&", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"IntegerQ", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "&"}], ",", "y"}], "]"}],
          "]"}], "\[Equal]", 
        RowBox[{"{", "True", "}"}]}]}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"Definition2", "[", "x", "]"}], "}"}], "]"}]}], ",", 
      RowBox[{"atr", "=", 
       RowBox[{"Attributes", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"HeadPF", "[", "x", "]"}], "}"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"Args", "[", "x", "]"}]}], ",", "d", ",", 
      RowBox[{"g", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ListListQ", "[", "y", "]"}], ",", "y", ",", 
         RowBox[{"{", "y", "}"}]}], "]"}]}], ",", "p", ",", 
      RowBox[{"h", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", "q", ",", "t", ",", "u"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"c", "=", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{"ToString", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"NestListQ", "[", "c", "]"}], ",", 
            RowBox[{"c", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "c"}], "]"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"#", "\[NotEqual]", "\"\<$Failed\>\""}], "&"}]}], "]"}]}], 
     ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Max", "[", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", "g"}], "]"}], "]"}],
          "\[LessEqual]", 
         RowBox[{"Length", "[", "c", "]"}]}], "&&", 
        RowBox[{
         RowBox[{"Min", "[", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", "g"}], "]"}], "]"}],
          "\[GreaterEqual]", "1"}]}], ",", 
       RowBox[{
        RowBox[{"q", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", "g"}], "]"}]}], ";", 
        RowBox[{"d", "=", 
         RowBox[{"StringReplace", "[", 
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"b", "\[Rule]", "\"\<\>\""}], ",", "1"}], "]"}]}], ";", 
        " ", "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"k", "\[LessEqual]", 
           RowBox[{"Length", "[", "q", "]"}]}], ",", 
          RowBox[{
           RowBox[{"p", "=", 
            RowBox[{"c", "[", 
             RowBox[{"[", 
              RowBox[{"q", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}]}], ";", 
           RowBox[{"t", "=", 
            RowBox[{"StringSplit", "[", 
             RowBox[{"p", ",", "\"\<_\>\""}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{"q", ",", 
               RowBox[{"q", "[", 
                RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ",", " ", 
             RowBox[{
              RowBox[{"u", "=", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "t", "]"}], "==", "2"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"t", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "=", 
                   RowBox[{"StringReplace", "[", 
                    RowBox[{
                    RowBox[{"t", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"\"\< /; \>\"", "\[Rule]", "\"\<\>\""}]}], 
                    "]"}]}], ";", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Quiet", "[", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<{\>\"", "<>", 
                    RowBox[{"t", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "<>", "\"\<=\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{
                    RowBox[{"g", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<,\>\"", 
                    "<>", 
                    RowBox[{"t", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "<>", "\"\<}\>\""}], 
                    "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "||", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{
                    RowBox[{"Head", "[", 
                    RowBox[{
                    RowBox[{"g", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "===", 
                    RowBox[{"Symbol", "[", 
                    RowBox[{"t", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}]}], ",", 
                    "True", ",", "False"}], " ", "\[IndentingNewLine]", 
                   "]"}]}], ",", "True"}], "]"}]}], ";", " ", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{"u", ",", 
                RowBox[{
                 RowBox[{"c", "[", 
                  RowBox[{"[", 
                   RowBox[{"q", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "=", 
                 RowBox[{
                  RowBox[{"StringTake", "[", 
                   RowBox[{"p", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"p", ",", "\"\<_\>\""}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], "<>", 
                  "\"\<.\>\""}]}]}], "]"}]}]}], "]"}], ";", 
           RowBox[{"k", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"ClearAllAttributes", "[", "x", "]"}], ";", 
        RowBox[{"Clear", "[", "x", "]"}], ";", 
        RowBox[{"k", "=", "1"}], ";", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"k", "\[LessEqual]", 
           RowBox[{"Length", "[", "q", "]"}]}], ",", 
          RowBox[{
           RowBox[{"ToExpression", "[", 
            RowBox[{"\"\<Default[\>\"", "<>", 
             RowBox[{"ToString", "[", "x", "]"}], "<>", "\"\<, \>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"q", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "]"}], "<>", "\"\<]\>\"", 
             "<>", "\"\< = \>\"", "<>", 
             RowBox[{"ToString1", "[", 
              RowBox[{
               RowBox[{"g", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}], ";", 
           RowBox[{"k", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"ToExpression", "[", 
         RowBox[{
          RowBox[{"ToString", "[", "x", "]"}], "<>", "\"\<[\>\"", "<>", 
          RowBox[{"StringTake", "[", 
           RowBox[{
            RowBox[{"ToString", "[", "c", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", 
              RowBox[{"-", "2"}]}], "}"}]}], "]"}], "<>", "\"\<]\>\"", "<>", 
          "d"}], "]"}], ";", 
        RowBox[{"Map", "[", 
         RowBox[{"ToExpression", ",", 
          RowBox[{"MinusList", "[", 
           RowBox[{"a", ",", 
            RowBox[{"{", 
             RowBox[{"a", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "}"}]}], "]"}]}], "]"}], ";", 
        RowBox[{"SetAttributes", "[", 
         RowBox[{"x", ",", "atr"}], "]"}]}], ",", "$Failed"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DefaultsM`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DefaultsM", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{
       RowBox[{"ListQ", "[", "y", "]"}], "&&", 
       RowBox[{
        RowBox[{"Length", "[", "y", "]"}], "\[Equal]", "2"}]}], "||", 
      RowBox[{
       RowBox[{"ListListQ", "[", "y", "]"}], "&&", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"IntegerQ", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "&"}], ",", "y"}], "]"}],
          "]"}], "\[Equal]", 
        RowBox[{"{", "True", "}"}]}]}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}]}], ",", 
      "ArtKr", ",", 
      RowBox[{"atr", "=", 
       RowBox[{"Attributes", "[", "x", "]"}]}], ",", 
      RowBox[{"g", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ListListQ", "[", "y", "]"}], ",", "y", ",", 
         RowBox[{"{", "y", "}"}]}], "]"}]}], ",", "q", ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ClearAllAttributes", "[", "x", "]"}], ";", 
     RowBox[{"ClearAll", "[", "x", "]"}], ";", 
     RowBox[{"q", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", "g"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "g", "]"}]}], ",", 
       RowBox[{
        RowBox[{"ToExpression", "[", 
         RowBox[{"\"\<Default[\>\"", "<>", 
          RowBox[{"ToString", "[", "x", "]"}], "<>", "\"\<, \>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{
            RowBox[{"g", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<]\>\"", "<>", 
          "\"\< = \>\"", "<>", 
          RowBox[{"ToString1", "[", 
           RowBox[{
            RowBox[{"g", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ArtKr", "[", 
       RowBox[{
        RowBox[{"s_", "/;", 
         RowBox[{"StringQ", "[", "s", "]"}]}], ",", 
        RowBox[{"def_", "/;", 
         RowBox[{"ListQ", "[", "def", "]"}]}]}], "]"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"n", "=", 
           RowBox[{"Unique", "[", "AVZ", "]"}]}], ",", "b", ",", "c", ",", 
          "d", ",", "t", ",", 
          RowBox[{"j", "=", "1"}], ",", "h"}], "}"}], ",", 
        RowBox[{
         RowBox[{"h", "=", 
          RowBox[{
           RowBox[{"ToString", "[", "n", "]"}], "<>", 
           RowBox[{"ToString", "[", "x", "]"}]}]}], ";", 
         RowBox[{"ToExpression", "[", 
          RowBox[{
           RowBox[{"ToString", "[", "n", "]"}], "<>", "s"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"b", "=", 
          RowBox[{"HeadPF", "[", "h", "]"}]}], ";", " ", 
         RowBox[{"d", "=", 
          RowBox[{"StringReplace", "[", 
           RowBox[{
            RowBox[{"PureDefinition", "[", "h", "]"}], ",", 
            RowBox[{"b", "\[Rule]", "\"\<\>\""}]}], "]"}]}], ";", 
         RowBox[{"c", "=", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{"ToString", ",", 
              RowBox[{"Args", "[", "h", "]"}]}], "]"}], ",", 
            RowBox[{
             RowBox[{"#", "\[NotEqual]", "\"\<$Failed\>\""}], "&"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{"j", "\[LessEqual]", 
            RowBox[{"Length", "[", "c", "]"}]}], ",", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{"q", ",", "j"}], "]"}], ",", 
              RowBox[{
               RowBox[{"t", "=", 
                RowBox[{"c", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}], ";", " ", 
               RowBox[{
                RowBox[{"c", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "=", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"t", ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"t", ",", "\"\<_\>\""}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], "<>", 
                 "\"\<.\>\""}]}]}]}], "]"}], ";", 
            RowBox[{"j", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"ToExpression", "[", 
          RowBox[{
           RowBox[{"ToString", "[", "x", "]"}], "<>", "\"\<[\>\"", "<>", 
           RowBox[{"StringTake", "[", 
            RowBox[{
             RowBox[{"ToString", "[", "c", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", 
               RowBox[{"-", "2"}]}], "}"}]}], "]"}], "<>", "\"\<]\>\"", "<>", 
           "d"}], "]"}], ";", 
         RowBox[{"ClearAll", "[", 
          RowBox[{"h", ",", "n"}], "]"}]}]}], "]"}]}], ";", 
     RowBox[{"k", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{
        RowBox[{"ArtKr", "[", 
         RowBox[{
          RowBox[{"a", "[", 
           RowBox[{"[", "k", "]"}], "]"}], ",", "g"}], "]"}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", 
     RowBox[{"SetAttributes", "[", 
      RowBox[{"x", ",", "atr"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SelfReprod`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SelfReprod", "[", 
   RowBox[{
    RowBox[{"c_", "/;", 
     RowBox[{"StringQ", "[", "c", "]"}]}], ",", 
    RowBox[{"n_", "/;", 
     RowBox[{"IntegerQ", "[", "n", "]"}]}], ",", 
    RowBox[{"p_", "/;", 
     RowBox[{"IntegerQ", "[", "p", "]"}]}], ",", 
    RowBox[{"m_", "/;", 
     RowBox[{"IntegerQ", "[", "m", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"h", "=", 
       RowBox[{"StringJoin", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"ToString", ",", 
          RowBox[{"NestList", "[", 
           RowBox[{"Sin", ",", "0", ",", 
            RowBox[{"n", "-", "1"}]}], "]"}]}], "]"}], "]"}]}], ",", 
      RowBox[{"b", "=", "\"\<0\>\""}], ",", "k"}], "}"}], ",", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"h", "<>", "c", "<>", "h"}]}], ";", " ", 
     RowBox[{"d", "=", "1"}], ";", 
     RowBox[{"Label", "[", "AVZ", "]"}], ";", " ", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", 
        RowBox[{
         RowBox[{"StringLength", "[", "a", "]"}], "-", "n", "+", "1"}]}], ",", 
       RowBox[{"k", "\[GreaterEqual]", "1"}], ",", 
       RowBox[{"k", "--"}], ",", 
       RowBox[{"b", "=", 
        RowBox[{
         RowBox[{"ToString", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{"Total", "[", 
             RowBox[{"ToExpression", "[", 
              RowBox[{"Characters", "[", 
               RowBox[{"StringTake", "[", 
                RowBox[{"a", ",", 
                 RowBox[{"{", 
                  RowBox[{"k", ",", 
                   RowBox[{"k", "+", "n", "-", "1"}]}], "}"}]}], "]"}], "]"}],
               "]"}], "]"}], ",", "p"}], "]"}], "]"}], "<>", "b"}]}]}], "]"}],
      ";", " ", 
     RowBox[{"a", "=", 
      RowBox[{"\"\<0\>\"", "<>", "b"}]}], ";", " ", 
     RowBox[{"t", "=", 
      RowBox[{"StringCount", "[", 
       RowBox[{"a", ",", "c"}], "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"t", "\[GreaterEqual]", "m"}], ",", "d", ",", 
       RowBox[{
        RowBox[{"d", "++"}], ";", " ", 
        RowBox[{"Goto", "[", "AVZ", "]"}]}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SelfReprod1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SelfReprod1", "[", 
   RowBox[{
    RowBox[{"Ltf_", "/;", 
     RowBox[{"ListQ", "[", "Ltf", "]"}]}], ",", 
    RowBox[{"Cf_", "/;", 
     RowBox[{"StringQ", "[", "Cf", "]"}]}], ",", 
    RowBox[{"p_", "/;", 
     RowBox[{"IntegerQ", "[", "p", "]"}]}], ",", 
    RowBox[{"h_", "/;", 
     RowBox[{"StringQ", "[", "h", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "=", 
       RowBox[{"StringLength", "[", 
        RowBox[{"Part", "[", 
         RowBox[{
          RowBox[{"Ltf", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], "]"}]}], ",", 
      "a", ",", "b", ",", 
      RowBox[{"c", "=", "\"\<\>\""}], ",", "k", ",", 
      RowBox[{"d", "=", "0"}], ",", "t"}], "}"}], ",", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"ToString", ",", 
         RowBox[{"NestList", "[", 
          RowBox[{"Sin", ",", "0", ",", 
           RowBox[{"n", "-", "2"}]}], "]"}]}], "]"}], "]"}]}], ";", " ", 
     RowBox[{"b", "=", 
      RowBox[{"a", "<>", "h", "<>", "a"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Label", "[", "AVZ", "]"}], ";", " ", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", 
        RowBox[{
         RowBox[{"StringLength", "[", "b", "]"}], "-", "n", "+", "1"}]}], ",", 
       RowBox[{"k", "\[GreaterEqual]", "1"}], ",", 
       RowBox[{"k", "--"}], ",", 
       RowBox[{"c", "=", 
        RowBox[{
         RowBox[{"StringReplace", "[", 
          RowBox[{
           RowBox[{"StringTake", "[", 
            RowBox[{"b", ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", 
               RowBox[{"k", "+", "n", "-", "1"}]}], "}"}]}], "]"}], ",", 
           "Ltf"}], "]"}], "<>", "c"}]}]}], "]"}], ";", 
     RowBox[{"b", "=", 
      RowBox[{"a", "<>", "c", "<>", "a"}]}], ";", 
     RowBox[{"c", "=", "\"\<\>\""}], ";", 
     RowBox[{"d", "=", 
      RowBox[{"d", "+", "1"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"t", "=", 
         RowBox[{"StringCount", "[", 
          RowBox[{"b", ",", "Cf"}], "]"}]}], ";", 
        RowBox[{"t", "\[GreaterEqual]", "p"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"d", ",", "t"}], "}"}], ",", 
       RowBox[{"Goto", "[", "AVZ", "]"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DefaultValues1`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DefaultValues1", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", "h", ",", "k", ",", 
      RowBox[{"a", "=", 
       RowBox[{"{", 
        RowBox[{"SetAttributes", "[", 
         RowBox[{"String", ",", "Listable"}], "]"}], "}"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"ToString", ",", 
         RowBox[{"Args", "[", "x", "]"}]}], "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"ToString", ",", 
         RowBox[{"DefaultValues", "[", "x", "]"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"ClearAttributes", "[", 
      RowBox[{"ToString", ",", "Listable"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"b", "\[NotEqual]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"a", "=", "1"}], ",", 
         RowBox[{"a", "\[LessEqual]", 
          RowBox[{"Length", "[", "b", "]"}]}], ",", 
         RowBox[{"a", "++"}], ",", 
         RowBox[{
          RowBox[{"h", "=", 
           RowBox[{"b", "[", 
            RowBox[{"[", "a", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"StringFreeQ", "[", 
              RowBox[{"h", ",", "\"\<_:\>\""}], "]"}]}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"d", ",", 
              RowBox[{"ToExpression", "[", 
               RowBox[{"\"\<{\>\"", "<>", 
                RowBox[{"ToString", "[", "a", "]"}], "<>", "\"\<} :> \>\"", "<>", 
                RowBox[{"StringTake", "[", 
                 RowBox[{"h", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"h", ",", "\"\<_:\>\""}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "]"}]}], "]"}]}], 
           "]"}]}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"c", "\[NotEqual]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"c", "\[NotEqual]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"c", "=", 
           RowBox[{"ToExpression", "[", 
            RowBox[{"Mapp", "[", 
             RowBox[{"StringReplace", ",", 
              RowBox[{"Mapp", "[", 
               RowBox[{"StringReplace", ",", "c", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\"\<HoldPattern[Default[\>\"", "<>", 
                    RowBox[{"ToString", "[", "x", "]"}]}], "->", 
                   "\"\<{\>\""}], ",", 
                  RowBox[{"\"\<]]\>\"", "->", "\"\<}\>\""}]}], "}"}]}], "]"}],
               ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\"\<{, \>\"", "->", "\"\<{\>\""}], ",", 
                RowBox[{"\"\<{}\>\"", "->", "\"\<{2016}\>\""}]}], "}"}]}], 
             "]"}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"h", "=", 
         RowBox[{
          RowBox[{"c", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Op", "[", "h", "]"}], "\[Equal]", 
           RowBox[{"{", "2016", "}"}]}], ",", 
          RowBox[{
           RowBox[{"a", "=", 
            RowBox[{"{", "}"}]}], ";", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"k", "=", "1"}], ",", 
             RowBox[{"k", "\[LessEqual]", 
              RowBox[{"Length", "[", "b", "]"}]}], ",", 
             RowBox[{"k", "++"}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"a", ",", 
               RowBox[{"ToExpression", "[", 
                RowBox[{
                 RowBox[{"ToString", "[", 
                  RowBox[{"{", "k", "}"}], "]"}], "<>", "\"\< :> \>\"", "<>", 
                 RowBox[{"ToString", "[", 
                  RowBox[{
                   RowBox[{"c", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}]}], "]"}]}], 
            "]"}], ";", 
           RowBox[{"c", "=", "a"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"PosIntListQ", "[", "h", "]"}], "&&", 
           RowBox[{
            RowBox[{"Length", "[", "h", "]"}], ">", "1"}]}], ",", 
          RowBox[{
           RowBox[{"a", "=", 
            RowBox[{"{", "}"}]}], ";", 
           RowBox[{"b", "=", "h"}], ";", "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"k", "=", "1"}], ",", 
             RowBox[{"k", "\[LessEqual]", 
              RowBox[{"Length", "[", "b", "]"}]}], ",", 
             RowBox[{"k", "++"}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"a", ",", 
               RowBox[{"ToExpression", "[", 
                RowBox[{
                 RowBox[{"ToString", "[", 
                  RowBox[{"{", "k", "}"}], "]"}], "<>", "\"\< :> \>\"", "<>", 
                 RowBox[{"ToString", "[", 
                  RowBox[{
                   RowBox[{"c", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}]}], "]"}]}], 
            "]"}], ";", 
           RowBox[{"c", "=", "a"}]}]}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"d", "\[Equal]", 
         RowBox[{"{", "}"}]}], "&&", 
        RowBox[{"c", "\[Equal]", 
         RowBox[{"{", "}"}]}]}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"{", "}"}], "]"}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"Sort", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"d", ",", "c"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Op", "[", "#1", "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", 
            RowBox[{
             RowBox[{
              RowBox[{"Op", "[", "#2", "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}]}], "]"}], ";",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"k", ",", "h"}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"{", "}"}]}], "}"}]}], ";", " ", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{
         RowBox[{"Length", "[", "c", "]"}], "-", "1"}]}], ",", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"h", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Op", "[", 
               RowBox[{"c", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
             RowBox[{
              RowBox[{"Op", "[", 
               RowBox[{"c", "[", 
                RowBox[{"[", 
                 RowBox[{"k", "+", "1"}], "]"}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", 
            RowBox[{"k", "+", "1"}]}], "]"}]}], "]"}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"ReplacePart", "[", 
        RowBox[{"c", ",", 
         RowBox[{"Mapp", "[", 
          RowBox[{"Rule", ",", 
           RowBox[{"Select", "[", 
            RowBox[{"h", ",", 
             RowBox[{
              RowBox[{"#", "\[NotEqual]", "\"\<Null\>\""}], "&"}]}], "]"}], 
           ",", "Null"}], "]"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"SameQ", "[", 
          RowBox[{"#", ",", "Null"}], "]"}]}], "&"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DefaultValues2`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DefaultValues2", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"IntegerListQ", "[", "y", "]"}]}], ",", 
    RowBox[{"z_", "/;", 
     RowBox[{"ListQ", "[", "z", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Attributes", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"ToString", ",", 
         RowBox[{"Args", "[", "x", "]"}]}], "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"HeadPF", "[", "x", "]"}]}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"PureDefinition", "[", "x", "]"}]}], ",", "p", ",", 
      RowBox[{"h", "=", 
       RowBox[{"{", "}"}]}], ",", "y1", ",", "z1", ",", 
      RowBox[{"g", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"ClearAttributes", "[", 
      RowBox[{"x", ",", "a"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"p", "=", 
      RowBox[{"Min", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"Length", ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "z"}], "}"}]}], "]"}], "]"}]}], ";", 
     RowBox[{"y1", "=", 
      RowBox[{"y", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "p"}], "]"}], "]"}]}], ";", 
     RowBox[{"z1", "=", 
      RowBox[{"z", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "p"}], "]"}], "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"y1", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", "Null", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"h", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"MemberQ", "[", 
                RowBox[{"y1", ",", "k"}], "]"}]}], ",", 
              RowBox[{"b", "[", 
               RowBox[{"[", "k", "]"}], "]"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"SuffPref", "[", 
                 RowBox[{
                  RowBox[{"b", "[", 
                   RowBox[{"[", "k", "]"}], "]"}], ",", "\"\<_\>\"", ",", 
                  "2"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"g", ",", 
                   RowBox[{
                    RowBox[{"{", "k", "}"}], "->", 
                    RowBox[{"z1", "[", 
                    RowBox[{"[", "k", "]"}], "]"}]}]}], "]"}], ";", 
                 RowBox[{
                  RowBox[{"b", "[", 
                   RowBox[{"[", "k", "]"}], "]"}], "<>", "\"\<:\>\"", "<>", 
                  RowBox[{"ToString1", "[", 
                   RowBox[{"z1", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "]"}]}]}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"SuffPref", "[", 
                   RowBox[{
                    RowBox[{"b", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], ",", "\"\<_.\>\"", ",", 
                    "2"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"g", ",", 
                    RowBox[{
                    RowBox[{"{", "k", "}"}], "->", 
                    RowBox[{"z1", "[", 
                    RowBox[{"[", "k", "]"}], "]"}]}]}], "]"}], ";", 
                   RowBox[{
                    RowBox[{"StringTake", "[", 
                    RowBox[{
                    RowBox[{"b", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "2"}]}], "}"}]}], "]"}], "<>", "\"\<:\>\"", "<>", 
                    RowBox[{"ToString1", "[", 
                    RowBox[{"z1", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "]"}]}]}], ",", 
                  RowBox[{"b", "[", 
                   RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], "]"}]}], 
             "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", 
            RowBox[{"Length", "[", "b", "]"}]}], "}"}]}], "]"}], ";", " ", 
        RowBox[{"Clear", "[", "x", "]"}], ";", " ", "\[IndentingNewLine]", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"StringReplace", "[", 
          RowBox[{"d", ",", 
           RowBox[{"c", "\[Rule]", 
            RowBox[{
             RowBox[{"ToString", "[", "x", "]"}], "<>", "\"\<[\>\"", "<>", 
             RowBox[{"StringTake", "[", 
              RowBox[{
               RowBox[{"ToString", "[", "h", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"2", ",", 
                 RowBox[{"-", "2"}]}], "}"}]}], "]"}], "<>", "\"\<]\>\""}]}], 
           ",", "1"}], "]"}], "]"}], ";", " ", 
        RowBox[{"SetAttributes", "[", 
         RowBox[{"x", ",", "a"}], "]"}], ";", " ", "g"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Sequences`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Sequences", "[", "x__", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", "x", "}"}], "]"}]}], ",", "b"}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"\"\<Sequence[\>\"", "<>", 
       RowBox[{"ToString1", "[", "a", "]"}], "<>", "\"\<]\>\""}]}], ";", " ", 
     RowBox[{"a", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"StringPosition", "[", 
        RowBox[{"b", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<{\>\"", ",", "\"\<}\>\""}], "}"}]}], "]"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"StringReplace", "[", 
       RowBox[{"b", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"StringTake", "[", 
            RowBox[{"b", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"a", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"a", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], "\[Rule]", 
           "\"\<\>\""}], ",", 
          RowBox[{
           RowBox[{"StringTake", "[", 
            RowBox[{"b", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"a", "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}], ",", 
               RowBox[{"a", "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], 
           "\[Rule]", "\"\<\>\""}]}], "}"}]}], "]"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Sq`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Sq", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ListQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"ToExpression", "[", 
   RowBox[{"\"\<Sequence[\>\"", "<>", 
    RowBox[{"StringTake", "[", 
     RowBox[{
      RowBox[{"ToString1", "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", 
        RowBox[{"-", "2"}]}], "}"}]}], "]"}], "<>", "\"\<]\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`MemberQ1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MemberQ1", "[", 
    RowBox[{
     RowBox[{"L_", "/;", 
      RowBox[{"ListQ", "[", "L", "]"}]}], ",", "x_", ",", 
     RowBox[{"y_", "/;", 
      RowBox[{"!", 
       RowBox[{"HowAct", "[", "y", "]"}]}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{"Flatten", "[", "L", "]"}]}], ",", 
       RowBox[{"b", "=", "L"}], ",", 
       RowBox[{"c", "=", "0"}], ",", 
       RowBox[{"p", "=", 
        RowBox[{"{", "}"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"b", "\[Equal]", 
          RowBox[{"{", "}"}]}]}], ",", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"b", ",", "x"}], "]"}], ",", 
           RowBox[{"p", "=", 
            RowBox[{"Append", "[", 
             RowBox[{"p", ",", "c"}], "]"}]}], ",", "Null"}], "]"}], ";", 
         RowBox[{"b", "=", 
          RowBox[{"Select", "[", 
           RowBox[{"b", ",", 
            RowBox[{
             RowBox[{"ListQ", "[", "#", "]"}], "&"}]}], "]"}]}], ";", " ", 
         RowBox[{"b", "=", 
          RowBox[{"Flatten", "[", 
           RowBox[{"b", ",", "1"}], "]"}]}], ";", " ", 
         RowBox[{"c", "=", 
          RowBox[{"c", "+", "1"}]}]}]}], "]"}], ";", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"p", "\[Equal]", 
         RowBox[{"{", "}"}]}], ",", "False", ",", 
        RowBox[{
         RowBox[{"y", "=", "p"}], ";", "True"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Iff`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Iff", "[", 
   RowBox[{"x_", ",", " ", 
    RowBox[{"y__", "/;", 
     RowBox[{"StringQ", "[", "y", "]"}]}]}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "y"}], "}"}]}], ",", " ", "b"}], "}"}], ",", 
    " ", 
    RowBox[{
     RowBox[{"b", " ", "=", " ", 
      RowBox[{"Length", "[", "a", "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"b", " ", "==", " ", "1"}], " ", "||", " ", 
        RowBox[{"b", " ", ">=", " ", "5"}]}], ",", " ", 
       RowBox[{"Defer", "[", 
        RowBox[{"Iff", "[", 
         RowBox[{"x", ",", " ", "y"}], "]"}], "]"}], ",", 
       "\[IndentingNewLine]", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"b", " ", "===", " ", "2"}], ",", " ", 
         RowBox[{"If", "[", 
          RowBox[{"x", ",", " ", 
           RowBox[{"ToExpression", "[", "y", "]"}]}], "]"}], ",", " ", 
         "\[IndentingNewLine]", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"b", " ", "==", " ", "3"}], ",", " ", 
           RowBox[{"If", "[", 
            RowBox[{"x", ",", "  ", 
             RowBox[{"ToExpression", "[", "y", "]"}], ",", "  ", 
             RowBox[{"ToExpression", "[", 
              RowBox[{"a", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "]"}], ",", " ", 
           "\[IndentingNewLine]", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"b", " ", "==", " ", "4"}], ",", " ", 
             RowBox[{"If", "[", 
              RowBox[{"x", ",", "  ", 
               RowBox[{"ToExpression", "[", 
                RowBox[{"a", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "  ", 
               RowBox[{"ToExpression", "[", 
                RowBox[{"a", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", "  ", 
               RowBox[{"ToExpression", "[", 
                RowBox[{"a", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], "]"}]}], "]"}], ",", " ", 
             "Null"}], "]"}]}], "]"}]}], "]"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`GotoLabel`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GotoLabel", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"BlockModQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "}"}]}], "}"}]}], ",", "d", ",", "p", ",", 
      RowBox[{"a", "=", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", "j", ",", "h", ",", 
      RowBox[{"v", "=", 
       RowBox[{"{", "}"}]}], ",", "t"}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"ExtrVarsOfStr", "[", 
       RowBox[{"a", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Select", "[", 
        RowBox[{"b", ",", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<Label\>\"", ",", "\"\<Goto\>\""}], "}"}], ",", 
            "#"}], "]"}], "&"}]}], "]"}], "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"b", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", "c", ",", 
       RowBox[{
        RowBox[{"d", "=", 
         RowBox[{"StringPosition", "[", 
          RowBox[{"a", ",", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"\"\< \>\"", "<>", "#", "<>", "\"\<[\>\""}], "&"}], ",", 
             RowBox[{"{", 
              RowBox[{"\"\<Label\>\"", ",", "\"\<Goto\>\""}], "}"}]}], 
            "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"t", "=", 
         RowBox[{"StringLength", "[", "a", "]"}]}], ";", 
        RowBox[{"For", "[", 
         RowBox[{"k", ",", 
          RowBox[{"k", "\[LessEqual]", 
           RowBox[{"Length", "[", "d", "]"}]}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{
           RowBox[{"p", "=", 
            RowBox[{"d", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], ";", 
           RowBox[{"h", "=", "\"\<\>\""}], ";", 
           RowBox[{"j", "=", 
            RowBox[{"p", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ";", " ", 
           RowBox[{"While", "[", 
            RowBox[{
             RowBox[{"j", "\[LessEqual]", "t"}], ",", 
             RowBox[{
              RowBox[{"h", "=", 
               RowBox[{"h", "<>", 
                RowBox[{"StringTake", "[", 
                 RowBox[{"a", ",", 
                  RowBox[{"{", 
                   RowBox[{"j", ",", "j"}], "}"}]}], "]"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"StringCount", "[", 
                  RowBox[{"h", ",", "\"\<[\>\""}], "]"}], "\[Equal]", 
                 RowBox[{"StringCount", "[", 
                  RowBox[{"h", ",", "\"\<]\>\""}], "]"}]}], ",", 
                RowBox[{
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"v", ",", 
                   RowBox[{
                    RowBox[{"StringTake", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"p", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], ",", 
                    RowBox[{
                    RowBox[{"p", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
                    "]"}], "<>", "h"}]}], "]"}], ";", " ", 
                 RowBox[{"Break", "[", "]"}]}]}], "]"}], ";", 
              RowBox[{"j", "++"}]}]}], "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"h", "=", 
         RowBox[{"DeleteDuplicates", "[", "v", "]"}]}], ";", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Select", "[", 
           RowBox[{"h", ",", 
            RowBox[{
             RowBox[{"SuffPref", "[", 
              RowBox[{"#", ",", "\"\<Goto\>\"", ",", "1"}], "]"}], "&"}]}], 
           "]"}], ",", 
          RowBox[{"Select", "[", 
           RowBox[{"h", ",", 
            RowBox[{
             RowBox[{"SuffPref", "[", 
              RowBox[{"#", ",", "\"\<Label\>\"", ",", "1"}], "]"}], "&"}]}], 
           "]"}], ",", 
          RowBox[{"Gather", "[", 
           RowBox[{
            RowBox[{"Sort", "[", "v", "]"}], ",", 
            RowBox[{
             RowBox[{"#1", "\[Equal]", 
              RowBox[{"StringReplace", "[", 
               RowBox[{"#2", ",", 
                RowBox[{"\"\<Label[\>\"", "->", "\"\<Goto[\>\""}], ",", "1"}],
                "]"}]}], "&"}]}], "]"}]}], "}"}]}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`MemberT`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MemberT", "[", 
   RowBox[{
    RowBox[{"L_", "/;", 
     RowBox[{"ListQ", "[", "L", "]"}]}], ",", "x_"}], "]"}], ":=", 
  RowBox[{"Length", "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", "L", "]"}], ",", 
     RowBox[{
      RowBox[{"SameQ", "[", 
       RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`MemberQ2`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MemberQ2", "[", 
   RowBox[{
    RowBox[{"L_", "/;", 
     RowBox[{"ListQ", "[", "L", "]"}]}], ",", "x_", ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"!", 
      RowBox[{"HowAct", "[", "y", "]"}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"b", "=", 
       RowBox[{"Flatten", "[", "L", "]"}]}], ",", 
      RowBox[{"c", "=", "0"}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"b", ",", "x"}], "]"}], ",", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{"k", ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "b", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"b", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "===", "x"}], ",", 
           RowBox[{"c", "=", 
            RowBox[{"c", "+", "1"}]}], ",", 
           RowBox[{"Next", "[", "]"}]}], "]"}]}], "]"}], ";", 
       RowBox[{"y", "=", "c"}], ";", "True"}], ",", "False"}], "]"}]}], "]"}]}
  ], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`MemberQ3`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MemberQ3", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"ListQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"ListQ", "[", "y", "]"}]}], ",", "z___"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", "z", "}"}], "\[NotEqual]", 
     RowBox[{"{", "}"}]}], ",", 
    RowBox[{"MemberQ", "[", 
     RowBox[{
      RowBox[{"SubsStrLim", "[", 
       RowBox[{
        RowBox[{"ToString", "[", "x", "]"}], ",", "\"\<{\>\"", ",", 
        "\"\<}\>\""}], "]"}], ",", 
      RowBox[{"ToString", "[", "y", "]"}]}], "]"}], ",", 
    RowBox[{"SameQ", "[", 
     RowBox[{
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Map3", "[", 
        RowBox[{"MemberQ", ",", 
         RowBox[{"Flatten", "[", "x", "]"}], ",", 
         RowBox[{"Flatten", "[", "y", "]"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", "True", "}"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`MemberQ4`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MemberQ4", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"ListQ", "[", "x", "]"}]}], ",", " ", "y_", ",", " ", "z___"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"ListQ", "[", "y", "]"}], ",", " ", 
    RowBox[{
     RowBox[{"Count", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"x", ",", " ", "#1"}], "]"}], " ", "&"}], " ", ")"}], " ", 
        "/@", " ", "y"}], ",", " ", "True"}], "]"}], " ", ">=", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "z", "}"}], " ", "===", " ", 
        RowBox[{"{", "}"}]}], ",", " ", "1", ",", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"IntegerQ", "[", "z", "]"}], ",", " ", "z", ",", " ", "1"}], 
        "]"}]}], "]"}]}], ",", " ", 
    RowBox[{"MemberQ", "[", 
     RowBox[{"x", ",", " ", "y"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`IFk`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IFk", "[", "x__", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", "x", "}"}]}], ",", "b", ",", 
      RowBox[{"c", "=", "\"\<\>\""}], ",", 
      RowBox[{"d", "=", "\"\<If[\>\""}], ",", 
      RowBox[{"e", "=", "\"\<]\>\""}], ",", 
      RowBox[{"h", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"Length", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{"k", ",", 
          RowBox[{"k", "\[LessEqual]", 
           RowBox[{"b", "-", "1"}]}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"h", ",", 
            RowBox[{
             RowBox[{"b", "\[GreaterEqual]", "2"}], "&&", 
             RowBox[{"ListQ", "[", 
              RowBox[{"a", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "]"}], "&&", 
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"a", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "]"}], "\[Equal]", "2"}]}]}], 
           "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"DeleteDuplicates", "[", "h", "]"}], "!=", 
         RowBox[{"{", "True", "}"}]}]}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"Defer", "[", 
         RowBox[{"IFk", "[", "x", "]"}], "]"}], "]"}], ",", 
       RowBox[{"k", "=", "1"}]}], "]"}], ";", " ", 
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"b", "-", "1"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"c", "<>", "d", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<,\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<,\>\""}]}]}], 
      "]"}], ";", " ", 
     RowBox[{"c", "=", 
      RowBox[{"c", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"a", "[", 
         RowBox[{"[", "b", "]"}], "]"}], "]"}], "<>", 
       RowBox[{"StringMultiple", "[", 
        RowBox[{"e", ",", 
         RowBox[{"b", "-", "1"}]}], "]"}]}]}], ";", 
     RowBox[{"ToExpression", "[", "c", "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`IFk1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IFk1", "[", "x__", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", "x", "}"}]}], ",", "b", ",", 
      RowBox[{"c", "=", "\"\<\>\""}], ",", 
      RowBox[{"d", "=", "\"\<If[\>\""}], ",", 
      RowBox[{"e", "=", "\"\<]\>\""}], ",", 
      RowBox[{"h", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"Length", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{"k", ",", 
          RowBox[{"k", "\[LessEqual]", 
           RowBox[{"b", "-", "1"}]}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"h", ",", 
            RowBox[{
             RowBox[{"b", "\[GreaterEqual]", "2"}], "&&", 
             RowBox[{"ListQ", "[", 
              RowBox[{"a", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "]"}], "&&", 
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"a", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "]"}], "\[Equal]", "2"}]}]}], 
           "]"}]}], "]"}], ";", " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"DeleteDuplicates", "[", "h", "]"}], "!=", 
         RowBox[{"{", "True", "}"}]}]}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"Defer", "[", 
         RowBox[{"IFk1", "[", "x", "]"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"h", ",", "k"}], "}"}], "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "}"}], ",", "1"}], "}"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{"k", ",", 
          RowBox[{"k", "\[LessEqual]", 
           RowBox[{"b", "-", "1"}]}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"h", ",", 
            RowBox[{
             RowBox[{"a", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "]"}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{"h", ",", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"True", ",", "False"}], "}"}], ",", "#"}], "]"}]}], 
            "&"}]}], "]"}], "\[NotEqual]", 
         RowBox[{"{", "}"}]}]}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"Defer", "[", 
         RowBox[{"IFk1", "[", "x", "]"}], "]"}], "]"}], ",", 
       RowBox[{"k", "=", "1"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"b", "-", "1"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"c", "<>", "d", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<,\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<,\>\""}]}]}], 
      "]"}], ";", " ", 
     RowBox[{"c", "=", 
      RowBox[{"c", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"a", "[", 
         RowBox[{"[", "b", "]"}], "]"}], "]"}], "<>", 
       RowBox[{"StringMultiple", "[", 
        RowBox[{"e", ",", 
         RowBox[{"b", "-", "1"}]}], "]"}]}]}], ";", 
     RowBox[{"ToExpression", "[", "c", "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ListToString`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListToString", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"ListQ", "[", "x", "]"}], "||", 
      RowBox[{"StringQ", "[", "x", "]"}]}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"StringQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", "c", ",", "d", ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"ListQ", "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{"Flatten", "[", "x", "]"}]}], ";", 
       RowBox[{"For", "[", 
        RowBox[{"k", ",", 
         RowBox[{"k", "<", 
          RowBox[{"Length", "[", "a", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{
          RowBox[{"c", "=", 
           RowBox[{"a", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"b", ",", 
            RowBox[{
             RowBox[{"ToString1", "[", "c", "]"}], "<>", "y"}]}], "]"}]}]}], 
        "]"}], ";", 
       RowBox[{"a", "=", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"Append", "[", 
          RowBox[{"b", ",", 
           RowBox[{"ToString1", "[", 
            RowBox[{"a", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}], "]"}]}], "]"}], "]"}]}]}], 
      ",", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{"FromCharacterCode", "[", "14", "]"}]}], ";", 
       RowBox[{"d", "=", 
        RowBox[{"a", "<>", 
         RowBox[{"StringReplace", "[", 
          RowBox[{"x", ",", 
           RowBox[{"y", "\[Rule]", "a"}]}], "]"}], "<>", "a"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"c", "=", 
        RowBox[{"Sort", "[", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"StringPosition", "[", 
            RowBox[{"d", ",", "a"}], "]"}], "]"}], "]"}], "]"}]}], ";", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "<", 
          RowBox[{"Length", "[", "c", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"b", ",", 
           RowBox[{"StringTake", "[", 
            RowBox[{"d", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"c", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "+", "1"}], ",", 
               RowBox[{
                RowBox[{"c", "[", 
                 RowBox[{"[", 
                  RowBox[{"k", "+", "1"}], "]"}], "]"}], "-", "1"}]}], 
              "}"}]}], "]"}]}], "]"}]}], "]"}], ";", 
       RowBox[{"ToExpression", "[", "b", "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`GroupIdentMult`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GroupIdentMult", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ListQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Gather", "[", "x", "]"}]}], ",", "b", ",", "c"}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"DeleteDuplicates", "[", "#", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"Length", "[", "#", "]"}]}], "}"}], "&"}], ",", "a"}], 
       "]"}]}], ";", 
     RowBox[{"b", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"DeleteDuplicates", "[", "#", "]"}], "&"}], ",", 
        RowBox[{"Map", "[", 
         RowBox[{"Flatten", ",", 
          RowBox[{"Gather", "[", 
           RowBox[{"b", ",", 
            RowBox[{
             RowBox[{"SameQ", "[", 
              RowBox[{
               RowBox[{"#1", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"#2", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}]}], "]"}]}], 
         "]"}]}], "]"}]}], ";", 
     RowBox[{"b", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", 
           RowBox[{"Sort", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", 
              RowBox[{"2", ";;", 
               RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}]}], "}"}], "&"}], ",", 
        RowBox[{"Map", "[", 
         RowBox[{"Reverse", ",", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "#", "]"}], ">", "2"}], ",", 
               RowBox[{"Delete", "[", 
                RowBox[{
                 RowBox[{"Append", "[", 
                  RowBox[{"#", ",", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "2"}], 
                "]"}], ",", "#"}], "]"}], "&"}], ",", "b"}], "]"}]}], "]"}]}],
        "]"}]}], ";", 
     RowBox[{"b", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{"b", ",", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"#1", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ">", 
          RowBox[{
           RowBox[{"#2", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "b", "]"}], "\[Equal]", "1"}], ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"b", ",", "1"}], "]"}], ",", "b"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`MemberLN`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MemberLN", "[", 
   RowBox[{
    RowBox[{"L_", "/;", 
     RowBox[{"NestQL", "[", "L", "]"}]}], ",", "x_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "L"}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"c", "=", "0"}], ",", "d", ",", "k", ",", 
      RowBox[{"p", "=", "0"}], ",", 
      RowBox[{"h", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"a", "\[NotEqual]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"c", "+", "1"}]}], ";", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "1"}], ",", 
          RowBox[{"k", "\[LessEqual]", 
           RowBox[{"Length", "[", "a", "]"}]}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{
           RowBox[{"d", "=", 
            RowBox[{"a", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"d", "===", "x"}], ",", 
             RowBox[{"p", "=", 
              RowBox[{"p", "+", "1"}]}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"ListQ", "[", "d", "]"}], ",", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"b", ",", "d"}], "]"}], ",", "Null"}], "]"}]}], 
            "]"}]}]}], "]"}], ";", " ", 
        RowBox[{"h", "=", 
         RowBox[{"Append", "[", 
          RowBox[{"h", ",", 
           RowBox[{"{", 
            RowBox[{"c", ",", "p"}], "}"}]}], "]"}]}], ";", 
        RowBox[{"a", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"b", ",", "1"}], "]"}]}], ";", 
        RowBox[{"b", "=", 
         RowBox[{"{", "}"}]}], ";", 
        RowBox[{"p", "=", "0"}]}]}], "]"}], ";", "h"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SEQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SEQ", "[", 
   RowBox[{"x_", ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"SymbolQ", "[", "y", "]"}]}], ",", 
    RowBox[{"z_", "/;", 
     RowBox[{
      RowBox[{"Head", "[", "z", "]"}], "\[Equal]", "Span"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ToString", "[", "z", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", "c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"ToString", "[", "y", "]"}]}], ",", "p"}], "}"}], ",", " ", 
    RowBox[{
     RowBox[{"c", "=", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"StringSplit", "[", 
        RowBox[{"a", ",", "\"\< ;; \>\""}], "]"}], "]"}]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"Map", "[", 
           RowBox[{"NumberQ", ",", "c"}], "]"}], "]"}], "\[NotEqual]", 
         RowBox[{"{", "True", "}"}]}], " ", "||", 
        RowBox[{
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"Map", "[", 
           RowBox[{"Positive", ",", "c"}], "]"}], "]"}], "\[NotEqual]", 
         RowBox[{"{", "True", "}"}]}]}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"Defer", "[", 
         RowBox[{"SEQ", "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "c", "]"}], ">", "2"}], "&&", 
          RowBox[{
           RowBox[{"c", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "0"}]}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{"Defer", "[", 
           RowBox[{"SEQ", "[", 
            RowBox[{"x", ",", "y", ",", "z"}], "]"}], "]"}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"c", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", 
            RowBox[{"c", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ",", 
           RowBox[{"p", "=", "1"}], ",", 
           RowBox[{"p", "=", "2"}]}], "]"}]}], "]"}]}], "]"}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"y", "=", 
        RowBox[{"c", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"p", "\[Equal]", "1"}], ",", 
         RowBox[{"y", "\[LessEqual]", 
          RowBox[{"c", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{"y", ">=", 
          RowBox[{
           RowBox[{"c", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "-", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"p", "\[Equal]", "1"}], "&&", 
               RowBox[{
                RowBox[{"Length", "[", "c", "]"}], "\[Equal]", "2"}]}], "||", 
              RowBox[{
               RowBox[{"p", "\[Equal]", "2"}], "&&", 
               RowBox[{
                RowBox[{"Length", "[", "c", "]"}], "\[Equal]", "2"}]}]}], ",",
              "0", ",", 
             RowBox[{
              RowBox[{"c", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "-", "1"}]}], "]"}]}]}]}], 
        "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "c", "]"}], "\[Equal]", "2"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"p", "\[Equal]", "1"}], ",", 
           RowBox[{"y", "++"}], ",", 
           RowBox[{"y", "--"}]}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"p", "\[Equal]", "1"}], ",", 
           RowBox[{"y", "+=", 
            RowBox[{"c", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], ",", 
           RowBox[{"y", "-=", 
            RowBox[{"c", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}]}], "]"}]}], "]"}], ",", 
       RowBox[{"b", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"b", ",", "x"}], "]"}]}]}], "]"}], ";", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ToExpression", "[", 
         RowBox[{"\"\<Clear[\>\"", "<>", "d", "<>", "\"\<]\>\""}], "]"}], ",",
         "b"}], "}"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`PrefCond`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PrefCond", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"StringQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"StringPosition", "[", 
        RowBox[{"x", ",", "y"}], "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"a", "\[Equal]", 
       RowBox[{"{", "}"}]}], ",", "\"\<\>\"", ",", 
      RowBox[{"StringTake", "[", 
       RowBox[{"x", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], "]"}]}], 
     "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`AttrOpts`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AttrOpts", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Definition2", "[", "x", "]"}]}], ",", "b", ",", "c", ",", 
      "d"}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"a", "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}]}], ";", " ", 
     RowBox[{"c", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"a", ",", 
        RowBox[{
         RowBox[{"SuffPref", "[", 
          RowBox[{"#", ",", 
           RowBox[{"\"\<Options[\>\"", "<>", 
            RowBox[{"ToString", "[", "x", "]"}], "<>", "\"\<]\>\""}], ",", 
           "1"}], "]"}], "&"}]}], "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"c", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"d", "=", "c"}], ",", 
       RowBox[{"d", "=", 
        RowBox[{
         RowBox[{"StringSplit", "[", 
          RowBox[{
           RowBox[{"c", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "\"\< := \>\""}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], ";", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ToExpression", "[", "d", "]"}], ",", "b"}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`MxToTxt`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MxToTxt", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
       "\"\<mx\>\""}]}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"StringQ", "[", "y", "]"}]}], ",", "z___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ContextMXfile", "[", "x", "]"}]}], ",", "b", ",", "c"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"LoadMyPackage", "[", 
      RowBox[{"x", ",", "a"}], "]"}], ";", " ", 
     RowBox[{"b", "=", 
      RowBox[{"CNames", "[", "a", "]"}]}], ";", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Write", "[", 
           RowBox[{"y", ",", 
            RowBox[{"Definition", "[", "#", "]"}]}], "]"}], ",", 
          RowBox[{"Write", "[", "y", "]"}]}], "}"}], "&"}], ",", "b"}], "]"}],
      ";", " ", 
     RowBox[{"Close", "[", "y", "]"}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"{", "z", "}"}], ",", "\"\<Del\>\""}], "]"}], ",", 
       RowBox[{"RemovePackage", "[", "a", "]"}]}], "]"}], ";", " ", 
     RowBox[{"c", "=", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"{", "z", "}"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"!", 
           RowBox[{"HowAct", "[", "#", "]"}]}], "&&", 
          RowBox[{"!", 
           RowBox[{"SameQ", "[", 
            RowBox[{"#", ",", "\"\<Del\>\""}], "]"}]}]}], "&"}]}], "]"}]}], 
     ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"c", "\[NotEqual]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"ToExpression", "[", 
        RowBox[{
         RowBox[{"ToString", "[", 
          RowBox[{"c", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<=\>\"", "<>", 
         RowBox[{"ToString", "[", "b", "]"}]}], "]"}]}], "]"}], ";"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`MxToTxt1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MxToTxt1", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
       "\"\<mx\>\""}]}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"StringQ", "[", "y", "]"}]}], ",", "z___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ContextFromFile", "[", "x", "]"}]}], ",", "c"}], "}"}], ",", 
    RowBox[{
     RowBox[{"LoadMyPackage", "[", 
      RowBox[{"x", ",", "a"}], "]"}], ";", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"PutAppend", "[", 
         RowBox[{
          RowBox[{"Definition", "[", "#", "]"}], ",", "\"\<OK!\>\"", ",", 
          "y"}], "]"}], "&"}], ",", 
       RowBox[{"CNames", "[", "a", "]"}]}], "]"}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"{", "z", "}"}], ",", "\"\<Del\>\""}], "]"}], ",", 
       RowBox[{"RemovePackage", "[", "a", "]"}]}], "]"}], ";", " ", 
     RowBox[{"c", "=", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"{", "z", "}"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"!", 
           RowBox[{"HowAct", "[", "#", "]"}]}], "&&", 
          RowBox[{"!", 
           RowBox[{"SameQ", "[", 
            RowBox[{"#", ",", "\"\<Del\>\""}], "]"}]}]}], "&"}]}], "]"}]}], 
     ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"c", "\[NotEqual]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"ToExpression", "[", 
        RowBox[{
         RowBox[{"ToString", "[", 
          RowBox[{"c", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<=\>\"", "<>", 
         RowBox[{"ToString", "[", "b", "]"}]}], "]"}]}], "]"}], ";"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`MxToTxt2`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MxToTxt2", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
       "\"\<mx\>\""}]}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"StringQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ContextFromFile", "[", "x", "]"}]}], ",", "c"}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"MemberQ", "[", 
         RowBox[{"$Packages", ",", "a"}], "]"}]}], ",", 
       RowBox[{"c", "=", "78"}]}], "]"}], ";", 
     RowBox[{"Get", "[", "x", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"PutAppend", "[", 
         RowBox[{
          RowBox[{"Definition", "[", "#", "]"}], ",", "\"\<OK!\>\"", ",", 
          "y"}], "]"}], "&"}], ",", 
       RowBox[{"CNames", "[", "a", "]"}]}], "]"}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"c", "===", "78"}], ",", 
       RowBox[{"RemovePackage", "[", "a", "]"}]}], "]"}], ";", 
     "\"\<OK!\>\""}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`MxToMpackage`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MxToMpackage", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"FileExtension", "[", "x", "]"}], "==", "\"\<mx\>\""}]}]}], 
    ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ContextInMxFile", "[", "x", "]"}]}], ",", "b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", "d", ",", "f", ",", "u", ",", "s", ",", 
      "h"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"a", "===", "$Failed"}], ",", "$Failed", ",", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"$Packages", ",", "a"}], "]"}], ",", 
         RowBox[{"h", "=", "74"}], ",", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Get", "[", "x", "]"}], "]"}]}], "]"}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "y", "}"}], "\[Equal]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"f", "=", 
          RowBox[{
           RowBox[{"FileBaseName", "[", "x", "]"}], "<>", "\"\<.m\>\""}]}], 
         ",", 
         RowBox[{"f", "=", 
          RowBox[{
           RowBox[{"FileBaseName", "[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"StringQ", "[", "y", "]"}], ",", "y", ",", "x"}], "]"}],
             "]"}], "<>", "\"\<.m\>\""}]}]}], "]"}], ";", 
       RowBox[{"b", "=", 
        RowBox[{"CNames", "[", "a", "]"}]}], ";", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"SameQ", "[", 
             RowBox[{
              RowBox[{"Set", "[", 
               RowBox[{"u", ",", 
                RowBox[{"ToString", "[", 
                 RowBox[{"ToExpression", "[", 
                  RowBox[{"#", "<>", "\"\<::usage\>\""}], "]"}], "]"}]}], 
               "]"}], ",", 
              RowBox[{"#", "<>", "\"\<::usage\>\""}]}], "]"}], ",", "Null", 
            ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"c", ",", 
              RowBox[{"#", "<>", "\"\<::usage = \>\"", "<>", "u"}]}], "]"}]}],
            "]"}], "&"}], ",", "b"}], "]"}], ";", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"c", "==", 
          RowBox[{"{", "}"}]}], ",", "$Failed", ",", " ", 
         RowBox[{
          RowBox[{"c", "=", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\"\<(*\>\"", "<>", "#", "<>", "\"\<*)\>\""}], ",", 
                 "\"\<(**)\>\""}], "}"}], "&"}], ",", "c"}], "]"}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"d", "=", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                 "\"\<(*Begin[\\\"`\>\"", " ", "<>", "#", "<>", 
                  "\"\<`\\\"]*)\>\""}], ",", 
                 RowBox[{"Map", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"\"\<(*\>\"", "<>", "#1", "<>", "\"\<;*)\>\""}], 
                    "&"}], ",", 
                   RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"PureDefinition", "[", "#", "]"}], "}"}], "]"}]}],
                   "]"}], ",", 
                 RowBox[{
                 "\"\<(*\>\"", "<>", "\"\<SetAttributes[\>\"", "<>", "#", 
                  "<>", "\"\<, Attributes[\>\"", "<>", "#", "<>", 
                  "\"\<]]\>\"", "<>", "\"\<*)\>\""}], ",", 
                 "\"\<(*End[]*)\>\"", ",", "\"\<(**)\>\""}], "}"}], "&"}], 
              ",", "b"}], "]"}], "]"}]}], ";", " ", 
          RowBox[{"s", "=", 
           RowBox[{"OpenWrite", "[", "f", "]"}]}], ";", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"WriteLine", "[", 
              RowBox[{"s", ",", "#"}], "]"}], "&"}], ",", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "\"\<(* ::Package:: *)\>\"", ",", "\"\<(**)\>\"", ",", 
                "\"\<(* ::Input:: *)\>\"", ",", "\"\<(**)\>\"", ",", 
                RowBox[{
                "\"\<(*BeginPackage[\\\"\>\"", " ", "<>", "a", "<>", 
                 "\"\<\\\"]*)\>\""}], ",", "\"\<(**)\>\""}], "}"}], ",", "c", 
              ",", "d", ",", 
              RowBox[{"{", "\"\<(*EndPackage[]*)\>\"", "}"}]}], "]"}]}], 
           "]"}], ";", " ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"SameQ", "[", 
              RowBox[{"h", ",", "74"}], "]"}]}], ",", 
            RowBox[{"RemovePackage", "[", "a", "]"}], ",", "Null"}], "]"}], 
          ";", " ", 
          RowBox[{"Close", "[", "s", "]"}]}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`MxFileToMfile`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MxFileToMfile", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
       "\"\<mx\>\""}]}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{"StringQ", "[", "y", "]"}], "&&", 
      RowBox[{
       RowBox[{"FileExtension", "[", "y", "]"}], "\[Equal]", 
       "\"\<m\>\""}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ContextFromFile", "[", "x", "]"}]}], ",", "b", ",", "c", ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Get", "[", "x", "]"}], ";", 
     RowBox[{"b", "=", 
      RowBox[{"CNames", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"WriteString", "[", 
      RowBox[{
      "y", ",", "\"\<(* ::Package:: *)\>\"", ",", "\"\<\\n\>\"", ",", 
       "\"\<(* ::Input:: *)\>\"", ",", "\"\<\\n\>\"", ",", 
       RowBox[{
       "\"\<(*BeginPackage[\\\"\>\"", "<>", "a", "<>", "\"\<\\\"]*)\>\""}], 
       ",", "\"\<\\n\>\""}], "]"}], ";", " ", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "b", "]"}]}], ",", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{
          RowBox[{"b", "[", 
           RowBox[{"[", "k", "]"}], "]"}], "<>", "\"\<::usage\>\""}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"WriteString", "[", 
         RowBox[{"y", ",", 
          RowBox[{"\"\<(*\>\"", "<>", "c", "<>", "\"\< = \>\"", "<>", 
           RowBox[{"ToString1", "[", 
            RowBox[{"ToExpression", "[", 
             RowBox[{"a", "<>", "c"}], "]"}], "]"}]}], ",", "\"\<*)\>\"", 
          ",", "\"\<\\n\>\""}], "]"}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", " ", 
     RowBox[{"k", "=", "1"}], ";", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "b", "]"}]}], ",", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"b", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"WriteString", "[", 
         RowBox[{"y", ",", 
          RowBox[{
          "\"\<(*Begin[\\\"`\>\"", "<>", "c", "<>", "\"\<`\\\"]*)\>\""}], 
          ",", "\"\<\\n\>\"", ",", 
          RowBox[{"\"\<(*\>\"", "<>", 
           RowBox[{"PureDefinition", "[", 
            RowBox[{"a", "<>", "c"}], "]"}], "<>", "\"\<*)\>\""}], ",", 
          "\"\<\\n\>\"", ",", "\"\<(*End[]*)\>\"", ",", "\"\<\\n\>\""}], 
         "]"}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", " ", 
     RowBox[{"WriteString", "[", 
      RowBox[{"y", ",", "\"\<(*EndPackage[]*)\>\"", ",", "\"\<\\n\>\""}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Clear1", "[", 
           RowBox[{"2", ",", 
            RowBox[{"a", "<>", "#", "<>", "\"\<::usage\>\""}]}], "]"}], ",", 
          RowBox[{"Clear1", "[", 
           RowBox[{"2", ",", 
            RowBox[{"a", "<>", "#"}]}], "]"}]}], "}"}], "&"}], ",", "b"}], 
      "]"}], ";", " ", 
     RowBox[{"$ContextPath", "=", 
      RowBox[{"MinusList", "[", 
       RowBox[{"$ContextPath", ",", 
        RowBox[{"{", "a", "}"}]}], "]"}]}], ";", " ", 
     RowBox[{"Close", "[", "y", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`MfileToMx`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MfileToMx", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
     RowBox[{
      RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", "\"\<m\>\""}]}]}],
    "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ContextFromFile", "[", "x", "]"}]}], ",", "b", ",", "d", ",", 
      RowBox[{"c", "=", 
       RowBox[{"ToString1", "[", 
        RowBox[{"x", "<>", "\"\<x\>\""}], "]"}]}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"$ContextPath", ",", "a"}], "]"}], ",", 
      RowBox[{
       RowBox[{"ToExpression", "[", 
        RowBox[{"\"\<DumpSave[\>\"", "<>", "c", "<>", "\"\<,\>\"", "<>", 
         RowBox[{"ToString1", "[", "a", "]"}], "<>", "\"\<]\>\""}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"x", "<>", "\"\<x\>\""}]}], ",", 
      RowBox[{
       RowBox[{"b", "=", 
        RowBox[{"ReadList", "[", 
         RowBox[{"x", ",", "String"}], "]"}]}], ";", " ", 
       RowBox[{"d", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"StringReplace", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\"\<(*\>\"", "\[Rule]", "\"\<\>\""}], ",", 
                 RowBox[{"\"\<*)\>\"", "\[Rule]", "\"\<\>\""}]}], "}"}]}], 
              "]"}], "&"}], ",", 
            RowBox[{"b", "[", 
             RowBox[{"[", 
              RowBox[{"3", ";;", 
               RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"#", "\[NotEqual]", "\"\<\>\""}], "&"}]}], "]"}]}], ";", 
       RowBox[{"Quiet", "[", 
        RowBox[{"ToExpression", "[", "d", "]"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ToExpression", "[", 
        RowBox[{"\"\<DumpSave[\>\"", "<>", "c", "<>", "\"\<,\>\"", "<>", 
         RowBox[{"ToString1", "[", "a", "]"}], "<>", "\"\<]\>\""}], "]"}], 
       ";", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Clear1", "[", 
           RowBox[{"2", ",", 
            RowBox[{"a", "<>", "#"}]}], "]"}], "&"}], ",", 
         RowBox[{"CNames", "[", "a", "]"}]}], "]"}], ";", " ", 
       RowBox[{"$ContextPath", "=", 
        RowBox[{"MinusList", "[", 
         RowBox[{"$ContextPath", ",", 
          RowBox[{"{", "a", "}"}]}], "]"}]}], ";", 
       RowBox[{"x", "<>", "\"\<x\>\""}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Globals`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Globals", "[", 
   RowBox[{"P_", "/;", 
    RowBox[{"ProcBMQ", "[", "P", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", "p", ",", 
      RowBox[{"g", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"ToString1", "[", 
        RowBox[{"DefFunc", "[", "P", "]"}], "]"}]}], ",", 
      RowBox[{"a", "=", 
       RowBox[{"Sort", "[", 
        RowBox[{"Locals1", "[", "P", "]"}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"P", "===", "ExprOfStr"}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"{", "}"}], "]"}], ",", 
       RowBox[{"c", "=", 
        RowBox[{
         RowBox[{"StringPosition", "[", 
          RowBox[{"b", ",", 
           RowBox[{"{", 
            RowBox[{"\"\< := \>\"", ",", "\"\< = \>\""}], "}"}]}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"2", ";;", 
           RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "c", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"p", "=", 
         RowBox[{"c", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", " ", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"d", ",", 
          RowBox[{"ExprOfStr", "[", 
           RowBox[{"b", ",", 
            RowBox[{"p", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\< \>\"", ",", "\"\<,\>\"", ",", "\"\<\\\"\>\"", ",", 
              "\"\<!\>\"", ",", "\"\<{\>\""}], "}"}]}], "]"}]}], "]"}]}]}], 
      "]"}], ";", " ", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "d", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"p", "=", 
         RowBox[{"d", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"p", "\[NotEqual]", "\"\<$Failed\>\""}], "&&", 
           RowBox[{"p", "\[NotEqual]", "\"\< \>\""}]}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"g", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"StringFreeQ", "[", 
               RowBox[{"p", ",", 
                RowBox[{"{", 
                 RowBox[{"\"\<{\>\"", ",", "\"\<}\>\""}], "}"}]}], "]"}], ",",
               "p", ",", 
              RowBox[{"StringSplit", "[", 
               RowBox[{"StringReplace", "[", 
                RowBox[{"p", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\"\<{\>\"", "\[Rule]", "\"\<\>\""}], ",", 
                   RowBox[{"\"\<}\>\"", "\[Rule]", "\"\<\>\""}]}], "}"}]}], 
                "]"}], "]"}], ",", "\"\<,\>\""}], "]"}]}], "]"}], ",", 
          "Null"}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"g", "=", 
      RowBox[{"Flatten", "[", "g", "]"}]}], ";", 
     RowBox[{"d", "=", 
      RowBox[{"{", "}"}]}], ";", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "g", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"p", "=", 
         RowBox[{"g", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"d", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"StringFreeQ", "[", 
             RowBox[{"p", ",", 
              RowBox[{"{", 
               RowBox[{"\"\<[\>\"", ",", "\"\<]\>\""}], "}"}]}], "]"}], ",", 
            "p", ",", 
            RowBox[{"StringTake", "[", 
             RowBox[{"p", ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Flatten", "[", 
                   RowBox[{"StringPosition", "[", 
                    RowBox[{"p", ",", "\"\<[\>\""}], "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
             "]"}]}], "]"}]}], "]"}]}]}], "]"}], ";", 
     RowBox[{"g", "=", "d"}], ";", "\[IndentingNewLine]", 
     RowBox[{"d", "=", 
      RowBox[{"{", "}"}]}], ";", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "g", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"p", "=", 
         RowBox[{"g", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", " ", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"d", ",", 
          RowBox[{"StringReplace", "[", 
           RowBox[{"p", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\"\<,\>\"", "\[Rule]", "\"\<\>\""}], ",", 
              RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}]}], "}"}]}], 
           "]"}]}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"d", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"StringTrim", ",", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"Flatten", "[", "d", "]"}], "]"}]}], "]"}], "]"}]}], ";", 
     " ", 
     RowBox[{"Select", "[", 
      RowBox[{"d", ",", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"MemberQ", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"ListListQ", "[", "a", "]"}], ",", 
             RowBox[{"a", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "a"}], "]"}], ",", "#"}], 
          "]"}]}], "&"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Globals1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Globals1", "[", 
   RowBox[{"P_", "/;", 
    RowBox[{"ProcQ", "[", "P", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"SubProcs", "[", "P", "]"}]}], ",", "b", ",", "c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"b", ",", "c"}], "}"}], "=", 
      RowBox[{"Map", "[", 
       RowBox[{"Flatten", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{"Locals1", ",", 
            RowBox[{"a", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"Map", "[", 
           RowBox[{"Globals", ",", 
            RowBox[{"a", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}]}], "]"}]}], ";",
      " ", "\[IndentingNewLine]", 
     RowBox[{"MinusList", "[", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "[", "c", "]"}], ",", "b"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Globals2`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Globals2", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"ProcQ", "[", "x", "]"}], "||", 
     RowBox[{"ModuleQ", "[", "x", "]"}], "||", 
     RowBox[{"BlockQ", "[", "x", "]"}]}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"ExtrNames", "[", "x", "]"}], "[", 
   RowBox[{"[", "3", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`VarsInBlockMod`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"VarsInBlockMod", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"BlockQ", "[", "x", "]"}], "||", 
     RowBox[{"ModuleQ", "[", "x", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Locals1", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Globals", "[", "x", "]"}]}], ",", "c", ",", "d"}], "}"}], ",", 
    RowBox[{
     RowBox[{"c", "=", 
      RowBox[{"ExtrVarsOfStr", "[", 
       RowBox[{
        RowBox[{"StringReplace", "[", 
         RowBox[{
          RowBox[{"PureDefinition", "[", "x", "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"HeadPF", "[", "x", "]"}], "<>", "\"\< := \>\""}], "->", 
           "\"\<\>\""}], ",", "1"}], "]"}], ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"c", ",", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"Quiet", "[", 
           RowBox[{"Check", "[", 
            RowBox[{
             RowBox[{"SystemQ", "[", "#", "]"}], ",", "True"}], "]"}], 
           "]"}]}], "&"}]}], "]"}]}], ";", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"d", "=", 
        RowBox[{"Args", "[", 
         RowBox[{"x", ",", "90"}], "]"}]}], ",", "a", ",", "b", ",", 
       RowBox[{"MinusList", "[", 
        RowBox[{"c", ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "d"}], "}"}], "]"}]}], "]"}]}], 
      "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`GlobalToLocal`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GlobalToLocal", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"QBlockMod", "[", "x", "]"}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"LocalsGlobals1", "[", "x", "]"}]}], ",", "b", ",", "c"}], 
     "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Intersection", "[", 
         RowBox[{
          RowBox[{"a", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"a", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "\[Equal]", 
        RowBox[{"a", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], "||", 
       RowBox[{
        RowBox[{"a", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", 
        RowBox[{"{", "}"}]}]}], ",", "x", ",", 
      RowBox[{
       RowBox[{"b", "=", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"a", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{"MinusList", "[", 
           RowBox[{
            RowBox[{"a", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", 
            RowBox[{"a", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "]"}]}], ";", 
       RowBox[{"c", "=", 
        RowBox[{"\"\<$$$\>\"", "<>", 
         RowBox[{"StringReplace", "[", 
          RowBox[{
           RowBox[{"PureDefinition", "[", "x", "]"}], ",", 
           RowBox[{
            RowBox[{"ToString", "[", 
             RowBox[{"a", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "\[Rule]", 
            RowBox[{"ToString", "[", "b", "]"}]}], ",", "1"}], "]"}]}]}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", "y", "}"}], "\[NotEqual]", 
           RowBox[{"{", "}"}]}], "&&", 
          RowBox[{"!", 
           RowBox[{"HowAct", "[", "y", "]"}]}]}], ",", 
         RowBox[{"y", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"a", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"a", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}]}], "]"}], ";", " ", 
       RowBox[{"ToExpression", "[", "c", "]"}], ";", " ", 
       RowBox[{"Symbol", "[", 
        RowBox[{"\"\<$$$\>\"", "<>", 
         RowBox[{"ToString", "[", "x", "]"}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`GlobalToLocalM`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GlobalToLocalM", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"QBlockMod", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"d", ",", 
      RowBox[{"h", "=", "\"\<$$$\>\""}], ",", 
      RowBox[{"k", "=", "1"}], ",", "n", ",", 
      RowBox[{"p", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Attributes", "[", "x", "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"Options", "[", "x", "]"}]}], ",", 
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}]}]}], "}"}], 
    ",", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{
        RowBox[{"d", "=", 
         RowBox[{"a", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", 
        RowBox[{"n", "=", 
         RowBox[{"h", "<>", 
          RowBox[{"ToString", "[", "x", "]"}]}]}], ";", " ", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"h", "<>", "d"}], "]"}], ";", " ", 
        RowBox[{"GlobalToLocal", "[", 
         RowBox[{"Symbol", "[", "n", "]"}], "]"}], ";", " ", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"p", ",", 
          RowBox[{"PureDefinition", "[", 
           RowBox[{"\"\<$$$\>\"", "<>", "n"}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"\"\<ClearAll[\>\"", "<>", "n", "<>", "\"\<]\>\""}], "]"}], 
        ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", " ", 
     RowBox[{"ClearAllAttributes", "[", "x", "]"}], ";", 
     RowBox[{"ClearAll", "[", "x", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringReplace", "[", 
          RowBox[{"#", ",", 
           RowBox[{"\"\<$$$$$$\>\"", "->", "\"\<\>\""}], ",", "1"}], "]"}], 
         "&"}], ",", "p"}], "]"}], "]"}], ";", " ", 
     RowBox[{"SetAttributes", "[", 
      RowBox[{"x", ",", "b"}], "]"}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"c", "\[NotEqual]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"SetOptions", "[", 
        RowBox[{"x", ",", "c"}], "]"}]}], "]"}], ";"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`LocalsGlobals`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LocalsGlobals", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ProcQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Locals", "[", "x", "]"}], ",", 
    RowBox[{"Globals1", "[", "x", "]"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`LocalsGlobals1`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LocalsGlobals1", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"QBlockMod", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"c", "=", "\"\<\>\""}], ",", "d", ",", "j", ",", 
      RowBox[{"h", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", "p", ",", "G", ",", "L", ",", 
      RowBox[{"a", "=", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"HeadPF", "[", "x", "]"}], "}"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"StringReplace", "[", 
       RowBox[{"a", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"b", "<>", "\"\< := Module[\>\""}], "\[Rule]", 
           "\"\<\>\""}], ",", 
          RowBox[{
           RowBox[{"b", "<>", "\"\< := Block[\>\""}], "->", "\"\<\>\""}]}], 
         "}"}], ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"StringLength", "[", "b", "]"}]}], ",", 
       RowBox[{
        RowBox[{"d", "=", 
         RowBox[{"StringTake", "[", 
          RowBox[{"b", ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "k"}], "}"}]}], "]"}]}], ";", 
        RowBox[{"c", "=", 
         RowBox[{"c", "<>", "d"}]}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"StringCount", "[", 
            RowBox[{"c", ",", "\"\<{\>\""}], "]"}], "\[Equal]", 
           RowBox[{"StringCount", "[", 
            RowBox[{"c", ",", "\"\<}\>\""}], "]"}]}], ",", 
          RowBox[{"Break", "[", "]"}]}], "]"}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"StringReplace", "[", 
       RowBox[{"b", ",", 
        RowBox[{
         RowBox[{"c", "<>", "\"\<,\>\""}], "->", "\"\<\>\""}], ",", "1"}], 
       "]"}]}], ";", " ", 
     RowBox[{"L", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"c", "\[Equal]", "\"\<{}\>\""}], ",", 
        RowBox[{"{", "}"}], ",", 
        RowBox[{"StrToList", "[", 
         RowBox[{"StringTake", "[", 
          RowBox[{"c", ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", 
             RowBox[{"-", "2"}]}], "}"}]}], "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", " ", 
     RowBox[{"d", "=", 
      RowBox[{"StringPosition", "[", 
       RowBox[{"b", ",", 
        RowBox[{"{", 
         RowBox[{"\"\< := \>\"", ",", "\"\< = \>\""}], "}"}]}], "]"}]}], ";", 
     RowBox[{"d", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], "&"}], ")"}], "/@", 
       "d"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "d", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"d", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", 
        RowBox[{"p", "=", "\"\<\>\""}], ";", " ", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "c"}], ",", 
          RowBox[{"j", "\[GreaterEqual]", "1"}], ",", 
          RowBox[{"j", "--"}], ",", 
          RowBox[{
           RowBox[{"p", "=", 
            RowBox[{
             RowBox[{"StringTake", "[", 
              RowBox[{"b", ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "j"}], "}"}]}], "]"}], "<>", "p"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"!", 
               RowBox[{
                RowBox[{"Quiet", "[", 
                 RowBox[{"ToExpression", "[", "p", "]"}], "]"}], "===", 
                "$Failed"}]}], "&&", 
              RowBox[{
               RowBox[{"StringTake", "[", 
                RowBox[{"b", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"j", "-", "1"}], ",", 
                   RowBox[{"j", "-", "1"}]}], "}"}]}], "]"}], "\[Equal]", 
               "\"\< \>\""}]}], ",", 
             RowBox[{
              RowBox[{"AppendTo", "[", 
               RowBox[{"h", ",", "p"}], "]"}], ";", 
              RowBox[{"Break", "[", "]"}]}]}], "]"}]}]}], "]"}]}]}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"G", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"StringFreeQ", "[", 
             RowBox[{"#1", ",", "\"\<{\>\""}], "]"}], ",", "#1", ",", 
            RowBox[{"StrToList", "[", 
             RowBox[{"StringTake", "[", 
              RowBox[{"#1", ",", 
               RowBox[{"{", 
                RowBox[{"2", ",", 
                 RowBox[{"-", "2"}]}], "}"}]}], "]"}], "]"}]}], "]"}], "&"}], 
         ")"}], "/@", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"StringTake", "[", 
            RowBox[{"#1", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{
                RowBox[{"Quiet", "[", 
                 RowBox[{"Check", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"#1", ",", "\"\<[\>\""}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "0"}], "]"}], "]"}], 
                "-", "1"}]}], "}"}]}], "]"}], "&"}], ")"}], "/@", "h"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"StringFreeQ", "[", 
            RowBox[{"#1", ",", "\"\< = \>\""}], "]"}], ",", "#1", ",", 
           RowBox[{"StringTake", "[", 
            RowBox[{"#1", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{"StringPosition", "[", 
                   RowBox[{"#1", ",", "\"\< = \>\""}], "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
            "]"}]}], "]"}], "&"}], ")"}], "/@", "L"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"d", "=", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"StringSplit", "[", 
            RowBox[{"#1", ",", "\"\<, \>\""}], "]"}], "&"}], ")"}], "/@", 
         RowBox[{"MinusList", "[", 
          RowBox[{"G", ",", "b"}], "]"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"d", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"d", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"!", 
           RowBox[{"Quiet", "[", 
            RowBox[{"SystemQ", "[", "#1", "]"}], "]"}]}], "&&", 
          RowBox[{"!", 
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{
               "\"\<\\\\\>\"", ",", "\"\<#\>\"", ",", "\"\<\\\"\>\"", ",", 
                "\"\<\>\"", ",", "\"\<+\>\"", ",", "\"\<-\>\"", ",", 
                RowBox[{"ToString", "/@", 
                 RowBox[{"Range", "[", 
                  RowBox[{"0", ",", "9"}], "]"}]}]}], "}"}], "]"}], ",", 
             RowBox[{"StringTake", "[", 
              RowBox[{"#1", ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], "]"}]}]}], "&"}]}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{"b", ",", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"ToString", "/@", 
              RowBox[{"Range", "[", 
               RowBox[{"0", ",", "9"}], "]"}]}], ",", 
             RowBox[{"StringTake", "[", 
              RowBox[{"#1", ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], "]"}]}], "&"}]}], 
        "]"}], ",", "L", ",", 
       RowBox[{"MinusList", "[", 
        RowBox[{"d", ",", "b"}], "]"}]}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`LocalsGlobalsM`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LocalsGlobalsM", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"QBlockMod", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"b", "=", "\"\<$$90$\>\""}], ",", "c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}]}]}], "}"}], 
    ",", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"b", "<>", 
          RowBox[{"ToString", "[", "x", "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"b", "<>", 
          RowBox[{"a", "[", 
           RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ";", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"d", ",", 
          RowBox[{"LocalsGlobals1", "[", "c", "]"}]}], "]"}], ";", " ", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"\"\<Clear[\>\"", "<>", "c", "<>", "\"\<]\>\""}], "]"}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "d", "]"}], "\[Equal]", "1"}], ",", 
       RowBox[{"d", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "d"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ArgsTypes`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ArgsTypes", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"CompileFuncQ", "[", "x", "]"}], "||", 
     RowBox[{"BlockFuncModQ", "[", "x", "]"}], "||", 
     RowBox[{"PureFuncQ", "[", "x", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Args", "[", "x", "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"CompileFuncQ", "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{"Mapp", "[", 
         RowBox[{"StringSplit", ",", 
          RowBox[{"Map", "[", 
           RowBox[{"ToString", ",", "a"}], "]"}], ",", "\"\<_\>\""}], "]"}]}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "1"}], ",", 
         RowBox[{"a", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "a"}], "]"}]}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"PureFuncQ", "[", "x", "]"}], ",", 
        RowBox[{
         RowBox[{"a", "=", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#", ",", "\"\<Arbitrary\>\""}], "}"}], "&"}], ",", 
            "a"}], "]"}]}], ";", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "1"}], ",", 
           RowBox[{"a", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "a"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"SetAttributes", "[", 
          RowBox[{"ToString", ",", "Listable"}], "]"}], ";", 
         RowBox[{"a", "=", 
          RowBox[{"Map", "[", 
           RowBox[{"ToString", ",", "a"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"ClearAttributes", "[", 
          RowBox[{"ToString", ",", "Listable"}], "]"}], ";", 
         RowBox[{"a", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"NestListQ", "[", "a", "]"}], ",", "a", ",", 
            RowBox[{"{", "a", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{"k", ",", 
           RowBox[{"k", "\[LessEqual]", 
            RowBox[{"Length", "[", "a", "]"}]}], ",", 
           RowBox[{"k", "++"}], ",", 
           RowBox[{"c", "=", 
            RowBox[{"Append", "[", 
             RowBox[{"c", ",", 
              RowBox[{"Mapp", "[", 
               RowBox[{"StringSplit", ",", 
                RowBox[{"Mapp", "[", 
                 RowBox[{"StringSplit", ",", 
                  RowBox[{"a", "[", 
                   RowBox[{"[", "k", "]"}], "]"}], ",", "\"\<_ /; \>\""}], 
                 "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"\"\<___\>\"", ",", "\"\<__\>\"", ",", "\"\<_\>\""}],
                  "}"}]}], "]"}]}], "]"}]}]}], "]"}], ";", "c", ";", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"k", "=", "1"}], ",", 
           RowBox[{"k", "\[LessEqual]", 
            RowBox[{"Length", "[", "c", "]"}]}], ",", 
           RowBox[{"k", "++"}], ",", 
           RowBox[{"d", "=", 
            RowBox[{"Append", "[", 
             RowBox[{"d", ",", 
              RowBox[{"Map", "[", 
               RowBox[{"Flatten", ",", 
                RowBox[{"c", "[", 
                 RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], "]"}]}]}], "]"}], 
         ";", 
         RowBox[{"c", "=", 
          RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"k", "=", "1"}], ",", 
           RowBox[{"k", "\[LessEqual]", 
            RowBox[{"Length", "[", "d", "]"}]}], ",", 
           RowBox[{"k", "++"}], ",", 
           RowBox[{"c", "=", 
            RowBox[{"Append", "[", 
             RowBox[{"c", ",", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "1"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    "\"\<Arbitrary\>\""}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"StringReplace", "[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"\"\<\\\\\>\"", "->", "\"\<\>\""}]}], "]"}]}], 
                    "}"}]}], "]"}], "&"}], ",", 
                RowBox[{"d", "[", 
                 RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], "]"}]}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"c", "=", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "1"}], ",", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "#"}], "]"}], "&"}], ",",
             "c"}], "]"}]}], ";", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "c", "]"}], "\[Equal]", "1"}], ",", 
           RowBox[{"c", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "c"}], "]"}]}]}], "]"}]}], 
     "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`FormalArgs`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FormalArgs", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"b", "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"Part", "[", 
         RowBox[{"x", ",", "1"}], "]"}], "]"}]}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"CallQ", "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{"ToString", "[", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"b", "===", 
            RowBox[{"-", "1"}]}], ",", 
           RowBox[{
            RowBox[{"Part", "[", 
             RowBox[{"x", ",", "1"}], "]"}], "*", "x"}], ",", "x"}], "]"}], 
         "]"}]}], ";", 
       RowBox[{"ToExpression", "[", 
        RowBox[{"\"\<{\>\"", "<>", 
         RowBox[{"StringTake", "[", 
          RowBox[{"a", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{"StringPosition", "[", 
                 RowBox[{"a", ",", "\"\<[\>\""}], "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], ",", 
             RowBox[{"-", "2"}]}], "}"}]}], "]"}], "<>", "\"\<}\>\""}], 
        "]"}]}], ",", "$Failed"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Try`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Try", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", "y_"}], "]"}], ":=", 
  RowBox[{"Quiet", "[", 
   RowBox[{"Check", "[", 
    RowBox[{
     RowBox[{"ToExpression", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "$MessageList"}], "}"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Riffle1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Riffle1", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ListListQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", "=", 
      RowBox[{"{", "}"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"a", ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "&"}], ",", "x"}], "]"}]}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{"Length", "[", 
          RowBox[{"x", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ";", 
     "a"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ActBFMuserQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ActBFMuserQ", "[", 
   RowBox[{"x___", "/;", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", "x", "}"}], "\[Equal]", 
       RowBox[{"{", "}"}]}], ",", "True", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"{", "x", "}"}], "]"}], "\[Equal]", "1"}], "&&", 
         RowBox[{"!", 
          RowBox[{"HowAct", "[", "x", "]"}]}]}], ",", "True", ",", "False"}], 
       "]"}]}], "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"c", "=", "1"}], ",", "d", ",", "h", ",", 
      RowBox[{"a", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Names", "[", "\"\<`*\>\"", "]"}], ",", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"UnevaluatedQ", "[", 
            RowBox[{"Definition2", ",", "#"}], "]"}]}], "&"}]}], "]"}]}]}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{"c", ",", 
       RowBox[{"c", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{"c", "++"}], ",", 
       RowBox[{
        RowBox[{"h", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"ProcFuncTypeQ", "[", 
           RowBox[{"a", "[", 
            RowBox[{"[", "c", "]"}], "]"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"h", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"b", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"a", "[", 
               RowBox[{"[", "c", "]"}], "]"}], ",", 
              RowBox[{"h", "[", 
               RowBox[{"[", 
                RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
          "Null"}], "]"}]}]}], "]"}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"b", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", "False", ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", "x", "}"}], "\[NotEqual]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"x", "=", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "b", "]"}], "\[Equal]", "1"}], ",", 
             RowBox[{"b", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "b"}], "]"}]}]}], "]"}], 
        ";", " ", "True"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`CNames`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CNames", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"ContextQ", "[", "x", "]"}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Names", "[", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"x", ",", "\"\<*\>\""}], "]"}], "]"}]}], ",", "b"}], "}"}], 
    ",", " ", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"a", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Quiet", "[", 
           RowBox[{"ToString", "[", 
            RowBox[{"Definition", "[", 
             RowBox[{"ToString", "[", "#1", "]"}], "]"}], "]"}], "]"}], 
          "\[NotEqual]", "\"\<Null\>\""}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", "y", "}"}], "\[NotEqual]", 
         RowBox[{"{", "}"}]}], "&&", 
        RowBox[{
         RowBox[{"PureDefinition", "[", "y", "]"}], "===", "$Failed"}]}], ",", 
       RowBox[{"y", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"StringTrim", "[", 
            RowBox[{"#", ",", "x"}], "]"}], "&"}], ",", 
          RowBox[{"Sort", "[", 
           RowBox[{"DeleteDuplicates", "[", 
            RowBox[{"Select", "[", 
             RowBox[{"a", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Quiet", "[", 
                 RowBox[{"Check", "[", 
                  RowBox[{
                   RowBox[{"PureDefinition", "[", "#", "]"}], ",", 
                   "$Failed"}], "]"}], "]"}], "===", "$Failed"}], "&"}]}], 
             "]"}], "]"}], "]"}]}], "]"}]}]}], "]"}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"StringTrim", "[", 
         RowBox[{"#", ",", "x"}], "]"}], "&"}], ",", 
       RowBox[{"Select", "[", 
        RowBox[{"b", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Quiet", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Attributes", "[", "#", "]"}], "\[NotEqual]", 
              RowBox[{"{", "Temporary", "}"}]}], "&&", 
             RowBox[{"ToString", "[", 
              RowBox[{"Definition", "[", "#", "]"}], "]"}]}], "]"}], 
           "\[NotEqual]", "\"\<Null\>\""}], "&"}]}], "]"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`IsFileOpen`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IsFileOpen", "[", 
   RowBox[{
    RowBox[{"F_", "/;", 
     RowBox[{"FileExistsQ", "[", "F", "]"}]}], ",", "h___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", "=", 
      RowBox[{"OpenFiles", "[", "F", "]"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"a", "\[Equal]", 
       RowBox[{"{", "}"}]}], ",", "False", ",", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", "h", "}"}], "\[NotEqual]", 
           RowBox[{"{", "}"}]}], "&&", 
          RowBox[{"!", 
           RowBox[{"HowAct", "[", "h", "]"}]}]}], ",", 
         RowBox[{"h", "=", "a"}], ",", "Null"}], "]"}], ";", "True"}]}], 
     "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`IsPackageQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IsPackageQ", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
       "\"\<mx\>\""}]}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ReadFullFile", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", "\"\<CONT\>\""}], ",", 
      RowBox[{"c", "=", "\"\<ENDCONT\>\""}], ",", "d", ",", 
      RowBox[{"g", "=", "$Packages"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"StringContainsQ", "[", 
        RowBox[{"a", ",", 
         RowBox[{"\"\<CONT\>\"", "~~", "__", "~~", "\"\<ENDCONT\>\""}]}], 
        "]"}]}], ",", "$Failed", ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"d", "=", 
        RowBox[{"StringPosition", "[", 
         RowBox[{"a", ",", 
          RowBox[{"{", 
           RowBox[{"b", ",", "c"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"d", "=", 
        RowBox[{"StringTake", "[", 
         RowBox[{"a", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"d", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"d", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], "]"}]}], 
       ";", " ", 
       RowBox[{"d", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"!", 
                RowBox[{"StringFreeQ", "[", 
                 RowBox[{"d", ",", "#"}], "]"}]}], ",", "#", ",", "Null"}], 
              "]"}], "&"}], ",", "g"}], "]"}], ",", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"SameQ", "[", 
             RowBox[{"#", ",", "Null"}], "]"}]}], "&"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", "y", "}"}], "\[NotEqual]", 
           RowBox[{"{", "}"}]}], "&&", 
          RowBox[{"!", 
           RowBox[{"HowAct", "[", "y", "]"}]}]}], ",", 
         RowBox[{"y", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"d", "\[Equal]", 
             RowBox[{"{", "}"}]}], ",", 
            RowBox[{"{", "}"}], ",", 
            RowBox[{"d", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ",", "Null"}], "]"}], 
       ";", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"d", "\[NotEqual]", 
          RowBox[{"{", "}"}]}], ",", "True", ",", "False"}], "]"}]}]}], 
     "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ReplaceOut`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReplaceOut", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"PosIntQ", "[", "x", "]"}], "||", 
      RowBox[{"PosIntListQ", "[", "x", "]"}]}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", "x", "}"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", "y", "}"}], "]"}]}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"b", "\[NotEqual]", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "a", "]"}], "\[NotEqual]", 
          RowBox[{"Length", "[", "b", "]"}]}], ",", 
         RowBox[{"Defer", "[", 
          RowBox[{"ReplaceOut", "[", 
           RowBox[{"x", ",", "y"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Unprotect", "[", "Out", "]"}], ";", 
          RowBox[{"For", "[", 
           RowBox[{"k", ",", 
            RowBox[{"k", "\[LessEqual]", 
             RowBox[{"Length", "[", "a", "]"}]}], ",", 
            RowBox[{"k", "++"}], ",", 
            RowBox[{
             RowBox[{"Out", "[", 
              RowBox[{"a", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "]"}], "=", 
             RowBox[{"b", "[", 
              RowBox[{"[", "k", "]"}], "]"}]}]}], "]"}], ";", " ", 
          RowBox[{"Protect", "[", "Out", "]"}]}]}], "]"}], ";"}], ",", 
      RowBox[{"ClearOut", "[", "x", "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ExprQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExprQ", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Quiet", "[", 
      RowBox[{"ToExpression", "[", "x", "]"}], "]"}], "===", "$Failed"}], ",",
     "False", ",", "True"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`$AobjNobj`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"$AobjNobj", ":=", 
  "\"\<(* ::Input:: *)\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Cost`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Cost", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "=", 
       RowBox[{"{", 
        RowBox[{
        "Plus", ",", "Times", ",", "Power", ",", "Indexed", ",", "Function"}],
         "}"}]}], ",", 
      RowBox[{"a", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"InputForm", "[", "x", "]"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<+\>\"", ",", "\"\<-\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<*\>\"", ",", "\"\</\>\""}], "}"}], ",", "\"\<^\>\""}], 
        "}"}]}], ",", "c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", "h", ",", 
      RowBox[{"k", "=", "1"}], ",", "j", ",", "t"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"StringFreeQ", "[", 
       RowBox[{"a", ",", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"b", ",", "\"\<[\>\""}], "}"}], "]"}]}], "]"}], ",", "0", 
      ",", 
      RowBox[{
       RowBox[{"c", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"StringCount", "[", 
            RowBox[{"a", ",", "#"}], "]"}], "&"}], ",", "b"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"k", "\[LessEqual]", "3"}], ",", 
         RowBox[{
          RowBox[{"h", "=", 
           RowBox[{"c", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ";", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"h", "\[NotEqual]", "0"}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"d", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"f", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], ",", "h"}], "}"}]}], "]"}]}],
            "]"}], ";", 
          RowBox[{"k", "++"}]}]}], "]"}], ";", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Set", "[", 
           RowBox[{"b", ",", 
            RowBox[{"StringCount", "[", 
             RowBox[{"a", ",", "\"\<[[\>\""}], "]"}]}], "]"}], ">", "0"}], 
         ",", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"d", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"f", "[", 
              RowBox[{"[", "4", "]"}], "]"}], ",", "b"}], "}"}]}], "]"}]}], 
        "]"}], ";", " ", "\[IndentingNewLine]", 
       RowBox[{"t", "=", 
        RowBox[{"StringPosition", "[", 
         RowBox[{"a", ",", "\"\<[\>\""}], "]"}]}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"t", "\[NotEqual]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{
          RowBox[{"t", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", "t"}], "]"}]}], 
          ";", " ", "\[IndentingNewLine]", 
          RowBox[{"t", "=", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"StringTake", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "-", "1"}], ",", 
                    RowBox[{"#", "-", "1"}]}], "}"}]}], "]"}], "\[NotEqual]", 
                    "\"\<[\>\""}], "&&", 
                   RowBox[{
                    RowBox[{"StringTake", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "+", "1"}], ",", 
                    RowBox[{"#", "+", "1"}]}], "}"}]}], "]"}], "\[NotEqual]", 
                    "\"\<[\>\""}]}], ",", "#"}], "]"}], "&"}], ",", "t"}], 
              "]"}], ",", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"SameQ", "[", 
                RowBox[{"#", ",", "Null"}], "]"}]}], "&"}]}], "]"}]}]}]}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"t", "\[NotEqual]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"d", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"f", "[", 
              RowBox[{"[", "5", "]"}], "]"}], ",", 
             RowBox[{"Length", "[", "t", "]"}]}], "}"}]}], "]"}]}], "]"}], 
       ";", " ", 
       RowBox[{"b", "=", 
        RowBox[{"StringPosition", "[", 
         RowBox[{"a", ",", "\"\<(-\>\""}], "]"}]}], ";", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", ",", "b", ",", "h"}], "}"}], "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", "b"}], "]"}], ",", 
          RowBox[{"StringLength", "[", "a", "]"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "b", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{
          RowBox[{"c", "=", "\"\<\>\""}], ";", " ", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", 
             RowBox[{"b", "[", 
              RowBox[{"[", "k", "]"}], "]"}]}], ",", 
            RowBox[{"j", "\[LessEqual]", "h"}], ",", 
            RowBox[{"j", "++"}], ",", 
            RowBox[{
             RowBox[{"c", "=", 
              RowBox[{"c", "<>", 
               RowBox[{"StringTake", "[", 
                RowBox[{"a", ",", 
                 RowBox[{"{", 
                  RowBox[{"j", ",", "j"}], "}"}]}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"StringCount", "[", 
                 RowBox[{"c", ",", "\"\<{\>\""}], "]"}], "===", 
                RowBox[{"StringCount", "[", 
                 RowBox[{"c", ",", "\"\<}\>\""}], "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"ExpressionQ", "[", "c", "]"}], ",", 
                  RowBox[{"Continue", "[", "]"}], ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"NumberQ", "[", 
                    RowBox[{
                    RowBox[{"Interpreter", "[", 
                    RowBox[{"\"\<Number\>\"", ",", "Positive"}], "]"}], "[", 
                    "c", "]"}], "]"}], ",", 
                    RowBox[{"t", "=", 
                    RowBox[{"t", "+", "1"}]}]}], "]"}]}], "]"}], ";", 
                RowBox[{"Break", "[", "]"}]}]}], "]"}]}]}], "]"}]}]}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"d", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"t", "\[NotEqual]", "0"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{"d", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "===", "Plus"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"d", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{
              RowBox[{"d", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "-", "t"}]}], ";", "d"}], ",", 
          "d"}], "]"}]}], ";", " ", 
       RowBox[{"Plus", "[", 
        RowBox[{"Sequences", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "*", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "&"}], ",", "d"}], "]"}], 
         "]"}], "]"}]}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ListStrToStr`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListStrToStr", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"ListQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"StringQ", ",", "x"}], "]"}], "]"}], "\[Equal]", 
       RowBox[{"{", "True", "}"}]}]}]}], ",", "p___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", "=", "\"\<\>\""}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", "p", "}"}], "\[Equal]", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"a", "=", 
          RowBox[{"a", "<>", 
           RowBox[{"x", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "<>", "\"\<, \>\""}]}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", 
           RowBox[{"Length", "[", "x", "]"}]}], "}"}]}], "]"}], ";", 
       RowBox[{"StringTake", "[", 
        RowBox[{"a", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "3"}]}], "}"}]}], "]"}]}], ",", 
      RowBox[{"StringJoin", "[", "x", "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StringToList`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StringToList", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", "k", ",", "j", ",", 
      RowBox[{"t", "=", "\"\<\>\""}], ",", "t1", ",", 
      RowBox[{"n", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"StringPosition", "[", 
         RowBox[{"x", ",", "\"\<,\>\""}], "]"}], "]"}], "]"}]}], ";", 
     RowBox[{"PrependTo", "[", 
      RowBox[{"b", ",", "0"}], "]"}], ";", " ", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"b", ",", 
       RowBox[{
        RowBox[{"StringLength", "[", "x", "]"}], "+", "1"}]}], "]"}], ";", 
     " ", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"c", ",", 
         RowBox[{"StringTake", "[", 
          RowBox[{"x", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"b", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "+", "1"}], ",", 
             RowBox[{
              RowBox[{"b", "[", 
               RowBox[{"[", 
                RowBox[{"k", "+", "1"}], "]"}], "]"}], "-", "1"}]}], "}"}]}], 
          "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{
          RowBox[{"Length", "[", "b", "]"}], "-", "1"}]}], "}"}]}], "]"}], 
     ";", " ", 
     RowBox[{"a", "=", 
      RowBox[{"Length", "[", "c", "]"}]}], ";", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "n"}], ",", 
         RowBox[{"j", "\[LessEqual]", "a"}], ",", 
         RowBox[{"j", "++"}], ",", 
         RowBox[{
          RowBox[{"t", "=", 
           RowBox[{"t", "<>", 
            RowBox[{"c", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "<>", "\"\<,\>\""}]}], ";", " ", 
          RowBox[{"t1", "=", 
           RowBox[{"StringTrim", "[", 
            RowBox[{"t", ",", 
             RowBox[{"{", 
              RowBox[{"\"\<,\>\"", ",", "\"\< \>\""}], "}"}]}], "]"}]}], ";", 
          " ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"SyntaxQ", "[", "t1", "]"}], ",", 
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{"d", ",", "t1"}], "]"}], ";", " ", 
             RowBox[{"t", "=", "\"\<\>\""}], ";", " ", 
             RowBox[{"n", "=", 
              RowBox[{"j", "+", "1"}]}], ";", " ", 
             RowBox[{"Break", "[", "]"}]}]}], "]"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "a"}], "}"}]}], "]"}], ";", " ", "d"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StandStrForm`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StandStrForm", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"StringReplace", "[", 
   RowBox[{
    RowBox[{"ToLowerCase", "[", "x", "]"}], ",", 
    RowBox[{"\"\</\>\"", "->", "\"\<\\\\\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`RedSymbStr`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RedSymbStr", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"SymbolQ1", "[", "y", "]"}]}], ",", 
    RowBox[{"z_", "/;", 
     RowBox[{"StringQ", "[", "z", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"StringPosition", "[", 
        RowBox[{"x", ",", "y"}], "]"}]}], ",", "b"}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"StringFreeQ", "[", 
        RowBox[{"x", ",", "y"}], "]"}], ",", "x", ",", 
       RowBox[{"b", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", "a"}], "]"}]}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Map", "[", 
          RowBox[{"Length", ",", 
           RowBox[{"Split", "[", 
            RowBox[{"b", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#2", "-", "#1"}], "\[Equal]", "1"}], "&"}]}], "]"}]}],
           "]"}], "]"}], ",", "Greater"}], "]"}]}], ";", " ", 
     RowBox[{"StringReplace", "[", 
      RowBox[{"x", ",", 
       RowBox[{"GenRules", "[", 
        RowBox[{
         RowBox[{"Map3", "[", 
          RowBox[{"StringMultiple", ",", "y", ",", "b"}], "]"}], ",", "z"}], 
        "]"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SubCfEntries`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SubCfEntries", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"n_", "/;", 
     RowBox[{
      RowBox[{"IntegerQ", "[", "n", "]"}], "&&", 
      RowBox[{"n", ">=", "1"}]}]}], ",", 
    RowBox[{"y_", " ", ":", "False"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Characters", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", "x"}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"n", ">", 
       RowBox[{"StringLength", "[", "x", "]"}]}], ",", "$Failed", ",", 
      RowBox[{
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"c", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"c", ",", 
             RowBox[{"Partition", "[", 
              RowBox[{
               RowBox[{"Characters", "[", "b", "]"}], ",", "n", ",", "n"}], 
              "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"c", "=", 
           RowBox[{"Gather", "[", 
            RowBox[{
             RowBox[{"Map", "[", 
              RowBox[{"StringJoin", ",", "c"}], "]"}], ",", 
             RowBox[{
              RowBox[{"#1", "\[Equal]", "#2"}], "&"}]}], "]"}]}], ";", " ", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{"d", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "#", "]"}], ">", "1"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "Nothing"}], "]"}]}], 
              "]"}], "&"}], ",", "c"}], "]"}], ";", " ", 
          RowBox[{"c", "=", 
           RowBox[{"{", "}"}]}], ";", " ", 
          RowBox[{"b", "=", 
           RowBox[{"StringTake", "[", 
            RowBox[{"b", ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", 
               RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", " ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"StringLength", "[", "b", "]"}], "<", "n"}], ",", 
            RowBox[{"Break", "[", "]"}], ",", "Null"}], "]"}]}], ",", 
         "Infinity"}], "]"}], ";", " ", "\[IndentingNewLine]", 
       RowBox[{"d", "=", 
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Flatten", "[", "d", "]"}], "]"}]}], ";", " ", 
       RowBox[{"d", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"StringCount", "[", 
              RowBox[{"x", ",", "#", ",", 
               RowBox[{"Overlaps", "->", "y"}]}], "]"}], ",", "#"}], "}"}], 
           "&"}], ",", "d"}], "]"}]}], ";", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "d", "]"}], ">", "1"}], " ", "||", 
          RowBox[{"d", "\[Equal]", 
           RowBox[{"{", "}"}]}]}], ",", "d", ",", 
         RowBox[{"d", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ReduceList`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReduceList", "[", 
   RowBox[{
    RowBox[{"L_", "/;", 
     RowBox[{"ListQ", "[", "L", "]"}]}], ",", "x_", ",", " ", "z_", ",", 
    RowBox[{"t_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", "t"}], "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"Flatten", ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"L", ",", "#"}], "]"}], "&"}], ",", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", "x", "}"}], "]"}]}], "]"}]}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"m", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", "x", "}"}], "]"}]}], ",", 
      RowBox[{"n", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", "z", "}"}], "]"}]}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "m", "]"}], ">", 
         RowBox[{"Length", "[", "n", "]"}]}], ",", 
        RowBox[{"PadRight", "[", 
         RowBox[{"n", ",", 
          RowBox[{"Length", "[", "m", "]"}], ",", "1"}], "]"}], ",", "n"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"a", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "]"}], "\[GreaterEqual]", 
          RowBox[{"n", "[", 
           RowBox[{"[", "k", "]"}], "]"}]}], ",", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"b", ",", 
           RowBox[{"a", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ",", "Null"}], "]"}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"a", "[", 
         RowBox[{"[", "k", "]"}], "]"}], "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"t", "\[Equal]", "1"}], ",", 
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", 
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"a", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "]"}], "-", 
              RowBox[{"n", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}]}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"Length", "[", 
                RowBox[{"a", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "]"}]}], "+", 
              RowBox[{"n", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], ";;", 
             RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"ReplacePart", "[", 
        RowBox[{"L", ",", 
         RowBox[{"GenRules", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", "a", "]"}], ",", "Null"}], "]"}]}], "]"}], 
       ",", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"SameQ", "[", 
          RowBox[{"#", ",", "Null"}], "]"}]}], "&"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ReduceArgs`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReduceArgs", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}]}], ",", 
      RowBox[{"h", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"HeadPF", "[", "x", "]"}], "}"}], "]"}]}], ",", " ", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"d1", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"d2", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"atr", "=", 
       RowBox[{"Attributes", "[", "x", "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"ClearAll", "[", "b", "]"}], ";", 
     RowBox[{"ClearAttributes", "[", 
      RowBox[{"x", ",", "atr"}], "]"}], ";", " ", 
     RowBox[{"a", "=", 
      RowBox[{"ArgsBFM", "[", 
       RowBox[{"x", ",", "b"}], "]"}]}], ";", " ", 
     RowBox[{"ClearAll", "[", "x", "]"}], ";", " ", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"d", ",", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"[", "k", "]"}], "]"}], ",", 
           RowBox[{"b", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{"Length", "[", "c", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"d", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", 
              RowBox[{
               RowBox[{"Length", "[", "#", "]"}], "/", "2"}]}], "]"}], "]"}], 
           ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "#", "]"}], "/", "2"}], "+", "1"}], ";;", 
              RowBox[{"-", "1"}]}], "]"}], "]"}]}], "}"}], "&"}], ",", "d"}], 
       "]"}]}], ";", " ", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"d1", ",", 
         RowBox[{"FirstPositionsList", "[", 
          RowBox[{
           RowBox[{"d", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{"Length", "[", "d", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"d2", ",", 
         RowBox[{"Part", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"d", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{"d1", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{"Length", "[", "d", "]"}]}], "}"}]}], "]"}], ";", " ", 
     RowBox[{"d2", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ToString", "[", "x", "]"}], "<>", "\"\<[\>\"", "<>", 
          RowBox[{"StringTake", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", 
              RowBox[{"-", "2"}]}], "}"}]}], "]"}], "<>", "\"\<]\>\""}], 
         "&"}], ",", 
        RowBox[{"Map", "[", 
         RowBox[{"ToString", ",", "d2"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"ToExpression", "[", 
        RowBox[{"StringReplace", "[", 
         RowBox[{
          RowBox[{"c", "[", 
           RowBox[{"[", "k", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"h", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "\[Rule]", 
           RowBox[{"d2", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{"Length", "[", "c", "]"}]}], "}"}]}], "]"}], ";", 
     RowBox[{"SetAttributes", "[", 
      RowBox[{"x", ",", "atr"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`MultipleArgsQ`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MultipleArgsQ", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], "]"}], ":=", " ", 
  RowBox[{"Or", "@@", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "#", "]"}], ">", 
       RowBox[{"Length", "[", 
        RowBox[{"DeleteDuplicates", "[", "#", "]"}], "]"}]}], "&"}], ",", 
     RowBox[{"ArgsBFM", "[", "x", "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`$TypeProc`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"$TypeProc", ":=", 
  RowBox[{"CheckAbort", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"$Art27$Kr20$", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Stack", "[", "Module", "]"}], ",", 
            RowBox[{"Stack", "[", "Block", "]"}], ",", 
            RowBox[{"Stack", "[", "DynamicModule", "]"}]}], "}"}], ",", 
          RowBox[{
           RowBox[{"#", "\[NotEqual]", 
            RowBox[{"{", "}"}]}], "&"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"$Art27$Kr20$", "\[Equal]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{
          RowBox[{"Clear", "[", "$Art27$Kr20$", "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}], ",", 
         RowBox[{"$Art27$Kr20$", "=", 
          RowBox[{"ToString", "[", 
           RowBox[{
            RowBox[{"$Art27$Kr20$", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"SuffPref", "[", 
        RowBox[{"$Art27$Kr20$", ",", "\"\<Block[{\>\"", ",", "1"}], "]"}]}], 
      ",", 
      RowBox[{
       RowBox[{"Clear", "[", "$Art27$Kr20$", "]"}], ";", "\"\<Block\>\""}], 
      ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"SuffPref", "[", 
          RowBox[{"$Art27$Kr20$", ",", "\"\<Module[{\>\"", ",", "1"}], "]"}], 
         "&&", 
         RowBox[{"!", 
          RowBox[{"StringFreeQ", "[", 
           RowBox[{"$Art27$Kr20$", ",", "\"\<DynamicModule\>\""}], "]"}]}]}], 
        ",", 
        RowBox[{
         RowBox[{"Clear", "[", "$Art27$Kr20$", "]"}], ";", 
         "\"\<DynamicModule\>\""}], ",", 
        RowBox[{
         RowBox[{"Clear", "[", "$Art27$Kr20$", "]"}], ";", " ", 
         "\"\<Module\>\""}]}], "]"}]}], "]"}], ",", "$Failed"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`$CallProc`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"$CallProc", ":=", 
  RowBox[{"StringTake", "[", 
   RowBox[{
    RowBox[{"ToString1", "[", 
     RowBox[{
      RowBox[{"Stack", "[", "_", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"10", ",", 
      RowBox[{"-", "2"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ProtectedQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ProtectedQ", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"MemberQ", "[", 
     RowBox[{
      RowBox[{"Attributes1", "[", "x", "]"}], ",", "Protected"}], "]"}], ",", 
    "True", ",", "False"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StringMultiple`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StringMultiple", "[", 
   RowBox[{
    RowBox[{"s_", "/;", 
     RowBox[{"StringQ", "[", "s", "]"}]}], ",", 
    RowBox[{"p_", "/;", 
     RowBox[{
      RowBox[{"IntegerQ", "[", "p", "]"}], "&&", 
      RowBox[{"p", "\[GreaterEqual]", "1"}]}]}], ",", "h___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", "=", 
      RowBox[{"{", "s", "}"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"a", ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", "h", "}"}], "\[NotEqual]", 
                 RowBox[{"{", "}"}]}], ",", 
                RowBox[{"ToString", "[", "h", "]"}], ",", "\"\<\>\""}], "]"}],
               "<>", "s"}], ",", "#"}], "}"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}], ",", 
       RowBox[{"Range", "[", 
        RowBox[{"1", ",", 
         RowBox[{"p", "-", "1"}]}], "]"}]}], "]"}], ";", 
     RowBox[{"StringJoin", "[", "a", "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StringMultiple1`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StringMultiple1", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"n_", "/;", 
     RowBox[{"IntegerQ", "[", "n", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", "=", "\"\<\>\""}], "}"}], ",", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"a", "=", 
           RowBox[{"a", "<>", "x"}]}], ",", "#"}], "}"}], "&"}], ",", 
       RowBox[{"Range", "[", "n", "]"}]}], "]"}], ";", "a"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SingleDefQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SingleDefQ", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}], "]"}], "==",
       "1"}], "||", 
     RowBox[{"SameQ", "[", 
      RowBox[{"\"\<System\>\"", ",", 
       RowBox[{"PureDefinition", "[", "x", "]"}]}], "]"}]}], ",", "True", ",",
     "False"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StringDependQ`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StringDependQ", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{"StringQ", "[", "y", "]"}], "||", 
      RowBox[{"ListStrQ", "[", "y", "]"}]}]}], ",", "z___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"StringFreeQ", "[", 
           RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", "y", "}"}], "]"}]}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"Length", "[", "y", "]"}]}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"DeleteDuplicates", "[", "a", "]"}], "\[Equal]", 
       RowBox[{"{", "False", "}"}]}], ",", "True", ",", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", "z", "}"}], "\[NotEqual]", 
           RowBox[{"{", "}"}]}], "&&", 
          RowBox[{"!", 
           RowBox[{"HowAct", "[", "z", "]"}]}]}], ",", 
         RowBox[{"z", "=", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", "y", "]"}], ",", 
            RowBox[{
             RowBox[{"StringFreeQ", "[", 
              RowBox[{"x", ",", "#"}], "]"}], "&"}]}], "]"}]}]}], "]"}], ";", 
       "False"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StringDependQ1`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StringDependQ1", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"ListStringQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "x"}], ",", "b", ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "y", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"b", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"StringPosition", "[", 
           RowBox[{"a", ",", 
            RowBox[{"y", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"b", "\[NotEqual]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"a", "=", 
           RowBox[{"StringTake", "[", 
            RowBox[{"a", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"b", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ",", 
               RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ",", 
          RowBox[{"Return", "[", "False", "]"}]}], "]"}]}]}], "]"}], ";", " ",
      "True"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Border`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Border", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"StringLength", "[", "x", "]"}], "/", "2"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", "c", ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", "a"}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"StringTake", "[", 
          RowBox[{"x", ",", "k"}], "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"c", "===", 
           RowBox[{"StringTake", "[", 
            RowBox[{"x", ",", 
             RowBox[{"-", "k"}]}], "]"}]}], ",", 
          RowBox[{"b", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"b", ",", "c"}], "]"}]}], ",", 
          RowBox[{"Continue", "[", "]"}]}], "]"}]}]}], "]"}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"b", "==", 
        RowBox[{"{", "}"}]}], ",", "\"\<\>\"", ",", 
       RowBox[{"b", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SubStrSymbolParity`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SubStrSymbolParity", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"CharacterQ", "[", "y", "]"}]}], ",", 
    RowBox[{"z_", "/;", 
     RowBox[{"CharacterQ", "[", "z", "]"}]}], ",", 
    RowBox[{"d_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", "d"}], "]"}]}], ",", 
    RowBox[{"t___", "/;", 
     RowBox[{
      RowBox[{"t", "\[Equal]", 
       RowBox[{"{", "}"}]}], "||", 
      RowBox[{"PosIntQ", "[", 
       RowBox[{
        RowBox[{"{", "t", "}"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", 
        RowBox[{"y", ",", "z"}], "}"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", "j", ",", "f", ",", 
      RowBox[{"m", "=", "1"}], ",", 
      RowBox[{"n", "=", "0"}], ",", "p", ",", "h"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "t", "}"}], "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"f", "=", "x"}], ",", 
       RowBox[{"f", "=", 
        RowBox[{"StringTake", "[", 
         RowBox[{"x", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"d", "\[Equal]", "0"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{"StringLength", "[", "x", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "t"}], "}"}]}], "]"}]}], "]"}]}]}], "]"}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Map10", "[", 
          RowBox[{"StringFreeQ", ",", "f", ",", "c"}], "]"}], " ", 
         "\[NotEqual]", 
         RowBox[{"{", 
          RowBox[{"False", ",", "False"}], "}"}]}], "||", 
        RowBox[{"y", "\[Equal]", "z"}]}], ",", 
       RowBox[{"Return", "[", "]"}], ",", 
       RowBox[{"a", "=", 
        RowBox[{"StringPosition", "[", 
         RowBox[{"f", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"d", "==", "0"}], ",", 
            RowBox[{"c", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"c", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "]"}]}]}], "]"}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"j", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"d", "\[Equal]", "0"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "-", "1"}]}], "]"}]}], ";", 
        RowBox[{"h", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"d", "\[Equal]", "0"}], ",", "y", ",", "z"}], "]"}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"m", "\[NotEqual]", "n"}], ",", 
          RowBox[{
           RowBox[{"p", "=", 
            RowBox[{"Quiet", "[", 
             RowBox[{"Check", "[", 
              RowBox[{
               RowBox[{"StringTake", "[", 
                RowBox[{"f", ",", 
                 RowBox[{"{", 
                  RowBox[{"j", ",", "j"}], "}"}]}], "]"}], ",", 
               RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], "]"}]}], ";",
            "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"p", "\[Equal]", "y"}], ",", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"d", "\[Equal]", "0"}], ",", 
                RowBox[{"m", "++"}], ",", 
                RowBox[{"n", "++"}]}], "]"}], ";", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"d", "\[Equal]", "0"}], ",", 
                RowBox[{"h", "=", 
                 RowBox[{"h", "<>", "p"}]}], ",", 
                RowBox[{"h", "=", 
                 RowBox[{"p", "<>", "h"}]}]}], "]"}]}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"p", "\[Equal]", "z"}], ",", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"d", "\[Equal]", "0"}], ",", 
                  RowBox[{"n", "++"}], ",", 
                  RowBox[{"m", "++"}]}], "]"}], ";", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"d", "\[Equal]", "0"}], ",", 
                  RowBox[{"h", "=", 
                   RowBox[{"h", "<>", "p"}]}], ",", 
                  RowBox[{"h", "=", 
                   RowBox[{"p", "<>", "h"}]}]}], "]"}]}], ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"d", "\[Equal]", "0"}], ",", 
                 RowBox[{"h", "=", 
                  RowBox[{"h", "<>", "p"}]}], ",", 
                 RowBox[{"h", "=", 
                  RowBox[{"p", "<>", "h"}]}]}], "]"}]}], "]"}]}], "]"}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"d", "\[Equal]", "0"}], ",", 
             RowBox[{"j", "++"}], ",", 
             RowBox[{"j", "--"}]}], "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"b", ",", "h"}], "]"}], ";", 
        RowBox[{"m", "=", "1"}], ";", 
        RowBox[{"n", "=", "0"}], ";", 
        RowBox[{"h", "=", "\"\<\>\""}]}]}], "]"}], ";", "b"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SubStrSymbolParity1`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SubStrSymbolParity1", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"CharacterQ", "[", "y", "]"}]}], ",", 
    RowBox[{"z_", "/;", 
     RowBox[{"CharacterQ", "[", "z", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{"StringPosition", "[", 
          RowBox[{"x", ",", "y"}], "]"}], "]"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{"StringPosition", "[", 
          RowBox[{"x", ",", "z"}], "]"}], "]"}], "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", "d", ",", 
      RowBox[{"k", "=", "1"}], ",", "j", ",", "p"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"a", "\[Equal]", 
        RowBox[{"{", "}"}]}], "||", 
       RowBox[{"b", "\[Equal]", 
        RowBox[{"{", "}"}]}]}], ",", "$Failed", ",", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{"k", ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "a", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{
          RowBox[{"p", "=", 
           RowBox[{"StringTake", "[", 
            RowBox[{"x", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"a", "[", 
                RowBox[{"[", "k", "]"}], "]"}], ",", 
               RowBox[{"a", "[", 
                RowBox[{"[", "k", "]"}], "]"}]}], "}"}]}], "]"}]}], ";", " ", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", 
             RowBox[{
              RowBox[{"a", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "+", "1"}]}], ",", 
            RowBox[{"j", "\[LessEqual]", 
             RowBox[{"StringLength", "[", "x", "]"}]}], ",", 
            RowBox[{"j", "++"}], ",", 
            RowBox[{
             RowBox[{"p", "=", 
              RowBox[{"p", "<>", 
               RowBox[{"StringTake", "[", 
                RowBox[{"x", ",", 
                 RowBox[{"{", 
                  RowBox[{"j", ",", "j"}], "}"}]}], "]"}]}]}], ";", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"StringCount", "[", 
                 RowBox[{"p", ",", "y"}], "]"}], "\[Equal]", 
                RowBox[{"StringCount", "[", 
                 RowBox[{"p", ",", "z"}], "]"}]}], ",", 
               RowBox[{
                RowBox[{"AppendTo", "[", 
                 RowBox[{"c", ",", "p"}], "]"}], ";", " ", 
                RowBox[{"Break", "[", "]"}]}]}], "]"}]}]}], "]"}]}]}], "]"}], 
       ";", "c"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StrSymbParity`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StrSymbParity", "[", 
   RowBox[{
    RowBox[{"S_", "/;", 
     RowBox[{"StringQ", "[", "S", "]"}]}], ",", 
    RowBox[{"S1_", "/;", 
     RowBox[{"StringQ", "[", "S1", "]"}]}], ",", 
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"StringQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"StringLength", "[", "x", "]"}], "\[Equal]", "1"}]}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{"StringQ", "[", "y", "]"}], "&&", 
      RowBox[{
       RowBox[{"StringLength", "[", "y", "]"}], "\[Equal]", "1"}]}]}]}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"StringPosition", "[", 
        RowBox[{"S", ",", "S1"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"c", "=", "S1"}], ",", "d", ",", 
      RowBox[{"k", "=", "1"}], ",", "j"}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "\[Equal]", "y"}], "||", 
        RowBox[{"a", "\[Equal]", 
         RowBox[{"{", "}"}]}]}], ",", 
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{"k", ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "a", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"a", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "+", "1"}]}], ",", 
           RowBox[{"j", "\[LessEqual]", 
            RowBox[{"StringLength", "[", "S", "]"}]}], ",", 
           RowBox[{"j", "++"}], ",", 
           RowBox[{
            RowBox[{"c", "=", 
             RowBox[{"c", "<>", 
              RowBox[{"StringTake", "[", 
               RowBox[{"S", ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "j"}], "}"}]}], "]"}]}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"StringCount", "[", 
                 RowBox[{"c", ",", "x"}], "]"}], "\[NotEqual]", "0"}], "&&", 
               RowBox[{
                RowBox[{"StringCount", "[", 
                 RowBox[{"c", ",", "y"}], "]"}], "\[NotEqual]", "0"}], "&&", 
               RowBox[{
                RowBox[{"StringCount", "[", 
                 RowBox[{"c", ",", "x"}], "]"}], "===", 
                RowBox[{"StringCount", "[", 
                 RowBox[{"c", ",", "y"}], "]"}]}]}], ",", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"b", ",", "c"}], "]"}], ";", " ", 
               RowBox[{"c", "=", "S1"}], ";", " ", 
               RowBox[{"Break", "[", "]"}]}]}], "]"}]}]}], "]"}]}], "]"}]}], 
      "]"}], ";", "b"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`CorrectSubString`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CorrectSubString", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"IntegerQ", "[", "y", "]"}]}], ",", "z___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "\"\<\>\""}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"StringLength", "[", "x", "]"}]}], ",", "k", ",", 
      RowBox[{"t", "=", "0"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"y", "\[GreaterEqual]", "1"}], "&&", 
        RowBox[{"y", "\[LessEqual]", "b"}]}], "||", 
       RowBox[{"x", "==", "\"\<\>\""}]}], ",", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "z", "}"}], "\[NotEqual]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"Do", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"a", "=", 
             RowBox[{
              RowBox[{"StringTake", "[", 
               RowBox[{"x", ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", "k"}], "}"}]}], "]"}], "<>", "a"}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"SyntaxQ", "[", "a", "]"}], ",", 
              RowBox[{
               RowBox[{"t", "=", "1"}], ";", " ", 
               RowBox[{"Break", "[", "]"}]}]}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "y", ",", "1", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"Do", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"a", "=", 
             RowBox[{"a", "<>", 
              RowBox[{"StringTake", "[", 
               RowBox[{"x", ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", "k"}], "}"}]}], "]"}]}]}], ";", " ", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"SyntaxQ", "[", "a", "]"}], ",", 
              RowBox[{
               RowBox[{"t", "=", "1"}], ";", " ", 
               RowBox[{"Break", "[", "]"}]}]}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "y", ",", "b"}], "}"}]}], "]"}]}], "]"}], ";", 
       " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"t", "\[Equal]", "1"}], ",", "a", ",", "$Failed"}], "]"}]}], 
      ",", "$Failed"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ActRemObj`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ActRemObj", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Act\>\"", ",", "\"\<Rem\>\""}], "}"}], ",", "y"}], 
      "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{
       "$HomeDirectory", "<>", "\"\<\\\\\>\"", "<>", "x", "<>", 
        "\"\<.$ArtKr$\>\""}]}], ",", "b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"Definition4", "[", "x", "]"}], "]"}]}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"c", "===", "\"\<$Failed\>\""}], ",", "$Failed", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"HowAct", "[", "x", "]"}], "&&", 
         RowBox[{"y", "\[Equal]", "\"\<Rem\>\""}]}], ",", 
        RowBox[{
         RowBox[{"b", "=", 
          RowBox[{"OpenWrite", "[", "a", "]"}]}], ";", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"WriteString", "[", 
          RowBox[{"b", ",", "c"}], "]"}], ";", 
         RowBox[{"Close", "[", "b", "]"}], ";", 
         RowBox[{"ClearAllAttributes", "[", "x", "]"}], ";", 
         RowBox[{"Remove", "[", "x", "]"}], ";", "\"\<Remove\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"!", 
            RowBox[{"HowAct", "[", "x", "]"}]}], "&&", 
           RowBox[{"y", "\[Equal]", "\"\<Act\>\""}]}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"FileExistsQ", "[", "a", "]"}], ",", 
            RowBox[{
             RowBox[{"b", "=", 
              RowBox[{"OpenRead", "[", "a", "]"}]}], ";", 
             RowBox[{"Read", "[", "b", "]"}], ";", 
             RowBox[{"Close", "[", "b", "]"}], ";", 
             RowBox[{"DeleteFile", "[", "a", "]"}], ";", "\"\<Activate\>\""}],
             ",", 
            RowBox[{"Return", "[", 
             RowBox[{"Defer", "[", 
              RowBox[{"ActRemObj", "[", 
               RowBox[{"x", ",", "y"}], "]"}], "]"}], "]"}]}], "]"}]}], 
         "]"}]}], "]"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ActUcontexts`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ActUcontexts", "[", "x___", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"MinusList", "[", 
        RowBox[{"$Packages", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<System`\>\"", ",", "\"\<Global`\>\""}], "}"}]}], 
        "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"FileNames", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<*.m\>\"", ",", "\"\<*.tr\>\""}], "}"}], ",", 
         "$InstallationDirectory", ",", "Infinity"}], "]"}]}], ",", "c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", "k", ",", "j"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"c", "=", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"StringTake", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{"StringPosition", "[", 
                 RowBox[{"#", ",", "\"\<`\>\""}], "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], "&"}], ",", 
         "a"}], "]"}], "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "x", "}"}], "==", 
        RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "1"}], ",", 
          RowBox[{"k", "\[LessEqual]", 
           RowBox[{"Length", "[", "c", "]"}]}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "\[LessEqual]", 
             RowBox[{"Length", "[", "b", "]"}]}], ",", 
            RowBox[{"j", "++"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"FileBaseName", "[", 
                  RowBox[{"b", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], "]"}], "<>", "\"\<`\>\""}],
                 "\[Equal]", 
                RowBox[{"c", "[", 
                 RowBox[{"[", "k", "]"}], "]"}]}], "||", 
               RowBox[{"MemberQ", "[", 
                RowBox[{
                 RowBox[{"Quiet", "[", 
                  RowBox[{"ContextMfile1", "[", 
                   RowBox[{"b", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "]"}], "]"}], ",", 
                 RowBox[{"c", "[", 
                  RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], ",", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"d", ",", 
                 RowBox[{"c", "[", 
                  RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ";", " ", 
               RowBox[{"Break", "[", "]"}]}]}], "]"}]}], "]"}]}], "]"}], ";", 
        " ", 
        RowBox[{"MinusList", "[", 
         RowBox[{"c", ",", "d"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"-", "2"}]}], "}"}]}], "]"}], "&"}], ",", "c"}], 
          "]"}]}], ";", " ", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "1"}], ",", 
          RowBox[{"k", "\[LessEqual]", 
           RowBox[{"Length", "[", "c", "]"}]}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "\[LessEqual]", 
             RowBox[{"Length", "[", "b", "]"}]}], ",", 
            RowBox[{"j", "++"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"FileBaseName", "[", 
                 RowBox[{"b", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "]"}], "\[Equal]", 
                RowBox[{"c", "[", 
                 RowBox[{"[", "k", "]"}], "]"}]}], "&&", 
               RowBox[{"MemberQ", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\"\<m\>\"", ",", "\"\<tr\>\""}], "}"}], ",", 
                 RowBox[{"FileExtension", "[", 
                  RowBox[{"b", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "]"}]}], ",", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"d", ",", 
                 RowBox[{"c", "[", 
                  RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ";", " ", 
               RowBox[{"Break", "[", "]"}]}]}], "]"}]}], "]"}]}], "]"}], ";", 
        " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "<>", "\"\<`\>\""}], "&"}], ",", 
          RowBox[{"MinusList", "[", 
           RowBox[{"c", ",", "d"}], "]"}]}], "]"}]}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SysContexts`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SysContexts", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Contexts", "[", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"ActUcontexts", "[", "590", "]"}]}]}], "}"}], ",", 
    RowBox[{"Select", "[", 
     RowBox[{"a", ",", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"SuffPref", "[", 
         RowBox[{"#", ",", "b", ",", "1"}], "]"}]}], "&"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`AllContexts`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AllContexts", "[", "y___", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Directory", "[", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"SetDirectory", "[", "$InstallationDirectory", "]"}]}], ",", 
      "c", ",", "h"}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"FileNames", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<*.m\>\"", ",", "\"\<*.tr\>\""}], "}"}], ",", 
        RowBox[{"{", "\"\<*\>\"", "}"}], ",", "Infinity"}], "]"}]}], ";", 
     RowBox[{
      RowBox[{"h", "[", "x_", "]"}], ":=", 
      RowBox[{"StringReplace", "[", 
       RowBox[{
        RowBox[{"StringJoin", "[", 
         RowBox[{"Map", "[", 
          RowBox[{"FromCharacterCode", ",", 
           RowBox[{"BinaryReadList", "[", "x", "]"}]}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<\\n\>\"", "->", "\"\<\>\""}], ",", 
          RowBox[{"\"\<\\r\>\"", "->", "\"\<\>\""}], ",", 
          RowBox[{"\"\<\\t\>\"", "->", "\"\<\>\""}], ",", 
          RowBox[{"\"\< \>\"", "->", "\"\<\>\""}], ",", 
          RowBox[{"\"\<{\>\"", "->", "\"\<\>\""}], ",", 
          RowBox[{"\"\<}\>\"", "->", "\"\<\>\""}]}], "}"}]}], "]"}]}], ";", 
     RowBox[{"c", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"StringCases", "[", 
             RowBox[{
              RowBox[{"h", "[", "#", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\"\<BeginPackage[\\\"\>\"", "~~", 
                 RowBox[{"Shortest", "[", "W__", "]"}], "~~", 
                 "\"\<`\\\"]\>\""}], ",", 
                RowBox[{"\"\<Needs[\\\"\>\"", "~~", 
                 RowBox[{"Shortest", "[", "W__", "]"}], "~~", 
                 "\"\<`\\\"]\>\""}], ",", 
                RowBox[{"\"\<Begin[\\\"\>\"", "~~", 
                 RowBox[{"Shortest", "[", "W__", "]"}], "~~", 
                 "\"\<`\\\"]\>\""}], ",", 
                RowBox[{"\"\<Get[\\\"\>\"", "~~", 
                 RowBox[{"Shortest", "[", "W__", "]"}], "~~", 
                 "\"\<`\\\"]\>\""}], ",", 
                RowBox[{"\"\<Package[\\\"\>\"", "~~", 
                 RowBox[{"Shortest", "[", "W__", "]"}], "~~", 
                 "\"\<`\\\"]\>\""}]}], "}"}]}], "]"}], "&"}], ",", "b"}], 
          "]"}], ",", 
         RowBox[{
          RowBox[{"#", "\[NotEqual]", 
           RowBox[{"{", "}"}]}], "&"}]}], "]"}], "]"}]}], ";", " ", 
     RowBox[{"c", "=", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Select", "[", 
        RowBox[{"c", ",", 
         RowBox[{
          RowBox[{"StringFreeQ", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<*\>\"", ",", "\"\<=\>\""}], "}"}]}], "]"}], "&"}]}],
         "]"}], "]"}]}], ";", " ", 
     RowBox[{"SetDirectory", "[", "a", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"StringReplace", "[", 
               RowBox[{
                RowBox[{"StringTake", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", 
                    RowBox[{"-", "2"}]}], "}"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\"\<Get[\>\"", "->", "\"\<\>\""}], ",", 
                  RowBox[{"\"\<Begin[\>\"", "->", "\"\<\>\""}], ",", 
                  RowBox[{"\"\<Needs[\>\"", "->", "\"\<\>\""}], ",", 
                  RowBox[{"\"\<BeginPackage[\>\"", "->", "\"\<\>\""}], ",", 
                  RowBox[{"\"\<Package[\>\"", "->", "\"\<\>\""}]}], "}"}], 
                ",", "1"}], "]"}], "&"}], ",", "c"}], "]"}], ",", 
           RowBox[{
            RowBox[{"#", "!=", "\"\<\\\"`Private`\\\"\>\""}], "&"}]}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<\\\"Global`\\\"\>\"", ",", 
           "\"\<\\\"CloudObjectLoader`\\\"\>\""}], "}"}]}], "]"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"ToExpression", ",", 
        RowBox[{"Sort", "[", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"DeleteDuplicates", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"StringFreeQ", "[", 
                   RowBox[{"#", ",", "\"\<,\>\""}], "]"}], ",", "#", ",", 
                  RowBox[{"StringSplit", "[", 
                   RowBox[{"#", ",", "\"\<,\>\""}], "]"}]}], "]"}], "&"}], 
               ",", "c"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"StringFreeQ", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{"\"\<<>\>\"", ",", "\"\<]\>\"", ",", "\"\<[\>\""}], 
                "}"}]}], "]"}], "&&", 
             RowBox[{
              RowBox[{"StringTake", "[", 
               RowBox[{"#", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "!=", 
              "\"\<\\\"`\>\""}]}], "&"}]}], "]"}], "]"}]}], "]"}]}], ";", " ",
      "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "y", "}"}], "\[NotEqual]", 
        RowBox[{"{", "}"}]}], " ", ",", 
       RowBox[{"MemberQ", "[", 
        RowBox[{"c", ",", "y"}], "]"}], ",", "c"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`MultipleContexts`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MultipleContexts", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"StringTake", "[", 
            RowBox[{"#", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{
                RowBox[{"Flatten", "[", 
                 RowBox[{"StringPosition", "[", 
                  RowBox[{"#", ",", "\"\<`\>\""}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], "&"}], ",", 
          RowBox[{"Contexts", "[", "]"}]}], "]"}], "]"}]}], ",", "b"}], "}"}],
     ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", 
           RowBox[{"NamesContext", "[", "#", "]"}]}], "}"}], "&"}], ",", 
        "a"}], "]"}]}], ";", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ4", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"ToString", "[", "x", "]"}], ",", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "<>", 
               RowBox[{"ToString", "[", "x", "]"}]}]}], "}"}]}], "]"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "Nothing"}], "]"}], "&"}], 
       ",", "b"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ContextsCS`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContextsCS", "[", "]"}], ":=", 
  RowBox[{"Sort", "[", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"StringLength", "[", "#", "]"}], "\[Equal]", "1"}], " ", "||", 
           RowBox[{"StringFreeQ", "[", 
            RowBox[{"#", ",", "\"\<`\>\""}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"\"\<System`\>\"", ",", "\"\<Global`\>\""}], "}"}], ",", 
          RowBox[{"StringTake", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{"StringPosition", "[", 
                 RowBox[{"#", ",", "\"\<`\>\""}], "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], "]"}], 
        "&"}], ",", 
       RowBox[{"Names", "[", "]"}]}], "]"}], "]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`WhatType`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WhatType", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"Head", "[", 
         RowBox[{"ToExpression", "[", "x", "]"}], "]"}], "]"}]}], ",", 
      RowBox[{"b", "=", "t"}], ",", "d", ",", 
      RowBox[{"c", "=", "$Packages"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"a", "===", "Symbol"}], ",", 
       RowBox[{
        RowBox[{"Clear", "[", "t", "]"}], ";", 
        RowBox[{"d", "=", 
         RowBox[{"Context", "[", "x", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"d", "\[Equal]", "\"\<Global`\>\""}], ",", 
          RowBox[{
           RowBox[{"d", "=", 
            RowBox[{"Quiet", "[", 
             RowBox[{"ProcFuncBlQ", "[", 
              RowBox[{"x", ",", "t"}], "]"}], "]"}]}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"d", "===", "True"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"t", ",", 
                 RowBox[{"t", "=", "b"}]}], "}"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\"\<Undefined\>\"", ",", 
                 RowBox[{"t", "=", "b"}]}], "}"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}]}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"d", "\[Equal]", "\"\<System`\>\""}], ",", 
            RowBox[{"Return", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"d", ",", 
                RowBox[{"t", "=", "b"}]}], "}"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "Null"}], "]"}]}], 
         "]"}]}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ToString", "[", "a", "]"}], ",", 
           RowBox[{"t", "=", "b"}]}], "}"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Quiet", "[", 
        RowBox[{"ProcFuncBlQ", "[", 
         RowBox[{"x", ",", "t"}], "]"}], "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<Module\>\"", ",", "\"\<DynamicModule\>\"", ",", 
             "\"\<Block\>\""}], "}"}], ",", "t"}], "]"}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"t", ",", 
             RowBox[{"t", "=", "b"}]}], "}"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"t", "=", "b"}], ";", 
          RowBox[{"ToString", "[", 
           RowBox[{"Quiet", "[", 
            RowBox[{"Head", "[", 
             RowBox[{"ToExpression", "[", "x", "]"}], "]"}], "]"}], "]"}]}]}],
         "]"}], ",", 
       RowBox[{
        RowBox[{"t", "=", "b"}], ";", "\"\<Undefined\>\""}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ExprOnLevels`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExprOnLevels", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Depth", "[", "x", "]"}]}], ",", 
       RowBox[{
        RowBox[{"a", "=", 
         RowBox[{"Append", "[", 
          RowBox[{"a", ",", 
           RowBox[{"MinusList", "[", 
            RowBox[{
             RowBox[{"Level", "[", 
              RowBox[{"x", ",", "k"}], "]"}], ",", 
             RowBox[{"Level", "[", 
              RowBox[{"x", ",", 
               RowBox[{"k", "-", "1"}]}], "]"}]}], "]"}]}], "]"}]}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", 
     RowBox[{"a", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", 
        RowBox[{"-", "2"}]}], "]"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Integral1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Integral1", "[", 
   RowBox[{"x_", ",", "y__"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"t", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"h", "=", "x"}], ",", 
      RowBox[{"n", "=", "g"}], ",", 
      RowBox[{"a", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"ToString", ",", 
         RowBox[{"Map", "[", 
          RowBox[{"InputForm", ",", 
           RowBox[{"{", "y", "}"}]}], "]"}]}], "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"{", "y", "}"}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Clear", "[", "g", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", "b"}], ",", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"c", ",", 
          RowBox[{"Unique", "[", "g", "]"}]}], "]"}], ";", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"d", ",", 
          RowBox[{"ToString", "[", 
           RowBox[{"c", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "]"}]}], "]"}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"t", ",", 
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "\[Rule]", 
           RowBox[{"d", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}]}], "]"}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"h", "=", 
         RowBox[{"ToExpression", "[", 
          RowBox[{"StringReplace", "[", 
           RowBox[{
            RowBox[{"ToString", "[", 
             RowBox[{"h", "//", "InputForm"}], "]"}], ",", 
            RowBox[{"t", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "]"}]}], ";", " ", 
        RowBox[{"h", "=", 
         RowBox[{"Integrate", "[", 
          RowBox[{"h", ",", 
           RowBox[{"c", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"h", "=", 
         RowBox[{"ReplaceAll", "[", 
          RowBox[{"h", ",", 
           RowBox[{"Map", "[", 
            RowBox[{"ToExpression", ",", 
             RowBox[{
              RowBox[{"Part", "[", 
               RowBox[{
                RowBox[{"t", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], ",", "2"}], "]"}], "\[Rule]", 
              RowBox[{"Part", "[", 
               RowBox[{
                RowBox[{"t", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], ",", "1"}], "]"}]}]}], 
            "]"}]}], "]"}]}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", 
     RowBox[{"g", "=", "n"}], ";", 
     RowBox[{"Map", "[", 
      RowBox[{"Clear", ",", "c"}], "]"}], ";", 
     RowBox[{"Simplify", "[", "h", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ExprComp`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExprComp", "[", 
   RowBox[{"x_", ",", "z___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", "x", "}"}]}], ",", "b", ",", 
      RowBox[{"h", "=", 
       RowBox[{"{", "}"}]}], ",", "F", ",", "q", ",", 
      RowBox[{"t", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"F", "[", "y_List", "]"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"c", "=", 
           RowBox[{"{", "}"}]}], ",", "d", ",", "p", ",", "k", ",", 
          RowBox[{"j", "=", "1"}]}], "}"}], ",", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", 
           RowBox[{"j", "\[LessEqual]", 
            RowBox[{"Length", "[", "y", "]"}]}], ",", 
           RowBox[{"j", "++"}], ",", 
           RowBox[{
            RowBox[{"k", "=", "1"}], ";", 
            RowBox[{"While", "[", 
             RowBox[{
              RowBox[{"k", "<", "Infinity"}], ",", 
              RowBox[{
               RowBox[{"p", "=", 
                RowBox[{"y", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}], ";", " ", 
               RowBox[{"a", "=", 
                RowBox[{"Quiet", "[", 
                 RowBox[{"Check", "[", 
                  RowBox[{
                   RowBox[{"Part", "[", 
                    RowBox[{"p", ",", "k"}], "]"}], ",", "$Failed"}], "]"}], 
                 "]"}]}], ";", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"a", "===", "$Failed"}], ",", 
                 RowBox[{"Break", "[", "]"}], ",", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"!", 
                    RowBox[{"SameQ", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{"{", "}"}]}], "]"}]}], ",", 
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"c", ",", "a"}], "]"}]}], "]"}]}], "]"}], ";", 
               " ", 
               RowBox[{"k", "++"}]}]}], "]"}]}]}], "]"}], ";", "c"}]}], 
       "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"q", "=", 
      RowBox[{"F", "[", "a", "]"}]}], ";", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"q", "\[NotEqual]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"h", ",", "q"}], "]"}], ";", 
        RowBox[{"q", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"F", "[", 
              RowBox[{"{", "#", "}"}], "]"}], "&"}], ",", "q"}], "]"}], 
          "]"}]}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", "z", "}"}], "\[NotEqual]", 
         RowBox[{"{", "}"}]}], "&&", 
        RowBox[{"!", 
         RowBox[{"HowAct", "[", "z", "]"}]}]}], ",", 
       RowBox[{"z", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"#", ",", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"NumberQ", "[", "#", "]"}]}], "&"}]}], "]"}], "&"}], 
          ",", "h"}], "]"}]}]}], "]"}], ";", 
     RowBox[{"Sort", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", "h", "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", "#1", "]"}], "===", 
            RowBox[{"Abs", "[", "#2", "]"}]}], "&"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"NumberQ", "[", "#", "]"}]}], "&"}]}], "]"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SortString`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SortString", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Greater", ",", "Less"}], "}"}], ",", "y"}], "]"}]}]}], "]"}],
   ":=", 
  RowBox[{"StringJoin", "[", 
   RowBox[{"Sort", "[", 
    RowBox[{
     RowBox[{"Characters", "[", "x", "]"}], ",", 
     RowBox[{
      RowBox[{"y", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ToCharacterCode", "[", "#1", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"ToCharacterCode", "[", "#2", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SortLS`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SortLS", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"ListQ", "[", "x", "]"}], "||", 
      RowBox[{"StringQ", "[", "x", "]"}], "||", 
      RowBox[{"IntegerQ", "[", "x", "]"}]}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"ListQ", "[", "x", "]"}], ",", 
    RowBox[{"Sort", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"StringQ", "[", "x", "]"}], ",", "Evaluate", ",", 
       "ToExpression"}], "]"}], "[", 
     RowBox[{"StringJoin", "[", 
      RowBox[{"Sort", "[", 
       RowBox[{
        RowBox[{"Characters", "[", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"StringQ", "[", "x", "]"}], ",", "x", ",", 
           RowBox[{"ToString", "[", "x", "]"}]}], "]"}], "]"}], ",", "y"}], 
       "]"}], "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`HelpPrint`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HelpPrint", "[", 
   RowBox[{"n_", "/;", 
    RowBox[{"IntegerQ", "[", "n", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Out", "[", "n", "]"}]}], ",", "b", ",", 
      RowBox[{"k", "=", 
       RowBox[{"n", "+", "1"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"ToString", "[", "a", "]"}], "]"}], ";", " ", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "<", "Infinity"}], ",", 
       RowBox[{
        RowBox[{"b", "=", 
         RowBox[{"ToString", "[", 
          RowBox[{"ToExpression", "[", 
           RowBox[{"\"\<%\>\"", "<>", 
            RowBox[{"ToString", "[", "k", "]"}]}], "]"}], "]"}]}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"StringFreeQ", "[", 
            RowBox[{"b", ",", "a"}], "]"}]}], ",", 
          RowBox[{"Return", "[", 
           RowBox[{"\"\<End of HelpBase on context \>\"", "<>", "a"}], "]"}], 
          ",", 
          RowBox[{"Print", "[", "b", "]"}]}], "]"}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`HelpBasePac`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HelpBasePac", "[", 
   RowBox[{
    RowBox[{"x_", " ", "/;", " ", 
     RowBox[{"ContextQ", "[", "x", "]"}]}], ",", " ", "y___"}], "]"}], " ", ":=",
   " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "y", "}"}], " ", "!=", " ", 
        RowBox[{"{", "}"}]}], ",", " ", 
       RowBox[{"Information", "[", "#1", "]"}], ",", " ", 
       RowBox[{"ToExpression", "[", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"\"\<?\>\"", ",", " ", "#1"}], "]"}], "]"}]}], "]"}], " ", 
     "&"}], " ", ")"}], " ", "/@", " ", 
   RowBox[{"NamesContext", "[", "x", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`UserLib`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UserLib", "[", 
   RowBox[{
    RowBox[{"L_", "/;", 
     RowBox[{"FileExistsQ", "[", "L", "]"}]}], ",", 
    RowBox[{"f_", "/;", 
     RowBox[{"ListQ", "[", "f", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"b", "=", "\"\<\>\""}], ",", "c", ",", 
      RowBox[{"d", "=", "0"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "===", "\"\<print\>\""}], "&&", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "===", "\"\<all\>\""}], "&&", 
       RowBox[{"!", 
        RowBox[{"EmptyFileQ", "[", "L", "]"}]}]}], ",", 
      RowBox[{"FilePrint", "[", "L", "]"}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "===", "\"\<print\>\""}], "&&", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", "\"\<all\>\""}], "&&", 
         RowBox[{"!", 
          RowBox[{"EmptyFileQ", "[", "L", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"a", "=", 
          RowBox[{"OpenRead", "[", "L", "]"}]}], ";", 
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{"b", "\[NotEqual]", "\"\<EndOfFile\>\""}], ",", 
           RowBox[{
            RowBox[{"b", "=", 
             RowBox[{"Read", "[", 
              RowBox[{"a", ",", "String"}], "]"}]}], ";", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"SuffPref", "[", 
               RowBox[{"b", ",", 
                RowBox[{
                 RowBox[{"f", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "<>", "\"\<[\>\""}], ",", 
                "1"}], "]"}], ",", 
              RowBox[{
               RowBox[{"Print", "[", "b", "]"}], ";", " ", 
               RowBox[{"d", "=", "1"}], ";", 
               RowBox[{"Continue", "[", "]"}]}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"d", "==", "1"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"b", "===", "\"\<\\\"$$$$$$\\\"\>\""}], ",", 
                  RowBox[{
                   RowBox[{"Close", "[", "a", "]"}], ";", " ", 
                   RowBox[{"Break", "[", "]"}]}], ",", 
                  RowBox[{
                   RowBox[{"Print", "[", "b", "]"}], ";", " ", 
                   RowBox[{"Continue", "[", "]"}]}]}], "]"}], ",", 
                RowBox[{"Continue", "[", "]"}]}], "]"}]}], "]"}]}]}], "]"}], 
         ";", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"d", "\[Equal]", "1"}], ",", "Null", ",", 
           RowBox[{"Print", "[", 
            RowBox[{
             RowBox[{"f", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "<>", 
             "\"\< is absent in Library \>\"", "<>", 
             RowBox[{"StrStr", "[", "L", "]"}]}], "]"}]}], "]"}]}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "===", "\"\<add\>\""}], ",", 
          RowBox[{
           RowBox[{"PutAppend", "[", 
            RowBox[{
             RowBox[{"ToExpression", "[", 
              RowBox[{"\"\<Definition[\>\"", "<>", 
               RowBox[{"f", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "<>", "\"\<]\>\""}], "]"}], 
             ",", "L"}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"PutAppend", "[", 
            RowBox[{"\"\<$$$$$$\>\"", ",", "L"}], "]"}]}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"f", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "===", "\"\<load\>\""}], "&&", 
             RowBox[{
              RowBox[{"f", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "===", "\"\<all\>\""}], "&&", 
             RowBox[{"!", 
              RowBox[{"EmptyFileQ", "[", "L", "]"}]}]}], ",", 
            RowBox[{
             RowBox[{"Get", "[", "L", "]"}], ";"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"f", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "===", "\"\<load\>\""}], "&&", 
               RowBox[{
                RowBox[{"f", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", 
                "\"\<all\>\""}], "&&", 
               RowBox[{"!", 
                RowBox[{"EmptyFileQ", "[", "L", "]"}]}]}], ",", 
              RowBox[{
               RowBox[{"a", "=", 
                RowBox[{"OpenRead", "[", "L", "]"}]}], ";", " ", 
               RowBox[{"c", "=", "\"\<\>\""}], ";", 
               RowBox[{"While", "[", 
                RowBox[{
                 RowBox[{"b", "\[NotEqual]", "\"\<EndOfFile\>\""}], ",", 
                 RowBox[{
                  RowBox[{"b", "=", 
                   RowBox[{"Read", "[", 
                    RowBox[{"a", ",", "String"}], "]"}]}], ";", " ", 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"SuffPref", "[", 
                    RowBox[{"b", ",", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "<>", "\"\<[\>\""}], ",", 
                    "1"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"c", "=", 
                    RowBox[{"c", "<>", "b"}]}], ";", " ", 
                    RowBox[{"d", "=", "1"}], ";", 
                    RowBox[{"Continue", "[", "]"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"d", "\[Equal]", "1"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"b", "===", "\"\<\\\"$$$$$$\\\"\>\""}], ",", 
                    RowBox[{
                    RowBox[{"Close", "[", "a", "]"}], ";", 
                    RowBox[{"Break", "[", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"c", "=", 
                    RowBox[{"c", "<>", "b"}]}], ";", 
                    RowBox[{"Continue", "[", "]"}]}]}], "]"}], ",", 
                    RowBox[{"Continue", "[", "]"}]}], "]"}]}], "]"}]}]}], 
                "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"d", "\[Equal]", "1"}], ",", 
                 RowBox[{"ToExpression", "[", "c", "]"}], ",", 
                 RowBox[{"Print", "[", 
                  RowBox[{
                   RowBox[{"f", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "<>", 
                   "\"\< is absent in Library \>\"", "<>", 
                   RowBox[{"StrStr", "[", "L", "]"}]}], "]"}]}], "]"}]}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "===", "\"\<names\>\""}], "&&", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "===", "\"\<list\>\""}], "&&", 
                 RowBox[{"!", 
                  RowBox[{"EmptyFileQ", "[", "L", "]"}]}]}], ",", 
                RowBox[{
                 RowBox[{"a", "=", 
                  RowBox[{"OpenRead", "[", "L", "]"}]}], ";", " ", 
                 RowBox[{"c", "=", 
                  RowBox[{"{", "}"}]}], ";", 
                 RowBox[{"While", "[", 
                  RowBox[{
                   RowBox[{"b", "\[NotEqual]", "\"\<EndOfFile\>\""}], ",", 
                   RowBox[{
                    RowBox[{"b", "=", 
                    RowBox[{"Read", "[", 
                    RowBox[{"a", ",", "String"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Quiet", "[", 
                    RowBox[{"StringTake", "[", 
                    RowBox[{"b", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "]"}], "]"}], 
                    "\[NotEqual]", "\"\< \>\""}], "&&", 
                    RowBox[{"b", "\[NotEqual]", "\"\<\\\"$$$$$$\\\"\>\""}]}], 
                    ",", 
                    RowBox[{"c", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"c", ",", 
                    RowBox[{"StringTake", "[", 
                    RowBox[{"b", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"b", ",", "\"\<[\>\""}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
                    "]"}]}], "]"}]}], ",", 
                    RowBox[{"Continue", "[", "]"}]}], "]"}]}]}], "]"}], ";", 
                 " ", 
                 RowBox[{"Close", "[", "a", "]"}], ";", " ", 
                 RowBox[{"Return", "[", "c", "]"}]}], ",", 
                RowBox[{"Defer", "[", 
                 RowBox[{"UserLib", "[", 
                  RowBox[{"L", ",", "f"}], "]"}], "]"}]}], "]"}]}], "]"}]}], 
           "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`UnevaluatedQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UnevaluatedQ", "[", 
   RowBox[{
    RowBox[{"F_", "/;", 
     RowBox[{"SymbolQ", "[", "F", "]"}]}], ",", "x___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"Check", "[", 
        RowBox[{
         RowBox[{"F", "[", "x", "]"}], ",", "\"\<error\>\"", ",", 
         RowBox[{"F", "::", "argx"}]}], "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"a", "===", "\"\<error\>\""}], ",", "\"\<ErrorInArgs\>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ToString1", "[", "a", "]"}], "===", 
         RowBox[{
          RowBox[{"ToString", "[", "F", "]"}], "<>", "\"\<[\>\"", "<>", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", "x", "}"}], "\[Equal]", 
             RowBox[{"{", "}"}]}], ",", "\"\<\>\"", ",", 
            RowBox[{
             RowBox[{"ListStrToStr", "[", 
              RowBox[{"Map", "[", 
               RowBox[{"ToString1", ",", 
                RowBox[{"{", "x", "}"}]}], "]"}], "]"}], "<>", 
             "\"\<]\>\""}]}], "]"}]}]}], ",", "True", ",", "False"}], "]"}]}],
      "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StringTake1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StringTake1", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", "y_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"ToString", ",", 
         RowBox[{"Map", "[", 
          RowBox[{"InputForm", ",", "y"}], "]"}]}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", "c", ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"c", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{"StringPosition", "[", 
        RowBox[{"x", ",", "a"}], "]"}], "]"}]}], ";", 
     RowBox[{"b", "=", 
      RowBox[{"{", 
       RowBox[{"StringTake", "[", 
        RowBox[{"x", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"c", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], "]"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{
         RowBox[{"Length", "[", "c", "]"}], "-", "1"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{"b", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"b", ",", 
          RowBox[{"StringTake", "[", 
           RowBox[{"x", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"c", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"c", "[", 
                 RowBox[{"[", 
                  RowBox[{"k", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
           "]"}]}], "]"}]}]}], "]"}], ";", " ", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"Append", "[", 
        RowBox[{"b", ",", 
         RowBox[{"StringTake", "[", 
          RowBox[{"x", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"c", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"#", "\[NotEqual]", "\"\<\>\""}], "&"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StringTake2`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StringTake2", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", "y_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"ToString", ",", 
         RowBox[{"Map", "[", 
          RowBox[{"InputForm", ",", "y"}], "]"}]}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{"b", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"b", ",", 
          RowBox[{
           RowBox[{"ToString1", "[", 
            RowBox[{"a", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "]"}], "<>", "\"\<->\>\"", "<>", 
           "\"\<\\\",\\\"\>\""}]}], "]"}]}]}], "]"}], ";", 
     RowBox[{"StringSplit", "[", " ", 
      RowBox[{
       RowBox[{"StringReplace", "[", 
        RowBox[{"x", ",", 
         RowBox[{"ToExpression", "[", "b", "]"}]}], "]"}], ",", "\"\<,\>\""}],
       "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StringTake3`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StringTake3", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", "y_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"FromCharacterCode", "[", "2", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"ToString", ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", "y", "}"}], "]"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{"StringSplit", "[", 
     RowBox[{
      RowBox[{"StringReplace", "[", 
       RowBox[{"x", ",", 
        RowBox[{"GenRules", "[", 
         RowBox[{"b", ",", "a"}], "]"}]}], "]"}], ",", "a"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ListStrList`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListStrList", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"StringQ", "[", "x", "]"}], "||", 
     RowBox[{"ListQ", "[", "x", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", "=", 
      RowBox[{"FromCharacterCode", "[", "2", "]"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"StringQ", "[", "x", "]"}], "&&", 
       RowBox[{"!", 
        RowBox[{"StringFreeQ", "[", 
         RowBox[{"x", ",", "a"}], "]"}]}]}], ",", 
      RowBox[{"Map", "[", 
       RowBox[{"ToExpression", ",", 
        RowBox[{"StringSplit", "[", 
         RowBox[{"x", ",", "a"}], "]"}]}], "]"}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"ListQ", "[", "x", "]"}], ",", 
        RowBox[{"StringTake", "[", 
         RowBox[{
          RowBox[{"StringJoin", "[", 
           RowBox[{"Map14", "[", 
            RowBox[{"StringJoin", ",", 
             RowBox[{"Map", "[", 
              RowBox[{"ToString1", ",", "x"}], "]"}], ",", "a"}], "]"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "2"}]}], "}"}]}], "]"}], ",", "x"}], "]"}]}], 
     "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ExtrVarsOfStr`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExtrVarsOfStr", "[", 
   RowBox[{
    RowBox[{"S_", "/;", 
     RowBox[{"StringQ", "[", "S", "]"}]}], ",", 
    RowBox[{"t_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", "t"}], "]"}]}], ",", "x___"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"k", ",", "j", ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", "p", ",", 
      RowBox[{"a", "=", 
       RowBox[{"StringLength", "[", "S", "]"}]}], ",", 
      RowBox[{"q", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"ToString", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "9"}], "]"}]}], "]"}]}], ",", 
      RowBox[{"h", "=", "1"}], ",", 
      RowBox[{"c", "=", "\"\<\>\""}], ",", 
      RowBox[{"L", "=", 
       RowBox[{
       "Characters", "[", 
        "\"\<`!@#%^&*(){}:\\\"\\\\/|<>?~-=+[];:'., 1234567890\>\"", "]"}]}], 
      ",", 
      RowBox[{"R", "=", 
       RowBox[{
       "Characters", "[", "\"\<`!@#%^&*(){}:\\\"\\\\/|<>?~=[];:'., \>\"", 
        "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Label", "[", "G", "]"}], ";", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "h"}], ",", 
       RowBox[{"k", "\[LessEqual]", "a"}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"p", "=", 
         RowBox[{"StringTake", "[", 
          RowBox[{"S", ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "k"}], "}"}]}], "]"}]}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"MemberQ", "[", 
            RowBox[{"L", ",", "p"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"c", "=", 
            RowBox[{"c", "<>", "p"}]}], ";", " ", 
           RowBox[{"j", "=", 
            RowBox[{"k", "+", "1"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"While", "[", 
            RowBox[{
             RowBox[{"j", "\[LessEqual]", "a"}], ",", 
             RowBox[{
              RowBox[{"p", "=", 
               RowBox[{"StringTake", "[", 
                RowBox[{"S", ",", 
                 RowBox[{"{", 
                  RowBox[{"j", ",", "j"}], "}"}]}], "]"}]}], ";", " ", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"!", 
                 RowBox[{"MemberQ", "[", 
                  RowBox[{"R", ",", "p"}], "]"}]}], ",", 
                RowBox[{"c", "=", 
                 RowBox[{"c", "<>", "p"}]}], ",", 
                RowBox[{
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"d", ",", "c"}], "]"}], ";", 
                 RowBox[{"h", "=", "j"}], ";", 
                 RowBox[{"c", "=", "\"\<\>\""}], ";", 
                 RowBox[{"Goto", "[", "G", "]"}]}]}], "]"}], ";", 
              RowBox[{"j", "++"}]}]}], "]"}]}]}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"d", ",", "c"}], "]"}], ";", 
     RowBox[{"d", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"d", ",", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"q", ",", "#"}], "]"}]}], "&"}]}], "]"}]}], ";", " ", 
     RowBox[{"d", "=", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"StringReplace", "[", 
            RowBox[{"#", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\"\<+\>\"", "->", "\"\<\>\""}], ",", 
               RowBox[{"\"\<-\>\"", "->", "\"\<\>\""}], ",", 
               RowBox[{"\"\<_\>\"", "->", "\"\<\>\""}]}], "}"}]}], "]"}], 
           "&"}], ",", "d"}], "]"}], ",", 
        RowBox[{
         RowBox[{"#", "\[NotEqual]", "\"\<\>\""}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"d", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Select", "[", 
        RowBox[{"d", ",", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"StringFreeQ", "[", 
            RowBox[{"S", ",", "#"}], "]"}]}], "&"}]}], "]"}], "]"}]}], ";", 
     " ", 
     RowBox[{"d", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"StringSplit", "[", 
           RowBox[{"#", ",", "\"\<, \>\""}], "]"}], "&"}], ",", "d"}], "]"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"t", "\[Equal]", "1"}], ",", "Flatten", ",", "Sort"}], "]"}], 
      "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "x", "}"}], "\[NotEqual]", 
          RowBox[{"{", "}"}]}], ",", "Flatten", ",", "DeleteDuplicates"}], 
        "]"}], "[", 
       RowBox[{"Select", "[", 
        RowBox[{"d", ",", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<\\\\\>\"", ",", "\"\<#\>\"", ",", "\"\<\>\""}], 
              "}"}], ",", 
             RowBox[{"StringTake", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], "]"}]}], "&"}]}], 
        "]"}], "]"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Rename`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rename", "[", 
   RowBox[{
    RowBox[{"x_String", "/;", 
     RowBox[{"HowAct", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"!", 
      RowBox[{"HowAct", "[", "y", "]"}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"b", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}]}], ",", "c", 
      ",", "d"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"SameQ", "[", 
        RowBox[{"b", ",", 
         RowBox[{"{", "$Failed", "}"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{"Attributes", "[", "x", "]"}]}], ";", 
       RowBox[{"c", "=", 
        RowBox[{"ClearAllAttributes", "[", "x", "]"}]}], ";", " ", 
       RowBox[{"d", "=", 
        RowBox[{"StringLength", "[", "x", "]"}]}], ";", " ", 
       RowBox[{"c", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"ToString", "[", "y", "]"}], "<>", 
            RowBox[{"StringTake", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"d", "+", "1"}], ",", 
                RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "&"}], ",", "b"}], 
         "]"}]}], ";", " ", 
       RowBox[{"Map", "[", 
        RowBox[{"ToExpression", ",", "c"}], "]"}], ";", " ", 
       RowBox[{"Clear", "[", "x", "]"}], ";", " ", 
       RowBox[{"SetAttributes", "[", 
        RowBox[{"y", ",", "a"}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Rename1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rename1", "[", 
   RowBox[{
    RowBox[{"x_String", "/;", 
     RowBox[{"HowAct", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"!", 
      RowBox[{"HowAct", "[", "y", "]"}]}]}], ",", "z___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Attributes", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{
        RowBox[{"Definition2", "[", "x", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"-", "2"}]}], "]"}], "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"ToString", "[", "y", "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringReplacePart", "[", 
          RowBox[{"#", ",", "c", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"StringLength", "[", "x", "]"}]}], "}"}]}], "]"}], "&"}],
         ",", "b"}], "]"}]}], ";", 
     RowBox[{"ToExpression", "[", "b", "]"}], ";", " ", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
      "\"\<SetAttributes[\>\"", "<>", "c", "<>", "\"\<, \>\"", "<>", " ", 
       RowBox[{"ToString", "[", "a", "]"}], "<>", "\"\<]\>\""}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "z", "}"}], "==", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"ToExpression", "[", 
        RowBox[{"\"\<ClearAttributes[\>\"", "<>", "x", "<>", "\"\<, \>\"", "<>", 
         RowBox[{"ToString", "[", "a", "]"}], "<>", "\"\<]; Remove[\>\"", "<>",
          "x", "<>", "\"\<]\>\""}], "]"}], ",", "Null"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`RenameH`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RenameH", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"HeadingQ1", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"!", 
      RowBox[{"HowAct", "[", "y", "]"}]}]}], ",", "z___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"c", ",", 
      RowBox[{"a", "=", 
       RowBox[{"HeadName", "[", "x", "]"}]}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"StandHead", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"ToExpression", "[", 
        RowBox[{"\"\<Attributes[\>\"", "<>", 
         RowBox[{"HeadName", "[", "x", "]"}], "<>", "\"\<]\>\""}], "]"}]}]}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"c", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{"PureDefinition", "[", "a", "]"}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"c", "==", 
        RowBox[{"{", "$Failed", "}"}]}], ",", "$Failed", ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"c", "\[Equal]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"Return", "[", "$Failed", "]"}], ",", 
          RowBox[{"ToExpression", "[", 
           RowBox[{
           "\"\<ClearAllAttributes[\>\"", "<>", "a", "<>", "\"\<]\>\""}], 
           "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"ToExpression", "[", 
         RowBox[{
          RowBox[{"ToString", "[", "y", "]"}], "<>", 
          RowBox[{"DelSuffPref", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Select", "[", 
              RowBox[{"c", ",", 
               RowBox[{
                RowBox[{"SuffPref", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"d", "<>", "\"\< := \>\""}], ",", "1"}], "]"}], 
                "&"}]}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "a", ",", "1"}], "]"}]}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", "z", "}"}], "\[Equal]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"RemProcOnHead", "[", "d", "]"}]}], "]"}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"SameQ", "[", 
            RowBox[{
             RowBox[{"PureDefinition", "[", "a", "]"}], ",", "$Failed"}], 
            "]"}]}], ",", 
          RowBox[{"ToExpression", "[", 
           RowBox[{"\"\<SetAttributes[\>\"", "<>", 
            RowBox[{"ToString", "[", "a", "]"}], "<>", "\"\<, \>\"", "<>", 
            RowBox[{"ToString", "[", "b", "]"}], "<>", "\"\<]\>\""}], "]"}]}],
          "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"\"\<SetAttributes[\>\"", "<>", 
          RowBox[{"ToString", "[", "y", "]"}], "<>", "\"\<, \>\"", "<>", 
          RowBox[{"ToString", "[", "b", "]"}], "<>", "\"\<]\>\""}], "]"}], 
        ";"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`RenBlockFuncMod`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RenBlockFuncMod", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"SymbolQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"t", "=", 
       RowBox[{"{", "}"}]}], ",", "h", ",", 
      RowBox[{"a", "=", 
       RowBox[{"Options", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Attributes", "[", "x", "]"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", "n", ",", 
      RowBox[{"c", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}]}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"HeadPF", "[", "x", "]"}], "}"}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "c", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"h", "=", 
         RowBox[{"StringReplace", "[", 
          RowBox[{
           RowBox[{"c", "[", 
            RowBox[{"[", "k", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"StringJoin", "[", 
             RowBox[{
              RowBox[{"d", "[", 
               RowBox[{"[", "k", "]"}], "]"}], ",", "\"\< := \>\""}], "]"}], 
            "->", "\"\<\>\""}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"h", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"SuffPref", "[", 
            RowBox[{"h", ",", "\"\<Module[{\>\"", ",", "1"}], "]"}], ",", 
           "\"\<M\>\"", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"SuffPref", "[", 
              RowBox[{"h", ",", "\"\<Block[{\>\"", ",", "1"}], "]"}], ",", 
             "\"\<B\>\"", ",", "\"\<F\>\""}], "]"}]}], "]"}]}], ";", " ", 
        RowBox[{"n", "=", 
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{"Unique", "[", "y", "]"}], "]"}], "<>", "h"}]}], ";", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"t", ",", "n"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"StringReplace", "[", 
          RowBox[{
           RowBox[{"c", "[", 
            RowBox[{"[", "k", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"ToString", "[", "x", "]"}], "<>", "\"\<[\>\""}], "->", 
            RowBox[{"n", "<>", "\"\<[\>\""}]}], ",", "1"}], "]"}], "]"}], ";",
         " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"a", "\[NotEqual]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"ToExpression", "[", 
           RowBox[{"\"\<SetOptions[\>\"", "<>", "n", "<>", "\"\<, \>\"", "<>", 
            RowBox[{"ToString", "[", "a", "]"}], "<>", "\"\<]\>\""}], "]"}]}],
          "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"b", "\[NotEqual]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"ToExpression", "[", 
           RowBox[{"\"\<SetAttributes[\>\"", "<>", "n", "<>", "\"\<, \>\"", "<>", 
            RowBox[{"ToString", "[", "b", "]"}], "<>", "\"\<]\>\""}], "]"}]}],
          "]"}]}]}], "]"}], ";", " ", 
     RowBox[{"ClearAllAttributes", "[", "x", "]"}], ";", 
     RowBox[{"ClearAll", "[", "x", "]"}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "t", "]"}], "\[Equal]", "1"}], ",", 
       RowBox[{"t", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "t"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`RenBlockFuncMod1`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RenBlockFuncMod1", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{"SymbolQ", "[", "y", "]"}], "&&", 
      RowBox[{"!", 
       RowBox[{"HowAct", "[", "y", "]"}]}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Options", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Attributes", "[", "x", "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ToExpression", "[", 
      RowBox[{"StringReplace", "[", 
       RowBox[{
        RowBox[{"PureDefinition", "[", "x", "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"ToString", "[", "x", "]"}], "<>", "\"\<[\>\""}], "\[Rule]", 
         RowBox[{
          RowBox[{"ToString", "[", "y", "]"}], "<>", "\"\<[\>\""}]}], ",", 
        "1"}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ClearAttributes", "[", 
      RowBox[{"x", ",", "b"}], "]"}], ";", 
     RowBox[{"ClearAll", "[", "x", "]"}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"a", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", "Null", ",", 
       RowBox[{"SetOptions", "[", 
        RowBox[{"y", ",", "a"}], "]"}]}], "]"}], ";", 
     RowBox[{"SetAttributes", "[", 
      RowBox[{"y", ",", "b"}], "]"}], ";", "y"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DefAttributesH`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DefAttributesH", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"HeadingQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Set\>\"", ",", "\"\<Clear\>\""}], "}"}], ",", "y"}], 
      "]"}]}], ",", "z___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "a", "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"AttributesQ", "[", 
       RowBox[{
        RowBox[{"{", "z", "}"}], ",", 
        RowBox[{"a", "=", 
         RowBox[{"Unique", "[", "g", "]"}]}]}], "]"}], ",", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"y", "<>", "\"\<Attributes[\>\"", "<>", 
        RowBox[{"HeadName", "[", "x", "]"}], "<>", "\"\<,\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"{", "z", "}"}], "]"}], "<>", "\"\<]\>\""}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"$Failed", ",", "a"}], "}"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`AttributesH`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AttributesH", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"HeadingQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Attributes1", "[", 
   RowBox[{"Symbol", "[", 
    RowBox[{"HeadName", "[", "x", "]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SymbolQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SymbolQ", "[", "x_", "]"}], ":=", 
  RowBox[{"!", 
   RowBox[{"SameQ", "[", 
    RowBox[{
     RowBox[{"Quiet", "[", 
      RowBox[{"Check", "[", 
       RowBox[{
        RowBox[{"ToExpression", "[", 
         RowBox[{"\"\<Attributes[\>\"", "<>", 
          RowBox[{"ToString", "[", "x", "]"}], "<>", "\"\<]\>\""}], "]"}], 
        ",", "$Failed"}], "]"}], "]"}], ",", "$Failed"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SymbolsOfString`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SymbolsOfString", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"Sequences", "[", "#", "]"}], "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"32", ",", "35"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"37", ",", "47"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"58", ",", "64"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"91", ",", "91"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"93", ",", "96"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"123", ",", "126"}], "}"}]}], "}"}]}], "]"}], "]"}]}], 
      ",", "b"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"StringSplit", "[", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"x", ",", 
          RowBox[{"GenRules", "[", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{"FromCharacterCode", ",", "a"}], "]"}], ",", 
            "\"\< \>\""}], "]"}]}], "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "y", "}"}], "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", "b", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"y", "\[Equal]", "1"}], ",", 
         RowBox[{"Select", "[", 
          RowBox[{"b", ",", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"MemberQ3", "[", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{"48", ",", "57"}], "]"}], ",", 
               RowBox[{"ToCharacterCode", "[", "#", "]"}]}], "]"}]}], "&"}]}],
           "]"}], ",", " ", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"b", ",", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"Quiet", "[", 
                RowBox[{"SystemQ", "[", "#", "]"}], "]"}]}], "&"}]}], "]"}], 
           ",", 
           RowBox[{
            RowBox[{"NameQ", "[", "#", "]"}], "&"}]}], "]"}]}], "]"}]}], 
      "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`TestBFM`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TestBFM", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}]}], ",", "b", 
      ",", "d", ",", "h", ",", "p", ",", "k", ",", "j", ",", 
      RowBox[{"t", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"$Failed", ",", "\"\<System\>\""}], "}"}], ",", 
         RowBox[{"a", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"Return", "[", "$Failed", "]"}], ",", 
       RowBox[{
        RowBox[{"b", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"HeadPF", "[", "x", "]"}], "}"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "1"}], ",", 
          RowBox[{"k", "\[LessEqual]", 
           RowBox[{"Length", "[", "a", "]"}]}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{
           RowBox[{"d", "=", 
            RowBox[{"a", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], ";", " ", 
           RowBox[{"p", "=", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"b", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "<>", "#"}], "&"}], ",", 
              RowBox[{"{", 
               RowBox[{"\"\< := \>\"", ",", "\"\< = \>\""}], "}"}]}], "]"}]}],
            ";", " ", 
           RowBox[{"h", "=", 
            RowBox[{"StringReplace", "[", 
             RowBox[{"d", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"p", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", "\"\<\>\""}], 
                ",", 
                RowBox[{
                 RowBox[{"p", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "\[Rule]", "\"\<\>\""}]}], 
               "}"}], ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"SuffPref", "[", 
              RowBox[{"h", ",", "\"\<Module[{\>\"", ",", "1"}], "]"}], ",", 
             RowBox[{"t", "=", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"t", ",", "\"\<Module\>\""}], "]"}]}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"SuffPref", "[", 
                RowBox[{"h", ",", "\"\<Block[{\>\"", ",", "1"}], "]"}], ",", 
               RowBox[{"t", "=", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"t", ",", "\"\<Block\>\""}], "]"}]}], ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"SuffPref", "[", 
                  RowBox[{"h", ",", "\"\<DynamicModule[{\>\"", ",", "1"}], 
                  "]"}], ",", 
                 RowBox[{"t", "=", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"t", ",", "\"\<DynamicModule\>\""}], "]"}]}], ",", 
                 RowBox[{"t", "=", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"t", ",", "\"\<Function\>\""}], "]"}]}]}], "]"}]}],
               "]"}]}], "]"}]}]}], "]"}]}]}], "]"}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "t", "]"}], "\[Equal]", "1"}], ",", 
       RowBox[{"t", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "t"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SortRevStr`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SortRevStr", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Reverse", ",", "Sort"}], "}"}], ",", "y"}], "]"}]}], ",", 
    "z___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", "=", 
      RowBox[{"Characters", "[", "x", "]"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"y", "===", "Reverse"}], ",", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"y", "[", "a", "]"}], "]"}], ",", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", "z", "}"}], "\[NotEqual]", 
           RowBox[{"{", "}"}]}], "&&", 
          RowBox[{"z", "===", "SymbolGreater"}]}], ",", 
         RowBox[{"Sort", "[", 
          RowBox[{"a", ",", 
           RowBox[{
            RowBox[{"z", "[", 
             RowBox[{"#1", ",", "#2"}], "]"}], "&"}]}], "]"}], ",", 
         RowBox[{"Sort", "[", "a", "]"}]}], "]"}], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`TestArgsCall`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TestArgsCall", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"HeadPF", "[", "x", "]"}], "}"}], "]"}]}], ",", 
      RowBox[{"c", "=", "\"\<$$$\>\""}], ",", 
      RowBox[{"n", "=", 
       RowBox[{"ToString", "[", "x", "]"}]}], ",", "d", ",", "p", ",", 
      RowBox[{"h", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "b", "]"}]}], ",", 
       RowBox[{
        RowBox[{"d", "=", 
         RowBox[{"c", "<>", "n"}]}], ";", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"c", "<>", 
          RowBox[{"b", "[", 
           RowBox[{"[", "k", "]"}], "]"}], "<>", "\"\<:=90\>\""}], "]"}], ";", 
        RowBox[{"p", "=", 
         RowBox[{
          RowBox[{"Symbol", "[", "d", "]"}], "[", "y", "]"}]}], ";", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"\"\<Remove[\>\"", "<>", "d", "<>", "\"\<]\>\""}], "]"}], 
        ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"p", "===", "90"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"h", ",", 
            RowBox[{"a", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], "]"}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "h", "]"}], "\[Equal]", "1"}], ",", 
       RowBox[{"h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "h"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`TestArgsLocals`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TestArgsLocals", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ArgsBFM", "[", 
        RowBox[{"x", ",", "90"}], "]"}]}], ",", "b", ",", "a1", ",", "b1", 
      ",", 
      RowBox[{"c1", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"d1", "=", 
       RowBox[{"{", "}"}]}], ",", "c", ",", "g", ",", "n", ",", "f", ",", "s",
       ",", " ", 
      RowBox[{"p", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}]}]}], "}"}], 
    ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "p", "]"}], ">", "1"}], ",", 
        RowBox[{"Locals1", "[", "x", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Locals1", "[", "x", "]"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"g", "=", 
      RowBox[{"Length", "[", "p", "]"}]}], ";", " ", 
     RowBox[{"b", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"#", "===", "\"\<Function\>\""}], ",", 
           RowBox[{"{", "}"}], ",", "#"}], "]"}], "&"}], ",", "b"}], "]"}]}], 
     ";", "  ", 
     RowBox[{"a1", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "#", "]"}], "\[Equal]", 
          RowBox[{"Length", "[", 
           RowBox[{"DeleteDuplicates", "[", "#", "]"}], "]"}]}], "&"}], ",", 
        "a"}], "]"}]}], ";", 
     RowBox[{"b1", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "#", "]"}], "\[Equal]", 
          RowBox[{"Length", "[", 
           RowBox[{"DeleteDuplicates", "[", "#", "]"}], "]"}]}], "&"}], ",", 
        "b"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"c1", ",", 
         RowBox[{
          RowBox[{"Intersection", "[", 
           RowBox[{
            RowBox[{"a", "[", 
             RowBox[{"[", "k", "]"}], "]"}], ",", 
            RowBox[{"b", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "\[Equal]", 
          RowBox[{"{", "}"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "g"}], "}"}]}], "]"}], ";", " ", 
     RowBox[{"c", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Set", "[", 
            RowBox[{"n", ",", 
             RowBox[{"{", 
              RowBox[{"a1", ",", "b1", ",", "c1"}], "}"}]}], "]"}], "]"}], 
          ",", "False"}], "]"}], ",", "False", ",", "True"}], "]"}]}], ";", 
     RowBox[{"d1", "=", 
      RowBox[{"RestListList", "[", "n", "]"}]}], ";", "  ", 
     RowBox[{"s", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"And", "@@", "#"}], ",", "Nothing", ",", "#"}], "]"}], 
         "&"}], ",", "d1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"f", "[", "z_", "]"}], ":=", 
      RowBox[{"MemberQ", "[", 
       RowBox[{"z", ",", "False"}], "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", "y", "}"}], "\[NotEqual]", 
         RowBox[{"{", "}"}]}], "&&", 
        RowBox[{"!", 
         RowBox[{"HowAct", "[", "y", "]"}]}], "&&", 
        RowBox[{"!", "c"}]}], ",", 
       RowBox[{"y", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"p", "[", 
           RowBox[{"[", 
            RowBox[{"PositionsListCond", "[", 
             RowBox[{"d1", ",", "f"}], "]"}], "]"}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "s", "]"}], "\[Equal]", "1"}], ",", 
            RowBox[{"s", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "s"}], "]"}]}], "}"}]}], 
       ",", "Null"}], "]"}], ";", " ", "c"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`TestFactArgs`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TestFactArgs", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"ProcQ", "[", "x", "]"}], "||", 
      RowBox[{"QFunction", "[", "x", "]"}]}]}], ",", "y__"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", "d", ",", 
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"p", "=", 
       RowBox[{"{", "y", "}"}]}], ",", 
      RowBox[{"a", "=", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"HeadPF", "[", "x", "]"}], "}"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"StrToList", "[", 
       RowBox[{"\"\<{\>\"", "<>", 
        RowBox[{"StringTake", "[", 
         RowBox[{"a", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"StringLength", "[", 
              RowBox[{"ToString", "[", "x", "]"}], "]"}], "+", "2"}], ",", 
            RowBox[{"-", "2"}]}], "}"}]}], "]"}], "<>", "\"\<}\>\""}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringSplit", "[", 
          RowBox[{"#", ",", "\"\<_\>\""}], "]"}], "&"}], ",", "b"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "b", "]"}], "\[Equal]", 
         RowBox[{"Length", "[", "p", "]"}]}], "&&", 
        RowBox[{"StringFreeQ", "[", 
         RowBox[{"a", ",", "\"\<__\>\""}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"k", "\[LessEqual]", 
           RowBox[{"Length", "[", "b", "]"}]}], ",", 
          RowBox[{
           RowBox[{"d", "=", 
            RowBox[{"b", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "d", "]"}], "\[Equal]", "1"}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"c", ",", "True"}], "]"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "d", "]"}], "\[Equal]", "2"}], "&&", 
                RowBox[{"SymbolQ", "[", 
                 RowBox[{"d", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ",", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"c", ",", 
                 RowBox[{
                  RowBox[{"Head", "[", 
                   RowBox[{"p", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "]"}], "===", 
                  RowBox[{"Symbol", "[", 
                   RowBox[{"d", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], "]"}], ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"SuffPref", "[", 
                  RowBox[{
                   RowBox[{"d", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "\"\< /; \>\"", ",", 
                   "1"}], "]"}], ",", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"c", ",", 
                   RowBox[{"ToExpression", "[", 
                    RowBox[{"StringReplace3", "[", 
                    RowBox[{
                    RowBox[{"StringTake", "[", 
                    RowBox[{
                    RowBox[{"d", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"5", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"d", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"p", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "]"}]}], "]"}], "]"}]}], 
                  "]"}]}], "]"}]}], "]"}]}], "]"}], ";", " ", 
           RowBox[{"k", "++"}]}]}], "]"}], ";", " ", "c"}], ",", "$Failed"}], 
      "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SymbolQ1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SymbolQ1", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"ToCharacterCode", "[", 
       RowBox[{"ToString", "[", "x", "]"}], "]"}], "]"}], "\[Equal]", "1"}], 
    ",", " ", "True", ",", " ", "False"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`CatN`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CatN", "[", 
   RowBox[{
    RowBox[{"s_", "/;", 
     RowBox[{"StringQ", "[", "s", "]"}]}], ",", 
    RowBox[{"n_", "/;", 
     RowBox[{
      RowBox[{"IntegerQ", "[", "n", "]"}], "&&", 
      RowBox[{"n", "\[GreaterEqual]", "1"}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "\"\<\>\""}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", "n"}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{"a", "=", 
        RowBox[{"a", "<>", "s"}]}]}], "]"}], ";", "a"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`PartProc`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PartProc", "[", 
   RowBox[{"P_", "/;", 
    RowBox[{"BlockModQ", "[", "P", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", "=", 
      RowBox[{"ProcBody", "[", "P", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"StringReplace", "[", 
       RowBox[{
        RowBox[{"PureDefinition", "[", "P", "]"}], ",", 
        RowBox[{"a", "\[Rule]", "\"\<Procedure Body\>\""}], ",", "1"}], "]"}],
       ",", "a"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`HeadPF`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HeadPF", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}], ",", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"SuffPref", "[", 
            RowBox[{"#", ",", "\"\<Default[\>\"", ",", "1"}], "]"}]}], 
          "&"}]}], "]"}]}], ",", "b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"ToString", "[", "x", "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringTake", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{"StringPosition", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"{", 
                   RowBox[{"\"\< := \>\"", ",", "\"\< = \>\""}], "}"}]}], 
                 "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], "]"}], 
         "&"}], ",", "a"}], "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "b", "]"}], "\[Equal]", "1"}], ",", 
       RowBox[{"b", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "b"}], "]"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Headings`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Headings", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"c", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "\"\<Block\>\"", "}"}], ",", 
         RowBox[{"{", "\"\<Function\>\"", "}"}], ",", 
         RowBox[{"{", "\"\<Module\>\"", "}"}]}], "}"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}]}], ",", "n", 
      ",", "d", ",", "h", ",", "p", ",", "t"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{
        RowBox[{"d", "=", 
         RowBox[{"a", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", 
        RowBox[{"n", "=", 
         RowBox[{"ToString", "[", 
          RowBox[{"Unique", "[", "\"\<agn\>\"", "]"}], "]"}]}], ";", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"n", "<>", "d"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"ClearAll", "[", "p", "]"}], ";", " ", 
        RowBox[{"h", "=", 
         RowBox[{"HeadPF", "[", 
          RowBox[{"t", "=", 
           RowBox[{"n", "<>", 
            RowBox[{"ToString", "[", "x", "]"}]}]}], "]"}]}], ";", 
        RowBox[{"d", "=", 
         RowBox[{"StringTake", "[", 
          RowBox[{"h", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"StringLength", "[", "n", "]"}], "+", "1"}], ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", 
        RowBox[{"BlockFuncModQ", "[", 
         RowBox[{"t", ",", "p"}], "]"}], ";", " ", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"p", "\[Equal]", "\"\<Block\>\""}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"c", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "d"}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"p", "\[Equal]", "\"\<Function\>\""}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{
              RowBox[{"c", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "d"}], "]"}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{
              RowBox[{"c", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", "d"}], "]"}]}], "]"}]}], 
         "]"}], ";", 
        RowBox[{"ToExpression", "[", 
         RowBox[{
         "\"\<Remove[\>\"", "<>", "t", "<>", "\"\<,\>\"", "<>", "n", "<>", 
          "\"\<]\>\""}], "]"}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"c", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "#", "]"}], ">", "1"}], "&"}]}], "]"}]}], 
     ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "c", "]"}], "\[Equal]", "1"}], ",", 
       RowBox[{"c", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "c"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`CompileFuncQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CompileFuncQ", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"SuffPref", "[", 
     RowBox[{
      RowBox[{"ToString", "[", 
       RowBox[{"InputForm", "[", 
        RowBox[{"Definition2", "[", "x", "]"}], "]"}], "]"}], ",", 
      "\"\<Definition2[CompiledFunction[{\>\"", ",", "1"}], "]"}], ",", 
    "True", ",", "False"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`HeadingsPF`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HeadingsPF", "[", 
   RowBox[{"x___", "/;", 
    RowBox[{"SameQ", "[", 
     RowBox[{"x", ",", 
      RowBox[{"{", "}"}]}], "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", "}"}]}], ",", "b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "\"\<Block\>\"", "}"}], ",", 
         RowBox[{"{", "\"\<Function\>\"", "}"}], ",", 
         RowBox[{"{", "\"\<Module\>\"", "}"}]}], "}"}]}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", "t"}], "}"}], ",", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"Quiet", "[", 
           RowBox[{"Check", "[", 
            RowBox[{
             RowBox[{"BlockFuncModQ", "[", "#", "]"}], ",", "False"}], "]"}], 
           "]"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"a", ",", "#"}], "]"}], ",", "Null"}], "]"}], "&"}], ",", 
       RowBox[{"Names", "[", "\"\<`*\>\"", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Headings", "[", "#", "]"}], "&"}], ",", "a"}], "]"}]}], ";",
      " ", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "b", "]"}]}], ",", 
       RowBox[{
        RowBox[{"t", "=", 
         RowBox[{"b", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"NestListQ", "[", "t", "]"}], ",", 
          RowBox[{"d", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"d", ",", "t"}], "]"}]}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"d", ",", "t"}], "]"}]}], "]"}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "\"\<Block\>\""}], 
          ",", 
          RowBox[{
           RowBox[{"c", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "=", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"c", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"2", ";;", 
                RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}]}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
             "\"\<Function\>\""}], ",", 
            RowBox[{
             RowBox[{"c", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "=", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"c", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ";;", 
                  RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"c", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "=", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"c", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ";;", 
                  RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}]}]}], "]"}]}], 
         "]"}], "&"}], ",", "d"}], "]"}], ";", 
     RowBox[{"c", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"c", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "#", "]"}], ">", "1"}], "&"}]}], "]"}]}], 
     ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "c", "]"}], "\[Equal]", "1"}], ",", 
       RowBox[{"c", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "c"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DelRestPF`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DelRestPF", "[", 
   RowBox[{
    RowBox[{"r_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<d\>\"", ",", "\"\<r\>\""}], "}"}], ",", "r"}], "]"}]}], 
    ",", "x___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b", ",", "c", ",", "p", ",", 
      RowBox[{"f", "=", "\"\<$Art27Kr20$.mx\>\""}], ",", 
      RowBox[{"a", "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"{", "x", "}"}], ",", 
          RowBox[{
           RowBox[{"BlockFuncModQ", "[", "#", "]"}], "&"}]}], "]"}], "]"}]}], 
      ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"r", "\[Equal]", "\"\<d\>\""}], ",", 
      RowBox[{
       RowBox[{"b", "=", 
        RowBox[{"Map", "[", 
         RowBox[{"Definition2", ",", "a"}], "]"}]}], ";", 
       RowBox[{"Save", "[", 
        RowBox[{"f", ",", "b"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Map", "[", 
        RowBox[{"ClearAllAttributes", ",", "a"}], "]"}], ";", 
       RowBox[{"Map", "[", 
        RowBox[{"Remove", ",", "a"}], "]"}], ";"}], ",", 
      RowBox[{
       RowBox[{"c", "=", 
        RowBox[{"Get", "[", "f", "]"}]}], ";", 
       RowBox[{"DeleteFile", "[", "f", "]"}], ";", " ", 
       RowBox[{"For", "[", 
        RowBox[{"k", ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "c", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{
          RowBox[{"p", "=", 
           RowBox[{"c", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ";", 
          RowBox[{"ToExpression", "[", 
           RowBox[{"p", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", 
              RowBox[{"-", "2"}]}], "]"}], "]"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"ToExpression", "[", 
           RowBox[{"\"\<SetAttributes[\>\"", "<>", 
            RowBox[{"StringTake", "[", 
             RowBox[{
              RowBox[{"p", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Flatten", "[", 
                   RowBox[{"StringPosition", "[", 
                    RowBox[{
                    RowBox[{"p", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<[\>\""}], "]"}],
                    "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
             "]"}], "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"p", "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}], "]"}], "<>", "\"\<]\>\""}], 
           "]"}]}]}], "]"}]}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DelRestPF1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DelRestPF1", "[", 
   RowBox[{
    RowBox[{"r_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<d\>\"", ",", "\"\<r\>\""}], "}"}], ",", "r"}], "]"}]}], 
    ",", 
    RowBox[{"f_", "/;", 
     RowBox[{"StringQ", "[", "f", "]"}]}], ",", "x___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"{", "x", "}"}], ",", 
          RowBox[{
           RowBox[{"BlockFuncModQ", "[", "#", "]"}], "&"}]}], "]"}], "]"}]}], 
      ",", "b", ",", "c", ",", "p", ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"r", "\[Equal]", "\"\<d\>\""}], ",", 
      RowBox[{
       RowBox[{"b", "=", 
        RowBox[{"Map", "[", 
         RowBox[{"Definition2", ",", "a"}], "]"}]}], ";", 
       RowBox[{"Save", "[", 
        RowBox[{"f", ",", "b"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Map", "[", 
        RowBox[{"ClearAllAttributes", ",", "a"}], "]"}], ";", 
       RowBox[{"Map", "[", 
        RowBox[{"Remove", ",", "a"}], "]"}], ";"}], ",", 
      RowBox[{
       RowBox[{"c", "=", 
        RowBox[{"Get", "[", "f", "]"}]}], ";", 
       RowBox[{"DeleteFile", "[", "f", "]"}], ";", " ", 
       RowBox[{"For", "[", 
        RowBox[{"k", ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "c", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{
          RowBox[{"p", "=", 
           RowBox[{"c", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ";", 
          RowBox[{"ToExpression", "[", 
           RowBox[{"p", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", 
              RowBox[{"-", "2"}]}], "]"}], "]"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"ToExpression", "[", 
           RowBox[{"\"\<SetAttributes[\>\"", "<>", 
            RowBox[{"StringTake", "[", 
             RowBox[{
              RowBox[{"p", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Flatten", "[", 
                   RowBox[{"StringPosition", "[", 
                    RowBox[{
                    RowBox[{"p", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<[\>\""}], "]"}],
                    "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
             "]"}], "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"p", "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}], "]"}], "<>", "\"\<]\>\""}], 
           "]"}]}]}], "]"}]}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SystemQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SystemQ", "[", "S_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Off", "[", 
      RowBox[{"Definition", "::", "ssle"}], "]"}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{
        RowBox[{"ToString", "[", 
         RowBox[{"Definition", "[", "S", "]"}], "]"}], "===", "Null"}]}], "&&", 
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"Names", "[", "\"\<System`*\>\"", "]"}], ",", " ", 
        RowBox[{"ToString", "[", "S", "]"}]}], "]"}]}]}], ",", 
    RowBox[{
     RowBox[{"On", "[", 
      RowBox[{"Definition", "::", "ssle"}], "]"}], ";", "True"}], ",", 
    RowBox[{
     RowBox[{"On", "[", 
      RowBox[{"Definition", "::", "ssle"}], "]"}], ";", "False"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SysFunctionQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SysFunctionQ", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "a", "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"SymbolQ", "[", "x", "]"}]}], ",", "False", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"SystemQ", "[", "x", "]"}]}], ",", "False", ",", 
        RowBox[{
         RowBox[{"a", "=", 
          RowBox[{"SyntaxInformation", "[", "x", "]"}]}], ";", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"a", "===", 
            RowBox[{"{", "}"}]}], ",", "False", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"a", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"!", 
                  RowBox[{"SameQ", "[", 
                   RowBox[{"#", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}]}], "&"}]}], 
               "]"}], "===", 
              RowBox[{"{", "}"}]}], ",", "False", ",", "True"}], "]"}]}], 
          "]"}]}]}], "]"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SeqUnion`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SeqUnion", "[", "x__", "]"}], ":=", 
  RowBox[{"Sequence", "[", "x", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`IndexedQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IndexedQ", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"ToString", "[", "x", "]"}], "]"}]}], ",", "b"}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"StringPosition", "[", 
       RowBox[{"a", ",", "\"\<[[\>\""}], "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"StringTake", "[", 
          RowBox[{"a", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "]"}], "\[Equal]", "\"\<]]\>\""}],
         " ", "&&", 
        RowBox[{"+", " ", 
         RowBox[{"SymbolQ", "[", 
          RowBox[{"StringTake", "[", 
           RowBox[{"a", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"b", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], "]"}], 
          "]"}]}]}], ",", "True", ",", "False"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Decomp`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Decomp", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"Level", "[", 
           RowBox[{"x", ",", "Infinity"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", "#1", "]"}], "===", 
           RowBox[{"Abs", "[", "#2", "]"}]}], "&"}]}], "]"}]}], ",", "k"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"Label", "[", "ArtKr", "]"}], ";", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "c", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{"b", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"b", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"AtomQ", "[", 
             RowBox[{"c", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "]"}], ",", 
            RowBox[{"c", "[", 
             RowBox[{"[", "k", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Level", "[", 
               RowBox[{
                RowBox[{"c", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], ",", 
                RowBox[{"-", "1"}]}], "]"}], ",", 
              RowBox[{"Head", "[", 
               RowBox[{"c", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
         "]"}]}]}], "]"}], ";", 
     RowBox[{"b", "=", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", "b", "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", "#1", "]"}], "===", 
          RowBox[{"Abs", "[", "#2", "]"}]}], "&"}]}], "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"c", "\[Equal]", "b"}], ",", 
       RowBox[{"Return", "[", "b", "]"}], ",", 
       RowBox[{
        RowBox[{"c", "=", "b"}], ";", " ", 
        RowBox[{"b", "=", 
         RowBox[{"{", "}"}]}], ";", " ", 
        RowBox[{"Goto", "[", "ArtKr", "]"}]}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Index`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Index", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"IndexedQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"ToString", "[", "x", "]"}], "]"}]}], ",", "b", ",", "c"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"StringPosition", "[", 
        RowBox[{"a", ",", "\"\<[[\>\""}], "]"}], "]"}]}], ";", " ", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"StringTake", "[", 
       RowBox[{"a", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"b", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ",", 
          RowBox[{"-", "3"}]}], "}"}]}], "]"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`IndexQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IndexQ", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"!", 
      RowBox[{"SuffPref", "[", 
       RowBox[{"x", ",", "\"\<[[\>\"", ",", "1"}], "]"}]}], "&&", 
     RowBox[{"StringDependQ", "[", 
      RowBox[{"x", ",", 
       RowBox[{"{", 
        RowBox[{"\"\<[[\>\"", ",", "\"\<]]\>\""}], "}"}]}], "]"}], "&&", 
     RowBox[{"EvenQ", "[", 
      RowBox[{"StringCount", "[", 
       RowBox[{"x", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<[[\>\"", ",", "\"\<]]\>\""}], "}"}]}], "]"}], "]"}], "&&", 
     RowBox[{
      RowBox[{"StringTake", "[", 
       RowBox[{"x", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "]"}], "\[Equal]", "\"\<]]\>\""}]}], 
    ",", "True", ",", "False"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Indices`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Indices", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"IndexQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "\"\<]]\>\""}], ",", 
      RowBox[{"b", "=", "\"\<[[\>\""}], ",", 
      RowBox[{"h", "=", "x"}], ",", "c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", "g", ",", "t", ",", "k", ",", "y", ",", 
      RowBox[{"p", "=", 
       RowBox[{"StringLength", "[", "x", "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"p", "\[GreaterEqual]", "4"}], ",", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", 
           RowBox[{"p", "-", "2"}]}], ",", 
          RowBox[{"k", "\[GreaterEqual]", "1"}], ",", 
          RowBox[{"k", "--"}], ",", 
          RowBox[{
           RowBox[{"c", "=", 
            RowBox[{"StringTake", "[", 
             RowBox[{"h", ",", 
              RowBox[{"{", 
               RowBox[{"k", ",", "p"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"StringCount", "[", 
               RowBox[{"c", ",", "a"}], "]"}], "\[Equal]", 
              RowBox[{"StringCount", "[", 
               RowBox[{"c", ",", "b"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"d", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"d", ",", 
                 RowBox[{"{", 
                  RowBox[{"k", ",", "c"}], "}"}]}], "]"}]}], ";", " ", 
              "\[IndentingNewLine]", 
              RowBox[{"Break", "[", "]"}]}]}], "]"}]}]}], "]"}], ";", 
        RowBox[{"k", "=", 
         RowBox[{
          RowBox[{"d", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", 
        RowBox[{"h", "=", 
         RowBox[{"StringTake", "[", 
          RowBox[{"h", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"k", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"IndexQ", "[", "h", "]"}], ",", 
          RowBox[{
           RowBox[{"p", "=", 
            RowBox[{"StringLength", "[", "h", "]"}]}], ";", 
           RowBox[{"Continue", "[", "]"}]}], ",", 
          RowBox[{"Break", "[", "]"}]}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"g", "=", 
      RowBox[{"Reverse", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "+", 
             RowBox[{"StringLength", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], "}"}], "&"}], ",", 
         "d"}], "]"}], "]"}]}], ";", 
     RowBox[{"y", "=", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", 
        RowBox[{
         RowBox[{"Length", "[", "g", "]"}], "-", "1"}]}], ",", 
       RowBox[{"k", "\[GreaterEqual]", "1"}], ",", 
       RowBox[{"k", "--"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"g", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", 
          RowBox[{
           RowBox[{"g", "[", 
            RowBox[{"[", 
             RowBox[{"k", "+", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"y", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"g", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "<>", "y"}]}]}], "]"}]}], "]"}], 
     ";", "y"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`PatternQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PatternQ", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Head", "[", "x", "]"}], "===", "Pattern"}], ",", "True", ",", 
    "False"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DefOp`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DefOp", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{
       RowBox[{"StringQ", "[", "x", "]"}], "&&", 
       RowBox[{"SymbolQ", "[", "x", "]"}]}], "||", 
      RowBox[{"SymbolQ", "[", 
       RowBox[{"ToExpression", "[", "x", "]"}], "]"}]}]}], ",", "y___"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"PureDefinition", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "y", "}"}]}], ",", "c", ",", "d"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"a", "===", "$Failed"}], ",", "\"\<Undefined\>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SuffPref", "[", 
         RowBox[{"a", ",", 
          RowBox[{"x", "<>", "\"\<[\>\""}], ",", "1"}], "]"}], ",", "$Failed",
         ",", 
        RowBox[{
         RowBox[{
          RowBox[{"c", "[", "h_", "]"}], ":=", 
          RowBox[{"StringReplace", "[", 
           RowBox[{"a", ",", 
            RowBox[{
             RowBox[{
             "x", "<>", " ", "\"\< \>\"", "<>", "d", "<>", "\"\< \>\""}], 
             "->", "\"\<\>\""}], ",", "1"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"SuffPref", "[", 
            RowBox[{"a", ",", 
             RowBox[{"x", "<>", "\"\< = \>\""}], ",", "1"}], "]"}], ",", 
           RowBox[{"d", "=", "\"\<=\>\""}], ",", 
           RowBox[{"d", "=", "\"\<:=\>\""}]}], "]"}], ";", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"b", "\[NotEqual]", 
             RowBox[{"{", "}"}]}], "&&", 
            RowBox[{"!", 
             RowBox[{"HowAct", "[", "y", "]"}]}]}], ",", 
           RowBox[{"y", "=", 
            RowBox[{"c", "[", "d", "]"}]}]}], "]"}], ";", "d"}]}], "]"}]}], 
     "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DirEmptyQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DirEmptyQ", "[", 
   RowBox[{"d_", "/;", 
    RowBox[{"DirQ", "[", "d", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p", "=", 
       RowBox[{"StandPath", "[", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"d", ",", 
          RowBox[{"\"\</\>\"", "->", "\"\<\\\\\>\""}]}], "]"}], "]"}]}], ",", 
      RowBox[{"a", "=", "\"\<$DirFile$\>\""}], ",", "b", ",", "c", ",", 
      RowBox[{"h", "=", "\"\< 0 File(s)  \>\""}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"Run", "[", 
       RowBox[{"\"\<Dir \>\"", "<>", "p", "<>", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SuffPref", "[", 
           RowBox[{"p", ",", "\"\<\\\\\>\"", ",", "2"}], "]"}], ",", 
          "\"\<\>\"", ",", "\"\<\\\\\>\""}], "]"}], "<>", "\"\<*.* > \>\"", "<>",
         "a"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"b", "\[NotEqual]", "0"}], ",", "$Failed", ",", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"c", "=", 
          RowBox[{"Read", "[", 
           RowBox[{"a", ",", "String"}], "]"}]}], ",", 
         RowBox[{"{", "6", "}"}]}], "]"}]}], "]"}], ";", " ", 
     RowBox[{"DeleteFile", "[", 
      RowBox[{"Close", "[", "a", "]"}], "]"}], ";", " ", 
     RowBox[{"!", 
      RowBox[{"StringFreeQ", "[", 
       RowBox[{"c", ",", "h"}], "]"}]}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`GenRules`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GenRules", "[", 
   RowBox[{"x_", ",", "y_", ",", "z___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"b", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", "x", "}"}], "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{"ListQ", ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "y"}], "}"}]}], "]"}], "\[Equal]", 
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}]}], ",", 
          RowBox[{"PadLeft", "[", 
           RowBox[{
            RowBox[{"{", "}"}], ",", 
            RowBox[{"Length", "[", "x", "]"}], ",", "y"}], "]"}], ",", 
          RowBox[{"{", "y", "}"}]}], "]"}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"Min", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"Length", ",", 
         RowBox[{"{", 
          RowBox[{"b", ",", "c"}], "}"}]}], "]"}], "]"}]}], ";", 
     RowBox[{"b", "=", 
      RowBox[{"Map9", "[", 
       RowBox[{"Rule", ",", 
        RowBox[{"b", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "a"}], "]"}], "]"}], ",", 
        RowBox[{"c", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "a"}], "]"}], "]"}]}], "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "z", "}"}], "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", "b", ",", 
       RowBox[{
        RowBox[{"b", "=", 
         RowBox[{"Map", "[", 
          RowBox[{"List", ",", "b"}], "]"}]}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "b", "]"}], "\[Equal]", "1"}], ",", 
          RowBox[{"Flatten", "[", "b", "]"}], ",", "b"}], "]"}]}]}], 
      "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`GenRules1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GenRules1", "[", 
   RowBox[{"x_", ",", "y_", ",", 
    RowBox[{"h_", "/;", 
     RowBox[{
      RowBox[{"h", "==", "\"\<r\>\""}], "||", 
      RowBox[{"h", "\[Equal]", "\"\<rd\>\""}]}]}], ",", "z___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"b", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", "x", "}"}], "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{"ListQ", ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "y"}], "}"}]}], "]"}], "\[Equal]", 
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}]}], ",", 
          RowBox[{"PadLeft", "[", 
           RowBox[{
            RowBox[{"{", "}"}], ",", 
            RowBox[{"Length", "[", "x", "]"}], ",", "y"}], "]"}], ",", 
          RowBox[{"{", "y", "}"}]}], "]"}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"Min", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"Length", ",", 
         RowBox[{"{", 
          RowBox[{"b", ",", "c"}], "}"}]}], "]"}], "]"}]}], ";", 
     RowBox[{"b", "=", 
      RowBox[{"Map9", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"h", "\[Equal]", "\"\<r\>\""}], ",", "Rule", ",", 
          "RuleDelayed"}], "]"}], ",", 
        RowBox[{"b", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "a"}], "]"}], "]"}], ",", 
        RowBox[{"c", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "a"}], "]"}], "]"}]}], "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "z", "}"}], "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", "b", ",", 
       RowBox[{
        RowBox[{"b", "=", 
         RowBox[{"Map", "[", 
          RowBox[{"List", ",", "b"}], "]"}]}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "b", "]"}], "\[Equal]", "1"}], ",", 
          RowBox[{"Flatten", "[", "b", "]"}], ",", "b"}], "]"}]}]}], 
      "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`GenRules2`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GenRules2", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"ListQ", "[", "x", "]"}]}], ",", "y_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"ListQ", "[", "y", "]"}], ",", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Rule", "[", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "#", "]"}], "]"}], ",", 
         RowBox[{"y", "[", 
          RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "&"}], ",", 
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", 
        RowBox[{"Min", "[", 
         RowBox[{
          RowBox[{"Length", "[", "x", "]"}], ",", 
          RowBox[{"Length", "[", "y", "]"}]}], "]"}]}], "]"}]}], "]"}], ",", 
    " ", "\[IndentingNewLine]", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Rule", "[", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "#", "]"}], "]"}], ",", "y"}], "]"}], "&"}], ",", 
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", 
        RowBox[{"Length", "[", "x", "]"}]}], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`RevRules`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RevRules", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"RuleQ", "[", "x", "]"}], "||", 
     RowBox[{
      RowBox[{"ListQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"RuleQ", ",", "x"}], "]"}], "]"}], "\[Equal]", 
       RowBox[{"{", "True", "}"}]}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", "x", "}"}], "]"}]}], ",", "b"}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "\[Rule]", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "&"}], ",", "a"}], "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "b", "]"}], "\[Equal]", "1"}], ",", 
       RowBox[{"b", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "b"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`VarExch`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"VarExch", "[", 
   RowBox[{"L_List", "/;", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "L", "]"}], "\[Equal]", "2"}], "||", 
     RowBox[{
      RowBox[{"ListListQ", "[", "L", "]"}], "&&", 
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"L", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", "2"}]}]}]}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Kr", ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Kr", "[", 
       RowBox[{"p_", "/;", 
        RowBox[{"ListQ", "[", "p", "]"}]}], "]"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"a", "=", 
           RowBox[{"Map", "[", 
            RowBox[{"Attributes", ",", "p"}], "]"}]}], ",", "b", ",", "c", 
          ",", "m", ",", "n"}], "}"}], ",", 
        RowBox[{
         RowBox[{"ToExpression", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<ClearAttributes[\>\"", "<>", 
             RowBox[{"StrStr", "[", 
              RowBox[{"p", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<,\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"a", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<]\>\""}], 
            ",", 
            RowBox[{"\"\<ClearAttributes[\>\"", "<>", 
             RowBox[{"StrStr", "[", 
              RowBox[{"p", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<,\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"a", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<]\>\""}]}], 
           "}"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"b", ",", "c"}], "}"}], "=", 
          RowBox[{"ToExpression", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<ToString[Definition[\>\"", "<>", 
              RowBox[{"StrStr", "[", 
               RowBox[{"p", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<]]\>\""}], 
             ",", 
             RowBox[{"\"\<ToString[Definition[\>\"", "<>", 
              RowBox[{"StrStr", "[", 
               RowBox[{"p", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<]]\>\""}]}],
             "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"b", ",", "c"}], "}"}], ",", "\"\<Null\>\""}], "]"}], 
           ",", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{
              RowBox[{
              "VarExch", "::", 
               "\"\<Both arguments should be defined but uncertainty had been \
detected: \>\""}], ",", "p"}], "]"}], ";", " ", 
            RowBox[{"Return", "[", "]"}]}], ",", "Null"}], "]"}], ";", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"m", ",", "n"}], "}"}], "=", 
          RowBox[{"Map4", "[", 
           RowBox[{"StringPosition", ",", 
            RowBox[{"Map", "[", 
             RowBox[{"StrStr", ",", 
              RowBox[{"{", 
               RowBox[{"b", ",", "c"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\< := \>\"", ",", "\"\< = \>\""}], "}"}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"n", ",", "m"}], "}"}], "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"StringTake", "[", 
              RowBox[{"b", ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"m", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
              "]"}], "<>", 
             RowBox[{"StringTake", "[", 
              RowBox[{"c", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"n", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"StringTake", "[", 
              RowBox[{"c", ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"n", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
              "]"}], "<>", 
             RowBox[{"StringTake", "[", 
              RowBox[{"b", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"m", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], "]"}]}]}], "}"}]}], ";", 
         RowBox[{"ToExpression", "[", 
          RowBox[{"{", 
           RowBox[{"n", ",", "m"}], "}"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Map", "[", 
          RowBox[{"ToExpression", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<SetAttributes[\>\"", "<>", 
              RowBox[{"StrStr", "[", 
               RowBox[{"p", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<,\>\"", "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{"a", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<]\>\""}], 
             ",", 
             RowBox[{"\"\<SetAttributes[\>\"", "<>", 
              RowBox[{"StrStr", "[", 
               RowBox[{"p", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<,\>\"", "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{"a", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<]\>\""}]}], 
            "}"}]}], "]"}]}]}], "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"ListListQ", "[", "L", "]"}]}], ",", 
       RowBox[{"Kr", "[", "L", "]"}], ",", 
       RowBox[{"For", "[", 
        RowBox[{"k", ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "L", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{"Kr", "[", 
          RowBox[{"L", "[", 
           RowBox[{"[", "k", "]"}], "]"}], "]"}]}], "]"}]}], "]"}], ";"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`NestListQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NestListQ", "[", "x_", "]"}], ":=", 
  RowBox[{"SameQ", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ListQ", "[", "x", "]"}], "&&", 
     RowBox[{"DeleteDuplicates", "[", 
      RowBox[{"Map", "[", 
       RowBox[{"ListQ", ",", "x"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", "True", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`NestListQ1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NestListQ1", "[", "x_", "]"}], ":=", 
  RowBox[{"!", 
   RowBox[{"SameQ", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ListQ", "[", "x", "]"}], "&&", 
      RowBox[{"Length", "[", 
       RowBox[{"Select", "[", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"ListQ", "[", "#", "]"}], "&"}]}], "]"}], "]"}]}], ",", 
     "0"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`MapNestList`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MapNestList", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"ListQ", "[", "x", "]"}]}], ",", 
    RowBox[{"f_", "/;", 
     RowBox[{"SymbolQ", "[", "f", "]"}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ToString1", "[", "x", "]"}]}], ",", "b", ",", "c", ",", "d", 
      ",", 
      RowBox[{"h", "=", 
       RowBox[{"FromCharacterCode", "[", "3", "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"StringPosition", "[", 
       RowBox[{"a", ",", "\"\<{\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d", "=", 
      RowBox[{"StringReplacePart", "[", 
       RowBox[{"a", ",", 
        RowBox[{
         RowBox[{"ToString", "[", "f", "]"}], "<>", "\"\<[\>\"", "<>", "h"}], 
        ",", "b"}], "]"}]}], ";", 
     RowBox[{"b", "=", 
      RowBox[{"StringPosition", "[", 
       RowBox[{"d", ",", "\"\<}\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"StringReplace", "[", 
       RowBox[{
        RowBox[{"StringReplacePart", "[", 
         RowBox[{"d", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", "y", "}"}], "\[NotEqual]", 
             RowBox[{"{", "}"}]}], ",", 
            RowBox[{"\"\<},  \>\"", "<>", " ", 
             RowBox[{"StringTake", "[", 
              RowBox[{
               RowBox[{"ToString1", "[", 
                RowBox[{"{", "y", "}"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"2", ",", 
                 RowBox[{"-", "2"}]}], "}"}]}], "]"}], "<>", " ", 
             "\"\<]\>\""}], ",", "\"\<}]\>\""}], "]"}], ",", "b"}], "]"}], 
        ",", 
        RowBox[{"h", "->", "\"\<{\>\""}]}], "]"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`AttributesQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AttributesQ", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"ListQ", "[", "x", "]"}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Quiet", "[", 
            RowBox[{"Check", "[", 
             RowBox[{
              RowBox[{"SetAttributes", "[", 
               RowBox[{"a", ",", "#"}], "]"}], ",", "$Failed"}], "]"}], "]"}],
            "===", "$Failed"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"b", ",", "#"}], "]"}]}], "]"}], "&"}], ",", "x"}], "]"}], 
     ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"b", "\[NotEqual]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", "y", "}"}], "\[NotEqual]", 
            RowBox[{"{", "}"}]}], "&&", 
           RowBox[{"!", 
            RowBox[{"HowAct", "[", "y", "]"}]}]}], ",", 
          RowBox[{"y", "=", "b"}]}], "]"}], ";", " ", "False"}], ",", 
       "True"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`RuleQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RuleQ", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"MemberQ", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Rule", ",", "RuleDelayed"}], "}"}], ",", 
      RowBox[{"Head", "[", "x", "]"}]}], "]"}], ",", "True", ",", "False"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`QmultiplePF`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"QmultiplePF", "[", 
   RowBox[{"x_", ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\"\<System\>\"", "}"}], ",", 
           RowBox[{"{", "$Failed", "}"}]}], "}"}], ",", "a"}], "]"}], "||", 
       RowBox[{
        RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "1"}]}], ",", "False", 
      ",", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", "y", "}"}], "\[NotEqual]", 
           RowBox[{"{", "}"}]}], "&&", 
          RowBox[{"!", 
           RowBox[{"HowAct", "[", "y", "]"}]}]}], ",", 
         RowBox[{"y", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "1"}], ",", 
            RowBox[{"a", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "a"}], "]"}]}]}], "]"}], 
       ";", "True"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`VarExch1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"VarExch1", "[", 
   RowBox[{"L_List", "/;", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "L", "]"}], "\[Equal]", "2"}], "||", 
     RowBox[{
      RowBox[{"ListListQ", "[", "L", "]"}], "&&", 
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"L", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", "2"}]}]}]}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Art", ",", 
      RowBox[{"k", "=", "1"}], ",", "d"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Art", "[", "p_List", "]"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"a", "=", 
           RowBox[{"Quiet", "[", 
            RowBox[{"Check", "[", 
             RowBox[{
              RowBox[{"Map", "[", 
               RowBox[{"Attributes", ",", "p"}], "]"}], ",", "$Aborted"}], 
             "]"}], "]"}]}], ",", "b", ",", "c", ",", "m", ",", "n"}], "}"}], 
        ",", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"a", "\[Equal]", "$Aborted"}], ",", 
           RowBox[{"Return", "[", 
            RowBox[{"Defer", "[", 
             RowBox[{"VarExch1", "[", "L", "]"}], "]"}], "]"}], ",", "Null"}],
           "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"HowAct", "[", "$Art$", "]"}], ",", 
           RowBox[{
            RowBox[{"b", "=", "$Art$"}], ";", 
            RowBox[{"Clear", "[", "$Art$", "]"}], ";", 
            RowBox[{"m", "=", "1"}]}], ",", "Null"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"HowAct", "[", "$Kr$", "]"}], ",", 
           RowBox[{
            RowBox[{"c", "=", "$Kr$"}], ";", 
            RowBox[{"Clear", "[", "$Kr$", "]"}], ";", 
            RowBox[{"n", "=", "1"}]}], ",", "Null"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"ToExpression", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<ClearAttributes[\>\"", "<>", 
             RowBox[{"StrStr", "[", 
              RowBox[{"p", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<,\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"a", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<]\>\""}], 
            ",", 
            RowBox[{"\"\<ClearAttributes[\>\"", "<>", 
             RowBox[{"StrStr", "[", 
              RowBox[{"p", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<,\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"a", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<]\>\""}]}], 
           "}"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"ToExpression", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<Rename[\>\"", "<>", 
             RowBox[{"StrStr", "[", 
              RowBox[{"p", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<,\>\"", 
             "<>", "\"\<$Art$\>\"", "<>", "\"\<]\>\""}], ",", 
            RowBox[{"\"\<Rename[\>\"", "<>", 
             RowBox[{"StrStr", "[", 
              RowBox[{"p", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<,\>\"", 
             "<>", "\"\<$Kr$\>\"", "<>", "\"\<]\>\""}]}], "}"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"ToExpression", "[", 
          RowBox[{"\"\<Clear[\>\"", "<>", 
           RowBox[{"StrStr", "[", 
            RowBox[{"p", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<,\>\"", "<>", 
           RowBox[{"StrStr", "[", 
            RowBox[{"p", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<]\>\""}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"ToExpression", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<Rename[\>\"", "<>", 
             RowBox[{"StrStr", "[", "\"\<$Kr$\>\"", "]"}], "<>", "\"\<,\>\"", 
             "<>", 
             RowBox[{"p", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "<>", "\"\<]\>\""}], ",", 
            RowBox[{"\"\<Rename[\>\"", "<>", 
             RowBox[{"StrStr", "[", "\"\<$Art$\>\"", "]"}], "<>", "\"\<,\>\"",
              "<>", 
             RowBox[{"p", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "<>", "\"\<]\>\""}]}], "}"}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Map", "[", 
          RowBox[{"ToExpression", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<SetAttributes[\>\"", "<>", 
              RowBox[{"StrStr", "[", 
               RowBox[{"p", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<,\>\"", "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{"a", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<]\>\""}], 
             ",", 
             RowBox[{"\"\<SetAttributes[\>\"", "<>", 
              RowBox[{"StrStr", "[", 
               RowBox[{"p", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<,\>\"", "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{"a", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<]\>\""}]}], 
            "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"m", "\[Equal]", "1"}], ",", 
           RowBox[{"$Art$", "=", "b"}], ",", "Null"}], "]"}], ";", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"n", "\[Equal]", "1"}], ",", 
           RowBox[{"$Kr$", "=", "c"}], ",", "Null"}], "]"}], ";"}]}], "]"}]}],
      ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"ListListQ", "[", "L", "]"}]}], ",", 
       RowBox[{"Art", "[", "L", "]"}], ",", 
       RowBox[{"For", "[", 
        RowBox[{"k", ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "L", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{"Art", "[", 
          RowBox[{"L", "[", 
           RowBox[{"[", "k", "]"}], "]"}], "]"}]}], "]"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ClearCS`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearCS", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"MemberQ", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ClearAll", ",", "Remove"}], "}"}], ",", "x"}], "]"}]}], "]"}],
   ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", "=", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Names", "[", "\"\<Global`*\>\"", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\"", ",", "\"\<d\>\"", 
          ",", "\"\<h\>\"", ",", "\"\<k\>\"", ",", "\"\<p\>\"", ",", 
          "\"\<S\>\"", ",", "\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], "]"}]}],
      "}"}], ",", 
    RowBox[{
     RowBox[{"Quiet", "[", 
      RowBox[{"Mapp", "[", 
       RowBox[{"ClearAttributes", ",", "a", ",", "Protected"}], "]"}], "]"}], 
     ";", " ", 
     RowBox[{"Quiet", "[", 
      RowBox[{"Map", "[", 
       RowBox[{"x", ",", "a"}], "]"}], "]"}], ";"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StringReplace1`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StringReplace1", "[", 
   RowBox[{
    RowBox[{"S_", "/;", 
     RowBox[{"StringQ", "[", "S", "]"}]}], ",", 
    RowBox[{"L_", "/;", 
     RowBox[{
      RowBox[{"ListListQ", "[", "L", "]"}], "&&", 
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"L", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", "2"}], "&&", 
      RowBox[{"MatrixQ", "[", 
       RowBox[{"L", ",", "IntegerQ"}], "]"}], "&&", 
      RowBox[{
       RowBox[{
        RowBox[{"Sort", "[", 
         RowBox[{"Map", "[", 
          RowBox[{"Min", ",", "L"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "\[GreaterEqual]", "1"}]}]}], ",", 
    RowBox[{"P_", "/;", 
     RowBox[{"ListQ", "[", "P", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", "}"}]}], ",", "b", ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Sort", "[", 
           RowBox[{"Map", "[", 
            RowBox[{"Max", ",", "L"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], "\[LessEqual]", 
         RowBox[{"StringLength", "[", "S", "]"}]}], "&&", 
        RowBox[{
         RowBox[{"Length", "[", "P", "]"}], "\[Equal]", 
         RowBox[{"Length", "[", "L", "]"}]}]}], ",", "Null", ",", 
       RowBox[{"Return", "[", 
        RowBox[{"Defer", "[", 
         RowBox[{"StringReplace1", "[", 
          RowBox[{"S", ",", "L", ",", "P"}], "]"}], "]"}], "]"}]}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "L", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"b", "=", 
         RowBox[{"L", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", 
        RowBox[{"a", "=", 
         RowBox[{"Append", "[", 
          RowBox[{"a", ",", 
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{"S", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"b", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"b", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], "\[Rule]", 
            RowBox[{"ToString", "[", 
             RowBox[{"P", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "]"}]}]}], "]"}]}]}]}], "]"}], 
     ";", 
     RowBox[{"StringReplace", "[", 
      RowBox[{"S", ",", "a"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ProcFuncBlQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ProcFuncBlQ", "[", 
   RowBox[{"x_", ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"!", 
      RowBox[{"HowAct", "[", "y", "]"}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"HeadPF", "[", "x", "]"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{
        RowBox[{"ToString", "[", "y", "]"}], "<>", "\"\< = \>\""}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"PureDefinition", "[", "x", "]"}]}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"ListQ", "[", "c", "]"}], ",", "False", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SuffPref", "[", 
         RowBox[{"a", ",", "\"\<HeadPF[\>\"", ",", "1"}], "]"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SuffPref", "[", 
           RowBox[{"a", ",", "\"\< & ]\>\"", ",", "2"}], "]"}], ",", 
          RowBox[{
           RowBox[{"y", "=", "\"\<PureFunction\>\""}], ";", "True"}], ",", 
          "False"}], "]"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"HeadingQ", "[", "a", "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"SuffPref", "[", 
             RowBox[{"c", ",", 
              RowBox[{"a", "<>", "\"\< := Module[{\>\""}], ",", "1"}], "]"}], 
            ",", 
            RowBox[{
             RowBox[{"y", "=", "\"\<Module\>\""}], ";", " ", "True"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"SuffPref", "[", 
               RowBox[{"c", ",", 
                RowBox[{"a", "<>", "\"\< := Block[{\>\""}], ",", "1"}], "]"}],
               ",", 
              RowBox[{
               RowBox[{"y", "=", "\"\<Block\>\""}], ";", "True"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"SuffPref", "[", 
                 RowBox[{"c", ",", 
                  RowBox[{"a", "<>", "\"\< := DynamicModule[{\>\""}], ",", 
                  "1"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"y", "=", "\"\<DynamicModule\>\""}], ";", " ", 
                 "True"}], ",", 
                RowBox[{
                 RowBox[{"y", "=", "\"\<Function\>\""}], ";", " ", "True"}]}],
                "]"}]}], "]"}]}], "]"}], ",", "False"}], "]"}]}], "]"}]}], 
     "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ProcFuncBlQ1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ProcFuncBlQ1", "[", 
   RowBox[{"x_", ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"!", 
      RowBox[{"HowAct", "[", "y", "]"}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"HeadPF", "[", "x", "]"}], "}"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}]}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", "k"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SuffPref", "[", 
          RowBox[{
           RowBox[{"ToString", "[", "x", "]"}], ",", "\"\< & \>\"", ",", 
           "2"}], "]"}], ",", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"b", ",", "\"\<PureFunction\>\""}], "]"}], ";", " ", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"d", ",", "True"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"c", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "===", "$Failed"}], ",", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"b", ",", "$Failed"}], "]"}], ";", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"d", ",", "False"}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"SuffPref", "[", 
              RowBox[{
               RowBox[{"c", "[", 
                RowBox[{"[", "k", "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"a", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "<>", 
                "\"\< := Module[{\>\""}], ",", "1"}], "]"}], ",", 
             RowBox[{
              RowBox[{"AppendTo", "[", 
               RowBox[{"b", ",", "\"\<Module\>\""}], "]"}], ";", " ", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"d", ",", "True"}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"SuffPref", "[", 
                RowBox[{
                 RowBox[{"c", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"a", "[", 
                   RowBox[{"[", "k", "]"}], "]"}], "<>", 
                  "\"\< := Block[{\>\""}], ",", "1"}], "]"}], ",", 
               RowBox[{
                RowBox[{"AppendTo", "[", 
                 RowBox[{"b", ",", "\"\<Block\>\""}], "]"}], ";", " ", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"d", ",", "True"}], "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"SuffPref", "[", 
                  RowBox[{
                   RowBox[{"c", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"a", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "<>", 
                    "\"\< := DynamicModule[{\>\""}], ",", "1"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"b", ",", "\"\<DynamicModule\>\""}], "]"}], ";", 
                  " ", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"d", ",", "True"}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"b", ",", "\"\<Function\>\""}], "]"}], ";", " ", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"d", ",", "True"}], "]"}]}]}], "]"}]}], "]"}]}], 
            "]"}]}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{"Length", "[", "c", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"b", ",", "d"}], "}"}], "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "1"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "#"}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"b", ",", "d"}], "}"}]}], "]"}]}], ";", " ", 
     RowBox[{"y", "=", "b"}], ";", " ", "d"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`VizContext`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"VizContext", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ContextQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", "=", 
      RowBox[{"CNames", "[", "x", "]"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"a", "\[Equal]", 
       RowBox[{"{", "}"}]}], ",", "$Failed", ",", 
      RowBox[{"CreateDocument", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"StringReplace", "[", 
           RowBox[{"#", ",", 
            RowBox[{"x", "->", "\"\<\>\""}]}], "]"}], "&"}], ",", 
         RowBox[{"Map", "[", 
          RowBox[{"ToString1", ",", 
           RowBox[{"Map", "[", 
            RowBox[{"Definition", ",", "a"}], "]"}]}], "]"}]}], "]"}], 
       "]"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`VizContentsNB`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"VizContentsNB", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"StringQ", "[", "x", "]"}], "&&", 
       RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
       RowBox[{
        RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
        "\"\<nb\>\""}]}], ",", 
      RowBox[{
       RowBox[{"CopyToClipboard", "[", 
        RowBox[{"Get", "[", "x", "]"}], "]"}], ";", 
       RowBox[{"Paste", "[", "]"}]}], ",", "$Failed"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StringReplace2`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StringReplace2", "[", 
   RowBox[{
    RowBox[{"S_", "/;", 
     RowBox[{"StringQ", "[", "S", "]"}]}], ",", 
    RowBox[{"s_", "/;", 
     RowBox[{"StringQ", "[", "s", "]"}]}], ",", "Exp_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b", ",", "c", ",", "d", ",", 
      RowBox[{"a", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"CharacterRange", "[", 
          RowBox[{"\"\<A\>\"", ",", "\"\<Z\>\""}], "]"}], ",", 
         RowBox[{"CharacterRange", "[", 
          RowBox[{"\"\<a\>\"", ",", "\"\<z\>\""}], "]"}]}], "]"}]}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"StringPosition", "[", 
          RowBox[{"S", ",", "s"}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"!", 
            RowBox[{"MemberQ", "[", 
             RowBox[{"a", ",", 
              RowBox[{"StringTake", "[", 
               RowBox[{"S", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], ",", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
               "]"}]}], "]"}]}], "&&", 
           RowBox[{"!", 
            RowBox[{"MemberQ", "[", 
             RowBox[{"a", ",", 
              RowBox[{"StringTake", "[", 
               RowBox[{"S", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ",", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "+", "1"}]}], "}"}]}], 
               "]"}]}], "]"}]}]}], "&"}]}], "]"}], "]"}]}], ";", " ", 
     RowBox[{"StringReplacePart", "[", 
      RowBox[{"S", ",", 
       RowBox[{"ToString", "[", "Exp", "]"}], ",", "b"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StringReplace3`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StringReplace3", "[", 
   RowBox[{
    RowBox[{"S_", "/;", 
     RowBox[{"StringQ", "[", "S", "]"}]}], ",", "x__"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"b", "=", "S"}], ",", "c", ",", 
      RowBox[{"j", "=", "1"}], ",", 
      RowBox[{"a", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"ToString", ",", 
         RowBox[{"{", "x", "}"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"c", "=", 
      RowBox[{"Length", "[", "a", "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OddQ", "[", "c", "]"}], ",", "S", ",", 
       RowBox[{
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"j", "\[LessEqual]", 
           RowBox[{"c", "/", "2"}]}], ",", 
          RowBox[{
           RowBox[{"b", "=", 
            RowBox[{"StringReplace2", "[", 
             RowBox[{"b", ",", 
              RowBox[{"a", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"2", "*", "j"}], "-", "1"}], "]"}], "]"}], ",", 
              RowBox[{"a", "[", 
               RowBox[{"[", 
                RowBox[{"2", "*", "j"}], "]"}], "]"}]}], "]"}]}], ";", 
           RowBox[{"j", "++"}]}]}], "]"}], ";", "b"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StringStringQ`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StringStringQ", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", "False", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"SuffPref", "[", 
        RowBox[{"x", ",", "\"\<\\\"\>\"", ",", "1"}], "]"}], "&&", 
       RowBox[{"SuffPref", "[", 
        RowBox[{"x", ",", "\"\<\\\"\>\"", ",", "2"}], "]"}]}], ",", "True", 
      ",", "False"}], "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StringJoin1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StringJoin1", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"ListQ", "[", "x", "]"}], "&&", 
     RowBox[{
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"StringQ", ",", "x"}], "]"}], "]"}], "==", 
      RowBox[{"{", "True", "}"}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "x"}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Length", "[", "x", "]"}]}], ",", 
      RowBox[{"c", "=", "\"\<\>\""}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"b", "-", "1"}]}], ",", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"c", "<>", 
          RowBox[{"a", "[", 
           RowBox[{"[", "k", "]"}], "]"}], "<>", "\"\<, \>\""}]}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", 
     RowBox[{"c", "<>", 
      RowBox[{"a", "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}]}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ExprPatternQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExprPatternQ", "[", "x_", "]"}], ":=", 
  RowBox[{"!", 
   RowBox[{"StringFreeQ", "[", 
    RowBox[{
     RowBox[{"ToString", "[", 
      RowBox[{"FullForm", "[", "x", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<BlankSequence[]\>\"", ",", "\"\<BlankNullSequence[]\>\"", ",", 
       "\"\<Blank[]\>\""}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ReadFullFile`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReadFullFile", "[", 
   RowBox[{
    RowBox[{"f_", "/;", 
     RowBox[{"StringQ", "[", "f", "]"}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"b", "=", "$Art6Kr$"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"FileExistsQ", "[", "f", "]"}], ",", 
       RowBox[{"a", "=", "f"}], ",", 
       RowBox[{
        RowBox[{"ClearAll", "[", "$Art6Kr$", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"FileExistsQ1", "[", 
            RowBox[{"f", ",", "$Art6Kr$"}], "]"}]}], ",", 
          RowBox[{"Return", "[", "$Failed", "]"}], ",", 
          RowBox[{"a", "=", 
           RowBox[{"$Art6Kr$", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}]}], "]"}], ";", 
     RowBox[{"$Art6Kr$", "=", "b"}], ";", "\[IndentingNewLine]", 
     RowBox[{"StringReplace", "[", 
      RowBox[{
       RowBox[{"StringJoin", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"FromCharacterCode", ",", 
          RowBox[{"BinaryReadList", "[", "a", "]"}]}], "]"}], "]"}], ",", 
       RowBox[{"\"\<\\r\\n\>\"", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", "y", "}"}], "\[NotEqual]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"StringQ", "[", "y", "]"}], ",", "y", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"HowAct", "[", "y", "]"}]}], ",", 
              RowBox[{
               RowBox[{"y", "=", "a"}], ";", " ", "\"\<\>\""}], ",", 
              "\"\<\>\""}], "]"}]}], "]"}], ",", "\"\<\>\""}], "]"}]}]}], 
      "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ReadFullFile1`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReadFullFile1", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"FileExistsQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"StringReplace", "[", 
   RowBox[{
    RowBox[{"Quiet", "[", 
     RowBox[{"Check", "[", 
      RowBox[{
       RowBox[{"ReadString", "[", "x", "]"}], ",", "\"\<\>\""}], "]"}], "]"}],
     ",", 
    RowBox[{"\"\<\\r\\n\>\"", " ", "->", " ", "\"\<\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`BinaryListQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BinaryListQ", "[", 
   RowBox[{"L_", "/;", 
    RowBox[{"ListQ", "[", "L", "]"}]}], "]"}], ":=", 
  RowBox[{"MemberQ", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
    RowBox[{"Sort", "[", 
     RowBox[{"DeleteDuplicates", "[", 
      RowBox[{"Flatten", "[", "L", "]"}], "]"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ToString1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ToString1", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "\"\<$$Art27$Kr20$$.txt\>\""}], ",", 
      RowBox[{"b", "=", "\"\<\>\""}], ",", "c", ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Write", "[", 
      RowBox[{"a", ",", "x"}], "]"}], ";", 
     RowBox[{"Close", "[", "a", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "<", "Infinity"}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"Read", "[", 
          RowBox[{"a", ",", "String"}], "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"c", ",", "EndOfFile"}], "]"}], ",", 
          RowBox[{"Return", "[", 
           RowBox[{
            RowBox[{"DeleteFile", "[", 
             RowBox[{"Close", "[", "a", "]"}], "]"}], ";", "b"}], "]"}], ",", 
          RowBox[{"b", "=", 
           RowBox[{"b", "<>", 
            RowBox[{"StrDelEnds", "[", 
             RowBox[{"c", ",", "\"\< \>\"", ",", "1"}], "]"}]}]}]}], 
         "]"}]}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ToString2`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ToString2", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "a", "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"ListQ", "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"SetAttributes", "[", 
        RowBox[{"ToString1", ",", "Listable"}], "]"}], ";", " ", 
       RowBox[{"a", "=", 
        RowBox[{"ToString1", "[", "x", "]"}]}], ";", 
       RowBox[{"ClearAttributes", "[", 
        RowBox[{"ToString1", ",", "Listable"}], "]"}], ";", "a"}], ",", 
      RowBox[{"ToString1", "[", "x", "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ToString3`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ToString3", "[", "x_", "]"}], ":=", 
  RowBox[{"StringReplace", "[", 
   RowBox[{
    RowBox[{"ToString1", "[", "x", "]"}], ",", 
    RowBox[{"\"\<\\\"\>\"", "->", "\"\<\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ToString4`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ToString4", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"SymbolQ", "[", "x", "]"}]}], ",", 
    RowBox[{"\"\<(\>\"", "<>", 
     RowBox[{"ToString1", "[", "x", "]"}], "<>", "\"\<)\>\""}], ",", 
    RowBox[{"ToString1", "[", "x", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DefToString`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DefToString", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Definition", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"Unique", "[", "\"\<agn\>\"", "]"}], "]"}]}], ",", "c"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"Write", "[", 
      RowBox[{"b", ",", "a"}], "]"}], ";", 
     RowBox[{"Close", "[", "b", "]"}], ";", 
     RowBox[{"a", "=", 
      RowBox[{"ReadString", "[", "b", "]"}]}], ";", 
     RowBox[{"DeleteFile", "[", "b", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Set", "[", 
         RowBox[{"c", ",", 
          RowBox[{"Attributes", "[", "x", "]"}]}], "]"}], "==", 
        RowBox[{"{", "}"}]}], ",", "a", ",", 
       RowBox[{
        RowBox[{"b", "=", 
         RowBox[{
          RowBox[{"StringPosition", "[", 
           RowBox[{"a", ",", "\"\<\\r\\n \\r\\n\>\""}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", 
        RowBox[{"a", "=", 
         RowBox[{
          RowBox[{"StringTake", "[", 
           RowBox[{"a", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"b", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ",", 
              RowBox[{"-", "1"}]}], "}"}]}], "]"}], "<>", 
          RowBox[{"StringTake", "[", 
           RowBox[{"a", ",", "b"}], "]"}], "<>", "\"\<Attributes[\>\"", "<>", 
          RowBox[{"ToString", "[", "x", "]"}], "<>", "\"\<] = \>\"", "<>", 
          RowBox[{"ToString", "[", "c", "]"}], "<>", "\"\<;\>\""}]}]}]}], 
      "]"}], ";", " ", 
     RowBox[{"StringReplace", "[", 
      RowBox[{"a", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<\\r\\n \\r\\n\>\"", "->", "\"\<\\r\\n\>\""}], ",", 
         RowBox[{"\"\<\\r\\n\\r\\n\>\"", "->", "\"\<\>\""}]}], "}"}]}], 
      "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Arity`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Arity", "[", 
   RowBox[{"P_", "/;", 
    RowBox[{
     RowBox[{"SystemQ", "[", "P", "]"}], "||", 
     RowBox[{"CompileFuncQ", "[", "P", "]"}], "||", 
     RowBox[{"BlockFuncModQ", "[", "P", "]"}], "||", 
     RowBox[{"PureFuncQ", "[", "P", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "a", "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"SystemQ", "[", "P", "]"}], ",", "\"\<System\>\"", ",", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{"Args", "[", "P", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Mapp", "[", 
        RowBox[{"SetAttributes", ",", 
         RowBox[{"{", 
          RowBox[{"ToString", ",", "StringFreeQ"}], "}"}], ",", "Listable"}], 
        "]"}], ";", " ", 
       RowBox[{"a", "=", 
        RowBox[{"Map", "[", 
         RowBox[{"ToString", ",", "a"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"a", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"DeleteDuplicates", "[", 
               RowBox[{"StringFreeQ", "[", 
                RowBox[{"#", ",", "\"\<__\>\""}], "]"}], "]"}], "===", 
              RowBox[{"{", "True", "}"}]}], ",", 
             RowBox[{"Length", "[", "#", "]"}], ",", "\"\<Undefined\>\""}], 
            "]"}], "&"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"NestListQ", "[", "a", "]"}], ",", "a", ",", 
            RowBox[{"{", "a", "}"}]}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Mapp", "[", 
        RowBox[{"ClearAttributes", ",", 
         RowBox[{"{", 
          RowBox[{"ToString", ",", "StringFreeQ"}], "}"}], ",", "Listable"}], 
        "]"}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "1"}], ",", 
         RowBox[{"a", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "a"}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Arity1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Arity1", "[", 
   RowBox[{"P_", "/;", 
    RowBox[{
     RowBox[{"SystemQ", "[", "P", "]"}], "||", 
     RowBox[{"CompileFuncQ", "[", "P", "]"}], "||", 
     RowBox[{"PureFuncQ", "[", "P", "]"}], "||", 
     RowBox[{"BlockFuncModQ", "[", "P", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "a", "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"SystemQ", "[", "P", "]"}], ",", "\"\<System\>\"", ",", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{"Args", "[", "P", "]"}]}], ";", " ", 
       RowBox[{"a", "=", 
        RowBox[{"Mapp1", "[", 
         RowBox[{"ToString", ",", "a"}], "]"}]}], ";", " ", 
       RowBox[{"a", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"DeleteDuplicates", "[", 
               RowBox[{"StringFreeQ", "[", 
                RowBox[{"#", ",", "\"\<__\>\""}], "]"}], "]"}], "===", 
              RowBox[{"{", "True", "}"}]}], ",", 
             RowBox[{"Length", "[", "#", "]"}], ",", "\"\<Undefined\>\""}], 
            "]"}], "&"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"NestListQ", "[", "a", "]"}], ",", "a", ",", 
            RowBox[{"{", "a", "}"}]}], "]"}]}], "]"}]}], ";", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "1"}], ",", 
         RowBox[{"a", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "a"}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ArityBFM`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ArityBFM", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"HeadPF", "[", "x", "]"}], "}"}], "]"}]}], ",", "b"}], "}"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"StringFreeQ", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{"\"\<__\>\"", ",", "\"\<___\>\""}], "}"}]}], "]"}]}], 
           ",", "\"\<Undefined\>\"", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"ToExpression", "[", 
             RowBox[{"\"\<{\>\"", "<>", 
              RowBox[{"StringTake", "[", 
               RowBox[{
                RowBox[{"StringReplace", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"ToString", "[", "x", "]"}], "<>", "\"\<[\>\""}], 
                   "\[Rule]", "\"\<\>\""}], ",", "1"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", 
                  RowBox[{"-", "2"}]}], "}"}]}], "]"}], "<>", "\"\<}\>\""}], 
             "]"}], "]"}]}], "]"}], "&"}], ",", "a"}], "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "b", "]"}], "\[Equal]", "1"}], ",", 
       RowBox[{"b", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "b"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ArityBFM1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ArityBFM1", "[", "x_Symbol", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{"ClearAll", ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "c"}], "}"}]}], "]"}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"ProcFuncBlQ1", "[", 
            RowBox[{"x", ",", "c"}], "]"}], "}"}], "]"}], "]"}], 
        "\[NotEqual]", 
        RowBox[{"{", "True", "}"}]}], ",", "$Failed", ",", 
       RowBox[{
        RowBox[{"Quiet", "[", 
         RowBox[{"Check", "[", 
          RowBox[{
           RowBox[{"ArgsBFM", "[", 
            RowBox[{"x", ",", "a"}], "]"}], ",", 
           RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"b", "=", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";", " ", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"!", 
                 RowBox[{"StringFreeQ", "[", 
                  RowBox[{"#", ",", "\"\<___\>\""}], "]"}]}], ",", 
                RowBox[{
                 RowBox[{"b", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], "++"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"!", 
                   RowBox[{"StringFreeQ", "[", 
                    RowBox[{"#", ",", "\"\<__\>\""}], "]"}]}], ",", 
                  RowBox[{
                   RowBox[{"b", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "++"}], ",", 
                  RowBox[{
                   RowBox[{"b", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "++"}]}], "]"}]}], "]"}], 
              "&"}], ",", 
             RowBox[{"a", "[", 
              RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ";", " ", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"d", ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"b", ",", 
               RowBox[{"Plus", "[", 
                RowBox[{"0", ",", 
                 RowBox[{"Sequences", "[", "b", "]"}]}], "]"}]}], "]"}]}], 
            "]"}], ";", " ", 
           RowBox[{"b", "=", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", 
            RowBox[{"Length", "[", "a", "]"}]}], "}"}]}], "]"}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "d", "]"}], "\[Equal]", "1"}], ",", 
          RowBox[{"d", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "d"}], "]"}]}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`AritySystemFunction`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AritySystemFunction", "[", 
   RowBox[{"x_", ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "g", ",", "p"}], "}"}], 
    ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"SysFunctionQ", "[", "x", "]"}]}], ",", "$Failed", ",", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{"SyntaxInformation", "[", "x", "]"}]}], ";", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"a", "\[Equal]", 
          RowBox[{"{", "}"}]}], ",", "$Failed", ",", " ", 
         RowBox[{
          RowBox[{"c", "=", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";", 
          RowBox[{"b", "=", 
           RowBox[{"Map", "[", 
            RowBox[{"ToString", ",", 
             RowBox[{
              RowBox[{"a", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", " ", 
          RowBox[{"b", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"SuffPref", "[", 
                 RowBox[{"#", ",", "\"\<{\>\"", ",", "1"}], "]"}], ",", 
                "\"\<_\>\"", ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"SuffPref", "[", 
                   RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Optional\>\"", ",", "\"\<OptionsPattern\>\""}], 
                    "}"}], ",", "1"}], "]"}], ",", "\"\<_.\>\"", ",", "#"}], 
                 "]"}]}], "]"}], "&"}], ",", "b"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"{", "y", "}"}], "\[NotEqual]", 
              RowBox[{"{", "}"}]}], "&&", 
             RowBox[{"!", 
              RowBox[{"HowAct", "[", "y", "]"}]}]}], ",", 
            RowBox[{"y", "=", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"ToExpression", "[", 
                 RowBox[{
                  RowBox[{"ToString", "[", 
                   RowBox[{"Unique", "[", "\"\<x\>\"", "]"}], "]"}], "<>", 
                  "#"}], "]"}], "&"}], ",", "b"}], "]"}]}], ",", "Null"}], 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"#", "==", "\"\<_\>\""}], ",", 
               RowBox[{
                RowBox[{"c", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "++"}], ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"#", "==", "\"\<_.\>\""}], ",", 
                 RowBox[{
                  RowBox[{"c", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "++"}], ",", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"#", "==", "\"\<__\>\""}], ",", 
                   RowBox[{
                    RowBox[{"c", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "++"}], ",", 
                   RowBox[{
                    RowBox[{"c", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "++"}]}], "]"}]}], 
                "]"}]}], "]"}], "&"}], ",", "b"}], "]"}], ";", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"p", ",", "c", ",", "d", ",", "g"}], "}"}], "=", "c"}], 
          ";", " ", 
          RowBox[{"d", "=", 
           RowBox[{"DeleteDuplicates", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"p", "+", "d"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"d", "\[NotEqual]", "0"}], "||", 
                 RowBox[{"g", "\[NotEqual]", "0"}]}], ",", "Infinity", ",", 
                RowBox[{"p", "+", "c"}]}], "]"}]}], "}"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"d", "\[NotEqual]", 
             RowBox[{"{", 
              RowBox[{"0", ",", "Infinity"}], "}"}]}], ",", "d", ",", 
            RowBox[{
             RowBox[{"Quiet", "[", 
              RowBox[{"x", "[", "Null", "]"}], "]"}], ";", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Set", "[", 
                 RowBox[{"p", ",", 
                  RowBox[{"Messages", "[", "x", "]"}]}], "]"}], "\[Equal]", 
                RowBox[{"{", "}"}]}], ",", "d", ",", " ", 
               RowBox[{
                RowBox[{"p", "=", 
                 RowBox[{"Select", "[", 
                  RowBox[{
                   RowBox[{"Map", "[", 
                    RowBox[{"ToString", ",", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Part", "[", 
                    RowBox[{"#", ",", "2"}], "]"}], "&"}], ",", "p"}], 
                    "]"}]}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"!", 
                    RowBox[{"StringFreeQ", "[", 
                    RowBox[{"#", ",", "\"\< expected\>\""}], "]"}]}], "&"}]}],
                   "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"p", "=", 
                 RowBox[{"Map", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"StringTake", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"#", ",", "\"\<;\>\""}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], ",", 
                    RowBox[{"-", "2"}]}], "}"}]}], "]"}], "&"}], ",", "p"}], 
                  "]"}]}], ";", "  ", 
                RowBox[{"p", "=", 
                 RowBox[{"ToExpression", "[", 
                  RowBox[{"Flatten", "[", 
                   RowBox[{"StringCases", "[", 
                    RowBox[{"p", ",", 
                    RowBox[{"DigitCharacter", ".."}]}], "]"}], "]"}], "]"}]}],
                 ";", " ", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"p", "\[Equal]", 
                   RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"{", "1", "}"}], ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "p", "]"}], ">", "1"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Min", "[", "p", "]"}], ",", 
                    RowBox[{"Max", "[", "p", "]"}]}], "}"}], ",", "p"}], 
                   "]"}]}], "]"}]}]}], "]"}]}]}], "]"}]}]}], "]"}]}]}], 
     "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`AritySystemFunction1`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AritySystemFunction1", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"SystemQ", "[", "x", "]"}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"FindFile1", "[", 
        RowBox[{
        "\"\<functioninformation.m\>\"", ",", "$InstallationDirectory"}], 
        "]"}]}], ",", "b", ",", "c", ",", 
      RowBox[{"d", "=", "\"\<\>\""}], " ", ",", "k", ",", "p", ",", 
      RowBox[{"g", "=", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"StringReplace", "[", 
       RowBox[{
        RowBox[{"StringReplace", "[", 
         RowBox[{
          RowBox[{"ReadString", "[", "a", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<\\n\>\"", " ", "->", "\"\<\>\""}], ",", 
            RowBox[{"\"\<\\r\>\"", "->", "\"\<\>\""}]}], "}"}]}], "]"}], ",", 
        RowBox[{"\"\<    \>\"", "->", "\"\< \>\""}]}], "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"StringFreeQ", "[", 
        RowBox[{"a", ",", 
         RowBox[{"c", "=", 
          RowBox[{"ToString1", "[", 
           RowBox[{"p", "=", 
            RowBox[{"ToString", "[", "x", "]"}]}], "]"}]}]}], "]"}], ",", 
       "$Failed", ",", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"StringPosition", "[", 
            RowBox[{"a", ",", 
             RowBox[{"\"\<{\>\"", "<>", "c"}]}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "c"}], ",", 
          RowBox[{"k", "<", "Infinity"}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{
           RowBox[{"d", "=", 
            RowBox[{"d", "<>", 
             RowBox[{"StringTake", "[", 
              RowBox[{"a", ",", 
               RowBox[{"{", 
                RowBox[{"k", ",", "k"}], "}"}]}], "]"}]}]}], ";", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"SyntaxQ", "[", "d", "]"}], ",", 
             RowBox[{"Break", "[", "]"}]}], "]"}]}]}], "]"}], ";", " ", 
        RowBox[{"d", "=", 
         RowBox[{
          RowBox[{"ToExpression", "[", "d", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", "y", "}"}], "\[NotEqual]", 
            RowBox[{"{", "}"}]}], "&&", 
           RowBox[{"!", 
            RowBox[{"HowAct", "[", "y", "]"}]}]}], ",", 
          RowBox[{"y", "=", "d"}], ",", "Null"}], "]"}], ";", " ", 
        RowBox[{"d", "=", 
         RowBox[{"Map", "[", 
          RowBox[{"ToString", ",", "d"}], "]"}]}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"d", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"SuffPref", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"{", 
                  RowBox[{"\"\<Optional\>\"", ",", "\"\<OptionsPattern\>\""}],
                   "}"}], ",", "1"}], "]"}], ",", "\"\<_.\>\"", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"SuffPref", "[", 
                  RowBox[{"#", ",", "\"\<{\>\"", ",", "1"}], "]"}], ",", 
                 "\"\<_\>\"", ",", "#"}], "]"}]}], "]"}], "&"}], ",", "d"}], 
           "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"#", "==", "\"\<_\>\""}], ",", 
             RowBox[{
              RowBox[{"g", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "++"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"#", "==", "\"\<_.\>\""}], ",", 
               RowBox[{
                RowBox[{"g", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "++"}], ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"#", "==", "\"\<__\>\""}], ",", 
                 RowBox[{
                  RowBox[{"g", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], "++"}], ",", 
                 RowBox[{
                  RowBox[{"g", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], "++"}]}], "]"}]}], "]"}]}],
             "]"}], "&"}], ",", "d"}], "]"}], ";", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"p", ",", "c", ",", "d", ",", "g"}], "}"}], "=", "g"}], ";",
         "  ", 
        RowBox[{"d", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"DeleteDuplicates", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"p", "+", "d"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"d", "\[NotEqual]", "0"}], "||", 
                RowBox[{"g", "\[NotEqual]", "0"}]}], ",", "Infinity", ",", 
               RowBox[{"p", "+", "c"}]}], "]"}]}], "}"}], "]"}], "]"}]}]}]}], 
      "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`MessagesOut`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MessagesOut", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"SyntaxQ", "[", "x", "]"}], "&&", 
         RowBox[{"CallQ", "[", "x", "]"}]}], ")"}]}], ",", "$Failed", ",", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{"HeadName1", "[", "x", "]"}]}], ";", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"BlockFuncModQ", "[", "a", "]"}], "||", 
          RowBox[{"SysFunctionQ", "[", 
           RowBox[{"Symbol", "[", "a", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"BlockFuncModQ", "[", "a", "]"}], ",", "Null", ",", 
            RowBox[{"ToExpression", "[", 
             RowBox[{"\"\<Messages[\>\"", "<>", "a", "<>", "\"\<]={}\>\""}], 
             "]"}]}], "]"}], ";", 
          RowBox[{"Quiet", "[", 
           RowBox[{"ToExpression", "[", "x", "]"}], "]"}], ";", " ", 
          RowBox[{"b", "=", 
           RowBox[{"ToExpression", "[", 
            RowBox[{"\"\<Messages[\>\"", "<>", "a", "<>", "\"\<]\>\""}], 
            "]"}]}], ";", " ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"BlockFuncModQ", "[", "a", "]"}], ",", "Null", ",", 
            RowBox[{"ToExpression", "[", 
             RowBox[{"\"\<Messages[\>\"", "<>", "a", "<>", "\"\<]={}\>\""}], 
             "]"}]}], "]"}], ";", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"{", "y", "}"}], "\[NotEqual]", 
              RowBox[{"{", "}"}]}], "&&", 
             RowBox[{"!", 
              RowBox[{"HowAct", "[", "y", "]"}]}]}], ",", 
            RowBox[{
             RowBox[{"y", "=", 
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Part", "[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], ",", 
                    RowBox[{"Part", "[", 
                    RowBox[{"#", ",", "2"}], "]"}]}], "}"}], "&"}], ",", 
                  "b"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"!", 
                  RowBox[{"SameQ", "[", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"$Off", "[", "]"}]}], "]"}]}], "&"}]}], "]"}]}], 
             ";", " ", 
             RowBox[{"y", "=", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "y", "]"}], "\[Equal]", "1"}], ",", 
                RowBox[{"y", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "y"}], "]"}]}]}], ",", 
            "Null"}], "]"}], ";", " ", "b"}], ",", "$Failed"}], "]"}]}]}], 
     "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`$InBlockMod`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"$InBlockMod", ":=", " ", 
  RowBox[{"Quiet", "[", " ", 
   RowBox[{"Check", "[", 
    RowBox[{
     RowBox[{"StringTake", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Stack", "[", "Block", "]"}], "\[NotEqual]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"ToString", "[", 
          RowBox[{"InputForm", "[", 
           RowBox[{
            RowBox[{"Stack", "[", "Block", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Stack", "[", "Module", "]"}], "\[NotEqual]", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"StringReplace3", "[", 
            RowBox[{
             RowBox[{"ToString", "[", 
              RowBox[{"InputForm", "[", 
               RowBox[{
                RowBox[{"Stack", "[", "Module", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"Sequences", "[", 
              RowBox[{"Riffle", "[", 
               RowBox[{
                RowBox[{"Select", "[", 
                 RowBox[{
                  RowBox[{"StringReplace", "[", 
                   RowBox[{
                    RowBox[{"StringSplit", "[", 
                    RowBox[{
                    RowBox[{"StringTake", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"SubStrSymbolParity1", "[", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"InputForm", "[", 
                    RowBox[{
                    RowBox[{"Stack", "[", "Module", "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
                    "\"\<{\>\"", ",", "\"\<}\>\""}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "2"}]}], "}"}]}], "]"}], ",", "\"\< \>\""}], 
                    "]"}], ",", 
                    RowBox[{"\"\<,\>\"", "\[Rule]", "\"\<\>\""}]}], "]"}], 
                  ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"StringTake", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "1"}]}], "]"}], "\[Equal]", "\"\<$\>\""}], 
                   "&"}]}], "]"}], ",", 
                RowBox[{"Mapp", "[", 
                 RowBox[{"StringTake", ",", 
                  RowBox[{"Select", "[", 
                   RowBox[{
                    RowBox[{"StringReplace", "[", 
                    RowBox[{
                    RowBox[{"StringSplit", "[", 
                    RowBox[{
                    RowBox[{"StringTake", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"SubStrSymbolParity1", "[", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"InputForm", "[", 
                    RowBox[{
                    RowBox[{"Stack", "[", "Module", "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
                    "\"\<{\>\"", ",", "\"\<}\>\""}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "2"}]}], "}"}]}], "]"}], ",", "\"\< \>\""}], 
                    "]"}], ",", 
                    RowBox[{"\"\<,\>\"", "\[Rule]", "\"\<\>\""}]}], "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringTake", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "1"}]}], "]"}], "\[Equal]", "\"\<$\>\""}], 
                    "&"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", 
                    RowBox[{"-", "2"}]}], "}"}]}], "]"}]}], "]"}], "]"}]}], 
            "]"}]}], "]"}], ",", "$Failed"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", 
         RowBox[{"-", "2"}]}], "}"}]}], "]"}], ",", "Null"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DefFunc`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DefFunc", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"SymbolQ", "[", "x", "]"}], "||", 
     RowBox[{"StringQ", "[", "x", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"GenRules", "[", 
        RowBox[{
         RowBox[{"Map14", "[", 
          RowBox[{"StringJoin", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Global`\>\"", ",", 
             RowBox[{"Context", "[", "x", "]"}]}], "}"}], ",", 
           RowBox[{
            RowBox[{"ToString", "[", "x", "]"}], "<>", "\"\<`\>\""}]}], "]"}],
          ",", "\"\<\>\""}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"StringSplit", "[", 
        RowBox[{
         RowBox[{"ToString", "[", 
          RowBox[{"InputForm", "[", 
           RowBox[{"Definition", "[", "x", "]"}], "]"}], "]"}], ",", 
         "\"\<\\n \\n\>\""}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"ToExpression", "[", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringReplace", "[", 
          RowBox[{"#", ",", "a"}], "]"}], "&"}], ",", "b"}], "]"}], "]"}], 
     ";", " ", 
     RowBox[{"Definition", "[", "x", "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SyntaxLength1`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SyntaxLength1", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "\"\<\>\""}], ",", 
      RowBox[{"b", "=", "1"}], ",", "d", ",", 
      RowBox[{"h", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"StringLength", "[", "x", "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"b", "\[LessEqual]", "c"}], ",", 
       RowBox[{
        RowBox[{"d", "=", 
         RowBox[{"SyntaxQ", "[", 
          RowBox[{"a", "=", 
           RowBox[{"a", "<>", 
            RowBox[{"StringTake", "[", 
             RowBox[{"x", ",", 
              RowBox[{"{", 
               RowBox[{"b", ",", "b"}], "}"}]}], "]"}]}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"d", ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"h", ",", 
            RowBox[{"StringTrim2", "[", 
             RowBox[{"a", ",", 
              RowBox[{"{", 
               RowBox[{"\"\<+\>\"", ",", "\"\<-\>\"", ",", "\"\< \>\""}], 
               "}"}], ",", "3"}], "]"}]}], "]"}]}], "]"}], ";", " ", 
        RowBox[{"b", "++"}]}]}], "]"}], ";", " ", 
     RowBox[{"h", "=", 
      RowBox[{"DeleteDuplicates", "[", "h", "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", "y", "}"}], "\[NotEqual]", 
         RowBox[{"{", "}"}]}], "&&", 
        RowBox[{"!", 
         RowBox[{"HowAct", "[", 
          RowBox[{
           RowBox[{"{", "y", "}"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"{", "y", "}"}], "=", 
        RowBox[{"{", "h", "}"}]}]}], "]"}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"h", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", "0", ",", 
       RowBox[{"StringLength", "[", 
        RowBox[{"h", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}], "]"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`PrefixQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PrefixQ", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"StringQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"x", "\[Equal]", "\"\<\>\""}], ",", "True", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"!", 
        RowBox[{"StringFreeQ", "[", 
         RowBox[{"y", ",", "x"}], "]"}]}], "&&", 
       RowBox[{
        RowBox[{"StringTake", "[", 
         RowBox[{"y", ",", 
          RowBox[{"StringLength", "[", "x", "]"}]}], "]"}], "\[Equal]", 
        "x"}]}], ",", "True", ",", "False"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`PureDefinition`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PureDefinition", "[", 
   RowBox[{"x_", ",", "t___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b", ",", "c", ",", "d", ",", 
      RowBox[{"h", "=", 
       RowBox[{
        RowBox[{"ToString", "[", "x", "]"}], "<>", "\"\< /: Default[\>\""}]}],
       ",", 
      RowBox[{"a", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"UnevaluatedQ", "[", 
          RowBox[{"Definition2", ",", "x"}], "]"}], ",", "$Failed", ",", 
         RowBox[{"Definition2", "[", "x", "]"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"a", "===", "$Failed"}], ",", 
       RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", " ", 
     RowBox[{"b", "=", 
      RowBox[{"a", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", 
         RowBox[{"-", "2"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SuffPref", "[", 
         RowBox[{
          RowBox[{"b", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}], ",", 
          RowBox[{"Map3", "[", 
           RowBox[{"StringJoin", ",", 
            RowBox[{"\"\<Options[\>\"", "<>", 
             RowBox[{"ToString", "[", "x", "]"}], "<>", "\"\<]\>\""}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\< = \>\"", ",", "\"\< := \>\""}], "}"}]}], "]"}], 
          ",", "1"}], "]"}], ",", 
        RowBox[{"b", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", 
           RowBox[{"-", "2"}]}], "]"}], "]"}], ",", "b"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", "t", "}"}], "\[NotEqual]", 
         RowBox[{"{", "}"}]}], "&&", 
        RowBox[{"!", 
         RowBox[{"HowAct", "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"d", "=", 
         RowBox[{"MinusList", "[", 
          RowBox[{"a", ",", "c"}], "]"}]}], ";", " ", 
        RowBox[{"t", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "d", "]"}], ">", "1"}], ",", "d", ",", 
             RowBox[{"Flatten", "[", "d", "]"}]}], "]"}], ",", 
           RowBox[{"Select", "[", 
            RowBox[{"a", ",", 
             RowBox[{
              RowBox[{"SuffPref", "[", 
               RowBox[{"#", ",", "h", ",", "1"}], "]"}], "&"}]}], "]"}]}], 
          "]"}]}]}]}], "]"}], ";", " ", 
     RowBox[{"c", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"c", ",", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"SuffPref", "[", 
           RowBox[{"#", ",", "h", ",", "1"}], "]"}]}], "&"}]}], "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "c", "]"}], "\[Equal]", "1"}], ",", 
       RowBox[{"c", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "c"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`MathPackages`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MathPackages", "[", "h___", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"c", "=", "$InstallationDirectory"}], ",", "b", ",", 
      RowBox[{"a", "=", "\"\<$Kr20Art27$\>\""}], ",", "d"}], "}"}], ",", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{"Run", "[", 
       RowBox[{"\"\<Dir \>\"", "<>", 
        RowBox[{"StandPath", "[", "c", "]"}], "<>", 
        "\"\</A/B/O/S > $Kr20Art27$\>\""}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"d", "\[NotEqual]", "0"}], ",", "$Failed", ",", 
       RowBox[{
        RowBox[{"d", "=", 
         RowBox[{"ReadList", "[", 
          RowBox[{"a", ",", "String"}], "]"}]}], ";", 
        RowBox[{"DeleteFile", "[", "a", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"b", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"!", 
                RowBox[{"DirectoryQ", "[", "#", "]"}]}], "&&", 
               RowBox[{
                RowBox[{"FileExtension", "[", "#", "]"}], "\[Equal]", 
                "\"\<m\>\""}]}], ",", 
              RowBox[{"FileBaseName", "[", "#", "]"}], ",", "\"\<Null\>\""}], 
             "]"}], "&"}], ",", "d"}], "]"}]}], ";", 
        RowBox[{"b", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"b", ",", 
           RowBox[{
            RowBox[{"#", "\[NotEqual]", "\"\<Null\>\""}], "&"}]}], "]"}]}], 
        ";", " ", "\[IndentingNewLine]", 
        RowBox[{"b", "=", 
         RowBox[{"MinusList", "[", 
          RowBox[{
           RowBox[{"DeleteDuplicates", "[", "b", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<init\>\"", ",", "\"\<PacletInfo\>\""}], "}"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", "h", "}"}], "\[NotEqual]", 
            RowBox[{"{", "}"}]}], "&&", 
           RowBox[{"!", 
            RowBox[{"HowAct", "[", "h", "]"}]}]}], ",", 
          RowBox[{"h", "=", 
           RowBox[{"{", 
            RowBox[{"$Version", ",", "$LicenseType", ",", 
             RowBox[{"StringJoin", "[", 
              RowBox[{
               RowBox[{"StringSplit", "[", 
                RowBox[{
                 RowBox[{"StringReplace", "[", 
                  RowBox[{
                   RowBox[{"DateString", "[", "$LicenseExpirationDate", "]"}],
                    ",", 
                   RowBox[{"\"\< \>\"", "\[Rule]", "\"\<*\>\""}]}], "]"}], 
                 ",", "\"\<*\>\""}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"1", ";;", 
                 RowBox[{"-", "2"}]}], "]"}], "]"}], "]"}]}], "}"}]}]}], 
         "]"}]}]}], "]"}], ";", 
     RowBox[{"Sort", "[", "b", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SystemPackages`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SystemPackages", "[", "y___", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"FileNames", "[", 
       RowBox[{
       "\"\<*.m\>\"", ",", "$InstallationDirectory", ",", "Infinity"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"FileBaseName", "[", "#", "]"}], ",", 
             RowBox[{"ContextMfile", "[", "#", "]"}]}], "}"}], "&"}], ",", 
          "a"}], "]"}], "]"}], "]"}]}], ";", " ", 
     RowBox[{"b", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"b", ",", 
        RowBox[{
         RowBox[{"#", "\[NotEqual]", 
          RowBox[{"{", "}"}]}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", "y", "}"}], "\[NotEqual]", 
         RowBox[{"{", "}"}]}], "&&", 
        RowBox[{"!", 
         RowBox[{"HowAct", "[", "y", "]"}]}]}], ",", 
       RowBox[{"y", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"SameQ", "[", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", "$Failed"}], "]"}], 
               ",", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}], ",", "b"}], 
           "]"}], ",", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"SameQ", "[", 
             RowBox[{"#", ",", "Null"}], "]"}]}], "&"}]}], "]"}]}]}], "]"}], 
     ";", " ", 
     RowBox[{"Select", "[", 
      RowBox[{"b", ",", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"SameQ", "[", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", "$Failed"}], "]"}]}], 
        "&"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`RedundantLocals`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RedundantLocals", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", "p", ",", "g", ",", 
      RowBox[{"k", "=", "1"}], ",", "j", ",", "v", ",", 
      RowBox[{"t", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"z", "=", "\"\<\>\""}]}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PureDefinition", "[", "x", "]"}], ",", 
        RowBox[{"Locals1", "[", "x", "]"}]}], "}"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"StringQ", "[", "a", "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"b", "\[Equal]", 
          RowBox[{"{", "}"}]}], ",", "True", ",", 
         RowBox[{
          RowBox[{"p", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", 
             RowBox[{"StringPosition", "[", 
              RowBox[{"a", ",", 
               RowBox[{"{", 
                RowBox[{"\"\<} = \>\"", ",", "\"\<} := \>\""}], "}"}]}], 
              "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"p", "=", 
           RowBox[{"Select", "[", 
            RowBox[{"p", ",", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"MemberQ", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\"\<{\\\"}\>\"", ",", "\"\< \\\"}\>\""}], "}"}], 
                 ",", 
                 RowBox[{"StringTake", "[", 
                  RowBox[{"a", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "-", "2"}], ",", "#"}], "}"}]}], "]"}]}], 
                "]"}]}], "&"}]}], "]"}]}], ";", 
          RowBox[{"c", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Map3", "[", 
               RowBox[{"StringJoin", ",", "#", ",", 
                RowBox[{"{", 
                 RowBox[{"\"\< := \>\"", ",", "\"\< = \>\""}], "}"}]}], "]"}],
               "&"}], ",", "b"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"g", "=", 
           RowBox[{"Select", "[", 
            RowBox[{"b", ",", 
             RowBox[{
              RowBox[{"StringFreeQ", "[", 
               RowBox[{"a", ",", 
                RowBox[{"Map3", "[", 
                 RowBox[{"StringJoin", ",", "#", ",", 
                  RowBox[{"{", 
                   RowBox[{"\"\< := \>\"", ",", "\"\< = \>\""}], "}"}]}], 
                 "]"}]}], "]"}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"While", "[", 
           RowBox[{
            RowBox[{"k", "\[LessEqual]", 
             RowBox[{"Length", "[", "p", "]"}]}], ",", 
            RowBox[{
             RowBox[{"v", "=", 
              RowBox[{"p", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], ";", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"j", "=", "v"}], ",", 
               RowBox[{"j", "\[GreaterEqual]", "1"}], ",", 
               RowBox[{"j", "--"}], ",", 
               RowBox[{
                RowBox[{"z", "=", 
                 RowBox[{
                  RowBox[{"StringTake", "[", 
                   RowBox[{"a", ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "j"}], "}"}]}], "]"}], "<>", "z"}]}], 
                ";", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"!", 
                   RowBox[{"SameQ", "[", 
                    RowBox[{
                    RowBox[{"Quiet", "[", 
                    RowBox[{"ToExpression", "[", "z", "]"}], "]"}], ",", 
                    "$Failed"}], "]"}]}], ",", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"t", ",", "z"}], "]"}]}], "]"}]}]}], "]"}], ";", 
             RowBox[{"z", "=", "\"\<\>\""}], ";", 
             RowBox[{"k", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"t", "=", 
           RowBox[{"MinusList", "[", 
            RowBox[{"g", ",", 
             RowBox[{"Flatten", "[", 
              RowBox[{"Map", "[", 
               RowBox[{"StrToList", ",", "t"}], "]"}], "]"}]}], "]"}]}], ";", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"t", "==", 
             RowBox[{"{", "}"}]}], ",", "t", ",", 
            RowBox[{
             RowBox[{"p", "=", 
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\"\< \>\"", "<>", "#", "<>", "\"\<[\>\""}], "&"}],
                   ",", "t"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"!", 
                  RowBox[{"StringFreeQ", "[", 
                   RowBox[{"a", ",", "#"}], "]"}]}], "&"}]}], "]"}]}], ";", 
             "  ", "\[IndentingNewLine]", 
             RowBox[{"g", "=", 
              RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"k", "=", "1"}], ",", 
               RowBox[{"k", "\[LessEqual]", 
                RowBox[{"Length", "[", "p", "]"}]}], ",", 
               RowBox[{"k", "++"}], ",", 
               RowBox[{
                RowBox[{"v", "=", 
                 RowBox[{"StringPosition", "[", 
                  RowBox[{"a", ",", 
                   RowBox[{"p", "[", 
                    RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], ";", 
                RowBox[{"v", "=", 
                 RowBox[{"Map", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "&"}], ",", "v"}], 
                  "]"}]}], ";", 
                RowBox[{"z", "=", 
                 RowBox[{"StringTake", "[", 
                  RowBox[{
                   RowBox[{"p", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "2"}]}], "}"}]}], "]"}]}], ";", 
                RowBox[{"c", "=", "1"}], ";", "\[IndentingNewLine]", 
                RowBox[{"For", "[", 
                 RowBox[{
                  RowBox[{"j", "=", "c"}], ",", 
                  RowBox[{"j", "\[LessEqual]", 
                   RowBox[{"Length", "[", "v", "]"}]}], ",", 
                  RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"For", "[", 
                   RowBox[{
                    RowBox[{"b", "=", 
                    RowBox[{"v", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], ",", 
                    RowBox[{"b", "\[LessEqual]", 
                    RowBox[{"StringLength", "[", "a", "]"}]}], ",", 
                    RowBox[{"b", "++"}], ",", 
                    RowBox[{
                    RowBox[{"z", "=", 
                    RowBox[{"z", "<>", 
                    RowBox[{"StringTake", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{"{", 
                    RowBox[{"b", ",", "b"}], "}"}]}], "]"}]}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"SameQ", "[", 
                    RowBox[{
                    RowBox[{"Quiet", "[", 
                    RowBox[{"ToExpression", "[", "z", "]"}], "]"}], ",", 
                    "$Failed"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"g", ",", "z"}], "]"}], ";", " ", 
                    RowBox[{"c", "=", 
                    RowBox[{"j", "+", "1"}]}], ";", " ", 
                    RowBox[{"z", "=", 
                    RowBox[{"StringTake", "[", 
                    RowBox[{
                    RowBox[{"p", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "2"}]}], "}"}]}], "]"}]}], ";", 
                    RowBox[{"Break", "[", "]"}]}]}], "]"}]}]}], "]"}]}], 
                 "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"MinusList", "[", 
              RowBox[{"t", ",", 
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"HeadName", "[", "#", "]"}], "&"}], ",", 
                 RowBox[{"Select", "[", 
                  RowBox[{"g", ",", 
                   RowBox[{
                    RowBox[{"HeadingQ1", "[", "#", "]"}], "&"}]}], "]"}]}], 
                "]"}]}], "]"}]}]}], "]"}]}]}], "]"}], ",", 
       RowBox[{"\"\<Object <\>\"", "<>", 
        RowBox[{"ToString", "[", "x", "]"}], "<>", 
        "\"\<> has multiple definitions\>\""}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`RedundantLocalsM`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RedundantLocalsM", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", "d", ",", 
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"Unique", "[", "\"\<g\>\"", "]"}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{
        RowBox[{"d", "=", 
         RowBox[{"c", "<>", 
          RowBox[{"ToString", "[", "x", "]"}]}]}], ";", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"c", "<>", 
          RowBox[{"a", "[", 
           RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ";", " ", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"b", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"QFunction", "[", "d", "]"}], ",", "\"\<Function\>\"", 
            ",", 
            RowBox[{"RedundantLocals", "[", "d", "]"}]}], "]"}]}], "]"}], ";",
         " ", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"\"\<ClearAll[\>\"", "<>", "d", "<>", "\"\<]\>\""}], "]"}], 
        ";", " ", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", " ", 
     RowBox[{"Remove", "[", "c", "]"}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "b", "]"}], "\[Equal]", "1"}], ",", 
       RowBox[{"b", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "b"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SuffixQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SuffixQ", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"StringQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"x", "\[Equal]", "\"\<\>\""}], ",", "True", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"!", 
        RowBox[{"StringFreeQ", "[", 
         RowBox[{"y", ",", "x"}], "]"}]}], "&&", 
       RowBox[{
        RowBox[{"StringTake", "[", 
         RowBox[{"y", ",", 
          RowBox[{"-", 
           RowBox[{"StringLength", "[", "x", "]"}]}]}], "]"}], "\[Equal]", 
        "x"}]}], ",", "True", ",", "False"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SubsString`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SubsString", "[", 
   RowBox[{
    RowBox[{"s_", "/;", 
     RowBox[{"StringQ", "[", "s", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"ListQ", "[", "y", "]"}]}], ",", "pf___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "\"\<\>\""}], ",", "b", ",", "c", ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Set", "[", 
        RowBox[{"c", ",", 
         RowBox[{"Length", "[", "y", "]"}]}], "]"}], "<", "2"}], ",", "s", 
      ",", 
      RowBox[{
       RowBox[{"b", "=", 
        RowBox[{"Map", "[", 
         RowBox[{"ToString1", ",", "y"}], "]"}]}], ";", " ", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"c", "-", "1"}]}], ",", 
         RowBox[{
          RowBox[{"a", "=", 
           RowBox[{"a", "<>", 
            RowBox[{"b", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "<>", " ", 
            "\"\<~~ Shortest[__] ~~ \>\""}]}], ";", " ", 
          RowBox[{"k", "++"}]}]}], "]"}], ";", 
       RowBox[{"a", "=", 
        RowBox[{"a", "<>", 
         RowBox[{"b", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}]}]}], ";", " ", 
       RowBox[{"b", "=", 
        RowBox[{"StringCases", "[", 
         RowBox[{"s", ",", 
          RowBox[{"ToExpression", "[", "a", "]"}]}], "]"}]}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", "pf", "}"}], "\[NotEqual]", 
           RowBox[{"{", "}"}]}], "&&", 
          RowBox[{"PureFuncQ", "[", "pf", "]"}]}], ",", 
         RowBox[{"Select", "[", 
          RowBox[{"b", ",", "pf"}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", "pf", "}"}], "\[NotEqual]", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"StringTake", "[", 
               RowBox[{"#", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"StringLength", "[", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "+", "1"}], ",", 
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"StringLength", "[", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "]"}]}], "-", "1"}]}], 
                 "}"}]}], "]"}], "&"}], ",", "b"}], "]"}], ",", 
           RowBox[{"Select", "[", 
            RowBox[{"b", ",", 
             RowBox[{
              RowBox[{"StringQ", "[", "#", "]"}], "&"}]}], "]"}]}], "]"}]}], 
        "]"}]}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
  "Begin", "[", "\"\<`SubsString1`\>\"", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SubsString1", "[", 
   RowBox[{
    RowBox[{"s_", "/;", 
     RowBox[{"StringQ", "[", "s", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"ListQ", "[", "y", "]"}]}], ",", 
    RowBox[{"pf_", "/;", 
     RowBox[{
      RowBox[{"IntegerQ", "[", "pf", "]"}], "||", 
      RowBox[{"PureFuncQ", "[", "pf", "]"}]}]}], ",", 
    RowBox[{"t_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", "t"}], "]"}]}], ",", "r___"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"c", ",", "h", ",", 
      RowBox[{"a", "=", "\"\<\>\""}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"ToString1", ",", "y"}], "]"}]}], ",", 
      RowBox[{"d", "=", "s"}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Set", "[", 
         RowBox[{"c", ",", 
          RowBox[{"Length", "[", "y", "]"}]}], "]"}], "<", "2"}], ",", "s", 
       ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "r", "}"}], "\[NotEqual]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{
          RowBox[{"b", "=", 
           RowBox[{"Map", "[", 
            RowBox[{"StringReverse", ",", 
             RowBox[{"Reverse", "[", "b", "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"d", "=", 
           RowBox[{"StringReverse", "[", "s", "]"}]}]}]}], "]"}]}], "]"}], 
     ";", " ", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"c", "-", "1"}]}], ",", 
       RowBox[{
        RowBox[{"a", "=", 
         RowBox[{"a", "<>", 
          RowBox[{"b", "[", 
           RowBox[{"[", "k", "]"}], "]"}], "<>", 
          "\"\<~~ Shortest[__] ~~ \>\""}]}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", " ", 
     RowBox[{"a", "=", 
      RowBox[{"a", "<>", 
       RowBox[{"b", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}]}]}], ";", 
     RowBox[{"h", "=", 
      RowBox[{"StringCases", "[", 
       RowBox[{"d", ",", 
        RowBox[{"ToExpression", "[", "a", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"t", "\[Equal]", "0"}], ",", 
       RowBox[{"h", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"StringTake", "[", 
            RowBox[{"#", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"StringLength", "[", 
                 RowBox[{"b", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", "1"}], ",", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"StringLength", "[", 
                  RowBox[{"b", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "]"}]}], "+", "1"}]}], 
              "}"}]}], "]"}], "&"}], ",", "h"}], "]"}]}]}], "]"}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"PureFuncQ", "[", "pf", "]"}], ",", 
       RowBox[{"h", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"h", ",", "pf"}], "]"}]}]}], "]"}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "r", "}"}], "\[NotEqual]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"Reverse", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"StringReverse", ",", "h"}], "]"}], "]"}], ",", "h"}], 
      "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ReduceAdjacentStr`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReduceAdjacentStr", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"StringQ", "[", "y", "]"}]}], ",", 
    RowBox[{"n_", "/;", 
     RowBox[{"IntegerQ", "[", "n", "]"}]}], ",", "z___"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"StringPosition", "[", 
          RowBox[{
           RowBox[{"x", "<>", 
            RowBox[{"FromCharacterCode", "[", "0", "]"}]}], ",", "y", ",", 
           RowBox[{"IgnoreCase", "\[Rule]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", "z", "}"}], "\[NotEqual]", 
               RowBox[{"{", "}"}]}], ",", "True", ",", "False"}], "]"}]}]}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ",", "h", ",", "k"}], 
     "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"c", "\[Equal]", 
       RowBox[{"{", "}"}]}], ",", "x", ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"c", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], "==", 
            RowBox[{
             RowBox[{"c", "[", 
              RowBox[{"[", 
               RowBox[{"k", "+", "1"}], "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", 
           RowBox[{"b", "=", 
            RowBox[{"Union", "[", 
             RowBox[{"b", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"c", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], ",", 
                RowBox[{"c", "[", 
                 RowBox[{"[", 
                  RowBox[{"k", "+", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
           ",", 
           RowBox[{
            RowBox[{"b", "=", 
             RowBox[{"Union", "[", 
              RowBox[{"b", ",", 
               RowBox[{"{", 
                RowBox[{"c", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "}"}]}], "]"}]}], ";", " ", 
            RowBox[{"a", "=", 
             RowBox[{"Union", "[", 
              RowBox[{"a", ",", 
               RowBox[{"{", "b", "}"}]}], "]"}]}], ";", " ", 
            RowBox[{"b", "=", 
             RowBox[{"{", "}"}]}]}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", 
           RowBox[{
            RowBox[{"Length", "[", "c", "]"}], "-", "1"}]}], "}"}]}], "]"}], 
       ";", " ", 
       RowBox[{"a", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"a", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "#", "]"}], ">=", "n"}], "&"}]}], "]"}]}], 
       ";", 
       RowBox[{"a", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Quiet", "[", 
            RowBox[{"Check", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"#", "[", 
                 RowBox[{"[", 
                  RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", "Nothing"}],
              "]"}], "]"}], "&"}], ",", 
          RowBox[{"Map", "[", 
           RowBox[{"Flatten", ",", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Length", "[", "#", "]"}]}], "+", "n"}], ";;", 
                  RowBox[{"-", "1"}]}], "]"}], "]"}], "&"}], ",", "a"}], 
             "]"}]}], "]"}]}], "]"}]}], ";", " ", 
       RowBox[{"StringReplacePart", "[", 
        RowBox[{"x", ",", "\"\<\>\"", ",", "a"}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SubStrToSymb`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SubStrToSymb", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"n_", "/;", 
     RowBox[{"IntegerQ", "[", "n", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{"StringQ", "[", "y", "]"}], "&&", 
      RowBox[{"y", "!=", "\"\<\>\""}]}]}], ",", 
    RowBox[{"p_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", "p"}], "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"b", "=", 
       RowBox[{"StringLength", "[", "x", "]"}]}], ",", "c", ",", "d", ",", 
      "k"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"n", "\[LessEqual]", "0"}], "||", 
       RowBox[{"n", "\[GreaterEqual]", "b"}], "||", 
       RowBox[{"StringFreeQ", "[", 
        RowBox[{"x", ",", "y"}], "]"}]}], ",", "$Failed", ",", 
      RowBox[{
       RowBox[{"c", "=", 
        RowBox[{"StringTake", "[", 
         RowBox[{"x", ",", 
          RowBox[{"{", "n", "}"}]}], "]"}]}], ";", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"p", "\[Equal]", "0"}], ",", 
           RowBox[{"k", "=", 
            RowBox[{"n", "-", "1"}]}], ",", 
           RowBox[{"k", "=", 
            RowBox[{"n", "+", "1"}]}]}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"p", "\[Equal]", "0"}], ",", 
           RowBox[{"k", "\[GreaterEqual]", "1"}], ",", 
           RowBox[{"k", "\[LessEqual]", "b"}]}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"p", "\[Equal]", "0"}], ",", 
           RowBox[{"k", "--"}], ",", 
           RowBox[{"k", "++"}]}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Set", "[", 
             RowBox[{"d", ",", 
              RowBox[{"StringTake", "[", 
               RowBox[{"x", ",", 
                RowBox[{"{", "k", "}"}]}], "]"}]}], "]"}], "!=", "y"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"p", "\[Equal]", "0"}], ",", 
             RowBox[{"c", "=", 
              RowBox[{"d", "<>", "c"}]}], ",", 
             RowBox[{"c", "=", 
              RowBox[{"c", "<>", "d"}]}]}], "]"}], ",", 
           RowBox[{"Break", "[", "]"}]}], "]"}]}], "]"}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"k", "<", "1"}], "||", 
          RowBox[{"k", ">", "b"}]}], ",", "$Failed", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"p", "\[Equal]", "0"}], ",", 
           RowBox[{"c", "=", 
            RowBox[{"y", "<>", "c"}]}], ",", 
           RowBox[{"c", "=", 
            RowBox[{"c", "<>", "y"}]}]}], "]"}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StrAllSymbNumQ`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StrAllSymbNumQ", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"!", 
   RowBox[{"MemberQ", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"SymbolQ", "[", "#", "]"}], "||", 
         RowBox[{"Quiet", "[", 
          RowBox[{"IntegerQ", "[", 
           RowBox[{"ToExpression", "[", "#", "]"}], "]"}], "]"}]}], "&"}], 
       ",", 
       RowBox[{"Characters", "[", "x", "]"}]}], "]"}], ",", "False"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DirFD`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DirFD", "[", 
   RowBox[{"d_", "/;", 
    RowBox[{"DirQ", "[", "d", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "\"\<$DirFile$\>\""}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "}"}]}], "}"}]}], ",", "c", ",", "h", ",", "t", ",", 
      RowBox[{"p", "=", 
       RowBox[{"StandPath", "[", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"d", ",", 
          RowBox[{"\"\</\>\"", "\[Rule]", "\"\<\\\\\>\""}]}], "]"}], 
        "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"DirEmptyQ", "[", "p", "]"}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"{", "}"}], "]"}], ",", "Null"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"Run", "[", 
       RowBox[{"\"\<Dir \>\"", "<>", "p", "<>", "\"\< /B \>\"", "<>", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SuffPref", "[", 
           RowBox[{"p", ",", "\"\<\\\\\>\"", ",", "2"}], "]"}], ",", 
          "\"\<\>\"", ",", "\"\<\\\\\>\""}], "]"}], "<>", "\"\<*.* > \>\"", "<>",
         "a"}], "]"}]}], ";", " ", 
     RowBox[{"t", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"ToString", ",", 
        RowBox[{"ReadList", "[", 
         RowBox[{"a", ",", "String"}], "]"}]}], "]"}]}], ";", " ", 
     RowBox[{"DeleteFile", "[", "a", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"h", "=", 
           RowBox[{"d", "<>", "\"\<\\\\\>\"", "<>", "#"}]}], ";", " ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"DirectoryQ", "[", "h", "]"}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{
              RowBox[{"b", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "#"}], "]"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"FileExistsQ", "[", "h", "]"}], ",", 
              RowBox[{"AppendTo", "[", 
               RowBox[{
                RowBox[{"b", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", "#"}], "]"}], ",", 
              "Null"}], "]"}]}], "]"}]}], "}"}], "&"}], ",", "t"}], "]"}], 
     ";", " ", "b"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`TypeFilesD`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TypeFilesD", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"DirQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "\"\<$Art27Kr20$\>\""}], ",", "c", ",", 
      RowBox[{"b", "=", 
       RowBox[{"StandPath", "[", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"x", ",", 
          RowBox[{"\"\</\>\"", "\[Rule]", "\"\<\\\\\>\""}]}], "]"}], "]"}]}], 
      ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", "p"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"DirEmptyQ", "[", "x", "]"}], ",", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{
       RowBox[{"Run", "[", 
        RowBox[{
        "\"\<Dir /S/B/A \>\"", ",", "b", ",", "\"\< > \>\"", ",", "a"}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"c", "=", 
        RowBox[{"Map", "[", 
         RowBox[{"ToString", ",", 
          RowBox[{"ReadList", "[", 
           RowBox[{"a", ",", "String"}], "]"}]}], "]"}]}], ";", 
       RowBox[{"DeleteFile", "[", "a", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Sort", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"DeleteDuplicates", "[", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"DirectoryQ", "[", "#", "]"}], ",", "Null", ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"FileExistsQ", "[", "#", "]"}], ",", 
                  RowBox[{
                   RowBox[{"p", "=", 
                    RowBox[{"ToLowerCase", "[", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"FileExtension", "[", "#", "]"}], "]"}], "]"}]}], 
                   ";", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"SameQ", "[", 
                    RowBox[{"p", ",", "\"\<\>\""}], "]"}]}], ",", "p", ",", 
                    "\"\<undefined\>\""}], "]"}]}]}], "]"}], ",", "Null"}], 
               "]"}], "&"}], ",", "c"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"SameQ", "[", 
             RowBox[{"#", ",", "Null"}], "]"}]}], "&"}]}], "]"}], "]"}]}]}], 
     "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DefFunc3`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DefFunc3", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Attributes", "[", "x", "]"}]}], ",", "b"}], "}"}], ",", 
    RowBox[{
     RowBox[{"ClearAllAttributes", "[", "x", "]"}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"StringSplit", "[", 
       RowBox[{
        RowBox[{"StrStr", "[", 
         RowBox[{"InputForm", "[", 
          RowBox[{"DefFunc", "[", "x", "]"}], "]"}], "]"}], ",", 
        "\"\<\\n \\n\>\""}], "]"}]}], ";", " ", 
     RowBox[{"SetAttributes", "[", 
      RowBox[{"x", ",", "a"}], "]"}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "b", "]"}], "\[Equal]", "1"}], ",", 
       RowBox[{"b", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "b"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SubsProcs`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SubsProcs", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"BlockModQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"d", ",", 
      RowBox[{"s", "=", 
       RowBox[{"{", "}"}]}], ",", "g", ",", 
      RowBox[{"k", "=", "1"}], ",", "p", ",", 
      RowBox[{"h", "=", "\"\<\>\""}], ",", 
      RowBox[{"v", "=", "1"}], ",", 
      RowBox[{"R", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"Res", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"a", "=", 
       RowBox[{"PureDefinition", "[", "x", "]"}]}], ",", "j", ",", 
      RowBox[{"m", "=", "1"}], ",", 
      RowBox[{"n", "=", "0"}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", 
        RowBox[{"\"\< := Module[{\>\"", ",", "\"\< := Block[{\>\""}], "}"}]}],
       ",", 
      RowBox[{"c", "=", 
       RowBox[{"ProcBody", "[", "x", "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{"v", ",", 
       RowBox[{"v", "\[LessEqual]", "2"}], ",", 
       RowBox[{"v", "++"}], ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"StringFreeQ", "[", 
           RowBox[{"c", ",", 
            RowBox[{"b", "[", 
             RowBox[{"[", "v", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"Break", "[", "]"}], ",", 
          RowBox[{"d", "=", 
           RowBox[{"StringPosition", "[", 
            RowBox[{"c", ",", 
             RowBox[{"b", "[", 
              RowBox[{"[", "v", "]"}], "]"}]}], "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{"k", ",", 
          RowBox[{"k", "\[LessEqual]", 
           RowBox[{"Length", "[", "d", "]"}]}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{
           RowBox[{"j", "=", 
            RowBox[{
             RowBox[{"d", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ";", " ", 
           RowBox[{"While", "[", 
            RowBox[{
             RowBox[{"m", "\[NotEqual]", "n"}], ",", 
             RowBox[{
              RowBox[{"p", "=", 
               RowBox[{"StringTake", "[", 
                RowBox[{"c", ",", 
                 RowBox[{"{", 
                  RowBox[{"j", ",", "j"}], "}"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"p", "\[Equal]", "\"\<[\>\""}], ",", 
                RowBox[{
                 RowBox[{"m", "++"}], ";", 
                 RowBox[{"h", "=", 
                  RowBox[{"h", "<>", "p"}]}]}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"p", "\[Equal]", "\"\<]\>\""}], ",", 
                  RowBox[{
                   RowBox[{"n", "++"}], ";", 
                   RowBox[{"h", "=", 
                    RowBox[{"h", "<>", "p"}]}]}], ",", 
                  RowBox[{"h", "=", 
                   RowBox[{"h", "<>", "p"}]}]}], "]"}]}], "]"}], ";", 
              RowBox[{"j", "++"}]}]}], "]"}], ";", " ", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"Res", ",", "h"}], "]"}], ";", 
           RowBox[{"m", "=", "1"}], ";", 
           RowBox[{"n", "=", "0"}], ";", 
           RowBox[{"h", "=", "\"\<\>\""}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Res", "=", 
         RowBox[{"Map10", "[", 
          RowBox[{"StringJoin", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"v", "\[Equal]", "1"}], ",", "\"\< := Module[\>\"", ",", 
             "\"\< := Block[\>\""}], "]"}], ",", "Res"}], "]"}]}], ";", " ", 
        RowBox[{"g", "=", "Res"}], ";", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Res", ",", "m", ",", "n", ",", "h"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", "1", ",", "0", ",", "\"\<]\>\""}], 
          "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "1"}], ",", 
          RowBox[{"k", "\[LessEqual]", 
           RowBox[{"Length", "[", "d", "]"}]}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{
           RowBox[{"j", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"d", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", "2"}]}], ";", " ", 
           RowBox[{"While", "[", 
            RowBox[{
             RowBox[{"m", "\[NotEqual]", "n"}], ",", 
             RowBox[{
              RowBox[{"p", "=", 
               RowBox[{"StringTake", "[", 
                RowBox[{"c", ",", 
                 RowBox[{"{", 
                  RowBox[{"j", ",", "j"}], "}"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"p", "\[Equal]", "\"\<]\>\""}], ",", 
                RowBox[{
                 RowBox[{"m", "++"}], ";", 
                 RowBox[{"h", "=", 
                  RowBox[{"p", "<>", "h"}]}]}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"p", "\[Equal]", "\"\<[\>\""}], ",", 
                  RowBox[{
                   RowBox[{"n", "++"}], ";", 
                   RowBox[{"h", "=", 
                    RowBox[{"p", "<>", "h"}]}]}], ",", 
                  RowBox[{"h", "=", 
                   RowBox[{"p", "<>", "h"}]}]}], "]"}]}], "]"}], ";", 
              RowBox[{"j", "--"}]}]}], "]"}], ";", " ", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"Res", ",", "h"}], "]"}], ";", 
           RowBox[{"s", "=", 
            RowBox[{"Append", "[", 
             RowBox[{"s", ",", "j"}], "]"}]}], ";", 
           RowBox[{"m", "=", "1"}], ";", 
           RowBox[{"n", "=", "0"}], ";", 
           RowBox[{"h", "=", "\"\<]\>\""}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Res", "=", 
         RowBox[{"Map9", "[", 
          RowBox[{"StringJoin", ",", "Res", ",", "g"}], "]"}]}], ";", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"g", ",", "h"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{"Res", ",", "\"\<\>\""}], "}"}]}], ";", 
        RowBox[{"Res", "=", 
         RowBox[{"{", "}"}]}], ";", " ", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "1"}], ",", 
          RowBox[{"k", "\[LessEqual]", 
           RowBox[{"Length", "[", "s", "]"}]}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"j", "=", 
              RowBox[{"s", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], ",", 
             RowBox[{"j", "\[GreaterEqual]", "1"}], ",", 
             RowBox[{"j", "--"}], ",", 
             RowBox[{
              RowBox[{"p", "=", 
               RowBox[{"StringTake", "[", 
                RowBox[{"c", ",", 
                 RowBox[{"{", 
                  RowBox[{"j", ",", "j"}], "}"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"p", "\[Equal]", "\"\< \>\""}], ",", 
                RowBox[{"Break", "[", "]"}], ",", 
                RowBox[{"h", "=", 
                 RowBox[{"p", "<>", "h"}]}]}], "]"}]}]}], "]"}], ";", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"Res", ",", "h"}], "]"}], ";", 
           RowBox[{"h", "=", "\"\<\>\""}]}]}], "]"}], ";", " ", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"R", ",", 
          RowBox[{"Map9", "[", 
           RowBox[{"StringJoin", ",", "Res", ",", "g"}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Res", ",", "m", ",", "n", ",", "k", ",", "h", ",", "s"}], 
          "}"}], "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", "1", ",", "0", ",", "1", ",", "\"\<\>\"", 
           ",", 
           RowBox[{"{", "}"}]}], "}"}]}]}]}], "]"}], ";", 
     RowBox[{"R", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "R", "]"}], "\[Equal]", "2"}], ",", "R", ",", 
        RowBox[{"Flatten", "[", "R", "]"}]}], "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "R", "]"}], "\[Equal]", "1"}], ",", 
       RowBox[{"R", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "R"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StrNestedMod`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StrNestedMod", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"ModuleQ", "[", "x", "]"}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{
        RowBox[{"SubProcs", "[", "x", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", "c", ",", "d", ",", "g", ",", 
      RowBox[{"h", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", "p", ",", "t", ",", "n"}], "}"}], ",", 
    " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"Remove", ",", "a"}], "]"}], ";", 
       RowBox[{"{", 
        RowBox[{"ToString", "[", "x", "]"}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"c", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d", "=", 
               RowBox[{"DeleteDuplicates", "[", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"StringPosition", "[", 
                  RowBox[{"#", ",", "\"\<$\>\""}], "]"}], "]"}], "]"}]}], ",", 
              RowBox[{"StringTake", "[", 
               RowBox[{"#", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", 
                  RowBox[{
                   RowBox[{"d", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "-", "1"}]}], "}"}]}], 
               "]"}]}], "}"}], "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}], "&"}], ",", 
          RowBox[{"Map", "[", 
           RowBox[{"ToString", ",", "a"}], "]"}]}], "]"}]}], ";", " ", 
       RowBox[{"b", "=", 
        RowBox[{"Map", "[", 
         RowBox[{"Symbol", ",", "c"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{"k", ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "a", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"h", ",", 
           RowBox[{
            RowBox[{"b", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"c", "[", 
               RowBox[{"[", "k", "]"}], "]"}], ",", 
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"Locals", "[", 
                 RowBox[{"a", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"MemberQ", "[", 
                  RowBox[{"c", ",", "#"}], "]"}], "&"}]}], "]"}]}], "}"}]}]}],
           "]"}]}], "]"}], ";", 
       RowBox[{"h", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"h", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", 
            RowBox[{"{", "}"}]}], "&"}]}], "]"}]}], ";", " ", 
       RowBox[{"Map", "[", 
        RowBox[{"Remove", ",", "a"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", "y", "}"}], "\[NotEqual]", 
           RowBox[{"{", "}"}]}], "&&", 
          RowBox[{"!", 
           RowBox[{"HowAct", "[", "y", "]"}]}]}], ",", 
         RowBox[{"y", "=", "c"}], ",", "Null"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", 
          RowBox[{"Length", "[", "h", "]"}]}], ",", 
         RowBox[{"k", "\[GreaterEqual]", "2"}], ",", 
         RowBox[{"k", "--"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"h", "[", 
               RowBox[{"[", 
                RowBox[{"k", "-", "1"}], "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"h", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"h", "[", 
              RowBox[{"[", 
               RowBox[{"k", "-", "1"}], "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "=", 
            RowBox[{"AppendTo", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"h", "[", 
                RowBox[{"[", 
                 RowBox[{"k", "-", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"h", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}]}]}], "]"}]}], "]"}],
        ";", " ", 
       RowBox[{"h", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Bits`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Bits", "[", 
   RowBox[{"x_", ",", 
    RowBox[{"P_", "/;", 
     RowBox[{"IntegerQ", "[", "P", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "k"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"StringQ", "[", "x", "]"}], "&&", 
       RowBox[{
        RowBox[{"StringLength", "[", "x", "]"}], "\[Equal]", "1"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"1", "\[LessEqual]", "P", "\[LessEqual]", "8"}], ",", 
        RowBox[{
         RowBox[{"PadLeft", "[", 
          RowBox[{
           RowBox[{"IntegerDigits", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ToCharacterCode", "[", "x", "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "2"}], "]"}], ",", "8"}], 
          "]"}], "[", 
         RowBox[{"[", "P", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"P", "\[Equal]", "0"}], ",", 
          RowBox[{"PadLeft", "[", 
           RowBox[{
            RowBox[{"IntegerDigits", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"ToCharacterCode", "[", "x", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "2"}], "]"}], ",", "8"}], 
           "]"}], ",", 
          RowBox[{"Defer", "[", 
           RowBox[{"Bits", "[", 
            RowBox[{"x", ",", "P"}], "]"}], "]"}]}], "]"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"BinaryListQ", "[", "x", "]"}], "&&", 
         RowBox[{"1", "<=", 
          RowBox[{"Length", "[", 
           RowBox[{"Flatten", "[", "x", "]"}], "]"}], "<=", "8"}]}], ",", 
        RowBox[{
         RowBox[{"a", "=", 
          RowBox[{"Length", "[", "x", "]"}]}], ";", 
         RowBox[{"FromCharacterCode", "[", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "*", 
             RowBox[{"2", "^", 
              RowBox[{"(", 
               RowBox[{"a", "-", "k"}], ")"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "1", ",", "a"}], "}"}]}], "]"}], "]"}]}], ",", 
        RowBox[{"Defer", "[", 
         RowBox[{"Bits", "[", 
          RowBox[{"x", ",", "P"}], "]"}], "]"}]}], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ListsAssign`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListsAssign", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"ListQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"ListQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"Length", ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}]}], "]"}], "]"}]}], ",", "b", ",", 
      "c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"a", "\[Equal]", "0"}], ",", 
       RowBox[{"Return", "[", "x", "]"}], ",", 
       RowBox[{
        RowBox[{"Off", "[", 
         RowBox[{"Set", "::", "setraw"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Off", "[", 
         RowBox[{"Set", "::", "write"}], "]"}], ";", " ", 
        RowBox[{"Off", "[", 
         StyleBox[
          RowBox[{"Set", "::", "wrsym"}], "MessageName"], "]"}]}]}], "]"}], 
     ";", " ", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", "a"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"b", ",", "c"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "k", "]"}], "]"}], ",", 
           RowBox[{"y", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], "}"}]}], ";", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"d", ",", 
          RowBox[{"b", "=", "c"}]}], "]"}], ";", " ", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", " ", 
     RowBox[{"x", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Sequences", "[", 
         RowBox[{"d", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "a"}], "]"}], "]"}], "]"}], ",", 
        RowBox[{"Sequences", "[", 
         RowBox[{"x", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"a", "+", "1"}], ";;", 
            RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}]}], "}"}]}], ";", " ", 
     RowBox[{"On", "[", 
      RowBox[{"Set", "::", "setraw"}], "]"}], ";", " ", 
     RowBox[{"On", "[", 
      RowBox[{"Set", "::", "write"}], "]"}], ";", " ", 
     RowBox[{"On", "[", 
      StyleBox[
       RowBox[{"Set", "::", "wrsym"}], "MessageName"], "]"}], ";", "x"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ObjType`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ObjType", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", " ", "b", ",", " ", "c", ",", " ", 
      RowBox[{"d", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ",", " ", "h"}], "}"}], ",", " ", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"ToString1", "[", 
          RowBox[{"HeadPF", "[", "x", "]"}], "]"}], " ", "===", " ", 
         RowBox[{"StringJoin", "[", 
          RowBox[{"\"\<HeadPF[\>\"", ",", " ", 
           RowBox[{"ToString1", "[", "x", "]"}], ",", " ", "\"\<]\>\""}], 
          "]"}]}], " ", "||", " ", 
        RowBox[{"SymbolQ", "[", 
         RowBox[{"HeadPF", "[", "x", "]"}], "]"}]}], ",", " ", 
       RowBox[{"Return", "[", 
        RowBox[{"Head", "[", "x", "]"}], "]"}], ",", " ", 
       RowBox[{
        RowBox[{"b", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"Definition1", "[", "x", "]"}], "}"}], "]"}]}], ";", " ", 
        RowBox[{"c", " ", "=", " ", 
         RowBox[{"Length", "[", "b", "]"}]}]}]}], "]"}], ";", " ", "\n", "  ", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"d", ",", " ", 
         RowBox[{
          RowBox[{"h", " ", "=", " ", 
           RowBox[{"StringSplit", "[", 
            RowBox[{
             RowBox[{"b", "[", 
              RowBox[{"[", "k", "]"}], "]"}], ",", " ", "\"\< := \>\""}], 
            "]"}]}], ";", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"h", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"PrefixQ", "[", 
               RowBox[{"\"\<Module[{\>\"", ",", " ", 
                RowBox[{"h", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", " ", "Module", 
              ",", " ", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"PrefixQ", "[", 
                 RowBox[{"\"\<Block[{\>\"", ",", " ", 
                  RowBox[{"h", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", " ", "Block",
                 ",", " ", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"PrefixQ", "[", 
                   RowBox[{"\"\<Function[\>\"", ",", " ", 
                    RowBox[{"h", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", " ", 
                  "Function", ",", " ", "\n", "            ", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"PrefixQ", "[", 
                    RowBox[{"\"\<DynamicModule[{\>\"", ",", " ", 
                    RowBox[{"h", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", " ", 
                    "DynamicModule", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"Function", ",", " ", 
                    RowBox[{"Head", "[", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"h", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}]}], "}"}]}], 
                   "]"}]}], "]"}]}], "]"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
       " ", 
       RowBox[{"{", 
        RowBox[{"k", ",", " ", "c"}], "}"}]}], "]"}], ";", " ", 
     RowBox[{"Flatten", "[", 
      RowBox[{"d", ",", "1"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ObjInCurrentNb`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ObjInCurrentNb", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", "d", ",", "k", ",", 
      RowBox[{"h", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"a", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{
         RowBox[{"ToString", "[", 
          RowBox[{"NotebookGet", "[", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], ",", 
           RowBox[{"\"\<\\n\>\"", "\[Rule]", "\"\<\>\""}], ",", 
           RowBox[{"\"\<\\r\>\"", "\[Rule]", "\"\<\>\""}], ",", 
           RowBox[{"\"\<\\t\>\"", "\[Rule]", "\"\<\>\""}]}], "}"}]}], 
        "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"StringCases", "[", 
       RowBox[{"a", ",", 
        RowBox[{"Shortest", "[", 
         RowBox[{
         "\"\<RowBox[{RowBox[{\>\"", "~~", "__", "~~", "\"\<,[,\>\""}], 
         "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Select", "[", 
        RowBox[{"b", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"StringFreeQ", "[", 
            RowBox[{"#", ",", 
             RowBox[{"{", 
              RowBox[{"\"\<Cell\>\"", ",", "\"\<BoxData\>\""}], "}"}]}], 
            "]"}], "&&", 
           RowBox[{
            RowBox[{"StringCount", "[", 
             RowBox[{"#", ",", "\"\<RowBox\>\""}], "]"}], "\[Equal]", "2"}]}],
           "&"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringReplace", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<RowBox[{\>\"", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"\"\<,[,\>\"", "\[Rule]", "\"\<\>\""}]}], "}"}]}], "]"}],
          "&"}], ",", "b"}], "]"}]}], ";", " ", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Set", "[", 
            RowBox[{"d", ",", 
             RowBox[{"Quiet", "[", 
              RowBox[{"Check", "[", 
               RowBox[{
                RowBox[{"Context", "[", "#", "]"}], ",", "$Failed"}], "]"}], 
              "]"}]}], "]"}], "===", "$Failed"}], ",", "Null", ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"c", ",", 
            RowBox[{"{", 
             RowBox[{"#", ",", "d"}], "}"}]}], "]"}]}], "]"}], "&"}], ",", 
       "b"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"DeleteDuplicates", ",", 
        RowBox[{"Map", "[", 
         RowBox[{"Flatten", ",", 
          RowBox[{"Gather", "[", 
           RowBox[{"c", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"#1", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
              RowBox[{"#2", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]}], "]"}]}], 
       "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"c", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"{", "}"}], ",", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"NestListQ", "[", "c", "]"}], ",", "c", ",", 
           RowBox[{"{", "c", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"h", ",", 
            RowBox[{"Sort", "[", 
             RowBox[{
              RowBox[{"c", "[", 
               RowBox[{"[", "k", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"ContextQ", "[", "#", "]"}], "&"}]}], "]"}]}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", 
            RowBox[{"Length", "[", "c", "]"}]}], "}"}]}], "]"}], ";", 
        RowBox[{"c", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"c", ",", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"h", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"Select", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"h", "[", 
                   RowBox[{"[", "k", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ";;", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"!", 
                   RowBox[{"SameQ", "[", 
                    RowBox[{
                    RowBox[{"PureDefinition", "[", "#", "]"}], ",", 
                    "$Failed"}], "]"}]}], "&"}]}], "]"}]}], "}"}], "]"}]}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", 
            RowBox[{"Length", "[", "h", "]"}]}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"h", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"Sort", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ";;", 
                   RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}]}], "}"}], "]"}], 
            "&"}], ",", "c"}], "]"}]}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "h", "]"}], "\[Equal]", "1"}], ",", 
          RowBox[{"Flatten", "[", "h", "]"}], ",", "h"}], "]"}]}]}], 
      "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ObjInCurrentNb1`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ObjInCurrentNb1", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", 
         RowBox[{"AllCurrentNb", "[", "]"}]}], "]"}], ",", 
       RowBox[{"FileNameTake", "[", "x", "]"}]}], "]"}], "||", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
       "\"\<nb\>\""}]}]}]}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", "d", ",", "k", ",", 
      RowBox[{"h", "=", 
       RowBox[{"{", "}"}]}], ",", "f", ",", 
      RowBox[{"cnb", "=", 
       RowBox[{
        RowBox[{"NbName", "[", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", " ", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"x", "===", 
         RowBox[{
          RowBox[{"NbName", "[", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{"ToString", "[", 
         RowBox[{"NotebookGet", "[", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", 
              RowBox[{"AllCurrentNb", "[", "]"}]}], "]"}], ",", 
            RowBox[{"FileNameTake", "[", "x", "]"}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"k", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{"AllCurrentNb", "[", "]"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "===", 
                  RowBox[{"FileNameTake", "[", "x", "]"}]}], "&&", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "!=", 
                  "\"\<nb has been not saved\>\""}]}], "&"}]}], "]"}], 
             "]"}]}], ";", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"k", "\[Equal]", 
              RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"f", "=", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"SuffPref", "[", 
                  RowBox[{"x", ",", "\"\<.nb\>\"", ",", "2"}], "]"}], ",", 
                 "x", ",", 
                 RowBox[{"x", "<>", "\"\<.nb\>\""}]}], "]"}]}], ";", " ", 
              RowBox[{"f", "=", 
               RowBox[{
                RowBox[{"Directory", "[", "]"}], "<>", "\"\<\\\\\>\"", "<>", 
                "f"}]}], ";", " ", 
              RowBox[{"NotebookSave1", "[", 
               RowBox[{
                RowBox[{"FileNameTake", "[", "x", "]"}], ",", "f"}], "]"}], 
              ";", " ", 
              RowBox[{"b", "=", 
               RowBox[{"ReadFullFile", "[", "f", "]"}]}], ";", " ", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"OpenCurrentNb", "[", "cnb", "]"}], ",", "b"}], 
                "}"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", "  ", 
             RowBox[{"ReadFullFile", "[", 
              RowBox[{"k", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}]}], ",", 
          RowBox[{"ReadFullFile", "[", "x", "]"}]}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"a", "===", "$Failed"}], ",", "$Failed", ",", 
       RowBox[{
        RowBox[{"a", "=", 
         RowBox[{"StringReplace", "[", 
          RowBox[{"a", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\< \>\"", "->", "\"\<\>\""}], ",", 
             RowBox[{"\"\<\\n\>\"", "->", "\"\<\>\""}], ",", 
             RowBox[{"\"\<\\r\>\"", "->", "\"\<\>\""}], ",", 
             RowBox[{"\"\<\\t\>\"", "->", "\"\<\>\""}], ",", 
             RowBox[{"\"\<\\\\\\\\\>\"", "->", "\"\<\>\""}], ",", 
             RowBox[{"\"\<\\\"\>\"", "->", "\"\<\>\""}]}], "}"}]}], "]"}]}], 
        ";", "  ", 
        RowBox[{"b", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"SubsString", "[", 
            RowBox[{"a", ",", 
             RowBox[{"{", 
              RowBox[{"\"\<RowBox[{\>\"", ",", "\"\<,[,\>\""}], "}"}]}], 
            "]"}], ",", 
           RowBox[{"SubsString", "[", 
            RowBox[{"a", ",", 
             RowBox[{"{", 
              RowBox[{"\"\<<`\>\"", ",", "\"\<`>\>\""}], "}"}]}], "]"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"b", "=", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"Select", "[", 
           RowBox[{"b", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"StringFreeQ", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"{", 
                  RowBox[{"\"\<Cell\>\"", ",", "\"\<BoxData\>\""}], "}"}]}], 
                "]"}], "&&", 
               RowBox[{
                RowBox[{"StringCount", "[", 
                 RowBox[{"#", ",", "\"\<RowBox\>\""}], "]"}], "\[Equal]", 
                "1"}]}], "||", 
              RowBox[{"StringFreeQ", "[", 
               RowBox[{"#", ",", "\"\<`\>\""}], "]"}]}], "&"}]}], "]"}], 
          "]"}]}], ";", " ", 
        RowBox[{"b", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"StringReplace", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\"\<RowBox[{\>\"", "->", "\"\<\>\""}], ",", 
                RowBox[{"\"\<,[,\>\"", "->", "\"\<\>\""}]}], "}"}]}], "]"}], 
            "&"}], ",", "b"}], "]"}]}], ";", " ", 
        RowBox[{"b", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"b", ",", 
           RowBox[{
            RowBox[{"SymbolQ", "[", "#", "]"}], "&"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"b", "\[Equal]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"{", "}"}], ",", " ", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Set", "[", 
                  RowBox[{"d", ",", 
                   RowBox[{"Quiet", "[", 
                    RowBox[{"Check", "[", 
                    RowBox[{
                    RowBox[{"Context", "[", "#", "]"}], ",", "$Failed"}], 
                    "]"}], "]"}]}], "]"}], "===", "$Failed"}], ",", "Null", 
                ",", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"c", ",", 
                  RowBox[{"{", 
                   RowBox[{"#", ",", "d"}], "}"}]}], "]"}]}], "]"}], "&"}], 
             ",", "b"}], "]"}], ";", " ", 
           RowBox[{"c", "=", 
            RowBox[{"Map", "[", 
             RowBox[{"DeleteDuplicates", ",", 
              RowBox[{"Map", "[", 
               RowBox[{"Flatten", ",", 
                RowBox[{"Gather", "[", 
                 RowBox[{"c", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"#1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
                    RowBox[{"#2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]}], 
               "]"}]}], "]"}]}], ";", " ", 
           RowBox[{"c", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"NestListQ", "[", "c", "]"}], ",", "c", ",", 
              RowBox[{"{", "c", "}"}]}], "]"}]}], ";", " ", 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{"h", ",", 
               RowBox[{"Sort", "[", 
                RowBox[{
                 RowBox[{"c", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"ContextQ", "[", "#", "]"}], "&"}]}], "]"}]}], 
              "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", "1", ",", 
               RowBox[{"Length", "[", "c", "]"}]}], "}"}]}], "]"}], ";", " ", 
           RowBox[{"c", "=", 
            RowBox[{"{", "}"}]}], ";", " ", 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{"c", ",", 
               RowBox[{"Flatten", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"h", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"Select", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"h", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ";;", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"SameQ", "[", 
                    RowBox[{
                    RowBox[{"PureDefinition", "[", "#", "]"}], ",", 
                    "$Failed"}], "]"}]}], "&"}]}], "]"}]}], "}"}], "]"}]}], 
              "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", "1", ",", 
               RowBox[{"Length", "[", "h", "]"}]}], "}"}]}], "]"}], ";", " ", 
           RowBox[{"h", "=", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"Sort", "[", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ";;", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}]}], "}"}], "]"}],
                "&"}], ",", "c"}], "]"}]}], ";", " ", 
           RowBox[{"c", "=", 
            RowBox[{"{", "}"}]}], ";", " ", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "#", "]"}], ">", "1"}], ",", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"c", ",", "#"}], "]"}], ",", "Null"}], "]"}], "&"}], 
             ",", "h"}], "]"}], ";", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "c", "]"}], "\[Equal]", "1"}], ",", 
             RowBox[{"Flatten", "[", "c", "]"}], ",", "c"}], "]"}]}]}], 
         "]"}]}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`OpenCurrentNb`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"OpenCurrentNb", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{
      RowBox[{"StringQ", "[", "x", "]"}], "&&", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"SuffPref", "[", 
         RowBox[{"x", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<.cdf\>\"", ",", "\"\<.nb\>\""}], "}"}], ",", "2"}], 
         "]"}], "||", 
        RowBox[{"SuffPref", "[", 
         RowBox[{"x", ",", "\"\<Untitled-\>\"", ",", "1"}], "]"}]}], ")"}]}], 
     "||", 
     RowBox[{"x", "\[Equal]", "\"\<Messages\>\""}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Notebooks", "[", "]"}]}], ",", "b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", "d", ",", "k", ",", "h"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"AllCurrentNb", "[", "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
            RowBox[{"FileNameTake", "[", "x", "]"}]}], "&"}]}], "]"}], 
        "\[Equal]", 
        RowBox[{"{", "}"}]}]}], ",", 
      RowBox[{"NotebookOpen", "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"h", "=", 
        RowBox[{"FileNameTake", "[", "x", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"b", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"SubsString", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{"\"\<<<\>\"", ",", "\"\<>>\>\""}], "}"}], ",", "0"}], 
             "]"}], "&"}], ",", 
           RowBox[{"Map", "[", 
            RowBox[{"ToString", ",", "a"}], "]"}]}], "]"}], "]"}]}], ";", " ", 
       RowBox[{"d", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Quiet", "[", 
            RowBox[{"Check", "[", 
             RowBox[{
              RowBox[{"NotebookFileName", "[", "#", "]"}], ",", 
              "\"\<nb has been not saved\>\""}], "]"}], "]"}], "&"}], ",", 
          "a"}], "]"}]}], ";", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"c", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"b", "[", 
              RowBox[{"[", "k", "]"}], "]"}], ",", 
             RowBox[{"d", "[", 
              RowBox[{"[", "k", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", 
           RowBox[{"Length", "[", "b", "]"}]}], "}"}]}], "]"}], ";", " ", 
       RowBox[{"b", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "c", "]"}], "\[Equal]", "1"}], ",", 
          RowBox[{"Flatten", "[", "c", "]"}], ",", "c"}], "]"}]}], ";", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"NbName", "[", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "h"}], ",", "Null", 
         ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Select", "[", 
             RowBox[{"b", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "h"}], "&"}]}], 
             "]"}], "\[Equal]", 
            RowBox[{"{", "}"}]}], ",", "$Failed", ",", " ", 
           RowBox[{
            RowBox[{"c", "=", 
             RowBox[{"Partition", "[", 
              RowBox[{
               RowBox[{"Riffle", "[", 
                RowBox[{
                 RowBox[{"Map", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", "b"}], "]"}], 
                 ",", "a"}], "]"}], ",", "2"}], "]"}]}], ";", " ", 
            RowBox[{"SetSelectedNotebook", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Select", "[", 
                RowBox[{"c", ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "h"}], 
                  "&"}]}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], "]"}]}], "]"}], 
       ";"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`NbDocumentQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NbDocumentQ", "[", 
   RowBox[{"x_", ",", "t___"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"b", "=", 
       RowBox[{"FileNameTake", "[", "x", "]"}]}], ",", "c"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"StringQ", "[", "x", "]"}], "&&", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"SuffPref", "[", 
          RowBox[{"x", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<.cdf\>\"", ",", " ", "\"\<.nb\>\""}], "}"}], ",", 
           "2"}], "]"}], "||", 
         RowBox[{"SuffPref", "[", 
          RowBox[{"x", ",", "\"\<Untitled-\>\"", ",", "1"}], "]"}]}], ")"}]}],
       ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"AllCurrentNb", "[", "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "b"}], "&"}]}], 
          "]"}], "!=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", "t", "}"}], "\[NotEqual]", 
             RowBox[{"{", "}"}]}], "&&", 
            RowBox[{"!", 
             RowBox[{"HowAct", "[", "t", "]"}]}]}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"NbName", "[", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "b"}], ",", 
             RowBox[{"t", "=", "\"\<current\>\""}], ",", 
             RowBox[{"t", "=", "\"\<opened\>\""}]}], "]"}], ",", "Null"}], 
          "]"}], ";", "True"}], ",", 
        RowBox[{
         RowBox[{"a", "=", 
          RowBox[{"AllCurrentNb", "[", "]"}]}], ";", " ", 
         RowBox[{"On", "[", 
          StyleBox[
           RowBox[{"Definition", "::", "notfound"}], "MessageName"], 
          StyleBox["]", "MessageName"]}], 
         StyleBox[";", "MessageName"], 
         StyleBox[" ", "MessageName"], 
         RowBox[{
          StyleBox["c", "MessageName"], 
          StyleBox["=", "MessageName"], 
          RowBox[{
           StyleBox["Quiet", "MessageName"], 
           StyleBox["[", "MessageName"], 
           RowBox[{
            StyleBox["Check", "MessageName"], 
            StyleBox["[", "MessageName"], 
            RowBox[{
             RowBox[{"Get", "[", "x", "]"}], ",", "False"}], "]"}], "]"}]}], 
         ";", " ", 
         RowBox[{"Off", "[", 
          StyleBox[
           RowBox[{"Definition", "::", "notfound"}], "MessageName"], "]"}], 
         ";", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"c", "[", 
             RowBox[{"[", "0", "]"}], "]"}], "===", "Notebook"}], ",", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"{", "t", "}"}], "\[NotEqual]", 
                RowBox[{"{", "}"}]}], "&&", 
               RowBox[{"!", 
                RowBox[{"HowAct", "[", "t", "]"}]}]}], ",", 
              RowBox[{"t", "=", "\"\<file\>\""}], ",", "Null"}], "]"}], ";", 
            " ", "True"}], ",", "False"}], "]"}]}]}], "]"}], ",", "False"}], 
     "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`NbCurrentQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NbCurrentQ", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"StringQ", "[", "x", "]"}], "&&", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"SuffPref", "[", 
         RowBox[{"x", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<.cdf\>\"", ",", " ", "\"\<.nb\>\""}], "}"}], ",", 
          "2"}], "]"}], "||", 
        RowBox[{"SuffPref", "[", 
         RowBox[{"x", ",", "\"\<Untitled-\>\"", ",", "1"}], "]"}]}], ")"}]}], 
     "||", 
     RowBox[{"x", "\[Equal]", "\"\<Messages\>\""}]}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"ToString", ",", 
           RowBox[{"Notebooks", "[", "]"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"StringFreeQ", "[", 
            RowBox[{"#", ",", 
             RowBox[{"\"\<<<\>\"", "<>", "x", "<>", " ", "\"\<>>\>\""}]}], 
            "]"}]}], "&"}]}], "]"}], "\[NotEqual]", 
       RowBox[{"{", "}"}]}], ",", "True", ",", "False"}], "]"}], ",", 
    "False"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`FileCurrentNb`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FileCurrentNb", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{
      RowBox[{"StringQ", "[", "x", "]"}], "&&", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"SuffPref", "[", 
         RowBox[{"x", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<.cdf\>\"", ",", "\"\<.nb\>\""}], "}"}], ",", "2"}], 
         "]"}], "||", 
        RowBox[{"SuffPref", "[", 
         RowBox[{"x", ",", "\"\<Untitled-\>\"", ",", "1"}], "]"}]}], ")"}]}], 
     "||", 
     RowBox[{"x", "\[Equal]", "\"\<Messages\>\""}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Notebooks", "[", "]"}]}], ",", "b", ",", "c", ",", "k"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"ToString", ",", "a"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"StringFreeQ", "[", 
           RowBox[{
            RowBox[{"b", "[", 
             RowBox[{"[", "k", "]"}], "]"}], ",", 
            RowBox[{"\"\<<<\>\"", "<>", "x", "<>", "\"\<>>\>\""}]}], "]"}]}], 
         ",", 
         RowBox[{"c", "=", 
          RowBox[{"Return", "[", 
           RowBox[{"Quiet", "[", 
            RowBox[{"Check", "[", 
             RowBox[{
              RowBox[{"NotebookDirectory", "[", 
               RowBox[{"a", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "]"}], ",", "\"\<500\>\""}], 
             "]"}], "]"}], "]"}]}], ",", 
         RowBox[{"c", "=", "\"\<90\>\""}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{"Length", "[", "a", "]"}]}], "}"}]}], "]"}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"DirectoryQ", "[", "c", "]"}], ",", 
       RowBox[{"c", "<>", "x"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"c", "\[Equal]", "\"\<90\>\""}], ",", "$Failed", ",", 
         RowBox[{"x", "<>", "\"\< was not saved\>\""}]}], "]"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`NbFileEvaluate`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NbFileEvaluate", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<cdf\>\"", ",", "\"\<nb\>\""}], "}"}], ",", 
        RowBox[{"FileExtension", "[", "x", "]"}]}], "]"}]}]}], ",", "y___"}], 
   "]"}], ":=", 
  RowBox[{"Quiet", "[", 
   RowBox[{"Quiet", "[", 
    RowBox[{"NotebookEvaluate", "[", 
     RowBox[{
      RowBox[{"NotebookOpen", "[", "x", "]"}], ",", 
      RowBox[{"InsertResults", "\[Rule]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "y", "}"}], "\[NotEqual]", 
          RowBox[{"{", "}"}]}], ",", "False", ",", "True"}], "]"}]}]}], "]"}],
     "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`MfileEvaluate`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MfileEvaluate", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
       "\"\<m\>\""}]}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", "y"}], 
      "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "h", ",", "f"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", "z_", "]"}], ":=", 
      RowBox[{"Select", "[", 
       RowBox[{"z", ",", 
        RowBox[{
         RowBox[{
          RowBox[{
          "\"\<Attributes[\>\"", "<>", "#", "<>", "\"\<] = {Temporary}\>\""}],
           "!=", 
          RowBox[{"Quiet", "[", 
           RowBox[{"ToString", "[", 
            RowBox[{"Definition", "[", "#", "]"}], "]"}], "]"}]}], "&"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"a", "=", 
      RowBox[{"StringCases", "[", 
       RowBox[{
        RowBox[{"ReadString", "[", "x", "]"}], ",", 
        RowBox[{"\"\<BeginPackage[\\\"\>\"", "~~", 
         RowBox[{"Shortest", "[", "___", "]"}], "~~", "\"\<`\\\"]\>\""}]}], 
       "]"}]}], ";", 
     RowBox[{"a", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Quiet", "[", 
          RowBox[{"Check", "[", 
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{"15", ",", 
                RowBox[{"-", "3"}]}], "}"}]}], "]"}], ",", "Null"}], "]"}], 
          "]"}], "&"}], ",", "a"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"a", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"a", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Complement", "[", 
           RowBox[{
            RowBox[{"Characters", "[", "#", "]"}], ",", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"CharacterRange", "[", 
               RowBox[{"\"\<A\>\"", ",", "\"\<Z\>\""}], "]"}], ",", 
              RowBox[{"CharacterRange", "[", 
               RowBox[{"\"\<a\>\"", ",", "\"\<z\>\""}], "]"}], ",", 
              RowBox[{"{", "\"\<`\>\"", "}"}]}], "]"}]}], "]"}], "\[Equal]", 
          RowBox[{"{", "}"}]}], "&"}]}], "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", "\"\<AladjevProcedures`\>\"", "}"}]}], "}"}], ",", 
         "a"}], "]"}], ",", "$Failed", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Quiet", "[", 
         RowBox[{"NotebookEvaluate", "[", 
          RowBox[{"NotebookOpen", "[", 
           RowBox[{"x", ",", 
            RowBox[{"Visible", "\[Rule]", "False"}]}], "]"}], "]"}], "]"}], 
        ";", " ", 
        RowBox[{"b", "=", 
         RowBox[{"a", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", " ", 
        RowBox[{"h", "=", 
         RowBox[{"Names", "[", 
          RowBox[{"b", "<>", "\"\<*\>\""}], "]"}]}], ";", " ", 
        RowBox[{"c", "=", 
         RowBox[{"Sort", "[", 
          RowBox[{"DeleteDuplicates", "[", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"StringReplace", "[", 
               RowBox[{"#", ",", 
                RowBox[{"b", "->", "\"\<\>\""}]}], "]"}], "&"}], ",", "h"}], 
            "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"y", "\[Equal]", "1"}], ",", 
          RowBox[{"f", "[", "c", "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"y", "\[Equal]", "2"}], ",", 
            RowBox[{
             RowBox[{"d", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", "}"}], ",", 
                RowBox[{"{", "}"}]}], "}"}]}], ";", " ", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Quiet", "[", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Definition", "[", "#", "]"}], "]"}], "]"}], 
                   "!=", "\"\<Null\>\""}], ",", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{
                    RowBox[{"d", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "#"}], "]"}], ",", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{
                    RowBox[{"d", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "#"}], "]"}]}], 
                 "]"}], "&"}], ",", "c"}], "]"}], ";", " ", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"d", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
                RowBox[{"{", "}"}]}], ",", "Null", ",", 
               RowBox[{"c", "=", 
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Quiet", "[", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"StringReplace", "[", 
                    RowBox[{
                    RowBox[{"DefToString", "[", "#", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"b", "->", "\"\<\>\""}], ",", 
                    RowBox[{
                    RowBox[{"#", "<>", "\"\<`\>\""}], "->", "\"\<\>\""}]}], 
                    "}"}]}], "]"}], "]"}], "]"}], "&"}], ",", 
                  RowBox[{"d", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "]"}], ";", 
             " ", 
             RowBox[{"d", "=", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"StringReplace", "[", 
                  RowBox[{"#", ",", 
                   RowBox[{"b", "->", "\"\<\>\""}]}], "]"}], "&"}], ",", 
                "d"}], "]"}]}], ";", 
             RowBox[{"Map", "[", 
              RowBox[{"Sort", ",", 
               RowBox[{"Map", "[", 
                RowBox[{"f", ",", "d"}], "]"}]}], "]"}]}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"y", "\[Equal]", "3"}], ",", "b", ",", 
              RowBox[{
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{"StringReplace", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"b", "->", "\"\<\>\""}]}], "]"}], "]"}], ",", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<?\>\"", "<>", 
                    RowBox[{"ToString", "[", "#", "]"}]}], "]"}]}], "}"}], 
                  "&"}], ",", "h"}], "]"}], ";"}]}], " ", "]"}]}], "]"}]}], 
         "]"}]}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`MfileLoad`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MfileLoad", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
       "\"\<m\>\""}]}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ReadString", "[", "x", "]"}]}], ",", "b", ",", "c", ",", "d", 
      ",", "h", ",", "p"}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"StringPosition", "[", 
        RowBox[{"a", ",", "\"\<BeginPackage[\\\"\>\""}], "]"}], "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"b", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", "$Failed", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"c", "[", "z_", "]"}], ":=", 
         RowBox[{"Select", "[", 
          RowBox[{"z", ",", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\"\<Null\>\"", ",", 
                 RowBox[{
                 "\"\<Attributes[\>\"", "<>", "#", "<>", 
                  "\"\<] = {Temporary}\>\""}], ",", "False"}], "}"}], ",", 
               RowBox[{"Quiet", "[", 
                RowBox[{"Check", "[", 
                 RowBox[{
                  RowBox[{"ToString", "[", 
                   RowBox[{"Definition", "[", "#", "]"}], "]"}], ",", 
                  "False"}], "]"}], "]"}]}], "]"}]}], "&"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"d", "=", 
         RowBox[{"StringCases", "[", 
          RowBox[{"a", ",", 
           RowBox[{"\"\<BeginPackage[\\\"\>\"", "~~", 
            RowBox[{"Shortest", "[", "___", "]"}], "~~", "\"\<`\\\"]\>\""}]}],
           "]"}]}], ";", 
        RowBox[{"d", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Quiet", "[", 
             RowBox[{"Check", "[", 
              RowBox[{
               RowBox[{"StringTake", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"{", 
                  RowBox[{"15", ",", 
                   RowBox[{"-", "3"}]}], "}"}]}], "]"}], ",", "Null"}], "]"}],
              "]"}], "&"}], ",", "d"}], "]"}]}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"d", "=", 
         RowBox[{
          RowBox[{"Select", "[", 
           RowBox[{"d", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Complement", "[", 
               RowBox[{
                RowBox[{"Characters", "[", "#", "]"}], ",", 
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"CharacterRange", "[", 
                   RowBox[{"\"\<A\>\"", ",", "\"\<Z\>\""}], "]"}], ",", 
                  RowBox[{"CharacterRange", "[", 
                   RowBox[{"\"\<a\>\"", ",", "\"\<z\>\""}], "]"}], ",", 
                  RowBox[{"{", "\"\<`\>\"", "}"}]}], "]"}]}], "]"}], 
              "\[Equal]", 
              RowBox[{"{", "}"}]}], "&"}]}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", " ", 
        RowBox[{"Quiet", "[", 
         RowBox[{"ToExpression", "[", 
          RowBox[{"StringReplace", "[", 
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{"a", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"b", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\"\<(*\>\"", "->", "\"\<\>\""}], ",", 
              RowBox[{"\"\<*)\>\"", "->", "\"\<\>\""}]}], "}"}]}], "]"}], 
          "]"}], "]"}], ";", " ", 
        RowBox[{"b", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"StringReplace", "[", 
             RowBox[{"#", ",", 
              RowBox[{"d", "->", "\"\<\>\""}]}], "]"}], "&"}], ",", 
           RowBox[{"Names", "[", 
            RowBox[{"d", "<>", "\"\<*\>\""}], "]"}]}], "]"}]}], ";", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Quiet", "[", 
            RowBox[{"ClearAttributes", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{"Protected", ",", "ReadProtected"}], "}"}]}], "]"}], 
            "]"}], "&"}], ",", "b"}], "]"}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", "y", "}"}], "\[NotEqual]", 
            RowBox[{"{", "}"}]}], "&&", 
           RowBox[{"SameQ", "[", 
            RowBox[{
             RowBox[{"ToString", "[", 
              RowBox[{"Definition", "[", "y", "]"}], "]"}], ",", 
             "\"\<Null\>\""}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"y", "=", 
            RowBox[{"{", 
             RowBox[{"d", ",", 
              RowBox[{"Set", "[", 
               RowBox[{"p", ",", 
                RowBox[{"c", "[", "b", "]"}]}], "]"}], ",", 
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"Complement", "[", 
                 RowBox[{"b", ",", "p"}], "]"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "\"\<Attributes[\>\"", "<>", "#", "<>", 
                   "\"\<] = {Temporary}\>\""}], "!=", 
                  RowBox[{"Quiet", "[", 
                   RowBox[{"ToString", "[", 
                    RowBox[{"Definition", "[", "#", "]"}], "]"}], "]"}]}], 
                 "&"}]}], "]"}]}], "}"}]}], ";"}], ",", "Null"}], "]"}]}]}], 
      "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StrDelEnds1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StrDelEnds1", "[", 
   RowBox[{
    RowBox[{"S1_", "/;", 
     RowBox[{"StringQ", "[", "S1", "]"}]}], ",", 
    RowBox[{"h_", "/;", 
     RowBox[{"StringQ", "[", "h", "]"}]}], ",", 
    RowBox[{"p_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", "p"}], "]"}]}]}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "k", ",", "s"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"SuffPref", "[", 
        RowBox[{"S1", ",", "h", ",", "p"}], "]"}]}], ",", "S1", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"p", "\[Equal]", "3"}], ",", 
        RowBox[{"StringTrim", "[", 
         RowBox[{"S1", ",", 
          RowBox[{"h", "..."}]}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"s", ",", "a", ",", " ", "k"}], "}"}], "=", 
          RowBox[{"{", 
           RowBox[{"S1", ",", 
            RowBox[{"StringLength", "[", "h", "]"}], ",", "1"}], "}"}]}], ";", 
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{"SuffPref", "[", 
            RowBox[{"s", ",", "h", ",", "p"}], "]"}], ",", 
           RowBox[{
            RowBox[{"s", "=", 
             RowBox[{"StringTake", "[", 
              RowBox[{"s", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"p", "\[Equal]", "1"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"a", "+", "1"}], ",", 
                   RowBox[{"-", "1"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", 
                   RowBox[{
                    RowBox[{"StringLength", "[", "s", "]"}], "-", "a"}]}], 
                  "}"}]}], "]"}]}], "]"}]}], ";", " ", 
            RowBox[{
             RowBox[{"k", "++"}], "1"}]}]}], "]"}], ";", "s"}]}], "]"}]}], 
     "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StrDelEnds`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StrDelEnds", "[", 
   RowBox[{
    RowBox[{"S1_", "/;", 
     RowBox[{"StringQ", "[", "S1", "]"}]}], ",", 
    RowBox[{"h_", "/;", 
     RowBox[{"StringQ", "[", "h", "]"}]}], ",", 
    RowBox[{"p_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", "p"}], "]"}]}]}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "k", ",", "s"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"SuffPref", "[", 
        RowBox[{"S1", ",", "h", ",", "p"}], "]"}]}], ",", "S1", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"p", "\[Equal]", "3"}], ",", 
        RowBox[{"StringTrim", "[", 
         RowBox[{"S1", ",", 
          RowBox[{"h", "..."}]}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"s", ",", "a", ",", " ", "k"}], "}"}], "=", 
          RowBox[{"{", 
           RowBox[{"S1", ",", 
            RowBox[{"StringLength", "[", "h", "]"}], ",", "1"}], "}"}]}], ";", 
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{"SuffPref", "[", 
            RowBox[{"s", ",", "h", ",", "p"}], "]"}], ",", 
           RowBox[{
            RowBox[{"s", "=", 
             RowBox[{"StringTake", "[", 
              RowBox[{"s", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"p", "\[Equal]", "1"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"a", "+", "1"}], ",", 
                   RowBox[{"-", "1"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", 
                   RowBox[{
                    RowBox[{"StringLength", "[", "s", "]"}], "-", "a"}]}], 
                  "}"}]}], "]"}]}], "]"}]}], ";", " ", 
            RowBox[{
             RowBox[{"k", "++"}], "1"}]}]}], "]"}], ";", "s"}]}], "]"}]}], 
     "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StringTrim1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StringTrim1", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"StringQ", "[", "y", "]"}]}], ",", 
    RowBox[{"z_", "/;", 
     RowBox[{"StringQ", "[", "z", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", "=", "x"}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"y", "\[Equal]", "z", "\[Equal]", "\"\<\>\""}], ",", 
       RowBox[{"a", "=", 
        RowBox[{"StringTrim", "[", "a", "]"}]}], ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SuffPref", "[", 
           RowBox[{"a", ",", "y", ",", "1"}], "]"}], ",", 
          RowBox[{"a", "=", 
           RowBox[{"StringReplace", "[", 
            RowBox[{"a", ",", 
             RowBox[{"y", "\[Rule]", "\"\<\>\""}], ",", "1"}], "]"}]}]}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SuffPref", "[", 
           RowBox[{"a", ",", "z", ",", "2"}], "]"}], ",", 
          RowBox[{"a", "=", 
           RowBox[{"StringReplace", "[", 
            RowBox[{"a", ",", 
             RowBox[{"z", "\[Rule]", "\"\<\>\""}], ",", 
             RowBox[{"StringCount", "[", 
              RowBox[{"a", ",", "z"}], "]"}]}], "]"}]}]}], "]"}]}]}], "]"}], 
     ";", "a"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StringTrim2`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StringTrim2", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{"StringQ", "[", "y", "]"}], "||", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"StringQ", ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", "y", "}"}], "]"}]}], "]"}], "]"}], "\[Equal]", 
       RowBox[{"{", "True", "}"}]}]}]}], ",", 
    RowBox[{"z_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", "z"}], "]"}]}]}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "x"}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", "y", "}"}], "]"}]}], ",", 
      RowBox[{"m", "=", "0"}], ",", 
      RowBox[{"n", "=", "0"}]}], "}"}], ",", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"z", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"SuffPref", "[", 
            RowBox[{"a", ",", "b", ",", "1"}], "]"}], ",", 
           RowBox[{
            RowBox[{"a", "=", 
             RowBox[{"StringDrop", "[", 
              RowBox[{"a", ",", "1"}], "]"}]}], ";", 
            RowBox[{"m", "=", "1"}]}], ",", 
           RowBox[{"m", "=", "0"}]}], "]"}], ",", " ", "\[IndentingNewLine]", 
         " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"z", "\[Equal]", "2"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"SuffPref", "[", 
              RowBox[{"a", ",", "b", ",", "2"}], "]"}], ",", 
             RowBox[{
              RowBox[{"a", "=", 
               RowBox[{"StringDrop", "[", 
                RowBox[{"a", ",", 
                 RowBox[{"-", "1"}]}], "]"}]}], ";", " ", 
              RowBox[{"n", "=", "1"}]}], ",", 
             RowBox[{"n", "=", "0"}]}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"SuffPref", "[", 
               RowBox[{"a", ",", "b", ",", "1"}], "]"}], ",", 
              RowBox[{
               RowBox[{"a", "=", 
                RowBox[{"StringDrop", "[", 
                 RowBox[{"a", ",", "1"}], "]"}]}], ";", " ", 
               RowBox[{"m", "=", "1"}]}], ",", 
              RowBox[{"m", "=", "0"}]}], "]"}], ";", " ", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"SuffPref", "[", 
               RowBox[{"a", ",", "b", ",", "2"}], "]"}], ",", 
              RowBox[{
               RowBox[{"a", "=", 
                RowBox[{"StringDrop", "[", 
                 RowBox[{"a", ",", 
                  RowBox[{"-", "1"}]}], "]"}]}], ";", " ", 
               RowBox[{"n", "=", "1"}]}], ",", 
              RowBox[{"n", "=", "0"}]}], "]"}]}]}], "]"}]}], "]"}], ";", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"m", "+", "n"}], "\[Equal]", "0"}], ",", 
         RowBox[{"Return", "[", "a", "]"}], ",", "Null"}], "]"}]}], ",", 
      "Infinity"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StringReplaceS`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StringReplaceS", "[", 
   RowBox[{
    RowBox[{"S_", " ", "/;", 
     RowBox[{"StringQ", "[", "S", "]"}]}], ",", 
    RowBox[{"s1_", " ", "/;", 
     RowBox[{"StringQ", "[", "s1", "]"}]}], ",", 
    RowBox[{"s2_", " ", "/;", 
     RowBox[{"StringQ", "[", "s2", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"StringLength", "[", "S", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"StringPosition", "[", 
        RowBox[{"S", ",", "s1"}], "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", "p", ",", 
      RowBox[{"L", "=", 
       RowBox[{
       "Characters", "[", 
        "\"\<`!@#%^&*(){}:\\\"\\\\/|<>?~-=+[];:'., 1234567890\>\"", "]"}]}], 
      ",", 
      RowBox[{"R", "=", 
       RowBox[{
       "Characters", "[", "\"\<`!@#%^&*(){}:\\\"\\\\/|<>?~=+[];:'., \>\"", 
        "]"}]}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"b", "==", 
       RowBox[{"{", "}"}]}], ",", "S", ",", 
      RowBox[{
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "b", "]"}]}], ",", 
         RowBox[{
          RowBox[{"p", "=", 
           RowBox[{"b", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ";", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"Quiet", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"p", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "1"}], "&&", 
                RowBox[{
                 RowBox[{"p", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "a"}]}], ")"}], 
              "||", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"p", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "1"}], "&&", 
                RowBox[{"MemberQ", "[", 
                 RowBox[{"R", ",", 
                  RowBox[{"StringTake", "[", 
                   RowBox[{"S", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"p", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ",", 
                    RowBox[{
                    RowBox[{"p", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "+", "1"}]}], "}"}]}], 
                   "]"}]}], "]"}]}], ")"}], "||", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"MemberQ", "[", 
                 RowBox[{"L", ",", 
                  RowBox[{"StringTake", "[", 
                   RowBox[{"S", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"p", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], ",", 
                    RowBox[{
                    RowBox[{"p", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
                   "]"}]}], "]"}], "&&", 
                RowBox[{"MemberQ", "[", 
                 RowBox[{"R", ",", 
                  RowBox[{"StringTake", "[", 
                   RowBox[{"S", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"p", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ",", 
                    RowBox[{
                    RowBox[{"p", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "+", "1"}]}], "}"}]}], 
                   "]"}]}], "]"}]}], ")"}], "||", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"p", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "a"}], "&&", 
                RowBox[{"MemberQ", "[", 
                 RowBox[{"L", ",", 
                  RowBox[{"StringTake", "[", 
                   RowBox[{"S", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"p", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], ",", 
                    RowBox[{
                    RowBox[{"p", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
                   "]"}]}], "]"}]}], ")"}]}], "]"}], ",", 
            RowBox[{"c", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"c", ",", "p"}], "]"}]}]}], "]"}], ";", " ", 
          RowBox[{"k", "++"}]}]}], "]"}], ";", " ", 
       RowBox[{"StringReplacePart", "[", 
        RowBox[{"S", ",", "s2", ",", "c"}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StringReplacePart1`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StringReplacePart1", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"StringQ", "[", "y", "]"}]}], ",", 
    RowBox[{"z_", "/;", 
     RowBox[{"StringQ", "[", "z", "]"}]}], ",", 
    RowBox[{"n_", "/;", 
     RowBox[{
      RowBox[{"IntegerQ", "[", "n", "]"}], "||", 
      RowBox[{
       RowBox[{"ListQ", "[", "n", "]"}], "&&", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"IntegerQ", "[", "#", "]"}], "&"}], ",", "n"}], "]"}], 
         "]"}], "\[Equal]", 
        RowBox[{"{", "True", "}"}]}]}]}]}]}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", "=", 
      RowBox[{"StringPosition", "[", 
       RowBox[{"x", ",", "y"}], "]"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"a", "\[Equal]", 
       RowBox[{"{", "}"}]}], ",", "x", ",", "\[IndentingNewLine]", 
      RowBox[{"StringReplacePart", "[", 
       RowBox[{"x", ",", "z", ",", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Quiet", "[", 
            RowBox[{"Check", "[", 
             RowBox[{
              RowBox[{"a", "[", 
               RowBox[{"[", "#", "]"}], "]"}], ",", "Nothing"}], "]"}], "]"}],
            "&"}], ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", "n", "}"}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Range1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Range1", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", "h"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", "c"}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Characters", "[", 
         RowBox[{"ToString", "[", "x", "]"}], "]"}], ",", 
        RowBox[{"Characters", "[", 
         RowBox[{"ToString", "[", "y", "]"}], "]"}], ",", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"CharacterRange", "[", 
           RowBox[{"\"\<a\>\"", ",", "\"\<z\>\""}], "]"}], ",", 
          RowBox[{"CharacterRange", "[", 
           RowBox[{"\"\<A\>\"", ",", "\"\<Z\>\""}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\"\<$\>\"", ",", "\"\<_\>\""}], "}"}]}], "]"}]}], "}"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"h", "[", "z_", "]"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"t", "=", 
           RowBox[{"Length", "[", "z", "]"}]}], ",", "n", ",", "m", ",", 
          "d"}], "}"}], ",", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{"t", ",", 
           RowBox[{"t", "\[GreaterEqual]", "1"}], ",", 
           RowBox[{"t", "--"}], ",", 
           RowBox[{
            RowBox[{"d", "=", 
             RowBox[{"z", "[", 
              RowBox[{"[", "t", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"MemberQ", "[", 
                RowBox[{"c", ",", "d"}], "]"}]}], ",", 
              RowBox[{"Next", "[", "]"}], ",", 
              RowBox[{
               RowBox[{"n", "=", 
                RowBox[{"StringJoin", "[", 
                 RowBox[{"z", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ";;", "t"}], "]"}], "]"}], "]"}]}], ";", " ", 
               RowBox[{"m", "=", 
                RowBox[{"StringJoin", "[", 
                 RowBox[{"z", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"t", "+", "1"}], ";;", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}]}], ";", " ", 
               RowBox[{"Break", "[", "]"}]}]}], "]"}]}]}], "]"}], ";", " ", 
         RowBox[{"{", 
          RowBox[{"n", ",", "m"}], "}"}]}]}], "]"}]}], ";", " ", 
     RowBox[{"a", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"h", "[", "a", "]"}], ",", 
         RowBox[{"h", "[", "b", "]"}]}], "}"}], "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"a", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "\[NotEqual]", 
         RowBox[{"a", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "||", 
        RowBox[{"!", 
         RowBox[{"HowAct", "[", 
          RowBox[{"a", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "||", 
        RowBox[{"!", 
         RowBox[{"HowAct", "[", 
          RowBox[{"a", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "||", 
        RowBox[{
         RowBox[{"a", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "===", "\"\<\>\""}], "||", 
        RowBox[{
         RowBox[{"a", "[", 
          RowBox[{"[", "4", "]"}], "]"}], "===", "\"\<\>\""}], "||", 
        RowBox[{"ToExpression", "[", 
         RowBox[{
          RowBox[{"a", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "<>", "\"\<>\>\"", "<>", 
          RowBox[{"a", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"Defer", "[", 
         RowBox[{"Range1", "[", 
          RowBox[{"x", ",", "y"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"b", "=", 
        RowBox[{"Range", "[", 
         RowBox[{
          RowBox[{"ToExpression", "[", 
           RowBox[{"a", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
          RowBox[{"ToExpression", "[", 
           RowBox[{"a", "[", 
            RowBox[{"[", "4", "]"}], "]"}], "]"}]}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"Map3", "[", 
       RowBox[{"StringJoin", ",", 
        RowBox[{"a", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"Map", "[", 
         RowBox[{"ToString", ",", "b"}], "]"}]}], "]"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Range2`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Range2", "[", 
   RowBox[{"x_", ",", 
    RowBox[{
     RowBox[{"y_", "/;", 
      RowBox[{"IntegerQ", "[", "y", "]"}]}], "/;", 
     RowBox[{"y", "\[GreaterEqual]", "1"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"1", ",", "y"}], "]"}]}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "b", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{"a", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"a", ",", 
          RowBox[{
           RowBox[{"ToString", "[", "x", "]"}], "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"b", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "]"}]}]}], "]"}]}]}], "]"}], ";", 
     RowBox[{"ToExpression", "[", "a", "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`CallListable`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CallListable", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"SystemQ", "[", "x", "]"}], "||", 
      RowBox[{"BlockFuncModQ", "[", "x", "]"}]}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", "=", 
      RowBox[{"Attributes", "[", "x", "]"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"a", ",", "Listable"}], "]"}], ",", 
      RowBox[{"x", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", "y", "}"}], "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"SetAttributes", "[", 
        RowBox[{"x", ",", "Listable"}], "]"}], ";", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", "y", "}"}], "]"}], "]"}], ",", 
          RowBox[{"ClearAttributes", "[", 
           RowBox[{"x", ",", "Listable"}], "]"}]}], "}"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SysFuncQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SysFuncQ", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"UnevaluatedQ", "[", 
     RowBox[{"Definition2", ",", "x"}], "]"}], ",", "False", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"SameQ", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Definition2", "[", "x", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<System\>\""}], "]"}], ",", 
      "True", ",", "False"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SysFuncQ1`\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"SysFuncQ1", "[", "x_", "]"}], ":=", 
  RowBox[{"MemberQ", "[", 
   RowBox[{
    RowBox[{"Names", "[", "\"\<System`*\>\"", "]"}], ",", 
    RowBox[{"ToString", "[", "x", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Clear1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear1", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", "x"}], "]"}]}], ",", "y___"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", "y", "}"}]}], ",", "b", ",", "c", ",", "d", ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"y", "===", 
       RowBox[{"{", "}"}]}], ",", "Null", ",", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{"k", ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "a", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{
          RowBox[{"b", "=", 
           RowBox[{"a", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"d", "=", 
           RowBox[{"Quiet", "[", 
            RowBox[{"ToExpression", "[", 
             RowBox[{"\"\<Attributes[\>\"", "<>", 
              RowBox[{"ToString1", "[", "b", "]"}], "<>", "\"\<]\>\""}], 
             "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"ToExpression", "[", 
           RowBox[{"\"\<Quiet[ClearAttributes[\>\"", "<>", 
            RowBox[{"ToString1", "[", "b", "]"}], "<>", "\"\<, \>\"", "<>", 
            RowBox[{"ToString", "[", "d", "]"}], "<>", "\"\<]\>\"", "<>", 
            "\"\<; Clear\>\"", "<>", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"x", "\[Equal]", "1"}], ",", "\"\<\>\"", ",", 
              "\"\<All\>\""}], "]"}], "<>", "\"\<[\>\"", "<>", 
            RowBox[{"ToString1", "[", "b", "]"}], "<>", "\"\<]]\>\""}], 
           "]"}]}]}], "]"}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"x", "\[Equal]", "2"}], ",", "Null", ",", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Check", "[", 
           RowBox[{
            RowBox[{"ToExpression", "[", 
             RowBox[{"\"\<SetAttributes[\>\"", "<>", 
              RowBox[{"ToString1", "[", "b", "]"}], "<>", "\"\<, \>\"", "<>", 
              RowBox[{"ToString", "[", "d", "]"}], "<>", "\"\<]\>\""}], "]"}],
             ",", "$Failed"}], "]"}], "]"}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Range3`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Range3", "[", 
   RowBox[{"x_", ",", 
    RowBox[{
     RowBox[{"y_", "/;", 
      RowBox[{"IntegerQ", "[", "y", "]"}]}], "/;", 
     RowBox[{"y", "\[GreaterEqual]", "1"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"1", ",", "y"}], "]"}]}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "b", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{"a", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"a", ",", 
          RowBox[{
           RowBox[{"ToString", "[", "x", "]"}], "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"b", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "]"}], "<>", "\"\<_\>\""}]}], 
         "]"}]}]}], "]"}], ";", 
     RowBox[{"ToExpression", "[", "a", "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Range4`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Range4", "[", 
   RowBox[{"x_", ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", "y", "}"}], "\[NotEqual]", 
               RowBox[{"{", "}"}]}], ",", 
              RowBox[{"{", "y", "}"}], ",", "Null"}], "]"}]}], "}"}], "]"}], 
         ",", 
         RowBox[{
          RowBox[{"#", "\[NotEqual]", "\"\<Null\>\""}], "&"}]}], "]"}]}], ",",
       "b"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"SameQ", "[", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Map", "[", 
          RowBox[{"NumberQ", ",", "a"}], "]"}], "]"}], ",", 
        RowBox[{"{", "True", "}"}]}], "]"}], ",", 
      RowBox[{"Range", "[", 
       RowBox[{"Sequences", "[", "a", "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"b", "=", 
        RowBox[{"Map", "[", 
         RowBox[{"FromCharacterCode", ",", 
          RowBox[{"Range", "[", 
           RowBox[{"32", ",", "4096"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}], "]"}], "\[Equal]", "2"}], "&&", 
          RowBox[{"MemberQ3", "[", 
           RowBox[{"b", ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"CharacterRange", "[", 
          RowBox[{"x", ",", "y"}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", 
              RowBox[{"{", 
               RowBox[{"x", ",", "y"}], "}"}], "]"}], "\[Equal]", "1"}], "&&", 
            RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
           RowBox[{"Select", "[", 
            RowBox[{"b", ",", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"ToCharacterCode", "[", "#", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", 
               RowBox[{
                RowBox[{"ToCharacterCode", "[", "x", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}], ",", 
           "$Failed"}], "]"}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Range5`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Range5", "[", "x__", "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Head", "[", "#", "]"}], "===", "Span"}], ",", 
        RowBox[{"Range", "[", 
         RowBox[{
          RowBox[{"Part", "[", 
           RowBox[{"#", ",", "1"}], "]"}], ",", 
          RowBox[{"Part", "[", 
           RowBox[{"#", ",", "2"}], "]"}]}], "]"}], ",", "#"}], "]"}], "&"}], 
     ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{"{", "x", "}"}], "]"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Gather1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Gather1", "[", 
   RowBox[{
    RowBox[{"L_", "/;", 
     RowBox[{"ListListQ", "[", "L", "]"}]}], ",", 
    RowBox[{"n_", "/;", 
     RowBox[{"IntegerQ", "[", "n", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", "c", ",", "k"}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"1", "\[LessEqual]", "n"}], "&&", 
          RowBox[{"n", "\[LessEqual]", 
           RowBox[{"Length", "[", 
            RowBox[{"L", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], ")"}]}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"Defer", "[", 
         RowBox[{"Gather1", "[", 
          RowBox[{"L", ",", "n"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"a", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"a", ",", 
            RowBox[{
             RowBox[{"L", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "[", 
             RowBox[{"[", "n", "]"}], "]"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", 
           RowBox[{"Length", "[", "L", "]"}]}], "}"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"a", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"List", ",", 
        RowBox[{"DeleteDuplicates", "[", "a", "]"}]}], "]"}]}], ";", " ", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"a", "[", 
         RowBox[{"[", "k", "]"}], "]"}], "=", 
        RowBox[{"Select", "[", 
         RowBox[{"L", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "\[Equal]", 
            RowBox[{
             RowBox[{"a", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}]}], "]"}], ";",
      "a"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Gather2`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Gather2", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ListQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Gather", "[", 
          RowBox[{"Flatten", "[", "x", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "#", "]"}], ">", "1"}], "&"}]}], "]"}]}], 
      ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"a", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"{", "}"}], "]"}], ",", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"b", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"b", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"a", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"Length", "[", 
               RowBox[{"a", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", 
           RowBox[{"Length", "[", "a", "]"}]}], "}"}]}], "]"}]}], "]"}], ";", 
     " ", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "b", "]"}], ">", "1"}], ",", "b", ",", 
       RowBox[{"First", "[", "b", "]"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SubStr`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SubStr", "[", 
   RowBox[{
    RowBox[{"S_", "/;", 
     RowBox[{"StringQ", "[", "S", "]"}]}], ",", 
    RowBox[{"p_", "/;", 
     RowBox[{"IntegerQ", "[", "p", "]"}]}], ",", 
    RowBox[{"a_", "/;", 
     RowBox[{
      RowBox[{"CharacterQ", "[", "a", "]"}], "||", 
      RowBox[{
       RowBox[{"ListQ", "[", "a", "]"}], "&&", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Map", "[", 
          RowBox[{"CharacterQ", ",", "a"}], "]"}], "]"}], "\[Equal]", 
        RowBox[{"{", "True", "}"}]}]}]}]}], ",", 
    RowBox[{"b_", "/;", 
     RowBox[{
      RowBox[{"CharacterQ", "[", "b", "]"}], "||", 
      RowBox[{
       RowBox[{"ListQ", "[", "b", "]"}], "&&", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Map", "[", 
          RowBox[{"CharacterQ", ",", "b"}], "]"}], "]"}], "\[Equal]", 
        RowBox[{"{", "True", "}"}]}]}]}]}], ",", 
    RowBox[{"R_", "/;", 
     RowBox[{"!", 
      RowBox[{"HowAct", "[", "R", "]"}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"c", "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"StringTake", "[", 
         RowBox[{"S", ",", 
          RowBox[{"{", 
           RowBox[{"p", ",", "p"}], "}"}]}], "]"}], "]"}]}], ",", "k", ",", 
      "t"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"p", "\[GreaterEqual]", "1"}], "&&", 
       RowBox[{"p", "\[LessEqual]", 
        RowBox[{"StringLength", "[", "S", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", 
          RowBox[{"p", "+", "1"}]}], ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"StringLength", "[", "S", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{
          RowBox[{"t", "=", 
           RowBox[{"StringTake", "[", 
            RowBox[{"S", ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", "k"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"CharacterQ", "[", "b", "]"}], ",", 
              RowBox[{"t", "\[NotEqual]", "b"}], ",", 
              RowBox[{"!", 
               RowBox[{"MemberQ", "[", 
                RowBox[{"b", ",", "t"}], "]"}]}]}], "]"}], ",", 
            RowBox[{
             RowBox[{"c", "=", 
              RowBox[{"c", "<>", "t"}]}], ";", 
             RowBox[{"Continue", "[", "]"}]}], ",", 
            RowBox[{"Break", "[", "]"}]}], "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", 
          RowBox[{"p", "-", "1"}]}], ",", 
         RowBox[{"k", "\[GreaterEqual]", "1"}], ",", 
         RowBox[{"k", "--"}], ",", 
         RowBox[{
          RowBox[{"t", "=", 
           RowBox[{"StringTake", "[", 
            RowBox[{"S", ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", "k"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"CharacterQ", "[", "a", "]"}], ",", 
              RowBox[{"t", "\[NotEqual]", "a"}], ",", 
              RowBox[{"!", 
               RowBox[{"MemberQ", "[", 
                RowBox[{"a", ",", "t"}], "]"}]}]}], "]"}], ",", 
            RowBox[{
             RowBox[{"c", "=", 
              RowBox[{"t", "<>", "c"}]}], ";", " ", 
             RowBox[{"Continue", "[", "]"}]}], ",", 
            RowBox[{"Break", "[", "]"}]}], "]"}]}]}], "]"}], ";", " ", "c"}], 
      ",", 
      RowBox[{
       RowBox[{"R", "=", 
        RowBox[{"\"\<Argument p should be in range 1..\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"StringLength", "[", "S", "]"}], "]"}], "<>", 
         "\"\< but received \>\"", "<>", 
         RowBox[{"ToString", "[", "p", "]"}]}]}], ";", "$Failed"}]}], "]"}]}],
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Tuples1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tuples1", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"ListQ", "[", "x", "]"}]}], ",", 
    RowBox[{"n_", "/;", 
     RowBox[{"IntegerQ", "[", "n", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"c", "=", "\"\<\>\""}], ",", 
      RowBox[{"d", "=", "\"\<\>\""}], ",", 
      RowBox[{"f", "=", "Res"}], ",", 
      RowBox[{"h", "=", 
       RowBox[{"{", "}"}]}], ",", "t", ",", "t$$$", ",", 
      RowBox[{"j", "=", "1"}], ",", 
      RowBox[{"a", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"ToString1", ",", 
         RowBox[{"Map", "[", 
          RowBox[{"ToString", ",", "x"}], "]"}]}], "]"}]}], ",", 
      RowBox[{"m", "=", 
       RowBox[{"Length", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", "\"\<\>\""}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Res", "=", 
      RowBox[{"{", "}"}]}], ";", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "\[LessEqual]", "n"}], ",", 
       RowBox[{"j", "++"}], ",", 
       RowBox[{
        RowBox[{"h", "=", 
         RowBox[{"Append", "[", 
          RowBox[{"h", ",", 
           RowBox[{"\"\<t$$$\>\"", "<>", 
            RowBox[{"ToString", "[", "j", "]"}]}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"b", "=", 
         RowBox[{"b", "<>", "\"\<For[t$$$\>\"", "<>", 
          RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<=1, t$$$\>\"", "<>", 
          RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\< <= \>\"", "<>", 
          RowBox[{"ToString", "[", "m", "]"}], "<>", "\"\<, t$$$\>\"", "<>", 
          RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<++, \>\""}]}], ";", 
        RowBox[{"d", "=", 
         RowBox[{"d", "<>", "\"\<]\>\""}]}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "\[LessEqual]", "n"}], ",", 
       RowBox[{"j", "++"}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"c", "<>", 
         RowBox[{"ToString", "[", "a", "]"}], "<>", "\"\<[[t$$$\>\"", "<>", 
         RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<]]\>\"", "<>", 
         "\"\<,\>\""}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"\"\<Res = Append[Res, ToString1[StringJoin[{\>\"", "<>", 
       RowBox[{"StringTake", "[", 
        RowBox[{"c", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "2"}]}], "}"}]}], "]"}], "<>", "\"\<}]]]\>\""}]}], 
     ";", " ", "\[IndentingNewLine]", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"b", "<>", "c", "<>", "d"}], "]"}], ";", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Res", ",", 
        RowBox[{"Res", "=", "f"}]}], "}"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`AssignToList`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AssignToList", "[", 
   RowBox[{
    RowBox[{"y_", "/;", 
     RowBox[{"ListQ", "[", "y", "]"}]}], ",", 
    RowBox[{"z_", "/;", 
     RowBox[{"!", 
      RowBox[{"HowAct", "[", "z", "]"}]}]}], ",", 
    RowBox[{"n_", "/;", 
     RowBox[{
      RowBox[{"IntegerQ", "[", "n", "]"}], "&&", 
      RowBox[{"n", "\[GreaterEqual]", "1"}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "y", "]"}], "<", "n"}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"Defer", "[", 
         RowBox[{"AssignToList", "[", 
          RowBox[{"y", ",", "z", ",", "n"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"a", "=", 
         RowBox[{"Range2", "[", 
          RowBox[{"z", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{"k", ",", 
          RowBox[{"k", "\[LessEqual]", "n"}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{"ToExpression", "[", 
           RowBox[{
            RowBox[{"ToString", "[", 
             RowBox[{"a", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "]"}], "<>", "\"\< = \>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"y", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "]"}]}], "]"}]}], "]"}]}]}], 
      "]"}], ";", "a"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`BlockToModule`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BlockToModule", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"SymbolQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Definition2", "[", "x", "]"}]}], ",", "b", ",", "c", ",", "d",
       ",", 
      RowBox[{"h", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", "n", ",", "m"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"ListQ", "[", "a", "]"}], "&&", 
        RowBox[{
         RowBox[{"a", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "\"\<System\>\""}]}], "||", 
       RowBox[{"UnevaluatedQ", "[", 
        RowBox[{"Definition2", ",", "x"}], "]"}]}], ",", "$Failed", ",", 
      RowBox[{
       RowBox[{"b", "=", 
        RowBox[{"a", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ClearAllAttributes", "[", "x", "]"}], ";", 
       RowBox[{"c", "=", 
        RowBox[{"a", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", 
           RowBox[{"-", "2"}]}], "]"}], "]"}]}], ";", 
       RowBox[{"d", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"HeadPF", "[", "x", "]"}], "}"}], "]"}]}], ";", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{"k", ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "d", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"n", ",", "m"}], "}"}], "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"c", "[", 
              RowBox[{"[", "k", "]"}], "]"}], ",", 
             RowBox[{"d", "[", 
              RowBox[{"[", "k", "]"}], "]"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"SuffPref", "[", 
             RowBox[{"n", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"m", "<>", "\"\< := Block[{\>\""}], ",", 
                RowBox[{"m", "<>", "\"\< = Block[{\>\""}]}], "}"}], ",", 
              "1"}], "]"}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"h", ",", 
              RowBox[{"StringReplace", "[", 
               RowBox[{"n", ",", 
                RowBox[{"\"\<Block[{\>\"", "->", "\"\<Module[{\>\""}], ",", 
                "1"}], "]"}]}], "]"}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"h", ",", "n"}], "]"}]}], "]"}]}]}], "]"}], ";", 
       RowBox[{"Map", "[", 
        RowBox[{"ToExpression", ",", "h"}], "]"}], ";", 
       RowBox[{"SetAttributes", "[", 
        RowBox[{"x", ",", "b"}], "]"}]}]}], "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`BlockFuncModQ`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BlockFuncModQ", "[", 
   RowBox[{"x_", ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b", ",", "c", ",", 
      RowBox[{"a", "=", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"$Failed", ",", "\"\<System\>\""}], "}"}], ",", "a"}], "]"}],
       ",", "False", ",", 
      RowBox[{
       RowBox[{"b", "=", 
        RowBox[{"StringSplit", "[", 
         RowBox[{"a", ",", 
          RowBox[{"{", 
           RowBox[{"\"\< := \>\"", ",", "\"\< = \>\""}], "}"}], ",", "2"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"StringFreeQ", "[", 
          RowBox[{
           RowBox[{"b", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<[\>\""}], "]"}], ",", 
         "False", ",", 
         RowBox[{
          RowBox[{"c", "=", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"SuffPref", "[", 
              RowBox[{
               RowBox[{"b", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", "\"\<Module[{\>\"", ",", 
               "1"}], "]"}], ",", "\"\<Module\>\"", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"SuffPref", "[", 
                RowBox[{
                 RowBox[{"b", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", "\"\<Block[{\>\"", ",",
                  "1"}], "]"}], ",", "\"\<Block\>\"", ",", 
               "\"\<Function\>\""}], "]"}]}], "]"}]}], ";", " ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"{", "y", "}"}], "\[NotEqual]", 
              RowBox[{"{", "}"}]}], "&&", 
             RowBox[{"!", 
              RowBox[{"HowAct", "[", "y", "]"}]}]}], ",", 
            RowBox[{"y", "=", "c"}]}], "]"}], ";", "True"}]}], "]"}]}]}], 
     "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`BlockModQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BlockModQ", "[", 
   RowBox[{"x_", ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", "b", ",", "c", ",", 
      RowBox[{"s", "=", 
       RowBox[{"FromCharacterCode", "[", "6", "]"}]}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"$Failed", ",", "\"\<System\>\""}], "}"}], ",", "a"}], "]"}],
       ",", "False", ",", 
      RowBox[{
       RowBox[{"b", "=", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"a", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\< := \>\"", "\[Rule]", "s"}], ",", 
            RowBox[{"\"\< = \>\"", "\[Rule]", "s"}]}], "}"}], ",", "1"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"b", "=", 
        RowBox[{"StringTake", "[", 
         RowBox[{"b", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"StringPosition", "[", 
                RowBox[{"b", ",", "s"}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", " ", 
       RowBox[{"c", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SuffPref", "[", 
           RowBox[{"b", ",", "\"\<Module[{\>\"", ",", "1"}], "]"}], ",", 
          "\"\<Module\>\"", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"SuffPref", "[", 
             RowBox[{"b", ",", "\"\<Block[{\>\"", ",", "1"}], "]"}], ",", 
            "\"\<Block\>\""}], "]"}]}], "]"}]}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", "y", "}"}], "\[NotEqual]", 
           RowBox[{"{", "}"}]}], "&&", 
          RowBox[{"!", 
           RowBox[{"HowAct", "[", "y", "]"}]}]}], ",", 
         RowBox[{"y", "=", "c"}]}], "]"}], ";", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"c", "===", "Null"}], ",", "False", ",", "True"}], "]"}]}]}],
      "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ActBFM`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ActBFM", "[", "]"}], ":=", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Sort", "[", 
     RowBox[{"Names", "[", "\"\<Global`*\>\"", "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"!", 
       RowBox[{"TemporaryQ", "[", "#", "]"}]}], "&&", 
      RowBox[{"BlockFuncModQ", "[", "#", "]"}]}], "&"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DelEl`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DelEl", "[", 
   RowBox[{
    RowBox[{"L_", "/;", 
     RowBox[{"ListQ", "[", "L", "]"}]}], ",", "x_", ",", 
    RowBox[{"N_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", "N"}], "]"}]}]}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"b", "=", 
       RowBox[{"Length", "[", "L", "]"}]}], ",", "k", ",", "Art"}], "}"}], 
    ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Art", "[", 
       RowBox[{"Z_", ",", "y_", ",", 
        RowBox[{"p_", "/;", 
         RowBox[{"MemberQ", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}], ",", "p"}], "]"}]}]}], "]"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"b", "=", 
           RowBox[{"Length", "[", "Z", "]"}]}], ",", "k"}], "}"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"b", "\[Equal]", "0"}], ",", 
          RowBox[{"Defer", "[", 
           RowBox[{"DelEl", "[", 
            RowBox[{"Z", ",", "y", ",", "p"}], "]"}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"p", "\[Equal]", "1"}], ",", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"k", "=", "1"}], ",", 
              RowBox[{"k", "\[LessEqual]", "b"}], ",", 
              RowBox[{"k", "++"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Z", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], "===", "y"}], ",", "Null", 
                ",", 
                RowBox[{"Return", "[", 
                 RowBox[{"Take", "[", 
                  RowBox[{"Z", ",", 
                   RowBox[{"{", 
                    RowBox[{"k", ",", "b"}], "}"}]}], "]"}], "]"}]}], "]"}]}],
              "]"}], ",", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"k", "=", "b"}], ",", 
              RowBox[{"1", "\[LessEqual]", "k"}], ",", 
              RowBox[{"k", "--"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Z", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], "===", "y"}], ",", "Null", 
                ",", 
                RowBox[{"Return", "[", 
                 RowBox[{"Take", "[", 
                  RowBox[{"Z", ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "k"}], "}"}]}], "]"}], "]"}]}], "]"}]}],
              "]"}], ",", "Null"}], "]"}]}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"N", "\[Equal]", "1"}], "||", 
        RowBox[{"N", "\[Equal]", "2"}]}], ",", 
       RowBox[{"Art", "[", 
        RowBox[{"L", ",", "x", ",", "N"}], "]"}], ",", 
       RowBox[{"Art", "[", 
        RowBox[{
         RowBox[{"Art", "[", 
          RowBox[{"L", ",", "x", ",", "1"}], "]"}], ",", "x", ",", "2"}], 
        "]"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`BootDrive`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BootDrive", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Adrive", "[", "]"}], ",", 
         RowBox[{
          RowBox[{"FileExistsQ", "[", 
           RowBox[{"#", "<>", "\"\<:\\\\\>\"", "<>", "\"\<Boot.ini\>\""}], 
           "]"}], "&"}]}], "]"}]}], ",", "b", ",", "c", ",", 
      RowBox[{"d", "=", "\"\<\>\""}], ",", 
      RowBox[{"h", "=", 
       RowBox[{"{", "}"}]}], ",", "t"}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"a", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"Return", "[", "$Failed", "]"}], ",", 
       RowBox[{"b", "=", 
        RowBox[{
         RowBox[{"a", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "<>", "\"\<:\\\\\>\"", "<>", 
         "\"\<Boot.ini\>\""}]}]}], "]"}], ";", " ", 
     RowBox[{"Label", "[", "avz", "]"}], ";", " ", 
     RowBox[{"c", "=", 
      RowBox[{"Read", "[", 
       RowBox[{"b", ",", "String"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"c", "===", "EndOfFile"}], ",", 
       RowBox[{
        RowBox[{"Close", "[", "b", "]"}], ";", " ", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "h", "]"}], "\[Equal]", "1"}], ",", 
             RowBox[{"h", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "h"}], "]"}]}], "}"}], 
         "]"}]}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SuffPref", "[", 
          RowBox[{"c", ",", "\"\<default=\>\"", ",", "1"}], "]"}], ",", 
         RowBox[{
          RowBox[{"d", "=", 
           RowBox[{"\"\<\\\\\>\"", "<>", 
            RowBox[{"StrDelEnds", "[", 
             RowBox[{
              RowBox[{"StringTake", "[", 
               RowBox[{"c", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"c", ",", "\"\<\\\\\>\""}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], ",", 
                  RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "\"\< \>\"", ",",
               "2"}], "]"}], "<>", "\"\<=\>\""}]}], ";", 
          RowBox[{"Goto", "[", "avz", "]"}]}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"d", "\[Equal]", "\"\<\>\""}], "||", 
            RowBox[{"StringFreeQ", "[", 
             RowBox[{"c", ",", 
              RowBox[{"{", 
               RowBox[{"d", ",", "\"\<\\\\WINDOWS=\>\""}], "}"}]}], "]"}]}], 
           ",", 
           RowBox[{"Goto", "[", "avz", "]"}], ",", 
           RowBox[{
            RowBox[{"t", "=", 
             RowBox[{"Flatten", "[", 
              RowBox[{"StringPosition", "[", 
               RowBox[{"c", ",", 
                RowBox[{"DeleteDuplicates", "[", 
                 RowBox[{"{", 
                  RowBox[{
                  "d", ",", "\"\<\\\\WINDOWS=\>\"", ",", "\"\</\>\""}], "}"}],
                  "]"}]}], "]"}], "]"}]}], ";", 
            RowBox[{"t", "=", 
             RowBox[{"ToExpression", "[", 
              RowBox[{"StringTake", "[", 
               RowBox[{"c", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"t", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ",", 
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "t", "]"}], "\[Equal]", "2"}], ",",
                     "0", ",", 
                    RowBox[{"t", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "-", "1"}]}], 
                 "}"}]}], "]"}], "]"}]}], ";", " ", 
            RowBox[{"h", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"h", ",", "t"}], "]"}]}], ";", " ", 
            RowBox[{"Goto", "[", "avz", "]"}]}]}], "]"}]}], "]"}]}], 
      "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`BootDrive1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BootDrive1", "[", "]"}], ":=", 
  RowBox[{"Mapp", "[", 
   RowBox[{"Part", ",", 
    RowBox[{"GetEnvironment", "[", 
     RowBox[{"{", 
      RowBox[{
      "\"\<SystemDrive\>\"", ",", "\"\<SystemRoot\>\"", ",", "\"\<OS\>\""}], 
      "}"}], "]"}], ",", "2"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`FindSubDir`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FindSubDir", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"c", "=", "\"\<\>\""}], ",", 
      RowBox[{"k", "=", "1"}], ",", "p", ",", "t", ",", 
      RowBox[{"a", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "y", "}"}], "\[Equal]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"Adrive", "[", "]"}], ",", 
         RowBox[{"{", "y", "}"}]}], "]"}]}], ",", 
      RowBox[{"f", "=", "\"\<Art27Kr20.txt\>\""}], ",", 
      RowBox[{"h", "=", 
       RowBox[{"ToLowerCase", "[", "x", "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{
        RowBox[{"Run", "[", 
         RowBox[{"\"\<Dir \>\"", ",", 
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "<>", "\"\<:\\\\\>\""}], ",", 
          RowBox[{"\"\< /B/S/L > \>\"", "<>", "f"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"SameQ", "[", 
            RowBox[{"c", ",", "\"\<EndOfFile\>\""}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"c", "=", 
            RowBox[{"ToString", "[", 
             RowBox[{"Read", "[", 
              RowBox[{"f", ",", "String"}], "]"}], "]"}]}], ";", " ", 
           RowBox[{"t", "=", 
            RowBox[{"FileNameSplit", "[", "c", "]"}]}], ";", 
           RowBox[{"p", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{"Position", "[", 
              RowBox[{"t", ",", "h"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"p", "\[NotEqual]", 
               RowBox[{"{", "}"}]}], "&&", 
              RowBox[{"DirectoryQ", "[", 
               RowBox[{"FileNameJoin", "[", 
                RowBox[{"t", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ";;", 
                   RowBox[{"p", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], "]"}], 
               "]"}]}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"b", ",", "c"}], "]"}]}], "]"}], ";", " ", 
           RowBox[{"Continue", "[", "]"}]}]}], "]"}], ";", 
        RowBox[{"Closes", "[", "f", "]"}], ";", 
        RowBox[{"c", "=", "\"\<\>\""}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DeleteFile", "[", "f", "]"}], ",", "b"}], "}"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`$TestArgsTypes`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"$TestArgsTypes", "=", "50090"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`OpSys`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"OpSys", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"Unique", "[", "\"\<s\>\"", "]"}], "]"}]}], ",", "b"}], "}"}],
     ",", 
    RowBox[{
     RowBox[{"Run", "[", 
      RowBox[{"\"\<SystemInfo >\>\"", "<>", "a"}], "]"}], ";", 
     RowBox[{"b", "=", 
      RowBox[{"StringTrim", "[", 
       RowBox[{"StringTake", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ReadList", "[", 
           RowBox[{"a", ",", "String"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}]}], ";", 
     RowBox[{"DeleteFile", "[", "a", "]"}], ";", "b"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`TestArgsTypes`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TestArgsTypes", "[", 
   RowBox[{
    RowBox[{"P_", "/;", 
     RowBox[{
      RowBox[{"ModuleQ", "[", "P", "]"}], "||", 
      RowBox[{"BlockQ", "[", "P", "]"}], "||", 
      RowBox[{"QFunction", "[", "P", "]"}]}]}], ",", "y_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", "h", ",", 
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"a", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"ToString", ",", 
         RowBox[{"Args", "[", "P", "]"}]}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"InputForm", "[", "y", "]"}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"ClearAll", "[", "\"\<$TestArgsTypes\>\"", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"SuffPref", "[", 
         RowBox[{"b", ",", 
          RowBox[{
           RowBox[{"ToString", "[", "P", "]"}], "<>", "\"\<[\>\""}], ",", 
          "1"}], "]"}]}], ",", 
       RowBox[{"Return", "[", "y", "]"}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"Map", "[", 
         RowBox[{"ToString1", ",", 
          RowBox[{"ToExpression", "[", 
           RowBox[{"\"\<{\>\"", "<>", 
            RowBox[{"StringTake", "[", 
             RowBox[{"b", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"StringLength", "[", 
                  RowBox[{"ToString", "[", "P", "]"}], "]"}], "+", "2"}], ",", 
                RowBox[{"-", "2"}]}], "}"}]}], "]"}], "<>", "\"\<}\>\""}], 
           "]"}]}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "a", "]"}], "\[NotEqual]", 
        RowBox[{"Length", "[", "c", "]"}]}], ",", 
       RowBox[{
        RowBox[{
        "$TestArgsTypes", "=", 
         "\"\<Quantities of formal and factual arguments are different\>\""}],
         ";", "$Failed"}], ",", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{"k", ",", 
          RowBox[{"k", "\[LessEqual]", 
           RowBox[{"Length", "[", "a", "]"}]}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{"d", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"d", ",", 
             RowBox[{"ToExpression", "[", 
              RowBox[{"\"\<{\>\"", "<>", 
               RowBox[{"c", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "<>", "\"\<}\>\"", "<>", 
               "\"\< /. \>\"", "<>", 
               RowBox[{"a", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "<>", "\"\< -> True\>\""}], 
              "]"}]}], "]"}]}]}], "]"}], ";", 
        RowBox[{"d", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"ListQ", "[", "#", "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "#"}], "]"}], "&"}], ",", 
           "d"}], "]"}]}], ";", " ", 
        RowBox[{"h", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Map3", "[", 
           RowBox[{"Position", ",", "d", ",", 
            RowBox[{"Cases", "[", 
             RowBox[{"d", ",", 
              RowBox[{"Except", "[", "True", "]"}]}], "]"}]}], "]"}], "]"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"h", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"#", ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"ListQ", "[", 
                 RowBox[{"d", "[", 
                  RowBox[{"[", "#", "]"}], "]"}], "]"}], ",", 
                RowBox[{"Flatten", "[", 
                 RowBox[{
                  RowBox[{"d", "[", 
                   RowBox[{"[", "#", "]"}], "]"}], ",", "1"}], "]"}], ",", 
                RowBox[{"d", "[", 
                 RowBox[{"[", "#", "]"}], "]"}]}], "]"}]}], "}"}], "&"}], ",",
            "h"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
        RowBox[{"$TestArgsTypes", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "h", "]"}], "\[Equal]", "1"}], ",", 
           RowBox[{"h", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "h"}], "]"}]}], ";", 
        "$Failed"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`TestArgsTypes1`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TestArgsTypes1", "[", 
   RowBox[{
    RowBox[{"P_", "/;", 
     RowBox[{
      RowBox[{"ModuleQ", "[", "P", "]"}], "||", 
      RowBox[{"BlockQ", "[", "P", "]"}], "||", 
      RowBox[{"QFunction", "[", "P", "]"}]}]}], ",", "y_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", "h", ",", 
      RowBox[{"k", "=", "1"}], ",", "n", ",", "p", ",", "w", ",", "w1", ",", 
      RowBox[{"a", "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"ArgsTypes", "[", "P", "]"}], "]"}]}], ",", 
      RowBox[{"g", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"ToString1", ",", 
         RowBox[{"Args", "[", "P", "]"}]}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"InputForm", "[", "y", "]"}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"StringReplace", "[", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"\"\<\\\\\\\\\>\"", "\[Rule]", "\"\<\>\""}]}], "]"}]}], 
          "}"}], "&"}], ",", "a"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ClearAll", "[", 
      RowBox[{"\"\<$TestArgsTypes\>\"", ",", "\"\<$$Art$Kr$$\>\""}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"SuffPref", "[", 
         RowBox[{"b", ",", 
          RowBox[{
           RowBox[{"ToString", "[", "P", "]"}], "<>", "\"\<[\>\""}], ",", 
          "1"}], "]"}]}], ",", 
       RowBox[{"Return", "[", "y", "]"}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"Map", "[", 
         RowBox[{"ToString1", ",", 
          RowBox[{"ToExpression", "[", 
           RowBox[{"\"\<{\>\"", "<>", 
            RowBox[{"StringTake", "[", 
             RowBox[{"b", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"StringLength", "[", 
                  RowBox[{"ToString", "[", "P", "]"}], "]"}], "+", "2"}], ",", 
                RowBox[{"-", "2"}]}], "}"}]}], "]"}], "<>", "\"\<}\>\""}], 
           "]"}]}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "a", "]"}], "\[NotEqual]", 
        RowBox[{"Length", "[", "c", "]"}]}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{
         RowBox[{
         "$TestArgsTypes", "=", 
          "\"\<Quantities of formal and factual arguments are \
different\>\""}], ";", "$Failed"}], "]"}], ",", 
       RowBox[{
        RowBox[{"w", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"StringPosition", "[", 
                    RowBox[{"#", ",", "\"\<_\>\""}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
             "]"}], "&"}], ",", "g"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"w1", "=", 
         RowBox[{"Map", "[", 
          RowBox[{"ToString", ",", 
           RowBox[{"Unique", "[", "w", "]"}]}], "]"}]}], ";", " ", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"k", "\[LessEqual]", 
           RowBox[{"Length", "[", "w", "]"}]}], ",", 
          RowBox[{
           RowBox[{"ToExpression", "[", 
            RowBox[{
             RowBox[{"w1", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "<>", "\"\< = \>\"", "<>", 
             RowBox[{"w", "[", 
              RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ";", 
           RowBox[{"k", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Map", "[", 
         RowBox[{"ClearAll", ",", "w"}], "]"}], ";", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "1"}], ",", 
          RowBox[{"k", "\[LessEqual]", 
           RowBox[{"Length", "[", "a", "]"}]}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{
           RowBox[{"p", "=", 
            RowBox[{"a", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"p", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "===", "\"\<Arbitrary\>\""}], 
             ",", 
             RowBox[{"d", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"d", ",", "True"}], "]"}]}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"StringFreeQ", "[", 
                RowBox[{
                 RowBox[{"g", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], ",", "\"\< /; \>\""}], 
                "]"}], ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"ToExpression", "[", 
                  RowBox[{"\"\<Head[\>\"", "<>", 
                   RowBox[{"c", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "<>", "\"\<] === \>\"", "<>", 
                   RowBox[{"p", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
                 RowBox[{"d", "=", 
                  RowBox[{"Append", "[", 
                   RowBox[{"d", ",", "True"}], "]"}]}], ",", 
                 RowBox[{"d", "=", 
                  RowBox[{"Append", "[", 
                   RowBox[{"d", ",", "False"}], "]"}]}]}], "]"}], ",", 
               RowBox[{
                RowBox[{"$$Art$Kr$$", "=", 
                 RowBox[{"ToExpression", "[", 
                  RowBox[{"p", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"n", "=", 
                 RowBox[{"ToExpression", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"p", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "<>", "\"\< = \>\"", "<>", 
                    RowBox[{"c", "[", 
                    RowBox[{"[", "k", "]"}], "]"}]}], ",", 
                    RowBox[{"p", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}]}], ";", 
                " ", 
                RowBox[{"ToExpression", "[", 
                 RowBox[{
                  RowBox[{"p", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "<>", "\"\< = \>\"", "<>", 
                  "\"\<$$Art$Kr$$\>\""}], "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"n", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], ",", 
                  RowBox[{"d", "=", 
                   RowBox[{"Append", "[", 
                    RowBox[{"d", ",", "True"}], "]"}]}], ",", 
                  RowBox[{"d", "=", 
                   RowBox[{"Append", "[", 
                    RowBox[{"d", ",", "False"}], "]"}]}]}], "]"}]}]}], 
              "]"}]}], "]"}]}]}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"h", "=", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Map3", "[", 
         RowBox[{"Position", ",", "d", ",", 
          RowBox[{"Cases", "[", 
           RowBox[{"d", ",", 
            RowBox[{"Except", "[", "True", "]"}]}], "]"}]}], "]"}], "]"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"h", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"ListQ", "[", 
              RowBox[{"c", "[", 
               RowBox[{"[", "#", "]"}], "]"}], "]"}], ",", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"c", "[", 
                RowBox[{"[", "#", "]"}], "]"}], ",", "1"}], "]"}], ",", 
             RowBox[{"c", "[", 
              RowBox[{"[", "#", "]"}], "]"}]}], "]"}]}], "}"}], "&"}], ",", 
        "h"}], "]"}]}], ";", " ", 
     RowBox[{"$TestArgsTypes", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "h", "]"}], "\[Equal]", "1"}], ",", 
        RowBox[{"h", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "h"}], "]"}]}], ";", 
     RowBox[{"k", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "w", "]"}]}], ",", 
       RowBox[{
        RowBox[{"ToExpression", "[", 
         RowBox[{
          RowBox[{"w", "[", 
           RowBox[{"[", "k", "]"}], "]"}], "<>", "\"\< = \>\"", "<>", 
          RowBox[{"w1", "[", 
           RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", 
     RowBox[{"Remove", "[", "\"\<$$Art$Kr$$\>\"", "]"}], ";", "$Failed"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`TestArgsTypes2`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TestArgsTypes2", "[", 
   RowBox[{
    RowBox[{"P_", "/;", 
     RowBox[{
      RowBox[{"ModuleQ", "[", "P", "]"}], "||", 
      RowBox[{"BlockQ", "[", "P", "]"}], "||", 
      RowBox[{"QFunction", "[", "P", "]"}]}]}], ",", "y__"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"ArgsTypes", "[", "P", "]"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"ToString1", ",", 
         RowBox[{"{", "y", "}"}]}], "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "y", "}"}]}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", "p"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "c", "]"}], "\[NotEqual]", 
       RowBox[{"Length", "[", "a", "]"}]}], ",", 
      "\"\<Quantities of formal and factual arguments are different\>\"", ",",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{"k", ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "c", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{
          RowBox[{"p", "=", 
           RowBox[{"a", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ";", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"d", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"p", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "===", "\"\<Arbitrary\>\""}], 
              ",", "True", ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"SymbolQ", "[", 
                 RowBox[{"p", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"ToString", "[", 
                  RowBox[{"Head", "[", 
                   RowBox[{"c", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "===", 
                 RowBox[{"p", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                RowBox[{"ToExpression", "[", 
                 RowBox[{"StringReplace", "[", 
                  RowBox[{
                   RowBox[{"p", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"\"\<[\>\"", "<>", 
                    RowBox[{"p", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "<>", "\"\<]\>\""}], 
                    "\[Rule]", 
                    RowBox[{"\"\<[\>\"", "<>", 
                    RowBox[{"b", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "<>", "\"\<]\>\""}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{"\"\< \>\"", "<>", 
                    RowBox[{"p", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "<>", "\"\< \>\""}], 
                    "\[Rule]", 
                    RowBox[{"\"\< \>\"", "<>", 
                    RowBox[{"b", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "<>", "\"\< \>\""}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{"\"\< \>\"", "<>", 
                    RowBox[{"p", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "<>", "\"\<]\>\""}], 
                    "\[Rule]", 
                    RowBox[{"\"\< \>\"", "<>", 
                    RowBox[{"b", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "<>", "\"\<]\>\""}]}]}], 
                    "}"}]}], "]"}], "]"}]}], "]"}]}], "]"}]}], "]"}]}]}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"d", ",", "False"}], "]"}], ",", 
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{"Riffle", "[", 
            RowBox[{
             RowBox[{"{", "y", "}"}], ",", "d"}], "]"}], ",", "2"}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"True", ",", 
           RowBox[{"P", "[", "y", "]"}]}], "}"}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`TrueCallQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TrueCallQ", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], ",", "y__"}], "]"}], ":=", 
  RowBox[{"Quiet", "[", 
   RowBox[{"Check", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"UnevaluatedQ", "[", 
        RowBox[{"x", ",", "y"}], "]"}], ",", "False", ",", 
       RowBox[{
        RowBox[{"x", "[", "y", "]"}], ";", "True"}]}], "]"}], ",", "False"}], 
    "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`PrevNextVar`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PrevNextVar", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"SymbolQ", "[", "x", "]"}]}], ",", 
    RowBox[{"t_", "/;", 
     RowBox[{"IntegerQ", "[", "t", "]"}]}], ",", "y___"}], "]"}], " ", ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ToString", "[", "x", "]"}]}], ",", "b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", "d", ",", "k", ",", "n"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"Characters", "[", "a", "]"}]}], ";", 
     RowBox[{"n", "=", 
      RowBox[{"Length", "[", "b", "]"}]}], ";", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "n"}], ",", 
       RowBox[{"k", "\[GreaterEqual]", "1"}], ",", 
       RowBox[{"k", "--"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"IntegerQ", "[", 
          RowBox[{"ToExpression", "[", 
           RowBox[{"b", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], ",", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"c", ",", 
           RowBox[{"b", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{"d", "=", 
           RowBox[{"StringJoin", "[", 
            RowBox[{"b", "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", "k"}], "]"}], "]"}], "]"}]}], ";", 
          RowBox[{"Break", "[", "]"}]}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"k", "=", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"c", "=", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"Reverse", "[", "c", "]"}], "]"}]}], "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"k", ",", "Null"}], "]"}], "||", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "y", "}"}], "\[Equal]", 
          RowBox[{"{", "}"}]}], "&&", 
         RowBox[{
          RowBox[{"k", "-", "t"}], "\[LessEqual]", "0"}]}]}], ",", "x", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"c", "==", "\"\<\>\""}], ",", "x", ",", 
         RowBox[{"ToExpression", "[", 
          RowBox[{"d", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"k", "+", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"{", "y", "}"}], "\[NotEqual]", 
                RowBox[{"{", "}"}]}], ",", "t", ",", 
               RowBox[{"-", "t"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
      "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ContextMfile`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContextMfile", "[", 
   RowBox[{"x_", " ", "/;", " ", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "x", "]"}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"FileExtension", "[", "x", "]"}], " ", "==", " ", 
      "\"\<m\>\""}]}]}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b", ",", " ", 
      RowBox[{"a", " ", "=", " ", 
       RowBox[{"ReadFullFile", "[", "x", "]"}]}], ",", "c"}], "}"}], ",", " ", 
    RowBox[{
     RowBox[{"b", " ", "=", " ", 
      RowBox[{"SubsString", "[", 
       RowBox[{"a", ",", " ", 
        RowBox[{"{", 
         RowBox[{"\"\<BeginPackage[\\\"\>\"", ",", " ", "\"\<\\\"]\>\""}], 
         "}"}]}], "]"}]}], ";", "  ", 
     RowBox[{"c", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"b", "\[NotEqual]", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"StringTake", "[", 
         RowBox[{"b", ",", " ", 
          RowBox[{"{", 
           RowBox[{"14", ",", " ", 
            RowBox[{"-", "2"}]}], "}"}]}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"b", "===", 
        RowBox[{"{", "}"}]}], ",", "$Failed", ",", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"StringSplit", "[", 
           RowBox[{"c", ",", "\"\<,\>\""}], "]"}], "]"}]}], ";", " ", 
        RowBox[{"c", "=", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Quiet", "[", 
            RowBox[{"ToExpression", "[", "c", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"ContextQ", "[", "#", "]"}], "&"}]}], "]"}]}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "c", "]"}], ">", "1"}], ",", "c", ",", 
          RowBox[{"c", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ContextMfile1`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContextMfile1", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"MemberQ", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<m\>\"", ",", "\"\<tr\>\""}], "}"}], ",", 
      RowBox[{"FileExtension", "[", "x", "]"}]}], "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ReadFullFile1", "[", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"FileExistsQ", "[", "x", "]"}], ",", "x", ",", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"FindFile1", "[", "x", "]"}], "}"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}]}], ",", 
      RowBox[{"b", "=", "\"\<BeginPackage[\>\""}], ",", "c", ",", "d"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"a", "===", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{
       RowBox[{"c", "=", 
        RowBox[{"StringPosition", "[", 
         RowBox[{"a", ",", "b"}], "]"}]}], ";", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"c", "\[Equal]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{
          RowBox[{"d", "=", 
           RowBox[{"SubStrToSymb", "[", 
            RowBox[{
             RowBox[{"StringTake", "[", 
              RowBox[{"a", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Flatten", "[", "c", "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "1", ",", 
             "\"\<]\>\"", ",", "1"}], "]"}]}], ";", " ", 
          RowBox[{"d", "=", 
           RowBox[{"StringReplace", "[", 
            RowBox[{
             RowBox[{"StringTake", "[", 
              RowBox[{"d", ",", 
               RowBox[{"{", 
                RowBox[{"2", ",", 
                 RowBox[{"-", "2"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\"\<{\>\"", "->", "\"\<\>\""}], ",", 
               RowBox[{"\"\<}\>\"", "->", "\"\<\>\""}]}], "}"}]}], "]"}]}], 
          ";", 
          RowBox[{"d", "=", 
           RowBox[{"Map", "[", 
            RowBox[{"ToExpression", ",", 
             RowBox[{"StrToList", "[", "d", "]"}]}], "]"}]}], ";", " ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "d", "]"}], "\[Equal]", "1"}], ",", 
            RowBox[{"d", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "d"}], "]"}]}]}], "]"}]}]}],
      "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ContextFromMx`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContextFromMx", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
     RowBox[{
      RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
      "\"\<mx\>\""}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"StringJoin", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Characters", "[", 
           RowBox[{"ReadString", "[", "x", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"SymbolQ", "[", "#", "]"}], "||", 
            RowBox[{"IntegerQ", "[", "#", "]"}], "||", 
            RowBox[{"#", "\[Equal]", "\"\<`\>\""}]}], "&"}]}], "]"}], "]"}]}],
       ",", "b", ",", 
      RowBox[{"d", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"FromCharacterCode", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"2", ",", "27"}], "]"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"StringFreeQ2", "[", 
       RowBox[{"a", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<CONT\>\"", ",", "\"\<ENDCONT\>\""}], "}"}]}], "]"}], 
      ",", "$Failed", ",", 
      RowBox[{
       RowBox[{"b", "=", 
        RowBox[{"StringCases1", "[", 
         RowBox[{"a", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<CONT\>\"", ",", "\"\<ENDCONT\>\""}], "}"}], ",", 
          "\"\<___\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"b", "\[Equal]", 
          RowBox[{"{", "}"}]}], ",", "$Failed", ",", 
         RowBox[{
          RowBox[{"StringReplace", "[", 
           RowBox[{"b", ",", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"GenRules", "[", 
                RowBox[{"d", ",", "\"\<\>\""}], "]"}], " ", ",", " ", 
               RowBox[{"\"\<ENDCONT\>\"", "->", "\"\<\>\""}], ",", 
               RowBox[{"\"\<CONT\>\"", "->", "\"\<\>\""}]}], "}"}], "]"}]}], 
           "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ContextsInFiles`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContextsInFiles", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<m\>\"", ",", "\"\<mx\>\"", ",", "\"\<cdf\>\"", ",", 
         "\"\<nb\>\""}], "}"}], ",", 
       RowBox[{"FileExtension", "[", "x", "]"}]}], "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{
         RowBox[{"ReadFullFile", "[", "x", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], ",", 
           RowBox[{"\"\<\\n\>\"", "\[Rule]", "\"\<\>\""}], ",", 
           RowBox[{"\"\<\\t\>\"", "->", "\"\<\>\""}]}], "}"}]}], "]"}]}], ",",
       "b", ",", "b1", ",", 
      RowBox[{"d", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"65", ",", "90"}], "]"}], ",", 
          RowBox[{"Range", "[", 
           RowBox[{"96", ",", "122"}], "]"}]}], "}"}], "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", "\"\<m\>\""}], 
      ",", " ", 
      RowBox[{
       RowBox[{"b", "=", 
        RowBox[{"StringCases", "[", 
         RowBox[{"a", ",", 
          RowBox[{"Shortest", "[", 
           RowBox[{
           "\"\<BeginPackage[\\\"\>\"", "~~", "__", "~~", "\"\<`\\\"]\>\""}], 
           "]"}]}], "]"}]}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"b", "===", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"b", "=", "$Failed"}], ",", 
         RowBox[{
          RowBox[{"b", "=", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"StringTake", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"{", 
                  RowBox[{"15", ",", 
                   RowBox[{"-", "3"}]}], "}"}]}], "]"}], "&"}], ",", "b"}], 
             "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"b1", "=", 
           RowBox[{"StringCases", "[", 
            RowBox[{"a", ",", " ", 
             RowBox[{"Shortest", "[", 
              RowBox[{
              "\"\<BeginPackage[\\\"\>\"", "~~", "__", "~~", 
               "\"\<`\\\"}]\>\""}], "]"}]}], "]"}]}], ";", " ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"b1", "===", 
             RowBox[{"{", "}"}]}], ",", 
            RowBox[{"b1", "=", "$Failed"}], ",", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"StringFreeQ", "[", 
                RowBox[{
                 RowBox[{"b1", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\"\<{\>\"", ",", "\"\<}\>\""}], "}"}]}], "]"}]}], 
              ",", 
              RowBox[{
               RowBox[{"b1", "=", 
                RowBox[{"StringReplace", "[", 
                 RowBox[{
                  RowBox[{"b1", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"\"\<{\>\"", "->", "\"\<\>\""}], ",", 
                    RowBox[{"\"\<}\>\"", "->", "\"\<\>\""}], ",", 
                    RowBox[{"\"\<\\\"\>\"", "->", "\"\<\>\""}]}], "}"}]}], 
                 "]"}]}], ";", 
               RowBox[{"b1", "=", 
                RowBox[{"StringSplit", "[", 
                 RowBox[{
                  RowBox[{"StringTake", "[", 
                   RowBox[{"b1", ",", 
                    RowBox[{"{", 
                    RowBox[{"14", ",", 
                    RowBox[{"-", "2"}]}], "}"}]}], "]"}], ",", "\"\<,\>\""}], 
                 "]"}]}]}], ",", 
              RowBox[{"b1", "=", "$Failed"}]}], "]"}]}], "]"}]}]}], "]"}], 
       ";", 
       RowBox[{"b", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"b", ",", "b1"}], "}"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"SetAttributes", "[", 
        RowBox[{"ContextQ", ",", "Listable"}], "]"}], ";", " ", 
       RowBox[{"b", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"b", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"DeleteDuplicates", "[", 
             RowBox[{"Flatten", "[", 
              RowBox[{"ContextQ", "[", 
               RowBox[{"{", "#", "}"}], "]"}], "]"}], "]"}], "\[Equal]", 
            RowBox[{"{", "True", "}"}]}], "&"}]}], "]"}]}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ListQ", "[", "b", "]"}], "&&", 
          RowBox[{
           RowBox[{"Length", "[", "b", "]"}], "\[Equal]", "1"}]}], ",", 
         RowBox[{"b", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "b"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", "\"\<mx\>\""}],
         ",", 
        RowBox[{"Quiet", "[", 
         RowBox[{"Check", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"b", "=", 
             RowBox[{
              RowBox[{"StringCases", "[", 
               RowBox[{"a", ",", 
                RowBox[{"Shortest", "[", 
                 RowBox[{
                 "\"\<CONT\>\"", "~~", "__", "~~", "\"\<ENDCONT\>\""}], 
                 "]"}]}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", 
            RowBox[{"b", "=", 
             RowBox[{"Flatten", "[", 
              RowBox[{"Map", "[", 
               RowBox[{"ToCharacterCode", ",", 
                RowBox[{"Characters", "[", 
                 RowBox[{"StringReplace", "[", 
                  RowBox[{"b", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\<CONT\>\"", "\[Rule]", "\"\<\>\""}], ",", 
                    RowBox[{"\"\<ENDCONT\>\"", "\[Rule]", "\"\<\>\""}]}], 
                    "}"}]}], "]"}], "]"}]}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"StringJoin", "[", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"FromCharacterCode", "[", "#", "]"}], "&"}], ",", 
               RowBox[{"Select", "[", 
                RowBox[{"b", ",", 
                 RowBox[{
                  RowBox[{"MemberQ", "[", 
                   RowBox[{"d", ",", "#"}], "]"}], "&"}]}], "]"}]}], "]"}], 
             "]"}]}], ",", "$Failed"}], "]"}], "]"}], ",", 
        RowBox[{"Quiet", "[", 
         RowBox[{"Check", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"a", "=", 
             RowBox[{
              RowBox[{"StringCases", "[", 
               RowBox[{"a", ",", 
                RowBox[{"Shortest", "[", 
                 RowBox[{
                 "\"\<BeginPackage\\\",\\\"[\\\",\\\"\\\\\\\"\\\\<\>\"", "~~",
                   "__", "~~", "\"\<`\\\\>\\\\\\\"\\\",\\\"]\\\"}]\>\""}], 
                 "]"}]}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"a", "=", 
             RowBox[{"StringReplace", "[", 
              RowBox[{"a", ",", 
               RowBox[{"\"\<BeginPackage\>\"", "\[Rule]", "\"\<\>\""}]}], 
              "]"}]}], ";", " ", 
            RowBox[{"b", "=", 
             RowBox[{"Flatten", "[", 
              RowBox[{"Map", "[", 
               RowBox[{"ToCharacterCode", ",", 
                RowBox[{"Characters", "[", "a", "]"}]}], "]"}], "]"}]}], ";", 
            " ", 
            RowBox[{"StringJoin", "[", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"FromCharacterCode", "[", "#", "]"}], "&"}], ",", 
               RowBox[{"Select", "[", 
                RowBox[{"b", ",", 
                 RowBox[{
                  RowBox[{"MemberQ", "[", 
                   RowBox[{"d", ",", "#"}], "]"}], "&"}]}], "]"}]}], "]"}], 
             "]"}]}], ",", "$Failed"}], "]"}], "]"}]}], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ContextInMfile`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContextInMfile", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
     RowBox[{
      RowBox[{"FileExtension", "[", "x", "]"}], "==", "\"\<m\>\""}]}]}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{
         RowBox[{"ReadFullFile", "[", "x", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], ",", 
           RowBox[{"\"\<\\n\>\"", "\[Rule]", "\"\<\>\""}], ",", 
           RowBox[{"\"\<\\t\>\"", "->", "\"\<\>\""}], ",", 
           RowBox[{"\"\<\\r\>\"", "->", "\"\<\>\""}]}], "}"}]}], "]"}]}], ",",
       "b", ",", "c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"65", ",", "90"}], "]"}], ",", 
          RowBox[{"Range", "[", 
           RowBox[{"96", ",", "123"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"44", ",", "125"}], "}"}]}], "}"}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"SubsString", "[", 
           RowBox[{"a", ",", 
            RowBox[{"{", 
             RowBox[{"#", ",", "\"\<\\\"]\>\""}], "}"}]}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Begin[\\\"\>\"", ",", "\"\<Package[\\\"\>\"", ",", 
           "\"\<Get[\\\"\>\"", ",", "\"\<Needs[\\\"\>\""}], "}"}]}], "]"}], 
       "]"}]}], ";", " ", 
     RowBox[{"c", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"SubsString", "[", 
           RowBox[{"a", ",", 
            RowBox[{"{", 
             RowBox[{"#", ",", "\"\<\\\"}]\>\""}], "}"}]}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Begin[\\\"\>\"", ",", "\"\<Package[\\\"\>\"", ",", 
           "\"\<Get[\\\"\>\"", ",", "\"\<Needs[\\\"\>\""}], "}"}]}], "]"}], 
       "]"}]}], ";", 
     RowBox[{"b", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringReplace", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<\\\"\>\"", "->", "\"\<\>\""}], ",", 
             RowBox[{"\"\<{\>\"", "->", "\"\<\>\""}], ",", 
             RowBox[{"\"\<}\>\"", "->", "\"\<\>\""}]}], "}"}]}], "]"}], "&"}],
         ",", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"StringReplace", "[", 
            RowBox[{
             RowBox[{"StringTake", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"-", "2"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\"\<Begin[\\\"\>\"", "->", "\"\<\>\""}], ",", 
               RowBox[{"\"\<Get[\\\"\>\"", "->", "\"\<\>\""}], ",", 
               RowBox[{"\"\<Needs[\\\"\>\"", "->", "\"\<\>\""}], ",", 
               RowBox[{"\"\<Package[\\\"\>\"", "->", "\"\<\>\""}]}], "}"}], 
             ",", "1"}], "]"}], "&"}], ",", 
          RowBox[{"Join", "[", 
           RowBox[{"b", ",", "c"}], "]"}]}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"DeleteDuplicates", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"StringSplit", "[", 
           RowBox[{"#", ",", "\"\<,\>\""}], "]"}], "&"}], ",", 
         RowBox[{"Select", "[", 
          RowBox[{"b", ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Complement", "[", 
               RowBox[{
                RowBox[{"DeleteDuplicates", "[", 
                 RowBox[{"ToCharacterCode", "[", "#", "]"}], "]"}], ",", 
                "d"}], "]"}], "\[Equal]", 
              RowBox[{"{", "}"}]}], "&&", 
             RowBox[{"!", 
              RowBox[{"SuffPref", "[", 
               RowBox[{"#", ",", "\"\<`\>\"", ",", "1"}], "]"}]}]}], "&"}]}], 
          "]"}]}], "]"}], "]"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ContextFromMx1`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContextFromMx1", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
     RowBox[{
      RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
      "\"\<mx\>\""}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"StringJoin", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Characters", "[", 
           RowBox[{"ReadString", "[", "x", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"SymbolQ", "[", "#", "]"}], "||", 
            RowBox[{"IntegerQ", "[", "#", "]"}], "||", 
            RowBox[{"#", "==", "\"\<`\>\""}]}], "&"}]}], "]"}], "]"}]}], ",", 
      "b", ",", 
      RowBox[{"d", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"FromCharacterCode", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"2", ",", "27"}], "]"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"StringFreeQ2", "[", 
        RowBox[{"a", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<CONT\>\"", ",", "\"\<ENDCONT\>\""}], "}"}]}], "]"}], "||", 
       RowBox[{
        RowBox[{"StringCases1", "[", 
         RowBox[{"a", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<CONT\>\"", ",", "\"\<ENDCONT\>\""}], "}"}], ",", 
          "\"\<___\>\""}], "]"}], "\[Equal]", 
        RowBox[{"{", "}"}]}]}], ",", "$Failed", ",", 
      RowBox[{
       RowBox[{"b", "=", 
        RowBox[{"StringPosition", "[", 
         RowBox[{"a", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<CONT\>\"", ",", "\"\<ENDCONT\>\""}], "}"}]}], "]"}]}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"b", "\[Equal]", 
          RowBox[{"{", "}"}]}], ",", "$Failed", ",", 
         RowBox[{"StringReplace", "[", 
          RowBox[{
           RowBox[{"StringTake", "[", 
            RowBox[{"a", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"b", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"b", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"GenRules", "[", 
               RowBox[{"d", ",", "\"\<\>\""}], "]"}], " ", ",", " ", 
              RowBox[{"\"\<ENDCONT\>\"", "->", "\"\<\>\""}], ",", 
              RowBox[{"\"\<CONT\>\"", "->", "\"\<\>\""}]}], "}"}], "]"}]}], 
          "]"}]}], "]"}]}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ContextNBfile`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContextNBfile", "[", 
   RowBox[{"x_", " ", "/;", " ", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "x", "]"}], " ", "&&", " ", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<cdf\>\"", ",", "\"\<nb\>\""}], "}"}], ",", 
       RowBox[{"FileExtension", "[", "x", "]"}]}], "]"}]}]}], "]"}], " ", ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", " ", "=", " ", "\"\<\>\""}], "}"}], ",", " ", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"SameQ", "[", 
         RowBox[{"a", " ", ",", "EndOfFile"}], "]"}]}], ",", " ", 
       RowBox[{
        RowBox[{"a", " ", "=", " ", "\n", 
         RowBox[{"Read", "[", 
          RowBox[{"x", ",", " ", "String"}], "]"}]}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"StringFreeQ", "[", 
            RowBox[{"a", ",", " ", "\"\<BeginPackage\>\""}], "]"}]}], ",", 
          " ", "\n", 
          RowBox[{
           RowBox[{"a", " ", "=", " ", 
            RowBox[{"Quiet", "[", 
             RowBox[{"ToExpression", "[", 
              RowBox[{"ToExpression", "[", 
               RowBox[{
                RowBox[{"StringSplit", "[", 
                 RowBox[{"a", ",", " ", "\"\<,\>\""}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}], "]"}]}], ";", 
           " ", 
           RowBox[{"Break", "[", "]"}]}]}], "]"}], ";", " ", 
        RowBox[{"Continue", "[", "]"}]}]}], "]"}], ";", 
     RowBox[{"Close", "[", "x", "]"}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"!", 
         RowBox[{"ContextQ", "[", "a", "]"}]}], " ", "||", " ", 
        RowBox[{"SameQ", "[", 
         RowBox[{"a", " ", ",", "EndOfFile"}], "]"}]}], ",", " ", "$Failed", 
       ",", " ", "a"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ContextMXfile`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContextMXfile", "[", 
   RowBox[{"x_", " ", "/;", " ", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "x", "]"}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"FileExtension", "[", "x", "]"}], " ", "==", " ", 
      "\"\<mx\>\""}]}]}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", " ", ",", " ", 
      RowBox[{"b", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Map7", "[", 
         RowBox[{"Range", ",", " ", "Sequences", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"48", ",", " ", "57"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"65", ",", " ", "90"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"96", ",", " ", "122"}], "}"}]}], "}"}]}], "]"}], 
        "]"}]}], ",", " ", "c"}], "}"}], ",", 
    RowBox[{
     RowBox[{"a", "=", " ", 
      RowBox[{"BinaryReadList", "[", "x", "]"}]}], ";", 
     RowBox[{"a", "=", 
      RowBox[{"a", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "a", "]"}], "\[GreaterEqual]", "500"}], 
           ",", "500", ",", 
           RowBox[{"Length", "[", "a", "]"}]}], "]"}]}], "]"}], "]"}]}], ";", 
     " ", "\n", "     ", 
     RowBox[{"c", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Map3", "[", 
        RowBox[{"PosSubList", ",", " ", "a", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"67", ",", " ", "79", ",", " ", "78", ",", " ", "84"}], 
            "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{
            "69", ",", " ", "78", ",", " ", "68", ",", " ", "67", ",", " ", 
             "79", ",", " ", "78", ",", " ", "84"}], "}"}]}], "}"}]}], "]"}], 
       "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "c", "]"}], " ", "<", " ", "5"}], ",", " ", 
       "$Failed", ",", " ", 
       RowBox[{"FromCharacterCode", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"a", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{
              RowBox[{"c", "[", 
               RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", "1"}], " ", ";;",
              " ", 
             RowBox[{
              RowBox[{"c", "[", 
               RowBox[{"[", "5", "]"}], "]"}], " ", "-", " ", "1"}]}], "]"}], 
           "]"}], ",", " ", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"b", ",", " ", "#1"}], "]"}], " ", "&"}]}], " ", "]"}], 
        "]"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ContextInMxFile`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContextInMxFile", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
     RowBox[{
      RowBox[{"FileExtension", "[", "x", "]"}], "==", "\"\<mx\>\""}]}]}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{
         RowBox[{"ReadFullFile", "[", "x", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}], ",", 
           RowBox[{"\"\<\\n\>\"", "\[Rule]", "\"\<\>\""}], ",", 
           RowBox[{"\"\<\\t\>\"", "->", "\"\<\>\""}], ",", 
           RowBox[{"\"\<\\r\>\"", "->", "\"\<\>\""}]}], "}"}]}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"65", ",", "90"}], "]"}], ",", 
          RowBox[{"Range", "[", 
           RowBox[{"96", ",", "122"}], "]"}]}], "}"}], "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"StringCount", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"SubsString", "[", 
           RowBox[{"a", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<Mathematica\>\"", ",", "\"\<ENDCONT\>\""}], "}"}]}],
            "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<CONT\>\""}], "]"}], "==", 
       "1"}], ",", "$Failed", ",", "\[IndentingNewLine]", 
      RowBox[{"FromCharacterCode", "[", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"ToCharacterCode", "[", 
          RowBox[{
           RowBox[{"Sort", "[", 
            RowBox[{"DeleteDuplicates", "[", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"StringReplace", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"\"\<ENDCONT\>\"", "->", "\"\<\>\""}], ",", 
                    RowBox[{"\"\<CONT\>\"", "->", "\"\<\>\""}]}], "}"}]}], 
                 "]"}], "&"}], ",", 
               RowBox[{"SubsString", "[", 
                RowBox[{"a", ",", 
                 RowBox[{"{", 
                  RowBox[{"\"\<CONT\>\"", ",", "\"\<ENDCONT\>\""}], "}"}]}], 
                "]"}]}], "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"b", ",", "#"}], "]"}], "&"}]}], "]"}], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ContextFromFile`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContextFromFile", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Quiet", "[", 
      RowBox[{"FileExistsQ", "[", "x", "]"}], " ", "]"}], "&&", " ", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<cdf\>\"", ",", " ", "\"\<m\>\"", ",", " ", "\"\<mx\>\"", ",", 
         " ", "\"\<nb\>\""}], "}"}], ",", " ", 
       RowBox[{"FileExtension", "[", "x", "]"}]}], "]"}]}], ",", 
    RowBox[{"Quiet", "[", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"\"\<Context\>\"", ",", " ", 
        RowBox[{"ToUpperCase", "[", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"FileExtension", "[", "x", "]"}], " ", "==", " ", 
            "\"\<cdf\>\""}], ",", " ", "\"\<nb\>\"", ",", " ", 
           RowBox[{"FileExtension", "[", "x", "]"}]}], "]"}], "]"}], ",", 
        " ", "\"\<file[\>\"", ",", " ", 
        RowBox[{"ToString1", "[", "x", "]"}], ",", " ", "\n", "      ", 
        "\"\<]\>\""}], "]"}], "]"}], "]"}], ",", "$Failed"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ToContextPath`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ToContextPath", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
     RowBox[{
      RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", "\"\<m\>\""}]}]}],
    "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ReadFullFile", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", "\"\<BeginPackage[\>\""}], ",", "c"}], "}"}], ",", 
    RowBox[{
     RowBox[{"c", "=", 
      RowBox[{"StrSymbParity", "[", 
       RowBox[{"a", ",", "b", ",", "\"\<[\>\"", ",", "\"\<]\>\""}], "]"}]}], 
     ";", 
     RowBox[{"c", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"StringFreeQ", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{"\"\<`\\\"]\>\"", ",", "\"\<`\\\"}]\>\""}], "}"}]}], 
             "]"}]}], ",", 
           RowBox[{"StringTake", "[", 
            RowBox[{"#", ",", 
             RowBox[{"{", 
              RowBox[{"14", ",", 
               RowBox[{"-", "2"}]}], "}"}]}], "]"}]}], "]"}], "&"}], ",", 
        "c"}], "]"}]}], ";", " ", 
     RowBox[{"c", "=", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"StringSplit", "[", 
            RowBox[{"#", ",", "\"\<,\>\""}], "]"}], "&"}], ",", "c"}], "]"}], 
        "]"}], "]"}]}], ";", 
     RowBox[{"c", "=", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"ListQ", "[", "#", "]"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "#"}], "]"}], "&"}], ",", 
         "c"}], "]"}], "]"}]}], ";", " ", 
     RowBox[{"$ContextPath", "=", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Join", "[", 
        RowBox[{"$ContextPath", ",", "c"}], "]"}], "]"}]}], ";", " ", 
     "$ContextPath"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SymbolsContext`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SymbolsContext", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ContextQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Quiet", "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"StringReplace", "[", 
         RowBox[{"#", ",", 
          RowBox[{"x", "->", "\"\<\>\""}]}], "]"}], "&"}], ",", 
       RowBox[{"Names", "[", 
        RowBox[{"x", "<>", "\"\<*\>\""}], "]"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"ToString", "[", 
         RowBox[{"Definition", "[", "#", "]"}], "]"}], "\[NotEqual]", 
        "\"\<Null\>\""}], "&&", 
       RowBox[{
        RowBox[{"Attributes", "[", "#", "]"}], "\[NotEqual]", 
        RowBox[{"{", "Temporary", "}"}]}]}], "&"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DefFromPackage`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DefFromPackage", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"SymbolQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Context", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", "\"\<\>\""}], ",", 
      RowBox[{"c", "=", "\"\<\>\""}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"ToString", "[", "x", "]"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", "h", ",", "p"}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<Global`\>\"", ",", "\"\<System`\>\""}], "}"}], ",", 
         "a"}], "]"}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"Attributes", "[", "x", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"h", "=", 
         RowBox[{"a", "<>", "d"}]}], ";", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"\"\<Save[\>\"", "<>", 
          RowBox[{"ToString1", "[", "d", "]"}], "<>", "\"\<,\>\"", "<>", 
          RowBox[{"ToString1", "[", "h", "]"}], "<>", "\"\<]\>\""}], 
         "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "<", "Infinity"}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"Read", "[", 
          RowBox[{"d", ",", "String"}], "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"c", "===", "\"\< \>\""}], ",", 
          RowBox[{"Break", "[", "]"}], ",", 
          RowBox[{"b", "=", 
           RowBox[{"b", "<>", "c"}]}]}], "]"}]}]}], "]"}], ";", " ", 
     RowBox[{"p", "=", 
      RowBox[{"StringReplace", "[", 
       RowBox[{
        RowBox[{"RedSymbStr", "[", 
         RowBox[{"b", ",", "\"\< \>\"", ",", "\"\< \>\""}], "]"}], ",", 
        RowBox[{
         RowBox[{"h", "<>", "\"\<`\>\""}], "\[Rule]", "\"\<\>\""}]}], "]"}]}],
      ";", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"c", ",", "k", ",", "b"}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{"\"\<\>\"", ",", "1", ",", "\"\<\>\""}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "<", "Infinity"}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"Read", "[", 
          RowBox[{"d", ",", "String"}], "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"c", "===", "\"\< \>\""}], "||", 
           RowBox[{"c", "===", "EndOfFile"}]}], ",", 
          RowBox[{"Break", "[", "]"}], ",", 
          RowBox[{"b", "=", 
           RowBox[{"b", "<>", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"StringTake", "[", 
                RowBox[{"c", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", 
                   RowBox[{"-", "1"}]}], "}"}]}], "]"}], "\[Equal]", 
               "\"\<\\\\\>\""}], ",", 
              RowBox[{"StringTake", "[", 
               RowBox[{"c", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", 
                  RowBox[{"-", "2"}]}], "}"}]}], "]"}], ",", "c"}], 
             "]"}]}]}]}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"DeleteFile", "[", 
      RowBox[{"Close", "[", "d", "]"}], "]"}], ";", 
     RowBox[{"{", 
      RowBox[{"p", ",", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"b", ",", 
         RowBox[{
          RowBox[{"\"\< /: \>\"", "<>", "d"}], "\[Rule]", "\"\<\>\""}]}], 
        "]"}], ",", 
       RowBox[{"Attributes", "[", "x", "]"}]}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DefFromM`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DefFromM", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
       "\"\<m\>\""}]}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"SymbolQ", "[", "y", "]"}]}], ",", "z___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ReadList", "[", 
        RowBox[{"x", ",", "String"}], "]"}]}], ",", "b", ",", "c", ",", "d"}],
      "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"b", ",", "c"}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<(*Begin[\\\"`\>\"", "<>", 
         RowBox[{"ToString", "[", "y", "]"}], "<>", "\"\<`\\\"]*)\>\""}], 
        ",", "\"\<(*End[]*)\>\""}], "}"}]}], ";", 
     RowBox[{"d", "=", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"StringTake", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", 
             RowBox[{"3", ",", 
              RowBox[{"-", "3"}]}], "}"}]}], "]"}], "&"}], ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{"SubListsMin", "[", 
           RowBox[{"a", ",", "b", ",", "c", ",", "\"\<r\>\"", ",", "78"}], 
           "]"}], "]"}]}], "]"}], "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "z", "}"}], "\[NotEqual]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{
        RowBox[{"ToExpression", "[", "d", "]"}], ";", "d"}], ",", "d"}], 
      "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`TestProcCalls`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TestProcCalls", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"ListQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"d", ",", "p", ",", 
      RowBox[{"a", "=", 
       RowBox[{"Args", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", "r", ",", 
      RowBox[{"c", "=", "\"\<_ /; \>\""}], ",", 
      RowBox[{"k", "=", "1"}], ",", "v"}], "}"}], ",", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"ToString1", ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"NestListQ", "[", "a", "]"}], ",", 
          RowBox[{"a", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "a"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "a", "]"}], "\[NotEqual]", 
         RowBox[{"Length", "[", "y", "]"}]}], "||", 
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"!", 
              RowBox[{"StringFreeQ", "[", 
               RowBox[{"#", ",", "\"\<__\>\""}], "]"}]}], "&"}], ",", "a"}], 
           "]"}], ",", "True"}], "]"}]}], ",", "$Failed", ",", 
       RowBox[{
        RowBox[{"v", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"NestListQ", "[", 
            RowBox[{"v", "=", 
             RowBox[{"Args", "[", 
              RowBox[{"x", ",", "90"}], "]"}]}], "]"}], ",", 
           RowBox[{"v", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "v"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{"k", ",", 
          RowBox[{"k", "\[LessEqual]", 
           RowBox[{"Length", "[", "a", "]"}]}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{
           RowBox[{"p", "=", 
            RowBox[{"a", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], ";", " ", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"b", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"StringTake", "[", 
                 RowBox[{"p", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", " ", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], "\[Equal]", 
                "\"\<_\>\""}], ",", "True", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"!", 
                  RowBox[{"StringFreeQ", "[", 
                   RowBox[{"p", ",", "c"}], "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"d", "=", 
                   RowBox[{"StringSplit", "[", 
                    RowBox[{"p", ",", "c"}], "]"}]}], ";", 
                  RowBox[{"r", "=", 
                   RowBox[{"ToExpression", "[", 
                    RowBox[{"d", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"d", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "<>", "\"\<=\>\"", "<>", 
                    RowBox[{"ToString1", "[", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "]"}]}], ",", 
                    RowBox[{"d", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{
                    RowBox[{"d", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "<>", "\"\<=\>\"", "<>", 
                    RowBox[{"ToString", "[", "r", "]"}]}], "]"}]}], "}"}], 
                   "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"d", "=", 
                   RowBox[{"StringSplit", "[", 
                    RowBox[{"p", ",", "\"\<_\>\""}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"ToString", "[", 
                    RowBox[{"Head", "[", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "\[Equal]", 
                   RowBox[{"d", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}]}], "]"}]}], "]"}]}], 
            "]"}]}]}], "]"}], ";", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"k", ",", "d"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"Partition", "[", 
            RowBox[{
             RowBox[{"Riffle", "[", 
              RowBox[{"v", ",", "b"}], "]"}], ",", "2"}], "]"}]}], "}"}]}], 
        ";", " ", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"k", "\[LessEqual]", 
           RowBox[{"Length", "[", "d", "]"}]}], ",", 
          RowBox[{
           RowBox[{"PrependTo", "[", 
            RowBox[{
             RowBox[{"d", "[", 
              RowBox[{"[", "k", "]"}], "]"}], ",", "k"}], "]"}], ";", 
           RowBox[{"k", "++"}]}]}], "]"}], ";", "d"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ClearAllAttributes`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAllAttributes", "[", "x__", "]"}], ":=", 
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Quiet", "[", 
       RowBox[{
        RowBox[{"ClearAttributes", "[", 
         RowBox[{"#", ",", 
          RowBox[{"Attributes", "[", "#", "]"}]}], "]"}], ";"}], "]"}], "&"}],
      ",", 
     RowBox[{"{", "x", "}"}]}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ProcFuncCS`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ProcFuncCS", "[", "]"}], ":=", 
  RowBox[{"Quiet", "[", 
   RowBox[{"Map3", "[", 
    RowBox[{"Select", ",", 
     RowBox[{"Names", "[", "\"\<`*\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"BlockQ", "[", "#", "]"}], "&"}], ",", 
       RowBox[{
        RowBox[{"FunctionQ", "[", "#", "]"}], "&"}], ",", 
       RowBox[{
        RowBox[{"ModuleQ", "[", 
         RowBox[{"Symbol", "[", "#", "]"}], "]"}], "&"}]}], "}"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`FindFile1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FindFile1", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", "y", "}"}], "\[NotEqual]", 
           RowBox[{"{", "}"}]}], "&&", 
          RowBox[{"PathToFileQ", "[", "y", "]"}]}], ",", 
         RowBox[{"{", "y", "}"}], ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "<>", "\"\<:\\\\\>\""}], "&"}], ",", 
           RowBox[{"Adrive", "[", "]"}]}], "]"}]}], "]"}]}], ",", "c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"\"\<\\\\\>\"", "<>", 
        RowBox[{"ToLowerCase", "[", "x", "]"}]}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"Map", "[", 
          RowBox[{"ToLowerCase", ",", 
           RowBox[{"Quiet", "[", 
            RowBox[{"FileNames", "[", 
             RowBox[{"\"\<*\>\"", ",", 
              RowBox[{"a", "[", 
               RowBox[{"[", "k", "]"}], "]"}], ",", "Infinity"}], "]"}], 
            "]"}]}], "]"}]}], ";", " ", 
        RowBox[{"d", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"d", ",", 
           RowBox[{"Select", "[", 
            RowBox[{"c", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"SuffPref", "[", 
                RowBox[{"#", ",", "b", ",", "2"}], "]"}], "&&", 
               RowBox[{"FileExistsQ", "[", "#", "]"}]}], "&"}]}], "]"}]}], 
          "]"}]}]}]}], "]"}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "d", "]"}], "\[Equal]", "1"}], ",", 
       RowBox[{"d", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "d"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`FindFile2`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FindFile2", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"DirectoryQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"StringQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"FileNames", "[", 
     RowBox[{"\"\<*.*\>\"", ",", "x", ",", "Infinity"}], "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"StandPath", "[", 
       RowBox[{
        RowBox[{"FileNameSplit", "[", "#", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}], "]"}], "===", 
      RowBox[{"StandPath", "[", "y", "]"}]}], "&"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`NamesMPackage`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NamesMPackage", "[", 
   RowBox[{"f_", "/;", 
    RowBox[{
     RowBox[{"IsFile", "[", "f", "]"}], "&&", 
     RowBox[{
      RowBox[{"FileExtension", "[", "f", "]"}], "\[Equal]", "\"\<m\>\""}], "&&", 
     RowBox[{"!", 
      RowBox[{"SameQ", "[", 
       RowBox[{
        RowBox[{"ContextFromFile", "[", "f", "]"}], ",", "$Failed"}], 
       "]"}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"c", ",", "d", ",", 
      RowBox[{"Res", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"s", "=", "\"\<::usage=\\\"\>\""}], ",", 
      RowBox[{"a", "=", 
       RowBox[{"OpenRead", "[", "f", "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Label", "[", "c", "]"}], ";", 
     RowBox[{"d", "=", 
      RowBox[{"Read", "[", 
       RowBox[{"a", ",", "String"}], "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"SuffPref", "[", 
         RowBox[{"d", ",", "\"\<(*Begin[\\\"`\>\"", ",", "1"}], "]"}], "||", 
        RowBox[{"d", "===", "EndOfFile"}]}], ",", 
       RowBox[{
        RowBox[{"Close", "[", "a", "]"}], ";", " ", 
        RowBox[{"Return", "[", 
         RowBox[{"Sort", "[", 
          RowBox[{"DeleteDuplicates", "[", "Res", "]"}], "]"}], "]"}]}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"SuffPref", "[", 
           RowBox[{"d", ",", "\"\<(*\>\"", ",", "1"}], "]"}], "&&", 
          RowBox[{"!", 
           RowBox[{"StringFreeQ", "[", 
            RowBox[{"d", ",", "s"}], "]"}]}]}], ",", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"Res", ",", 
            RowBox[{"StringTake", "[", 
             RowBox[{"d", ",", 
              RowBox[{"{", 
               RowBox[{"3", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Flatten", "[", 
                   RowBox[{"StringPosition", "[", 
                    RowBox[{"d", ",", "s"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
             "]"}]}], "]"}], ";", " ", 
          RowBox[{"Goto", "[", "c", "]"}]}], ",", 
         RowBox[{"Goto", "[", "c", "]"}]}], "]"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`PackageMxCont`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PackageMxCont", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
       "\"\<mx\>\""}]}]}], ",", "y___"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"IsPackageQ", "[", "x", "]"}], "===", "$Failed"}], ",", 
      "$Failed", ",", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{"ContextsInFiles", "[", "x", "]"}]}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"a", "===", "$Failed"}], ",", "$Failed", ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{"$Packages", ",", "a"}], "]"}], ",", 
            RowBox[{"d", "=", "74"}], ",", 
            RowBox[{"d", "=", "69"}]}], "]"}], ";", " ", 
          RowBox[{"c", "=", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"StringFreeQ", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"AladjevProcedures`OSplatform", "[", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\< 7 \>\""}], "]"}], 
             ",", 
             RowBox[{"AladjevProcedures`ContMxFile", "[", 
              RowBox[{"x", ",", "90"}], "]"}], ",", 
             RowBox[{"AladjevProcedures`ContMxW7", "[", "x", "]"}]}], "]"}]}],
           ";", " ", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"c", "\[Equal]", 
              RowBox[{"{", "}"}]}], "||", 
             RowBox[{
              RowBox[{"c", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
              RowBox[{"{", "}"}]}]}], ",", 
            RowBox[{"b", "=", 
             RowBox[{"{", "}"}]}], ",", 
            RowBox[{"b", "=", "a"}]}], "]"}], ";", " ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"{", "y", "}"}], "\[NotEqual]", 
              RowBox[{"{", "}"}]}], "&&", 
             RowBox[{"!", 
              RowBox[{"AladjevProcedures`HowAct", "[", "y", "]"}]}], "&&", 
             RowBox[{"!", 
              RowBox[{"SameQ", "[", 
               RowBox[{"a", ",", 
                RowBox[{"{", "}"}]}], "]"}]}]}], ",", 
            RowBox[{"y", "=", "c"}], ",", "Null"}], "]"}], ";", "  ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"d", "==", "69"}], ",", 
            RowBox[{"AladjevProcedures`RemovePackage", "[", "a", "]"}], ",", 
            "Null"}], "]"}], ";", " ", "b"}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`CurrentPackageQ`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CurrentPackageQ", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ContextQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"MemberQ", "[", 
   RowBox[{"$Packages", ",", "x"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ReplaceAll1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReplaceAll1", "[", 
   RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"HowAct", "[", "y", "]"}]}], ",", 
      RowBox[{"x", "/.", 
       RowBox[{"y", "->", "z"}]}], ",", 
      RowBox[{
       RowBox[{"c", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Plus", ",", "Times", ",", "Power"}], "}"}], ",", 
            RowBox[{"Head", "[", "z", "]"}]}], "]"}], ",", 
          RowBox[{"\"\<(\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"InputForm", "[", "z", "]"}], "]"}], "<>", "\"\<)\>\""}], 
          ",", 
          RowBox[{"ToString", "[", "z", "]"}]}], "]"}]}], ";", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "b"}], "}"}], "=", 
        RowBox[{"Map", "[", 
         RowBox[{"ToString", ",", 
          RowBox[{"Map", "[", 
           RowBox[{"InputForm", ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], "]"}]}], ";", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"StringLength", "[", "b", "]"}], "\[Equal]", "1"}], ",", 
         RowBox[{"ReplaceAll", "[", 
          RowBox[{"x", ",", 
           RowBox[{"y", "->", "z"}]}], "]"}], ",", 
         RowBox[{"ToExpression", "[", 
          RowBox[{"StringReplace", "[", 
           RowBox[{"a", ",", 
            RowBox[{"b", "->", "c"}]}], "]"}], "]"}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ReplaceAll2`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReplaceAll2", "[", 
   RowBox[{"x_", ",", 
    RowBox[{"r_", "/;", 
     RowBox[{
      RowBox[{"RuleQ", "[", "r", "]"}], "||", 
      RowBox[{"ListRulesQ", "[", "r", "]"}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "x"}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"RuleQ", "[", "r", "]"}], ",", 
      RowBox[{"Replace4", "[", 
       RowBox[{"x", ",", "r"}], "]"}], ",", 
      RowBox[{
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "r", "]"}]}], ",", 
         RowBox[{
          RowBox[{"a", "=", 
           RowBox[{"Replace4", "[", 
            RowBox[{"a", ",", 
             RowBox[{"r", "[", 
              RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], ";", 
          RowBox[{"k", "++"}]}]}], "]"}], ";", "a"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Replace1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Replace1", "[", 
   RowBox[{"x_", ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{
       RowBox[{"Head", "[", "y", "]"}], "\[Equal]", "Rule"}], "||", 
      RowBox[{
       RowBox[{"ListQ", "[", "y", "]"}], "&&", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Map", "[", 
          RowBox[{"Head", ",", "y"}], "]"}], "]"}], "\[Equal]", 
        RowBox[{"{", "Rule", "}"}]}]}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{
        RowBox[{"x", "//", "FullForm"}], "//", "ToString"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"UnDefVars", "[", "x", "]"}]}], ",", "c", ",", 
      RowBox[{"h", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"ToStringRule", "[", 
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", "y", "}"}], "]"}], "]"}], "]"}]}], ",", "p", ",", "l", 
      ",", "r", ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"p", "=", 
      RowBox[{"Map14", "[", 
       RowBox[{"RhsLhs", ",", "d", ",", "\"\<Lhs\>\""}], "]"}]}], ";", 
     RowBox[{"c", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"p", ",", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{"ToString", ",", "b"}], "]"}], ",", "#"}], "]"}]}], 
         "&"}]}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"c", "\[NotEqual]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Rules \>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"Select", "[", 
            RowBox[{"d", ",", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{"c", ",", 
                RowBox[{"RhsLhs", "[", 
                 RowBox[{"#", ",", "\"\<Lhs\>\""}], "]"}]}], "]"}], "&"}]}], 
            "]"}], "]"}], "]"}], "<>", "\"\< are vacuous\>\""}], "]"}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "d", "]"}]}], ",", 
       RowBox[{
        RowBox[{"l", "=", 
         RowBox[{"RhsLhs", "[", 
          RowBox[{
           RowBox[{"d", "[", 
            RowBox[{"[", "k", "]"}], "]"}], ",", "\"\<Lhs\>\""}], "]"}]}], 
        ";", 
        RowBox[{"r", "=", 
         RowBox[{"RhsLhs", "[", 
          RowBox[{
           RowBox[{"d", "[", 
            RowBox[{"[", "k", "]"}], "]"}], ",", "\"\<Rhs\>\""}], "]"}]}], 
        ";", 
        RowBox[{"h", "=", 
         RowBox[{"Append", "[", 
          RowBox[{"h", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"\"\<[\>\"", "<>", "l"}], "\[Rule]", 
              RowBox[{"\"\<[\>\"", "<>", "r"}]}], ",", 
             RowBox[{
              RowBox[{"\"\< \>\"", "<>", "l"}], "\[Rule]", 
              RowBox[{"\"\< \>\"", "<>", "r"}]}], ",", 
             RowBox[{
              RowBox[{"l", "<>", "\"\<]\>\""}], "\[Rule]", 
              RowBox[{"r", "<>", "\"\<]\>\""}]}]}], "}"}]}], "]"}]}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"Simplify", "[", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"a", ",", 
         RowBox[{"Flatten", "[", "h", "]"}]}], "]"}], "]"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Replace2`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Replace2", "[", 
   RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Map7", "[", 
        RowBox[{"ToString", ",", "FullForm", ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ",", "b"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"SetAttributes", "[", 
      RowBox[{"ToString1", ",", "Listable"}], "]"}], ";", 
     RowBox[{"b", "=", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"StringReplace", "[", 
        RowBox[{
         RowBox[{"a", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"a", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "\[Rule]", 
          RowBox[{"a", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"StringFreeQ", "[", 
          RowBox[{
           RowBox[{"ToString1", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", "b", "}"}], "]"}], "]"}], ",", "\"\<\\\"\>\""}], 
          "]"}], "]"}], "\[Equal]", 
        RowBox[{"{", "True", "}"}]}], ",", 
       RowBox[{
        RowBox[{"ClearAttributes", "[", 
         RowBox[{"ToString1", ",", "Listable"}], "]"}], ";", "b"}], ",", 
       RowBox[{
        RowBox[{"ClearAttributes", "[", 
         RowBox[{"ToString1", ",", "Listable"}], "]"}], ";", "$Failed"}]}], 
      "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Replace3`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Replace3", "[", 
   RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", "y", "}"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", "z", "}"}], "]"}]}], ",", "c", ",", 
      RowBox[{"t", "=", "x"}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"c", "=", 
      RowBox[{"Min", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"Length", ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b"}], "}"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"c", "<", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Subexpressions \>\"", "<>", 
         RowBox[{"ToString1", "[", 
          RowBox[{"a", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"c", "+", "1"}], ";;", 
             RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], "<>", 
         "\"\< were not replaced\>\""}], "]"}]}], "]"}], ";", "  ", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", "c"}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{"t", "=", 
        RowBox[{"Subs", "[", 
         RowBox[{"t", ",", 
          RowBox[{"a", "[", 
           RowBox[{"[", "k", "]"}], "]"}], ",", 
          RowBox[{"b", "[", 
           RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}]}], "]"}], ";", " ", 
     "t"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Replace4`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Replace4", "[", 
   RowBox[{"x_", ",", 
    RowBox[{"r_", "/;", 
     RowBox[{"RuleQ", "[", "r", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", "h"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ToString", "[", 
         RowBox[{"x", "//", "InputForm"}], "]"}], ",", 
        RowBox[{"Map", "[", 
         RowBox[{"ToString", ",", 
          RowBox[{"Map", "[", 
           RowBox[{"InputForm", ",", "r"}], "]"}]}], "]"}]}], "}"}]}], ";", 
     RowBox[{"c", "=", 
      RowBox[{"StringPosition", "[", 
       RowBox[{"a", ",", 
        RowBox[{"Part", "[", 
         RowBox[{"b", ",", "1"}], "]"}]}], "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"c", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", "x", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", 
            RowBox[{"Part", "[", 
             RowBox[{"r", ",", "1"}], "]"}], "]"}], "===", "Plus"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"h", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "===", "1"}], "||", 
                   RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "\"\< \>\"", ",", "\"\<(\>\"", ",", "\"\<[\>\"", ",", 
                    "\"\<{\>\""}], "}"}], ",", 
                    RowBox[{"StringTake", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], ",", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
                    "]"}]}], "]"}]}], ")"}], "&&", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "===", 
                    RowBox[{"StringLength", "[", "a", "]"}]}], "||", 
                   RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "\"\< \>\"", ",", "\"\<)\>\"", ",", "\"\<]\>\"", ",", 
                    "\"\<}\>\"", ",", "\"\<,\>\""}], "}"}], ",", 
                    RowBox[{"StringTake", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ",", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "+", "1"}]}], "}"}]}], 
                    "]"}]}], "]"}]}], ")"}]}], ",", "#"}], "]"}], "&"}], ",", 
             "c"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"h", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "===", "1"}], "||", 
                   RowBox[{"!", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{"SymbolQ", "[", 
                    RowBox[{"StringTake", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], ",", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
                    "]"}], "]"}], "]"}]}]}], ")"}], "&&", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "===", 
                    RowBox[{"StringLength", "[", "a", "]"}]}], "||", 
                   RowBox[{"!", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{"SymbolQ", "[", 
                    RowBox[{"StringTake", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ",", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "+", "1"}]}], "}"}]}], 
                    "]"}], "]"}], "]"}]}]}], ")"}]}], ",", "#"}], "]"}], 
              "&"}], ",", "c"}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"h", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"h", ",", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"SameQ", "[", 
              RowBox[{"#", ",", "Null"}], "]"}]}], "&"}]}], "]"}]}], ";", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"StringReplacePart", "[", 
          RowBox[{"a", ",", 
           RowBox[{"\"\<(\>\"", "<>", 
            RowBox[{"Part", "[", 
             RowBox[{"b", ",", "2"}], "]"}], "<>", "\"\<)\>\""}], ",", "h"}], 
          "]"}], "]"}]}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ReplaceSubLists`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReplaceSubLists", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"ListQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{"RuleQ", "[", "y", "]"}], "||", 
      RowBox[{"ListRulesQ", "[", "y", "]"}]}]}]}], "]"}], " ", ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "f", ",", 
      RowBox[{"d", "=", 
       RowBox[{"FromCharacterCode", "[", "2016", "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"z_", "/;", 
        RowBox[{"ListQ", "[", "z", "]"}]}], "]"}], ":=", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ToString1", "[", "#", "]"}], "<>", "d"}], "&"}], ",", 
         "z"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"a", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "}"}], "]"}], "]"}], "\[Rule]", 
          RowBox[{"f", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "}"}], "]"}], "]"}]}], "&"}], 
        ",", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", "y", "}"}], "]"}]}], "]"}]}], ";", " ", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"StringSplit", "[", 
       RowBox[{
        RowBox[{"StringReplace", "[", 
         RowBox[{
          RowBox[{"f", "[", "x", "]"}], ",", "a"}], "]"}], ",", "d"}], "]"}], 
      "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`FuncToPure`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FuncToPure", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"QFunction", "[", 
      RowBox[{"ToString", "[", "x", "]"}], "]"}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"HeadPF", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"ToString", ",", 
         RowBox[{"Args", "[", "x", "]"}]}], "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{
        RowBox[{"Definition2", "[", "x", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", "d", ",", 
      RowBox[{"k", "=", "1"}], ",", "h", ",", "t", ",", 
      RowBox[{"g", "=", 
       RowBox[{"{", "}"}]}], ",", "p"}], "}"}], ",", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"First", ",", 
        RowBox[{"Mapp", "[", 
         RowBox[{"StringSplit", ",", "b", ",", "\"\<_\>\""}], "]"}]}], 
       "]"}]}], ";", 
     RowBox[{"p", "=", 
      RowBox[{"StringTrim", "[", 
       RowBox[{"c", ",", 
        RowBox[{"a", "<>", "\"\< := \>\""}]}], "]"}]}], ";", " ", 
     RowBox[{"h", "=", 
      RowBox[{"\"\<Hold[\>\"", "<>", "p", "<>", "\"\<]\>\""}]}], ";", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", "h"}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Length", "[", "b", "]"}], ",", 
        RowBox[{"ToExpression", "[", "h", "]"}]}], "}"}]}], ";", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", "t"}], ",", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"g", ",", 
          RowBox[{
           RowBox[{"d", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "<>", "\"\< -> #\>\"", "<>", 
           RowBox[{"ToString", "[", "k", "]"}]}]}], "]"}], ";", " ", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", 
     RowBox[{"h", "=", 
      RowBox[{"ToString1", "[", 
       RowBox[{"ReplaceAll", "[", 
        RowBox[{"h", ",", 
         RowBox[{"ToExpression", "[", "g", "]"}]}], "]"}], "]"}]}], ";", " ", 
     RowBox[{"g", "=", 
      RowBox[{"StringTake", "[", 
       RowBox[{"h", ",", 
        RowBox[{"{", 
         RowBox[{"6", ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "]"}]}], ";", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "y", "}"}], "\[NotEqual]", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"\"\<Function[\>\"", "<>", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "b", "]"}], "\[Equal]", "1"}], ",", 
           RowBox[{"StringTake", "[", 
            RowBox[{
             RowBox[{"ToString", "[", "d", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", 
               RowBox[{"-", "2"}]}], "}"}]}], "]"}], ",", 
           RowBox[{"ToString", "[", "d", "]"}]}], "]"}], "<>", "\"\<, \>\"", "<>",
          "p", "<>", "\"\<]\>\""}], ",", 
        RowBox[{"g", "<>", "\"\< &\>\""}]}], "]"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`BlockFuncModVars`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BlockFuncModVars", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"d", ",", "t", ",", 
      RowBox[{"c", "=", 
       RowBox[{"Args", "[", 
        RowBox[{"x", ",", "90"}], "]"}]}], ",", 
      RowBox[{"a", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"QFunction", "[", "x", "]"}], ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"LocalsGlobals1", "[", "x", "]"}]}], "]"}]}], ",", 
      RowBox[{"s", "=", 
       RowBox[{"{", "\"\<System\>\"", "}"}]}], ",", 
      RowBox[{"u", "=", 
       RowBox[{"{", "\"\<Users\>\"", "}"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{"h", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{"ExtrVarsOfStr", "[", 
       RowBox[{"b", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"a", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{
        RowBox[{"t", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"Quiet", "[", 
               RowBox[{"SystemQ", "[", "#", "]"}], "]"}], ",", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"s", ",", "#"}], "]"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"BlockFuncModQ", "[", "#", "]"}], ",", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"u", ",", "#"}], "]"}], ",", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"h", ",", "#"}], "]"}]}], "]"}]}], "]"}], "&"}], ",",
            "d"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"s", ",", 
          RowBox[{"u", "=", 
           RowBox[{"Select", "[", 
            RowBox[{"u", ",", 
             RowBox[{
              RowBox[{"#", "\[NotEqual]", 
               RowBox[{"ToString", "[", "x", "]"}]}], "&"}]}], "]"}]}], ",", 
          "c", ",", 
          RowBox[{"MinusList", "[", 
           RowBox[{"d", ",", 
            RowBox[{"Join", "[", 
             RowBox[{"s", ",", "u", ",", "c", ",", 
              RowBox[{"{", 
               RowBox[{"ToString", "[", "x", "]"}], "}"}]}], "]"}]}], "]"}]}],
          "}"}]}], ",", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"Quiet", "[", 
              RowBox[{"SystemQ", "[", "#", "]"}], "]"}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"s", ",", "#"}], "]"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"BlockFuncModQ", "[", "#", "]"}], ",", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"u", ",", "#"}], "]"}], ",", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"h", ",", "#"}], "]"}]}], "]"}]}], "]"}], "&"}], ",", 
          "d"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Select", "[", 
           RowBox[{"s", ",", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "\"\<$Failed\>\"", ",", "\"\<True\>\"", ",", 
                  "\"\<False\>\""}], "}"}], ",", "#"}], "]"}]}], "&"}]}], 
           "]"}], ",", 
          RowBox[{"Select", "[", 
           RowBox[{"u", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "\[NotEqual]", 
               RowBox[{"ToString", "[", "x", "]"}]}], "&&", 
              RowBox[{"!", 
               RowBox[{"MemberQ", "[", 
                RowBox[{
                 RowBox[{"a", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "#"}], "]"}]}]}], 
             "&"}]}], "]"}], ",", "c", ",", 
          RowBox[{"a", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"a", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ",", 
          RowBox[{"Select", "[", 
           RowBox[{"h", ",", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"a", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"a", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", "c", ",", 
                  RowBox[{"{", 
                   RowBox[{"\"\<System\>\"", ",", "\"\<Users\>\""}], "}"}]}], 
                 "]"}], ",", "#"}], "]"}]}], "&"}]}], "]"}]}], "}"}]}]}], 
      "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StrStr`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StrStr", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"StringQ", "[", "x", "]"}], ",", 
    RowBox[{"\"\<\\\"\>\"", "<>", "x", "<>", "\"\<\\\"\>\""}], ",", 
    RowBox[{"ToString", "[", "x", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`IsPermutation`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IsPermutation", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", "=", 
      RowBox[{"Characters", "[", "x", "]"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "a", "]"}], "\[Equal]", 
       RowBox[{"Length", "[", 
        RowBox[{"DeleteDuplicates", "[", "a", "]"}], "]"}]}], ",", "True", 
      ",", "False"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Nvalue`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nvalue", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Names", "[", "\"\<`*\>\"", "]"}]}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "b", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ToExpression", "[", 
           RowBox[{"b", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "]"}], "\[Equal]", "x"}], ",", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"a", ",", 
           RowBox[{"b", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"Next", "[", "]"}]}], "]"}]}], "]"}], ";", " ", 
     RowBox[{"Select", "[", 
      RowBox[{"a", ",", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"SuffPref", "[", 
          RowBox[{"#", ",", "\"\<Global`\>\"", ",", "1"}], "]"}]}], "&"}]}], 
      "]"}]}]}], "\n", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Nvalue1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nvalue1", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Names", "[", "\"\<*\>\"", "]"}], ",", 
         RowBox[{
          RowBox[{"StringFreeQ", "[", 
           RowBox[{"#", ",", "\"\<$\>\""}], "]"}], "&"}]}], "]"}]}], ",", "c",
       ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "b", "]"}]}], ",", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"ToExpression", "[", 
          RowBox[{"\"\<Attributes[\>\"", "<>", 
           RowBox[{"ToString1", "[", 
            RowBox[{"b", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "]"}], "<>", "\"\<]\>\""}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"MemberQ", "[", 
            RowBox[{"c", ",", "Protected"}], "]"}]}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"a", ",", 
            RowBox[{"b", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ",", "Null"}], "]"}], 
        ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", 
     RowBox[{"Select", "[", 
      RowBox[{"a", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"ToExpression", "[", "#", "]"}], "===", "x"}], "&"}]}], 
      "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DelSuffPref`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DelSuffPref", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"StringQ", "[", "y", "]"}]}], ",", 
    RowBox[{"n_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", "n"}], "]"}]}]}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", "=", 
      RowBox[{"StringLength", "[", "y", "]"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"SuffPref", "[", 
        RowBox[{"x", ",", "y", ",", "n"}], "]"}]}], ",", "x", ",", 
      RowBox[{"StringTake", "[", 
       RowBox[{"x", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"a", "+", "1"}], ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"a", "+", "1"}], ")"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"a", "+", "1"}], ",", 
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"a", "+", "1"}], ")"}]}]}], "}"}]}], "}"}], "[", 
         RowBox[{"[", "n", "]"}], "]"}]}], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`MaxLevel`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MaxLevel", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ListQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "x"}], ",", 
      RowBox[{"k", "=", "0"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"NestListQ1", "[", "a", "]"}], ",", 
       RowBox[{
        RowBox[{"k", "++"}], ";", 
        RowBox[{"a", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"a", ",", "1"}], "]"}]}], ";", 
        RowBox[{"Continue", "[", "]"}]}]}], "]"}], ";", "k"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ListLevels`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListLevels", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ListQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "x"}], ",", "b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"NestListQ1", "[", "x", "]"}]}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"NestListQ1", "[", "a", "]"}], ",", 
         RowBox[{
          RowBox[{"b", "=", 
           RowBox[{"Flatten", "[", 
            RowBox[{"a", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "b", "]"}], "\[GreaterEqual]", 
             RowBox[{"Length", "[", "a", "]"}]}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"c", ",", 
              RowBox[{"k", "++"}]}], "]"}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"c", ",", "k"}], "]"}]}], "]"}], ";", " ", 
          RowBox[{"a", "=", "b"}], ";", 
          RowBox[{"Continue", "[", "]"}]}]}], "]"}], ";", "c"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`HowAct`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HowAct", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Quiet", "[", 
      RowBox[{"Check", "[", 
       RowBox[{
        RowBox[{"ToString", "[", 
         RowBox[{"Definition", "[", "x", "]"}], "]"}], ",", "True"}], "]"}], 
      "]"}], "===", "\"\<Null\>\""}], ",", "False", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"ProtectedQ", "[", "x", "]"}], ",", "True", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Quiet", "[", 
          RowBox[{"ToString", "[", 
           RowBox[{"Definition", "[", "x", "]"}], "]"}], "]"}], "===", 
         RowBox[{"\"\<Attributes[\>\"", "<>", 
          RowBox[{"ToString", "[", "x", "]"}], "<>", 
          "\"\<] = {Temporary}\>\""}]}], ",", "False", ",", "True"}], "]"}]}],
      "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`UndefinedQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UndefinedQ", "[", "x_", "]"}], ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"SymbolQ", "[", "x", "]"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"$Failed", ",", "\"\<Undefined\>\""}], "}"}], ",", 
        RowBox[{"PureDefinition", "[", "x", "]"}]}], "]"}], ",", "True", ",", 
      "False"}], "]"}], ",", "False"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DefinedActSymbols`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DefinedActSymbols", "[", "]"}], ":=", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Names", "[", "\"\<`*\>\"", "]"}], ",", 
    RowBox[{
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"TemporaryQ", "[", "#", "]"}], "||", 
        RowBox[{"UndefinedQ", "[", "#", "]"}]}], ")"}]}], "&"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`PathToFileQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PathToFileQ", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"StringLength", "[", "x", "]"}], ">=", "3"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"CharacterRange", "[", 
            RowBox[{"\"\<a\>\"", ",", "\"\<z\>\""}], "]"}], ",", 
           RowBox[{"CharacterRange", "[", 
            RowBox[{"\"\<A\>\"", ",", "\"\<Z\>\""}], "]"}]}], "]"}], ",", 
         RowBox[{"StringTake", "[", 
          RowBox[{"x", ",", "1"}], "]"}]}], "]"}], "&&", 
       RowBox[{
        RowBox[{"StringTake", "[", 
         RowBox[{"x", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "2"}], "}"}]}], "]"}], "\[Equal]", "\"\<:\>\""}],
        "&&", 
       RowBox[{
        RowBox[{"And", "[", 
         RowBox[{"Map3", "[", 
          RowBox[{"StringFreeQ", ",", "x", ",", 
           RowBox[{"{", 
            RowBox[{"\"\</\>\"", ",", "\"\<\\\\\>\""}], "}"}]}], "]"}], "]"}],
         "\[NotEqual]", 
        RowBox[{"{", 
         RowBox[{"True", ",", "True"}], "}"}]}]}], ",", "True", ",", 
      "False"}], "]"}], ",", "False"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SortLpos`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SortLpos", "[", 
   RowBox[{
    RowBox[{"L_", "/;", 
     RowBox[{"NestListQ", "[", "L", "]"}]}], ",", 
    RowBox[{"n_", "/;", 
     RowBox[{"IntegerQ", "[", "n", "]"}]}], ",", "SF_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"1", "\[LessEqual]", "n", "\[LessEqual]", 
      RowBox[{"Min", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"Length", ",", "L"}], "]"}], "]"}]}]}], ",", "$Failed", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Greater", ",", "Less"}], "}"}], ",", "SF"}], "]"}]}], ",", 
      "$Failed", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"NumericQ", "[", "#", "]"}], "&"}], ",", 
            RowBox[{"Flatten", "[", "L", "]"}]}], "]"}], "]"}], "\[NotEqual]", 
         RowBox[{"{", "True", "}"}]}], ",", "$Failed", ",", 
        RowBox[{"Sort", "[", 
         RowBox[{"L", ",", 
          RowBox[{
           RowBox[{"SF", "[", 
            RowBox[{
             RowBox[{"#2", "[", 
              RowBox[{"[", "n", "]"}], "]"}], ",", 
             RowBox[{"#1", "[", 
              RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "&"}]}], "]"}]}], 
       "]"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SubListsMin`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SubListsMin", "[", 
   RowBox[{
    RowBox[{"L_", "/;", 
     RowBox[{"ListQ", "[", "L", "]"}]}], ",", "x_", ",", "y_", ",", 
    RowBox[{"t_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<r\>\"", ",", "\"\<l\>\""}], "}"}], ",", "t"}], "]"}]}], 
    ",", "z___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", "j"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}], "=", 
      RowBox[{"Map", "[", 
       RowBox[{"Flatten", ",", 
        RowBox[{"Map3", "[", 
         RowBox[{"Position", ",", "L", ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "\[Equal]", 
         RowBox[{"{", "}"}]}], "||", 
        RowBox[{"b", "\[Equal]", 
         RowBox[{"{", "}"}]}], "||", 
        RowBox[{
         RowBox[{"a", "\[Equal]", 
          RowBox[{"{", "}"}]}], "&&", 
         RowBox[{"b", "\[Equal]", 
          RowBox[{"{", "}"}]}]}], "||", 
        RowBox[{"L", "\[Equal]", 
         RowBox[{"{", "}"}]}]}], ",", 
       RowBox[{"{", "}"}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"b", "=", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"t", "\[Equal]", "\"\<r\>\""}], ",", "Greater", 
                   ",", "Less"}], "]"}], "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"a", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "#"}], "]"}],
               "&"}], ",", "b"}], "]"}], ",", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"SameQ", "[", 
              RowBox[{"#", ",", "Null"}], "]"}]}], "&"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{"k", ",", 
          RowBox[{"k", "\[LessEqual]", 
           RowBox[{"Length", "[", "a", "]"}]}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ";", 
           RowBox[{"While", "[", 
            RowBox[{
             RowBox[{"j", "\[LessEqual]", 
              RowBox[{"Length", "[", "b", "]"}]}], ",", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"t", "\[Equal]", "\"\<r\>\""}], ",", "Greater", 
                   ",", "Less"}], "]"}], "[", 
                 RowBox[{
                  RowBox[{"b", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], ",", 
                  RowBox[{"a", "[", 
                   RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ",", 
                RowBox[{
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"d", ",", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"t", "\[Equal]", "\"\<r\>\""}], ",", 
                    RowBox[{
                    RowBox[{"a", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], ";;", 
                    RowBox[{"b", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"b", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ";;", 
                    RowBox[{"a", "[", 
                    RowBox[{"[", "k", "]"}], "]"}]}]}], "]"}]}], "]"}], ";", 
                 RowBox[{"Break", "[", "]"}]}]}], "]"}], ";", 
              RowBox[{"j", "++"}]}]}], "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"d", "=", 
         RowBox[{"Sort", "[", 
          RowBox[{"d", ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Part", "[", 
               RowBox[{"#1", ",", "2"}], "]"}], "-", 
              RowBox[{"Part", "[", 
               RowBox[{"#1", ",", "1"}], "]"}]}], "<=", 
             RowBox[{
              RowBox[{"Part", "[", 
               RowBox[{"#2", ",", "2"}], "]"}], "-", 
              RowBox[{"Part", "[", 
               RowBox[{"#2", ",", "1"}], "]"}]}]}], "&"}]}], "]"}]}], ";", 
        " ", 
        RowBox[{"d", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"d", ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Part", "[", 
               RowBox[{"#", ",", "2"}], "]"}], "-", 
              RowBox[{"Part", "[", 
               RowBox[{"#", ",", "1"}], "]"}]}], "\[Equal]", 
             RowBox[{
              RowBox[{"Part", "[", 
               RowBox[{
                RowBox[{"d", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "2"}], "]"}], "-", 
              RowBox[{"Part", "[", 
               RowBox[{
                RowBox[{"d", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}]}]}], 
            "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"d", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"L", "[", 
             RowBox[{"[", "#", "]"}], "]"}], "&"}], ",", "d"}], "]"}]}], ";", 
        RowBox[{"d", "=", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", "z", "}"}], "\[NotEqual]", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"2", ";;", 
                 RowBox[{"-", "2"}]}], "]"}], "]"}], "&"}], ",", "d"}], "]"}],
            ",", "d"}], "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "d", "]"}], "\[Equal]", "1"}], ",", 
          RowBox[{"Flatten", "[", "d", "]"}], ",", "d"}], "]"}]}]}], 
      "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`NamesNbPackage`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NamesNbPackage", "[", 
   RowBox[{"f_", "/;", 
    RowBox[{
     RowBox[{"IsFile", "[", "f", "]"}], "&&", 
     RowBox[{
      RowBox[{"FileExtension", "[", "f", "]"}], "\[Equal]", "\"\<nb\>\""}], "&&", 
     RowBox[{"!", 
      RowBox[{"SameQ", "[", 
       RowBox[{
        RowBox[{"ContextFromFile", "[", "f", "]"}], ",", "$Failed"}], 
       "]"}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Res", "=", 
       RowBox[{"{", "}"}]}], ",", "Tr"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Tr", "[", 
       RowBox[{"x_", "/;", 
        RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"c", ",", "d", ",", "h", ",", 
          RowBox[{"g", "=", "\"\<\\\"::\\\"\>\""}], ",", 
          RowBox[{"v", "=", "\"\<\\\"=\\\"\>\""}], ",", 
          RowBox[{"p", "=", "\"\<\\\"usage\\\"\>\""}], ",", 
          RowBox[{"a", "=", 
           RowBox[{"OpenRead", "[", "x", "]"}]}], ",", 
          RowBox[{"s", "=", "\"\<   RowBox[{\>\""}]}], "}"}], ",", 
        RowBox[{
         RowBox[{"Label", "[", "c", "]"}], ";", 
         RowBox[{"d", "=", 
          RowBox[{"Read", "[", 
           RowBox[{"a", ",", "String"}], "]"}]}], ";", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"d", "===", "EndOfFile"}], ",", 
           RowBox[{
            RowBox[{"Close", "[", "a", "]"}], ";", " ", 
            RowBox[{"Return", "[", "Res", "]"}]}], ",", "Null"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"DeleteDuplicates", "[", 
              RowBox[{"Map3", "[", 
               RowBox[{"StringFreeQ", ",", "d", ",", 
                RowBox[{"{", 
                 RowBox[{"s", ",", "g", ",", "p", ",", "v"}], "}"}]}], "]"}], 
              "]"}], "\[Equal]", 
             RowBox[{"{", "False", "}"}]}], "&&", 
            RowBox[{"SuffPref", "[", 
             RowBox[{"d", ",", "s", ",", "1"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"h", "=", 
             RowBox[{"Flatten", "[", 
              RowBox[{"StringPosition", "[", 
               RowBox[{"d", ",", "g"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"Res", ",", 
              RowBox[{"StringTake", "[", 
               RowBox[{"d", ",", 
                RowBox[{"{", 
                 RowBox[{"12", ",", 
                  RowBox[{
                   RowBox[{"h", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "3"}]}], "}"}]}], 
               "]"}]}], "]"}], ";", 
            RowBox[{"Goto", "[", "c", "]"}]}], ",", 
           RowBox[{"Goto", "[", "c", "]"}]}], "]"}]}]}], "]"}]}], ";", " ", 
     RowBox[{"Map", "[", 
      RowBox[{"ToExpression", ",", 
       RowBox[{"Sort", "[", 
        RowBox[{"Tr", "[", "f", "]"}], "]"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ExcessVarsPack`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExcessVarsPack", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"ContextQ", "[", "x", "]"}], "&&", 
     RowBox[{"MemberQ", "[", 
      RowBox[{"$Packages", ",", "x"}], "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "}"}]}], "}"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Sort", "[", 
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"MinusList", "[", 
          RowBox[{
           RowBox[{"Names", "[", 
            RowBox[{"x", "<>", "\"\<*\>\""}], "]"}], ",", 
           RowBox[{"CNames", "[", "x", "]"}]}], "]"}], "]"}], "]"}]}]}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"Map", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"TemporaryQ", "[", "#", "]"}], "&&", 
           RowBox[{
            RowBox[{"PureDefinition", "[", "#", "]"}], "\[NotEqual]", 
            "$Failed"}]}], ",", " ", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"a", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "#"}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"TemporaryQ", "[", "#", "]"}], "&&", 
             RowBox[{
              RowBox[{"PureDefinition", "[", "#", "]"}], "===", "$Failed"}]}],
             ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{
              RowBox[{"a", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "#"}], "]"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"!", 
                RowBox[{"SameQ", "[", 
                 RowBox[{
                  RowBox[{"PureDefinition", "[", "#", "]"}], ",", "$Failed"}],
                  "]"}]}], "&&", 
               RowBox[{
                RowBox[{"Context", "[", "#", "]"}], "==", "x"}]}], " ", ",", 
              " ", 
              RowBox[{"AppendTo", "[", 
               RowBox[{
                RowBox[{"a", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], ",", "#"}], "]"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"SameQ", "[", 
                  RowBox[{
                   RowBox[{"PureDefinition", "[", "#", "]"}], ",", 
                   "$Failed"}], "]"}], "&&", 
                 RowBox[{
                  RowBox[{"Context", "[", "#", "]"}], "==", "x"}]}], ",", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{
                  RowBox[{"a", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], ",", "#"}], "]"}], ",", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{
                  RowBox[{"a", "[", 
                   RowBox[{"[", "5", "]"}], "]"}], ",", "#"}], "]"}]}], 
               "]"}]}], "]"}]}], "]"}]}], "]"}], "&"}], ",", "b"}], "]"}], 
     ";", " ", "a"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`NamesNbPackage1`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NamesNbPackage1", "[", 
   RowBox[{"f_", "/;", 
    RowBox[{
     RowBox[{"IsFile", "[", "f", "]"}], "&&", 
     RowBox[{
      RowBox[{"FileExtension", "[", "f", "]"}], "\[Equal]", "\"\<nb\>\""}], "&&", 
     RowBox[{"!", 
      RowBox[{"SameQ", "[", 
       RowBox[{
        RowBox[{"ContextFromFile", "[", "f", "]"}], ",", "$Failed"}], 
       "]"}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"c", ",", "d", ",", 
      RowBox[{"g", "=", "\"\<::\>\""}], ",", 
      RowBox[{"a", "=", 
       RowBox[{"OpenRead", "[", "f", "]"}]}], ",", 
      RowBox[{"p", "=", "\"\<usage\>\""}], ",", 
      RowBox[{"v", "=", "\"\<=\>\""}], ",", 
      RowBox[{"Res", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"s", "=", "\"\<   RowBox[{\>\""}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Label", "[", "c", "]"}], ";", 
     RowBox[{"d", "=", 
      RowBox[{"Read", "[", 
       RowBox[{"a", ",", "String"}], "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"d", "===", "EndOfFile"}], ",", 
       RowBox[{
        RowBox[{"Close", "[", "a", "]"}], ";", " ", 
        RowBox[{"Return", "[", 
         RowBox[{"Sort", "[", 
          RowBox[{"Map", "[", 
           RowBox[{"ToExpression", ",", "Res"}], "]"}], "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"DeleteDuplicates", "[", 
             RowBox[{"Map3", "[", 
              RowBox[{"StringFreeQ", ",", "d", ",", 
               RowBox[{"{", 
                RowBox[{"s", ",", "g", ",", "p", ",", "v"}], "}"}]}], "]"}], 
             "]"}], "\[Equal]", 
            RowBox[{"{", "False", "}"}]}], "&&", 
           RowBox[{"SuffPref", "[", 
            RowBox[{"d", ",", "s", ",", "1"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"Res", ",", 
             RowBox[{"StringReplace", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"StringSplit", "[", 
                 RowBox[{"d", ",", "\"\<,\>\""}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"s", "\[Rule]", "\"\<\>\""}]}], "]"}]}], "]"}], ";", 
           " ", 
           RowBox[{"Goto", "[", "c", "]"}]}]}], "]"}], ";", " ", 
        RowBox[{"Goto", "[", "c", "]"}]}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`RedMfile`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RedMfile", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
       "\"\<m\>\""}]}]}], ",", 
    RowBox[{"p_", "/;", 
     RowBox[{"SymbolQ", "[", "p", "]"}]}], ",", 
    RowBox[{"r_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<add\>\"", ",", "\"\<delete\>\"", ",", "\"\<replace\>\""}], "}"}],
        ",", "r"}], "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ReadList", "[", 
        RowBox[{"x", ",", "String"}], "]"}]}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"ToString", "[", "p", "]"}]}], ",", "h", ",", "save", ",", 
      RowBox[{"b", "=", 
       RowBox[{"\"\<(*Begin[\\\"`\>\"", "<>", 
        RowBox[{"ToString", "[", "p", "]"}], "<>", "\"\<`\\\"]*)\>\""}]}], 
      ",", 
      RowBox[{"c", "=", "\"\<(*End[]*)\>\""}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"ContentOfMfile", "[", "x", "]"}]}], ",", 
          RowBox[{"ToString", "[", "p", "]"}]}], "]"}], "&&", 
        RowBox[{"r", "==", "\"\<delete\>\""}]}], "||", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<add\>\"", ",", "\"\<replace\>\""}], "}"}], ",", "r"}],
          "]"}], "&&", 
        RowBox[{"!", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ProcQ", "[", "p", "]"}], "||", 
           RowBox[{"QFunction", "[", "p", "]"}]}], ")"}]}]}]}], ",", 
      "$Failed", ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"save", "[", "q_", "]"}], ":=", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"f", ",", 
            RowBox[{"k", "=", "1"}]}], "}"}], ",", 
          RowBox[{
           RowBox[{"f", "=", 
            RowBox[{
             RowBox[{"DirectoryName", "[", "x", "]"}], "<>", 
             RowBox[{"FileBaseName", "[", "x", "]"}], "<>", "\"\<$.m\>\""}]}],
            ";", "\[IndentingNewLine]", 
           RowBox[{"While", "[", 
            RowBox[{
             RowBox[{"k", "\[LessEqual]", 
              RowBox[{"Length", "[", "q", "]"}]}], ",", 
             RowBox[{
              RowBox[{"WriteString", "[", 
               RowBox[{"f", ",", 
                RowBox[{"q", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], ",", "\"\<\\n\>\""}], "]"}], 
              ";", 
              RowBox[{"k", "++"}]}]}], "]"}], ";", 
           RowBox[{"Close", "[", "f", "]"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"a", ",", "\"\<(* ::Package:: *)\>\""}], "]"}]}], ",", 
         "$Failed", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"r", "===", "\"\<delete\>\""}], ",", 
           RowBox[{
            RowBox[{"h", "=", 
             RowBox[{"Select", "[", 
              RowBox[{"a", ",", 
               RowBox[{
                RowBox[{"SuffPref", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"\"\<(*\>\"", "<>", "d", "<>", "\"\<::usage\>\""}], 
                  ",", "1"}], "]"}], "&"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"h", "\[Equal]", 
               RowBox[{"{", "}"}]}], ",", "x", ",", 
              RowBox[{
               RowBox[{"a", "=", 
                RowBox[{"Select", "[", 
                 RowBox[{"a", ",", 
                  RowBox[{
                   RowBox[{"!", 
                    RowBox[{"SuffPref", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{
                    "\"\<(*\>\"", "<>", "d", "<>", "\"\<::usage\>\""}], ",", 
                    "1"}], "]"}]}], "&"}]}], "]"}]}], ";", " ", 
               RowBox[{"d", "=", 
                RowBox[{"SubListsMin", "[", 
                 RowBox[{"a", ",", "b", ",", "c", ",", "\"\<r\>\""}], "]"}]}],
                ";", " ", 
               RowBox[{"d", "=", 
                RowBox[{"MinusList", "[", 
                 RowBox[{"a", ",", "d"}], "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"save", "[", "d", "]"}]}]}], "]"}]}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"r", "===", "\"\<add\>\""}], "&&", 
              RowBox[{
               RowBox[{"Select", "[", 
                RowBox[{"a", ",", 
                 RowBox[{
                  RowBox[{"SuffPref", "[", 
                   RowBox[{"#", ",", 
                    RowBox[{
                    "\"\<(*\>\"", "<>", "d", "<>", "\"\<::usage=\>\""}], ",", 
                    "1"}], "]"}], "&"}]}], "]"}], "\[Equal]", 
               RowBox[{"{", "}"}]}], "&&", 
              RowBox[{
               RowBox[{"Head", "[", 
                RowBox[{"p", "::", "usage"}], "]"}], "\[Equal]", "String"}], "&&", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"ProcQ", "[", "p", "]"}], "||", 
                RowBox[{"FunctionQ", "[", "p", "]"}]}], ")"}]}], ",", 
             RowBox[{
              RowBox[{"h", "=", 
               RowBox[{"PosListTest", "[", 
                RowBox[{"a", ",", 
                 RowBox[{
                  RowBox[{"SuffPref", "[", 
                   RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<(*BeginPackage[\>\"", ",", 
                    "\"\<(*EndPackage[]\>\""}], "}"}], ",", "1"}], "]"}], 
                  "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"a", "=", 
               RowBox[{"Insert", "[", 
                RowBox[{"a", ",", 
                 RowBox[{"\"\<(*\>\"", "<>", "d", "<>", "\"\<::usage=\>\"", "<>", 
                  RowBox[{"ToString1", "[", 
                   RowBox[{"p", "::", "usage"}], "]"}], "<>", "\"\<*)\>\""}], 
                 ",", 
                 RowBox[{
                  RowBox[{"h", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", "1"}]}], "]"}]}], ";",
               "\[IndentingNewLine]", 
              RowBox[{"a", "=", 
               RowBox[{"Flatten", "[", 
                RowBox[{"Insert", "[", 
                 RowBox[{"a", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "\"\<(*Begin[\\\"`\>\"", "<>", "d", "<>", 
                    "\"\<`\\\"]*)\>\""}], ",", 
                    RowBox[{"\"\<(*\>\"", "<>", 
                    RowBox[{"PureDefinition", "[", "p", "]"}], "<>", 
                    "\"\<*)\>\""}], ",", "\"\<(*End[]*)\>\""}], "}"}], ",", 
                  RowBox[{
                   RowBox[{"h", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "+", "1"}]}], "]"}], 
                "]"}]}], ";", 
              RowBox[{"save", "[", "a", "]"}]}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"r", "===", "\"\<replace\>\""}], "&&", 
                RowBox[{
                 RowBox[{"Head", "[", 
                  RowBox[{"p", "::", "usage"}], "]"}], "\[Equal]", "String"}],
                 "&&", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"ProcQ", "[", "p", "]"}], "||", 
                  RowBox[{"QFunction", "[", "p", "]"}]}], ")"}]}], ",", 
               RowBox[{
                RowBox[{"h", "=", 
                 RowBox[{"PosListTest", "[", 
                  RowBox[{"a", ",", 
                   RowBox[{
                    RowBox[{"SuffPref", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{
                    "\"\<(*Begin[\\\"`\>\"", "<>", "d", "<>", 
                    "\"\<`\\\"]*)\>\""}], ",", "1"}], "]"}], "&"}]}], "]"}]}],
                 ";", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"h", "\[Equal]", 
                   RowBox[{"{", "}"}]}], ",", "$Failed", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"a", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"h", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ";;", 
                    RowBox[{
                    RowBox[{"h", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", "2"}]}], "]"}], 
                    "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "\"\<(*Begin[\\\"`\>\"", "<>", "d", "<>", 
                    "\"\<`\\\"]*)\>\""}], ",", 
                    RowBox[{"\"\<(*\>\"", "<>", 
                    RowBox[{"PureDefinition", "[", "p", "]"}], "<>", 
                    "\"\<*)\>\""}], ",", "\"\<(*End[]*)\>\""}], "}"}]}], ";", 
                   " ", 
                   RowBox[{"h", "=", 
                    RowBox[{"PosListTest", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{
                    RowBox[{"SuffPref", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{
                    "\"\<(*\>\"", "<>", "d", "<>", "\"\<::usage=\>\""}], ",", 
                    "1"}], "]"}], "&"}]}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"a", "[", 
                    RowBox[{"[", 
                    RowBox[{"h", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "=", 
                    RowBox[{
                    "\"\<(*\>\"", "<>", "d", "<>", "\"\<::usage=\>\"", "<>", 
                    RowBox[{"ToString1", "[", 
                    RowBox[{"p", "::", "usage"}], "]"}], "<>", 
                    "\"\<*)\>\""}]}], ";", 
                   RowBox[{"save", "[", 
                    RowBox[{"Flatten", "[", "a", "]"}], "]"}]}]}], "]"}]}]}], 
              "]"}]}], "]"}], ",", "x"}], "]"}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`RedMxFile`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RedMxFile", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
       "\"\<mx\>\""}]}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{"StringQ", "[", "y", "]"}], "&&", 
      RowBox[{"SymbolQ", "[", "y", "]"}]}]}], ",", 
    RowBox[{"r_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<add\>\"", ",", "\"\<delete\>\"", ",", "\"\<replace\>\""}], "}"}],
        ",", "r"}], "]"}]}], ",", "f___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "c", ",", 
      RowBox[{"c1", "=", 
       RowBox[{"ContextFromFile", "[", "x", "]"}]}], ",", "c2", ",", "save", 
      ",", "t"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{"$Packages", ",", "c1"}], "]"}], "&&", 
        RowBox[{
         RowBox[{"CNames", "[", "c1", "]"}], "\[NotEqual]", 
         RowBox[{"{", "}"}]}]}], ",", 
       RowBox[{"t", "=", "74"}], ",", 
       RowBox[{"Get", "[", "x", "]"}]}], "]"}], ";", 
     RowBox[{
      RowBox[{"save", "[", "z_", "]"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"p", "=", 
          RowBox[{
           RowBox[{"DirectoryName", "[", "z", "]"}], "<>", 
           RowBox[{"FileBaseName", "[", "z", "]"}], "<>", "\"\<$.mx\>\""}]}], 
         "}"}], ",", 
        RowBox[{
         RowBox[{"ToExpression", "[", 
          RowBox[{"\"\<DumpSave[\>\"", "<>", 
           RowBox[{"ToString1", "[", "p", "]"}], "<>", "\"\<,\>\"", "<>", 
           RowBox[{"ToString1", "[", "c1", "]"}], "<>", "\"\<]\>\""}], "]"}], 
         ";", "p"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"r", "\[Equal]", "\"\<delete\>\""}], "&&", 
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{"CNames", "[", "c1", "]"}], ",", "y"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Unprotect", "[", "y", "]"}], ";", 
        RowBox[{"Remove", "[", "y", "]"}], ";", " ", 
        RowBox[{"c", "=", 
         RowBox[{"save", "[", "x", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"r", "\[Equal]", "\"\<replace\>\""}], "&&", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"a", ",", "y"}], "]"}], "&&", 
          RowBox[{
           RowBox[{"{", "f", "}"}], "\[NotEqual]", 
           RowBox[{"{", "}"}]}], "&&", 
          RowBox[{"FileExistsQ", "[", "f", "]"}], "&&", 
          RowBox[{
           RowBox[{"FileExtension", "[", "f", "]"}], "\[Equal]", 
           "\"\<mx\>\""}]}], ",", 
         RowBox[{
          RowBox[{"Unprotect", "[", "y", "]"}], ";", 
          RowBox[{"Remove", "[", "y", "]"}], ";", 
          RowBox[{"Get", "[", "f", "]"}], ";", " ", 
          RowBox[{"c", "=", 
           RowBox[{"save", "[", "x", "]"}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"r", "\[Equal]", "\"\<add\>\""}], "&&", 
            RowBox[{
             RowBox[{"{", "f", "}"}], "\[NotEqual]", 
             RowBox[{"{", "}"}]}], "&&", 
            RowBox[{"FileExistsQ", "[", "f", "]"}], "&&", 
            RowBox[{
             RowBox[{"FileExtension", "[", "f", "]"}], "\[Equal]", 
             "\"\<mx\>\""}]}], ",", 
           RowBox[{
            RowBox[{"Unprotect", "[", "y", "]"}], ";", " ", 
            RowBox[{"Remove", "[", "y", "]"}], ";", " ", 
            RowBox[{"Get", "[", "f", "]"}], ";", "  ", 
            RowBox[{"c", "=", 
             RowBox[{"save", "[", "x", "]"}]}]}], ",", 
           RowBox[{"c", "=", "$Failed"}]}], "]"}]}], "]"}]}], "]"}], ";", " ", 
     RowBox[{"DeleteFile", "[", "f", "]"}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"t", "\[Equal]", "74"}], ",", "Null", ",", 
       RowBox[{"RemovePackage", "[", "c1", "]"}]}], "]"}], ";", " ", "c"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ProcsAct`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ProcsAct", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Names", "[", "\"\<*\>\"", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Names", "[", "\"\<System`*\>\"", "]"}]}], ",", "c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", "j", ",", "h", ",", "t", ",", 
      RowBox[{"g", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "\"\<Module\>\"", "}"}], ",", 
         RowBox[{"{", "\"\<Block\>\"", "}"}], ",", 
         RowBox[{"{", "\"\<DynamicModule\>\"", "}"}], ",", 
         RowBox[{"{", "\"\<Function\>\"", "}"}], ",", 
         RowBox[{"{", "\"\<Others\>\"", "}"}]}], "}"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"c", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"a", ",", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"b", ",", "#"}], "]"}]}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"c", ",", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"Definition", "[", "#", "]"}], "]"}], "\[NotEqual]", 
           "\"\<Null\>\""}], "&&", 
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"Definition", "[", "#", "]"}], "]"}], "!=", 
           RowBox[{"\"\<Attributes[\>\"", "<>", 
            RowBox[{"ToString", "[", "#", "]"}], "<>", 
            "\"\<] = {Temporary}\>\""}]}], "&&", 
          RowBox[{"!", 
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"ToString", "[", "#", "]"}], "<>", 
                "\"\< = {Temporary}\>\""}], ",", 
               RowBox[{
                RowBox[{"ToString", "[", "#", "]"}], "<>", 
                "\"\< = {Temporary}\>\""}]}], "}"}], ",", 
             RowBox[{"ToString", "[", 
              RowBox[{"Definition", "[", "#", "]"}], "]"}]}], "]"}]}]}], 
         "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "c", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"h", "=", 
         RowBox[{"c", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", 
        RowBox[{"ClearAll", "[", "t", "]"}], ";", 
        RowBox[{"Quiet", "[", 
         RowBox[{"ProcQ1", "[", 
          RowBox[{
           RowBox[{"Symbol", "[", "h", "]"}], ",", "t"}], "]"}], "]"}], ";", 
        RowBox[{"t", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Check", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"t", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "$Failed"}], "]"}], "]"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"t", "===", "\"\<Module\>\""}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"g", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "h"}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"t", "===", "\"\<Block\>\""}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{
              RowBox[{"g", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "h"}], "]"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"t", "===", "\"\<DynamicModule\>\""}], ",", 
              RowBox[{"AppendTo", "[", 
               RowBox[{
                RowBox[{"g", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], ",", "h"}], "]"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"QFunction", "[", "h", "]"}], ",", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{
                  RowBox[{"g", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], ",", "h"}], "]"}], ",", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{
                  RowBox[{"g", "[", 
                   RowBox[{"[", "5", "]"}], "]"}], ",", "h"}], "]"}]}], 
               "]"}]}], "]"}]}], "]"}]}], "]"}]}]}], "]"}], ";", " ", "g"}]}],
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`NamesCS`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NamesCS", "[", 
   RowBox[{
    RowBox[{"P_", "/;", 
     RowBox[{"!", 
      RowBox[{"HowAct", "[", "P", "]"}]}]}], ",", 
    RowBox[{"Pr_", "/;", 
     RowBox[{"!", 
      RowBox[{"HowAct", "[", "Pr", "]"}]}]}], ",", 
    RowBox[{"Pobj_", "/;", 
     RowBox[{"!", 
      RowBox[{"HowAct", "[", "Pobj", "]"}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{"ToExpression", ",", 
            RowBox[{"Names", "[", "\"\<`*\>\"", "]"}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"ProcQ", "[", "#", "]"}], "&"}]}], "]"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Contexts", "[", "]"}]}], ",", 
      RowBox[{"c", "=", "$Packages"}], ",", "d", ",", 
      RowBox[{"k", "=", "1"}], ",", "p", ",", "n", ",", "m", ",", "h"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"P", ",", "Pr"}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{"c", ",", "a"}], "}"}]}], ";", 
     RowBox[{"c", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"List", ",", "c"}], "]"}]}], ";", " ", 
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "b", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"p", "=", "1"}], ",", 
         RowBox[{"p", "\[LessEqual]", 
          RowBox[{"Length", "[", "c", "]"}]}], ",", 
         RowBox[{"p", "++"}], ",", 
         RowBox[{
          RowBox[{"n", "=", 
           RowBox[{"b", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ";", 
          RowBox[{"m", "=", 
           RowBox[{
            RowBox[{"c", "[", 
             RowBox[{"[", "p", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", " ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"n", "===", "m"}], ",", "Null", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"SuffPref", "[", 
               RowBox[{"n", ",", "m", ",", "1"}], "]"}], ",", 
              RowBox[{
               RowBox[{"d", "=", 
                RowBox[{"StringReplace", "[", 
                 RowBox[{"n", ",", 
                  RowBox[{"b", "\[Rule]", "\"\<\>\""}]}], "]"}]}], ";", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"d", "\[Equal]", "\"\<\>\""}], ",", "Null", ",", 
                 RowBox[{
                  RowBox[{"c", "[", 
                   RowBox[{"[", "p", "]"}], "]"}], "=", 
                  RowBox[{"Append", "[", 
                   RowBox[{
                    RowBox[{"c", "[", 
                    RowBox[{"[", "p", "]"}], "]"}], ",", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"StringTake", "[", 
                    RowBox[{
                    RowBox[{"StringReplace", "[", 
                    RowBox[{"n", ",", 
                    RowBox[{"b", "\[Rule]", "\"\<\>\""}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "2"}]}], "}"}]}], "]"}], "]"}]}], "]"}]}]}], 
                "]"}]}]}], "]"}], ",", 
            RowBox[{"Continue", "[", "]"}]}], "]"}]}]}], "]"}]}], "]"}], ";", 
     RowBox[{"c", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"DeleteDuplicates", ",", "c"}], "]"}]}], ";", " ", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "c", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"h", "=", 
         RowBox[{"c", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"h", "\[Equal]", "1"}], "]"}], ",", 
          RowBox[{"h", "=", "Null"}], ",", 
          RowBox[{"h", "=", 
           RowBox[{"Select", "[", 
            RowBox[{"h", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"StringQ", "[", "#", "]"}], "||", 
               RowBox[{
                RowBox[{"ToString", "[", 
                 RowBox[{"Quiet", "[", 
                  RowBox[{"DefFunc", "[", "#", "]"}], "]"}], "]"}], 
                "\[NotEqual]", "\"\<Null\>\""}]}], "&"}]}], "]"}]}]}], 
         "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Pobj", ":=", 
      RowBox[{"Select", "[", 
       RowBox[{"c", ",", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "#", "]"}], ">", "1"}], "&&", 
          RowBox[{"!", 
           RowBox[{"#", "===", "Null"}]}]}], "&"}]}], "]"}]}], ";", " ", 
     RowBox[{"Pobj", "=", 
      RowBox[{"Mapp", "[", 
       RowBox[{"Select", ",", "Pobj", ",", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"StringQ", "[", "#", "]"}]}], ",", "True", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"StringTake", "[", 
               RowBox[{"#", ",", 
                RowBox[{"-", "1"}]}], "]"}], "\[Equal]", "\"\<`\>\""}], ",", 
             "True", ",", "False"}], "]"}]}], "]"}], "&"}]}], "]"}]}], 
     ";"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`NamesContext`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NamesContext", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ContextQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", "h", ",", 
      RowBox[{"a", "=", 
       RowBox[{"Names", "[", 
        RowBox[{"x", "<>", "\"\<*\>\""}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{
        RowBox[{"b", "=", 
         RowBox[{"a", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"h", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"ToString", "[", 
           RowBox[{"ToExpression", "[", 
            RowBox[{"\"\<Definition[\>\"", "<>", "b", "<>", "\"\<]\>\""}], 
            "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"h", "\[NotEqual]", "\"\<Null\>\""}], "&&", 
           RowBox[{"h", "\[NotEqual]", 
            RowBox[{
            "\"\<Attributes[\>\"", "<>", "b", "<>", 
             "\"\<] = {Temporary}\>\""}]}], "&&", 
           RowBox[{"!", 
            RowBox[{"SuffPref", "[", 
             RowBox[{"b", ",", "\"\<a$\>\"", ",", "1"}], "]"}]}]}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"c", ",", 
            RowBox[{"a", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], "]"}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", "c"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ContentObj`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContentObj", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"BlockQ", "[", "x", "]"}], "||", 
     RowBox[{"FunctionQ", "[", "x", "]"}], "||", 
     RowBox[{"ModuleQ", "[", "x", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ToString1", "[", 
        RowBox[{"FullDefinition", "[", "x", "]"}], "]"}]}], ",", "b"}], "}"}],
     ",", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"StringCases", "[", 
       RowBox[{"a", ",", 
        RowBox[{"X__", "~~", "\"\< /: \>\"", "~~", "X__"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"a", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"{", "}"}], ",", 
       RowBox[{
        RowBox[{"a", "=", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"StringTake", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Flatten", "[", 
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"#", ",", "\"\< /: \>\""}], "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
              "]"}], "&"}], ",", "a"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"2", ";;", 
            RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", " ", 
        RowBox[{"a", "=", 
         RowBox[{"Map", "[", 
          RowBox[{"DeleteDuplicates", ",", 
           RowBox[{"Map", "[", 
            RowBox[{"Flatten", ",", 
             RowBox[{"Gather", "[", 
              RowBox[{
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Context", "[", "#", "]"}], ",", "#"}], "}"}], 
                  "&"}], ",", "a"}], "]"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"#1", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
                 RowBox[{"#2", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}], "]"}]}],
           "]"}]}], ";", " ", 
        RowBox[{"a", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"Sort", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ";;", 
                   RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}]}], "}"}], "]"}], 
            "&"}], ",", "a"}], "]"}]}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "1"}], ",", 
          RowBox[{"a", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "a"}], "]"}]}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Map3`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map3", "[", 
   RowBox[{
    RowBox[{"F_", "/;", 
     RowBox[{"SymbolQ", "[", "F", "]"}]}], ",", "g_", ",", 
    RowBox[{"L_", "/;", 
     RowBox[{"ListQ", "[", "L", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Symbol", "[", 
       RowBox[{"ToString", "[", "F", "]"}], "]"}], "[", 
      RowBox[{"g", ",", "#"}], "]"}], "&"}], ",", "L"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Map5`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map5", "[", 
   RowBox[{"F_", ",", 
    RowBox[{"L_", "/;", 
     RowBox[{"NestListQ", "[", "L", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"F", "[", 
      RowBox[{"Sequences", "[", "#", "]"}], "]"}], "&"}], ",", "L"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SortQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SortQ", "[", 
   RowBox[{"s_", "/;", 
    RowBox[{"StringQ", "[", "s", "]"}]}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"s", "===", 
     RowBox[{"StringJoin", "[", 
      RowBox[{"Sort", "[", 
       RowBox[{"Characters", "[", "s", "]"}], "]"}], "]"}]}], ",", "True", 
    ",", "False"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Map6`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map6", "[", 
   RowBox[{
    RowBox[{"F_", "/;", 
     RowBox[{"PureFuncQ", "[", "F", "]"}]}], ",", 
    RowBox[{"L_", "/;", 
     RowBox[{"ListListQ", "[", "L", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"b", "=", 
       RowBox[{"Length", "[", "L", "]"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"L", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", "h", ",", "p"}], "}"}], ",", 
    RowBox[{
     RowBox[{"h", "=", 
      RowBox[{"StringTake", "[", 
       RowBox[{
        RowBox[{"ToString", "[", "F", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "4"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", "b"}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"a", "=", 
         RowBox[{"{", "}"}]}], ";", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"d", ",", 
          RowBox[{"StringReplace", "[", 
           RowBox[{"h", ",", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"For", "[", 
                 RowBox[{
                  RowBox[{"p", "=", "1"}], ",", 
                  RowBox[{"p", "\[LessEqual]", "c"}], ",", 
                  RowBox[{"p", "++"}], ",", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"a", ",", 
                    RowBox[{
                    RowBox[{"\"\<#\>\"", "<>", 
                    RowBox[{"ToString", "[", "p", "]"}]}], "->", 
                    RowBox[{"ToString", "[", 
                    RowBox[{
                    RowBox[{"L", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "[", 
                    RowBox[{"[", "p", "]"}], "]"}], "]"}]}]}], "]"}]}], "]"}],
                 ",", "a"}], "}"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"2", ";;", 
               RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}]}], "]"}]}]}], 
      "]"}], ";", 
     RowBox[{"ToExpression", "[", "d", "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Map7`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map7", "[", 
   RowBox[{
    RowBox[{"x__", "/;", 
     RowBox[{"SameQ", "[", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"SymbolQ", ",", 
          RowBox[{"{", "x", "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"{", "True", "}"}]}], "]"}]}], ",", 
    RowBox[{"L_", "/;", 
     RowBox[{"ListQ", "[", "L", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"FunCompose", "[", 
      RowBox[{
       RowBox[{"Reverse", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"Symbol", ",", 
          RowBox[{"Map", "[", 
           RowBox[{"ToString", ",", 
            RowBox[{"{", "x", "}"}]}], "]"}]}], "]"}], "]"}], ",", "#"}], 
      "]"}], "&"}], ",", "L"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Map8`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map8", "[", 
   RowBox[{
    RowBox[{"x__", "/;", 
     RowBox[{
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"SymbolQ", ",", 
         RowBox[{"{", "x", "}"}]}], "]"}], "]"}], "===", 
      RowBox[{"{", "True", "}"}]}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"ListQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Symbol", "[", 
       RowBox[{"ToString", "[", "#", "]"}], "]"}], "[", 
      RowBox[{"Sequences", "[", "y", "]"}], "]"}], "&"}], ",", 
    RowBox[{"{", "x", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Map9`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map9", "[", 
   RowBox[{
    RowBox[{"F_", "/;", 
     RowBox[{"SymbolQ", "[", "F", "]"}]}], ",", 
    RowBox[{"x_", "/;", 
     RowBox[{"ListQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"ListQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", "x", "]"}], "\[Equal]", 
     RowBox[{"Length", "[", "y", "]"}]}], ",", 
    RowBox[{"Map13", "[", 
     RowBox[{"F", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", 
    RowBox[{"Defer", "[", 
     RowBox[{"Map9", "[", 
      RowBox[{"F", ",", "x", ",", "y"}], "]"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Map10`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map10", "[", 
   RowBox[{
    RowBox[{"F_", "/;", 
     RowBox[{"SymbolQ", "[", "F", "]"}]}], ",", "x_", ",", 
    RowBox[{"L_", "/;", 
     RowBox[{"ListQ", "[", "L", "]"}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Symbol", "[", 
       RowBox[{"ToString", "[", "F", "]"}], "]"}], "[", 
      RowBox[{"x", ",", "#", ",", 
       RowBox[{"Sequences", "[", 
        RowBox[{"{", "y", "}"}], "]"}]}], "]"}], "&"}], ",", "L"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Map11`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map11", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"SymbolQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"ListQ", "[", "y", "]"}]}], ",", "z_"}], "]"}], ":=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ListQ", "[", "#", "]"}], ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"#1", ",", "z"}], "]"}], "&"}], ",", "#"}], "]"}], ",", 
       RowBox[{"x", "[", 
        RowBox[{"#", ",", "z"}], "]"}]}], "]"}], "&"}], ",", "y"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Map12`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map12", "[", 
   RowBox[{
    RowBox[{"F_", "/;", 
     RowBox[{"SymbolQ", "[", "F", "]"}]}], ",", 
    RowBox[{"x_", "/;", 
     RowBox[{"NestListQ1", "[", "x", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ToString1", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{
        RowBox[{"ToString", "[", "F", "]"}], "<>", "\"\<@\>\""}]}], ",", 
      "c"}], "}"}], ",", 
    RowBox[{
     RowBox[{"c", "=", 
      RowBox[{"StringReplace", "[", 
       RowBox[{"a", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<{\>\"", "\[Rule]", 
           RowBox[{"\"\<{\>\"", "<>", "b"}]}], ",", 
          RowBox[{"\"\<, \>\"", "\[Rule]", 
           RowBox[{"\"\<,\>\"", "<>", "b"}]}]}], "}"}]}], "]"}]}], ";", 
     RowBox[{"c", "=", 
      RowBox[{"StringReplace", "[", 
       RowBox[{"c", ",", 
        RowBox[{
         RowBox[{"b", "<>", "\"\<{\>\""}], "->", "\"\<{\>\""}]}], "]"}]}], 
     ";", 
     RowBox[{"ToExpression", "[", "c", "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Map13`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map13", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"SymbolQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"ListListQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Length", "[", "y", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"y", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", "k", ",", "j", ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "\[LessEqual]", "b"}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "1"}], ",", 
          RowBox[{"j", "\[LessEqual]", "a"}], ",", 
          RowBox[{"j", "++"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"c", ",", 
            RowBox[{
             RowBox[{"y", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], "]"}], ";", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"d", ",", 
          RowBox[{"Apply", "[", 
           RowBox[{"x", ",", "c"}], "]"}]}], "]"}], ";", " ", 
        RowBox[{"c", "=", 
         RowBox[{"{", "}"}]}]}]}], "]"}], ";", " ", "d"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Map14`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map14", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"SymbolQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"ListQ", "[", "y", "]"}]}], ",", "z_", ",", " ", "t___"}], "]"}],
   ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"y", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"Return", "[", "$Failed", "]"}], ",", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "y", "]"}]}], ",", 
         RowBox[{
          RowBox[{"a", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"a", ",", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", "t", "}"}], "\[Equal]", 
                 RowBox[{"{", "}"}]}], ",", "ToExpression", ",", "ToString"}],
                "]"}], "[", 
              RowBox[{
               RowBox[{"ToString", "[", "x", "]"}], "<>", "\"\<[\>\"", "<>", 
               RowBox[{"ToString1", "[", 
                RowBox[{"y", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "]"}], "<>", "\"\<, \>\"", "<>", 
               RowBox[{"ToString1", "[", "z", "]"}], "<>", "\"\<]\>\""}], 
              "]"}]}], "]"}]}], ";", " ", 
          RowBox[{"k", "++"}]}]}], "]"}]}], "]"}], ";", "a"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Map15`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map15", "[", 
   RowBox[{
    RowBox[{"x__", "/;", 
     RowBox[{"SameQ", "[", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"SymbolQ", ",", 
          RowBox[{"{", "x", "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"{", "True", "}"}]}], "]"}]}], ",", "y_"}], "]"}], ":=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", "y", "]"}], "&"}], ",", 
    RowBox[{"{", "x", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Map16`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map16", "[", 
   RowBox[{
    RowBox[{"f_", "/;", 
     RowBox[{"SymbolQ", "[", "f", "]"}]}], ",", " ", 
    RowBox[{"l_", "/;", 
     RowBox[{"ListQ", "[", "l", "]"}]}], ",", " ", "x___"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"Quiet", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"#1", ",", " ", 
         RowBox[{"FromCharacterCode", "[", "6", "]"}]}], "]"}], " ", "&"}], 
      " ", ")"}], " ", "/@", " ", "l"}], " ", "/.", " ", 
    RowBox[{
     RowBox[{"FromCharacterCode", "[", "6", "]"}], " ", "->", " ", 
     RowBox[{"Sequence", "[", "x", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Map17`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map17", "[", 
   RowBox[{"x_", ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{"RuleQ", "[", "y", "]"}], "||", 
      RowBox[{"ListRulesQ", "[", "y", "]"}]}]}]}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"RuleQ", "[", "y", "]"}], ",", 
    RowBox[{"Map", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", "y"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Map18`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map18", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"ListQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"SymbolQ", "[", "#", "]"}], "&"}], ",", "x"}], "]"}], 
        "]"}], "\[Equal]", 
       RowBox[{"{", "True", "}"}]}]}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"ListQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{"#", ",", "y"}], "]"}], "&"}], ",", "x"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Map19`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map19", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"ListQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"ListQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "x", "]"}], "\[Equal]", 
        RowBox[{"Length", "[", "y", "]"}]}], "&&", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"SymbolQ", "[", "#", "]"}], "&"}], ",", "x"}], "]"}], 
         "]"}], "\[Equal]", 
        RowBox[{"{", "True", "}"}]}]}], ",", 
      RowBox[{
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"a", ",", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "[", 
               RowBox[{"[", "k", "]"}], "]"}], ",", 
              RowBox[{"y", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], "}"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", 
           RowBox[{"Length", "[", "x", "]"}]}], "}"}]}], "]"}], ";", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "@@", 
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"2", ";;", 
              RowBox[{"-", "1"}]}], "]"}], "]"}]}], "&"}], ",", "a"}], 
        "]"}]}], ",", "$Failed"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Map20`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map20", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"ListQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"NestListQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", "x", "]"}], "\[NotEqual]", 
     RowBox[{"Length", "[", "y", "]"}]}], ",", "$Failed", ",", " ", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "@@", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "&"}], ",", 
      RowBox[{"Partition", "[", 
       RowBox[{
        RowBox[{"Riffle", "[", 
         RowBox[{"x", ",", "y"}], "]"}], ",", "2"}], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`EquExprPatt`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EquExprPatt", "[", 
   RowBox[{"x_", ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"ExprPatternQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", "j", ",", "t", ",", 
      RowBox[{"v", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", "p", ",", 
      RowBox[{"g", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"s", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"a", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"FullForm", ",", 
         RowBox[{"Map", "[", 
          RowBox[{"Expand", ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Mapp", "[", 
        RowBox[{"MinusList", ",", 
         RowBox[{"Map", "[", 
          RowBox[{"OP", ",", 
           RowBox[{"Map", "[", 
            RowBox[{"Expand", ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], "]"}], ",", 
         RowBox[{"{", "FullForm", "}"}]}], "]"}]}], ",", 
      RowBox[{"z", "=", 
       RowBox[{"SetAttributes", "[", 
        RowBox[{"ToString", ",", "Listable"}], "]"}]}], ",", "w"}], "}"}], 
    ",", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"b", ",", "c"}], "}"}], "=", 
      RowBox[{"ToString", "[", 
       RowBox[{"{", 
        RowBox[{"b", ",", "a"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"p", "=", 
      RowBox[{"StringPosition", "[", 
       RowBox[{
        RowBox[{"c", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Pattern[\>\"", ",", "\"\<Blank[]]\>\""}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"k", "=", 
         RowBox[{
          RowBox[{"2", "*", "k"}], "-", "1"}]}], ";", 
        RowBox[{"k", "\[LessEqual]", 
         RowBox[{"Length", "[", "p", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"d", ",", 
          RowBox[{"StringTake", "[", 
           RowBox[{
            RowBox[{"c", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"p", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"p", "[", 
                RowBox[{"[", 
                 RowBox[{"k", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}], "]"}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", "k"}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ToExpression", "[", "d", "]"}], ",", "1"}], "}"}]}], ";", 
     " ", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "t", "]"}]}], ",", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"v", ",", 
          RowBox[{"StringJoin", "[", 
           RowBox[{"ToString", "[", 
            RowBox[{"Op", "[", 
             RowBox[{"t", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "]"}]}], "]"}], 
        ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"v", "=", 
      RowBox[{"ToString", "[", "v", "]"}]}], ";", 
     RowBox[{"v", "=", 
      RowBox[{"Map13", "[", 
       RowBox[{"Rule", ",", 
        RowBox[{"{", 
         RowBox[{"d", ",", "v"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"v", "=", 
      RowBox[{"StringReplace", "[", 
       RowBox[{
        RowBox[{"c", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", "v"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"Mapp", "[", 
        RowBox[{"Select", ",", "b", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"!", 
            RowBox[{"SystemQ", "[", "#", "]"}]}], "||", 
           RowBox[{"BlockFuncModQ", "[", 
            RowBox[{"ToString", "[", "#", "]"}], "]"}]}], "&"}]}], "]"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"b", ",", "k", ",", "j"}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ToString", "[", "b", "]"}], ",", "1", ",", "1"}], "}"}]}], 
     ";", " ", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", 
         RowBox[{"b", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"z", "=", 
         RowBox[{
          RowBox[{"b", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"g", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"\"\<[\>\"", "<>", "z", "<>", "\"\<,\>\""}], "\[Rule]", 
             "\"\<[w\>\""}], ",", 
            RowBox[{
             RowBox[{"\"\< \>\"", "<>", "z", "<>", "\"\<,\>\""}], "\[Rule]", 
             "\"\< w\>\""}], ",", 
            RowBox[{
             RowBox[{"\"\<[\>\"", "<>", "z", "<>", "\"\<]\>\""}], "\[Rule]", 
             "\"\<[w]\>\""}], ",", 
            RowBox[{
             RowBox[{"\"\< \>\"", "<>", "z", "<>", "\"\<]\>\""}], "\[Rule]", 
             "\"\< w]\>\""}]}], "}"}]}], "]"}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"j", "\[LessEqual]", 
        RowBox[{"Length", "[", 
         RowBox[{"b", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"z", "=", 
         RowBox[{
          RowBox[{"b", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"s", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"\"\<[\>\"", "<>", "z", "<>", "\"\<,\>\""}], "\[Rule]", 
             "\"\<[w\>\""}], ",", 
            RowBox[{
             RowBox[{"\"\< \>\"", "<>", "z", "<>", "\"\<,\>\""}], "\[Rule]", 
             "\"\< w\>\""}], ",", 
            RowBox[{
             RowBox[{"\"\<[\>\"", "<>", "z", "<>", "\"\<]\>\""}], "\[Rule]", 
             "\"\<[w]\>\""}], ",", 
            RowBox[{
             RowBox[{"\"\< \>\"", "<>", "z", "<>", "\"\<]\>\""}], "\[Rule]", 
             "\"\< w]\>\""}]}], "}"}]}], "]"}], ";", 
        RowBox[{"j", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ClearAttributes", "[", 
      RowBox[{"ToString", ",", "Listable"}], "]"}], ";", " ", 
     RowBox[{"z", "=", 
      RowBox[{"Map9", "[", 
       RowBox[{"StringReplace", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"c", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "v"}], "}"}], ",", 
        RowBox[{"Map", "[", 
         RowBox[{"Flatten", ",", 
          RowBox[{"{", 
           RowBox[{"g", ",", "s"}], "}"}]}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"SameQ", "[", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"StringReplace", "[", 
        RowBox[{
         RowBox[{"z", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"GenRules", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "<>", "\"\<,\>\""}], "&"}], ",", 
                RowBox[{"Map", "[", 
                 RowBox[{"ToString", ",", "t"}], "]"}]}], "]"}], "]"}], ",", 
             "\"\<w\>\""}], "]"}], ",", 
           RowBox[{"GenRules", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "<>", "\"\<]\>\""}], "&"}], ",", 
                RowBox[{"Map", "[", 
                 RowBox[{"ToString", ",", "t"}], "]"}]}], "]"}], "]"}], ",", 
             "\"\<w]\>\""}], "]"}], ",", 
           RowBox[{"GenRules", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "<>", "\"\<)\>\""}], "&"}], ",", 
                RowBox[{"Map", "[", 
                 RowBox[{"ToString", ",", "t"}], "]"}]}], "]"}], "]"}], ",", 
             "\"\<w)\>\""}], "]"}]}], "]"}]}], "]"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`EquExprPatt1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EquExprPatt1", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", "t", ",", 
      RowBox[{"v", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", "j", ",", "p", ",", 
      RowBox[{"g", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"s", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"a", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"FullForm", ",", 
         RowBox[{"Map", "[", 
          RowBox[{"Expand", ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Mapp", "[", 
        RowBox[{"MinusList", ",", 
         RowBox[{"Map", "[", 
          RowBox[{"OP", ",", 
           RowBox[{"Map", "[", 
            RowBox[{"Expand", ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], "]"}], ",", 
         RowBox[{"{", "FullForm", "}"}]}], "]"}]}], ",", 
      RowBox[{"z", "=", 
       RowBox[{"SetAttributes", "[", 
        RowBox[{"ToString", ",", "Listable"}], "]"}]}], ",", "w"}], "}"}], 
    ",", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"b", ",", "c"}], "}"}], "=", 
      RowBox[{"ToString", "[", 
       RowBox[{"{", 
        RowBox[{"b", ",", "a"}], "}"}], "]"}]}], ";", " ", 
     RowBox[{"p", "=", 
      RowBox[{"StringPosition", "[", 
       RowBox[{
        RowBox[{"c", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Pattern[\>\"", ",", "\"\<Blank[]]\>\""}], "}"}]}], 
       "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"k", "=", 
         RowBox[{
          RowBox[{"2", "*", "k"}], "-", "1"}]}], ";", 
        RowBox[{"k", "\[LessEqual]", 
         RowBox[{"Length", "[", "p", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"d", ",", 
          RowBox[{"StringTake", "[", 
           RowBox[{
            RowBox[{"c", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"p", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"p", "[", 
                RowBox[{"[", 
                 RowBox[{"k", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}], "]"}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", "k"}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ToExpression", "[", "d", "]"}], ",", "1"}], "}"}]}], ";", 
     " ", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "t", "]"}]}], ",", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"v", ",", 
          RowBox[{"StringJoin", "[", 
           RowBox[{"ToString", "[", 
            RowBox[{"Op", "[", 
             RowBox[{"t", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "]"}]}], "]"}], 
        ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"v", "=", 
      RowBox[{"ToString", "[", "v", "]"}]}], ";", 
     RowBox[{"v", "=", 
      RowBox[{"Map13", "[", 
       RowBox[{"Rule", ",", 
        RowBox[{"{", 
         RowBox[{"d", ",", "v"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"v", "=", 
      RowBox[{"StringReplace", "[", 
       RowBox[{
        RowBox[{"c", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", "v"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"Mapp", "[", 
        RowBox[{"Select", ",", "b", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"!", 
            RowBox[{"SystemQ", "[", "#", "]"}]}], "||", 
           RowBox[{"ProcQ", "[", "#", "]"}], "||", 
           RowBox[{"QFunction", "[", 
            RowBox[{"ToString", "[", "#", "]"}], "]"}]}], "&"}]}], "]"}], 
       "]"}]}], ";", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"b", ",", "k", ",", "j"}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ToString", "[", "b", "]"}], ",", "1", ",", "1"}], "}"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", 
         RowBox[{"b", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"z", "=", 
         RowBox[{
          RowBox[{"b", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"g", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"\"\<[\>\"", "<>", "z", "<>", "\"\<,\>\""}], "\[Rule]", 
             "\"\<[w\>\""}], ",", 
            RowBox[{
             RowBox[{"\"\< \>\"", "<>", "z", "<>", "\"\<,\>\""}], "\[Rule]", 
             "\"\< w\>\""}], ",", 
            RowBox[{
             RowBox[{"\"\<[\>\"", "<>", "z", "<>", "\"\<]\>\""}], "\[Rule]", 
             "\"\<[w]\>\""}], ",", 
            RowBox[{
             RowBox[{"\"\< \>\"", "<>", "z", "<>", "\"\<]\>\""}], "\[Rule]", 
             "\"\< w]\>\""}]}], "}"}]}], "]"}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"j", "\[LessEqual]", 
        RowBox[{"Length", "[", 
         RowBox[{"b", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"z", "=", 
         RowBox[{
          RowBox[{"b", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], ";", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"s", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"\"\<[\>\"", "<>", "z", "<>", "\"\<,\>\""}], "\[Rule]", 
             "\"\<[w\>\""}], ",", 
            RowBox[{
             RowBox[{"\"\< \>\"", "<>", "z", "<>", "\"\<,\>\""}], "\[Rule]", 
             "\"\< w\>\""}], ",", 
            RowBox[{
             RowBox[{"\"\<[\>\"", "<>", "z", "<>", "\"\<]\>\""}], "\[Rule]", 
             "\"\<[w]\>\""}], ",", 
            RowBox[{
             RowBox[{"\"\< \>\"", "<>", "z", "<>", "\"\<]\>\""}], "\[Rule]", 
             "\"\< w]\>\""}]}], "}"}]}], "]"}], ";", 
        RowBox[{"j", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ClearAttributes", "[", 
      RowBox[{"ToString", ",", "Listable"}], "]"}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"z", "=", 
      RowBox[{"Map9", "[", 
       RowBox[{"StringReplace", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"c", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "v"}], "}"}], ",", 
        RowBox[{"Map", "[", 
         RowBox[{"Flatten", ",", 
          RowBox[{"{", 
           RowBox[{"g", ",", "s"}], "}"}]}], "]"}]}], "]"}]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"SameQ", "[", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"StringReplace", "[", 
        RowBox[{
         RowBox[{"z", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"GenRules", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "<>", "\"\<,\>\""}], "&"}], ",", 
                RowBox[{"Map", "[", 
                 RowBox[{"ToString", ",", "t"}], "]"}]}], "]"}], "]"}], ",", 
             "\"\<w\>\""}], "]"}], ",", 
           RowBox[{"GenRules", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "<>", "\"\<]\>\""}], "&"}], ",", 
                RowBox[{"Map", "[", 
                 RowBox[{"ToString", ",", "t"}], "]"}]}], "]"}], "]"}], ",", 
             "\"\<w]\>\""}], "]"}], ",", 
           RowBox[{"GenRules", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "<>", "\"\<)\>\""}], "&"}], ",", 
                RowBox[{"Map", "[", 
                 RowBox[{"ToString", ",", "t"}], "]"}]}], "]"}], "]"}], ",", 
             "\"\<w)\>\""}], "]"}]}], "]"}]}], "]"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`PureFuncQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PureFuncQ", "[", "F_", "]"}], " ", ":=", " ", 
  RowBox[{"Quiet", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"StringTake", "[", 
       RowBox[{
        RowBox[{"ToString1", "[", "F", "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", " ", 
          RowBox[{"-", "1"}]}], "}"}]}], "]"}], " ", "==", " ", 
      "\"\< & \>\""}], " ", "&&", "  ", 
     RowBox[{"!", 
      RowBox[{"StringFreeQ", "[", 
       RowBox[{
        RowBox[{"ToString", "[", "F", "]"}], ",", " ", "\"\<#\>\""}], 
       "]"}]}]}], "||", 
    RowBox[{"SuffPref", "[", 
     RowBox[{
      RowBox[{"ToString", "[", 
       RowBox[{"InputForm", "[", "F", "]"}], "]"}], ",", "\"\<Function[\>\"", 
      ",", "1"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`PureToFunc`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PureToFunc", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"PureFuncQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"!", 
      RowBox[{"HowAct", "[", "y", "]"}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Sort", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"ExprComp", "[", "x", "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Head", "[", "#", "]"}], "===", "Slot"}], "&"}]}], "]"}], 
        "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", "k"}], "}"}], ",", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"c", ",", 
         RowBox[{"Unique", "[", "\"\<x\>\"", "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{"Length", "[", "a", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"b", ",", 
         RowBox[{
          RowBox[{"a", "[", 
           RowBox[{"[", "k", "]"}], "]"}], "\[Rule]", 
          RowBox[{"c", "[", 
           RowBox[{"[", "k", "]"}], "]"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{"Length", "[", "a", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Simplify", "[", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"StringTake", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{"y", "@@", 
            RowBox[{"Map", "[", 
             RowBox[{"ToExpression", ",", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "<>", "\"\<_\>\""}], "&"}], ",", 
                RowBox[{"Map", "[", 
                 RowBox[{"ToString", ",", "c"}], "]"}]}], "]"}]}], "]"}]}], 
           "]"}], "<>", "\"\<:=\>\"", "<>", 
          RowBox[{"ToString1", "[", 
           RowBox[{"ReplaceAll", "[", 
            RowBox[{"x", ",", "b"}], "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "4"}]}], "}"}]}], "]"}], "]"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Definition1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Definition1", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", 
      RowBox[{"h", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"StringQ", "[", "x", "]"}], ",", 
         RowBox[{"ToExpression", "[", "x", "]"}], ",", "x"}], "]"}]}]}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"SymbolQ", "[", "h", "]"}]}], ",", 
       RowBox[{"a", "=", "$Failed"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SystemQ", "[", "h", "]"}], ",", 
         RowBox[{"a", "=", "\"\<Null\>\""}], ",", 
         RowBox[{
          RowBox[{"b", "=", 
           RowBox[{"Quiet", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Attributes", "[", "h", "]"}], ",", 
               RowBox[{"ClearAllAttributes", "[", "h", "]"}]}], "}"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", 
          RowBox[{"Quiet", "[", 
           RowBox[{
            RowBox[{"Off", "[", 
             RowBox[{"\"\<Definition\>\"", "::", "\"\<notfound\>\""}], "]"}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"a", "=", 
             RowBox[{"ToString1", "[", 
              RowBox[{"ToExpression", "[", 
               RowBox[{"\"\<Definition[\>\"", "<>", 
                RowBox[{"ToString1", "[", "h", "]"}], "<>", "\"\<]\>\""}], 
               "]"}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"a", "\[Equal]", "\"\<Null\>\""}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"c", "=", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"HeadPF", "[", "h", "]"}], "}"}], "]"}]}], ";", 
             RowBox[{"a", "=", 
              RowBox[{"StringSplit", "[", 
               RowBox[{"a", ",", "c"}], "]"}]}], ";", 
             RowBox[{"a", "=", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{"Riffle", "[", 
                 RowBox[{"a", ",", "c"}], "]"}], ",", "2"}], "]"}]}], ";", 
             RowBox[{"a", "=", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"StringJoin", "[", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}], ",", 
                "a"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"Quiet", "[", 
              RowBox[{"On", "[", 
               RowBox[{"\"\<Definition\>\"", "::", "\"\<notfound\>\""}], 
               "]"}], "]"}], ";", 
             RowBox[{"SetAttributes", "[", 
              RowBox[{"h", ",", "b"}], "]"}]}]}], "]"}]}]}], "]"}], ",", 
       "Null"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"SystemQ", "[", "h", "]"}], "&&", 
        RowBox[{"a", "===", "$Failed"}]}], ",", "\"\<Null\>\"", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "1"}], ",", 
         RowBox[{"a", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "a"}], "]"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Definition2`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Definition2", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"SameQ", "[", 
     RowBox[{
      RowBox[{"SymbolQ", "[", "x", "]"}], ",", 
      RowBox[{"HowAct", "[", "x", "]"}]}], "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"b", "=", 
       RowBox[{"Attributes", "[", "x", "]"}]}], ",", "c"}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"SystemQ", "[", "x", "]"}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<System\>\"", ",", 
          RowBox[{"Attributes", "[", "x", "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"Off", "[", 
        RowBox[{"Part", "::", "partw"}], "]"}]}], "]"}], ";", 
     RowBox[{"ClearAttributes", "[", 
      RowBox[{"x", ",", "b"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Quiet", "[", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{"ToString", "[", 
         RowBox[{"InputForm", "[", 
          RowBox[{"Definition", "[", "x", "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Mapp", "[", 
        RowBox[{"SetAttributes", ",", 
         RowBox[{"{", 
          RowBox[{"Rule", ",", "StringJoin"}], "}"}], ",", "Listable"}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"c", "=", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"a", ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"Rule", "[", 
             RowBox[{
              RowBox[{"StringJoin", "[", 
               RowBox[{
                RowBox[{"Contexts1", "[", "]"}], ",", 
                RowBox[{
                 RowBox[{"ToString", "[", "x", "]"}], "<>", "\"\<`\>\""}]}], 
               "]"}], ",", "\"\<\>\""}], "]"}], "}"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"c", "=", 
        RowBox[{"StringSplit", "[", 
         RowBox[{"c", ",", "\"\<\\n \\n\>\""}], "]"}]}], ";", 
       RowBox[{"Mapp", "[", 
        RowBox[{"ClearAttributes", ",", 
         RowBox[{"{", 
          RowBox[{"Rule", ",", "StringJoin"}], "}"}], ",", "Listable"}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"SetAttributes", "[", 
        RowBox[{"x", ",", "b"}], "]"}], ";", 
       RowBox[{"a", "=", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"c", ",", "b"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{
            RowBox[{"a", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Null\>\""}], "]"}], "&&", 
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
           RowBox[{"{", "}"}]}]}], ",", 
         RowBox[{
          RowBox[{"On", "[", 
           RowBox[{"Part", "::", "partw"}], "]"}], ";", 
          RowBox[{"{", 
           RowBox[{"\"\<Undefined\>\"", ",", 
            RowBox[{"Attributes", "[", "x", "]"}]}], "}"}]}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"SameQ", "[", 
             RowBox[{
              RowBox[{"a", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Null\>\""}], "]"}], "&&", 
            RowBox[{
             RowBox[{"a", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", 
             RowBox[{"{", "}"}]}], "&&", 
            RowBox[{"!", 
             RowBox[{"SystemQ", "[", "x", "]"}]}]}], ",", 
           RowBox[{
            RowBox[{"On", "[", 
             RowBox[{"Part", "::", "partw"}], "]"}], ";", 
            RowBox[{"{", 
             RowBox[{"\"\<Undefined\>\"", ",", 
              RowBox[{"Attributes", "[", "x", "]"}]}], "}"}]}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"SameQ", "[", 
               RowBox[{
                RowBox[{"a", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Null\>\""}], "]"}],
               "&&", 
              RowBox[{
               RowBox[{"a", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", 
               RowBox[{"{", "}"}]}], "&&", 
              RowBox[{
               RowBox[{"a", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", 
               RowBox[{"{", "}"}]}]}], ",", 
             RowBox[{
              RowBox[{"On", "[", 
               RowBox[{"Part", "::", "partw"}], "]"}], ";", 
              RowBox[{"{", 
               RowBox[{"\"\<System\>\"", ",", 
                RowBox[{"Attributes", "[", "x", "]"}]}], "}"}]}], ",", 
             RowBox[{
              RowBox[{"On", "[", 
               RowBox[{"Part", "::", "partw"}], "]"}], ";", "a"}]}], "]"}]}], 
          "]"}]}], "]"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Definition3`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Definition3", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"SymbolQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"!", 
      RowBox[{"HowAct", "[", "y", "]"}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Attributes", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Definition2", "[", "x", "]"}]}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"b", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "\"\<System\>\""}], ",", 
      RowBox[{
       RowBox[{"y", "=", "x"}], ";", 
       RowBox[{"{", 
        RowBox[{"\"\<System\>\"", ",", "a"}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"b", "=", 
        RowBox[{
         RowBox[{"Definition2", "[", "x", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", 
           RowBox[{"-", "2"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ClearAttributes", "[", 
        RowBox[{"x", ",", "a"}], "]"}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"BlockFuncModQ", "[", 
          RowBox[{"x", ",", "y"}], "]"}], ",", 
         RowBox[{
          RowBox[{"ToExpression", "[", "b", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"SetAttributes", "[", 
           RowBox[{"x", ",", "a"}], "]"}], ";", 
          RowBox[{"Definition", "[", "x", "]"}]}], ",", 
         RowBox[{
          RowBox[{"SetAttributes", "[", 
           RowBox[{"x", ",", "a"}], "]"}], ";", 
          RowBox[{"Definition", "[", "x", "]"}]}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Definition4`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Definition4", "[", 
   RowBox[{"x_", "/;", " ", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "a", "}"}], ",", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"Check", "[", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"StringSplit", "[", 
            RowBox[{
             RowBox[{"ToString", "[", 
              RowBox[{"InputForm", "[", 
               RowBox[{"Quiet", "[", 
                RowBox[{"Definition", "[", "x", "]"}], "]"}], "]"}], "]"}], 
             ",", "\"\<\\n\>\""}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "\[NotEqual]", "\"\< \>\""}], "&&", 
             RowBox[{"#", "\[NotEqual]", "x"}]}], "&"}]}], "]"}], ",", 
         "$Failed"}], "]"}], "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"a", "===", "$Failed"}], ",", "$Failed", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SuffPref", "[", 
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Attributes[\>\"", ",", 
           "1"}], "]"}], ",", 
         RowBox[{"a", "=", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"a", "[", 
             RowBox[{"[", 
              RowBox[{"2", ";;", " ", 
               RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
            RowBox[{"a", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "]"}]}], "]"}], ";",
      " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "a", "]"}], "\[NotEqual]", "1"}], ",", "a", 
       ",", 
       RowBox[{"a", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`OptRes`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"OptRes", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"SymbolQ", "[", "x", "]"}]}], ",", "y_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Mapp", "[", 
      RowBox[{"SetAttributes", ",", 
       RowBox[{"{", 
        RowBox[{"Rule", ",", "StringJoin"}], "}"}], ",", "Listable"}], "]"}], 
     ";", 
     RowBox[{
      RowBox[{"StringQ", "[", "y", "]"}], "&&", 
      RowBox[{"StringFreeQ", "[", 
       RowBox[{"y", ",", 
        RowBox[{"\"\<`\>\"", "<>", 
         RowBox[{"ToString", "[", "x", "]"}], "<>", "\"\<`\>\""}]}], 
       "]"}]}]}], ",", 
    RowBox[{
     RowBox[{"Mapp", "[", 
      RowBox[{"ClearAttributes", ",", 
       RowBox[{"{", 
        RowBox[{"Rule", ",", "StringJoin"}], "}"}], ",", "Listable"}], "]"}], 
     ";", "y"}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"StringStringQ", "[", "y", "]"}], ",", "ToExpression", ",", 
          "Evaluate"}], "]"}], "[", 
        RowBox[{"StringReplace", "[", 
         RowBox[{
          RowBox[{"ToString1", "[", "y", "]"}], ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"Rule", "[", 
             RowBox[{
              RowBox[{"StringJoin", "[", 
               RowBox[{
                RowBox[{"Contexts1", "[", "]"}], ",", 
                RowBox[{
                 RowBox[{"ToString", "[", "x", "]"}], "<>", "\"\<`\>\""}]}], 
               "]"}], ",", "\"\<\>\""}], "]"}], "}"}], "]"}]}], "]"}], "]"}], 
       ",", 
       RowBox[{"Mapp", "[", 
        RowBox[{"ClearAttributes", ",", 
         RowBox[{"{", 
          RowBox[{"Rule", ",", "StringJoin"}], "}"}], ",", "Listable"}], 
        "]"}]}], "}"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Def`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Def", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "a", "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"!", 
        RowBox[{"SymbolQ", "[", "x", "]"}]}], "||", 
       RowBox[{"SystemQ", "[", "x", "]"}]}], ",", "$Failed", ",", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{
         RowBox[{"Definition2", "[", "x", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", 
           RowBox[{"-", "2"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "1"}], ",", 
         RowBox[{"a", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "a"}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Def1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Def1", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"!", 
      RowBox[{"SymbolQ", "[", "x", "]"}]}], "||", 
     RowBox[{"SystemQ", "[", "x", "]"}]}], ",", "$Failed", ",", 
    RowBox[{
     RowBox[{"Definition2", "[", "x", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", 
       RowBox[{"-", "2"}]}], "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Attributes1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Attributes1", "[", "x__", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Quiet", "[", 
          RowBox[{"Check", "[", 
           RowBox[{
            RowBox[{"Attributes", "[", "#", "]"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], "]"}], "&"}], ",", 
        RowBox[{"{", "x", "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "1"}], ",", 
      RowBox[{"a", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", "a"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ProcContent`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ProcContent", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"b", "=", 
       RowBox[{
        RowBox[{"SubProcs", "[", "x", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", "f"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", "y_", "]"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"a1", "=", "\"\<$Art2720Kr$\>\""}], ",", 
          RowBox[{"b1", "=", "\"\<\>\""}], ",", 
          RowBox[{"c", "=", 
           RowBox[{"{", "y", "}"}]}], ",", "d", ",", 
          RowBox[{"h", "=", "\"\<\>\""}], ",", "p"}], "}"}], ",", 
        RowBox[{
         RowBox[{"Save", "[", 
          RowBox[{"a1", ",", "y"}], "]"}], ";", " ", 
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"SameQ", "[", 
             RowBox[{"b1", ",", "EndOfFile"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"b1", "=", 
             RowBox[{"Read", "[", 
              RowBox[{"a1", ",", "String"}], "]"}]}], ";", " ", 
            RowBox[{"Map", "[", 
             RowBox[{"ClearAll", ",", 
              RowBox[{
               RowBox[{"SubProcs", "[", "x", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"MemberQ", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\"\< \>\"", ",", "\"\<EndOfFile\>\""}], "}"}], ",", 
                 RowBox[{"ToString", "[", "b1", "]"}]}], "]"}]}], ",", 
              RowBox[{
               RowBox[{"h", "=", 
                RowBox[{"h", "<>", 
                 RowBox[{"ToString", "[", "b1", "]"}]}]}], ";", 
               RowBox[{"Continue", "[", "]"}]}], ",", 
              RowBox[{"d", "=", 
               RowBox[{"Flatten", "[", 
                RowBox[{"StringPosition", "[", 
                 RowBox[{"h", ",", "\"\< := \>\"", ",", "1"}], "]"}], 
                "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"d", "==", 
               RowBox[{"{", "}"}]}], " ", ",", 
              RowBox[{
               RowBox[{"h", "=", "\"\<\>\""}], ";", 
               RowBox[{"Continue", "[", "]"}]}], ",", 
              RowBox[{
               RowBox[{"p", "=", 
                RowBox[{"StringTake", "[", 
                 RowBox[{"h", ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{"d", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
                 "]"}]}], ";", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"!", 
                  RowBox[{"SameQ", "[", 
                   RowBox[{
                    RowBox[{"Quiet", "[", 
                    RowBox[{"ToExpression", "[", "p", "]"}], "]"}], ",", 
                    "$Failed"}], "]"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"c", ",", 
                    RowBox[{"StringTake", "[", 
                    RowBox[{"p", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"p", ",", "\"\<[\>\"", ",", "1"}], "]"}], "]"}], 
                    "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
                    "]"}]}], "]"}], ";", 
                  RowBox[{"h", "=", "\"\<\>\""}]}], ",", "Null"}], "]"}]}]}], 
             "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"a1", "=", 
          RowBox[{"Map", "[", 
           RowBox[{"ToExpression", ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"DeleteFile", "[", 
                RowBox[{"Close", "[", "a1", "]"}], "]"}], ",", "c"}], "}"}], 
             "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", " ", 
         RowBox[{"DeleteDuplicates", "[", "a1", "]"}]}]}], "]"}]}], ";", 
     RowBox[{"a", "=", 
      RowBox[{"f", "[", "x", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "a", "]"}], ">", "1"}], ",", 
         RowBox[{"a", "[", 
          RowBox[{"[", 
           RowBox[{"2", ";;", 
            RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
         RowBox[{"{", "}"}]}], "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "b", "]"}], ">", "1"}], ",", 
         RowBox[{"Map", "[", 
          RowBox[{"ToExpression", ",", 
           RowBox[{"Map", "[", 
            RowBox[{"HeadName", ",", 
             RowBox[{"b", "[", 
              RowBox[{"[", 
               RowBox[{"2", ";;", 
                RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}]}], "]"}], ",", 
         RowBox[{"{", "}"}]}], "]"}]}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`CallsInMean`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CallsInMean", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"SymbolQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Context", "[", "x", "]"}]}], ",", "b", ",", "c"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"$Packages", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", 
            RowBox[{"-", "3"}]}], "]"}], "]"}], ",", "a"}], "]"}]}], ",", 
      "$Failed", ",", 
      RowBox[{
       RowBox[{"b", "=", 
        RowBox[{"StringCases", "[", 
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{"FullDefinition", "[", "x", "]"}], "]"}], ",", 
          RowBox[{
          "\"\<\\n \\n\>\"", "~~", "X__", "~~", "\"\< /: \>\"", "~~", "X__", 
           "~~", "\"\<::usage =\>\""}]}], " ", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ToString", "[", "x", "]"}], ",", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Sort", "[", 
            RowBox[{"DeleteDuplicates", "[", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"StringTake", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"{", 
                   RowBox[{"4", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"#", ",", "\"\< /: \>\""}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
                 "]"}], "&"}], ",", "b"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"#", "\[NotEqual]", 
             RowBox[{"ToString", "[", "x", "]"}]}], "&"}]}], "]"}]}], 
        "}"}]}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`CallsInMeansPackage`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CallsInMeansPackage", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ContextQ", "[", "x", "]"}]}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "}"}]}], "}"}]}], ",", "b", ",", "c", ",", 
      RowBox[{"d", "=", "0"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"MemberQ", "[", 
        RowBox[{"$Packages", ",", "x"}], "]"}]}], ",", "$Failed", ",", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"b", "=", 
             RowBox[{"Quiet", "[", 
              RowBox[{"CallsInMean", "[", "#", "]"}], "]"}]}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"b", "===", "$Failed"}], ",", 
              RowBox[{"b", "=", "Null"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"b", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
                 RowBox[{"{", "}"}]}], ",", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{
                  RowBox[{"a", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", "#"}], "]"}], ",", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{
                  RowBox[{"a", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", "#"}], "]"}]}], "]"}],
               ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Set", "[", 
                  RowBox[{"c", ",", 
                   RowBox[{"Length", "[", 
                    RowBox[{"b", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}], ">", 
                 "d"}], ",", 
                RowBox[{"d", "=", "c"}], ",", "Null"}], "]"}]}], "]"}]}], 
           "}"}], "&"}], ",", 
         RowBox[{"CNames", "[", "x", "]"}]}], "]"}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"a", "\[Equal]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "}"}], ",", 
            RowBox[{"{", "}"}]}], "}"}]}], ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b"}], "}"}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`HeadName`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HeadName", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"HeadingQ", "[", "x", "]"}], "||", 
     RowBox[{"HeadingQ1", "[", "x", "]"}]}]}], "]"}], ":=", 
  RowBox[{"StringTake", "[", 
   RowBox[{"x", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"StringPosition", "[", 
          RowBox[{"x", ",", "\"\<[\>\"", ",", "1"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", "-", " ", "1"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`HeadName1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HeadName1", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "a", "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"ExpressionQ", "[", 
        RowBox[{
         RowBox[{"ToString", "[", 
          RowBox[{"Unique", "[", "\"\<gs\>\"", "]"}], "]"}], "<>", "x", "<>", 
         "\"\<:=74\>\""}], "]"}]}], ",", "$Failed", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"SuffPref", "[", 
          RowBox[{"x", ",", "\"\<]\>\"", ",", "2"}], "]"}], "&&", 
         RowBox[{"!", 
          RowBox[{"SuffPref", "[", 
           RowBox[{"x", ",", "\"\<[\>\"", ",", "1"}], "]"}]}], "&&", 
         RowBox[{"SymbolQ", "[", 
          RowBox[{"a", "=", 
           RowBox[{"StringTake", "[", 
            RowBox[{"x", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{"StringPosition", "[", 
                   RowBox[{"x", ",", "\"\<[\>\""}], "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
            "]"}]}], "]"}]}], ",", "a", ",", "$Failed"}], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`UnDef`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UnDef", "[", 
   RowBox[{"x_", ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", "y", "}"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Head2", "[", "x", "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "\[NotEqual]", 
         RowBox[{"{", "}"}]}], "&&", 
        RowBox[{"!", 
         RowBox[{"HowAct", "[", "y", "]"}]}]}], ",", 
       RowBox[{"y", "=", "b"}]}], "]"}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"b", "===", "Symbol"}], ",", "True", ",", "False"}], "]"}]}]}],
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`RemovedQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RemovedQ", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"StringTake", "[", 
            RowBox[{"#1", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{
                RowBox[{"Flatten", "[", 
                 RowBox[{"StringPosition", "[", 
                  RowBox[{"#1", ",", "\"\<`\>\""}], "]"}], "]"}], 
                "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
              "}"}]}], "]"}], "&"}], ")"}], "/@", 
         RowBox[{"Contexts", "[", "]"}]}], "]"}]}], ",", "b"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ4", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"NamesContext", "[", "#1", "]"}], "&"}], ")"}], "/@", 
          "a"}], "]"}], ",", 
        RowBox[{"ToString", "[", "x", "]"}]}], "]"}], ",", "False", ",", 
      "True"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`CsProcsFuncs`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CsProcsFuncs", "[", "]"}], ":=", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"CNames", "[", "\"\<Global`\>\"", "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"ProcQ", "[", "#", "]"}], "||", 
      RowBox[{"FunctionQ", "[", "#", "]"}]}], "&"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ToDefOptPF`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ToDefOptPF", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", 
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"p", "=", 
       RowBox[{"ToString", "[", "x", "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"\"\<Attributes[\>\"", "<>", "p", "<>", "\"\<]\>\""}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"\"\<ClearAllAttributes[\>\"", "<>", "p", "<>", "\"\<]\>\""}], 
       "]"}]}], ";", " ", 
     RowBox[{"c", "=", 
      RowBox[{"StringSplit", "[", 
       RowBox[{
        RowBox[{"ToString", "[", 
         RowBox[{"InputForm", "[", 
          RowBox[{"Definition", "[", "x", "]"}], "]"}], "]"}], ",", 
        "\"\<\\n \\n\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "c", "]"}]}], ",", 
       RowBox[{
        RowBox[{"ToExpression", "[", 
         RowBox[{"StringReplace", "[", 
          RowBox[{
           RowBox[{"c", "[", 
            RowBox[{"[", "k", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Context", "[", "x", "]"}], "<>", "p", "<>", 
             "\"\<`\>\""}], "\[Rule]", "\"\<\>\""}]}], "]"}], "]"}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"\"\<SetAttributes[\>\"", "<>", "p", "<>", "\"\<,\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"Sequence", "[", "a", "]"}], "]"}], "<>", "\"\<]\>\""}], 
      "]"}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "c", "]"}], "\[Equal]", "1"}], ",", 
       RowBox[{"c", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "c"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`CsProcsFuncs1`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CsProcsFuncs1", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"CsProcsFuncs", "[", "]"}]}], ",", "b", ",", "c"}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"Definition2", ",", 
        RowBox[{"ToExpression", "[", "a", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"Mapp", "[", 
        RowBox[{"Select", ",", "b", ",", 
         RowBox[{
          RowBox[{"StringFreeQ", "[", 
           RowBox[{"#1", ",", 
            RowBox[{
             RowBox[{"ToString", "[", "#1", "]"}], "<>", "\"\<Options[\>\"", "<>", 
             RowBox[{"ToString", "[", "#1", "]"}], "<>", "\"\<] := \>\""}]}], 
           "]"}], "&"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"Map9", "[", 
        RowBox[{"List", ",", "a", ",", 
         RowBox[{"Map", "[", 
          RowBox[{"Length", ",", "c"}], "]"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"#", ",", "\"\<CsProcsFuncs1\>\""}], "]"}]}], "&"}]}], 
      "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Args`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Args", "[", 
   RowBox[{"P_", ",", "z___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", "Vt"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"CompileFuncQ", "[", "P", "]"}], "||", 
       RowBox[{"BlockFuncModQ", "[", "P", "]"}], "||", 
       RowBox[{"PureFuncQ", "[", "P", "]"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Vt", "[", 
         RowBox[{"y_", "/;", 
          RowBox[{"ListQ", "[", "y", "]"}]}], "]"}], ":=", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"p", "=", "1"}], ",", 
            RowBox[{"q", "=", 
             RowBox[{"{", "}"}]}], ",", "t"}], "}"}], ",", 
          RowBox[{
           RowBox[{"While", "[", 
            RowBox[{
             RowBox[{"p", "\[LessEqual]", 
              RowBox[{"Length", "[", "y", "]"}]}], ",", 
             RowBox[{
              RowBox[{"q", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"q", ",", 
                 RowBox[{
                  RowBox[{"t", "=", 
                   RowBox[{"ToString", "[", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "p", "]"}], "]"}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"StringTake", "[", 
                   RowBox[{"t", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"t", ",", "\"\<_\>\""}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
                   "]"}]}]}], "]"}]}], ";", 
              RowBox[{"p", "++"}]}]}], "]"}], ";", "q"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"CompileFuncQ", "[", "P", "]"}], ",", 
         RowBox[{
          RowBox[{"a", "=", 
           RowBox[{
            RowBox[{"StringSplit", "[", 
             RowBox[{
              RowBox[{"ToString", "[", 
               RowBox[{"InputForm", "[", 
                RowBox[{"Definition2", "[", "P", "]"}], "]"}], "]"}], ",", 
              "\"\<\\n \\n\>\""}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"b", "=", 
           RowBox[{"Quiet", "[", 
            RowBox[{"SubStrSymbolParity1", "[", 
             RowBox[{"a", ",", "\"\<{\>\"", ",", "\"\<}\>\""}], "]"}], 
            "]"}]}], ";", " ", "\[IndentingNewLine]", 
          RowBox[{"b", "=", 
           RowBox[{"Select", "[", 
            RowBox[{"b", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"!", 
                RowBox[{"StringFreeQ", "[", 
                 RowBox[{"#", ",", "\"\<_\>\""}], "]"}]}], "||", 
               RowBox[{"!", 
                RowBox[{"StringFreeQ", "[", 
                 RowBox[{"a", ",", 
                  RowBox[{"\"\< Function[\>\"", "<>", "#"}]}], "]"}]}]}], 
              "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"b", "=", 
           RowBox[{"Mapp", "[", 
            RowBox[{"StringSplit", ",", "b", ",", "\"\<, \>\""}], "]"}]}], 
          ";", " ", 
          RowBox[{"b", "=", 
           RowBox[{"Mapp", "[", 
            RowBox[{"StringReplace", ",", "b", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\"\<{\>\"", "\[Rule]", "\"\<\>\""}], ",", 
               RowBox[{"\"\<}\>\"", "\[Rule]", "\"\<\>\""}]}], "}"}]}], 
            "]"}]}], ";", " ", 
          RowBox[{"b", "=", 
           RowBox[{"Mapp", "[", 
            RowBox[{"Select", ",", "b", ",", 
             RowBox[{
              RowBox[{"StringFreeQ", "[", 
               RowBox[{"#", ",", "\"\<Blank$\>\""}], "]"}], "&"}]}], "]"}]}], 
          ";", 
          RowBox[{"c", "=", 
           RowBox[{"b", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ";", " ", 
          RowBox[{"For", "[", 
           RowBox[{"k", ",", 
            RowBox[{"k", "\[LessEqual]", 
             RowBox[{"Length", "[", "c", "]"}]}], ",", 
            RowBox[{"k", "++"}], ",", 
            RowBox[{"d", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"d", ",", 
               RowBox[{
                RowBox[{"c", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "<>", 
                RowBox[{
                 RowBox[{"b", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", 
                 RowBox[{"[", "k", "]"}], "]"}]}]}], "]"}]}]}], "]"}], ";", 
          " ", 
          RowBox[{"d", "=", 
           RowBox[{"ToExpression", "[", "d", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", "z", "}"}], "\[Equal]", 
             RowBox[{"{", "}"}]}], ",", "d", ",", 
            RowBox[{"Flatten", "[", 
             RowBox[{"Map", "[", 
              RowBox[{"Vt", ",", 
               RowBox[{"{", "d", "}"}]}], "]"}], "]"}]}], "]"}]}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"BlockFuncModQ", "[", "P", "]"}], ",", 
           RowBox[{
            RowBox[{"a", "=", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"HeadPF", "[", "P", "]"}], "}"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{"k", ",", 
              RowBox[{"k", "\[LessEqual]", 
               RowBox[{"Length", "[", "a", "]"}]}], ",", 
              RowBox[{"k", "++"}], ",", 
              RowBox[{"d", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"d", ",", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", "z", "}"}], "\[NotEqual]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"Vt", "[", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<{\>\"", "<>", 
                    RowBox[{"StringTake", "[", 
                    RowBox[{
                    RowBox[{"a", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringLength", "[", 
                    RowBox[{"ToString", "[", "P", "]"}], "]"}], "+", "2"}], 
                    ",", 
                    RowBox[{"-", "2"}]}], "}"}]}], "]"}], "<>", "\"\<}\>\""}],
                     "]"}], "]"}], ",", 
                   RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<{\>\"", "<>", 
                    RowBox[{"StringTake", "[", 
                    RowBox[{
                    RowBox[{"a", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringLength", "[", 
                    RowBox[{"ToString", "[", "P", "]"}], "]"}], "+", "2"}], 
                    ",", 
                    RowBox[{"-", "2"}]}], "}"}]}], "]"}], "<>", "\"\<}\>\""}],
                     "]"}]}], "]"}]}], "]"}]}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "d", "]"}], "\[Equal]", "1"}], ",", 
              RowBox[{"d", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "d"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"a", "=", 
             RowBox[{"StringTake", "[", 
              RowBox[{
               RowBox[{"StringReplace", "[", 
                RowBox[{
                 RowBox[{"ToString", "[", 
                  RowBox[{"InputForm", "[", 
                   RowBox[{"Definition2", "[", "P", "]"}], "]"}], "]"}], ",", 
                 RowBox[{"\"\<Definition2[\>\"", "\[Rule]", "\"\<\>\""}], ",",
                  "1"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"-", "2"}]}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"SuffPref", "[", 
               RowBox[{"a", ",", "\"\<Function[{\>\"", ",", "1"}], "]"}], ",", 
              RowBox[{
               RowBox[{"b", "=", 
                RowBox[{"SubStrSymbolParity1", "[", 
                 RowBox[{"a", ",", "\"\<{\>\"", ",", "\"\<}\>\""}], "]"}]}], 
               ";", " ", "\[IndentingNewLine]", 
               RowBox[{"b", "=", 
                RowBox[{
                 RowBox[{"Select", "[", 
                  RowBox[{"b", ",", 
                   RowBox[{
                    RowBox[{"!", 
                    RowBox[{"StringFreeQ", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{"\"\<Function[\>\"", "<>", "#"}]}], "]"}]}], 
                    "&"}]}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ";", " ", 
               "\[IndentingNewLine]", 
               RowBox[{"a", "=", 
                RowBox[{"StringSplit", "[", 
                 RowBox[{
                  RowBox[{"StringTake", "[", 
                   RowBox[{"b", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "2"}]}], "}"}]}], "]"}], ",", "\"\<, \>\""}],
                  "]"}]}]}], ",", 
              RowBox[{
               RowBox[{"a", "=", 
                RowBox[{"StringReplace", "[", 
                 RowBox[{"a", ",", 
                  RowBox[{"\"\<#\>\"", "\[Rule]", "\"\<$$$$$\>\""}]}], 
                 "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"a", "=", 
                RowBox[{"Map", "[", 
                 RowBox[{"ToString", ",", 
                  RowBox[{"UnDefVars", "[", 
                   RowBox[{"ToExpression", "[", "a", "]"}], "]"}]}], "]"}]}], 
               ";", " ", "\[IndentingNewLine]", 
               RowBox[{"Map", "[", 
                RowBox[{"ToString", ",", 
                 RowBox[{"ToExpression", "[", 
                  RowBox[{"Mapp", "[", 
                   RowBox[{"StringReplace", ",", "a", ",", 
                    RowBox[{"\"\<$$$$$\>\"", "\[Rule]", "\"\<#\>\""}]}], 
                   "]"}], "]"}]}], "]"}]}]}], "]"}]}]}], "]"}]}], "]"}]}], 
      ",", "$Failed"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Args1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Args1", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"b", "=", "1"}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"h", "=", 
       RowBox[{"{", "}"}]}], ",", "d", ",", "p", ",", "t", ",", 
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}]}]}], "}"}], 
    ",", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{"b", ",", 
       RowBox[{"b", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{"b", "++"}], ",", 
       RowBox[{
        RowBox[{"t", "=", 
         RowBox[{"ToString", "[", 
          RowBox[{"Unique", "[", "\"\<agn\>\"", "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"p", "=", 
         RowBox[{"t", "<>", 
          RowBox[{"ToString", "[", "x", "]"}]}]}], ";", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"t", "<>", 
          RowBox[{"a", "[", 
           RowBox[{"[", "b", "]"}], "]"}]}], "]"}], ";", 
        RowBox[{"d", "=", 
         RowBox[{"Unique", "[", "\"\<avz\>\"", "]"}]}], ";", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"h", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ToString", "[", "d", "]"}], ",", "p", ",", "t"}], 
           "}"}]}], "]"}], ";", " ", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"c", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Args", "[", "p", "]"}], ",", 
            RowBox[{
             RowBox[{"BlockFuncModQ", "[", 
              RowBox[{"p", ",", "d"}], "]"}], ";", "d"}]}], "}"}]}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"d", "=", 
         RowBox[{"ToUpperCase", "[", "d", "]"}]}]}]}], "]"}], ";", " ", 
     RowBox[{"Map", "[", 
      RowBox[{"Remove", ",", 
       RowBox[{"Flatten", "[", "h", "]"}]}], "]"}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "c", "]"}], "\[Equal]", "1"}], ",", 
       RowBox[{"c", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "c"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ArgsBFM`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ArgsBFM", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"HeadPF", "[", "x", "]"}], "}"}], "]"}]}], ",", "b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"n", "=", 
       RowBox[{
        RowBox[{"ToString", "[", "x", "]"}], "<>", "\"\<[\>\""}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", "p"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ToExpression", "[", 
          RowBox[{"\"\<{\>\"", "<>", 
           RowBox[{"StringTake", "[", 
            RowBox[{"#", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"StringLength", "[", "n", "]"}], "+", "1"}], ",", 
               RowBox[{"-", "2"}]}], "}"}]}], "]"}], "<>", "\"\<}\>\""}], 
          "]"}], "&"}], ",", "a"}], "]"}]}], ";", 
     RowBox[{"c", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"ToString", ",", "#"}], "]"}], "&"}], ",", "b"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "c", "]"}]}], ",", 
       RowBox[{
        RowBox[{"p", "=", 
         RowBox[{"c", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"d", ",", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"StringTake", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Flatten", "[", 
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"#", ",", "\"\<_\>\""}], "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
              "]"}], "&"}], ",", "p"}], "]"}]}], "]"}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", "y", "}"}], "\[NotEqual]", 
         RowBox[{"{", "}"}]}], "&&", 
        RowBox[{"!", 
         RowBox[{"HowAct", "[", "y", "]"}]}]}], ",", 
       RowBox[{"y", "=", "c"}]}], "]"}], ";", "d"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ArgsBFM1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ArgsBFM1", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b", ",", "c", ",", 
      RowBox[{"a", "=", 
       RowBox[{"ToString2", "[", 
        RowBox[{"Args", "[", "x", "]"}], "]"}]}], ",", "d", ",", 
      RowBox[{"g", "=", 
       RowBox[{"{", "}"}]}], ",", "t"}], "}"}], ",", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"QmultiplePF", "[", "x", "]"}], ",", "a", ",", 
        RowBox[{"{", "a", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"b", ",", "c", ",", "d"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", "}"}]}], "}"}]}], ";", " ", 
        RowBox[{"t", "=", 
         RowBox[{"a", "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], ";", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"b", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"ListQ", "[", 
               RowBox[{"t", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "]"}], ",", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"StringSplit", "[", 
                  RowBox[{"#", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\</;\>\"", ",", "\"\<__\>\"", ",", "\"\<___\>\"", ",", 
                    "\"\<_\>\"", ",", "\"\<:\>\"", ",", "\"\<_:\>\"", ",", 
                    "\"\<_.\>\""}], "}"}]}], "]"}], "&"}], ",", 
                RowBox[{"t", "[", 
                 RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"StringSplit", "[", 
               RowBox[{
                RowBox[{"t", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\</;\>\"", ",", "\"\<__\>\"", ",", "\"\<___\>\"", ",", 
                  "\"\<_\>\"", ",", "\"\<:\>\"", ",", "\"\<_:\>\"", ",", 
                  "\"\<_.\>\""}], "}"}]}], "]"}]}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", 
            RowBox[{"Length", "[", "t", "]"}]}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"c", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"NestListQ", "[", 
               RowBox[{"b", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "]"}], ",", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Map", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#1", "==", "\"\< \>\""}], "||", 
                    RowBox[{"#1", "==", "\"\<\>\""}]}], ",", "Nothing", ",", 
                    RowBox[{"StringTrim", "[", "#1", "]"}]}], "]"}], "&"}], 
                   ",", "#"}], "]"}], "&"}], ",", 
                RowBox[{"b", "[", 
                 RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"#", "\[Equal]", "\"\< \>\""}], "||", 
                    RowBox[{"#1", "==", "\"\<\>\""}]}], ",", "Nothing", ",", 
                   RowBox[{"StringTrim", "[", "#", "]"}]}], "]"}], "&"}], ",", 
                RowBox[{"b", "[", 
                 RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], "]"}]}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", 
            RowBox[{"Length", "[", "b", "]"}]}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"d", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"NestListQ", "[", 
               RowBox[{"c", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "]"}], ",", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Length", "[", "#1", "]"}], "\[Equal]", "1"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    "\"\<Arbitrary\>\""}], "}"}], ",", "#1"}], "]"}], "&"}], 
                ",", 
                RowBox[{"c", "[", 
                 RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", 
                  RowBox[{"c", "[", 
                   RowBox[{"[", "k", "]"}], "]"}], "]"}], "\[Equal]", "1"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"c", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Arbitrary\>\""}],
                  "}"}], ",", 
                RowBox[{"c", "[", 
                 RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], "]"}]}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", 
            RowBox[{"Length", "[", "c", "]"}]}], "}"}]}], "]"}], ";", " ", 
        RowBox[{"d", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "d", "]"}], "\[Equal]", "1"}], ",", 
           RowBox[{"d", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "d"}], "]"}]}], ";", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"g", ",", "d"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"Length", "[", "a", "]"}]}], "}"}]}], "]"}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "g", "]"}], "\[Equal]", "1"}], ",", 
       RowBox[{"g", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "g"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ExtrName`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExtrName", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"n_", "/;", 
     RowBox[{
      RowBox[{"IntegerQ", "[", "n", "]"}], "&&", 
      RowBox[{"n", ">", "0"}]}]}], ",", 
    RowBox[{"m_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "m"}], "]"}]}]}], "]"}], 
  ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", 
      RowBox[{"c", "=", "\"\<\>\""}], ",", "k", ",", 
      RowBox[{"d", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"CharacterRange", "[", 
           RowBox[{"\"\<a\>\"", ",", "\"\<z\>\""}], "]"}], ",", 
          RowBox[{"CharacterRange", "[", 
           RowBox[{"\"\<A\>\"", ",", "\"\<Z\>\""}], "]"}], ",", 
          RowBox[{"CharacterRange", "[", 
           RowBox[{"\"\<\[ScriptA]\>\"", ",", "\"\<\[ScriptZ]\>\""}], "]"}], 
          ",", 
          RowBox[{"CharacterRange", "[", 
           RowBox[{
           "\"\<\[ScriptCapitalA]\>\"", ",", "\"\<\[ScriptCapitalZ]\>\""}], 
           "]"}], ",", " ", 
          RowBox[{"CharacterRange", "[", 
           RowBox[{"\"\<\[Alpha]\>\"", ",", "\"\<\[Sampi]\>\""}], "]"}], ",", 
          RowBox[{"CharacterRange", "[", 
           RowBox[{"\"\<\[CapitalAlpha]\>\"", ",", "\"\<\[CurlyPhi]\>\""}], 
           "]"}], ",", "\"\<$\>\"", ",", 
          RowBox[{"CharacterRange", "[", 
           RowBox[{"\"\<\[GothicA]\>\"", ",", "\"\<\[GothicZ]\>\""}], "]"}], 
          ",", 
          RowBox[{"Map", "[", 
           RowBox[{"ToString", ",", 
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", "9"}], "]"}]}], "]"}]}], "}"}], "]"}]}]}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"m", "\[Equal]", "1"}], ",", 
          RowBox[{"n", "+", "1"}], ",", 
          RowBox[{"n", "-", "1"}]}], "]"}]}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"m", "\[Equal]", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"StringLength", "[", "x", "]"}]}], ",", 
         RowBox[{"k", "\[GreaterEqual]", "1"}]}], "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"m", "\[Equal]", "1"}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{"k", "--"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"a", "=", 
         RowBox[{"StringTake", "[", 
          RowBox[{"x", ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "k"}], "}"}]}], "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"d", ",", "a"}], "]"}], ",", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"m", "\[Equal]", "1"}], ",", 
             RowBox[{"c", "=", 
              RowBox[{"c", "<>", "a"}]}], ",", 
             RowBox[{"c", "=", 
              RowBox[{"a", "<>", "c"}]}]}], "]"}], ";", 
           RowBox[{"Continue", "[", "]"}]}], ",", 
          RowBox[{"Break", "[", "]"}]}], "]"}]}]}], "]"}], ";", "c"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ExtrNames`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExtrNames", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ProcQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"BlockToModule", "[", "x", "]"}]}], ",", "b", ",", "c", ",", 
      "d", ",", "f", ",", 
      RowBox[{"p", "=", 
       RowBox[{"{", "}"}]}], ",", "g", ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"f", ",", "a"}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ToString", "[", 
         RowBox[{"Locals", "[", "x", "]"}], "]"}], ",", 
        RowBox[{"Locals1", "[", "x", "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"b", ",", "c"}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"HeadPF", "[", "x", "]"}], ",", 
        RowBox[{"PureDefinition", "[", "x", "]"}]}], "}"}]}], ";", " ", 
     RowBox[{"g", "=", 
      RowBox[{"StringReplace", "[", 
       RowBox[{"c", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"b", "<>", "\"\< := Module[\>\""}], "\[Rule]", 
           "\"\<\>\""}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"ToString", "[", "f", "]"}], "<>", "\"\<, \>\""}], 
           "\[Rule]", "\"\<\>\""}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"d", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"ListQ", "[", "#", "]"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "#"}], "]"}], "&"}], ",", 
        RowBox[{"StringPosition", "[", 
         RowBox[{"g", ",", 
          RowBox[{"{", 
           RowBox[{"\"\< := \>\"", ",", "\"\< = \>\""}], "}"}]}], "]"}]}], 
       "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "d", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"p", ",", 
         RowBox[{"ExtrName", "[", 
          RowBox[{"g", ",", 
           RowBox[{"d", "[", 
            RowBox[{"[", "k", "]"}], "]"}], ",", 
           RowBox[{"-", "1"}]}], "]"}]}], "]"}]}], "]"}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"p", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"p", ",", 
        RowBox[{
         RowBox[{"#", "\[NotEqual]", "\"\<\>\""}], "&"}]}], "]"}]}], ";", 
     RowBox[{"{", 
      RowBox[{"a", ",", 
       RowBox[{"Complement", "[", 
        RowBox[{"a", ",", "p"}], "]"}], ",", 
       RowBox[{"Complement", "[", 
        RowBox[{"p", ",", "a"}], "]"}]}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DefOpt`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DefOpt", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SymbolQ", "[", "x", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"SystemQ", "[", "x", "]"}], ",", 
           RowBox[{"b", "=", "\"\<Null\>\""}], ",", 
           RowBox[{"ToString1", "[", 
            RowBox[{"Definition", "[", "x", "]"}], "]"}], ",", 
           "\"\<Null\>\""}], "]"}]}], "]"}]}], ",", "b", ",", "c"}], "}"}], 
    ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"SameQ", "[", 
         RowBox[{"a", ",", "\"\<Null\>\""}], "]"}]}], ",", 
       RowBox[{"b", "=", 
        RowBox[{"Quiet", "[", 
         RowBox[{"Context", "[", "x", "]"}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"Quiet", "[", 
         RowBox[{"ContextQ", "[", "b", "]"}], "]"}]}], ",", "\"\<Null\>\"", 
       ",", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"StringReplace", "[", 
          RowBox[{"a", ",", 
           RowBox[{
            RowBox[{"b", "<>", "x", "<>", "\"\<`\>\""}], "->", "\"\<\>\""}]}],
           "]"}]}], ";", 
        RowBox[{"ToExpression", "[", "c", "]"}], ";", " ", "c"}]}], "]"}]}]}],
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DefOpt1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DefOpt1", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ToString", "[", "x", "]"}]}], ",", "b", ",", "c"}], "}"}], 
    ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"SymbolQ", "[", "a", "]"}]}], ",", "$Failed", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SystemQ", "[", "x", "]"}], ",", "x", ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ProcQ", "[", "a", "]"}], "||", 
           RowBox[{"FunctionQ", "[", "a", "]"}]}], ",", 
          RowBox[{
           RowBox[{"b", "=", 
            RowBox[{"Attributes", "[", "x", "]"}]}], ";", 
           RowBox[{"ClearAttributes", "[", 
            RowBox[{"x", ",", "b"}], "]"}], ";", " ", 
           RowBox[{"c", "=", 
            RowBox[{"StringReplace", "[", 
             RowBox[{
              RowBox[{"ToString1", "[", 
               RowBox[{"Definition", "[", "x", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Context", "[", "a", "]"}], "<>", "a", "<>", 
                "\"\<`\>\""}], "->", "\"\<\>\""}]}], "]"}]}], ";", " ", 
           RowBox[{"SetAttributes", "[", 
            RowBox[{"x", ",", "b"}], "]"}], ";", " ", "c"}], ",", "$Failed"}],
          "]"}]}], "]"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DefOptimum`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DefOptimum", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"Quiet", "[", 
     RowBox[{
      RowBox[{"ProcQ", "[", "x", "]"}], "||", 
      RowBox[{"FunctionQ", "[", "x", "]"}]}], "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "\"\<\>\""}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"ToString", "[", "x", "]"}]}], ",", "c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"Context", "[", "x", "]"}]}], ",", 
      RowBox[{"f", "=", 
       RowBox[{"Attributes", "[", "x", "]"}]}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"ClearAttributes", "[", 
      RowBox[{"x", ",", "f"}], "]"}], ";", 
     RowBox[{"Save", "[", 
      RowBox[{"b", ",", "x"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "<", "Infinity"}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"Read", "[", 
          RowBox[{"b", ",", "String"}], "]"}]}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"c", "===", "\"\< \>\""}], ",", 
          RowBox[{"Break", "[", "]"}], ",", 
          RowBox[{"a", "=", 
           RowBox[{"a", "<>", 
            RowBox[{"StringReplace", "[", 
             RowBox[{"c", ",", 
              RowBox[{
               RowBox[{"StringJoin", "[", 
                RowBox[{"d", ",", "b", ",", "\"\<`\>\""}], "]"}], "\[Rule]", 
               "\"\<\>\""}]}], "]"}]}]}]}], "]"}]}]}], "]"}], ";", 
     RowBox[{"DeleteFile", "[", 
      RowBox[{"Close", "[", "b", "]"}], "]"}], ";", " ", 
     RowBox[{"Clear", "[", "x", "]"}], ";", " ", 
     RowBox[{"ToExpression", "[", "a", "]"}], ";", " ", 
     RowBox[{"SetAttributes", "[", 
      RowBox[{"x", ",", "f"}], "]"}], ";", " ", 
     RowBox[{"Definition", "[", "x", "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`OptDefPackage`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"OptDefPackage", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"ContextQ", "[", "x", "]"}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "}"}]}], "}"}]}], ",", "b"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"$Packages", ",", "x"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"StringFreeQ", "[", 
             RowBox[{
              RowBox[{"ToString", "[", 
               RowBox[{"Definition", "[", "#", "]"}], "]"}], ",", 
              RowBox[{"x", "<>", "#", "<>", "\"\<`\>\""}]}], "]"}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{
              RowBox[{"a", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "#"}], "]"}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{
              RowBox[{"a", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "#"}], "]"}]}], "]"}], 
          "&"}], ",", 
         RowBox[{"CNames", "[", "x", "]"}]}], "]"}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "y", "}"}], "\[NotEqual]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"ClearAttributes", "[", 
               RowBox[{"#", ",", 
                RowBox[{"b", "=", 
                 RowBox[{"Attributes", "[", "#", "]"}]}]}], "]"}], ",", 
              RowBox[{"ToExpression", "[", 
               RowBox[{"PureDefinition", "[", "#", "]"}], "]"}], ",", 
              RowBox[{"SetAttributes", "[", 
               RowBox[{"#", ",", "b"}], "]"}]}], "}"}], "&"}], ",", 
           RowBox[{"a", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "Null"}], "]"}], 
       ";", " ", "a"}], ",", "$Failed"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SymbolsFromMx`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SymbolsFromMx", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
       "\"\<mx\>\""}]}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ReadFullFile", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"FromCharacterCode", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "31"}], "]"}]}], "]"}]}], ",", "c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"ContextFromMx", "[", "x", "]"}]}], ",", "h", ",", 
      RowBox[{"p", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "}"}]}], "}"}]}], ",", "t"}], "}"}], ",", 
    RowBox[{
     RowBox[{"h", "=", 
      RowBox[{"StringCases", "[", 
       RowBox[{"a", ",", 
        RowBox[{"Shortest", "[", 
         RowBox[{"d", "~~", "__", "~~", "\"\<`\>\""}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"h", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"StringTake", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"StringLength", "[", "d", "]"}], "+", "1"}], ",", 
                 RowBox[{"-", "2"}]}], "}"}]}], "]"}], "&"}], ",", "h"}], 
           "]"}], ",", 
          RowBox[{
           RowBox[{"SymbolQ", "[", "#", "]"}], "&"}]}], "]"}], "]"}], "]"}]}],
      ";", " ", 
     RowBox[{"c", "=", 
      RowBox[{"StringSplit", "[", 
       RowBox[{"a", ",", "\"\<\.0b\>\""}], "]"}]}], ";", " ", 
     RowBox[{"c", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringTrim", "[", 
          RowBox[{"StringReplace", "[", 
           RowBox[{"#", ",", 
            RowBox[{"GenRules", "[", 
             RowBox[{"b", ",", "\"\<\>\""}], "]"}]}], "]"}], "]"}], "&"}], 
        ",", "c"}], "]"}]}], ";", " ", 
     RowBox[{"c", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"c", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"StringFreeQ", "[", 
           RowBox[{"#", ",", "\"\< \>\""}], "]"}], "&&", 
          RowBox[{"PrintableASCIIQ", "[", "#", "]"}]}], "&"}]}], "]"}]}], ";",
      " ", 
     RowBox[{"c", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"c", ",", 
        RowBox[{
         RowBox[{"SymbolQ", "[", "#", "]"}], "&"}]}], "]"}]}], ";", " ", 
     RowBox[{"c", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"c", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"b", "=", 
             RowBox[{"StringTake", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"LetterQ", "[", "b", "]"}], "&&", 
             RowBox[{"UpperCaseQ", "[", "b", "]"}]}]}], "}"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "&"}]}], "]"}]}], ";", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SystemQ", "[", "#", "]"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"p", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "#"}], "]"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"p", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "#"}], "]"}]}], "]"}], 
        "&"}], ",", "c"}], "]"}], ";", " ", 
     RowBox[{"a", "=", 
      RowBox[{"{", 
       RowBox[{"h", ",", 
        RowBox[{"t", "=", 
         RowBox[{"Sort", "[", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"p", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"StringFreeQ", "[", 
              RowBox[{"#", ",", "\"\<`\>\""}], "]"}], "&"}]}], "]"}], "]"}]}],
         ",", 
        RowBox[{"Sort", "[", 
         RowBox[{"p", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", "y", "}"}], "\[NotEqual]", 
         RowBox[{"{", "}"}]}], "&&", 
        RowBox[{"!", 
         RowBox[{"HowAct", "[", "y", "]"}]}]}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"$Packages", ",", "d"}], "]"}], ",", 
         RowBox[{"y", "=", 
          RowBox[{"{", 
           RowBox[{"h", ",", 
            RowBox[{"MinusList", "[", 
             RowBox[{
              RowBox[{"Sort", "[", 
               RowBox[{"DeleteDuplicates", "[", 
                RowBox[{"Select", "[", 
                 RowBox[{"t", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"Context", "[", "#", "]"}], "\[Equal]", "d"}], "&&", 
                    RowBox[{"!", 
                    RowBox[{"TemporaryQ", "[", "#", "]"}]}]}], "&"}]}], "]"}],
                 "]"}], "]"}], ",", "h"}], "]"}]}], "}"}]}], ",", 
         RowBox[{
          RowBox[{"Get", "[", "x", "]"}], ";", 
          RowBox[{"y", "=", 
           RowBox[{"{", 
            RowBox[{"h", ",", 
             RowBox[{"MinusList", "[", 
              RowBox[{
               RowBox[{"Sort", "[", 
                RowBox[{"DeleteDuplicates", "[", 
                 RowBox[{"Select", "[", 
                  RowBox[{"t", ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Context", "[", "#", "]"}], "\[Equal]", "d"}], "&&", 
                    RowBox[{"!", 
                    RowBox[{"TemporaryQ", "[", "#", "]"}]}]}], "&"}]}], "]"}],
                  "]"}], "]"}], ",", "h"}], "]"}]}], "}"}]}], ";", " ", 
          RowBox[{"RemovePackage", "[", "d", "]"}]}]}], "]"}], ",", "Null"}], 
      "]"}], ";", " ", "a"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`OptDefinition`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"OptDefinition", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"Quiet", "[", 
     RowBox[{
      RowBox[{"ProcQ", "[", "x", "]"}], "||", 
      RowBox[{"FunctionQ", "[", "x", "]"}]}], "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"c", "=", "$Packages"}], ",", "d", ",", 
      RowBox[{"b", "=", 
       RowBox[{
        RowBox[{"Definition2", "[", "x", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}]}], ",", 
      RowBox[{"a", "=", 
       RowBox[{
        RowBox[{"Definition2", "[", "x", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", " ", 
          RowBox[{"-", "2"}]}], "]"}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"ClearAllAttributes", "[", "x", "]"}], ";", 
     RowBox[{"d", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringJoin", "[", 
          RowBox[{"#", ",", 
           RowBox[{
            RowBox[{"ToString", "[", "x", "]"}], "<>", "\"\<`\>\""}]}], "]"}],
          "&"}], ",", "c"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringReplace", "[", 
          RowBox[{"#", ",", 
           RowBox[{"GenRules", "[", 
            RowBox[{"d", ",", "\"\<\>\""}], "]"}]}], "]"}], "&"}], ",", "a"}],
        "]"}], "]"}], ";", " ", 
     RowBox[{"SetAttributes", "[", 
      RowBox[{"x", ",", "b"}], "]"}], ";", 
     RowBox[{"Definition", "[", "x", "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`OptimizedDefPackage`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"OptimizedDefPackage", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
     RowBox[{
      RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
      "\"\<mx\>\""}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ContextFromFile", "[", "x", "]"}]}], ",", "b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "}"}]}], "}"}]}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"a", "===", "$Failed"}], ",", "$Failed", ",", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"$Packages", ",", "a"}], "]"}], ",", 
         RowBox[{"b", "=", "74"}], ",", 
         RowBox[{"Get", "[", "x", "]"}]}], "]"}], ";", 
       RowBox[{"Quiet", "[", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"StringFreeQ", "[", 
              RowBox[{
               RowBox[{"ToString", "[", 
                RowBox[{"Definition", "[", "#", "]"}], "]"}], ",", 
               RowBox[{"a", "<>", "#", "<>", "\"\<`\>\""}]}], "]"}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{
               RowBox[{"c", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "#"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{
                 RowBox[{"c", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", "#"}], "]"}], ",", 
               RowBox[{"Map", "[", 
                RowBox[{"ToExpression", ",", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"{", 
                   RowBox[{"PureDefinition", "[", "#", "]"}], "}"}], "]"}]}], 
                "]"}]}], "}"}]}], "]"}], "&"}], ",", 
          RowBox[{"CNames", "[", "a", "]"}]}], "]"}], "]"}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"b", "===", "74"}], ",", "Null", ",", 
         RowBox[{"RemovePackage", "[", "a", "]"}]}], "]"}], ";", " ", "c"}]}],
      "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`OptimizedMfile`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"OptimizedMfile", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"ContextQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{"FileExtension", "[", "y", "]"}], "\[Equal]", "\"\<m\>\""}]}], 
    ",", "z___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Save", "[", 
        RowBox[{"y", ",", "x"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"CNames", "[", "x", "]"}]}], ",", "c", ",", "c1", ",", "d", 
      ",", "d1", ",", "g", ",", "p", ",", "t", ",", 
      RowBox[{"m", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"n", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"c", "=", 
      RowBox[{"ReadString", "[", "y", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"t", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "<>", "#", "<>", "\"\<`\>\""}], "&"}], ",", "b"}], 
       "]"}]}], ";", " ", 
     RowBox[{"c1", "=", 
      RowBox[{"StringReplace", "[", 
       RowBox[{"c", ",", 
        RowBox[{"GenRules", "[", 
         RowBox[{"t", ",", "\"\<\>\""}], "]"}]}], "]"}]}], ";", " ", 
     RowBox[{"d", "=", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"StringCases", "[", 
        RowBox[{"c1", ",", 
         RowBox[{
         "\"\<Attributes[\>\"", "~~", "X_", "~~", 
          "\"\<$] = {Temporary}\>\""}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", "z", "}"}], "\[NotEqual]", 
         RowBox[{"{", "}"}]}], "&&", 
        RowBox[{"!", 
         RowBox[{"HowAct", "[", "z", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"g", "=", 
              RowBox[{"StringReplace", "[", 
               RowBox[{"#", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"x", "->", "\"\<\>\""}], ",", 
                  RowBox[{"\"\<`\>\"", "->", "\"\<\>\""}]}], "}"}]}], "]"}]}],
              ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"StringFreeQ", "[", 
                RowBox[{"c", ",", "#"}], "]"}], ",", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"m", ",", "g"}], "]"}], ",", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"n", ",", "g"}], "]"}]}], "]"}]}], "}"}], "&"}], ",", 
          "t"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"d1", "=", 
         RowBox[{"Sort", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"StringTake", "[", 
               RowBox[{
                RowBox[{"p", "=", 
                 RowBox[{"StringCases", "[", 
                  RowBox[{"#", ",", 
                   RowBox[{"\"\<[\>\"", "~~", "__", "~~", "\"\<]\>\""}]}], 
                  "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"2", ",", 
                  RowBox[{"-", "2"}]}], "}"}]}], "]"}], "&"}], ",", "d"}], 
            "]"}], "]"}], "]"}]}], ";", " ", 
        RowBox[{"z", "=", 
         RowBox[{"{", 
          RowBox[{"m", ",", "n", ",", "d1"}], "}"}]}]}], ",", "Null"}], "]"}],
      ";", " ", 
     RowBox[{"c", "=", 
      RowBox[{"StringReplace", "[", 
       RowBox[{"c1", ",", 
        RowBox[{"GenRules", "[", 
         RowBox[{"d", ",", "\"\<\>\""}], "]"}]}], "]"}]}], ";", " ", 
     RowBox[{"WriteString", "[", 
      RowBox[{"y", ",", "c"}], "]"}], ";", " ", 
     RowBox[{"Close", "[", "y", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ProcActCallsQ`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ProcActCallsQ", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", "d", ",", 
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"h", "=", "\"\<::usage = \>\""}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Save", "[", 
      RowBox[{
       RowBox[{"b", "=", "\"\<Art27$Kr20\>\""}], ",", "x"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "<", "Infinity"}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"d", "=", 
         RowBox[{"Read", "[", 
          RowBox[{"b", ",", "String"}], "]"}]}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"d", ",", "EndOfFile"}], "]"}], ",", 
          RowBox[{"Break", "[", "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"StringFreeQ", "[", 
              RowBox[{"d", ",", "h"}], "]"}]}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"c", ",", 
              RowBox[{
               RowBox[{"StringSplit", "[", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"d", ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"d", ",", "h"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
                  "]"}], ",", "\"\< /: \>\""}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "]"}]}], "]"}]}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"DeleteFile", "[", 
      RowBox[{"Close", "[", "b", "]"}], "]"}], ";", 
     RowBox[{"c", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"c", ",", 
        RowBox[{
         RowBox[{"SymbolQ", "[", "#", "]"}], "&"}]}], "]"}]}], ";", " ", 
     RowBox[{"b", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{"c", ",", 
          RowBox[{"ToString", "[", "x", "]"}]}], "]"}], ",", 
        RowBox[{"Drop", "[", 
         RowBox[{"c", ",", "1"}], "]"}], ",", "c"}], "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", "y", "}"}], "\[NotEqual]", 
         RowBox[{"{", "}"}]}], "&&", 
        RowBox[{"!", 
         RowBox[{"HowAct", "[", 
          RowBox[{
           RowBox[{"{", "y", "}"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"{", "y", "}"}], "=", 
        RowBox[{"{", "b", "}"}]}]}], "]"}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"b", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", "False", ",", "True"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SubDelStr`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SubDelStr", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"L_", "/;", 
     RowBox[{"ListListQ", "[", "L", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"a", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"!", 
        RowBox[{"L", "\[Equal]", 
         RowBox[{"Select", "[", 
          RowBox[{"L", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"ListQ", "[", "#", "]"}], "&&", 
             RowBox[{
              RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "2"}]}], "&"}]}],
           "]"}]}]}], "||", 
       RowBox[{
        RowBox[{
         RowBox[{"L", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ">", 
        RowBox[{"StringLength", "[", "x", "]"}]}], "||", 
       RowBox[{
        RowBox[{
         RowBox[{"L", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "<", "1"}]}], ",", 
      RowBox[{"Return", "[", 
       RowBox[{"Defer", "[", 
        RowBox[{"SubDelStr", "[", 
         RowBox[{"x", ",", "L"}], "]"}], "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{"k", ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "L", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{"a", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"a", ",", 
            RowBox[{
             RowBox[{"StringTake", "[", 
              RowBox[{"x", ",", 
               RowBox[{"L", "[", 
                RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "->", "\"\<\>\""}]}],
            "]"}]}]}], "]"}], ";", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"x", ",", "a"}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ListListQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListListQ", "[", "L_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ListQ", "[", "L", "]"}], "&&", 
     RowBox[{"L", "\[NotEqual]", 
      RowBox[{"{", "}"}]}], "&&", 
     RowBox[{
      RowBox[{"Length", "[", "L", "]"}], ">=", "1"}], "&&", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"Select", "[", 
        RowBox[{"L", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"ListQ", "[", "#", "]"}], "&&", 
           RowBox[{
            RowBox[{"Length", "[", "#", "]"}], "\[Equal]", 
            RowBox[{"Length", "[", 
             RowBox[{"L", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], "&"}]}], "]"}], 
       "]"}], "\[Equal]", 
      RowBox[{"Length", "[", "L", "]"}]}]}], ",", "True", ",", "False"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`RestListList`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RestListList", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ListListQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"b", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"x", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"Length", "[", "x", "]"}]}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "=", 
         RowBox[{"{", "}"}]}], ";", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"a", ",", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "c"}], "}"}]}], "]"}], ";", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"d", ",", "a"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "b"}], "}"}]}], "]"}], ";", "d"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`RestListList1`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RestListList1", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ListListQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Length", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"x", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", "d", ",", "k"}], "}"}], ",", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "+", 
          RowBox[{"b", "*", "#"}]}], "&"}], ",", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", 
          RowBox[{"a", "-", "1"}]}], "]"}]}], "]"}]}], ";", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"c", ",", 
         RowBox[{
          RowBox[{"Flatten", "[", "x", "]"}], "[", 
          RowBox[{"[", "d", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "b"}], "}"}]}], "]"}], ";", "c"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ListRulesQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListRulesQ", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ListQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"RuleQ", "[", "#", "]"}], "&"}], ",", 
      RowBox[{"Flatten", "[", "x", "]"}]}], "]"}], "]"}], "===", 
   RowBox[{"{", "True", "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`AcNb`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AcNb", "[", "]"}], ":=", 
  RowBox[{
   RowBox[{"StringSplit", "[", 
    RowBox[{
     RowBox[{"NotebookFileName", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<\\\\\>\"", ",", "\"\</\>\""}], "}"}]}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"-", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`FileDirStForm`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FileDirStForm", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", "=", 
      RowBox[{"StringReplace", "[", 
       RowBox[{
        RowBox[{"ToLowerCase", "[", "x", "]"}], ",", 
        RowBox[{"\"\</\>\"", "\[Rule]", "\"\<\\\\\>\""}]}], "]"}]}], "}"}], 
    ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"StringLength", "[", "a", "]"}], "\[Equal]", "3"}], "&&", 
       RowBox[{
        RowBox[{"StringTake", "[", 
         RowBox[{"a", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "2"}], "}"}]}], "]"}], "\[Equal]", 
        "\"\<:\>\""}]}], ",", "a", ",", 
      RowBox[{"StrDelEnds", "[", 
       RowBox[{"a", ",", "\"\<\\\\\>\"", ",", "2"}], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SetPathSeparator`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetPathSeparator", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"MemberQ", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\</\>\"", ",", "\"\<\\\\\>\""}], "}"}], ",", "x"}], "]"}]}],
    "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{
     RowBox[{"Unprotect", "[", "$PathnameSeparator", "]"}], ";", 
     RowBox[{"$PathnameSeparator", "=", "x"}], ";", 
     RowBox[{"SetAttributes", "[", 
      RowBox[{"$PathnameSeparator", ",", "Protected"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`PartialSums`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PartialSums", "[", 
   RowBox[{"L_", "/;", 
    RowBox[{
     RowBox[{"ListQ", "[", "L", "]"}], "||", 
     RowBox[{
      RowBox[{"StringQ", "[", "L", "]"}], "&&", 
      RowBox[{"ListQ", "[", 
       RowBox[{"ToExpression", "[", "L", "]"}], "]"}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"ToExpression", "[", "L", "]"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", "j"}], "}"}], ",", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "b", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"a", ",", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"b", "[", 
            RowBox[{"[", "j", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "k"}], "}"}]}], "]"}]}], "]"}]}], "]"}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"StringQ", "[", "L", "]"}], ",", 
       RowBox[{"ToExpression", "[", 
        RowBox[{"L", "<>", "\"\< =\>\"", " ", "<>", 
         RowBox[{"ToString", "[", "a", "]"}]}], "]"}], ",", "a"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ListAssign`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListAssign", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"ListQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"SymbolQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", "}"}]}], ",", "b"}], "}"}], ",", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"a", ",", 
          RowBox[{"Unique", "[", "y", "]"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", 
         RowBox[{"Length", "[", "x", "]"}]}], "}"}]}], "]"}], ";", 
     RowBox[{"b", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"ToString", ",", "a"}], "]"}]}], ";", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
       RowBox[{"ToString", "[", "a", "]"}], "<>", "\"\<=\>\"", "<>", 
       RowBox[{"ToString1", "[", "x", "]"}]}], "]"}], ";", 
     RowBox[{"{", 
      RowBox[{"b", ",", "a"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`FullNestListQ`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FullNestListQ", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ListQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{
        RowBox[{"ListLevels", "[", "x", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}]}], ",", 
      RowBox[{"b", "=", "x"}], ",", "c"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"a", "\[Equal]", "0"}], ",", "False", ",", 
      RowBox[{
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"NestListQ", "[", "b", "]"}]}], ",", 
           RowBox[{
            RowBox[{"c", "=", "False"}], ";", 
            RowBox[{"Return", "[", "]"}]}], ",", 
           RowBox[{
            RowBox[{"c", "=", "True"}], ";", 
            RowBox[{"b", "=", 
             RowBox[{"Flatten", "[", 
              RowBox[{"b", ",", "1"}], "]"}]}]}]}], "]"}], ",", 
         RowBox[{"{", "a", "}"}]}], "]"}], ";", "c"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ListAppValue`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListAppValue", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"ListQ", "[", "x", "]"}]}], ",", "y_"}], "]"}], ":=", 
  RowBox[{"Quiet", "[", 
   RowBox[{"x", "=", 
    RowBox[{"PadLeft", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"Length", "[", "x", "]"}], ",", "y"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`LoadFile`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LoadFile", "[", 
   RowBox[{"F_", "/;", 
    RowBox[{"StringQ", "[", "F", "]"}]}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<nb\>\"", ",", "\"\<m\>\"", ",", "\"\<mx\>\"", ",", 
            "\"\<txt\>\"", ",", "\"\<\>\""}], "}"}], ",", 
          RowBox[{"FileExtension", "[", "F", "]"}]}], "]"}]}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{
        "\"\<File <\>\"", "<>", "F", "<>", 
         "\"\<> has an inadmissible type\>\""}], "]"}], ",", 
       RowBox[{
        RowBox[{"a", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"FindFile", "[", "F", "]"}], "}"}], "]"}]}], ";", " ", 
        RowBox[{"a", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"a", "===", 
            RowBox[{"{", "$Failed", "}"}]}], ",", 
           RowBox[{"SearchFile", "[", "F", "]"}], ",", "a"}], "]"}]}], ";", 
        RowBox[{"$Load$Files$", "=", "a"}]}]}], "]"}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"a", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{
        "\"\<File <\>\"", "<>", "F", "<>", "\"\<> has not been found\>\""}], 
        "]"}], ",", 
       RowBox[{
        RowBox[{"Quiet", "[", 
         RowBox[{"Check", "[", 
          RowBox[{
           RowBox[{"Get", "[", 
            RowBox[{"$Load$Files$", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
           RowBox[{"c", "=", 
            RowBox[{"{", "$Failed", "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Syntax", "::", "sntxc"}], ",", 
             RowBox[{"Syntax", "::", "sntxi"}]}], "}"}]}], "]"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"c", "===", 
           RowBox[{"{", "$Failed", "}"}]}], ",", 
          RowBox[{"\"\<File <\>\"", "<>", 
           RowBox[{"$Load$Files$", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "<>", 
           "\"\<> has inadmissible syntax\>\""}], ",", 
          RowBox[{"\"\<File <\>\"", "<>", 
           RowBox[{"$Load$Files$", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "<>", 
           "\"\<> has been loaded;\\n$Load$Files$ defines the list with full \
paths to the found files.\>\""}]}], "]"}]}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{
        "\"\<File <\>\"", "<>", "F", "<>", "\"\<> has not been found\>\""}], 
        "]"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`NbName`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NbName", "[", "]"}], ":=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"StringReplace", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<NotebookObject[<<\>\"", "->", "\"\<\>\""}], ",", 
         RowBox[{"\"\<]\>\"", "->", "\"\<\>\""}], ",", 
         RowBox[{"\"\<>>\>\"", "->", "\"\<\>\""}]}], "}"}]}], "]"}], "&"}], 
    ",", 
    RowBox[{"Map", "[", 
     RowBox[{"ToString", ",", 
      RowBox[{"Notebooks", "[", "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`AllCurrentNb`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AllCurrentNb", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Notebooks", "[", "]"}]}], ",", "b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", "d", ",", "k"}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"SubsString", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<<<\>\"", ",", "\"\<>>\>\""}], "}"}], ",", "0"}], 
           "]"}], "&"}], ",", 
         RowBox[{"Map", "[", 
          RowBox[{"ToString", ",", "a"}], "]"}]}], "]"}], "]"}]}], ";", " ", 
     RowBox[{"d", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Quiet", "[", 
          RowBox[{"Check", "[", 
           RowBox[{
            RowBox[{"NotebookFileName", "[", "#", "]"}], ",", 
            "\"\<nb has been not saved\>\""}], "]"}], "]"}], "&"}], ",", 
        "a"}], "]"}]}], ";", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"c", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"b", "[", 
            RowBox[{"[", "k", "]"}], "]"}], ",", 
           RowBox[{"d", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{"Length", "[", "b", "]"}]}], "}"}]}], "]"}], ";", " ", 
     RowBox[{"c", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"c", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "\[NotEqual]", 
          "\"\<Messages\>\""}], "&"}]}], "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "c", "]"}], "\[Equal]", "1"}], ",", 
       RowBox[{"Flatten", "[", "c", "]"}], ",", "c"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`NotebookSave1`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NotebookSave1", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"StringQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Notebooks", "[", "]"}]}], ",", "b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", "d", ",", "k"}], "}"}], ",", " ", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"SubsString", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<<<\>\"", ",", "\"\<>>\>\""}], "}"}], ",", "0"}], 
           "]"}], "&"}], ",", 
         RowBox[{"Map", "[", 
          RowBox[{"ToString", ",", "a"}], "]"}]}], "]"}], "]"}]}], ";", " ", 
     RowBox[{"d", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Quiet", "[", 
          RowBox[{"Check", "[", 
           RowBox[{
            RowBox[{"NotebookFileName", "[", "#", "]"}], ",", "$Failed"}], 
           "]"}], "]"}], "&"}], ",", "a"}], "]"}]}], ";", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"c", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"b", "[", 
            RowBox[{"[", "k", "]"}], "]"}], ",", 
           RowBox[{"d", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{"Length", "[", "b", "]"}]}], "}"}]}], "]"}], ";", "  ", 
     RowBox[{"c", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "c", "]"}], "\[Equal]", "1"}], ",", 
        RowBox[{"Flatten", "[", "c", "]"}], ",", "c"}], "]"}]}], ";", " ", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"c", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
           RowBox[{"FileNameTake", "[", "x", "]"}]}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{"c", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "===", "$Failed"}]}], ",", 
         RowBox[{
          RowBox[{"NotebookSave", "[", 
           RowBox[{
            RowBox[{"a", "[", 
             RowBox[{"[", "k", "]"}], "]"}], ",", "y"}], "]"}], ";", 
          RowBox[{"Return", "[", "y", "]"}]}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"c", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "==", 
            RowBox[{"FileNameTake", "[", "x", "]"}]}], ",", 
           RowBox[{
            RowBox[{"NotebookSave", "[", 
             RowBox[{
              RowBox[{"a", "[", 
               RowBox[{"[", "k", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"c", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ";", " ", 
            RowBox[{"Return", "[", 
             RowBox[{
              RowBox[{"c", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ",", "Null"}], "]"}]}],
         "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{"Length", "[", "c", "]"}]}], "}"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`RealProcQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RealProcQ", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"b", "=", "\"\< = \>\""}], ",", "c", ",", "d", ",", 
      RowBox[{"k", "=", "1"}], ",", "p"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"ProcQ", "[", "x", "]"}]}], ",", "False", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"ModuleQ", "[", "x", "]"}], ",", "True", ",", 
        RowBox[{
         RowBox[{"a", "=", 
          RowBox[{"Locals1", "[", "x", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"c", "=", 
          RowBox[{"PureDefinition", "[", "x", "]"}]}], ";", " ", 
         RowBox[{"d", "=", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], "&"}], ",", 
            RowBox[{"StringPosition", "[", 
             RowBox[{"c", ",", "b"}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"p", "=", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ExprOfStr", "[", 
              RowBox[{"c", ",", "#", ",", 
               RowBox[{"-", "1"}], ",", 
               RowBox[{"{", 
                RowBox[{"\"\< \>\"", ",", "\"\<{\>\"", ",", "\"\<[\>\""}], 
                "}"}]}], "]"}], "&"}], ",", "d"}], "]"}]}], ";", " ", 
         RowBox[{"p", "=", 
          RowBox[{"DeleteDuplicates", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Map", "[", 
             RowBox[{"StrToList", ",", "p"}], "]"}], "]"}], "]"}]}], ";", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"p", "\[Equal]", "a"}], ",", "True", ",", "False"}], 
          "]"}]}]}], "]"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ContOfContext`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContOfContext", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ContextQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", "h", ",", 
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"a", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"CNames", "[", "x", "]"}], ",", 
         RowBox[{
          RowBox[{"#", "\[NotEqual]", "\"\<a\>\""}], "&"}]}], "]"}]}]}], 
     "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"a", "\[Equal]", 
       RowBox[{"{", "}"}]}], ",", "$Failed", ",", 
      RowBox[{
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "a", "]"}]}], ",", 
         RowBox[{
          RowBox[{"h", "=", 
           RowBox[{"a", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"StringFreeQ", "[", 
             RowBox[{
              RowBox[{"StringReplace", "[", 
               RowBox[{
                RowBox[{"ToString", "[", 
                 RowBox[{"Definition4", "[", "h", "]"}], "]"}], ",", 
                RowBox[{"\"\<\\\\n \\\\n\>\"", "\[Rule]", "\"\<\>\""}]}], 
               "]"}], ",", 
              RowBox[{"x", "<>", "h", "<>", "\"\<`\>\""}]}], "]"}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"c", ",", "h"}], "]"}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"b", ",", "h"}], "]"}]}], "]"}], ";", 
          RowBox[{"k", "++"}]}]}], "]"}], ";", 
       RowBox[{"{", 
        RowBox[{"b", ",", "c"}], "}"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SearchDir`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SearchDir", "[", 
   RowBox[{"d_", "/;", 
    RowBox[{"StringQ", "[", "d", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Adrive", "[", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"\"\<\\\\\>\"", "<>", 
        RowBox[{"ToLowerCase", "[", 
         RowBox[{"StringTrim", "[", 
          RowBox[{"d", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\"\<\\\\\>\"", "|", "\"\</\>\""}], ")"}], "..."}]}], 
          "]"}], "]"}], "<>", "\"\<\\\\\>\""}]}], ",", "c", ",", 
      RowBox[{"t", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"g", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", "p", ",", "v"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"p", "=", 
         RowBox[{"a", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", 
        RowBox[{"c", "=", 
         RowBox[{"Map", "[", 
          RowBox[{"ToLowerCase", ",", 
           RowBox[{"Quiet", "[", 
            RowBox[{"FileNames", "[", 
             RowBox[{"\"\<*\>\"", ",", 
              RowBox[{"p", "<>", "\"\<:\\\\\>\""}], ",", "Infinity"}], "]"}], 
            "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"!", 
               RowBox[{"StringFreeQ", "[", 
                RowBox[{"#", ",", "b"}], "]"}]}], "||", 
              RowBox[{
               RowBox[{"SuffPref", "[", 
                RowBox[{"#", ",", "b", ",", "2"}], "]"}], "&&", 
               RowBox[{"DirQ", "[", "#", "]"}]}]}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"t", ",", "#"}], "]"}], ",", "Null"}], "]"}], "&"}], 
          ",", "c"}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "t", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"p", "=", 
         RowBox[{
          RowBox[{"t", "[", 
           RowBox[{"[", "k", "]"}], "]"}], "<>", "\"\<\\\\\>\""}]}], ";", 
        RowBox[{"a", "=", 
         RowBox[{"StringPosition", "[", 
          RowBox[{"p", ",", "b"}], "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"a", "\[Equal]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"Continue", "[", "]"}], ",", 
          RowBox[{
           RowBox[{"a", "=", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "&"}], ",", "a"}], "]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"DirectoryQ", "[", 
                 RowBox[{"v", "=", 
                  RowBox[{"StringTake", "[", 
                   RowBox[{"p", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"#", "-", "1"}]}], "}"}]}], "]"}]}], "]"}], ",", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"g", ",", "v"}], "]"}], ",", "Null"}], "]"}], "&"}], 
             ",", "a"}], "]"}]}]}], "]"}]}]}], "]"}], ";", 
     RowBox[{"DeleteDuplicates", "[", "g", "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SearchFile`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SearchFile", "[", 
   RowBox[{"F_", "/;", 
    RowBox[{"StringQ", "[", "F", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "f", ",", "dir", ",", 
      RowBox[{"h", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{
         RowBox[{"ToUpperCase", "[", "F", "]"}], ",", 
         RowBox[{"\"\</\>\"", "\[Rule]", "\"\<\\\\\>\""}]}], "]"}]}], ",", 
      "k"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", "f"}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"ToUpperCase", "[", "#", "]"}], "<>", "\"\<:\\\\\>\""}], 
           "&"}], ",", 
          RowBox[{"Adrive", "[", "]"}]}], "]"}], ",", 
        RowBox[{"{", "}"}], ",", 
        RowBox[{
         RowBox[{"ToString", "[", 
          RowBox[{"Unique", "[", "\"\<d\>\"", "]"}], "]"}], "<>", 
         "\"\<.txt\>\""}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dir", "[", 
       RowBox[{"y_", "/;", 
        RowBox[{"StringQ", "[", "y", "]"}]}], "]"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "b", ",", "c", ",", "v"}], "}"}], ",", 
        RowBox[{
         RowBox[{"Run", "[", 
          RowBox[{
          "\"\<Dir \>\"", "<>", "\"\</A/B/S \>\"", "<>", "y", "<>", 
           "\"\< > \>\"", "<>", "f"}], "]"}], ";", " ", 
         RowBox[{"c", "=", 
          RowBox[{"{", "}"}]}], ";", 
         RowBox[{"Label", "[", "b", "]"}], ";", " ", 
         RowBox[{"a", "=", 
          RowBox[{"StringReplace", "[", 
           RowBox[{
            RowBox[{"ToUpperCase", "[", 
             RowBox[{"ToString", "[", 
              RowBox[{"v", "=", 
               RowBox[{"Read", "[", 
                RowBox[{"f", ",", "String"}], "]"}]}], "]"}], "]"}], ",", 
            RowBox[{"\"\</\>\"", "\[Rule]", "\"\<\\\\\>\""}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"a", "\[Equal]", "\"\<ENDOFFILE\>\""}], ",", 
           RowBox[{
            RowBox[{"Close", "[", "f", "]"}], ";", 
            RowBox[{"DeleteFile", "[", "f", "]"}], ";", " ", 
            RowBox[{"Return", "[", "c", "]"}]}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"SuffPref", "[", 
              RowBox[{"a", ",", "h", ",", "2"}], "]"}], ",", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"FileExistsQ", "[", "v", "]"}], ",", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"c", ",", "v"}], "]"}]}], "]"}], ";", 
              RowBox[{"Goto", "[", "b", "]"}]}], ",", 
             RowBox[{"Goto", "[", "b", "]"}]}], "]"}]}], "]"}]}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"b", ",", 
         RowBox[{"dir", "[", 
          RowBox[{"a", "[", 
           RowBox[{"[", "k", "]"}], "]"}], "]"}]}], "]"}]}], "]"}], ";", 
     RowBox[{"Flatten", "[", "b", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SearchFile1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SearchFile1", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", 
      RowBox[{"f", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"PathToFileQ", "[", "x", "]"}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"FileExistsQ", "[", "x", "]"}], ",", "x", ",", 
        RowBox[{"{", "}"}]}], "]"}], ",", " ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"a", "=", "$Path"}], ";", " ", 
       RowBox[{"f", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"FileExistsQ", "[", 
                RowBox[{"#", "<>", "\"\<\\\\\>\"", "<>", 
                 RowBox[{"ToUpperCase", "[", "x", "]"}]}], "]"}], ",", "#", 
               ",", "\"\<Null\>\""}], "]"}], "&"}], ",", "a"}], "]"}], ",", 
          RowBox[{
           RowBox[{"#", "\[NotEqual]", "\"\<Null\>\""}], "&"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"f", "\[NotEqual]", 
          RowBox[{"{", "}"}]}], ",", "f", ",", " ", 
         RowBox[{
          RowBox[{"d", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "<>", "\"\<:\\\\\>\""}], "&"}], ",", 
             RowBox[{"Adrive", "[", "]"}]}], "]"}]}], ";", " ", 
          RowBox[{"For", "[", 
           RowBox[{"k", ",", 
            RowBox[{"k", "\[LessEqual]", 
             RowBox[{"Length", "[", "d", "]"}]}], ",", 
            RowBox[{"k", "++"}], ",", 
            RowBox[{
             RowBox[{"a", "=", 
              RowBox[{"Quiet", "[", 
               RowBox[{"FileNames", "[", 
                RowBox[{"\"\<*\>\"", ",", 
                 RowBox[{"d", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], ",", "Infinity"}], "]"}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"f", "=", 
              RowBox[{"Join", "[", 
               RowBox[{"f", ",", 
                RowBox[{"Select", "[", 
                 RowBox[{
                  RowBox[{"Map", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"FileExistsQ", "[", "#", "]"}], "&&", 
                    RowBox[{"SuffPref", "[", 
                    RowBox[{
                    RowBox[{"ToUpperCase", "[", "#", "]"}], ",", 
                    RowBox[{"\"\<\\\\\>\"", "<>", 
                    RowBox[{"ToUpperCase", "[", "x", "]"}]}], ",", "2"}], 
                    "]"}]}], ",", "#", ",", "\"\<Null\>\""}], "]"}], "&"}], 
                    ",", "a"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"#", "\[NotEqual]", "\"\<Null\>\""}], "&"}]}], 
                 "]"}]}], "]"}]}]}]}], "]"}], ";", "  ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"f", "==", 
             RowBox[{"{", "}"}]}], ",", 
            RowBox[{"{", "}"}], ",", "f"}], "]"}]}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ExtrPackName`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExtrPackName", "[", 
   RowBox[{
    RowBox[{"F_", "/;", 
     RowBox[{"StringQ", "[", "F", "]"}]}], ",", 
    RowBox[{"N_", "/;", 
     RowBox[{"StringQ", "[", "N", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "Art", ",", "Kr"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"FileExistsQ", "[", "F", "]"}], "&&", 
        RowBox[{
         RowBox[{"FileExtension", "[", "F", "]"}], "\[Equal]", "\"\<m\>\""}], 
        "&&", 
        RowBox[{
         RowBox[{"StringTake", "[", 
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"ContextFromFile", "[", "F", "]"}], "]"}], ",", 
           RowBox[{"-", "1"}]}], "]"}], "\[Equal]", "\"\<`\>\""}]}], ",", 
       RowBox[{"a", "=", 
        RowBox[{"OpenRead", "[", "F", "]"}]}], ",", 
       RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Read", "[", 
         RowBox[{"a", ",", "String"}], "]"}], "\[NotEqual]", 
        "\"\<(* ::Package:: *)\>\""}], ",", 
       RowBox[{
        RowBox[{"Close", "[", "a", "]"}], ";", "$Failed"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"c", ",", "d"}], "}"}], "=", 
        RowBox[{"{", 
         RowBox[{"\"\<\>\"", ",", 
          RowBox[{"StringReplace", "[", 
           RowBox[{"\"\<(*Begin[\\\"`Z`\\\"]*)\>\"", ",", 
            RowBox[{"\"\<Z\>\"", "\[Rule]", "N"}]}], "]"}]}], "}"}]}]}], 
      "]"}], ";", " ", 
     RowBox[{"Label", "[", "Art", "]"}], ";", 
     RowBox[{"b", "=", 
      RowBox[{"Read", "[", 
       RowBox[{"a", ",", "String"}], "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"b", "===", "EndOfFile"}], ",", 
       RowBox[{
        RowBox[{"Close", "[", "a", "]"}], ";", " ", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{
         "\"\<Definition of \>\"", "<>", "N", "<>", 
          "\"\< is absent in file <\>\"", "<>", "F", "<>", "\"\<>\>\""}], 
         "]"}]}], ",", "Null"}], "]"}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"b", "\[NotEqual]", "d"}], ",", 
       RowBox[{"Goto", "[", "Art", "]"}], ",", 
       RowBox[{
        RowBox[{"Label", "[", "Kr", "]"}], ";", 
        RowBox[{"b", "=", 
         RowBox[{"StringTake", "[", 
          RowBox[{
           RowBox[{"Read", "[", 
            RowBox[{"a", ",", "String"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", 
             RowBox[{"-", "3"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"c", "=", 
         RowBox[{"c", "<>", "b", "<>", "\"\< \>\""}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"b", "\[Equal]", "\"\<End[]\>\""}], ",", 
          RowBox[{
           RowBox[{"Close", "[", "a", "]"}], ";", " ", 
           RowBox[{"Return", "[", 
            RowBox[{"ToExpression", "[", 
             RowBox[{"StringTake", "[", 
              RowBox[{"c", ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"-", "8"}]}], "}"}]}], "]"}], "]"}], "]"}]}], ",", 
          RowBox[{"Goto", "[", "Kr", "]"}]}], "]"}]}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`GV`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GV", "[", "]"}], ":=", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Names", "[", "\"\<*\>\"", "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"StringTake", "[", 
       RowBox[{"#", ",", "1"}], "]"}], "\[Equal]", "\"\<$\>\""}], "&"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SubsDel`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SubsDel", "[", 
   RowBox[{
    RowBox[{"S_", "/;", 
     RowBox[{"StringQ", "[", "S", "]"}]}], ",", 
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{"ListQ", "[", "y", "]"}], "&&", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"StringQ", ",", "y"}], "]"}], "]"}], "\[Equal]", 
       RowBox[{"{", "True", "}"}]}], "&&", 
      RowBox[{
       RowBox[{"Plus", "[", 
        RowBox[{"Sequences", "[", 
         RowBox[{"Map", "[", 
          RowBox[{"StringLength", ",", "y"}], "]"}], "]"}], "]"}], "\[Equal]", 
       RowBox[{"Length", "[", "y", "]"}]}]}]}], ",", 
    RowBox[{"p_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "p"}], "]"}]}]}], "]"}], 
  ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b", ",", 
      RowBox[{"c", "=", "x"}], ",", "d", ",", 
      RowBox[{"h", "=", 
       RowBox[{"StringLength", "[", "S", "]"}]}], ",", "k"}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"StringFreeQ", "[", 
        RowBox[{"S", ",", "x"}], "]"}], ",", 
       RowBox[{"Return", "[", "S", "]"}], ",", 
       RowBox[{"b", "=", 
        RowBox[{
         RowBox[{"StringPosition", "[", 
          RowBox[{"S", ",", "x"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"p", "==", "1"}], ",", 
          RowBox[{
           RowBox[{"b", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ",", 
          RowBox[{
           RowBox[{"b", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}]}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"p", "\[Equal]", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", "h"}], ",", 
         RowBox[{"k", ">=", "1"}]}], "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"p", "\[Equal]", "1"}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{"k", "--"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"d", "=", 
         RowBox[{"StringTake", "[", 
          RowBox[{"S", ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "k"}], "}"}]}], "]"}]}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"y", ",", "d"}], "]"}], "||", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"p", "\[Equal]", "1"}], ",", 
             RowBox[{"k", "\[Equal]", "1"}], ",", 
             RowBox[{"k", "\[Equal]", "h"}]}], "]"}]}], ",", 
          RowBox[{"Break", "[", "]"}], ",", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"p", "\[Equal]", "1"}], ",", 
             RowBox[{"c", "=", 
              RowBox[{"c", "<>", "d"}]}], ",", 
             RowBox[{"c", "=", 
              RowBox[{"d", "<>", "c"}]}]}], "]"}], ";", 
           RowBox[{"Continue", "[", "]"}]}]}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"StringReplace", "[", 
      RowBox[{"S", ",", 
       RowBox[{"c", "\[Rule]", "\"\<\>\""}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ExpArgs`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExpArgs", "[", 
   RowBox[{
    RowBox[{"f_", "/;", 
     RowBox[{"BlockFuncModQ", "[", "f", "]"}]}], ",", 
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"ListQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"!", 
             RowBox[{"StringFreeQ", "[", 
              RowBox[{
               RowBox[{"ToString", "[", "#", "]"}], ",", "\"\<_\>\""}], 
              "]"}]}], "||", 
            RowBox[{"StringQ", "[", "#", "]"}]}], "&"}], ",", "x"}], "]"}], 
        "]"}], "\[Equal]", 
       RowBox[{"{", "True", "}"}]}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "t", ",", "h", ",", 
      RowBox[{"g", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{"Definition4", "[", 
         RowBox[{"ToString", "[", "f", "]"}], "]"}], "}"}], "]"}]}], ";", 
     RowBox[{"b", "=", 
      RowBox[{"Args", "[", 
       RowBox[{"f", ",", "90"}], "]"}]}], ";", " ", 
     RowBox[{"b", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NestListQ", "[", "b", "]"}], ",", 
        RowBox[{"b", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "b"}], "]"}]}], ";", " ", 
     RowBox[{"d", "=", 
      RowBox[{"Locals1", "[", "f", "]"}]}], ";", " ", 
     RowBox[{"d", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NestListQ", "[", "d", "]"}], ",", 
        RowBox[{"d", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "d"}], "]"}]}], ";", " ", 
     RowBox[{"c", "=", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"HeadPF", "[", "f", "]"}], "}"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", " ", 
     RowBox[{"t", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"ToString", ",", "x"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"h", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"StringSplit", "[", 
            RowBox[{"#", ",", "\"\<_\>\""}], "]"}], "&"}], ",", "t"}], 
         "]"}]}], "]"}]}], ";", 
     RowBox[{"b", "=", 
      RowBox[{"Join", "[", 
       RowBox[{"b", ",", "d"}], "]"}]}], ";", " ", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "h", "]"}]}], ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"MemberQ", "[", 
            RowBox[{"b", ",", 
             RowBox[{"h", "[", 
              RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"d", "=", 
            RowBox[{"t", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"g", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"StringFreeQ", "[", 
                RowBox[{"d", ",", "\"\<_\>\""}], "]"}], ",", 
               RowBox[{"d", "<>", "\"\<_\>\""}], ",", "d"}], "]"}]}], 
            "]"}]}]}], "]"}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"g", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"Return", "[", "]"}], ",", 
       RowBox[{
        RowBox[{"g", "=", 
         RowBox[{"ToString", "[", "g", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"d", "=", 
         RowBox[{
          RowBox[{"StringTake", "[", 
           RowBox[{"c", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"-", "2"}]}], "}"}]}], "]"}], "<>", "\"\<, \>\"", "<>", 
          RowBox[{"StringTake", "[", 
           RowBox[{"g", ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", 
              RowBox[{"-", "2"}]}], "}"}]}], "]"}], "<>", "\"\<]\>\""}]}], 
        ";", " ", 
        RowBox[{"ClearAllAttributes", "[", "f", "]"}], ";", 
        RowBox[{"ClearAll", "[", "f", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"a", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "=", 
         RowBox[{"StringReplace", "[", 
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"c", "->", "d"}], ",", "1"}], "]"}]}], ";", " ", 
        RowBox[{"Map", "[", 
         RowBox[{"ToExpression", ",", "a"}], "]"}]}]}], "]"}], ";"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`RemProcOnHead`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RemProcOnHead", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"HeadingQ", "[", "x", "]"}], "||", 
     RowBox[{"HeadingQ1", "[", "x", "]"}], "||", 
     RowBox[{
      RowBox[{"ListQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"HeadingQ", "[", "#", "]"}], "&"}], ",", "x"}], "]"}], 
        "]"}], "\[Equal]", 
       RowBox[{"{", "True", "}"}]}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b", ",", "c", ",", "d", ",", "p", ",", 
      RowBox[{"a", "=", 
       RowBox[{"HeadName", "[", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"ListQ", "[", "x", "]"}], ",", 
          RowBox[{"x", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "x"}], "]"}], "]"}]}], ",", 
      "y"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"!", 
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{"Names", "[", "\"\<`*\>\"", "]"}], ",", "a"}], "]"}]}], "||", 
       RowBox[{"!", 
        RowBox[{"HowAct", "[", "a", "]"}]}]}], ",", "$Failed", ",", 
      RowBox[{
       RowBox[{"b", "=", 
        RowBox[{"Definition2", "[", "a", "]"}]}], ";", 
       RowBox[{"c", "=", 
        RowBox[{"b", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", 
           RowBox[{"-", "2"}]}], "]"}], "]"}]}], ";", " ", 
       RowBox[{"d", "=", 
        RowBox[{"b", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], ";", " ", 
       RowBox[{"ToExpression", "[", 
        RowBox[{"\"\<ClearAttributes[\>\"", "<>", "a", "<>", "\"\<,\>\"", "<>", 
         RowBox[{"ToString", "[", "d", "]"}], "<>", "\"\<]\>\""}], "]"}], ";",
        " ", 
       RowBox[{"y", "=", 
        RowBox[{"Map", "[", 
         RowBox[{"StandHead", ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", "x", "}"}], "]"}]}], "]"}]}], ";", 
       RowBox[{"p", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"c", ",", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"SuffPref", "[", 
             RowBox[{"#", ",", "y", ",", "1"}], "]"}]}], "&"}]}], "]"}]}], 
       ";", " ", 
       RowBox[{"ToExpression", "[", 
        RowBox[{"\"\<Clear[\>\"", "<>", "a", "<>", "\"\<]\>\""}], "]"}], ";", 
       " ", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"p", "\[Equal]", 
          RowBox[{"{", "}"}]}], ",", "\"\<Done\>\"", ",", 
         RowBox[{
          RowBox[{"ToExpression", "[", "p", "]"}], ";", " ", 
          RowBox[{"ToExpression", "[", 
           RowBox[{"\"\<SetAttributes[\>\"", "<>", "a", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", "d", "]"}], "<>", "\"\<]\>\""}], "]"}], 
          ";", " ", "\"\<Done\>\""}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`RemProcOnHead1`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RemProcOnHead1", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"HeadingQ", "[", "x", "]"}], "||", 
     RowBox[{
      RowBox[{"ListQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"HeadingQ", ",", "x"}], "]"}], "]"}], "\[Equal]", 
       RowBox[{"{", "True", "}"}]}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"HeadName", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"{", "x", "}"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", "b", ",", "c"}], "}"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"c", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{"PureDefinition", "[", "a", "]"}], "}"}], "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"c", "===", 
        RowBox[{"{", "$Failed", "}"}]}], ",", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<Symbol <\>\"", "<>", "a", "<>", "\"\<> is undefined.\>\""}], 
         "]"}], ";", "\"\<Done\>\""}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"b", "=", 
         RowBox[{"ToExpression", "[", 
          RowBox[{"\"\<Attributes[\>\"", "<>", "a", "<>", "\"\<]\>\""}], 
          "]"}]}], ";", 
        RowBox[{"c", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"c", ",", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"SuffPref", "[", 
              RowBox[{"#", ",", 
               RowBox[{"Flatten", "[", 
                RowBox[{"{", "x", "}"}], "]"}], ",", "1"}], "]"}]}], "&"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ToExpression", "[", 
         RowBox[{
         "\"\<ClearAllAttributes[\>\"", "<>", "a", "<>", "\"\<]\>\""}], "]"}],
         ";", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"\"\<ClearAll[\>\"", "<>", "a", "<>", "\"\<]\>\""}], "]"}], 
        ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"c", "\[NotEqual]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{
           RowBox[{"ToExpression", "[", "c", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"ToExpression", "[", 
            RowBox[{"\"\<SetAttributes[\>\"", "<>", "a", "<>", "\"\<,\>\"", "<>", 
             RowBox[{"ToString", "[", "b", "]"}], "<>", "\"\<]\>\""}], 
            "]"}]}]}], "]"}], ";", "\"\<Done\>\""}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ComplexQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ComplexQ", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NumberQ", "[", 
      RowBox[{"N", "[", "x", "]"}], "]"}], "&&", 
     RowBox[{
      RowBox[{"Im", "[", "x", "]"}], "\[NotEqual]", "0"}]}], ",", "True", ",",
     "False"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Attrib`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Attrib", "[", 
   RowBox[{
    RowBox[{"F_", "/;", 
     RowBox[{"StringQ", "[", "F", "]"}]}], ",", 
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{
       RowBox[{"ListQ", "[", "x", "]"}], "&&", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Map3", "[", 
          RowBox[{"MemberQ", ",", 
           RowBox[{"{", 
            RowBox[{
            "\"\<-A\>\"", ",", "\"\<-H\>\"", ",", "\"\<-S\>\"", ",", 
             "\"\<-R\>\"", ",", "\"\<+A\>\"", ",", "\"\<+H\>\"", ",", 
             "\"\<+S\>\"", ",", "\"\<+R\>\""}], "}"}], ",", "x"}], "]"}], 
         "]"}], "\[Equal]", 
        RowBox[{"{", "True", "}"}]}]}], "||", 
      RowBox[{"x", "\[Equal]", 
       RowBox[{"{", "}"}]}], "||", 
      RowBox[{"x", "\[Equal]", "\"\<Attr\>\""}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"b", "=", "\"\<attrib \>\""}], ",", "c", ",", 
      RowBox[{"d", "=", "\"\< > \>\""}], ",", 
      RowBox[{"h", "=", "\"\<attrib.exe\>\""}], ",", "p", ",", "f", ",", "g", 
      ",", " ", "t", ",", "v"}], "}"}], ",", " ", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"ToString", "[", 
       RowBox[{"v", "=", 
        RowBox[{"Unique", "[", "\"\<ArtKr\>\"", "]"}]}], "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Set", "[", 
         RowBox[{"t", ",", 
          RowBox[{"LoadExtProg", "[", "\"\<attrib.exe\>\"", "]"}]}], "]"}], "===",
         "$Failed"}], ",", 
       RowBox[{"Return", "[", "$Failed", "]"}], ",", "Null"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"StringLength", "[", "F", "]"}], "\[Equal]", "3"}], "&&", 
        RowBox[{"DirQ", "[", "F", "]"}], "&&", 
        RowBox[{
         RowBox[{"StringTake", "[", 
          RowBox[{"F", ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "2"}], "}"}]}], "]"}], "\[Equal]", 
         "\"\<:\>\""}]}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"\"\<Drive \>\"", "<>", "F"}], "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"StringLength", "[", "F", "]"}], "\[Equal]", "3"}], "&&", 
          RowBox[{"DirQ", "[", "F", "]"}]}], ",", 
         RowBox[{"f", "=", 
          RowBox[{"StandPath", "[", "F", "]"}]}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"FileExistsQ1", "[", 
            RowBox[{
             RowBox[{"StrDelEnds", "[", 
              RowBox[{"F", ",", "\"\<\\\\\>\"", ",", "2"}], "]"}], ",", "v"}],
             "]"}], ",", 
           RowBox[{
            RowBox[{"g", "=", "v"}], ";", "\[IndentingNewLine]", 
            RowBox[{"f", "=", 
             RowBox[{"StandPath", "[", 
              RowBox[{"g", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", 
            RowBox[{"Clear", "[", "v", "]"}]}], ",", 
           RowBox[{"Return", "[", 
            RowBox[{
            "\"\<<\>\"", "<>", "F", "<>", 
             "\"\<> is not a directory or a datafile\>\""}], "]"}]}], "]"}]}],
         "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"x", "===", "\"\<Attr\>\""}], ",", 
       RowBox[{"Run", "[", 
        RowBox[{"b", "<>", "f", "<>", "d", "<>", "a"}], "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"x", "===", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"Run", "[", 
          RowBox[{
          "b", "<>", "\"\< -A -H -S -R \>\"", "<>", "f", "<>", "d", "<>", 
           "a"}], "]"}], ",", 
         RowBox[{"Run", "[", 
          RowBox[{"b", "<>", 
           RowBox[{"StringReplace", "[", 
            RowBox[{
             RowBox[{"StringJoin", "[", "x", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\"\<+\>\"", "->", "\"\< +\>\""}], ",", 
               RowBox[{"\"\<-\>\"", "->", "\"\< -\>\""}]}], "}"}]}], "]"}], 
           "<>", "\"\< \>\"", "<>", "f", "<>", "d", "<>", "a"}], "]"}]}], 
        "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"FileByteCount", "[", "a", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"DeleteFile", "[", "a", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"d", "=", 
         RowBox[{"Read", "[", 
          RowBox[{"a", ",", "String"}], "]"}]}], ";", 
        RowBox[{"DeleteFile", "[", 
         RowBox[{"Close", "[", "a", "]"}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"h", "=", 
      RowBox[{"StringSplit", "[", 
       RowBox[{"StringTrim", "[", 
        RowBox[{"StringTake", "[", 
         RowBox[{"d", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{
             RowBox[{"StringLength", "[", "d", "]"}], "-", 
             RowBox[{"StringLength", "[", "f", "]"}]}]}], "}"}]}], "]"}], 
        "]"}], "]"}]}], ";", " ", 
     RowBox[{"Quiet", "[", 
      RowBox[{"DeleteFile", "[", "t", "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"h", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"h", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<HR\>\"", "->", 
           RowBox[{"{", 
            RowBox[{"\"\<H\>\"", ",", "\"\<R\>\""}], "}"}]}], ",", 
          RowBox[{"\"\<SH\>\"", "->", 
           RowBox[{"{", 
            RowBox[{"\"\<S\>\"", ",", "\"\<H\>\""}], "}"}]}], ",", 
          RowBox[{"\"\<SHR\>\"", "->", 
           RowBox[{"{", 
            RowBox[{"\"\<S\>\"", ",", "\"\<H\>\"", ",", "\"\<R\>\""}], 
            "}"}]}], ",", 
          RowBox[{"\"\<SRH\>\"", "->", 
           RowBox[{"{", 
            RowBox[{"\"\<S\>\"", ",", "\"\<R\>\"", ",", "\"\<H\>\""}], 
            "}"}]}], ",", 
          RowBox[{"\"\<HSR\>\"", "->", 
           RowBox[{"{", 
            RowBox[{"\"\<H\>\"", ",", "\"\<S\>\"", ",", "\"\<R\>\""}], 
            "}"}]}], ",", 
          RowBox[{"\"\<HRS\>\"", "->", 
           RowBox[{"{", 
            RowBox[{"\"\<H\>\"", ",", "\"\<R\>\"", ",", "\"\<S\>\""}], 
            "}"}]}], ",", 
          RowBox[{"\"\<RSH\>\"", "->", 
           RowBox[{"{", 
            RowBox[{"\"\<R\>\"", ",", "\"\<S\>\"", ",", "\"\<H\>\""}], 
            "}"}]}], ",", 
          RowBox[{"\"\<RHS\>\"", "->", 
           RowBox[{"{", 
            RowBox[{"\"\<R\>\"", ",", "\"\<H\>\"", ",", "\"\<S\>\""}], 
            "}"}]}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"h", "===", 
         RowBox[{"{", 
          RowBox[{
          "\"\<File\>\"", ",", "\"\<not\>\"", ",", "\"\<found\>\"", ",", 
           "\"\<-\>\""}], "}"}]}], "||", 
        RowBox[{"MemberQ", "[", 
         RowBox[{"h", ",", "\"\<C:\\\\Documents\>\""}], "]"}]}], ",", 
       RowBox[{"\"\<Drive \>\"", "<>", "f"}], ",", 
       RowBox[{"{", 
        RowBox[{"h", ",", 
         RowBox[{"g", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Attrib1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Attrib1", "[", 
   RowBox[{
    RowBox[{"F_", "/;", 
     RowBox[{"StringQ", "[", "F", "]"}]}], ",", 
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{
       RowBox[{"ListQ", "[", "x", "]"}], "&&", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Map3", "[", 
          RowBox[{"MemberQ", ",", 
           RowBox[{"{", 
            RowBox[{
            "\"\<-A\>\"", ",", "\"\<-H\>\"", ",", "\"\<-S\>\"", ",", 
             "\"\<-R\>\"", ",", "\"\<+A\>\"", ",", "\"\<+H\>\"", ",", 
             "\"\<+S\>\"", ",", "\"\<+R\>\""}], "}"}], ",", "x"}], "]"}], 
         "]"}], "\[Equal]", 
        RowBox[{"{", "True", "}"}]}]}], "||", 
      RowBox[{"x", "\[Equal]", 
       RowBox[{"{", "}"}]}], "||", 
      RowBox[{"x", "\[Equal]", "\"\<Attr\>\""}]}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "\"\<$ArtKr$\>\""}], ",", 
      RowBox[{"b", "=", "\"\<attrib \>\""}], ",", "c", ",", 
      RowBox[{"d", "=", "\"\< > \>\""}], ",", 
      RowBox[{"h", "=", "\"\<attrib.exe\>\""}], ",", "p", ",", "f", ",", 
      RowBox[{"g", "=", 
       RowBox[{"Unique", "[", "\"\<agn\>\"", "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"LoadExtProg", "[", "\"\<attrib.exe\>\"", "]"}], "===", 
        "$Failed"}], ",", 
       RowBox[{"Return", "[", "$Failed", "]"}], ",", "Null"}], "]"}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"StringLength", "[", "F", "]"}], "\[Equal]", "3"}], "&&", 
        RowBox[{"DirQ", "[", "F", "]"}], "&&", 
        RowBox[{
         RowBox[{"StringTake", "[", 
          RowBox[{"F", ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "2"}], "}"}]}], "]"}], "\[Equal]", 
         "\"\<:\>\""}]}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"\"\<Drive \>\"", "<>", "F"}], "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"StringLength", "[", "F", "]"}], "\[Equal]", "3"}], "&&", 
          RowBox[{"DirQ", "[", "F", "]"}]}], ",", 
         RowBox[{"f", "=", 
          RowBox[{"StandPath", "[", "F", "]"}]}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"FileExistsQ1", "[", 
            RowBox[{
             RowBox[{"StrDelEnds", "[", 
              RowBox[{
               RowBox[{"StringReplace", "[", 
                RowBox[{"F", ",", 
                 RowBox[{"\"\</\>\"", "->", "\"\<\\\\\>\""}]}], "]"}], ",", 
               "\"\<\\\\\>\"", ",", "2"}], "]"}], ",", "g"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"f", "=", 
             RowBox[{"StandPath", "[", 
              RowBox[{"g", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", " ", 
            RowBox[{"Clear", "[", "g", "]"}]}], ",", 
           RowBox[{"Return", "[", 
            RowBox[{
            "\"\<<\>\"", "<>", "F", "<>", 
             "\"\<> is not a directory or a datafile\>\""}], "]"}]}], "]"}]}],
         "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"x", "===", "\"\<Attr\>\""}], ",", 
       RowBox[{"Run", "[", 
        RowBox[{"b", "<>", "f", "<>", "d", "<>", "a"}], "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"x", "===", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"Run", "[", 
          RowBox[{
          "b", "<>", "\"\< -A -H -S -R \>\"", "<>", "f", "<>", "d", "<>", 
           "a"}], "]"}], ",", 
         RowBox[{"Run", "[", 
          RowBox[{"b", "<>", 
           RowBox[{"StringReplace", "[", 
            RowBox[{
             RowBox[{"StringJoin", "[", "x", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\"\<+\>\"", "->", "\"\< +\>\""}], ",", 
               RowBox[{"\"\<-\>\"", "->", "\"\< -\>\""}]}], "}"}]}], "]"}], 
           "<>", "\"\< \>\"", "<>", "f", "<>", "d", "<>", "a"}], "]"}]}], 
        "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"FileByteCount", "[", "a", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"DeleteFile", "[", "a", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"d", "=", 
         RowBox[{"Read", "[", 
          RowBox[{"a", ",", "String"}], "]"}]}], ";", 
        RowBox[{"DeleteFile", "[", 
         RowBox[{"Close", "[", "a", "]"}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"h", "=", 
      RowBox[{"StringSplit", "[", 
       RowBox[{"StringTrim", "[", 
        RowBox[{"StringTake", "[", 
         RowBox[{"d", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{
             RowBox[{"StringLength", "[", "d", "]"}], "-", 
             RowBox[{"StringLength", "[", "f", "]"}]}]}], "}"}]}], "]"}], "]"}
        ], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "y", "}"}], "!=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"Quiet", "[", 
        RowBox[{"DeleteFile", "[", 
         RowBox[{
          RowBox[{"Directory", "[", "]"}], "<>", "\"\<\\\\\>\"", "<>", 
          "\"\<attrib.exe\>\""}], "]"}], "]"}], ",", "Null"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"h", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"h", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<HR\>\"", "->", 
           RowBox[{"{", 
            RowBox[{"\"\<H\>\"", ",", "\"\<R\>\""}], "}"}]}], ",", 
          RowBox[{"\"\<SH\>\"", "->", 
           RowBox[{"{", 
            RowBox[{"\"\<S\>\"", ",", "\"\<H\>\""}], "}"}]}], ",", 
          RowBox[{"\"\<SHR\>\"", "->", 
           RowBox[{"{", 
            RowBox[{"\"\<S\>\"", ",", "\"\<H\>\"", ",", "\"\<R\>\""}], 
            "}"}]}], ",", 
          RowBox[{"\"\<SRH\>\"", "->", 
           RowBox[{"{", 
            RowBox[{"\"\<S\>\"", ",", "\"\<R\>\"", ",", "\"\<H\>\""}], 
            "}"}]}], ",", 
          RowBox[{"\"\<HSR\>\"", "->", 
           RowBox[{"{", 
            RowBox[{"\"\<H\>\"", ",", "\"\<S\>\"", ",", "\"\<R\>\""}], 
            "}"}]}], ",", 
          RowBox[{"\"\<HRS\>\"", "->", 
           RowBox[{"{", 
            RowBox[{"\"\<H\>\"", ",", "\"\<R\>\"", ",", "\"\<S\>\""}], 
            "}"}]}], ",", 
          RowBox[{"\"\<RSH\>\"", "->", 
           RowBox[{"{", 
            RowBox[{"\"\<R\>\"", ",", "\"\<S\>\"", ",", "\"\<H\>\""}], 
            "}"}]}], ",", 
          RowBox[{"\"\<RHS\>\"", "->", 
           RowBox[{"{", 
            RowBox[{"\"\<R\>\"", ",", "\"\<H\>\"", ",", "\"\<S\>\""}], 
            "}"}]}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"h", "===", 
         RowBox[{"{", 
          RowBox[{
          "\"\<File\>\"", ",", "\"\<not\>\"", ",", "\"\<found\>\"", ",", 
           "\"\<-\>\""}], "}"}]}], "||", 
        RowBox[{"MemberQ", "[", 
         RowBox[{"h", ",", "\"\<C:\\\\Documents\>\""}], "]"}]}], ",", 
       RowBox[{"\"\<Drive \>\"", "<>", "f"}], ",", "h"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Attribs`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Attribs", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "||", 
      RowBox[{"DirectoryQ", "[", "x", "]"}]}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b", ",", 
      RowBox[{"a", "=", 
       RowBox[{"StandPath", "[", "x", "]"}]}], ",", 
      RowBox[{"c", "=", "\"\<attrib.exe\>\""}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"Unique", "[", "\"\<g\>\"", "]"}], "]"}]}], ",", "df"}], 
     "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"DirQ", "[", "x", "]"}], "&&", 
       RowBox[{
        RowBox[{"StringLength", "[", "x", "]"}], "\[Equal]", "3"}], "&&", 
       RowBox[{
        RowBox[{"StringTake", "[", 
         RowBox[{"x", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "2"}], "}"}]}], "]"}], "\[Equal]", 
        "\"\<:\>\""}]}], ",", "$Failed", ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"df", "[", "]"}], ":=", 
        RowBox[{"Quiet", "[", 
         RowBox[{"DeleteFile", "[", 
          RowBox[{
           RowBox[{"Directory", "[", "]"}], "<>", "\"\<\\\\\>\"", "<>", "c"}],
           "]"}], "]"}]}], ";", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"FileExistsQ", "[", "c", "]"}]}], ",", 
         RowBox[{"LoadExtProg", "[", "c", "]"}]}], "]"}], ";", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "y", "}"}], "\[Equal]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{
          RowBox[{"Run", "[", 
           RowBox[{
            RowBox[{"c", "<>", "\"\< \>\"", "<>", "a", "<>", "\"\< > \>\""}], 
            ",", "d"}], "]"}], ";", 
          RowBox[{"df", "[", "]"}], ";", " ", "\[IndentingNewLine]", 
          RowBox[{"b", "=", 
           RowBox[{"Characters", "[", 
            RowBox[{"StringReplace", "[", 
             RowBox[{
              RowBox[{"StringTake", "[", 
               RowBox[{
                RowBox[{"Read", "[", 
                 RowBox[{"d", ",", "String"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", " ", 
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"StringLength", "[", "a", "]"}]}], "-", "1"}]}], 
                 "}"}]}], "]"}], ",", 
              RowBox[{"\"\< \>\"", "->", "\"\<\>\""}]}], "]"}], "]"}]}], ";", 
          RowBox[{"DeleteFile", "[", 
           RowBox[{"Close", "[", "d", "]"}], "]"}], ";", "b"}], ",", 
         RowBox[{
          RowBox[{"a", "=", 
           RowBox[{"Run", "[", 
            RowBox[{"c", "<>", "\"\< -A -H -R -S \>\"", "<>", "a"}], "]"}]}], 
          ";", 
          RowBox[{"df", "[", "]"}], ";", "a"}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DelAllAttribs`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DelAllAttribs", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "x", "]"}], "||", 
     RowBox[{"DirectoryQ", "[", "x", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"StandPath", "[", "x", "]"}]}], ",", "b", ",", 
      RowBox[{"c", "=", "\"\<Attrib.exe\>\""}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"DirQ", "[", "x", "]"}], "&&", 
       RowBox[{
        RowBox[{"StringLength", "[", "x", "]"}], "\[Equal]", "3"}], "&&", 
       RowBox[{
        RowBox[{"StringTake", "[", 
         RowBox[{"x", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "2"}], "}"}]}], "]"}], "\[Equal]", 
        "\"\<:\>\""}]}], ",", "$Failed", ",", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"FileExistsQ", "[", 
           RowBox[{
           "$InstallationDirectory", "<>", "\"\<\\\\\>\"", "<>", "c"}], 
           "]"}]}], ",", 
         RowBox[{"LoadExtProg", "[", "c", "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Run", "[", 
        RowBox[{"c", "<>", "\"\< -A -H -R -S \>\"", "<>", "a"}], "]"}]}]}], 
     "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DirQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DirQ", "[", 
   RowBox[{"d_", "/;", 
    RowBox[{"StringQ", "[", "d", "]"}]}], "]"}], ":=", 
  RowBox[{"DirectoryQ", "[", 
   RowBox[{"StringReplace", "[", 
    RowBox[{"d", ",", 
     RowBox[{"\"\</\>\"", "\[Rule]", "\"\<\\\\\>\""}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DirName`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DirName", "[", 
   RowBox[{"F_", "/;", 
    RowBox[{"StringQ", "[", "F", "]"}]}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"DirQ", "[", "F", "]"}], ",", "\"\<None\>\"", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"FileExistsQ1", "[", "F", "]"}]}], ",", "$Failed", ",", 
      RowBox[{"Quiet", "[", 
       RowBox[{"Check", "[", 
        RowBox[{
         RowBox[{"FileNameJoin", "[", 
          RowBox[{
           RowBox[{"FileNameSplit", "[", "F", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ";", 
             RowBox[{"-", "2"}]}], "]"}], "]"}], "]"}], ",", "\"\<None\>\""}],
         "]"}], "]"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`FileQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FileQ", "[", 
   RowBox[{"f_", "/;", 
    RowBox[{"StringQ", "[", "f", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"d", "=", 
       RowBox[{"Adrive", "[", "]"}]}], ",", 
      RowBox[{"s", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"a", "=", 
       RowBox[{"ToLowerCase", "[", 
        RowBox[{"StringReplace", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"OpenFiles", "[", "]"}], "]"}], ",", 
          RowBox[{"\"\<\\\\\\\\\>\"", "->", "\"\</\>\""}]}], "]"}], "]"}]}], 
      ",", 
      RowBox[{"b", "=", 
       RowBox[{"ToLowerCase", "[", 
        RowBox[{"StringReplace", "[", 
         RowBox[{
          RowBox[{"Directory", "[", "]"}], ",", 
          RowBox[{"\"\<\\\\\>\"", "->", "\"\</\>\""}]}], "]"}], "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"ToLowerCase", "[", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"f", ",", 
          RowBox[{"\"\<\\\\\>\"", "->", "\"\</\>\""}]}], "]"}], "]"}]}]}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "d", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"s", ",", 
         RowBox[{
          RowBox[{"d", "[", 
           RowBox[{"[", "k", "]"}], "]"}], "<>", "\"\<:\>\""}]}], "]"}]}], 
      "]"}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"StringLength", "[", "c", "]"}], "<", "2"}], "||", 
        RowBox[{"!", 
         RowBox[{"MemberQ", "[", 
          RowBox[{
           RowBox[{"ToLowerCase", "[", "s", "]"}], ",", 
           RowBox[{"StringTake", "[", 
            RowBox[{"c", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}], "]"}]}]}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"b", "<>", "\"\</\>\"", "<>", "c"}]}], ",", "Null"}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"DirQ", "[", "c", "]"}], ",", "False", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"a", ",", "c"}], "]"}], ",", "True", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Quiet", "[", 
             RowBox[{"OpenRead", "[", "c", "]"}], "]"}], "===", "$Failed"}], 
           ",", "False", ",", 
           RowBox[{
            RowBox[{"Close", "[", "c", "]"}], ";", "True"}]}], "]"}]}], 
        "]"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`CopyDir`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CopyDir", "[", 
   RowBox[{
    RowBox[{"d_", "/;", 
     RowBox[{"StringQ", "[", "d", "]"}]}], ",", 
    RowBox[{"p_", "/;", 
     RowBox[{"StringQ", "[", "p", "]"}]}]}], "]"}], ":=", 
  RowBox[{"CopyDirectory", "[", 
   RowBox[{"d", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"DirQ", "[", "p", "]"}], ",", 
      RowBox[{"p", "<>", "\"\<\\\\\>\"", "<>", 
       RowBox[{
        RowBox[{"FileNameSplit", "[", "d", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}]}], ",", "p"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SequenceQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SequenceQ", "[", 
   RowBox[{"s_", "/;", 
    RowBox[{"StringQ", "[", "s", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"b", "=", "\"\< := \>\""}], ",", 
      RowBox[{"c", "=", "\"\< = \>\""}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"ToString", "[", 
         RowBox[{"Definition", "[", "s", "]"}], "]"}], "]"}]}]}], "}"}], ",", 
    " ", 
    RowBox[{"Quiet", "[", 
     RowBox[{"Check", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"StringTake", "[", 
           RowBox[{
            RowBox[{"StringReplace", "[", 
             RowBox[{"d", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"s", "<>", "b"}], "\[Rule]", "\"\<\>\""}], ",", 
                RowBox[{
                 RowBox[{"s", "<>", "c"}], "\[Rule]", "\"\<\>\""}]}], "}"}]}],
              "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "9"}], "}"}]}], "]"}], "\[Equal]", 
          "\"\<Sequence[\>\""}], ",", "True", ",", "False"}], "]"}], ",", 
       "False"}], "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DirQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DirQ", "[", 
   RowBox[{"d_", "/;", 
    RowBox[{"StringQ", "[", "d", "]"}]}], "]"}], ":=", 
  RowBox[{"DirectoryQ", "[", 
   RowBox[{"StringReplace", "[", 
    RowBox[{"d", ",", 
     RowBox[{"\"\</\>\"", "\[Rule]", "\"\<\\\\\>\""}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StrExprQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StrExprQ", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", "=", "True"}], "}"}], ",", 
    RowBox[{
     RowBox[{"a", "&&", 
      RowBox[{"Quiet", "[", 
       RowBox[{"Check", "[", 
        RowBox[{
         RowBox[{"ToExpression", "[", "x", "]"}], ",", 
         RowBox[{"a", "=", "False"}]}], "]"}], "]"}]}], ";", "a"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ExpressionQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExpressionQ", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", 
      RowBox[{"f", "=", "\"\<$Art$Kr$.mx\>\""}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"SyntaxQ", "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"b", "=", 
        RowBox[{"SymbolsOfString", "[", 
         RowBox[{"x", ",", "90"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"b", "!=", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"ToExpression", "[", 
          RowBox[{"\"\<DumpSave[\\\"$Art$Kr$.mx\\\"\>\"", "<>", "\"\<,\>\"", "<>", 
           RowBox[{"ToString1", "[", "b", "]"}], "<>", "\"\<]\>\""}], "]"}], 
         ",", "Null"}], "]"}], ";", " ", 
       RowBox[{"c", "=", 
        RowBox[{"Quiet", "[", 
         RowBox[{"Check", "[", 
          RowBox[{
           RowBox[{"ToExpression", "[", "x", "]"}], ",", "a"}], "]"}], 
         "]"}]}], ";", " ", 
       RowBox[{"Quiet", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Get", "[", "f", "]"}], ",", 
          RowBox[{"DeleteFile", "[", "f", "]"}]}], "}"}], "]"}], ";", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"c", ",", "a"}], "]"}], ",", "False", ",", "True"}], 
        "]"}]}], ",", "False"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ExprsInStrQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExprsInStrQ", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"c", "=", "1"}], ",", "d", ",", "j", ",", 
      RowBox[{"b", "=", 
       RowBox[{"StringLength", "[", "x", "]"}]}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "c"}], ",", 
       RowBox[{"k", "\[LessEqual]", "b"}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "k"}], ",", 
          RowBox[{"j", "\[LessEqual]", "b"}], ",", 
          RowBox[{"j", "++"}], ",", 
          RowBox[{
           RowBox[{"d", "=", 
            RowBox[{"StringTake", "[", 
             RowBox[{"x", ",", 
              RowBox[{"{", 
               RowBox[{"k", ",", "j"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"!", 
               RowBox[{"SymbolQ", "[", "d", "]"}]}], "&&", 
              RowBox[{"SyntaxQ", "[", "d", "]"}]}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"a", ",", "d"}], "]"}]}], "]"}]}]}], "]"}], ";", 
        RowBox[{"c", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"a", "=", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{"StringTrim", ",", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"StringTrim2", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{"\"\<-\>\"", ",", "\"\<+\>\"", ",", "\"\< \>\""}], 
                "}"}], ",", "3"}], "]"}], "&"}], ",", "a"}], "]"}]}], "]"}], 
        ",", 
        RowBox[{
         RowBox[{"ExpressionQ", "[", "#", "]"}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"a", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", "False", ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", "y", "}"}], "\[NotEqual]", 
            RowBox[{"{", "}"}]}], "&&", 
           RowBox[{"!", 
            RowBox[{"HowAct", "[", 
             RowBox[{
              RowBox[{"{", "y", "}"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], ",", 
          RowBox[{"y", "=", 
           RowBox[{"DeleteDuplicates", "[", "a", "]"}]}]}], "]"}], ";", 
        "True"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ToStringRule`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ToStringRule", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{
      RowBox[{"ListQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"Head", ",", "x"}], "]"}], "]"}], "\[Equal]", 
       RowBox[{"{", "Rule", "}"}]}]}], "||", 
     RowBox[{
      RowBox[{"Head", "[", "x", "]"}], "\[Equal]", "Rule"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", "x", "}"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", "c", ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"a", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"b", "=", 
         RowBox[{"Append", "[", 
          RowBox[{"b", ",", 
           RowBox[{
            RowBox[{"ToString", "[", 
             RowBox[{"RhsLhs", "[", 
              RowBox[{"c", ",", "\"\<Lhs\>\""}], "]"}], "]"}], "\[Rule]", 
            RowBox[{"\"\<(\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"RhsLhs", "[", 
               RowBox[{"c", ",", "\"\<Rhs\>\""}], "]"}], "]"}], "<>", 
             "\"\<)\>\""}]}]}], "]"}]}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ListQ", "[", "x", "]"}], ",", "b", ",", 
       RowBox[{"b", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ToStringRule1`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ToStringRule1", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{
      RowBox[{"ListQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"Head", ",", "x"}], "]"}], "]"}], "\[Equal]", 
       RowBox[{"{", "Rule", "}"}]}]}], "||", 
     RowBox[{
      RowBox[{"Head", "[", "x", "]"}], "\[Equal]", "Rule"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", "x", "}"}], "]"}]}], ",", "b"}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "->", 
          RowBox[{"ToString", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "&"}], ",", "a"}], 
       "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "b", "]"}], "\[Equal]", "1"}], ",", 
       RowBox[{"b", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "b"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`CALL`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CALL", "[", 
   RowBox[{"x_", ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"x", ",", "InputForm"}], "]"}]}], ",", "b", ",", "c"}], "}"}],
     ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"StringTake", "[", 
       RowBox[{"a", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"StringPosition", "[", 
            RowBox[{"a", ",", "\"\<[\>\""}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<Null\>\"", ",", "$Failed"}], "}"}], ",", 
          RowBox[{"Definition4", "[", "b", "]"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", "x", ",", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", "y", "}"}], "===", 
             RowBox[{"{", "}"}]}], ",", 
            RowBox[{"Directory", "[", "]"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"StringQ", "[", "y", "]"}], "&&", 
               RowBox[{"DirectoryQ", "[", "y", "]"}]}], ",", "y", ",", 
              RowBox[{"Directory", "[", "]"}]}], "]"}]}], "]"}], "<>", 
          "\"\<\\\\\>\"", "<>", "b", "<>", "\"\<.txt\>\""}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"FileExistsQ", "[", "c", "]"}]}], ",", "$Failed", ",", " ", 
          RowBox[{
           RowBox[{"ToExpression", "[", 
            RowBox[{
             RowBox[{"ReadList", "[", 
              RowBox[{"c", ",", "\"\<String\>\""}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}], "]"}], ";", "x"}]}], 
         "]"}]}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`CALLmx`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CALLmx", "[", 
   RowBox[{"y_", ",", 
    RowBox[{"z_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", "z"}], "]"}]}], ",", "d___"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "d", "}"}], "===", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"Directory", "[", "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"StringQ", "[", "d", "]"}], "&&", 
            RowBox[{"DirectoryQ", "[", "d", "]"}]}], ",", "d", ",", 
           RowBox[{"Directory", "[", "]"}]}], "]"}]}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"ToString", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"ListQ", "[", "y", "]"}], ",", "y", ",", 
           RowBox[{"{", "y", "}"}]}], "]"}]}], "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", "h", ",", 
      RowBox[{"k", "=", "1"}], ",", "s"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"z", "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "b", "]"}]}], ",", 
         RowBox[{
          RowBox[{"s", "=", 
           RowBox[{"b", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ";", " ", 
          RowBox[{"h", "=", 
           RowBox[{
           "a", "<>", "\"\<\\\\\>\"", "<>", "s", "<>", "\"\<.mx\>\""}]}], ";", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\"\<Null\>\"", ",", "$Failed"}], "}"}], ",", 
               RowBox[{"Definition4", "[", "s", "]"}]}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"ToExpression", "[", 
              RowBox[{"\"\<DumpSave[\>\"", "<>", 
               RowBox[{"ToString1", "[", "h", "]"}], "<>", "\"\<,\>\"", "<>", 
               RowBox[{"ToString", "[", "s", "]"}], "<>", "\"\<]\>\""}], 
              "]"}], ";", " ", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"c", ",", "s"}], "]"}]}]}], "]"}], ";", " ", 
          RowBox[{"k", "++"}]}]}], "]"}], ";", " ", 
       RowBox[{"Prepend", "[", 
        RowBox[{"c", ",", "a"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "b", "]"}]}], ",", 
         RowBox[{
          RowBox[{"s", "=", 
           RowBox[{"b", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ";", 
          RowBox[{"h", "=", 
           RowBox[{
           "a", "<>", "\"\<\\\\\>\"", "<>", "s", "<>", "\"\<.mx\>\""}]}], ";", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"FileExistsQ", "[", "h", "]"}], ",", 
            RowBox[{
             RowBox[{"Get", "[", "h", "]"}], ";", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"c", ",", "s"}], "]"}]}]}], "]"}], ";", 
          RowBox[{"k", "++"}]}]}], "]"}], ";", "c"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`CALLmxH`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CALLmxH", "[", 
   RowBox[{"y_", ",", 
    RowBox[{"z_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", "z"}], "]"}]}], ",", "help_", 
    ",", "d___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "d", "}"}], "===", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"Directory", "[", "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"StringQ", "[", "d", "]"}], "&&", 
            RowBox[{"DirectoryQ", "[", "d", "]"}]}], ",", "d", ",", 
           RowBox[{"Directory", "[", "]"}]}], "]"}]}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"ToString", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"ListQ", "[", "y", "]"}], ",", "y", ",", 
           RowBox[{"{", "y", "}"}]}], "]"}]}], "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", "h", ",", 
      RowBox[{"k", "=", "1"}], ",", "s", ",", "t"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"t", "=", 
      RowBox[{"a", "<>", "\"\<\\\\\>\"", "<>", 
       RowBox[{"ToString", "[", "help", "]"}], "<>", "\"\<.mx\>\""}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"z", "\[Equal]", "1"}], ",", 
       RowBox[{
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"k", "\[LessEqual]", 
           RowBox[{"Length", "[", "b", "]"}]}], ",", 
          RowBox[{
           RowBox[{"s", "=", 
            RowBox[{"b", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], ";", " ", 
           RowBox[{"h", "=", 
            RowBox[{
            "a", "<>", "\"\<\\\\\>\"", "<>", "s", "<>", "\"\<.mx\>\""}]}], 
           ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"\"\<Null\>\"", ",", "$Failed"}], "}"}], ",", 
                RowBox[{"Definition4", "[", "s", "]"}]}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"ToExpression", "[", 
               RowBox[{"\"\<DumpSave[\>\"", "<>", 
                RowBox[{"ToString1", "[", "h", "]"}], "<>", "\"\<,\>\"", "<>", 
                RowBox[{"ToString", "[", "s", "]"}], "<>", "\"\<]\>\""}], 
               "]"}], ";", 
              RowBox[{"ToExpression", "[", 
               RowBox[{"\"\<DumpSave[\>\"", "<>", 
                RowBox[{"ToString1", "[", "t", "]"}], "<>", "\"\<,\>\"", "<>", 
                RowBox[{"ToString1", "[", "help", "]"}], "<>", "\"\<]\>\""}], 
               "]"}], ";", " ", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"c", ",", "s"}], "]"}]}]}], "]"}], ";", " ", 
           RowBox[{"k", "++"}]}]}], "]"}], ";", " ", 
        RowBox[{"Prepend", "[", 
         RowBox[{"c", ",", "a"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"k", "\[LessEqual]", 
           RowBox[{"Length", "[", "b", "]"}]}], ",", 
          RowBox[{
           RowBox[{"s", "=", 
            RowBox[{"b", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], ";", 
           RowBox[{"h", "=", 
            RowBox[{
            "a", "<>", "\"\<\\\\\>\"", "<>", "s", "<>", "\"\<.mx\>\""}]}], 
           ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"FileExistsQ", "[", "h", "]"}], ",", 
             RowBox[{
              RowBox[{"Get", "[", "h", "]"}], ";", 
              RowBox[{"Get", "[", "t", "]"}], ";", 
              RowBox[{"help", "[", "]"}], ";", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"c", ",", "s"}], "]"}]}]}], "]"}], ";", 
           RowBox[{"k", "++"}]}]}], "]"}], ";", "c"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Table1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table1", "[", 
   RowBox[{
    RowBox[{"L_", "/;", 
     RowBox[{"ListListQ", "[", "L", "]"}]}], ",", "x_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"c", "=", "L"}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Length", "[", "L", "]"}]}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ListListQ", "[", "L", "]"}], "&&", 
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"L", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", "2"}]}], ",", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{"k", ",", 
         RowBox[{"k", "\[LessEqual]", "b"}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"a", ",", 
            RowBox[{
             RowBox[{"L", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"d", ",", 
            RowBox[{
             RowBox[{"L", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}]}], "]"}], ";", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "d"}], "}"}], "=", 
        RowBox[{"Map", "[", 
         RowBox[{"DeleteDuplicates", ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "d"}], "}"}]}], "]"}]}], ";", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"x", "===", "\"\<index\>\""}], ",", "a", ",", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"x", "===", "\"\<entry\>\""}], ",", "d", ",", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ListQ", "[", "x", "]"}], "&&", 
              RowBox[{
               RowBox[{"Length", "[", "x", "]"}], "\[Equal]", "2"}]}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"!", 
                RowBox[{"MemberQ", "[", 
                 RowBox[{"a", ",", 
                  RowBox[{"x", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ",", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"c", ",", "x"}], "]"}], ",", 
               RowBox[{"Select", "[", 
                RowBox[{
                 RowBox[{"Map", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"#1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "===", 
                    RowBox[{"x", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "&&", 
                    RowBox[{"!", 
                    RowBox[{"SameQ", "[", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "Null"}], "]"}]}]}], 
                    ",", "x", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "===", 
                    RowBox[{"x", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "&&", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "===", "Null"}]}], ",", 
                    "Null", ",", "#"}], "]"}]}], "]"}], "&"}], ",", "L"}], 
                  "]"}], ",", 
                 RowBox[{
                  RowBox[{"!", 
                   RowBox[{"SameQ", "[", 
                    RowBox[{"#", ",", "Null"}], "]"}]}], "&"}]}], "]"}]}], 
              "]"}], ",", 
             RowBox[{"Quiet", "[", 
              RowBox[{"Check", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Select", "[", 
                  RowBox[{
                   RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "===", "x"}], ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], ",", 
                    "L"}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"!", 
                    RowBox[{"SameQ", "[", 
                    RowBox[{"#", ",", "Null"}], "]"}]}], "&"}]}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "$Failed"}], "]"}], 
              "]"}]}], "]"}]}], "]"}]}], "]"}]}], ",", "$Failed"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`TabLib`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TabLib", "[", 
   RowBox[{
    RowBox[{"Lib_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "Lib", "]"}], "&&", 
      RowBox[{
       RowBox[{"FileExtension", "[", "Lib", "]"}], "\[Equal]", 
       "\"\<mx\>\""}]}]}], ",", "x_", ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Get", "[", "Lib", "]"}]}], ",", "b", ",", "c"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<index\>\"", ",", "\"\<entry\>\""}], "}"}], ",", "x"}], 
       "]"}], ",", 
      RowBox[{"Table1", "[", 
       RowBox[{"LibBase", ",", "x"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"ToExpression", ",", 
         RowBox[{
          RowBox[{"LibBase", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ListQ", "[", "x", "]"}], "&&", 
          RowBox[{
           RowBox[{"Length", "[", "x", "]"}], "\[Equal]", "2"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"c", "=", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"SameQ", "[", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", "Null"}], "]"}], ",", 
             "x", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"PureDefinition", "[", 
                RowBox[{"x", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
          ";", " ", 
          RowBox[{"b", "=", 
           RowBox[{"Table1", "[", 
            RowBox[{"LibBase", ",", "c"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"SameQ", "[", 
              RowBox[{"b", ",", "$Failed"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"LibBase", "=", "b"}], ";", 
             RowBox[{"ToExpression", "[", 
              RowBox[{"\"\<DumpSave[\>\"", "<>", 
               RowBox[{"ToString1", "[", "Lib", "]"}], "<>", "\"\<,\>\"", 
               "<>", "\"\<LibBase]\>\""}], "]"}]}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"StringQ", "[", "x", "]"}], "&&", 
            RowBox[{"!", 
             RowBox[{"StringFreeQ", "[", 
              RowBox[{"x", ",", "\"\<::usage = \>\""}], "]"}]}]}], ",", 
           RowBox[{
            RowBox[{"c", "=", 
             RowBox[{"Quiet", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"LibBase", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}], "=", 
               RowBox[{"AppendTo", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"LibBase", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", "x"}], "]"}]}], 
              "]"}]}], ";", 
            RowBox[{"LibBase", "=", 
             RowBox[{"ReplacePart", "[", 
              RowBox[{"LibBase", ",", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", "c"}]}], "]"}]}], 
            ";", 
            RowBox[{"ToExpression", "[", 
             RowBox[{"\"\<DumpSave[\>\"", "<>", 
              RowBox[{"ToString1", "[", "Lib", "]"}], "<>", "\"\<,\>\"", 
              "<>", "\"\<LibBase]\>\""}], "]"}]}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Table1", "[", 
               RowBox[{"LibBase", ",", "x"}], "]"}], "===", "$Failed"}], ",", 
             "$Failed", ",", 
             RowBox[{
              RowBox[{"b", "=", 
               RowBox[{"Table1", "[", 
                RowBox[{"LibBase", ",", "x"}], "]"}]}], ";", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"!", 
                 RowBox[{"SameQ", "[", 
                  RowBox[{"b", ",", "$Failed"}], "]"}]}], ",", 
                RowBox[{
                 RowBox[{"ToExpression", "[", "b", "]"}], ";", " ", 
                 RowBox[{"x", "[", "y", "]"}]}]}], "]"}]}], ",", "$Failed"}], 
            "]"}]}], "]"}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`UsageBase`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UsageBase", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
       "\"\<mx\>\""}]}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Get", "[", "x", "]"}]}], ",", "b", ",", 
      RowBox[{"c", "=", "6"}], ",", "d", ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", "y", "}"}], "==", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"ToExpression", ",", "BaseHelp"}], "]"}], ";"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"{", "y", "}"}], "]"}], "\[Equal]", "1"}], "&&", 
         RowBox[{"SameQ", "[", 
          RowBox[{"y", ",", "\"\<?\>\""}], "]"}]}], ",", "BaseHelp", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"{", "y", "}"}], "]"}], "\[Equal]", "1"}], "&&", 
           RowBox[{"SymbolQ", "[", "y", "]"}]}], ",", 
          RowBox[{
           RowBox[{"BaseHelp", "=", 
            RowBox[{"Select", "[", 
             RowBox[{"BaseHelp", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"StringTake", "[", 
                 RowBox[{"#1", ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"#", ",", "\"\<::usage\>\""}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], 
                "\[NotEqual]", 
                RowBox[{
                 RowBox[{"ToString", "[", "y", "]"}], "<>", 
                 "\"\<::usage\>\""}]}], "&"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"ToExpression", "[", 
            RowBox[{"\"\<DumpSave[\>\"", "<>", 
             RowBox[{"ToString1", "[", "x", "]"}], "<>", "\"\<,\>\"", "<>", 
             "\"\<BaseHelp]\>\""}], "]"}], ";"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"{", "y", "}"}], "]"}], "\[Equal]", "1"}], "&&", 
             RowBox[{"StringQ", "[", "y", "]"}], "&&", 
             RowBox[{"!", 
              RowBox[{"StringFreeQ", "[", 
               RowBox[{"y", ",", 
                RowBox[{"{", 
                 RowBox[{"\"\<::usage=\>\"", ",", "\"\<::usage =\>\""}], 
                 "}"}]}], "]"}]}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"BaseHelp", "\[Equal]", 
                RowBox[{"{", "}"}]}], ",", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"BaseHelp", ",", "y"}], "]"}], ",", " ", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"b", "=", 
                 RowBox[{"StringTake", "[", 
                  RowBox[{"y", ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"y", ",", "\"\<::usage\>\""}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"For", "[", 
                 RowBox[{"k", ",", 
                  RowBox[{"k", "\[LessEqual]", 
                   RowBox[{"Length", "[", "BaseHelp", "]"}]}], ",", 
                  RowBox[{"k", "++"}], ",", 
                  RowBox[{
                   RowBox[{"d", "=", 
                    RowBox[{"BaseHelp", "[", 
                    RowBox[{"[", "k", "]"}], "]"}]}], ";", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringTake", "[", 
                    RowBox[{"d", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"d", ",", "\"\<::usage\>\""}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], "===", 
                    "b"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"BaseHelp", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "=", "y"}], ";", " ", 
                    RowBox[{"c", "=", "90"}], ";", " ", 
                    RowBox[{"Break", "[", "]"}]}]}], "]"}]}]}], "]"}], ";", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"c", "\[NotEqual]", "90"}], ",", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"BaseHelp", ",", "y"}], "]"}]}], "]"}]}]}], "]"}], 
             ";", " ", "\[IndentingNewLine]", 
             RowBox[{"ToExpression", "[", 
              RowBox[{"\"\<DumpSave[\>\"", "<>", 
               RowBox[{"ToString1", "[", "x", "]"}], "<>", "\"\<,\>\"", "<>", 
               "\"\<BaseHelp]\>\""}], "]"}], ";"}]}], "]"}]}], "]"}]}], 
       "]"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ClearOut`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearOut", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"PosIntQ", "[", "x", "]"}], "||", 
     RowBox[{"PosIntListQ", "[", "x", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", "x", "}"}], "]"}]}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Unprotect", "[", "Out", "]"}], ";", 
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Out", "[", 
          RowBox[{"a", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}],
           "]"}], ")"}], "=."}]}], "]"}], ";", 
     RowBox[{"Protect", "[", "Out", "]"}], ";"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`RemovePF`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RemovePF", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"HeadingQ1", "[", "x", "]"}], "||", 
     RowBox[{
      RowBox[{"ListQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"HeadingQ1", ",", "x"}], "]"}], "]"}], "\[Equal]", 
       RowBox[{"{", "True", "}"}]}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", "d", ",", "p", ",", 
      RowBox[{"k", "=", "1"}], ",", "j", ",", 
      RowBox[{"a", "=", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"HeadName", ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", "x", "}"}], "]"}]}], "]"}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"UnevaluatedQ", "[", 
            RowBox[{"Definition2", ",", "#"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<90\>\"", ",", 
             RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"Definition2", "[", "#", "]"}]}], "]"}], "&"}], ",", "a"}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"p", "=", 
         RowBox[{"b", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", " ", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"c", ",", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"p", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ";;", " ", 
                  RowBox[{"-", "2"}]}], "]"}], "]"}], ",", 
               RowBox[{"\"\<SetAttributes[\>\"", "<>", 
                RowBox[{"a", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "<>", "\"\<, \>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"p", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}], "]"}], "<>", 
                "\"\<]\>\""}]}], "}"}], "]"}], ",", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"SuffPref", "[", 
               RowBox[{"#", ",", 
                RowBox[{"Map", "[", 
                 RowBox[{"StandHead", ",", "x"}], "]"}], ",", "1"}], "]"}]}], 
             "&"}]}], "]"}]}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{"ClearAllAttributes", ",", "a"}], "]"}], ";", 
     RowBox[{"Map", "[", 
      RowBox[{"Remove", ",", "a"}], "]"}], ";", 
     RowBox[{"Map", "[", 
      RowBox[{"ToExpression", ",", "c"}], "]"}], ";", 
     RowBox[{"a", "=", 
      RowBox[{"Definition2", "[", 
       RowBox[{"b", "=", 
        RowBox[{"HeadName", "[", "x", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "===", "\"\<Undefined\>\""}], ",", 
       RowBox[{"ToExpression", "[", 
        RowBox[{"\"\<ClearAttributes[\>\"", "<>", "b", "<>", "\"\<,\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"a", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<]\>\""}], "]"}], 
       ",", "Null"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ClearValues`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearValues", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"ListQ", "[", "x", "]"}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "y", "}"}], "\[Equal]", 
         RowBox[{"{", "}"}]}], ",", "Remove", ",", "ClearAll"}], "]"}], ",", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Names", "[", "\"\<`*\>\"", "]"}], ",", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"x", ",", 
           RowBox[{"ToExpression", "[", "#", "]"}]}], "]"}], "&"}]}], "]"}]}],
      "]"}], ",", 
    RowBox[{
     RowBox[{"#", "\[NotEqual]", "\"\<Null\>\""}], "&"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ClearContextVars`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearContextVars", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Contexts", "[", "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"StringCount", "[", 
            RowBox[{"#", ",", "\"\<`\>\""}], "]"}], "\[Equal]", "1"}], 
          "&"}]}], "]"}], ",", "x"}], "]"}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Context", "[", "#", "]"}], "\[Equal]", "x"}], ",", 
       RowBox[{
        RowBox[{"ClearAttributes", "[", 
         RowBox[{"#", ",", "Protected"}], "]"}], ";", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", "y", "}"}], "\[NotEqual]", 
            RowBox[{"{", "}"}]}], ",", "ClearAll", ",", "Remove"}], "]"}], 
         "[", "#", "]"}], ";", " ", "#"}], ",", "Nothing"}], "]"}], "&"}], 
    ",", 
    RowBox[{"Names", "[", "\"\<`*\>\"", "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`VarsValues`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"VarsValues", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ListQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Names", "[", "\"\<`*\>\"", "]"}], ",", 
    RowBox[{
     RowBox[{"MemberQ", "[", 
      RowBox[{"x", ",", 
       RowBox[{"ToExpression", "[", "#", "]"}]}], "]"}], "&"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`FileFormat1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FileFormat1", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "a", "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"FileFormat", "[", "x", "]"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{"SearchFile", "[", "x", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"a", "\[Equal]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{
          RowBox[{"a", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"#", ",", 
                RowBox[{"FileFormat", "[", "#", "]"}]}], "}"}], "&"}], ",", 
             "a"}], "]"}]}], ";", " ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "1"}], ",", 
            RowBox[{"a", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "a"}], "]"}]}]}], "]"}]}]}],
      "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`FileFormat2`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FileFormat2", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", "c", ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"StringLength", "[", "x", "]"}], "\[Equal]", "3"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<:/\>\"", ",", "\"\<:\\\\\>\""}], "}"}], ",", 
            RowBox[{"StringTake", "[", 
             RowBox[{"x", ",", 
              RowBox[{"-", "2"}]}], "]"}]}], "]"}], "&&", 
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"Adrive", "[", "]"}], ",", 
            RowBox[{"ToUpperCase", "[", 
             RowBox[{"StringTake", "[", 
              RowBox[{"x", ",", "1"}], "]"}], "]"}]}], "]"}]}], ",", 
         RowBox[{"Return", "[", "\"\<Directory\>\"", "]"}], ",", "Null"}], 
        "]"}], ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"DirectoryQ", "[", "x", "]"}], ",", 
          RowBox[{"Return", "[", "\"\<Directory\>\"", "]"}], ",", 
          RowBox[{"a", "=", 
           RowBox[{"SearchFile", "[", "x", "]"}]}]}], "]"}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"a", "\[Equal]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"Return", "[", 
           RowBox[{"{", "}"}], "]"}], ",", 
          RowBox[{"For", "[", 
           RowBox[{"k", ",", 
            RowBox[{"k", "\[LessEqual]", 
             RowBox[{"Length", "[", "a", "]"}]}], ",", 
            RowBox[{"k", "++"}], ",", 
            RowBox[{
             RowBox[{"c", "=", 
              RowBox[{"a", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"b", ",", 
               RowBox[{"{", 
                RowBox[{"c", ",", 
                 RowBox[{"FileFormat", "[", "c", "]"}]}], "}"}]}], "]"}]}]}], 
           "]"}]}], "]"}]}]}], "]"}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "b", "]"}], "\[Equal]", "1"}], ",", 
       RowBox[{"b", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "b"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`FileFormat3`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FileFormat3", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"FileExistsQ", "[", "x", "]"}]}], ",", "t___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b", ",", "c", ",", 
      RowBox[{"a", "=", 
       RowBox[{"FileExtension", "[", "x", "]"}]}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"a", "\[NotEqual]", "\"\<\>\""}], ",", 
      RowBox[{"ToUpperCase", "[", "a", "]"}], ",", 
      RowBox[{
       RowBox[{"c", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Quiet", "[", 
            RowBox[{"StringTake", "[", 
             RowBox[{
              RowBox[{"Read", "[", 
               RowBox[{"x", ",", "String"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "5"}], "}"}]}], "]"}], "]"}], "===", 
           "\"\<%PDF-\>\""}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Close", "[", "x", "]"}], ",", "\"\<PDF\>\""}], "}"}], 
           "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Close", "[", "x", "]"}], ";", 
           RowBox[{"b", "=", 
            RowBox[{"ReadFullFile", "[", "x", "]"}]}], ";", " ", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"StringFreeQ", "[", 
               RowBox[{"b", ",", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<MSWordDoc\>\"", ",", "\"\<Microsoft Office Word\>\""}], 
                 "}"}]}], "]"}]}], ",", "\"\<DOC\>\"", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"!", 
                RowBox[{"StringFreeQ", "[", 
                 RowBox[{"b", ",", "\"\<.opendocument.textPK\>\""}], "]"}]}], 
               ",", "\"\<ODT\>\"", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"!", 
                  RowBox[{"StringFreeQ", "[", 
                   RowBox[{"b", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<!DOCTYPE HTML \>\"", ",", "\"\<text/html\>\""}], 
                    "}"}]}], "]"}]}], ",", "\"\<HTML\>\"", ",", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"MemberQ3", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"0", ",", "255"}], "]"}], ",", 
                    RowBox[{"DeleteDuplicates", "[", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToCharacterCode", "[", "#", "]"}], "&"}], ",", 
                    RowBox[{"DeleteDuplicates", "[", 
                    RowBox[{"Characters", "[", "b", "]"}], "]"}]}], "]"}], 
                    "]"}], "]"}]}], "]"}], ",", "\"\<TXT\>\"", ",", 
                   "Undefined"}], "]"}]}], "]"}]}], "]"}]}], "]"}]}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "t", "}"}], "\[NotEqual]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{
          RowBox[{"Quiet", "[", 
           RowBox[{"Close", "[", "x", "]"}], "]"}], ";", " ", 
          RowBox[{"RenameFile", "[", 
           RowBox[{"x", ",", 
            RowBox[{"x", "<>", "\"\<.\>\"", "<>", "c"}]}], "]"}]}], ",", 
         "c"}], "]"}]}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`QSaveGUI`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"QSaveGUI", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
     RowBox[{
      RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", "\"\<m\>\""}]}], 
    ",", 
    RowBox[{"SuffPref", "[", 
     RowBox[{
      RowBox[{"ReadFullFile", "[", "x", "]"}], ",", 
      "\"\<(* ::Package:: *)\>\"", ",", "1"}], "]"}], ",", "False"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`LoadExtProg`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LoadExtProg", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Directory", "[", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Unique", "[", "\"\<agn\>\"", "]"}]}], ",", "c", ",", "d", ",",
       "h"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"PathToFileQ", "[", "x", "]"}], "&&", " ", 
       RowBox[{"FileExistsQ", "[", "x", "]"}]}], ",", 
      RowBox[{"CopyFileToDir", "[", 
       RowBox[{"x", ",", 
        RowBox[{"Directory", "[", "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"PathToFileQ", "[", "x", "]"}], "&&", " ", 
         RowBox[{"!", 
          RowBox[{"FileExistsQ", "[", "x", "]"}]}]}], ",", "$Failed", ",", 
        " ", 
        RowBox[{
         RowBox[{"d", "=", 
          RowBox[{"a", "<>", "\"\<\\\\\>\"", "<>", "x"}]}], ";", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"FileExistsQ", "[", "d", "]"}], ",", "d", ",", " ", 
           "\[IndentingNewLine]", " ", 
           RowBox[{
            RowBox[{"h", "=", 
             RowBox[{"FileExistsQ1", "[", 
              RowBox[{"x", ",", "b"}], "]"}]}], ";", "  ", 
            RowBox[{"If", "[", 
             RowBox[{"h", ",", 
              RowBox[{
               RowBox[{"CopyFileToDir", "[", 
                RowBox[{
                 RowBox[{"b", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "a"}], "]"}], ";", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", "y", "}"}], "==", 
                  RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"$Path", ",", 
                   RowBox[{"FileNameJoin", "[", 
                    RowBox[{
                    RowBox[{"FileNameSplit", "[", 
                    RowBox[{"b", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ";;", 
                    RowBox[{"-", "2"}]}], "]"}], "]"}], "]"}]}], "]"}], ",", 
                 RowBox[{"y", "=", "b"}]}], "]"}], ";", " ", "d"}], ",", 
              "$Failed"}], "]"}]}]}], "]"}]}]}], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`CallsInProc`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CallsInProc", "[", 
   RowBox[{"P_", "/;", 
    RowBox[{"BlockFuncModQ", "[", "P", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"a", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"FullDefinition", "[", "P", "]"}], "]"}]}], ",", "TN"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"TN", "[", 
       RowBox[{
        RowBox[{"S_", "/;", 
         RowBox[{"StringQ", "[", "S", "]"}]}], ",", 
        RowBox[{"L_", "/;", 
         RowBox[{
          RowBox[{"ListQ", "[", "L", "]"}], "&&", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"Select", "[", 
             RowBox[{"L", ",", 
              RowBox[{
               RowBox[{"IntegerQ", "[", "#", "]"}], "&"}]}], "]"}], "]"}], 
           "\[Equal]", 
           RowBox[{"Length", "[", "L", "]"}]}], "&&", 
          RowBox[{"L", "\[NotEqual]", 
           RowBox[{"{", "}"}]}]}]}]}], "]"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"a1", "=", "\"\<\>\""}], ",", "c1", ",", 
          RowBox[{"b1", "=", 
           RowBox[{"{", "}"}]}], ",", "k1", ",", 
          RowBox[{"p", "=", "1"}]}], "}"}], ",", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{"p", ",", 
           RowBox[{"p", "\[LessEqual]", 
            RowBox[{"Length", "[", "L", "]"}]}], ",", 
           RowBox[{"p", "++"}], ",", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"k1", "=", 
              RowBox[{
               RowBox[{"L", "[", 
                RowBox[{"[", "p", "]"}], "]"}], "-", "1"}]}], ",", 
             RowBox[{"k1", "\[NotEqual]", "0"}], ",", 
             RowBox[{"k1", "--"}], ",", 
             RowBox[{
              RowBox[{"c1", "=", 
               RowBox[{"StringTake", "[", 
                RowBox[{"S", ",", 
                 RowBox[{"{", 
                  RowBox[{"k1", ",", "k1"}], "}"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"a1", "=", 
               RowBox[{"c1", "<>", "a1"}]}], ";", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"c1", "===", "\"\< \>\""}], ",", 
                RowBox[{
                 RowBox[{"a1", "=", 
                  RowBox[{"StringTake", "[", 
                   RowBox[{"a1", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Quiet", "[", 
                    RowBox[{"Check", "[", 
                    RowBox[{
                    RowBox[{"Symbol", "[", "a1", "]"}], ",", "False"}], "]"}],
                     "]"}], "===", "False"}], ",", 
                   RowBox[{
                    RowBox[{"a1", "=", "\"\<\>\""}], ";", 
                    RowBox[{"Break", "[", "]"}]}], ",", 
                   RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"b1", ",", "a1"}], "]"}], ";", 
                    RowBox[{"a1", "=", "\"\<\>\""}], ";", 
                    RowBox[{"Break", "[", "]"}]}]}], "]"}]}]}], "]"}]}]}], 
            "]"}]}], "]"}], ";", "b1"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{
       RowBox[{"TN", "[", 
        RowBox[{"a", ",", 
         RowBox[{"b", "=", 
          RowBox[{"DeleteDuplicates", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"StringPosition", "[", 
             RowBox[{"a", ",", "\"\<[\>\""}], "]"}], "]"}], "]"}]}]}], "]"}], 
       "[", 
       RowBox[{"[", 
        RowBox[{"2", ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Select", "[", 
         RowBox[{"b", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"StringFreeQ", "[", 
             RowBox[{"#", ",", "\"\<`\>\""}], "]"}], "&&", 
            RowBox[{"!", 
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\"\<Block\>\"", ",", 
                 RowBox[{"ToString", "[", "P", "]"}], ",", "\"\<Module\>\""}],
                 "}"}], ",", "#"}], "]"}]}], "&&", 
            RowBox[{
             RowBox[{"ToString", "[", 
              RowBox[{"Definition", "[", "#", "]"}], "]"}], "\[NotEqual]", 
             "\"\<Null\>\""}]}], "&"}]}], "]"}], "]"}], "]"}]}], ";", 
     RowBox[{"k", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"b", ",", 
        RowBox[{
         RowBox[{"SystemQ", "[", "#", "]"}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"MinusList", "[", 
       RowBox[{"b", ",", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"k", ",", 
           RowBox[{"ToString", "[", "P", "]"}]}], "}"}], "]"}]}], "]"}]}], 
     ";", " ", 
     RowBox[{"{", 
      RowBox[{"k", ",", "c", ",", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"Context", ",", "c"}], "]"}], "]"}]}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ProcLocals`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ProcLocals", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"ProcQ", "[", "x", "]"}]}], ",", "z___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"DefOpt", "[", 
        RowBox[{"ToString", "[", "x", "]"}], "]"}]}], ",", 
      RowBox[{"b", "=", "ArtKr"}], ",", "c", ",", 
      RowBox[{"m", "=", "1"}], ",", 
      RowBox[{"n", "=", "0"}], ",", "k", ",", "p", ",", 
      RowBox[{"h", "=", "\"\<\>\""}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Clear", "[", "ArtKr", "]"}], ";", 
     RowBox[{"ProcQ1", "[", 
      RowBox[{
       RowBox[{"ToString", "[", "x", "]"}], ",", "ArtKr"}], "]"}], ";", " ", 
     RowBox[{"c", "=", 
      RowBox[{"StringPosition", "[", 
       RowBox[{"a", ",", 
        RowBox[{"ArtKr", "<>", "\"\<[{\>\""}]}], "]"}]}], ";", " ", 
     RowBox[{"ArtKr", "=", "b"}], ";", " ", 
     RowBox[{"k", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"c", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "+", "1"}]}], ";", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"m", "!=", "n"}], ",", 
       RowBox[{
        RowBox[{"p", "=", 
         RowBox[{"StringTake", "[", 
          RowBox[{"a", ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "k"}], "}"}]}], "]"}]}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"p", "\[Equal]", "\"\<{\>\""}], ",", 
          RowBox[{
           RowBox[{"m", "++"}], ";", " ", 
           RowBox[{"h", "=", 
            RowBox[{"h", "<>", "p"}]}]}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"p", "\[Equal]", "\"\<}\>\""}], ",", 
            RowBox[{
             RowBox[{"n", "++"}], ";", " ", 
             RowBox[{"h", "=", 
              RowBox[{"h", "<>", "p"}]}]}], ",", 
            RowBox[{"h", "=", 
             RowBox[{"h", "<>", "p"}]}]}], "]"}]}], "]"}], ";", " ", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", "z", "}"}], "\[NotEqual]", 
         RowBox[{"{", "}"}]}], "&&", 
        RowBox[{
         RowBox[{"Definition1", "[", 
          RowBox[{
           RowBox[{"{", "z", "}"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "===", "\"\<Null\>\""}]}], 
       ",", 
       RowBox[{"z", "=", 
        RowBox[{"k", "+", "2"}]}]}], "]"}], ";", " ", 
     RowBox[{"\"\<{\>\"", "<>", "h"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ProcBody`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ProcBody", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"c", ",", "p", ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"HeadPF", "[", "x", "]"}], "}"}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{
        RowBox[{"p", "=", 
         RowBox[{"a", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"c", "=", 
         RowBox[{"Mapp", "[", 
          RowBox[{"Rule", ",", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"b", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "<>", "\"\< := \>\"", "<>", 
               "#"}], "&"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<Block[\>\"", ",", "\"\<Module[\>\"", ",", "\"\<\>\""}], 
              "}"}]}], "]"}], ",", "\"\<\>\""}], "]"}]}], ";", " ", 
        RowBox[{"c", "=", 
         RowBox[{"StringReplace", "[", 
          RowBox[{"p", ",", "c", ",", "1"}], "]"}]}], ";", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"d", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"BlockModQ", "[", "x", "]"}], ",", 
            RowBox[{"StringTake", "[", 
             RowBox[{
              RowBox[{"StringReplace", "[", 
               RowBox[{"c", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"SubStrSymbolParity1", "[", 
                    RowBox[{"c", ",", "\"\<{\>\"", ",", "\"\<}\>\""}], "]"}], 
                   "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "<>", "\"\<, \>\""}], 
                 "->", "\"\<\>\""}], ",", "1"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"-", "2"}]}], "}"}]}], "]"}], ",", "c"}], "]"}]}], 
         "]"}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", "  ", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "d", "]"}], "\[Equal]", "1"}], ",", 
       RowBox[{"d", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "d"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`FindFileContext`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FindFileContext", "[", 
   RowBox[{
    RowBox[{"x_", " ", "/;", " ", 
     RowBox[{"ContextQ", "[", "x", "]"}]}], ",", " ", "y___"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"b", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ",", " ", 
      RowBox[{"c", " ", "=", " ", "\"\<\>\""}], ",", " ", 
      RowBox[{"d", " ", "=", " ", 
       RowBox[{"StringJoin", "[", 
        RowBox[{"\"\<BeginPackage[\>\"", ",", " ", 
         RowBox[{"StrStr", "[", "x", "]"}], ",", " ", "\"\<]\>\""}], "]"}]}], 
      ",", " ", 
      RowBox[{"s", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ",", " ", 
      RowBox[{"k", " ", "=", " ", "1"}], ",", " ", 
      RowBox[{"j", " ", "=", " ", "1"}], ",", " ", 
      RowBox[{"a", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "y", "}"}], " ", "==", " ", 
          RowBox[{"{", "}"}]}], ",", " ", 
         RowBox[{"Adrive", "[", "]"}], ",", " ", 
         RowBox[{"{", "y", "}"}]}], "]"}]}], ",", " ", "\n", "    ", 
      RowBox[{"f", " ", "=", " ", "\"\<$Kr20_Art27$.txt\>\""}]}], "}"}], ",", 
    " ", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", " ", "<=", " ", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", " ", 
       RowBox[{
        RowBox[{"Run", "[", 
         RowBox[{"\"\<Dir \>\"", ",", " ", 
          RowBox[{"StringJoin", "[", 
           RowBox[{
            RowBox[{"a", "[", 
             RowBox[{"[", "k", "]"}], "]"}], ",", " ", "\"\<:\\\\*.*\>\""}], 
           "]"}], ",", " ", 
          RowBox[{"StringJoin", "[", 
           RowBox[{"\"\< /A/B/O/S > \>\"", ",", " ", "f"}], "]"}]}], "]"}], 
        ";", " ", "\n", "      ", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"c", " ", "===", " ", "EndOfFile"}]}], ",", " ", 
          RowBox[{
           RowBox[{"c", " ", "=", " ", 
            RowBox[{"Read", "[", 
             RowBox[{"f", ",", " ", "String"}], "]"}]}], ";", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"!", 
               RowBox[{"DirQ", "[", "c", "]"}]}], " ", "&&", " ", 
              RowBox[{
               RowBox[{"FileExtension", "[", "c", "]"}], " ", "==", " ", 
               "\"\<m\>\""}]}], ",", " ", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"b", ",", " ", "c"}], "]"}]}], "]"}], ";", " ", 
           RowBox[{"j", "++"}]}]}], "]"}], ";", "  ", 
        RowBox[{"c", " ", "=", " ", "\"\<\>\""}], ";", " ", 
        RowBox[{"j", " ", "=", " ", "1"}], ";", " ", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", " ", 
     RowBox[{"k", " ", "=", " ", "1"}], ";", " ", "\n", "    ", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", " ", "<=", " ", 
        RowBox[{"Length", "[", "b", "]"}]}], ",", " ", 
       RowBox[{
        RowBox[{"c", " ", "=", " ", 
         RowBox[{"ToString", "[", 
          RowBox[{"ReadFullFile", "[", 
           RowBox[{"b", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}]}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"StringFreeQ", "[", 
            RowBox[{"c", ",", " ", "d"}], "]"}]}], ",", " ", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"s", ",", " ", 
            RowBox[{"b", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], "]"}], ";", " ", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", " ", 
     RowBox[{"DeleteFile", "[", 
      RowBox[{"Close", "[", "f", "]"}], "]"}], ";", " ", "s"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`FindFileContext1`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FindFileContext1", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ContextQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"FindFileContext", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"$Packages", ",", "x"}], "]"}], ",", "\"\<Current\>\"", ",", 
         RowBox[{"{", "}"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"a", "\[NotEqual]", 
        RowBox[{"{", "}"}]}], "&&", 
       RowBox[{"!", 
        RowBox[{"SameQ", "[", 
         RowBox[{"b", ",", 
          RowBox[{"{", "}"}]}], "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"b", ",", "a"}], "}"}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"a", "\[NotEqual]", 
          RowBox[{"{", "}"}]}], "&&", 
         RowBox[{"SameQ", "[", 
          RowBox[{"b", ",", 
           RowBox[{"{", "}"}]}], "]"}]}], ",", "a", ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"a", "\[Equal]", 
            RowBox[{"{", "}"}]}], "&&", 
           RowBox[{"!", 
            RowBox[{"SameQ", "[", 
             RowBox[{"b", ",", 
              RowBox[{"{", "}"}]}], "]"}]}]}], ",", "b", ",", 
          RowBox[{"{", "}"}]}], "]"}]}], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ContextInFile`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContextInFile", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"ContextQ", "[", "x", "]"}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b", ",", "d", ",", "h", ",", "Tav", ",", 
      RowBox[{"c", "=", "\"\<$Art27Kr20$\>\""}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", "y", "}"}], "\[NotEqual]", 
         RowBox[{"{", "}"}]}], "&&", 
        RowBox[{"DirQ", "[", "y", "]"}]}], ",", 
       RowBox[{"Run", "[", 
        RowBox[{"\"\<DIR \>\"", "<>", 
         RowBox[{"StandPath", "[", "y", "]"}], "<>", 
         "\"\</A/B/O/S > $Art27Kr20$\>\""}], "]"}], ",", 
       RowBox[{
       "Run", "[", "\"\<DIR C:\\\\   /A/B/O/S > $Art27Kr20$\>\"", "]"}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"d", "=", 
      RowBox[{"ReadList", "[", 
       RowBox[{"c", ",", "String"}], "]"}]}], ";", 
     RowBox[{"DeleteFile", "[", "c", "]"}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Tav", "[", 
       RowBox[{"t_", "/;", 
        RowBox[{"ListQ", "[", "t", "]"}]}], "]"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"m", ",", 
          RowBox[{"v", "=", 
           RowBox[{"{", "}"}]}], ",", "k", ",", "z", ",", 
          RowBox[{"a", "=", 
           RowBox[{"\"\<BeginPackage[\>\"", "<>", 
            RowBox[{"ToString1", "[", "x", "]"}], "<>", "\"\<]\>\""}]}]}], 
         "}"}], ",", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"FileExistsQ", "[", "#", "]"}], "&&", 
               RowBox[{"MemberQ", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<cdf\>\"", ",", "\"\<nb\>\"", ",", "\"\<m\>\"", ",", 
                   "\"\<mx\>\"", ",", "\"\<tr\>\""}], "}"}], ",", 
                 RowBox[{"FileExtension", "[", "#", "]"}]}], "]"}]}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"MemberQ", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\"\<tr\>\"", ",", "\"\<m\>\""}], "}"}], ",", 
                   RowBox[{"FileExtension", "[", "#", "]"}]}], "]"}], "&&", 
                 RowBox[{"!", 
                  RowBox[{"StringFreeQ", "[", 
                   RowBox[{
                    RowBox[{"ReadFullFile", "[", "#", "]"}], ",", "a"}], 
                   "]"}]}]}], ",", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"v", ",", "#"}], "]"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"MemberQ", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<cdf\>\"", ",", "\"\<nb\>\""}], "}"}], ",", 
                    RowBox[{"FileExtension", "[", "#", "]"}]}], "]"}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"m", ",", "h", ",", "k"}], "}"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "\"\<\>\"", ",", "1"}], "}"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"For", "[", 
                    RowBox[{"k", ",", 
                    RowBox[{"k", "<", "Infinity"}], ",", 
                    RowBox[{"k", "++"}], ",", 
                    RowBox[{
                    RowBox[{"h", "=", 
                    RowBox[{"Read", "[", 
                    RowBox[{"#", ",", "String"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"h", "===", "EndOfFile"}], ",", 
                    RowBox[{
                    RowBox[{"Close", "[", "#", "]"}], ";", 
                    RowBox[{"Break", "[", "]"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"StringFreeQ", "[", 
                    RowBox[{"h", ",", "\"\<BeginPackage\>\""}], "]"}]}], "&&", 
                    RowBox[{"!", 
                    RowBox[{"StringFreeQ", "[", 
                    RowBox[{"h", ",", "x"}], "]"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"m", "=", "90"}], ";", 
                    RowBox[{"Close", "[", "#", "]"}], ";", 
                    RowBox[{"Break", "[", "]"}]}], ",", 
                    RowBox[{"Continue", "[", "]"}]}], "]"}]}], "]"}]}]}], 
                    "]"}], ";", "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"m", "\[Equal]", "90"}], ",", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"v", ",", "#"}], "]"}], ",", "Null"}], "]"}]}], 
                  ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"FileExtension", "[", "#", "]"}], "\[Equal]", 
                    "\"\<mx\>\""}], ",", 
                    RowBox[{
                    RowBox[{"z", "=", 
                    RowBox[{"StringPosition", "[", 
                    RowBox[{
                    RowBox[{"ReadFullFile", "[", "#", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<CONT\>\"", ",", "\"\<ENDCONT\>\""}], "}"}]}],
                     "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"StringFreeQ", "[", 
                    RowBox[{
                    RowBox[{"StringTake", "[", 
                    RowBox[{
                    RowBox[{"ReadFullFile", "[", "#", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"z", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"z", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"\"\< \>\"", "<>", "x", "<>", "\"\< \>\""}]}], 
                    "]"}]}], ";", " ", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"v", ",", "#"}], "]"}]}], ",", "Null"}], 
                    "]"}]}]}], "]"}]}], "]"}]}], "]"}], ",", "Null"}], "]"}], 
            "&"}], ",", "t"}], "]"}], ";", " ", "v"}]}], "]"}]}], ";", " ", 
     RowBox[{"Tav", "[", "d", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`FindFileObject`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FindFileObject", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"!", 
      RowBox[{"SameQ", "[", 
       RowBox[{
        RowBox[{"ToString", "[", 
         RowBox[{"DefOpt", "[", 
          RowBox[{"ToString", "[", "x", "]"}], "]"}], "]"}], ",", 
        "\"\<Null\>\""}], "]"}]}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"c", "=", "\"\<\>\""}], ",", 
      RowBox[{"s", "=", 
       RowBox[{"{", "}"}]}], ",", "d", ",", 
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"a", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "y", "}"}], "\[Equal]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"Adrive", "[", "]"}], ",", 
         RowBox[{"{", "y", "}"}]}], "]"}]}], ",", 
      RowBox[{"f", "=", "\"\<ArtKr\>\""}], ",", 
      RowBox[{"h", "=", 
       RowBox[{"\"\<(*Begin[\\\"`\>\"", "<>", 
        RowBox[{"ToString", "[", "x", "]"}], "<>", "\"\<`\\\"]*)\>\""}]}], 
      ",", 
      RowBox[{"p", "=", 
       RowBox[{"\"\<(*\>\"", "<>", 
        RowBox[{"ToString", "[", "x", "]"}], "<>", "\"\<::usage=\>\""}]}], 
      ",", "t"}], "}"}], ",", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{
        RowBox[{"Run", "[", 
         RowBox[{"\"\<Dir \>\"", ",", 
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "<>", "\"\<:\\\\\>\""}], ",", 
          RowBox[{"\"\< /B/S/L > \>\"", "<>", "f"}]}], "]"}], ";", " ", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"SameQ", "[", 
            RowBox[{"c", ",", "\"\<EndOfFile\>\""}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"c", "=", 
            RowBox[{"ToString", "[", 
             RowBox[{"Read", "[", 
              RowBox[{"f", ",", "String"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"StringTake", "[", 
               RowBox[{"c", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "2"}], ",", 
                  RowBox[{"-", "1"}]}], "}"}]}], "]"}], "\[Equal]", 
              "\"\<.m\>\""}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"b", ",", "c"}], "]"}]}], "]"}], ";", " ", 
           RowBox[{"Continue", "[", "]"}]}]}], "]"}], ";", 
        RowBox[{"Quiet", "[", 
         RowBox[{"Close", "[", "f", "]"}], "]"}], ";", 
        RowBox[{"c", "=", "\"\<\>\""}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", 
     RowBox[{"k", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "b", "]"}]}], ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"ReadList", "[", 
              RowBox[{
               RowBox[{"b", "[", 
                RowBox[{"[", "k", "]"}], "]"}], ",", "String"}], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"!", 
                RowBox[{"StringFreeQ", "[", 
                 RowBox[{"#", ",", "h"}], "]"}]}], "&&", 
               RowBox[{"StringFreeQ", "[", 
                RowBox[{"#", ",", "p"}], "]"}]}], "&"}]}], "]"}], 
           "\[NotEqual]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"s", ",", 
            RowBox[{"b", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], "]"}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DeleteFile", "[", "f", "]"}], ",", "s"}], "}"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`NamesFromMx`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NamesFromMx", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
     RowBox[{
      RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
      "\"\<mx\>\""}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ContextFromFile", "[", "x", "]"}]}], ",", "b"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"$ContextPath", ",", "a"}], "]"}], ",", 
      RowBox[{"CNames", "[", "a", "]"}], ",", 
      RowBox[{
       RowBox[{"Get", "[", "x", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"b", "=", 
        RowBox[{"CNames", "[", "a", "]"}]}], ";", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Close1", "[", 
           RowBox[{"2", ",", 
            RowBox[{"a", "<>", "#"}]}], "]"}], "&"}], ",", "b"}], "]"}], ";", 
       " ", 
       RowBox[{"$ContextPath", "=", 
        RowBox[{"MinusList", "[", 
         RowBox[{"$ContextPath", ",", 
          RowBox[{"{", "a", "}"}]}], "]"}]}], ";", "b"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`NamesFromMx1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NamesFromMx1", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
     RowBox[{
      RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
      "\"\<mx\>\""}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", "p", ",", 
      RowBox[{"h", "=", "\"\<\>\""}], ",", 
      RowBox[{"k", "=", "1"}], ",", "j", ",", "m", ",", "n", ",", 
      RowBox[{"a", "=", 
       RowBox[{"ContextFromFile", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"ReadFullFile", "[", "x", "]"}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"FromCharacterCode", ",", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"ToCharacterCode", "[", "b", "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"#", ">", "32"}], "&&", 
             RowBox[{"#", "<", "128"}]}], "&"}]}], "]"}]}], "]"}], "]"}]}], 
     ";", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n", ",", "m"}], "}"}], "=", 
      RowBox[{"Map", "[", 
       RowBox[{"StringLength", ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", "b"}], "}"}]}], "]"}]}], ";", " ", 
     RowBox[{"c", "=", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "+", "n"}], "&"}], ",", 
         RowBox[{"StringPosition", "[", 
          RowBox[{"b", ",", "a"}], "]"}]}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"2", ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "c", "]"}]}], ",", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", 
           RowBox[{"c", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ",", 
          RowBox[{"j", "\[LessEqual]", "m"}], ",", 
          RowBox[{"j", "++"}], ",", 
          RowBox[{
           RowBox[{"p", "=", 
            RowBox[{"StringTake", "[", 
             RowBox[{"b", ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "j"}], "}"}]}], "]"}]}], ";", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"p", "\[Equal]", "\"\<`\>\""}], ",", 
             RowBox[{
              RowBox[{"AppendTo", "[", 
               RowBox[{"d", ",", "h"}], "]"}], ";", 
              RowBox[{"h", "=", "\"\<\>\""}], ";", 
              RowBox[{"Break", "[", "]"}]}], ",", 
             RowBox[{"h", "=", 
              RowBox[{"h", "<>", "p"}]}]}], "]"}]}]}], "]"}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", " ", 
     RowBox[{"Sort", "[", 
      RowBox[{"MinusList", "[", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{"d", ",", 
          RowBox[{
           RowBox[{"SymbolQ", "[", "#", "]"}], "&"}]}], "]"}], ",", 
        RowBox[{"{", "\"\<Private\>\"", "}"}]}], "]"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`NamesFromMx2`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NamesFromMx2", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
     RowBox[{
      RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
      "\"\<mx\>\""}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"ReadFullFile", "[", "x", "]"}], "]"}]}], ",", "b"}], "}"}], 
    ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"ToCharacterCode", "[", "a", "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "\[Equal]", "255"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", ">", "31"}], "&&", 
            RowBox[{"#", "<", "123"}], "&&", 
            RowBox[{"!", 
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Range", "[", 
                   RowBox[{"37", ",", "47"}], "]"}], ",", 
                  RowBox[{"Range", "[", 
                   RowBox[{"91", ",", "95"}], "]"}]}], "}"}], "]"}], ",", 
               "#"}], "]"}]}]}], ")"}]}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"ReduceList", "[", 
       RowBox[{"b", ",", "255", ",", "1", ",", "1"}], "]"}]}], ";", " ", 
     RowBox[{"b", "=", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Quiet", "[", 
         RowBox[{"SplitList", "[", 
          RowBox[{"b", ",", "96"}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"#", "\[NotEqual]", 
          RowBox[{"{", "}"}]}], "&"}]}], "]"}]}], ";", " ", 
     RowBox[{"b", "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"FromCharacterCode", ",", "b"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Select", "[", 
        RowBox[{"b", ",", 
         RowBox[{
          RowBox[{"SymbolQ", "[", "#", "]"}], "&"}]}], "]"}], "]"}]}], ";", 
     " ", 
     RowBox[{"Sort", "[", 
      RowBox[{"Select", "[", 
       RowBox[{"b", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"!", 
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<Private\>\"", ",", "\"\<System\>\""}], "}"}], ",", 
             "#"}], "]"}]}], "&&", 
          RowBox[{"StringFreeQ", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"StringTake", "[", 
               RowBox[{
                RowBox[{"ContextFromFile", "[", "x", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", 
                  RowBox[{"-", "2"}]}], "}"}]}], "]"}], ",", 
              "\"\<\[YDoubleDot]\>\""}], "}"}]}], "]"}]}], "&"}]}], "]"}], 
      "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SuffPref`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SuffPref", "[", 
   RowBox[{
    RowBox[{"S_", "/;", 
     RowBox[{"StringQ", "[", "S", "]"}]}], ",", 
    RowBox[{"s_", "/;", 
     RowBox[{
      RowBox[{"StringQ", "[", "s", "]"}], "||", 
      RowBox[{
       RowBox[{"ListQ", "[", "s", "]"}], " ", "&&", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Map", "[", 
          RowBox[{"StringQ", ",", "s"}], "]"}], "]"}], "\[Equal]", 
        RowBox[{"{", "True", "}"}]}]}]}]}], ",", 
    RowBox[{"n_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", "n"}], "]"}]}]}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"StringFreeQ", "[", 
       RowBox[{"S", ",", "s"}], "]"}], ",", "False", ",", 
      RowBox[{
       RowBox[{"b", "=", 
        RowBox[{"StringLength", "[", "S", "]"}]}], ";", 
       RowBox[{"c", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"StringPosition", "[", 
          RowBox[{"S", ",", "s"}], "]"}], "]"}]}], ";", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"n", "\[Equal]", "3"}], "&&", 
          RowBox[{
           RowBox[{"c", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "1"}], "&&", 
          RowBox[{
           RowBox[{"c", "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}], "\[Equal]", "b"}]}], ",", 
         "True", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"n", "\[Equal]", "1"}], "&&", 
            RowBox[{
             RowBox[{"c", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "1"}]}], ",", 
           "True", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"n", "\[Equal]", "2"}], "&&", 
              RowBox[{
               RowBox[{"c", "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}], "\[Equal]", "b"}]}], ",", 
             "True", ",", "False"}], "]"}]}], "]"}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`CDir`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CDir", "[", 
   RowBox[{"d_", "/;", 
    RowBox[{"StringQ", "[", "d", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "a", "}"}], ",", 
    RowBox[{"Quiet", "[", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"StringTake", "[", 
         RowBox[{"d", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "2"}], "}"}]}], "]"}], "\[Equal]", "\"\<:\>\""}],
        ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"a", ",", 
           RowBox[{"StringTake", "[", 
            RowBox[{"d", ",", "1"}], "]"}]}], "]"}], ",", 
         RowBox[{"CreateDirectory", "[", "d", "]"}], ",", 
         RowBox[{
          RowBox[{"a", "=", 
           RowBox[{"Adrive", "[", "]"}]}], ";", 
          RowBox[{"CreateDirectory", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Sort", "[", 
              RowBox[{"a", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"FreeSpaceVol", "[", "#1", "]"}], "\[GreaterEqual]", 
                 RowBox[{"FreeSpaceVol", "[", "#2", "]"}]}], "&"}]}], "]"}], 
             "[", 
             RowBox[{"[", "1", "]"}], "]"}], "<>", 
            RowBox[{"StringTake", "[", 
             RowBox[{"d", ",", 
              RowBox[{"{", 
               RowBox[{"2", ",", 
                RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "]"}]}]}], "]"}], ",", 
       RowBox[{"CreateDirectory", "[", "d", "]"}]}], "]"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Map2`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map2", "[", 
   RowBox[{
    RowBox[{"F_", "/;", 
     RowBox[{"SymbolQ", "[", "F", "]"}]}], ",", 
    RowBox[{"c_", "/;", 
     RowBox[{"ListQ", "[", "c", "]"}]}], ",", 
    RowBox[{"d_", "/;", 
     RowBox[{"ListQ", "[", "d", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Symbol", "[", 
       RowBox[{"ToString", "[", "F", "]"}], "]"}], "[", 
      RowBox[{"#", ",", 
       RowBox[{"Sequences", "[", "d", "]"}]}], "]"}], "&"}], ",", "c"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Map1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map1", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"ListQ", "[", "x", "]"}], "&&", 
      RowBox[{"SameQ", "[", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"SymbolQ", "[", "#", "]"}], "&"}], ",", "x"}], "]"}], 
         "]"}], ",", 
        RowBox[{"{", "True", "}"}]}], "]"}]}]}], ",", "y_List"}], "]"}], ":=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Symbol", "[", 
       RowBox[{"ToString", "[", "#", "]"}], "]"}], "[", 
      RowBox[{"Sequences", "[", "y", "]"}], "]"}], "&"}], ",", "x"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`PalindromeQ1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PalindromeQ1", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"x", "\[Equal]", 
     RowBox[{"StringReverse", "[", "x", "]"}]}], ",", "True", ",", "False"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`MaximalPalindromicSubstring`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MaximalPalindromicSubstring", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", "c", ",", 
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"a", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"StringJoin", ",", 
           RowBox[{"Subsets", "[", 
            RowBox[{"Characters", "[", "x", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{"#", "\[NotEqual]", "\"\<\>\""}], "&"}]}], "]"}]}]}], "}"}],
     ",", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"PalindromeQ", "[", 
          RowBox[{"a", "[", 
           RowBox[{"[", "k", "]"}], "]"}], "]"}], ",", 
         RowBox[{"b", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"b", ",", 
            RowBox[{"a", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], ",", "Null"}], 
        "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{
       RowBox[{"Sort", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"StringLength", ",", "b"}], "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}]}], ";", 
     RowBox[{"Select", "[", 
      RowBox[{"b", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"StringLength", "[", "#", "]"}], "\[Equal]", "c"}], "&"}]}], 
      "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SubsBstr`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SubsBstr", "[", 
   RowBox[{
    RowBox[{"S_", "/;", 
     RowBox[{"StringQ", "[", "S", "]"}]}], ",", 
    RowBox[{"x_", "/;", 
     RowBox[{"CharacterQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"CharacterQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", "}"}]}], ",", "c", ",", "h", ",", "n", ",", "m", ",", 
      RowBox[{"s", "=", "S"}], ",", "p", ",", "t"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"c", "[", 
       RowBox[{"s_", ",", "p_", ",", "t_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Map10", "[", 
         RowBox[{"StringFreeQ", ",", "s", ",", 
          RowBox[{"{", 
           RowBox[{"p", ",", "t"}], "}"}]}], "]"}], "]"}], "\[Equal]", 
       RowBox[{"{", "False", "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"c", "[", 
        RowBox[{"s", ",", "x", ",", "y"}], "]"}], ",", 
       RowBox[{
        RowBox[{"n", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"StringPosition", "[", 
            RowBox[{"s", ",", "x", ",", "1"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", " ", 
        RowBox[{"s", "=", 
         RowBox[{"StringTake", "[", 
          RowBox[{"s", ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", " ", 
        RowBox[{"m", "=", 
         RowBox[{"StringPosition", "[", 
          RowBox[{"s", ",", "y", ",", "1"}], "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"m", "\[Equal]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"Return", "[", "]"}], ",", 
          RowBox[{"m", "=", 
           RowBox[{
            RowBox[{"m", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], ";", " ", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"a", ",", 
          RowBox[{"h", "=", 
           RowBox[{"StringTake", "[", 
            RowBox[{"s", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "m"}], "}"}]}], "]"}]}]}], "]"}], ";", " ", 
        RowBox[{"s", "=", 
         RowBox[{"StringReplace", "[", 
          RowBox[{"s", ",", 
           RowBox[{"h", "\[Rule]", "\"\<\>\""}]}], "]"}]}], ";", " ", 
        RowBox[{"Continue", "[", "]"}]}]}], "]"}], ";", "a"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Map4`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map4", "[", 
   RowBox[{
    RowBox[{"F_", "/;", 
     RowBox[{"SymbolQ", "[", "F", "]"}]}], ",", 
    RowBox[{"L_", "/;", 
     RowBox[{"ListQ", "[", "L", "]"}]}], ",", "x_"}], "]"}], ":=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Symbol", "[", 
       RowBox[{"ToString", "[", "F", "]"}], "]"}], "[", 
      RowBox[{"#", ",", "x"}], "]"}], "&"}], ",", "L"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Levels`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Levels", "[", 
   RowBox[{"x_", ",", 
    RowBox[{"h_", "/;", 
     RowBox[{
      RowBox[{"ToString", "[", 
       RowBox[{"Definition", "[", "h", "]"}], "]"}], "\[Equal]", 
      "\"\<Null\>\""}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", "}"}]}], ",", "b", ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "<", "Infinity"}], ",", 
       RowBox[{
        RowBox[{"b", "=", 
         RowBox[{"Level", "[", 
          RowBox[{"x", ",", "k"}], "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"a", "==", "b"}], ",", 
          RowBox[{"Break", "[", "]"}], ",", 
          RowBox[{"a", "=", "b"}]}], "]"}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", 
     RowBox[{"h", "=", 
      RowBox[{"k", "-", "1"}]}], ";", "a"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Aobj`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Aobj", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"StringTake", "[", 
        RowBox[{"x", ",", " ", 
         RowBox[{"-", "2"}]}], "]"}], "\[Equal]", "\"\<.m\>\""}]}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{"SymbolQ", "[", "y", "]"}], "||", 
      RowBox[{
       RowBox[{"ListQ", "[", "y", "]"}], "&&", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"SymbolQ", "[", "#", "]"}], "&"}], ",", "y"}], "]"}], 
         "]"}], "\[Equal]", 
        RowBox[{"{", "True", "}"}]}]}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"b", "=", "\"\<(*\>\""}], ",", 
      RowBox[{"c", "=", "\"\<*)\>\""}], ",", 
      RowBox[{"d", "=", "$AobjNobj"}], ",", 
      RowBox[{"p", "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Read", "[", 
           RowBox[{"x", ",", "String"}], "]"}], ",", 
          RowBox[{"Close", "[", "x", "]"}]}], "}"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{"h", "=", 
       RowBox[{"Mapp", "[", 
        RowBox[{"StringJoin", ",", 
         RowBox[{"Map", "[", 
          RowBox[{"ToString", ",", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", "y", "}"}], "]"}]}], "]"}], ",", "\"\<[\>\""}], 
        "]"}]}], ",", "k", ",", "j", ",", "g", ",", "s", ",", 
      RowBox[{"t", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"v", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"p", "\[NotEqual]", "\"\<(* ::Package:: *)\>\""}], ",", 
      "$Failed", ",", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{"ReadFullFile", "[", "x", "]"}]}], ";", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"StringFreeQ", "[", 
          RowBox[{"a", ",", "d"}], "]"}], ",", "$Failed", ",", 
         RowBox[{
          RowBox[{"a", "=", 
           RowBox[{
            RowBox[{"StringSplit", "[", 
             RowBox[{"a", ",", "d"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"2", ";;", " ", 
              RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"a", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"StringReplace", "[", 
               RowBox[{"#", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"b", " ", "->", "\"\<\>\""}], ",", 
                  RowBox[{"c", " ", "->", "\"\<\>\""}]}], "}"}]}], "]"}], 
              "&"}], ",", "a"}], "]"}]}], ";", " ", 
          RowBox[{"a", "=", 
           RowBox[{"Select", "[", 
            RowBox[{"a", ",", 
             RowBox[{
              RowBox[{"SuffPref", "[", 
               RowBox[{"#", ",", "h", ",", "1"}], "]"}], "&"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"k", "=", "1"}], ",", 
            RowBox[{"k", "\[LessEqual]", 
             RowBox[{"Length", "[", "h", "]"}]}], ",", 
            RowBox[{"k", "++"}], ",", 
            RowBox[{
             RowBox[{"g", "=", 
              RowBox[{"h", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], ";", " ", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"j", "=", "1"}], ",", 
               RowBox[{"j", "\[LessEqual]", 
                RowBox[{"Length", "[", "a", "]"}]}], ",", 
               RowBox[{"j", "++"}], ",", 
               RowBox[{
                RowBox[{"s", "=", 
                 RowBox[{"a", "[", 
                  RowBox[{"[", "j", "]"}], "]"}]}], ";", " ", 
                RowBox[{"c", "=", 
                 RowBox[{"StrSymbParity", "[", 
                  RowBox[{"s", ",", "g", ",", "\"\<[\>\"", ",", "\"\<]\>\""}],
                   "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"c", "=", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"c", "\[Equal]", 
                    RowBox[{"{", "}"}]}], ",", "False", ",", 
                   RowBox[{
                    RowBox[{"HeadingQ1", "[", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"c", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}], 
                    "]"}], "||", 
                    RowBox[{"HeadingQ", "[", 
                    RowBox[{"c", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], "]"}]}], ";", 
                " ", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"SuffPref", "[", 
                    RowBox[{"s", ",", "g", ",", "1"}], "]"}], "&&", "c"}], 
                  ",", 
                  RowBox[{
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"t", ",", "s"}], "]"}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"v", ",", 
                    RowBox[{"StringTake", "[", 
                    RowBox[{"g", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", " ", 
                    RowBox[{"-", "2"}]}], "}"}]}], "]"}]}], "]"}]}]}], 
                 "]"}]}]}], "]"}]}]}], "]"}], ";", " ", 
          RowBox[{"Map", "[", 
           RowBox[{"ToExpression", ",", "t"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"v", "\[NotEqual]", 
             RowBox[{"{", "}"}]}], ",", 
            RowBox[{"Print", "[", 
             RowBox[{"\"\<Software for \>\"", "<>", 
              RowBox[{"ToString", "[", "v", "]"}], "<>", 
              "\"\< is downloaded\>\""}], "]"}], ",", 
            RowBox[{"Print", "[", 
             RowBox[{"\"\<Software for \>\"", "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{"Flatten", "[", 
                RowBox[{"{", "y", "}"}], "]"}], "]"}], "<>", 
              "\"\< was not found\>\""}], "]"}]}], "]"}]}]}], "]"}]}]}], 
     "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Aobj1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Aobj1", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"StringTake", "[", 
        RowBox[{"x", ",", 
         RowBox[{"-", "2"}]}], "]"}], "\[Equal]", "\"\<.m\>\""}]}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{"SymbolQ", "[", "y", "]"}], "||", 
      RowBox[{
       RowBox[{"ListQ", "[", "y", "]"}], "&&", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"SymbolQ", "[", "#", "]"}], "&"}], ",", "y"}], "]"}], 
         "]"}], "\[Equal]", 
        RowBox[{"{", "True", "}"}]}]}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"c", "=", "\"\<*)(*\>\""}], ",", 
      RowBox[{"d", "=", "$AobjNobj"}], ",", "k", ",", 
      RowBox[{"t", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"g", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"h", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"ToString", ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", "y", "}"}], "]"}]}], "]"}]}], ",", "p", ",", 
      RowBox[{"j", "=", "1"}], ",", "v"}], "}"}], ",", " ", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{
       RowBox[{"StringSplit", "[", 
        RowBox[{
         RowBox[{"ReadFullFile", "[", "x", "]"}], ",", "d"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"2", ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"a", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringTake", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", 
             RowBox[{"-", "3"}]}], "}"}]}], "]"}], "&"}], ",", "a"}], "]"}]}],
      ";", " ", 
     RowBox[{"For", "[", 
      RowBox[{"j", ",", 
       RowBox[{"j", "\[LessEqual]", 
        RowBox[{"Length", "[", "h", "]"}]}], ",", 
       RowBox[{"j", "++"}], ",", 
       RowBox[{
        RowBox[{"p", "=", 
         RowBox[{"h", "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "1"}], ",", 
          RowBox[{"k", "\[LessEqual]", 
           RowBox[{"Length", "[", "a", "]"}]}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"SuffPref", "[", 
             RowBox[{
              RowBox[{"a", "[", 
               RowBox[{"[", "k", "]"}], "]"}], ",", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"StringJoin", "[", 
                  RowBox[{"p", ",", "#"}], "]"}], "&"}], ",", 
                RowBox[{"{", 
                 RowBox[{"\"\<[\>\"", ",", "\"\<=\>\"", ",", "\"\<:\>\""}], 
                 "}"}]}], "]"}], ",", "1"}], "]"}], ",", 
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{"t", ",", 
               RowBox[{"StringReplace", "[", 
                RowBox[{
                 RowBox[{"a", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], ",", 
                 RowBox[{"c", "->", "\"\<\>\""}]}], "]"}]}], "]"}], ";", " ", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"g", ",", "p"}], "]"}]}], ",", "Null"}], "]"}]}], 
         "]"}]}]}], "]"}], ";", " ", 
     RowBox[{"v", "=", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"MinusList", "[", 
         RowBox[{"h", ",", "g"}], "]"}]}], "}"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "\[NotEqual]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{
        RowBox[{"ToExpression", "[", 
         RowBox[{"v", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], ";", " ", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Software for \>\"", "<>", 
          RowBox[{"ToString", "[", "g", "]"}], "<>", 
          "\"\< is downloaded\>\""}], "]"}]}], ",", "Null"}], "]"}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Software for \>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"v", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", 
         "\"\< was not found\>\""}], "]"}], ",", "Null"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Nobj`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nobj", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"StringTake", "[", 
        RowBox[{"x", ",", 
         RowBox[{"-", "2"}]}], "]"}], "\[Equal]", "\"\<.m\>\""}]}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"!", 
      RowBox[{"HowAct", "[", "y", "]"}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "a", ",", "b", ",", "c", ",", "d", ",", "p", ",", "h", ",", "t", ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<Table\>\"", ",", "\"\<Package\>\""}], "}"}], ",", 
         RowBox[{"Quiet", "[", 
          RowBox[{"FileFormat", "[", "x", "]"}], "]"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "b", ",", "d", ",", "h"}], "}"}], "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"OpenRead", "[", "x", "]"}], ",", 
          RowBox[{"{", "}"}], ",", "\"\<90\>\"", ",", 
          RowBox[{"{", "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"SameQ", "[", 
           RowBox[{"d", ",", "\"\<EndOfFile\>\""}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"d", "=", 
           RowBox[{"ToString", "[", 
            RowBox[{"Read", "[", 
             RowBox[{"a", ",", "String"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"SuffPref", "[", 
              RowBox[{"d", ",", "\"\< \>\"", ",", "1"}], "]"}]}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"StringFreeQ", "[", 
                RowBox[{"d", ",", "\"\<::usage = \\\"\>\""}], "]"}]}], ",", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"b", ",", 
                RowBox[{
                 RowBox[{"StringSplit", "[", 
                  RowBox[{
                   RowBox[{"StringTake", "[", 
                    RowBox[{"d", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"d", ",", "\"\<::usage\>\""}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
                    "]"}], ",", "\"\< /: \>\""}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
              RowBox[{
               RowBox[{"p", "=", 
                RowBox[{"Quiet", "[", 
                 RowBox[{"Check", "[", 
                  RowBox[{
                   RowBox[{"StringTake", "[", 
                    RowBox[{"d", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"d", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\< := \>\"", ",", "\"\< = \>\""}], "}"}]}], 
                    "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
                    "]"}], ",", "$Failed"}], "]"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"!", 
                  RowBox[{"SameQ", "[", 
                   RowBox[{"p", ",", "$Failed"}], "]"}]}], ",", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"SymbolQ", "[", "p", "]"}], "&&", 
                    RowBox[{"StringFreeQ", "[", 
                    RowBox[{"p", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\< \>\"", ",", "\"\<{\>\"", ",", "\"\<`\>\""}],
                     "}"}]}], "]"}]}], "||", 
                    RowBox[{
                    RowBox[{"StringFreeQ", "[", 
                    RowBox[{"p", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\< \>\"", ",", "\"\<{\>\"", ",", "\"\<`\>\""}],
                     "}"}]}], "]"}], "&&", 
                    RowBox[{
                    RowBox[{"HeadingQ1", "[", "p", "]"}], "===", "True"}]}]}],
                    ",", 
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"b", ",", "p"}], "]"}]}], "]"}]}], "]"}]}]}], 
             "]"}]}], "]"}], ";", 
          RowBox[{"k", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Close", "[", "a", "]"}], ";", 
       RowBox[{"b", "=", 
        RowBox[{"Sort", "[", 
         RowBox[{"DeleteDuplicates", "[", "b", "]"}], "]"}]}], ";", 
       RowBox[{"h", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"b", ",", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"SymbolQ", "[", "#", "]"}]}], "&"}]}], "]"}]}], ";", " ", 
       RowBox[{"t", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"SymbolQ", "[", "#", "]"}], ",", "#", ",", 
             RowBox[{"HeadName", "[", "#", "]"}]}], "]"}], "&"}], ",", "h"}], 
         "]"}]}], ";", 
       RowBox[{"b", "=", 
        RowBox[{"MinusList", "[", 
         RowBox[{"b", ",", "h"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"b", "=", 
        RowBox[{"Sort", "[", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"Join", "[", 
           RowBox[{"b", ",", "t"}], "]"}], "]"}], "]"}]}], ";", " ", 
       RowBox[{"y", "=", 
        RowBox[{"MinusList", "[", 
         RowBox[{
          RowBox[{"Sort", "[", 
           RowBox[{"DeleteDuplicates", "[", 
            RowBox[{"Join", "[", 
             RowBox[{"h", ",", 
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"UnevaluatedQ", "[", 
                    RowBox[{"HeadPF", ",", "#"}], "]"}]}], ",", 
                    RowBox[{"HeadPF", "[", "#", "]"}]}], "]"}], "&"}], ",", 
                  "b"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"!", 
                  RowBox[{"SameQ", "[", 
                   RowBox[{"#", ",", "Null"}], "]"}]}], "&"}]}], "]"}]}], 
             "]"}], "]"}], "]"}], ",", "b"}], "]"}]}], ";", "b"}], ",", 
      "$Failed"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`FullUserTools`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FullUserTools", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", 
      RowBox[{"p", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"n", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Save", "[", 
      RowBox[{
       RowBox[{"Set", "[", 
        RowBox[{"a", ",", 
         RowBox[{
          RowBox[{"ToString", "[", "x", "]"}], "<>", "\"\<.txt\>\""}]}], 
        "]"}], ",", "x"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"ReadString", "[", "a", "]"}]}], ";", 
     RowBox[{"DeleteFile", "[", "a", "]"}], ";", 
     RowBox[{"c", "=", 
      RowBox[{"StringSplit", "[", 
       RowBox[{"b", ",", "\"\<\\r\\n \\r\\n\>\""}], "]"}]}], ";", " ", 
     RowBox[{"b", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"c", ",", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"StringFreeQ", "[", 
           RowBox[{"#", ",", "\"\<::usage = \\\"\>\""}], "]"}]}], "&"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d", "=", 
      RowBox[{"MinusList", "[", 
       RowBox[{"c", ",", "b"}], "]"}]}], ";", 
     RowBox[{"c", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"StringSplit", "[", 
           RowBox[{"#", ",", "\"\< /: \>\"", ",", "2"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", "b"}], "]"}]}], ";", 
     " ", 
     RowBox[{"d", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"StringSplit", "[", 
           RowBox[{"#", ",", "\"\< := \>\""}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", "d"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Quiet", "[", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"HeadingQ", "[", "#", "]"}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"p", ",", 
             RowBox[{"HeadName", "[", "#", "]"}]}], "]"}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"n", ",", "#"}], "]"}]}], "]"}], "&"}], ",", "d"}], "]"}],
       "]"}], ";", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "p"}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"c", ",", "p"}], "]"}], ",", 
        RowBox[{"MinusList", "[", 
         RowBox[{"c", ",", "p"}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"MinusList", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", 
             RowBox[{"ToString", "[", "x", "]"}], "}"}]}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "p"}], "}"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", " ", 
     RowBox[{"b", "=", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#", ",", 
            RowBox[{"Context", "[", "#", "]"}]}], "}"}], "&"}], ",", "b"}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"Gather", "[", 
       RowBox[{"b", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
          RowBox[{"#2", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", " ", 
     RowBox[{"b", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Sort", "[", 
          RowBox[{"DeleteDuplicates", "[", 
           RowBox[{"Flatten", "[", "#", "]"}], "]"}], "]"}], "&"}], ",", 
        "b"}], "]"}]}], ";", " ", 
     RowBox[{"d", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Sort", "[", 
          RowBox[{"#", ",", 
           RowBox[{
            RowBox[{"ContextQ", "[", "#1", "]"}], "&"}]}], "]"}], "&"}], ",", 
        "b"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"Sort", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"2", ";;", 
                RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}]}], "}"}], "]"}], 
         "&"}], ",", "d"}], "]"}]}], ";", " ", 
     RowBox[{"d", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "d", "]"}], "\[Equal]", "1"}], ",", 
        RowBox[{"d", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "d"}], "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", "y", "}"}], "!=", 
         RowBox[{"{", "}"}]}], "&&", 
        RowBox[{"!", 
         RowBox[{"HowAct", "[", "y", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"y", "=", 
         RowBox[{"{", 
          RowBox[{"p", ",", "n"}], "}"}]}], ";", "d"}], ",", "d"}], "]"}]}]}],
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`FullToolsCalls`\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"FullToolsCalls", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", "b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", "d", ",", 
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"g", "=", 
       RowBox[{"{", "}"}]}], ",", "p", ",", "j", ",", "n"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"Gather", "[", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", 
          RowBox[{"StringPosition", "[", 
           RowBox[{"a", ",", "\"\<[\>\""}], "]"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"#1", "-", "#2"}], "]"}], "\[Equal]", "1"}], "&"}]}], 
       "]"}]}], ";", " ", 
     RowBox[{"b", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Select", "[", 
        RowBox[{"b", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "1"}], "&"}]}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "b", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"n", "=", "\"\<\>\""}], ";", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", 
           RowBox[{
            RowBox[{"b", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "-", "1"}]}], ",", 
          RowBox[{"j", "\[GreaterEqual]", "0"}], ",", 
          RowBox[{"j", "--"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"SymbolQ", "[", 
              RowBox[{"p", "=", 
               RowBox[{"Quiet", "[", 
                RowBox[{"StringTake", "[", 
                 RowBox[{"a", ",", 
                  RowBox[{"{", "j", "}"}]}], "]"}], "]"}]}], "]"}], "||", " ", 
             RowBox[{"IntegerQ", "[", 
              RowBox[{"Quiet", "[", 
               RowBox[{"ToExpression", "[", "p", "]"}], "]"}], "]"}]}], ",", 
            RowBox[{"n", "=", 
             RowBox[{"p", "<>", "n"}]}], ",", 
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{"c", ",", "n"}], "]"}], ";", 
             RowBox[{"Break", "[", "]"}]}]}], "]"}]}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"MinusList", "[", 
       RowBox[{"c", ",", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Locals", "[", "x", "]"}], ",", 
          RowBox[{"Args", "[", 
           RowBox[{"x", ",", "90"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\"\<Block\>\"", ",", "\"\<Module\>\""}], "}"}]}], "]"}]}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", 
           RowBox[{"Quiet", "[", 
            RowBox[{"Context", "[", "#", "]"}], "]"}]}], "}"}], "&"}], ",", 
        RowBox[{"MinusList", "[", 
         RowBox[{"c", ",", 
          RowBox[{"{", 
           RowBox[{"ToString", "[", "x", "]"}], "}"}]}], "]"}]}], "]"}]}], 
     ";", " ", 
     RowBox[{"b", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Sort", "[", 
          RowBox[{"DeleteDuplicates", "[", 
           RowBox[{"Flatten", "[", "#", "]"}], "]"}], "]"}], "&"}], ",", 
        "c"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"d", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"Flatten", ",", 
        RowBox[{"Gather", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Sort", "[", 
              RowBox[{"#", ",", 
               RowBox[{
                RowBox[{"Quiet", "[", 
                 RowBox[{"ContextQ", "[", "#1", "]"}], "]"}], "&"}]}], "]"}], 
             "&"}], ",", "b"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#1", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
            RowBox[{"#2", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}], "]"}]}], ";",
      " ", "\[IndentingNewLine]", 
     RowBox[{"d", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"Sort", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"2", ";;", 
                RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}]}], "}"}], "]"}], 
         "&"}], ",", 
        RowBox[{"Map", "[", 
         RowBox[{"DeleteDuplicates", ",", "d"}], "]"}]}], "]"}]}], ";", " ", 
     RowBox[{"d", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "d", "]"}], "\[Equal]", "1"}], ",", 
        RowBox[{"d", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "d"}], "]"}]}], ";", " ", 
     RowBox[{"Select", "[", 
      RowBox[{"d", ",", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"Quiet", "[", 
          RowBox[{"SameQ", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"Context", "[", "\"\<\>\"", "]"}]}], "]"}], "]"}]}], 
        "&"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`FullToolsCallsM`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FullToolsCallsM", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}]}], ",", "b", 
      ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"n", "=", 
       RowBox[{"ToString", "[", "x", "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "1"}], ",", 
      RowBox[{"FullToolsCalls", "[", "x", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{"k", ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "a", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{
          RowBox[{"b", "=", 
           RowBox[{"ToString", "[", 
            RowBox[{"Unique", "[", "\"\<sv\>\"", "]"}], "]"}]}], ";", 
          RowBox[{"ToExpression", "[", 
           RowBox[{"StringReplace", "[", 
            RowBox[{
             RowBox[{"a", "[", 
              RowBox[{"[", "k", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"n", "<>", "\"\<[\>\""}], "\[Rule]", 
              RowBox[{"b", "<>", "\"\<[\>\""}]}], ",", "1"}], "]"}], "]"}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"c", ",", 
            RowBox[{"FullToolsCalls", "[", "b", "]"}]}], "]"}], ";", 
          RowBox[{"Quiet", "[", 
           RowBox[{"Remove", "[", "b", "]"}], "]"}]}]}], "]"}], ";", " ", 
       RowBox[{"c", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"NestListQ", "[", "#", "]"}], "&&", 
              RowBox[{
               RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "1"}]}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "#"}], "]"}], "&"}], ",", 
          "c"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"!", 
              RowBox[{"NestListQ", "[", "#", "]"}]}], "&&", 
             RowBox[{
              RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "1"}]}], ",", 
            RowBox[{"{", "}"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"NestListQ", "[", "#", "]"}], "&&", 
               RowBox[{
                RowBox[{"Length", "[", "#", "]"}], ">", "1"}]}], ",", "#", 
              ",", 
              RowBox[{"Select", "[", 
               RowBox[{"#", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "#", "]"}], ">", "1"}], "&"}]}], 
               "]"}]}], "]"}]}], "]"}], "&"}], ",", "c"}], "]"}]}]}], "]"}]}],
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`AllCalls`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AllCalls", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a1", ",", "ArtKr", ",", "k1", ",", "b1", ",", 
      RowBox[{"c1", "=", 
       RowBox[{"{", "}"}]}], ",", "d1", ",", 
      RowBox[{"m", "=", 
       RowBox[{"ToString", "[", "x", "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"a1", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ArtKr", "[", "y_", "]"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"a", "=", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"PureDefinition", "[", "y", "]"}], "}"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", "b", ",", 
          RowBox[{"c", "=", 
           RowBox[{"{", "}"}]}], ",", "d", ",", "k", ",", 
          RowBox[{"g", "=", 
           RowBox[{"{", "}"}]}], ",", "p", ",", "j", ",", "n"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"b", "=", 
          RowBox[{"Gather", "[", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", 
              RowBox[{"StringPosition", "[", 
               RowBox[{"a", ",", "\"\<[\>\""}], "]"}]}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{"#1", "-", "#2"}], "]"}], "\[Equal]", "1"}], "&"}]}], 
           "]"}]}], ";", " ", 
         RowBox[{"b", "=", 
          RowBox[{"Flatten", "[", 
           RowBox[{"Select", "[", 
            RowBox[{"b", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "1"}], "&"}]}], 
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"k", "=", "1"}], ",", 
           RowBox[{"k", "\[LessEqual]", 
            RowBox[{"Length", "[", "b", "]"}]}], ",", 
           RowBox[{"k", "++"}], ",", 
           RowBox[{
            RowBox[{"n", "=", "\"\<\>\""}], ";", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"j", "=", 
               RowBox[{
                RowBox[{"b", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "-", "1"}]}], ",", 
              RowBox[{"j", "\[GreaterEqual]", "0"}], ",", 
              RowBox[{"j", "--"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"SymbolQ", "[", 
                  RowBox[{"p", "=", 
                   RowBox[{"Quiet", "[", 
                    RowBox[{"StringTake", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{"{", "j", "}"}]}], "]"}], "]"}]}], "]"}], "||", 
                 " ", 
                 RowBox[{"IntegerQ", "[", 
                  RowBox[{"Quiet", "[", 
                   RowBox[{"ToExpression", "[", "p", "]"}], "]"}], "]"}]}], 
                ",", 
                RowBox[{"n", "=", 
                 RowBox[{"p", "<>", "n"}]}], ",", 
                RowBox[{
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"c", ",", "n"}], "]"}], ";", 
                 RowBox[{"Break", "[", "]"}]}]}], "]"}]}], "]"}]}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"k", "=", "1"}], ",", 
           RowBox[{"k", "\[LessEqual]", 
            RowBox[{"Length", "[", "b", "]"}]}], ",", 
           RowBox[{"k", "++"}], ",", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"j", "=", 
              RowBox[{"b", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], ",", 
             RowBox[{"j", "\[LessEqual]", 
              RowBox[{"StringLength", "[", "a", "]"}]}], ",", 
             RowBox[{"j", "++"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"SubStrSymbolParity1", "[", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"a", ",", 
                   RowBox[{"{", 
                    RowBox[{"j", ",", 
                    RowBox[{"StringLength", "[", "a", "]"}]}], "}"}]}], "]"}],
                  ",", "\"\<[\>\"", ",", "\"\<]\>\""}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ";", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"g", ",", 
                RowBox[{
                 RowBox[{"SubStrSymbolParity1", "[", 
                  RowBox[{
                   RowBox[{"StringTake", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", 
                    RowBox[{"StringLength", "[", "a", "]"}]}], "}"}]}], "]"}],
                    ",", "\"\<[\>\"", ",", "\"\<]\>\""}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";", 
              RowBox[{"Break", "[", "]"}]}]}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"n", "=", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"StringJoin", "[", "#", "]"}], "&"}], ",", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{"Riffle", "[", 
                 RowBox[{"c", ",", "g"}], "]"}], ",", "2"}], "]"}]}], "]"}], 
            ",", 
            RowBox[{
             RowBox[{"#", "\[NotEqual]", 
              RowBox[{"HeadPF", "[", "y", "]"}]}], "&"}]}], "]"}]}], ";", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"FunctionQ", "[", "y", "]"}], ",", "n", ",", 
           RowBox[{"n", "[", 
            RowBox[{"[", 
             RowBox[{"2", ";;", 
              RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "a1", "]"}], "\[Equal]", "1"}], ",", 
       RowBox[{"ArtKr", "[", "x", "]"}], ",", " ", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k1", "=", "1"}], ",", 
          RowBox[{"k1", "\[LessEqual]", 
           RowBox[{"Length", "[", "a1", "]"}]}], ",", 
          RowBox[{"k1", "++"}], ",", 
          RowBox[{
           RowBox[{"b1", "=", 
            RowBox[{"ToString", "[", 
             RowBox[{"Unique", "[", "\"\<v\>\"", "]"}], "]"}]}], ";", 
           RowBox[{"ToExpression", "[", 
            RowBox[{"StringReplace", "[", 
             RowBox[{
              RowBox[{"a1", "[", 
               RowBox[{"[", "k1", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"m", "<>", "\"\<[\>\""}], "\[Rule]", 
               RowBox[{"b1", "<>", "\"\<[\>\""}]}], ",", "1"}], "]"}], "]"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"c1", ",", 
             RowBox[{"ArtKr", "[", "b1", "]"}]}], "]"}], ";", " ", 
           RowBox[{"Quiet", "[", 
            RowBox[{"Remove", "[", "b1", "]"}], "]"}]}]}], "]"}], ";", " ", 
        "c1"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SetDir`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDir", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"StringLength", "[", "x", "]"}], "\[Equal]", "1"}], "||", 
       RowBox[{
        RowBox[{
         RowBox[{"StringLength", "[", "x", "]"}], "\[GreaterEqual]", "2"}], "&&", 
        RowBox[{
         RowBox[{"StringTake", "[", 
          RowBox[{"x", ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "2"}], "}"}]}], "]"}], "\[NotEqual]", 
         "\"\<:\>\""}]}]}], ",", 
      RowBox[{"Quiet", "[", 
       RowBox[{"SetDirectory", "[", 
        RowBox[{"Quiet", "[", 
         RowBox[{"CreateDirectory", "[", 
          RowBox[{"StringReplace", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Directory", "[", "]"}], "<>", "\"\<\\\\\>\"", "<>", 
             "x"}], ",", 
            RowBox[{"\"\<\\\\\\\\\>\"", "\[Rule]", "\"\<\\\\\>\""}]}], "]"}], 
          "]"}], "]"}], "]"}], "]"}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Run", "[", 
          RowBox[{"\"\<Dir \>\"", "<>", 
           RowBox[{"StringTake", "[", 
            RowBox[{"x", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}], "]"}], "\[NotEqual]",
          "0"}], ",", "$Failed", ",", 
        RowBox[{
         RowBox[{"b", "=", 
          RowBox[{"FileNameSplit", "[", "x", "]"}]}], ";", " ", 
         RowBox[{"c", "=", 
          RowBox[{"b", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", 
         RowBox[{"Do", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"c", "=", 
             RowBox[{"c", "<>", "\"\<\\\\\>\"", "<>", 
              RowBox[{"b", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}]}], ";", " ", 
            RowBox[{"Quiet", "[", 
             RowBox[{"CreateDirectory", "[", "c", "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "2", ",", 
             RowBox[{"Length", "[", "b", "]"}]}], "}"}]}], "]"}], ";", " ", 
         RowBox[{"SetDirectory", "[", "c", "]"}]}]}], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{"Begin", "[", "\"\<`SetDir1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDir1", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"Check", "[", 
         RowBox[{
          RowBox[{"SetDirectory", "[", "x", "]"}], ",", "$Failed"}], "]"}], 
        "]"}]}], ",", "b", ",", "c"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"SameQ", "[", 
        RowBox[{"a", ",", "$Failed"}], "]"}]}], ",", "a", ",", 
      RowBox[{
       RowBox[{"b", "=", 
        RowBox[{"Adrive", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"c", "=", 
        RowBox[{"Map", "[", 
         RowBox[{"FreeSpaceVol", ",", "b"}], "]"}]}], ";", " ", 
       RowBox[{"c", "=", 
        RowBox[{"SortNL1", "[", 
         RowBox[{"c", ",", "2", ",", "Greater"}], "]"}]}], ";", " ", 
       RowBox[{"SetDir", "[", 
        RowBox[{"StringJoin", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"c", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"StringTake", "[", 
           RowBox[{"x", ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", 
              RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "]"}], "]"}]}], ",", 
      "a"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Adrive`\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"Adrive", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"CharacterRange", "[", 
         RowBox[{"\"\<A\>\"", ",", "\"\<Z\>\""}], "]"}], ",", 
        RowBox[{"{", "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"d", "=", 
         RowBox[{"Directory", "[", "]"}]}], ";", " ", 
        RowBox[{"c", "=", 
         RowBox[{"a", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", " ", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"b", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Quiet", "[", 
              RowBox[{"SetDirectory", "[", 
               RowBox[{"c", "<>", "\"\<:\\\\\>\""}], "]"}], "]"}], "===", 
             "$Failed"}], ",", "Nothing", ",", 
            RowBox[{
             RowBox[{"SetDirectory", "[", "d", "]"}], ";", " ", "c"}]}], 
           "]"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{"Length", "[", "a", "]"}]}], "}"}]}], "]"}], ";", " ", 
     RowBox[{"Sort", "[", "b", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Adrive1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Adrive1", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"CharacterRange", "[", 
        RowBox[{"\"\<A\>\"", ",", "\"\<Z\>\""}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", "c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", "h"}], "}"}], ",", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"a", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"DirQ", "[", 
           RowBox[{"c", "<>", "\"\<:\\\\\>\""}], "]"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"b", ",", "c"}], "]"}], ",", "Null"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{"Length", "[", "a", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"h", "=", 
         RowBox[{"Directory", "[", "]"}]}], ";", " ", 
        RowBox[{"c", "=", 
         RowBox[{"a", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", " ", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"d", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Quiet", "[", 
              RowBox[{"SetDirectory", "[", 
               RowBox[{"c", "<>", "\"\<:\\\\\>\""}], "]"}], "]"}], "===", 
             "$Failed"}], ",", "Nothing", ",", 
            RowBox[{
             RowBox[{"SetDirectory", "[", "h", "]"}], ";", " ", "c"}]}], 
           "]"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{"Length", "[", "a", "]"}]}], "}"}]}], "]"}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{"Sort", ",", 
       RowBox[{"{", 
        RowBox[{"d", ",", 
         RowBox[{"MinusList", "[", 
          RowBox[{"b", ",", "d"}], "]"}]}], "}"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ListPosition`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListPosition", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"!", 
      RowBox[{"NestListQ1", "[", "x", "]"}]}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"ListQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"Length", "[", "y", "]"}]}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", "c"}], ",", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"a", ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"Position", "[", 
            RowBox[{"x", ",", 
             RowBox[{"y", "[", 
              RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "]"}]}], "]"}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", "a"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Save1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Save1", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"StringQ", ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", "y", "}"}], "]"}]}], "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Rs", ",", 
      RowBox[{"t", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", "y", "}"}], "]"}]}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Rs", "[", 
       RowBox[{"n_", ",", "m_"}], "]"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"b", ",", 
          RowBox[{"c", "=", 
           RowBox[{"ToString", "[", 
            RowBox[{"Unique", "[", "b", "]"}], "]"}]}], ",", 
          RowBox[{"a", "=", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"SymbolQ", "[", "m", "]"}], ",", 
             RowBox[{"Save", "[", 
              RowBox[{"n", ",", "m"}], "]"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"StringFreeQ", "[", 
                RowBox[{"m", ",", "\"\<[\>\""}], "]"}], ",", "$Failed", ",", 
               RowBox[{"StringTake", "[", 
                RowBox[{"m", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"m", ",", "\"\<[\>\""}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
                "]"}]}], "]"}]}], "]"}]}]}], "}"}], ",", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"a", "===", "Null"}], ",", 
           RowBox[{"Return", "[", "]"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"a", "===", "$Failed"}], ",", 
             RowBox[{"Return", "[", "$Failed", "]"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"SymbolQ", "[", "a", "]"}], ",", 
               RowBox[{"b", "=", 
                RowBox[{"DefFunc3", "[", "a", "]"}]}], ",", 
               RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}]}], "]"}]}], 
          "]"}], ";", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "b", "]"}], "\[Equal]", "1"}], ",", 
           RowBox[{"Save", "[", 
            RowBox[{"n", ",", "a"}], "]"}], ",", 
           RowBox[{"b", "=", 
            RowBox[{"Select", "[", 
             RowBox[{"b", ",", 
              RowBox[{
               RowBox[{"SuffPref", "[", 
                RowBox[{"#", ",", "m", ",", "1"}], "]"}], "&"}]}], "]"}]}]}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"b", "\[NotEqual]", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"b", "=", 
            RowBox[{"c", "<>", 
             RowBox[{"b", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}]}], ",", 
           RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
         RowBox[{"ToExpression", "[", "b", "]"}], ";", 
         RowBox[{"a", "=", 
          RowBox[{"c", "<>", "a"}]}], ";", " ", 
         RowBox[{"ToExpression", "[", 
          RowBox[{"\"\<Save[\>\"", "<>", 
           RowBox[{"ToString1", "[", "n", "]"}], "<>", "\"\<,\>\"", "<>", 
           RowBox[{"ToString1", "[", "a", "]"}], "<>", "\"\<]\>\""}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"BinaryWrite", "[", 
          RowBox[{"n", ",", 
           RowBox[{"StringReplace", "[", 
            RowBox[{
             RowBox[{"ToString", "[", 
              RowBox[{"StringJoin", "[", 
               RowBox[{"Map", "[", 
                RowBox[{"FromCharacterCode", ",", 
                 RowBox[{"BinaryReadList", "[", "n", "]"}]}], "]"}], "]"}], 
              "]"}], ",", 
             RowBox[{"c", "->", "\"\<\>\""}]}], "]"}]}], "]"}], ";", 
         RowBox[{"Close", "[", "n", "]"}], ";"}]}], "]"}]}], ";", " ", 
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "t", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{"Rs", "[", 
        RowBox[{"x", ",", 
         RowBox[{"t", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Save2`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Save2", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{"SymbolQ", "[", "y", "]"}], "||", 
      RowBox[{"ListQ", "[", "y", "]"}]}]}]}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"FileExistsQ", "[", "x", "]"}], ",", 
    RowBox[{
     RowBox[{"Save", "[", 
      RowBox[{"x", ",", "\"\<\\\\r\\\\n  \\\\r\\\\n\>\""}], "]"}], ";", 
     RowBox[{"Save", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], ",", 
    RowBox[{"Save", "[", 
     RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DuplicateLocalsQ`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DuplicateLocalsQ", "[", 
   RowBox[{
    RowBox[{"P_", "/;", 
     RowBox[{"BlockModQ", "[", "P", "]"}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"b", "=", 
       RowBox[{"Locals1", "[", "P", "]"}]}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"b", "\[Equal]", 
       RowBox[{"{", "}"}]}], ",", "False", ",", 
      RowBox[{
       RowBox[{"b", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"NestListQ", "[", "b", "]"}], ",", 
          RowBox[{"b", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "b"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"a", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Gather2", "[", "b", "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ">", "1"}], "&"}]}], "]"}]}], 
       ";", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"a", "\[Equal]", 
          RowBox[{"{", "}"}]}], ",", "False", ",", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"{", "y", "}"}], "\[NotEqual]", 
              RowBox[{"{", "}"}]}], " ", "&&", 
             RowBox[{"!", 
              RowBox[{"HowAct", "[", "y", "]"}]}]}], ",", 
            RowBox[{"y", "=", "a"}]}], "]"}], ";", "True"}]}], "]"}]}]}], 
     "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DuplicateLocals`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DuplicateLocals", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"BlockModQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", "=", 
      RowBox[{"Locals1", "[", "x", "]"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", 
             RowBox[{"Count", "[", 
              RowBox[{"a", ",", "#"}], "]"}]}], "}"}], "&"}], ",", 
          RowBox[{"DeleteDuplicates", "[", "a", "]"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ">", "1"}], "&"}]}], "]"}]}], ";", 
     RowBox[{"a", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{"a", ",", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ToCharacterCode", "[", 
            RowBox[{"#1", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "<", 
          RowBox[{
           RowBox[{"ToCharacterCode", "[", 
            RowBox[{"#2", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "a", "]"}], ">", "1"}], "||", 
        RowBox[{"a", "\[Equal]", 
         RowBox[{"{", "}"}]}]}], ",", "a", ",", 
       RowBox[{"a", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DelDuplLocals`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DelDuplLocals", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"BlockQ", "[", "x", "]"}], "||", 
      RowBox[{"ModuleQ", "[", "x", "]"}]}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Locals", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", "d", ",", "p"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"a", "\[Equal]", 
       RowBox[{"{", "}"}]}], ",", "x", ",", 
      RowBox[{
       RowBox[{"d", "=", 
        RowBox[{"Attributes", "[", "x", "]"}]}], ";", 
       RowBox[{"ClearAttributes", "[", 
        RowBox[{"x", ",", "d"}], "]"}], ";", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"StringFreeQ", "[", 
             RowBox[{"#", ",", "\"\<=\>\""}], "]"}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"b", ",", "#"}], "]"}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"c", ",", "#"}], "]"}]}], "]"}], "&"}], ",", "a"}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"b", "=", 
        RowBox[{"DeleteDuplicates", "[", "b", "]"}]}], ";", 
       RowBox[{"c", "=", 
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"StringSplit", "[", 
              RowBox[{"#", ",", "\"\< = \>\"", ",", "2"}], "]"}], "&"}], ",", 
            "c"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#1", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
            RowBox[{"#2", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"p", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", "c"}], "]"}]}], ";", 
       RowBox[{"b", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"b", ",", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"MemberQ", "[", 
             RowBox[{"p", ",", "#"}], "]"}]}], "&"}]}], "]"}]}], ";", " ", 
       RowBox[{"c", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\"\< = \>\"", ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], ",", "c"}], 
         "]"}]}], ";", 
       RowBox[{"b", "=", 
        RowBox[{"StringRiffle", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"b", ",", "c"}], "]"}], ",", "\"\<, \>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"p", "=", 
        RowBox[{"PureDefinition", "[", "x", "]"}]}], ";", " ", 
       RowBox[{"ToExpression", "[", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"p", ",", 
          RowBox[{
           RowBox[{"StringRiffle", "[", 
            RowBox[{"a", ",", "\"\<, \>\""}], "]"}], "\[Rule]", "b"}], ",", 
          "1"}], "]"}], "]"}], ";", " ", 
       RowBox[{"SetAttributes", "[", 
        RowBox[{"x", ",", "d"}], "]"}], ";", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", "y", "}"}], "\[NotEqual]", 
           RowBox[{"{", "}"}]}], "&&", 
          RowBox[{"!", 
           RowBox[{"HowAct", "[", "y", "]"}]}]}], ",", 
         RowBox[{"y", "=", 
          RowBox[{"MinusList", "[", 
           RowBox[{"a", ",", 
            RowBox[{"StrToList", "[", "b", "]"}]}], "]"}]}], ",", "Null"}], 
        "]"}], ";", " ", "x"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DelDuplLocalsM`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DelDuplLocalsM", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"BlockModQ", "[", "x", "]"}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}]}], ",", 
      RowBox[{"h", "=", 
       RowBox[{"ToString", "[", "x", "]"}]}], ",", "b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", "d", ",", "p", ",", 
      RowBox[{"z", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "1"}], ",", 
      RowBox[{"DelDuplLocals", "[", 
       RowBox[{"x", ",", "y"}], "]"}], ",", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", "y", "}"}], "\[NotEqual]", 
            RowBox[{"{", "}"}]}], "&&", 
           RowBox[{"!", 
            RowBox[{"HowAct", "[", "y", "]"}]}]}], "||", 
          RowBox[{
           RowBox[{"{", "y", "}"}], "===", 
           RowBox[{"{", "}"}]}]}], ",", 
         RowBox[{
          RowBox[{"b", "=", 
           RowBox[{"Attributes", "[", "x", "]"}]}], ";", " ", 
          RowBox[{"ClearAttributes", "[", 
           RowBox[{"x", ",", "b"}], "]"}]}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{"Defer", "[", 
           RowBox[{"DelDuplLocalsM", "[", 
            RowBox[{"x", ",", "y"}], "]"}], "]"}], "]"}]}], "]"}], ";", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"c", ",", 
              RowBox[{"d", "=", 
               RowBox[{"ToString", "[", 
                RowBox[{"Unique", "[", "\"\<vgs\>\"", "]"}], "]"}]}]}], "]"}],
             ",", 
            RowBox[{"ToExpression", "[", 
             RowBox[{"StringReplace", "[", 
              RowBox[{"#", ",", 
               RowBox[{
                RowBox[{"h", "<>", "\"\<[\>\""}], "\[Rule]", 
                RowBox[{"d", "<>", "\"\<[\>\""}]}], ",", "1"}], "]"}], 
             "]"}]}], "}"}], "&"}], ",", "a"}], "]"}], ";", 
       RowBox[{"p", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"PureDefinition", "[", "#", "]"}], "&"}], ",", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"DelDuplLocals", "[", 
                 RowBox[{"#", ",", "y"}], "]"}], ",", 
                RowBox[{"Quiet", "[", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"z", ",", "y"}], "]"}], "]"}], ",", 
                RowBox[{"Clear", "[", "y", "]"}]}], "}"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", "c"}], "]"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ToExpression", "[", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"StringReplace", "[", 
            RowBox[{"#", ",", 
             RowBox[{"GenRules", "[", 
              RowBox[{
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "<>", "\"\<[\>\""}], "&"}], ",", "c"}], "]"}], 
               ",", 
               RowBox[{"h", "<>", "\"\<[\>\""}]}], "]"}], ",", "1"}], "]"}], 
           "&"}], ",", "p"}], "]"}], "]"}], ";", " ", 
       RowBox[{"SetAttributes", "[", 
        RowBox[{"x", ",", "b"}], "]"}], ";", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Remove", "[", "#", "]"}], "&"}], ",", "c"}], "]"}], ";", 
       " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "y", "}"}], "\[NotEqual]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"y", "=", "z"}], ",", "Null"}], "]"}], ";", " ", "x"}]}], 
     "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ReplaceLocals`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReplaceLocals", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"BlockModQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"StringQ", ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", "y", "}"}], "]"}]}], "]"}], "]"}], "\[Equal]", 
      RowBox[{"{", "True", "}"}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Locals", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", "y", "}"}], "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"PureDefinition", "[", "x", "]"}]}], ",", "d", ",", "p", ",", 
      RowBox[{"h", "=", 
       RowBox[{"HeadPF", "[", "x", "]"}]}], ",", "k", ",", "j", ",", "f"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"z_", "/;", 
        RowBox[{"StringQ", "[", "z", "]"}]}], "]"}], ":=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"StringFreeQ", "[", 
         RowBox[{"z", ",", "\"\<=\>\""}], "]"}], ",", "z", ",", 
        RowBox[{"StringTrim", "[", 
         RowBox[{"StringTake", "[", 
          RowBox[{"z", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{"StringPosition", "[", 
                 RowBox[{"z", ",", "\"\<=\>\""}], "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], "]"}], 
         "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d", "=", 
      RowBox[{"StringReplace", "[", 
       RowBox[{"c", ",", 
        RowBox[{
         RowBox[{"h", "<>", "\"\< := \>\""}], "->", "\"\<\>\""}]}], "]"}]}], 
     ";", 
     RowBox[{"d", "=", 
      RowBox[{"StringTake", "[", 
       RowBox[{"d", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"ModuleQ", "[", "x", "]"}], ",", "8", ",", "7"}], "]"}], 
          ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", " ", 
     RowBox[{"p", "=", 
      RowBox[{
       RowBox[{"SubStrSymbolParity1", "[", 
        RowBox[{"d", ",", "\"\<{\>\"", ",", "\"\<}\>\""}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "\[LessEqual]", 
          RowBox[{"Length", "[", "b", "]"}]}], ",", 
         RowBox[{"j", "++"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"f", "[", 
             RowBox[{"a", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "]"}], "\[Equal]", 
            RowBox[{"f", "[", 
             RowBox[{"b", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"a", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "=", 
            RowBox[{"b", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}]}], "]"}]}], "]"}]}], "]"}], ";",
      " ", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"StringReplace", "[", 
       RowBox[{"c", ",", 
        RowBox[{"p", "->", 
         RowBox[{"ToString", "[", "a", "]"}]}], ",", "1"}], "]"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`OptimalLocals`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"OptimalLocals", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"BlockQ", "[", "x", "]"}], "||", 
     RowBox[{"ModuleQ", "[", "x", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"DelDuplLocals", "[", "x", "]"}]}], ",", "at", ",", "b", ",", 
      "c", ",", "d", ",", "p", ",", "t", ",", "h", ",", "k", ",", "j", ",", 
      "f"}], "}"}], ",", " ", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"Locals", "[", "x", "]"}]}], ";", 
     RowBox[{"b", "=", 
      RowBox[{"RedundantLocals", "[", "x", "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"StringQ", "[", "b", "]"}], ",", 
       RowBox[{"Return", "[", "b", "]"}], ",", "Null"}], "]"}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "\[Equal]", 
         RowBox[{"{", "}"}]}], "||", 
        RowBox[{"b", "\[Equal]", 
         RowBox[{"{", "}"}]}]}], ",", "x", ",", 
       RowBox[{
        RowBox[{"t", "=", "a"}], ";", " ", 
        RowBox[{"c", "=", 
         RowBox[{"PureDefinition", "[", "x", "]"}]}], ";", " ", 
        RowBox[{"h", "=", 
         RowBox[{"HeadPF", "[", "x", "]"}]}], ";", " ", 
        RowBox[{"at", "=", 
         RowBox[{"Attributes", "[", "x", "]"}]}], ";", " ", 
        RowBox[{"ClearAttributes", "[", 
         RowBox[{"x", ",", "at"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"z_", "/;", 
           RowBox[{"StringQ", "[", "z", "]"}]}], "]"}], ":=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"StringFreeQ", "[", 
            RowBox[{"z", ",", "\"\<=\>\""}], "]"}], ",", "z", ",", 
           RowBox[{"StringTrim", "[", 
            RowBox[{"StringTake", "[", 
             RowBox[{"z", ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Flatten", "[", 
                   RowBox[{"StringPosition", "[", 
                    RowBox[{"z", ",", "\"\<=\>\""}], "]"}], "]"}], 
                  "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "-",
                  "1"}]}], "}"}]}], "]"}], "]"}]}], "]"}]}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"d", "=", 
         RowBox[{"StringReplace", "[", 
          RowBox[{"c", ",", 
           RowBox[{
            RowBox[{"h", "<>", "\"\< := \>\""}], "\[Rule]", "\"\<\>\""}]}], 
          "]"}]}], ";", " ", 
        RowBox[{"d", "=", 
         RowBox[{"StringTake", "[", 
          RowBox[{"d", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"ModuleQ", "[", "x", "]"}], ",", "8", ",", "7"}], 
              "]"}], ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", " ", 
        RowBox[{"p", "=", 
         RowBox[{
          RowBox[{"SubStrSymbolParity1", "[", 
           RowBox[{"d", ",", "\"\<{\>\"", ",", "\"\<}\>\""}], "]"}], 
          "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ";", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "1"}], ",", 
          RowBox[{"k", "\[LessEqual]", 
           RowBox[{"Length", "[", "b", "]"}]}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "\[LessEqual]", 
             RowBox[{"Length", "[", "t", "]"}]}], ",", 
            RowBox[{"j", "++"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"f", "[", 
                RowBox[{
                "t", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}], 
                "]"}], "\[Equal]", 
               RowBox[{
               "b", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}], 
              ",", 
              RowBox[{"t", "=", 
               RowBox[{"Delete", "[", 
                RowBox[{"t", ",", "j"}], "]"}]}]}], "]"}]}], "]"}]}], "]"}], 
        ";", " ", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"StringReplace", "[", 
          RowBox[{"c", ",", 
           RowBox[{"p", "\[Rule]", 
            RowBox[{"ToString", "[", "t", "]"}]}], ",", "1"}], "]"}], "]"}], 
        ";", " ", 
        RowBox[{"SetAttributes", "[", 
         RowBox[{"x", ",", "at"}], "]"}], ";", " ", "x"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`OptimalLocalsM`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"OptimalLocalsM", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"PureDefinition", "[", "x", "]"}]}], ",", 
      RowBox[{"atr", "=", 
       RowBox[{"Attributes", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"ClearAllAttributes", "[", "x", "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"FromCharacterCode", "[", "6", "]"}]}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"p", "=", "1"}], ",", 
      RowBox[{"t", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"h", "=", 
       RowBox[{"ToString", "[", "x", "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"StringQ", "[", "a", "]"}], ",", 
      RowBox[{
       RowBox[{"OptimalLocals", "[", "h", "]"}], ";", 
       RowBox[{"SetAttributes", "[", 
        RowBox[{"x", ",", "atr"}], "]"}], ";", 
       RowBox[{"Definition", "[", "x", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"b", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{"d", ",", 
               RowBox[{"h", "<>", "c", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"p", "++"}], "]"}]}]}], "]"}], ",", 
             RowBox[{"ToExpression", "[", 
              RowBox[{"StringReplace", "[", 
               RowBox[{"#", ",", 
                RowBox[{
                 RowBox[{"h", "<>", "\"\<[\>\""}], "\[Rule]", 
                 RowBox[{"h", "<>", "c", "<>", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"p", "-", "1"}], "]"}], "<>", "\"\<[\>\""}]}], ",",
                 "1"}], "]"}], "]"}]}], "}"}], "&"}], ",", "a"}], "]"}]}], 
       ";", 
       RowBox[{"b", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"DeleteDuplicates", "[", 
           RowBox[{"Flatten", "[", "b", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"SameQ", "[", 
             RowBox[{"#", ",", "Null"}], "]"}]}], "&"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"BlockQ", "[", "#", "]"}], "||", 
             RowBox[{"ModuleQ", "[", "#", "]"}]}], ",", 
            RowBox[{"OptimalLocals", "[", "#", "]"}], ",", "Null"}], "]"}], 
          "&"}], ",", "b"}], "]"}], ";", " ", 
       RowBox[{"Map", "[", 
        RowBox[{"ToExpression", ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"StringReplace", "[", 
             RowBox[{
              RowBox[{"PureDefinition", "[", "#", "]"}], ",", 
              RowBox[{"GenRules", "[", 
               RowBox[{
                RowBox[{"#", "<>", "\"\<[\>\""}], ",", 
                RowBox[{"h", "<>", "\"\<[\>\""}]}], "]"}], ",", "1"}], "]"}], 
            "&"}], ",", "b"}], "]"}]}], "]"}], ";", " ", 
       RowBox[{"Map", "[", 
        RowBox[{"ClearAll", ",", "b"}], "]"}], ";", 
       RowBox[{"SetAttributes", "[", 
        RowBox[{"x", ",", "atr"}], "]"}], ";", " ", 
       RowBox[{"Definition", "[", "x", "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`OptimalLocalsN`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"OptimalLocalsN", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"BlockModQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b", ",", "c", ",", "d", ",", "h", ",", "t", ",", 
      RowBox[{"a", "=", 
       RowBox[{"SubsProcs", "[", "x", "]"}]}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"a", "===", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{
       RowBox[{"OptimalLocals", "[", "x", "]"}], ";", 
       RowBox[{"Definition", "[", "x", "]"}]}], ",", 
      RowBox[{
       RowBox[{"b", "=", 
        RowBox[{"Attributes", "[", "x", "]"}]}], ";", 
       RowBox[{"ClearAllAttributes", "[", "x", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"c", "=", 
        RowBox[{"PureDefinition", "[", "x", "]"}]}], ";", 
       RowBox[{"d", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"SubsProcs", "[", "x", "]"}], "]"}]}], ";", " ", 
       RowBox[{"t", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"StringTake", "[", 
            RowBox[{"#", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{"StringPosition", "[", 
                   RowBox[{"#", ",", "\"\<[\>\""}], "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], "]"}],
            "&"}], ",", "d"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
       RowBox[{"h", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"t", ",", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\"\<Undefined\>\"", ",", "$Failed"}], "}"}], ",", 
              RowBox[{"PureDefinition", "[", "#", "]"}]}], "]"}]}], "&"}]}], 
         "]"}]}], ";", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"h", "\[NotEqual]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{
          RowBox[{"ToExpression", "[", 
           RowBox[{"\"\<Save[\\\"$Art27Kr18$.m\\\",\>\"", "<>", 
            RowBox[{"ToString", "[", "h", "]"}], "<>", "\"\<]\>\""}], "]"}], 
          ";", " ", 
          RowBox[{"Map", "[", 
           RowBox[{"ClearAllAttributes", ",", "h"}], "]"}], ";", " ", 
          RowBox[{"Map", "[", 
           RowBox[{"Clear", ",", "h"}], "]"}]}], ",", "Null"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{"k", ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "d", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{
          RowBox[{"ToExpression", "[", 
           RowBox[{"d", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "]"}], ";", 
          RowBox[{"OptimalLocals", "[", 
           RowBox[{"t", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "]"}], ";", " ", 
          RowBox[{"c", "=", 
           RowBox[{"StringReplace", "[", 
            RowBox[{"c", ",", 
             RowBox[{
              RowBox[{"d", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "\[Rule]", 
              RowBox[{"PureDefinition", "[", 
               RowBox[{"t", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "]"}]}], ",", "1"}], "]"}]}], 
          ";", " ", 
          RowBox[{"ToExpression", "[", 
           RowBox[{"\"\<Clear[\>\"", "<>", 
            RowBox[{"t", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "<>", "\"\<]\>\""}], "]"}]}]}], 
        "]"}], ";", 
       RowBox[{"ToExpression", "[", "c", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"OptimalLocals", "[", "x", "]"}], ";", " ", 
       RowBox[{"Quiet", "[", 
        RowBox[{"Check", "[", 
         RowBox[{
          RowBox[{"Get", "[", "\"\<$Art27Kr18$.m\>\"", "]"}], ",", "Null"}], 
         "]"}], "]"}], ";", " ", 
       RowBox[{"Quiet", "[", 
        RowBox[{"Check", "[", 
         RowBox[{
          RowBox[{"DeleteFile", "[", "\"\<$Art27Kr18$.m\>\"", "]"}], ",", 
          "Null"}], "]"}], "]"}], ";", " ", 
       RowBox[{"SetAttributes", "[", 
        RowBox[{"x", ",", "b"}], "]"}], ";", " ", 
       RowBox[{"Definition", "[", "x", "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ProcUniToMod`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ProcUniToMod", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"BlockModQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Attributes", "[", "x", "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"ClearAllAttributes", "[", "x", "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Clear", "[", "x", "]"}], ";", 
     RowBox[{"c", "=", 
      RowBox[{"{", "}"}]}], ";", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ToExpression", "[", "#", "]"}], ",", 
          RowBox[{"OptimalLocalsN", "[", "x", "]"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"c", ",", 
            RowBox[{"PureDefinition", "[", "x", "]"}]}], "]"}], ",", 
          RowBox[{"Clear", "[", "x", "]"}]}], "}"}], "&"}], ",", "a"}], "]"}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ToExpression", "[", 
         RowBox[{"StringReplace", "[", 
          RowBox[{"#", ",", 
           RowBox[{
           "\"\< := Block[{\>\"", "\[Rule]", "\"\< := Module[{\>\""}]}], 
          "]"}], "]"}], "&"}], ",", "c"}], "]"}], ";", " ", 
     RowBox[{"SetAttributes", "[", 
      RowBox[{"x", ",", "b"}], "]"}], ";", " ", 
     RowBox[{"Definition", "[", "x", "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ReplaceSubProcs`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReplaceSubProcs", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"BlockModQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{
       RowBox[{"ListQ", "[", "y", "]"}], "&&", 
       RowBox[{
        RowBox[{"Length", "[", "y", "]"}], "\[Equal]", "2"}]}], "||", 
      RowBox[{
       RowBox[{"ListListQ", "[", "y", "]"}], "&&", 
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"y", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", "2"}]}]}]}], ",",
     "z___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"SubsProcs", "[", "x", "]"}], "]"}]}], ",", "b", ",", "c", 
      ",", "h", ",", "g", ",", "f", ",", "k"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"a", "\[Equal]", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{
       RowBox[{"OptimalLocals", "[", "x", "]"}], ";", 
       RowBox[{"Definition", "[", "x", "]"}]}], ",", " ", 
      RowBox[{
       RowBox[{"b", "=", 
        RowBox[{"Attributes", "[", "x", "]"}]}], ";", " ", 
       RowBox[{"ClearAllAttributes", "[", "x", "]"}], ";", " ", 
       RowBox[{"f", "=", 
        RowBox[{"PureDefinition", "[", "x", "]"}]}], ";", " ", 
       RowBox[{"c", "=", 
        RowBox[{"SubProcs", "[", "x", "]"}]}], ";", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ClearAll", "[", "#", "]"}], "&"}], ",", 
         RowBox[{"c", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"h", "=", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"HeadName", "[", "#", "]"}], "&"}], ",", 
           RowBox[{"c", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"2", ";;", 
           RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", " ", 
       RowBox[{"c", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"ListListQ", "[", "y", "]"}], ",", "y", ",", 
            RowBox[{"{", "y", "}"}]}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"BlockModQ", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], "&&", 
             RowBox[{"BlockFuncModQ", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}], "&&", " ", 
             RowBox[{"MemberQ", "[", 
              RowBox[{"h", ",", 
               RowBox[{"ToString", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}]}], "||", " ", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "==", "\"\<\>\""}]}], " ", 
           "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"c", "=", 
        RowBox[{"ToStringRule1", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "&"}], ",", "c"}], "]"}], 
         "]"}]}], ";", " ", 
       RowBox[{"c", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"RuleQ", "[", "c", "]"}], ",", 
          RowBox[{"{", "c", "}"}], ",", "c"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"g", "=", 
        RowBox[{"{", "}"}]}], ";", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "c", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"g", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Select", "[", 
              RowBox[{"a", ",", 
               RowBox[{
                RowBox[{"SuffPref", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{
                   RowBox[{"Part", "[", 
                    RowBox[{
                    RowBox[{"c", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], ",", "1"}], "]"}], "<>", 
                   "\"\<[\>\""}], ",", "1"}], "]"}], "&"}]}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Part", "[", 
                RowBox[{
                 RowBox[{"c", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], ",", "2"}], "]"}], "==", 
               "\"\<\>\""}], ",", "\"\<\>\"", ",", 
              RowBox[{"PureDefinition", "[", 
               RowBox[{"Part", "[", 
                RowBox[{
                 RowBox[{"c", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], ",", "2"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", " ", 
       RowBox[{"ToExpression", "[", 
        RowBox[{"StringReplace", "[", 
         RowBox[{
          RowBox[{"StringReplace", "[", 
           RowBox[{"f", ",", "g"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\< , \>\"", "->", "\"\<\>\""}], ",", 
            RowBox[{"\"\< ; \>\"", "->", "\"\<\>\""}]}], "}"}]}], "]"}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "z", "}"}], "\[NotEqual]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{"ClearAllAttributes", ",", "h"}], "]"}], ";", " ", 
          RowBox[{"Map", "[", 
           RowBox[{"ClearAll", ",", "h"}], "]"}]}], ",", "Null"}], "]"}], ";",
        " ", 
       RowBox[{"OptimalLocalsN", "[", "x", "]"}], ";", " ", 
       RowBox[{"SetAttributes", "[", 
        RowBox[{"x", ",", "b"}], "]"}], ";", " ", 
       RowBox[{"Definition", "[", "x", "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`UpdateContextPaths`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UpdateContextPaths", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"StringQ", "[", "x", "]"}], "||", 
     RowBox[{"ListStringQ", "[", "x", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{
     RowBox[{"$ContextPath", "=", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"ReleaseHold", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"$ContextPath", ",", "#"}], "]"}], "&"}], ",", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", "x", "}"}], "]"}]}], "]"}], "]"}], "]"}], "]"}]}], 
     ";"}]}], " ", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`UpdatePackages`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UpdatePackages", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"StringQ", "[", "x", "]"}], "||", 
     RowBox[{"ListStringQ", "[", "x", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{
     RowBox[{"ClearAttributes", "[", 
      RowBox[{"$Packages", ",", "Protected"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"$Packages", "=", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"ReleaseHold", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"$Packages", ",", "#"}], "]"}], "&"}], ",", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", "x", "}"}], "]"}]}], "]"}], "]"}], "]"}], "]"}]}], 
     ";", " ", "\[IndentingNewLine]", 
     RowBox[{"SetAttributes", "[", 
      RowBox[{"$Packages", ",", "Protected"}], "]"}], ";"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`LoadMyPackage`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LoadMyPackage", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
       "\"\<mx\>\""}]}]}], ",", "y_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "Cn", ",", "Ts", ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Ts", "[", "g_", "]"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"p", "=", "\"\<$Art26Kr18$.txt\>\""}], ",", 
          RowBox[{"b", "=", "\"\<\>\""}], ",", "c", ",", "d", ",", 
          RowBox[{"v", "=", "1"}]}], "}"}], ",", 
        RowBox[{
         RowBox[{"Write", "[", 
          RowBox[{"p", ",", "g"}], "]"}], ";", 
         RowBox[{"Close", "[", "p", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{"v", "<", "Infinity"}], ",", 
           RowBox[{
            RowBox[{"c", "=", 
             RowBox[{"Read", "[", 
              RowBox[{"p", ",", "String"}], "]"}]}], ";", " ", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"SameQ", "[", 
               RowBox[{"c", ",", "EndOfFile"}], "]"}], ",", 
              RowBox[{
               RowBox[{"Close", "[", "p", "]"}], ";", 
               RowBox[{"DeleteFile", "[", "p", "]"}], ";", " ", 
               RowBox[{"Return", "[", "b", "]"}]}], ",", 
              RowBox[{"b", "=", 
               RowBox[{"b", "<>", "c"}]}]}], "]"}], ";", 
            RowBox[{"Continue", "[", "]"}]}]}], "]"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Cn", "[", "t_", "]"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"s", "=", 
           RowBox[{"Names", "[", 
            RowBox[{"StringJoin", "[", 
             RowBox[{"t", ",", "\"\<*\>\""}], "]"}], "]"}]}], ",", "b"}], 
         "}"}], ",", 
        RowBox[{"b", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"s", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Quiet", "[", 
              RowBox[{"ToString", "[", 
               RowBox[{"Definition", "[", 
                RowBox[{"ToString", "[", "#1", "]"}], "]"}], "]"}], "]"}], 
             "\[NotEqual]", "\"\<Null\>\""}], "&"}]}], "]"}]}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Quiet", "[", 
      RowBox[{"Get", "[", "x", "]"}], "]"}], ";", 
     RowBox[{"a", "=", 
      RowBox[{"Cn", "[", "y", "]"}]}], ";", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{
        RowBox[{"Quiet", "[", 
         RowBox[{"ToExpression", "[", 
          RowBox[{"StringReplace", "[", 
           RowBox[{
            RowBox[{"StringReplace", "[", 
             RowBox[{
              RowBox[{"Ts", "[", 
               RowBox[{"ToExpression", "[", 
                RowBox[{"\"\<Definition[\>\"", "<>", 
                 RowBox[{"a", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], "<>", "\"\<]\>\""}], "]"}], 
               "]"}], ",", 
              RowBox[{"y", "\[Rule]", "\"\<\>\""}]}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"a", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "<>", "\"\<`\>\""}], 
             "\[Rule]", "\"\<\>\""}]}], "]"}], "]"}], "]"}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`LoadPackage`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LoadPackage", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
     RowBox[{
      RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
      "\"\<mx\>\""}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "a", "}"}], ",", 
    RowBox[{"Quiet", "[", 
     RowBox[{
      RowBox[{"ToExpression", "[", "\"\<Off[\!\(\*
StyleBox[\"shdw\", \"MessageName\"]\)::Symbol]\>\"", "]"}], ";", " ", 
      RowBox[{"Get", "[", "x", "]"}], ";", " ", 
      RowBox[{"a", "=", 
       RowBox[{"ToExpression", "[", "\"\<Packages[][[1]]\>\"", "]"}]}], ";", 
      RowBox[{"ToExpression", "[", 
       RowBox[{
       "\"\<LoadMyPackage[\>\"", "<>", "\"\<\\\"\>\"", "<>", "x", "<>", 
        "\"\<\\\"\>\"", "<>", "\"\<,\>\"", "<>", "\"\<\\\"\>\"", "<>", "a", 
        "<>", "\"\<\\\"\>\"", "<>", "\"\<]\>\""}], "]"}], ";", " ", 
      RowBox[{"ToExpression", "[", "\"\<On[\!\(\*
StyleBox[\"shdw\", \"MessageName\"]\)::Symbol]\>\"", "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`MfileEvaluate`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MfileEvaluate", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
       "\"\<m\>\""}]}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", "y"}], 
      "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "h"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"StringCases", "[", 
       RowBox[{
        RowBox[{"ReadString", "[", "x", "]"}], ",", 
        RowBox[{"\"\<BeginPackage[\\\"\>\"", "~~", 
         RowBox[{"Shortest", "[", "___", "]"}], "~~", "\"\<`\\\"]\>\""}]}], 
       "]"}]}], ";", 
     RowBox[{"a", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Quiet", "[", 
          RowBox[{"Check", "[", 
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{"15", ",", 
                RowBox[{"-", "3"}]}], "}"}]}], "]"}], ",", "Null"}], "]"}], 
          "]"}], "&"}], ",", "a"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"a", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"a", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Complement", "[", 
           RowBox[{
            RowBox[{"Characters", "[", "#", "]"}], ",", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"CharacterRange", "[", 
               RowBox[{"\"\<A\>\"", ",", "\"\<Z\>\""}], "]"}], ",", 
              RowBox[{"CharacterRange", "[", 
               RowBox[{"\"\<a\>\"", ",", "\"\<z\>\""}], "]"}], ",", 
              RowBox[{"{", "\"\<`\>\"", "}"}]}], "]"}]}], "]"}], "\[Equal]", 
          RowBox[{"{", "}"}]}], "&"}]}], "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", "\"\<AladjevProcedures`\>\"", " ", "}"}]}], "}"}], 
         ",", "a"}], "]"}], ",", "$Failed", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Quiet", "[", 
         RowBox[{"NotebookEvaluate", "[", 
          RowBox[{"NotebookOpen", "[", 
           RowBox[{"x", ",", 
            RowBox[{"Visible", "\[Rule]", "False"}]}], "]"}], "]"}], "]"}], 
        ";", " ", 
        RowBox[{"b", "=", 
         RowBox[{"a", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", " ", 
        RowBox[{"h", "=", 
         RowBox[{"Names", "[", 
          RowBox[{"b", "<>", "\"\<*\>\""}], "]"}]}], ";", " ", 
        RowBox[{"c", "=", 
         RowBox[{"Sort", "[", 
          RowBox[{"DeleteDuplicates", "[", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"StringReplace", "[", 
               RowBox[{"#", ",", 
                RowBox[{"b", "->", "\"\<\>\""}]}], "]"}], "&"}], ",", "h"}], 
            "]"}], "]"}], "]"}]}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"y", "\[Equal]", "1"}], ",", "c", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"y", "\[Equal]", "2"}], ",", 
            RowBox[{
             RowBox[{"d", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", "}"}], ",", 
                RowBox[{"{", "}"}]}], "}"}]}], ";", " ", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"ToString", "[", 
                    RowBox[{"Definition", "[", "#", "]"}], "]"}], "!=", 
                   "\"\<Null\>\""}], ",", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{
                    RowBox[{"d", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "#"}], "]"}], ",", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{
                    RowBox[{"d", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "#"}], "]"}]}], 
                 "]"}], "&"}], ",", "h"}], "]"}], ";", " ", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"d", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
                RowBox[{"{", "}"}]}], ",", "Null", ",", 
               RowBox[{"c", "=", 
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Quiet", "[", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"StringReplace", "[", 
                    RowBox[{
                    RowBox[{"DefToString", "[", "#", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"b", "->", "\"\<\>\""}], ",", 
                    RowBox[{
                    RowBox[{"#", "<>", "\"\<`\>\""}], "->", "\"\<\>\""}]}], 
                    "}"}]}], "]"}], "]"}], "]"}], "&"}], ",", 
                  RowBox[{"d", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "]"}], ";", 
             " ", "\[IndentingNewLine]", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"StringReplace", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"b", "->", "\"\<\>\""}]}], "]"}], "&"}], ",", "d"}],
               "]"}]}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"y", "\[Equal]", "3"}], ",", "b", ",", 
              RowBox[{
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Print", "[", "#", "]"}], ",", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<?\>\"", "<>", 
                    RowBox[{"ToString", "[", "#", "]"}]}], "]"}]}], "}"}], 
                  "&"}], ",", "h"}], "]"}], ";"}]}], " ", "]"}]}], "]"}]}], 
         "]"}]}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Usages`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Usages", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", 
      RowBox[{"h", "=", "\"\<\>\""}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"FileExistsQ", "[", "x", "]"}]}], ",", 
       RowBox[{"Put", "[", "x", "]"}], ",", " ", "Null"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", "y", "}"}], "\[Equal]", 
         RowBox[{"{", "}"}]}], "&&", 
        RowBox[{"!", 
         RowBox[{"EmptyFileQ", "[", "x", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"SameQ", "[", 
            RowBox[{"h", ",", "EndOfFile"}], "]"}]}], ",", 
          RowBox[{"Quiet", "[", 
           RowBox[{"ToExpression", "[", 
            RowBox[{"h", "=", 
             RowBox[{"Read", "[", 
              RowBox[{"x", ",", "Expression"}], "]"}]}], "]"}], "]"}]}], 
         "]"}], ";", 
        RowBox[{"Close", "[", "x", "]"}], ";"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", "y", "}"}], "\[Equal]", 
           RowBox[{"{", "}"}]}], "&&", 
          RowBox[{"EmptyFileQ", "[", "x", "]"}]}], ",", "$Failed", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Quiet", "[", 
             RowBox[{"Check", "[", 
              RowBox[{
               RowBox[{"ListQ", "[", "y", "]"}], ",", "False"}], "]"}], "]"}],
             "&&", 
            RowBox[{
             RowBox[{"{", "y", "}"}], "\[NotEqual]", 
             RowBox[{"{", "}"}]}], "&&", 
            RowBox[{"ListSymbolQ", "[", "y", "]"}]}], ",", 
           RowBox[{
            RowBox[{"a", "=", 
             RowBox[{"DeleteDuplicates", "[", 
              RowBox[{"Select", "[", 
               RowBox[{"y", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Head", "[", 
                   RowBox[{"#", "::", "usage"}], "]"}], "===", "String"}], 
                 "&"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"a", "\[NotEqual]", 
               RowBox[{"{", "}"}]}], ",", 
              RowBox[{"PutAppend", "[", 
               RowBox[{
                RowBox[{"Sequences", "[", 
                 RowBox[{"Map", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", "#", "]"}], "<>", 
                    "\"\<::usage = \>\"", "<>", "\"\<\\\"\>\"", "<>", 
                    RowBox[{"#", "::", "usage"}], "<>", "\"\<\\\"\>\""}], 
                    "&"}], ",", "a"}], "]"}], "]"}], ",", "x"}], "]"}], ",", 
              "$Failed"}], "]"}]}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"Quiet", "[", 
               RowBox[{"Check", "[", 
                RowBox[{
                 RowBox[{"ListQ", "[", "y", "]"}], ",", "False"}], "]"}], 
               "]"}]}], ",", 
             RowBox[{
              RowBox[{"b", "=", 
               RowBox[{"DeleteDuplicates", "[", 
                RowBox[{"Reverse", "[", 
                 RowBox[{"ReadList", "[", 
                  RowBox[{"x", ",", "Expression"}], "]"}], "]"}], "]"}]}], 
              ";", "\[IndentingNewLine]", 
              RowBox[{"Put", "[", 
               RowBox[{
                RowBox[{"Sequences", "[", 
                 RowBox[{"Select", "[", 
                  RowBox[{"b", ",", 
                   RowBox[{
                    RowBox[{"!", 
                    RowBox[{"SuffPref", "[", 
                    RowBox[{"#1", ",", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", "#", "]"}], "<>", 
                    "\"\<::usage\>\""}], "&"}], ",", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", "y", "}"}], "]"}]}], "]"}], ",", "1"}], 
                    "]"}]}], "&"}]}], "]"}], "]"}], ",", "x"}], "]"}]}], ",", 
             "$Failed"}], "]"}]}], "]"}]}], "]"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Usages1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Usages1", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ContextQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Print", "[", "#", "]"}], ",", 
         RowBox[{"ToExpression", "[", 
          RowBox[{"\"\<?\>\"", "<>", "#"}], "]"}]}], "}"}], "&"}], ",", 
      RowBox[{"CNames", "[", "x", "]"}]}], "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`UsagesMNb`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UsagesMNb", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<m\>\"", ",", "\"\<nb\>\""}], "}"}], ",", 
       RowBox[{"FileExtension", "[", "x", "]"}]}], "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", "\"\<m\>\""}], 
      ",", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"ReadList", "[", 
           RowBox[{"x", ",", "String"}], "]"}], ",", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"StringFreeQ", "[", 
             RowBox[{"#", ",", "\"\<::usage=\>\""}], "]"}]}], "&"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"a", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"StringTake", "[", 
            RowBox[{"#", ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", 
               RowBox[{"-", "3"}]}], "}"}]}], "]"}], "&"}], ",", "a"}], 
         "]"}]}], ";", " ", 
       RowBox[{"a", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"SymbolQ", "[", 
              RowBox[{"StringTake", "[", 
               RowBox[{"#", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"#", ",", "\"\<::usage=\>\""}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
               "]"}], "]"}], ",", "#"}], "]"}], "&"}], ",", "a"}], "]"}]}], 
       ";", 
       RowBox[{"Select", "[", 
        RowBox[{"a", ",", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"SameQ", "[", 
            RowBox[{"#", ",", "Null"}], "]"}]}], "&"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"c", "=", "\"\<$.m\>\""}], ";", " ", 
       RowBox[{"b", "=", 
        RowBox[{"ContextFromFile", "[", "x", "]"}]}], ";", " ", 
       RowBox[{"ToExpression", "[", 
        RowBox[{"\"\<Save[\>\"", "<>", 
         RowBox[{"StrStr", "[", "c", "]"}], "<>", "\"\<, \>\"", "<>", 
         RowBox[{"StrStr", "[", "b", "]"}], "<>", "\"\<]\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"b", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Quiet", "[", 
           RowBox[{"ReadList", "[", 
            RowBox[{"\"\<$.m\>\"", ",", "Expression"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Null", ",", 
                RowBox[{"{", "Temporary", "}"}]}], "}"}], ",", "#"}], "]"}]}],
            "&"}]}], "]"}]}], ";", 
       RowBox[{"DeleteFile", "[", "\"\<$.m\>\"", "]"}], ";", "b"}]}], "]"}]}],
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`UpdatePath`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UpdatePath", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"StringQ", "[", "x", "]"}], "||", 
     RowBox[{"ListStringQ", "[", "x", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{
     RowBox[{"ClearAttributes", "[", 
      RowBox[{"$Path", ",", "Protected"}], "]"}], ";", 
     RowBox[{"$Path", "=", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"$Path", ",", "x"}], "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"SetAttributes", "[", 
      RowBox[{"$Path", ",", "Protected"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StreamFiles`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StreamFiles", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"ToString1", ",", 
         RowBox[{"StreamsU", "[", "]"}]}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"w", "=", 
       RowBox[{"{", "\"\<out\>\"", "}"}]}], ",", 
      RowBox[{"r", "=", 
       RowBox[{"{", "\"\<in\>\"", "}"}]}], ",", "c", ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"a", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"Return", "[", "\"\<AllFilesClosed\>\"", "]"}], ",", 
       RowBox[{"For", "[", 
        RowBox[{"k", ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "a", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{
          RowBox[{"c", "=", 
           RowBox[{"a", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"SuffPref", "[", 
             RowBox[{"c", ",", "\"\<Out\>\"", ",", "1"}], "]"}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"w", ",", 
              RowBox[{"StrFromStr", "[", "c", "]"}]}], "]"}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"r", ",", 
              RowBox[{"StrFromStr", "[", "c", "]"}]}], "]"}]}], "]"}]}]}], 
        "]"}]}], "]"}], ";", " ", 
     RowBox[{"c", "=", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{"Flatten", ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", "w"}], "}"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "#", "]"}], ">", "1"}], "&"}]}], "]"}]}], 
     ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "c", "]"}], "\[Equal]", "1"}], ",", 
       RowBox[{"c", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "c"}], "]"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Need`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Need", "[", "x__", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Directory", "[", "]"}]}], ",", "c", ",", "p", ",", 
      RowBox[{"d", "=", 
       RowBox[{
        RowBox[{"{", "x", "}"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", "f", ",", 
      RowBox[{"b", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"{", "x", "}"}], "]"}], ">", "1"}], "&&", 
          RowBox[{"StringQ", "[", 
           RowBox[{
            RowBox[{"{", "x", "}"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"{", "x", "}"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", "\"\<Null\>\""}], "]"}]}]}], 
     "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"ContextQ", "[", "d", "]"}]}], ",", "$Failed", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"b", "\[Equal]", "\"\<Null\>\""}], ",", 
        RowBox[{"Quiet", "[", 
         RowBox[{"Check", "[", 
          RowBox[{
           RowBox[{"Get", "[", "d", "]"}], ",", "$Failed"}], "]"}], "]"}], 
        ",", " ", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"b", "\[NotEqual]", "\"\<Null\>\""}], "&&", 
            RowBox[{"!", 
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\"\<m\>\"", ",", "\"\<mx\>\""}], "}"}], ",", 
               RowBox[{"FileExtension", "[", "b", "]"}]}], "]"}]}]}], "||", 
           RowBox[{"!", 
            RowBox[{"FileExistsQ", "[", "b", "]"}]}]}], ",", "$Failed", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{"$Packages", ",", "d"}], "]"}], ",", "True", ",", 
            RowBox[{
             RowBox[{"CopyFile", "[", 
              RowBox[{"b", ",", 
               RowBox[{"f", "=", 
                RowBox[{"a", "<>", "\"\<\\\\\>\"", "<>", 
                 RowBox[{
                  RowBox[{"FileNameSplit", "[", "b", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}]}]}]}], "]"}], ";", 
             RowBox[{"Get", "[", "f", "]"}], ";", " ", 
             RowBox[{"DeleteFile", "[", "f", "]"}], ";", "True"}]}], "]"}]}], 
         "]"}]}], "]"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DefaultsQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DefaultsQ", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Args", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", 
        RowBox[{"\"\<_.\>\"", ",", "\"\<_:\>\""}], "}"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", "d", ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"ToString", ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"NestListQ", "[", "a", "]"}], ",", 
          RowBox[{"a", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "a"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{
        RowBox[{"d", "=", 
         RowBox[{"a", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"StringFreeQ", "[", 
            RowBox[{"d", ",", 
             RowBox[{"b", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"c", ",", 
            RowBox[{"b", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"StringFreeQ", "[", 
              RowBox[{"d", ",", 
               RowBox[{"b", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"c", ",", 
              RowBox[{"b", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "]"}]}], "]"}], ";",
         " ", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"c", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", "False", ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", "y", "}"}], "\[NotEqual]", 
            RowBox[{"{", "}"}]}], "&&", 
           RowBox[{"!", 
            RowBox[{"HowAct", "[", "y", "]"}]}]}], ",", 
          RowBox[{"y", "=", 
           RowBox[{"DeleteDuplicates", "[", 
            RowBox[{"Flatten", "[", "c", "]"}], "]"}]}]}], "]"}], ";", 
        "True"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`FileOpenQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FileOpenQ", "[", 
   RowBox[{"F_", "/;", 
    RowBox[{"StringQ", "[", "F", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"A", ",", 
      RowBox[{"a", "=", 
       RowBox[{"FileType", "[", "F", "]"}]}], ",", "b", ",", "d", ",", 
      RowBox[{"x", "=", "inputstream"}], ",", 
      RowBox[{"y", "=", "outputstream"}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"ToString1", ",", 
         RowBox[{"StreamsU", "[", "]"}]}], "]"}]}], ",", 
      RowBox[{"f", "=", 
       RowBox[{"ToLowerCase", "[", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"F", ",", 
          RowBox[{"\"\<\\\\\>\"", "\[Rule]", "\"\</\>\""}]}], "]"}], 
        "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"A", "[", "t_", "]"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"a1", "=", 
           RowBox[{"ToString1", "[", "t", "]"}]}], ",", 
          RowBox[{"b1", "=", 
           RowBox[{"StringLength", "[", 
            RowBox[{"ToString", "[", 
             RowBox[{"Head", "[", "t", "]"}], "]"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"\"\<{\>\"", "<>", 
          RowBox[{"StrStr", "[", 
           RowBox[{"Head", "[", "t", "]"}], "]"}], "<>", "\"\<,\>\"", "<>", 
          RowBox[{"StringTake", "[", 
           RowBox[{"a1", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"b1", "+", "2"}], ",", 
              RowBox[{"-", "2"}]}], "}"}]}], "]"}], "<>", "\"\<}\>\""}], 
         "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Directory", ",", "None"}], "}"}], ",", "a"}], "]"}], ",", 
       "$Failed", ",", 
       RowBox[{
        RowBox[{"Clear", "[", 
         RowBox[{"inputstream", ",", "outputstream"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"d", "=", 
         RowBox[{"ToExpression", "[", 
          RowBox[{"ToLowerCase", "[", 
           RowBox[{"StringReplace", "[", 
            RowBox[{
             RowBox[{"ToString1", "[", 
              RowBox[{"Map", "[", 
               RowBox[{"A", ",", 
                RowBox[{"StreamsU", "[", "]"}]}], "]"}], "]"}], ",", 
             RowBox[{"\"\<\\\\\\\\\>\"", "\[Rule]", "\"\</\>\""}]}], "]"}], 
           "]"}], "]"}]}], ";", 
        RowBox[{"a", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"d", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "===", "f"}], "&"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"a", "\[Equal]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"inputstream", ",", "outputstream"}], "}"}], "=", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}]}], ";", " ", "False"}], ",", 
          RowBox[{"a", "=", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"ReplaceAll", "[", 
               RowBox[{"a", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"inputstream", "\[Rule]", "\"\<read\>\""}], ",", 
                  RowBox[{"outputstream", "\[Rule]", "\"\<write\>\""}]}], 
                 "}"}]}], "]"}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"inputstream", ",", "outputstream"}], "}"}], "=", 
               RowBox[{"{", 
                RowBox[{"x", ",", "y"}], "}"}]}]}], "}"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}]}], "]"}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "1"}], ",", 
       RowBox[{"a", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "a"}], "]"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`FileOpenQ1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FileOpenQ1", "[", 
   RowBox[{"F_", "/;", 
    RowBox[{"StringQ", "[", "F", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"StreamFiles", "[", "]"}]}], ",", "b", ",", "c", ",", "d", ",", 
      RowBox[{"k", "=", "1"}], ",", "j"}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"a", "===", "\"\<AllFilesClosed\>\""}], ",", 
       RowBox[{"Return", "[", "False", "]"}], ",", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"StringReplace", "[", 
          RowBox[{
           RowBox[{"ToLowerCase", "[", "F", "]"}], ",", 
           RowBox[{"\"\</\>\"", "->", "\"\<\\\\\>\""}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"b", "=", 
         RowBox[{"Mapp", "[", 
          RowBox[{"StringReplace", ",", 
           RowBox[{"Map", "[", 
            RowBox[{"ToLowerCase", ",", "a"}], "]"}], ",", 
           RowBox[{"\"\</\>\"", "->", "\"\<\\\\\>\""}]}], "]"}]}]}]}], "]"}], 
     ";", " ", 
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", "2"}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "2"}], ",", 
         RowBox[{"j", "\[LessEqual]", 
          RowBox[{"Length", "[", 
           RowBox[{"b", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "]"}]}], ",", 
         RowBox[{"j", "++"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"Not", "[", 
            RowBox[{
             RowBox[{"SuffPref", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"b", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "[", 
                RowBox[{"[", "j", "]"}], "]"}], ",", "c", ",", "2"}], "]"}], "||", 
             RowBox[{"SuffPref", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"b", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "[", 
                RowBox[{"[", "j", "]"}], "]"}], ",", 
               RowBox[{"\"\<\\\\\>\"", "<>", "c"}], ",", "2"}], "]"}]}], 
            "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"a", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "[", 
              RowBox[{"[", "j", "]"}], "]"}], "=", "Null"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Continue", "[", "]"}]}], ",", 
           RowBox[{"Continue", "[", "]"}]}], "]"}]}], "]"}]}], "]"}], ";", 
     RowBox[{"b", "=", 
      RowBox[{"Mapp", "[", 
       RowBox[{"Select", ",", "a", ",", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"#", "===", "Null"}]}], "&"}]}], "]"}]}], ";", " ", 
     RowBox[{"b", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"b", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "#", "]"}], ">", "1"}], "&"}]}], "]"}]}], 
     ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "b", "]"}], "\[Equal]", "1"}], ",", 
       RowBox[{"b", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "b"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`FunCompose`\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"FunCompose", "[", 
   RowBox[{
    RowBox[{"L_", "/;", 
     RowBox[{"ListQ", "[", "L", "]"}]}], ",", "x_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"k", "=", "2"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{
       RowBox[{"L", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "@", "x"}]}], ";", " ", 
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "L", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{"a", "=", 
        RowBox[{
         RowBox[{"L", "[", 
          RowBox[{"[", "k", "]"}], "]"}], "@", "a"}]}]}], "]"}], ";", "a"}]}],
    "]"}]}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{"Begin", "[", "\"\<`MixCaseQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MixCaseQ", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "k"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Characters", "[", "x", "]"}], ",", 
        RowBox[{"{", "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"LetterQ", "[", 
           RowBox[{"a", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "]"}]}], ",", "Null", ",", 
         RowBox[{"b", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"b", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"UpperCaseQ", "[", 
               RowBox[{"a", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "]"}], ",", "1", ",", "2"}], 
             "]"}]}], "]"}]}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"Length", "[", 
       RowBox[{"DeleteDuplicates", "[", "b", "]"}], "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"b", "\[Equal]", "0"}], ",", "\"\<Special Characters\>\"", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"b", "\[Equal]", "1"}], ",", "False", ",", "True"}], "]"}]}],
       "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Closes`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Closes", "[", "x_", "]"}], ":=", 
  RowBox[{"Quiet", "[", 
   RowBox[{"Check", "[", 
    RowBox[{
     RowBox[{"Close", "[", "x", "]"}], ",", "Null"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`CloseAll`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CloseAll", "[", "]"}], ":=", 
  RowBox[{"Map", "[", 
   RowBox[{"Close", ",", 
    RowBox[{"StreamsU", "[", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Close1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Close1", "[", "x___String", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{
        RowBox[{"Streams", "[", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"3", ";;", 
          RowBox[{"-", "1"}]}], "]"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "x", "}"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", "j"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"a", "\[Equal]", 
        RowBox[{"{", "}"}]}], "||", 
       RowBox[{"b", "\[Equal]", 
        RowBox[{"{", "}"}]}]}], ",", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{
       RowBox[{"b", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"{", "x", "}"}], ",", 
          RowBox[{
           RowBox[{"FileExistsQ", "[", "#", "]"}], "&"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "a", "]"}]}], ",", 
         RowBox[{
          RowBox[{"j", "=", "1"}], ";", 
          RowBox[{"While", "[", 
           RowBox[{
            RowBox[{"j", "\[LessEqual]", 
             RowBox[{"Length", "[", "b", "]"}]}], ",", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"ToUpperCase", "[", 
                 RowBox[{"StringReplace", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"a", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\<\\\\\>\"", "\[Rule]", "\"\<\>\""}], ",", 
                    RowBox[{"\"\</\>\"", "\[Rule]", "\"\<\>\""}]}], "}"}]}], 
                  "]"}], "]"}], "\[Equal]", 
                RowBox[{"ToUpperCase", "[", 
                 RowBox[{"StringReplace", "[", 
                  RowBox[{
                   RowBox[{"b", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\<\\\\\>\"", "\[Rule]", "\"\<\>\""}], ",", 
                    RowBox[{"\"\</\>\"", "\[Rule]", "\"\<\>\""}]}], "}"}]}], 
                  "]"}], "]"}]}], ",", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"c", ",", 
                 RowBox[{"a", "[", 
                  RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], "]"}], ";", " ", 
             RowBox[{"j", "++"}]}]}], "]"}], ";", " ", 
          RowBox[{"k", "++"}]}]}], "]"}], ";", 
       RowBox[{"Map", "[", 
        RowBox[{"Close", ",", "c"}], "]"}], ";", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "b", "]"}], "\[Equal]", "1"}], ",", 
         RowBox[{"b", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "b"}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Close2`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Close2", "[", "x___String", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{
        RowBox[{"Streams", "[", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"3", ";;", 
          RowBox[{"-", "1"}]}], "]"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", "c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"{", "x", "}"}], ",", 
         RowBox[{
          RowBox[{"StringQ", "[", "#", "]"}], "&"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"d", "\[Equal]", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"c", "[", "y_", "]"}], ":=", 
        RowBox[{"ToLowerCase", "[", 
         RowBox[{"StringReplace", "[", 
          RowBox[{"y", ",", 
           RowBox[{"\"\</\>\"", " ", "->", "\"\<\\\\\>\""}]}], "]"}], "]"}]}],
        ";", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"b", ",", 
            RowBox[{"Part", "[", 
             RowBox[{"#", ",", "1"}], "]"}]}], "]"}], "&"}], ",", "a"}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"d", "=", 
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"c", "[", "#", "]"}], "&"}], ",", "d"}], "]"}], "]"}]}], 
       ";", " ", 
       RowBox[{"Map", "[", 
        RowBox[{"Close", ",", 
         RowBox[{"Select", "[", 
          RowBox[{"b", ",", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{"d", ",", 
              RowBox[{"c", "[", "#", "]"}]}], "]"}], "&"}]}], "]"}]}], 
        "]"}]}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StreamsU`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StreamsU", "[", "]"}], ":=", 
  RowBox[{
   RowBox[{"Streams", "[", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"3", ";;", 
     RowBox[{"-", "1"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`UprocQ`\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"UprocQ", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"SymbolQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Unique", "[", "\"\<agn\>\"", "]"}]}], ",", "b"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"SingleDefQ", "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"b", "=", 
        RowBox[{"ProcQ1", "[", 
         RowBox[{"x", ",", "a"}], "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"b", ",", 
         RowBox[{
          RowBox[{"a", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ",", "False"}], "]"}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{"Begin", "[", "\"\<`Mapp`\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"Mapp", "[", 
   RowBox[{
    RowBox[{"F_", "/;", 
     RowBox[{
      RowBox[{"ProcQ", "[", "F", "]"}], "||", 
      RowBox[{"SysFuncQ", "[", "F", "]"}], "||", 
      RowBox[{"SymbolQ", "[", "F", "]"}]}]}], ",", "Expr_", ",", "x___"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Level", "[", 
        RowBox[{"Expr", ",", "1"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "x", "}"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", "h", ",", 
      RowBox[{"g", "=", 
       RowBox[{"Head", "[", "Expr", "]"}]}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"b", "==", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"Map", "[", 
       RowBox[{"F", ",", "Expr"}], "]"}], ",", 
      RowBox[{
       RowBox[{"h", "=", 
        RowBox[{"Length", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{"k", ",", 
         RowBox[{"k", "\[LessEqual]", "h"}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"c", ",", 
           RowBox[{
            RowBox[{"ToString", "[", "F", "]"}], "<>", "\"\<[\>\"", "<>", 
            RowBox[{"ToString1", "[", 
             RowBox[{"a", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "]"}], "<>", "\"\<, \>\"", "<>", 
            RowBox[{"ListStrToStr", "[", 
             RowBox[{"Map", "[", 
              RowBox[{"ToString1", ",", 
               RowBox[{"{", "x", "}"}]}], "]"}], "]"}], "<>", "\"\<]\>\""}]}],
           "]"}]}], "]"}], ";", " ", 
       RowBox[{"g", "@@", 
        RowBox[{"Map", "[", 
         RowBox[{"ToExpression", ",", "c"}], "]"}]}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Mapp1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Mapp1", "[", 
   RowBox[{
    RowBox[{"F_", "/;", 
     RowBox[{"SymbolQ", "[", "F", "]"}]}], ",", 
    RowBox[{"L_", "/;", 
     RowBox[{"ListQ", "[", "L", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Attributes", "[", "F", "]"}]}], ",", "b"}], "}"}], ",", 
    RowBox[{
     RowBox[{"SetAttributes", "[", 
      RowBox[{"F", ",", "Listable"}], "]"}], ";", 
     RowBox[{"b", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"F", ",", "L"}], "]"}]}], ";", 
     RowBox[{"ClearAllAttributes", "[", "F", "]"}], ";", 
     RowBox[{"SetAttributes", "[", 
      RowBox[{"F", ",", "a"}], "]"}], ";", "b"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`MapInSitu`\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"MapInSitu", "[", 
   RowBox[{"x_", ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"StringQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"ToExpression", "[", 
   RowBox[{"y", "<>", "\"\<=\>\"", "<>", 
    RowBox[{"ToString", "[", 
     RowBox[{"Map", "[", 
      RowBox[{"x", ",", 
       RowBox[{"ToExpression", "[", "y", "]"}]}], "]"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`MapInSitu1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MapInSitu1", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"ToExpression", "[", 
   RowBox[{
    RowBox[{"ToString", "[", 
     RowBox[{"Args", "[", 
      RowBox[{"MapInSitu", ",", "78"}], "]"}], "]"}], "<>", "\"\<=\>\"", "<>", 
    RowBox[{"ToString", "[", 
     RowBox[{"Map", "[", 
      RowBox[{"x", ",", "y"}], "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`MapInSitu2`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MapInSitu2", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"x", ",", "y"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"ToString", "[", "y", "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Names", "[", "\"\<`*\>\"", "]"}], ",", 
         RowBox[{
          RowBox[{"StringFreeQ", "[", 
           RowBox[{"#", ",", "\"\<$\>\""}], "]"}], "&"}]}], "]"}]}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", "h"}], "}"}], ",", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "c", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", " ", 
       RowBox[{
        RowBox[{"h", "=", 
         RowBox[{"c", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"ToExpression", "[", "h", "]"}], "]"}], "===", "b"}], ",", 
          RowBox[{"d", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"d", ",", "h"}], "]"}]}], ",", "Null"}], "]"}]}]}], "]"}],
      ";", " ", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "d", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"h", "=", 
         RowBox[{"d", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", " ", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"h", "<>", "\"\< = \>\"", "<>", 
          RowBox[{"ToString", "[", "a", "]"}]}], "]"}]}]}], "]"}], ";", 
     "a"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ToList`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ToList", "[", "expr_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", "d", ",", 
      RowBox[{"k", "=", "1"}], ",", "n"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"StringQ", "[", "expr", "]"}], ",", 
      RowBox[{"Characters", "[", "expr", "]"}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"ListQ", "[", "expr", "]"}], ",", "expr", ",", 
        RowBox[{
         RowBox[{"a", "=", 
          RowBox[{"ToString", "[", 
           RowBox[{"InputForm", "[", 
            RowBox[{"Map", "[", 
             RowBox[{"b", ",", "expr"}], "]"}], "]"}], "]"}]}], ";", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"d", "=", 
          RowBox[{"StringSplit", "[", 
           RowBox[{"a", ",", 
            RowBox[{
             RowBox[{"ToString", "[", "b", "]"}], "<>", "\"\<[\>\""}]}], 
           "]"}]}], ";", " ", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{"k", ",", 
           RowBox[{"k", "\[LessEqual]", 
            RowBox[{"Length", "[", "d", "]"}]}], ",", 
           RowBox[{"k", "++"}], ",", 
           RowBox[{
            RowBox[{"n", "=", 
             RowBox[{"d", "[", 
              RowBox[{"[", "k", "]"}], "]"}]}], ";", "  ", 
            "\[IndentingNewLine]", 
            RowBox[{"c", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"c", ",", 
               RowBox[{"StringTake", "[", 
                RowBox[{"n", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"n", ",", "\"\<]\>\""}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "-", "1"}]}], "}"}]}], 
                "]"}]}], "]"}]}]}]}], "]"}], ";", " ", "\[IndentingNewLine]", 
         RowBox[{"ToExpression", "[", "c", "]"}]}]}], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`FunctionQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FunctionQ", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"StringQ", "[", "x", "]"}], ",", 
    RowBox[{
     RowBox[{"PureFuncQ", "[", 
      RowBox[{"ToExpression", "[", "x", "]"}], "]"}], "||", 
     RowBox[{"QFunction1", "[", "x", "]"}]}], ",", 
    RowBox[{
     RowBox[{"PureFuncQ", "[", "x", "]"}], "||", 
     RowBox[{"QFunction", "[", "x", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`QFunction1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"  ", 
  RowBox[{
   RowBox[{"QFunction1", "[", 
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", 
       RowBox[{"c", "=", 
        RowBox[{"ToString", "[", 
         RowBox[{"Unique", "[", "\"\<agn\>\"", "]"}], "]"}]}], ",", "b", ",", 
       "p", ",", 
       RowBox[{"d", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"h", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"k", "=", "1"}]}], "}"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"UnevaluatedQ", "[", 
        RowBox[{"Definition2", ",", "x"}], "]"}], ",", "False", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SysFuncQ", "[", "x", "]"}], ",", "False", ",", 
         RowBox[{
          RowBox[{"a", "=", 
           RowBox[{
            RowBox[{"Definition2", "[", "x", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Options", "[", "x", "]"}], "\[Equal]", 
                RowBox[{"{", "}"}]}], ",", 
               RowBox[{"1", ";;", 
                RowBox[{"-", "2"}]}], ",", 
               RowBox[{"1", ";;", 
                RowBox[{"-", "3"}]}]}], "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{"k", ",", 
            RowBox[{"k", "\[LessEqual]", 
             RowBox[{"Length", "[", "a", "]"}]}], ",", 
            RowBox[{"k", "++"}], ",", 
            RowBox[{
             RowBox[{"p", "=", 
              RowBox[{"c", "<>", 
               RowBox[{"ToString", "[", "k", "]"}]}]}], ";", " ", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"h", ",", 
               RowBox[{"p", "<>", "x"}]}], "]"}], ";", " ", 
             RowBox[{"ToExpression", "[", 
              RowBox[{"p", "<>", 
               RowBox[{"a", "[", 
                RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ";", " ", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"d", ",", 
               RowBox[{"QFunction", "[", 
                RowBox[{"Symbol", "[", 
                 RowBox[{"p", "<>", "x"}], "]"}], "]"}]}], "]"}]}]}], "]"}], 
          ";", " ", 
          RowBox[{"Map", "[", 
           RowBox[{"Remove", ",", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"c", ",", "h"}], "}"}], "]"}]}], "]"}], ";", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"DeleteDuplicates", "[", "d", "]"}], "\[Equal]", 
             RowBox[{"{", "True", "}"}]}], ",", "True", ",", "False"}], 
           "]"}]}]}], "]"}]}], "]"}]}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`CurrentNb`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CurrentNb", "[", "]"}], ":=", 
  RowBox[{"StringTake", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"StringCases", "[", 
      RowBox[{
       RowBox[{"ToString", "[", 
        RowBox[{"NotebookSelection", "[", "]"}], "]"}], ",", 
       RowBox[{"\"\<<<\>\"", "~~", "__", "~~", "\"\<>>\>\""}]}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", 
      RowBox[{"-", "3"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`QFunction`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"QFunction", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{
         RowBox[{"Definition2", "[", "x", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"ToString3", "[", 
        RowBox[{"HeadPF", "[", "x", "]"}], "]"}]}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"SingleDefQ", "[", "x", "]"}]}], ",", "False", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"SuffPref", "[", 
          RowBox[{
           RowBox[{"ToString1", "[", "a", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<CompiledFunction[\>\"", ",", "\"\<Function[\>\""}], 
            "}"}], ",", "1"}], "]"}], "||", 
         RowBox[{"SuffPref", "[", 
          RowBox[{
           RowBox[{"ToString1", "[", "a", "]"}], ",", "\"\< & \>\"", ",", 
           "2"}], "]"}]}], ",", "True", ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"a", ",", "x"}], "]"}], ",", "False", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"SuffPref", "[", 
             RowBox[{"b", ",", "\"\<HeadPF[\>\"", ",", "1"}], "]"}], ",", 
            "False", ",", 
            RowBox[{
             RowBox[{"b", "=", 
              RowBox[{"Map3", "[", 
               RowBox[{"StringJoin", ",", "b", ",", 
                RowBox[{"{", 
                 RowBox[{"\"\< := \>\"", ",", "\"\< = \>\""}], "}"}]}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"SuffPref", "[", 
                    RowBox[{
                    RowBox[{"StringReplace", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{"b", "\[Rule]", "\"\<\>\""}]}], "]"}], ",", 
                    "\"\<Module[\>\"", ",", "1"}], "]"}], ",", 
                   RowBox[{"SuffPref", "[", 
                    RowBox[{
                    RowBox[{"StringReplace", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{"b", "\[Rule]", "\"\<\>\""}]}], "]"}], ",", 
                    "\"\<Block[\>\"", ",", "1"}], "]"}]}], "}"}], ",", 
                 "True"}], "]"}], ",", "False", ",", "True"}], "]"}]}]}], 
           "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`CompActPF`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CompActPF", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"c", "=", "\"\<\>\""}], ",", "d", ",", 
      RowBox[{"a", "=", 
       RowBox[{"ToDefOptPF", "[", "x", "]"}]}], ",", 
      RowBox[{"f", "=", 
       RowBox[{
        RowBox[{"ToString", "[", "x", "]"}], "<>", "\"\<.txt\>\""}]}], ",", 
      RowBox[{"h", "=", "\"\<\>\""}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Put", "[", 
      RowBox[{
       RowBox[{"FullDefinition", "[", "x", "]"}], ",", "f"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Quiet", "[", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"SameQ", "[", 
          RowBox[{"h", ",", "EndOfFile"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"h", "=", 
          RowBox[{"Read", "[", 
           RowBox[{"f", ",", "String"}], "]"}]}], ";", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"h", "\[NotEqual]", "\"\< \>\""}], ",", 
           RowBox[{
            RowBox[{"c", "=", 
             RowBox[{"c", "<>", "h"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"HeadingQ", "[", 
               RowBox[{"d", "=", 
                RowBox[{"StringTake", "[", 
                 RowBox[{"c", ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"c", ",", "\"\< := \>\""}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
                 "]"}]}], "]"}], ",", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"b", ",", "d"}], "]"}], ";", 
               RowBox[{"c", "=", "\"\<\>\""}]}]}], "]"}], ";", 
            RowBox[{"Continue", "[", "]"}]}]}], "]"}]}]}], "]"}], "]"}], ";", 
     " ", 
     RowBox[{"DeleteFile", "[", 
      RowBox[{"Close", "[", "f", "]"}], "]"}], ";", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"HeadName", ",", "b"}], "]"}], ",", "b"}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`CompActPF1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CompActPF1", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Args", "[", 
        RowBox[{"x", ",", "90"}], "]"}]}], ",", 
      RowBox[{"a", "=", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"Locals1", "[", "x", "]"}]}], ",", "p"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"b", ",", "c"}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"NestListQ", "[", "b", "]"}], ",", 
          RowBox[{"b", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "b"}], "]"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"NestListQ", "[", "c", "]"}], ",", 
          RowBox[{"c", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "c"}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"a", "=", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"ExtrVarsOfStr", "[", 
         RowBox[{"a", ",", "2"}], "]"}], ",", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ToString", "[", "x", "]"}], ",", 
               RowBox[{"Join", "[", 
                RowBox[{"b", ",", "c", ",", 
                 RowBox[{"{", 
                  RowBox[{"\"\<Block\>\"", ",", "\"\<Module\>\""}], "}"}]}], 
                "]"}]}], "}"}], "]"}], ",", "#"}], "]"}]}], "&"}]}], "]"}]}], 
     ";", " ", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{
        RowBox[{"p", "=", 
         RowBox[{"a", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"d", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"BlockFuncModQ", "[", "p", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"p", ",", 
              RowBox[{"HeadPF", "[", "p", "]"}]}], "}"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"SystemQ", "[", "p", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"p", ",", "\"\<System\>\""}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"p", ",", "\"\<Undefined\>\""}], "}"}]}], "]"}]}], 
           "]"}]}], "]"}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"a", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"Flatten", ",", 
        RowBox[{"Gather", "[", 
         RowBox[{"d", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"!", 
             RowBox[{"StringFreeQ", "[", 
              RowBox[{
               RowBox[{"#1", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", "\"\<_\>\""}], "]"}]}], "&&", 
            RowBox[{"!", 
             RowBox[{"StringFreeQ", "[", 
              RowBox[{
               RowBox[{"#2", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", "\"\<_\>\""}], "]"}]}]}],
            "&"}]}], "]"}]}], "]"}]}], ";", " ", 
     RowBox[{"b", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"Flatten", ",", 
        RowBox[{"Gather", "[", 
         RowBox[{"a", ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "\"\<System\>\""}], 
            "&&", 
            RowBox[{
             RowBox[{"#2", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
             "\"\<System\>\""}]}], "&"}]}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"d", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"Flatten", ",", 
        RowBox[{"Gather", "[", 
         RowBox[{"b", ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
             "\"\<Undefined\>\""}], "&&", 
            RowBox[{
             RowBox[{"#2", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
             "\"\<Undefined\>\""}]}], "&"}]}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}], "\[Equal]", "\"\<System\>\""}],
           ",", 
          RowBox[{"Prepend", "[", 
           RowBox[{
            RowBox[{"MinusList", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", "\"\<System\>\"", "}"}]}], "]"}], ",", 
            "\"\<System\>\""}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}], "\[Equal]", 
             "\"\<Undefined\>\""}], ",", 
            RowBox[{"Prepend", "[", 
             RowBox[{
              RowBox[{"MinusList", "[", 
               RowBox[{"#", ",", 
                RowBox[{"{", "\"\<Undefined\>\"", "}"}]}], "]"}], ",", 
              "\"\<Undefined\>\""}], "]"}], ",", "#"}], "]"}]}], "]"}], "&"}],
        ",", "d"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`NamesProc`\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"NamesProc", "[", "]"}], ":=", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Sort", "[", 
     RowBox[{"Names", "[", "\"\<`*\>\"", "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Quiet", "[", 
       RowBox[{"BlockFuncModQ", "[", "#", "]"}], "]"}], "&&", 
      RowBox[{
       RowBox[{"ToString", "[", 
        RowBox[{"Definition", "[", "#", "]"}], "]"}], "\[NotEqual]", 
       "\"\<Null\>\""}], "&&", 
      RowBox[{
       RowBox[{"ToString", "[", 
        RowBox[{"Definition", "[", "#", "]"}], "]"}], "\[NotEqual]", 
       RowBox[{"\"\<Attributes[\>\"", "<>", 
        RowBox[{"ToString", "[", "#", "]"}], "<>", 
        "\"\<] = {Temporary}\>\""}]}], "&&", 
      RowBox[{"!", 
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"ToString", "[", "#", "]"}], "<>", 
            "\"\< = {Temporary}\>\""}], ",", 
           RowBox[{
            RowBox[{"ToString", "[", "#", "]"}], "<>", 
            "\"\< = {Temporary}\>\""}]}], "}"}], ",", 
         RowBox[{"ToString", "[", 
          RowBox[{"Definition", "[", "#", "]"}], "]"}]}], "]"}]}]}], "&"}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DeleteOptsAttr`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DeleteOptsAttr", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b", ",", 
      RowBox[{"a", "=", 
       RowBox[{"Definition2", "[", "x", "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"\"\<Options[\>\"", "<>", 
        RowBox[{"ToString", "[", "x", "]"}], "<>", "\"\<]\>\""}]}]}], "}"}], 
    ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"a", "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}]}], ";", 
     RowBox[{"ClearAllAttributes", "[", "x", "]"}], ";", 
     RowBox[{"ClearAll", "[", "x", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"Select", "[", 
       RowBox[{"a", ",", 
        RowBox[{
         RowBox[{"StringFreeQ", "[", 
          RowBox[{
           RowBox[{"ToString", "[", "#", "]"}], ",", "c"}], "]"}], "&"}]}], 
       "]"}], "]"}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "y", "}"}], "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"b", "\[NotEqual]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"SetAttributes", "[", 
          RowBox[{"x", ",", "b"}], "]"}]}], "]"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ScanLikeProcs`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ScanLikeProcs", "[", 
   RowBox[{"x_:", " ", 
    RowBox[{"{", "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", "d", ",", "h", ",", 
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"a", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Names", "[", "\"\<`*\>\"", "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"StringFreeQ", "[", 
            RowBox[{"#", ",", "\"\<$\>\""}], "]"}], "&&", 
           RowBox[{"Quiet", "[", 
            RowBox[{"Check", "[", 
             RowBox[{
              RowBox[{"BlockFuncModQ", "[", "#", "]"}], ",", "False"}], "]"}],
             "]"}]}], "&"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Off", "[", 
      RowBox[{"Definition", "::", "ssle"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"a", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"{", "}"}], "]"}], ",", 
       RowBox[{"For", "[", 
        RowBox[{"k", ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "a", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{
          RowBox[{"d", "=", 
           RowBox[{
            RowBox[{"Definition2", "[", 
             RowBox[{"a", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", 
              RowBox[{"-", "2"}]}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "d", "]"}], ">", "1"}], ",", 
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{"b", ",", 
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"StringTake", "[", 
                   RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"#", ",", "\"\< := \>\""}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
                   "]"}], "&"}], ",", "d"}], "]"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"c", ",", 
               RowBox[{"a", "[", 
                RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}]}], "]"}]}]}], 
        "]"}]}], "]"}], ";", " ", 
     RowBox[{"On", "[", 
      RowBox[{"Definition", "::", "ssle"}], "]"}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"HowAct", "[", "x", "]"}]}], ",", 
       RowBox[{"x", "=", "b"}], ",", "Null"}], "]"}], ";", " ", "c"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SubsStr`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SubsStr", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"StringQ", "[", "y", "]"}]}], ",", 
    RowBox[{"h_", "/;", 
     RowBox[{"ListQ", "[", "h", "]"}]}], ",", 
    RowBox[{"t_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", "t"}], "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"ToString", ",", "h"}], "]"}]}], ",", "b"}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"StringFreeQ", "[", 
        RowBox[{"x", ",", "y"}], "]"}], ",", 
       RowBox[{"Return", "[", "x", "]"}], ",", 
       RowBox[{"b", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"t", "\[Equal]", "1"}], ",", 
          RowBox[{"Map3", "[", 
           RowBox[{"StringJoin", ",", "y", ",", "a"}], "]"}], ",", 
          RowBox[{"Mapp", "[", 
           RowBox[{"StringJoin", ",", "a", ",", "y"}], "]"}]}], "]"}]}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"StringFreeQ", "[", 
        RowBox[{"x", ",", "b"}], "]"}], ",", 
       RowBox[{"Return", "[", "x", "]"}], ",", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"x", ",", 
         RowBox[{"Map9", "[", 
          RowBox[{"Rule", ",", "b", ",", "h"}], "]"}]}], "]"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SubsDel`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SubsDel", "[", 
   RowBox[{
    RowBox[{"S_", "/;", 
     RowBox[{"StringQ", "[", "S", "]"}]}], ",", 
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{"ListQ", "[", "y", "]"}], "&&", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"StringQ", ",", "y"}], "]"}], "]"}], "\[Equal]", 
       RowBox[{"{", "True", "}"}]}], "&&", 
      RowBox[{
       RowBox[{"Plus", "[", 
        RowBox[{"Sequences", "[", 
         RowBox[{"Map", "[", 
          RowBox[{"StringLength", ",", "y"}], "]"}], "]"}], "]"}], "\[Equal]", 
       RowBox[{"Length", "[", "y", "]"}]}]}]}], ",", 
    RowBox[{"p_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "p"}], "]"}]}]}], "]"}], 
  ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b", ",", 
      RowBox[{"c", "=", "x"}], ",", "d", ",", 
      RowBox[{"h", "=", 
       RowBox[{"StringLength", "[", "S", "]"}]}], ",", "k"}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"StringFreeQ", "[", 
        RowBox[{"S", ",", "x"}], "]"}], ",", 
       RowBox[{"Return", "[", "S", "]"}], ",", 
       RowBox[{"b", "=", 
        RowBox[{
         RowBox[{"StringPosition", "[", 
          RowBox[{"S", ",", "x"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"p", "\[Equal]", "1"}], ",", 
          RowBox[{
           RowBox[{"b", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ",", 
          RowBox[{"b", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "\[Dash]", "1"}], "]"}]}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"p", "\[Equal]", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", "h"}], ",", 
         RowBox[{"k", "\[GreaterEqual]", "1"}]}], "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"p", "\[Equal]", "1"}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{"k", "--"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"d", "=", 
         RowBox[{"StringTake", "[", 
          RowBox[{"S", ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "k"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"y", ",", "d"}], "]"}], "||", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"p", "\[Equal]", "1"}], ",", 
             RowBox[{"k", "\[Equal]", "1"}], ",", 
             RowBox[{"k", "\[Equal]", "h"}]}], "]"}]}], ",", 
          RowBox[{"Break", "[", "]"}], ",", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"p", "\[Equal]", "1"}], ",", 
             RowBox[{"c", "=", 
              RowBox[{"c", "<>", "d"}]}], ",", 
             RowBox[{"c", "=", 
              RowBox[{"d", "<>", "c"}]}]}], "]"}], ";", " ", 
           RowBox[{"Continue", "[", "]"}]}]}], "]"}]}]}], "]"}], ";", " ", 
     RowBox[{"StringReplace", "[", 
      RowBox[{"S", ",", 
       RowBox[{"c", "->", "\"\<\>\""}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ExpLocals`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExpLocals", "[", 
   RowBox[{
    RowBox[{"P_", "/;", 
     RowBox[{
      RowBox[{"ModuleQ", "[", "P", "]"}], "||", 
      RowBox[{"BlockQ", "[", "P", "]"}]}]}], ",", 
    RowBox[{"L_", "/;", 
     RowBox[{
      RowBox[{"ListQ", "[", "L", "]"}], "&&", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"StringQ", ",", "L"}], "]"}], "]"}], "\[Equal]", 
       RowBox[{"{", "True", "}"}]}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"PureDefinition", "[", "P", "]"}], "}"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Locals1", "[", "P", "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"Args", "[", 
        RowBox[{"P", ",", "90"}], "]"}]}], ",", "d", ",", "p", ",", "p1", ",",
       "h", ",", 
      RowBox[{"Op", "=", 
       RowBox[{"Options", "[", "P", "]"}]}], ",", 
      RowBox[{"Atr", "=", 
       RowBox[{"Attributes", "[", "P", "]"}]}], ",", "t"}], "}"}], ",", 
    RowBox[{
     RowBox[{"Quiet", "[", 
      RowBox[{
       RowBox[{"d", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"StringFreeQ", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{"\"\< = \>\"", ",", "\"\<=\>\""}], "}"}]}], "]"}], 
             ",", "#", ",", 
             RowBox[{
              RowBox[{"StringSplit", "[", 
               RowBox[{"#", ",", 
                RowBox[{"{", 
                 RowBox[{"\"\< = \>\"", ",", "\"\<=\>\""}], "}"}]}], "]"}], 
              "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}], ",", "L"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"p", "=", 
        RowBox[{"Locals", "[", "P", "]"}]}], ";", 
       RowBox[{"h", "=", 
        RowBox[{"MinusList1", "[", 
         RowBox[{"d", ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"b", ",", "c"}], "}"}], "]"}]}], "]"}]}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"h", "\[Equal]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{"{", "}"}], "]"}]}], "]"}], ";", " ", 
       RowBox[{"ClearAll", "[", "t", "]"}], ";", 
       RowBox[{"BlockModQ", "[", 
        RowBox[{"P", ",", "t"}], "]"}], ";", " ", 
       RowBox[{"h", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"d", ",", "#"}], "]"}], "&"}], ",", "h"}], "]"}], 
         "]"}]}], ";", " ", 
       RowBox[{"d", "=", 
        RowBox[{"Join", "[", 
         RowBox[{"p", ",", 
          RowBox[{"c", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"L", "[", 
               RowBox[{"[", "#", "]"}], "]"}], "&"}], ",", "h"}], "]"}]}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ToExpression", "[", 
        RowBox[{"\"\<ClearAllAttributes[\>\"", "<>", 
         RowBox[{"ToString", "[", "P", "]"}], "<>", "\"\<]\>\""}], "]"}], ";", 
       RowBox[{"ClearAll", "[", "P", "]"}], ";", " ", 
       RowBox[{"ToExpression", "[", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"a", ",", 
          RowBox[{
           RowBox[{"t", "<>", "\"\<[\>\"", "<>", 
            RowBox[{"ToString", "[", "p", "]"}]}], "\[Rule]", 
           RowBox[{"t", "<>", "\"\<[\>\"", "<>", 
            RowBox[{"ToString", "[", "d", "]"}]}]}], ",", "1"}], "]"}], 
        "]"}]}], "]"}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Op", "\[NotEqual]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"SetOptions", "[", 
        RowBox[{"P", ",", "Op"}], "]"}]}], "]"}], ";", 
     RowBox[{"SetAttributes", "[", 
      RowBox[{"P", ",", "Atr"}], "]"}], ";", "c"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`MinusList`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MinusList", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"ListQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"ListQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Select", "[", 
   RowBox[{"x", ",", 
    RowBox[{
     RowBox[{"!", 
      RowBox[{"MemberQ", "[", 
       RowBox[{"y", ",", "#"}], "]"}]}], "&"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`MinusList1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MinusList1", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"ListQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"ListQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "x"}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "y", "]"}]}], ",", 
       RowBox[{
        RowBox[{"a", "=", 
         RowBox[{"ReplacePart", "[", 
          RowBox[{"a", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Position", "[", 
               RowBox[{"a", ",", 
                RowBox[{"y", "[", 
                 RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", "Null"}]}], "]"}]}], 
        ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", 
     RowBox[{"Select", "[", 
      RowBox[{"a", ",", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"SameQ", "[", 
          RowBox[{"#", ",", "Null"}], "]"}]}], "&"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`PosSubList`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PosSubList", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"ListQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"ListQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ToString1", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"ToString1", "[", "y", "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"FromCharacterCode", "[", "16", "]"}]}], ",", "d"}], "}"}], 
    ",", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{"StringTake", "[", 
       RowBox[{"b", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"StringFreeQ", "[", 
         RowBox[{"a", ",", "d"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"b", "=", 
         RowBox[{"StringReplace", "[", 
          RowBox[{"a", ",", 
           RowBox[{"d", "\[Rule]", 
            RowBox[{"c", "<>", "\"\<,\>\"", "<>", 
             RowBox[{"StringTake", "[", 
              RowBox[{
               RowBox[{"ToString1", "[", 
                RowBox[{"y", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ";;", 
                   RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"2", ",", 
                 RowBox[{"-", "2"}]}], "}"}]}], "]"}]}]}]}], "]"}]}], ";", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", 
             RowBox[{"#", "+", 
              RowBox[{"Length", "[", "y", "]"}], "-", "1"}]}], "}"}], "&"}], 
          ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"Position", "[", 
            RowBox[{
             RowBox[{"ToExpression", "[", "b", "]"}], ",", 
             RowBox[{"ToExpression", "[", "c", "]"}]}], "]"}], "]"}]}], 
         "]"}]}], ",", 
       RowBox[{"{", "}"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Df`\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"Df", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "a", "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"HowAct", "[", "y", "]"}]}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"x", ",", "y"}], "]"}], ",", 
      RowBox[{"Simplify", "[", 
       RowBox[{"Subs", "[", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"Subs", "[", 
            RowBox[{"x", ",", "y", ",", "a"}], "]"}], ",", "a"}], "]"}], ",", 
         "a", ",", "y"}], "]"}], "]"}]}], "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Df1`\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"Df1", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", 
      RowBox[{"c", "=", "\"\<$$Art27$Kr20$$\>\""}]}], "}"}], ",", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"HowAct", "[", "y", "]"}]}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"x", ",", "y"}], "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "b"}], "}"}], "=", 
        RowBox[{"Map", "[", 
         RowBox[{"ToString", ",", 
          RowBox[{"Map", "[", 
           RowBox[{"InputForm", ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], "]"}]}], ";", " ", 
       RowBox[{"Simplify", "[", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"StringReplace", "[", 
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"InputForm", "[", 
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"ToExpression", "[", 
                RowBox[{"StringReplace", "[", 
                 RowBox[{"a", ",", 
                  RowBox[{"b", "\[Rule]", "c"}]}], "]"}], "]"}], ",", 
               RowBox[{"ToExpression", "[", "c", "]"}]}], "]"}], "]"}], "]"}],
            ",", 
           RowBox[{"c", "\[Rule]", "b"}]}], "]"}], "]"}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`D1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D1", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
    RowBox[{
     RowBox[{"c", "=", 
      RowBox[{"Replace2", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"b", "=", 
            RowBox[{"Replace2", "[", 
             RowBox[{"x", ",", "y", ",", "a"}], "]"}]}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"b", "===", "$Failed"}], ",", 
             RowBox[{"Return", "[", "$Failed", "]"}], ",", "b"}], "]"}]}], 
          ",", "a"}], "]"}], ",", "a", ",", "y"}], "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"b", "===", "$Failed"}], ",", "$Failed", ",", "c"}], "]"}]}]}],
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Diff`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Diff", "[", 
   RowBox[{"x_", ",", "y__"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"{", "y", "}"}], "]"}]}], ",", 
      RowBox[{"t", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"h", "=", "x"}], ",", 
      RowBox[{"n", "=", "g"}], ",", 
      RowBox[{"a", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"ToString", ",", 
         RowBox[{"Map", "[", 
          RowBox[{"InputForm", ",", 
           RowBox[{"{", "y", "}"}]}], "]"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Clear", "[", "g", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", "b"}], ",", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"c", ",", 
          RowBox[{"Unique", "[", "g", "]"}]}], "]"}], ";", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"d", ",", 
          RowBox[{"ToString", "[", 
           RowBox[{"c", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "]"}]}], "]"}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"t", ",", 
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "\[Rule]", 
           RowBox[{"d", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}]}], "]"}], ";", " ", 
        RowBox[{"h", "=", 
         RowBox[{"ToExpression", "[", 
          RowBox[{"StringReplace", "[", 
           RowBox[{
            RowBox[{"ToString", "[", 
             RowBox[{"h", "//", "InputForm"}], "]"}], ",", 
            RowBox[{"t", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "]"}]}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"h", "=", 
         RowBox[{"D", "[", 
          RowBox[{"h", ",", 
           RowBox[{"c", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], ";", " ", 
        RowBox[{"h", "=", 
         RowBox[{"ReplaceAll", "[", 
          RowBox[{"h", ",", 
           RowBox[{"Map", "[", 
            RowBox[{"ToExpression", ",", 
             RowBox[{
              RowBox[{"Part", "[", 
               RowBox[{
                RowBox[{"t", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], ",", "2"}], "]"}], "\[Rule]", 
              RowBox[{"Part", "[", 
               RowBox[{
                RowBox[{"t", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], ",", "1"}], "]"}]}]}], 
            "]"}]}], "]"}]}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", 
     RowBox[{"g", "=", "n"}], ";", 
     RowBox[{"Map", "[", 
      RowBox[{"Clear", ",", "c"}], "]"}], ";", "h"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`InsertN`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InsertN", "[", 
   RowBox[{
    RowBox[{"S_", "/;", 
     RowBox[{"StringQ", "[", "S", "]"}]}], ",", 
    RowBox[{"L_", "/;", 
     RowBox[{"ListQ", "[", "L", "]"}]}], ",", 
    RowBox[{"n_", "/;", 
     RowBox[{
      RowBox[{"ListQ", "[", "n", "]"}], "&&", 
      RowBox[{
       RowBox[{"Length", "[", "n", "]"}], "\[Equal]", 
       RowBox[{"Length", "[", 
        RowBox[{"Select", "[", 
         RowBox[{"n", ",", 
          RowBox[{
           RowBox[{"IntegerQ", "[", "#", "]"}], "&"}]}], "]"}], "]"}]}]}]}]}],
    "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"ToString", ",", "L"}], "]"}]}], ",", "b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"FromCharacterCode", "[", "2", "]"}]}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"Characters", "[", "S", "]"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", "p", ",", 
      RowBox[{"m", "=", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Sort", "[", "n", "]"}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"c", "<>", 
          RowBox[{"ToString", "[", "#", "]"}]}], "&"}], ",", 
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", 
          RowBox[{"Length", "[", "d", "]"}]}], "]"}]}], "]"}]}], ";", " ", 
     RowBox[{"b", "=", 
      RowBox[{"Riffle", "[", 
       RowBox[{"d", ",", "b"}], "]"}]}], ";", 
     RowBox[{"p", "=", 
      RowBox[{"Min", "[", 
       RowBox[{
        RowBox[{"Length", "[", "a", "]"}], ",", 
        RowBox[{"Length", "[", "m", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", "p"}], ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"m", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "<", "1"}], ",", 
          RowBox[{"PrependTo", "[", 
           RowBox[{"b", ",", 
            RowBox[{"a", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"m", "[", 
              RowBox[{"[", "k", "]"}], "]"}], ">", 
             RowBox[{"Length", "[", "d", "]"}]}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"b", ",", 
              RowBox[{"a", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"b", "=", 
             RowBox[{"ReplaceAll", "[", 
              RowBox[{"b", ",", 
               RowBox[{
                RowBox[{"c", "<>", 
                 RowBox[{"ToString", "[", 
                  RowBox[{"m", "[", 
                   RowBox[{"[", "k", "]"}], "]"}], "]"}]}], "\[Rule]", 
                RowBox[{"a", "[", 
                 RowBox[{"[", "k", "]"}], "]"}]}]}], "]"}]}]}], "]"}]}], 
         "]"}], ";", " ", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", " ", 
     RowBox[{"StringJoin", "[", 
      RowBox[{"Select", "[", 
       RowBox[{"b", ",", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"SuffPref", "[", 
           RowBox[{"#", ",", "c", ",", "1"}], "]"}]}], "&"}]}], "]"}], 
      "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`IsFile`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IsFile", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"FileExistsQ", "[", "x", "]"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"DirectoryQ", "[", "x", "]"}]}], ",", "True", ",", "False"}], 
     "]"}], ",", "False"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StringSplit1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StringSplit1", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"StringQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"StringSplit", "[", 
        RowBox[{"x", ",", "y"}], "]"}]}], ",", "b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", "d", ",", "p", ",", 
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"j", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{"Length", "[", "a", "]"}]}], ";", 
     RowBox[{"Label", "[", "G", "]"}], ";", " ", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "j"}], ",", 
       RowBox[{"k", "\[LessEqual]", "d"}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"p", "=", 
         RowBox[{"a", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"SameQ", "[", 
            RowBox[{
             RowBox[{"Quiet", "[", 
              RowBox[{"ToExpression", "[", "p", "]"}], "]"}], ",", 
             "$Failed"}], "]"}]}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"c", ",", "p"}], "]"}], ",", 
          RowBox[{
           RowBox[{"b", "=", 
            RowBox[{"a", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], ";", " ", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"j", "=", "k"}], ",", 
             RowBox[{"j", "\[LessEqual]", 
              RowBox[{"d", "-", "1"}]}], ",", 
             RowBox[{"j", "++"}], ",", 
             RowBox[{
              RowBox[{"b", "=", 
               RowBox[{"b", "<>", "y", "<>", 
                RowBox[{"a", "[", 
                 RowBox[{"[", 
                  RowBox[{"j", "+", "1"}], "]"}], "]"}]}]}], ";", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"!", 
                 RowBox[{"SameQ", "[", 
                  RowBox[{
                   RowBox[{"Quiet", "[", 
                    RowBox[{"ToExpression", "[", "b", "]"}], "]"}], ",", 
                   "$Failed"}], "]"}]}], ",", 
                RowBox[{
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"c", ",", "b"}], "]"}], ";", " ", 
                 RowBox[{"Goto", "[", "G", "]"}]}], ",", "Null"}], "]"}]}]}], 
            "]"}]}]}], "]"}]}]}], "]"}], ";", " ", 
     RowBox[{"Map", "[", 
      RowBox[{"StringTrim", ",", "c"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StringSplit2`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StringSplit2", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"StringQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", "=", 
      RowBox[{"FromCharacterCode", "[", "17", "]"}]}], "}"}], ",", 
    RowBox[{"StringSplit", "[", 
     RowBox[{
      RowBox[{"StringReplace", "[", 
       RowBox[{"x", ",", 
        RowBox[{"y", "\[Rule]", 
         RowBox[{"a", "<>", "y"}]}]}], "]"}], ",", "a"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DirFull`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DirFull", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"DirQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "\"\<$Art27Kr20$\>\""}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"StandPath", "[", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"x", ",", 
          RowBox[{"\"\</\>\"", "\[Rule]", "\"\<\\\\\>\""}]}], "]"}], "]"}]}], 
      ",", "c", ",", "d"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"DirEmptyQ", "[", "x", "]"}], ",", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{
       RowBox[{"Run", "[", 
        RowBox[{
        "\"\<Dir /S/B/A \>\"", ",", "b", ",", "\"\< > \>\"", ",", "a"}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"c", "=", 
        RowBox[{"Map", "[", 
         RowBox[{"ToString", ",", 
          RowBox[{"ReadList", "[", 
           RowBox[{"a", ",", "String"}], "]"}]}], "]"}]}], ";", " ", 
       RowBox[{"DeleteFile", "[", "a", "]"}], ";", " ", 
       RowBox[{"Prepend", "[", 
        RowBox[{"c", ",", "b"}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DelDirFile`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DelDirFile", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{
       RowBox[{"StringQ", "[", "x", "]"}], "&&", 
       RowBox[{"DirQ", "[", "x", "]"}]}], "||", 
      RowBox[{"FileExistsQ", "[", "x", "]"}]}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"c", ",", "f", ",", 
      RowBox[{"a", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"b", "=", "\"\<\>\""}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"DirQ", "[", "x", "]"}], "&&", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"StringLength", "[", "x", "]"}], "\[Equal]", "3"}], "&&", 
          RowBox[{
           RowBox[{"StringTake", "[", 
            RowBox[{"x", ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "2"}], "}"}]}], "]"}], "\[Equal]", 
           "\"\<:\>\""}]}], ",", "False", ",", "True"}], "]"}]}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "y", "}"}], "\[Equal]", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"Quiet", "[", 
         RowBox[{"DeleteDirectory", "[", 
          RowBox[{"x", ",", 
           RowBox[{"DeleteContents", "\[Rule]", "True"}]}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"a", "=", 
          RowBox[{"{", "}"}]}], ";", 
         RowBox[{"b", "=", "\"\<\>\""}], ";", " ", 
         RowBox[{"c", "=", 
          RowBox[{"StandPath", "[", "x", "]"}]}], ";", " ", 
         RowBox[{"f", "=", "\"\<$Art2618Kr$\>\""}], ";", " ", 
         RowBox[{"Run", "[", 
          RowBox[{
          "\"\<Dir \>\"", "<>", "c", "<>", "\"\< /A/B/OG/S > \>\"", "<>", 
           "f"}], "]"}], ";", " ", 
         RowBox[{"Attribs", "[", 
          RowBox[{"c", ",", "90"}], "]"}], ";", " ", 
         RowBox[{"For", "[", 
          RowBox[{"k", ",", 
           RowBox[{"k", "<", "Infinity"}], ",", 
           RowBox[{"k", "++"}], ",", 
           RowBox[{
            RowBox[{"b", "=", 
             RowBox[{"Read", "[", 
              RowBox[{"f", ",", "String"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"SameQ", "[", 
               RowBox[{"b", ",", "EndOfFile"}], "]"}], ",", 
              RowBox[{
               RowBox[{"DeleteFile", "[", 
                RowBox[{"Close", "[", "f", "]"}], "]"}], ";", 
               RowBox[{"Break", "[", "]"}]}], ",", 
              RowBox[{"Attribs", "[", 
               RowBox[{"b", ",", " ", "90"}], "]"}]}], "]"}]}]}], "]"}], ";", 
         RowBox[{"DeleteDirectory", "[", 
          RowBox[{"x", ",", 
           RowBox[{"DeleteContents", "->", "True"}]}], "]"}]}]}], "]"}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"FileExistsQ", "[", "x", "]"}], ",", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", "y", "}"}], "\[NotEqual]", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"Attribs", "[", 
            RowBox[{"x", ",", "90"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Quiet", "[", 
          RowBox[{"DeleteFile", "[", "x", "]"}], "]"}]}], ",", "$Failed"}], 
       "]"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DelDirFile1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DelDirFile1", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{
      RowBox[{"StringQ", "[", "x", "]"}], "&&", 
      RowBox[{"FileExistsQ", "[", "x", "]"}]}], "||", 
     RowBox[{
      RowBox[{"DirQ", "[", "x", "]"}], "&&", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"StringLength", "[", "x", "]"}], "\[Equal]", "3"}], "&&", 
         RowBox[{
          RowBox[{"StringTake", "[", 
           RowBox[{"x", ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", "2"}], "}"}]}], "]"}], "\[Equal]", 
          "\"\<:\>\""}]}], ",", "False", ",", "True"}], "]"}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"b", "=", "\"\<\>\""}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"StandPath", "[", "x", "]"}]}], ",", "d", ",", 
      RowBox[{"f", "=", "\"\<$Art590Kr$\>\""}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"DirQ", "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"Run", "[", 
        RowBox[{
        "\"\<Dir \>\"", "<>", "c", "<>", "\"\< /A/B/OG/S > \>\"", "<>", "f"}],
         "]"}], ";", 
       RowBox[{"Attribs", "[", 
        RowBox[{"c", ",", "90"}], "]"}], ";", " ", 
       RowBox[{"For", "[", 
        RowBox[{"k", ",", 
         RowBox[{"k", "<", "Infinity"}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{
          RowBox[{"b", "=", 
           RowBox[{"Read", "[", 
            RowBox[{"f", ",", "String"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"SameQ", "[", 
             RowBox[{"b", ",", "EndOfFile"}], "]"}], ",", 
            RowBox[{
             RowBox[{"DeleteFile", "[", 
              RowBox[{"Close", "[", "f", "]"}], "]"}], ";", 
             RowBox[{"Break", "[", "]"}]}], ",", 
            RowBox[{
             RowBox[{"Attribs", "[", 
              RowBox[{"b", ",", "90"}], "]"}], ";", 
             RowBox[{"Close2", "[", "b", "]"}]}]}], "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"DeleteDirectory", "[", 
        RowBox[{"x", ",", 
         RowBox[{"DeleteContents", "->", "True"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"Close2", "[", "x", "]"}], ";", " ", 
       RowBox[{"Attribs", "[", 
        RowBox[{"x", ",", "90"}], "]"}], ";", 
       RowBox[{"DeleteFile", "[", "x", "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`WhatValue`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WhatValue", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"SystemQ", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<System\>\"", ",", "x"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"SameQ", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Definition2", "[", 
           RowBox[{"ToString", "[", "x", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"ToString", "[", "x", "]"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Local\>\"", ",", "x"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Undefined\>\"", ",", "x"}], "}"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ParVar`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ParVar", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"SymbolQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"ListQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", "}"}]}], ",", "b", ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "y", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"a", ",", 
         RowBox[{"Unique", "[", "x", "]"}]}], "]"}]}], "]"}], ";", 
     RowBox[{"b", "=", 
      RowBox[{"ToString", "[", "a", "]"}]}], ";", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"b", ",", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"b", "<>", "\"\<=\>\"", "<>", 
          RowBox[{"ToString1", "[", "y", "]"}]}], "]"}]}], "}"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`MaxParts`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MaxParts", "[", "x_", "]"}], ":=", 
  RowBox[{"Length", "[", 
   RowBox[{"Op", "[", "x", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ProcCalls`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ProcCalls", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"StringSplit", "[", 
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"InputForm", "[", 
             RowBox[{"Definition", "[", "x", "]"}], "]"}], "]"}], ",", 
           "\"\<\\n\>\""}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "\[NotEqual]", "\"\< \>\""}], "&&", 
           RowBox[{"#", "\[NotEqual]", "x"}], "&&", 
           RowBox[{"!", 
            RowBox[{"SuffPref", "[", 
             RowBox[{"#", ",", 
              RowBox[{"x", "<>", "\"\< := \>\""}], ",", "1"}], "]"}]}]}], 
          "&"}]}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Attributes", "[", "x", "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SuffPref", "[", 
         RowBox[{
          RowBox[{"a", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Attributes[\>\"", ",", 
          "1"}], "]"}], ",", 
        RowBox[{"a", "[", 
         RowBox[{"[", 
          RowBox[{"2", ";;", 
           RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "a"}], "]"}]}], ";", 
     RowBox[{"ClearAttributes", "[", 
      RowBox[{"x", ",", "b"}], "]"}], ";", 
     RowBox[{"Clear", "[", "x", "]"}], ";", 
     RowBox[{"Map", "[", 
      RowBox[{"ToExpression", ",", "a"}], "]"}], ";", 
     RowBox[{"SetAttributes", "[", 
      RowBox[{"x", ",", "b"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ProcCalls1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ProcCalls1", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"Attributes", "[", "x", "]"}]}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"ClearAttributes", "[", 
      RowBox[{"x", ",", "c"}], "]"}], ";", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TestDefBFM", "[", 
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"[", "k", "]"}], "]"}], ",", "x"}], "]"}], ",", " ", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"d", ",", 
           RowBox[{"a", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ",", "Null"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{"Length", "[", "a", "]"}]}], "}"}]}], "]"}], ";", " ", 
     RowBox[{"Clear", "[", "x", "]"}], ";", " ", 
     RowBox[{"ToExpression", "[", "d", "]"}], ";", " ", 
     RowBox[{"SetAttributes", "[", 
      RowBox[{"x", ",", "c"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`TestDefBFM`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TestDefBFM", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"StringQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"Unique", "[", "\"\<S\>\"", "]"}], "]"}]}], ",", "b", ",", 
      "c"}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"a", "<>", "y"}]}], ";", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"a", "<>", "x"}], "]"}], ";", 
     RowBox[{"c", "=", 
      RowBox[{"BlockFuncModQ", "[", "b", "]"}]}], ";", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"\"\<Remove[\>\"", "<>", "b", "<>", "\"\<]\>\""}], "]"}], ";", 
     "c"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`WhatObj`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WhatObj", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"SymbolQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"Context", "[", "x", "]"}], "]"}]}], ",", "t"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"a", "===", "\"\<System`\>\""}], ",", "\"\<System\>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"a", "===", "\"\<Global`\>\""}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"$Failed", ",", "\"\<Undefined\>\""}], "}"}], ",", 
            RowBox[{"PureDefinition", "[", "x", "]"}]}], "]"}], ",", 
          "\"\<Undefined\>\"", ",", "\"\<CS\>\""}], "]"}], ",", "a"}], 
       "]"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`HeadingQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HeadingQ", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", 
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"m", "=", "True"}], ",", 
      RowBox[{"n", "=", "True"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"StringTake", "[", 
          RowBox[{"x", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "]"}], "\[Equal]", "\"\<]\>\""}], 
        "&&", 
        RowBox[{
         RowBox[{"StringCount", "[", 
          RowBox[{"x", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<[\>\"", ",", "\"\<]\>\""}], "}"}]}], "]"}], 
         "\[Equal]", "2"}], "&&", 
        RowBox[{"!", 
         RowBox[{"StringFreeQ", "[", 
          RowBox[{
           RowBox[{"StringReplace", "[", 
            RowBox[{"x", ",", 
             RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}]}], "]"}], ",", 
           "\"\<[]\>\""}], "]"}]}]}], ",", 
       RowBox[{"Return", "[", "m", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"Quiet", "[", 
           RowBox[{"StringFreeQ", "[", 
            RowBox[{
             RowBox[{"RedSymbStr", "[", 
              RowBox[{"x", ",", "\"\<_\>\"", ",", "\"\<_\>\""}], "]"}], ",", 
             "\"\<[_]\>\""}], "]"}], "]"}]}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{"!", "m"}], "]"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Quiet", "[", 
      RowBox[{"Check", "[", 
       RowBox[{
        RowBox[{"ToExpression", "[", "x", "]"}], ",", 
        RowBox[{"Return", "[", "False", "]"}]}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Map3", "[", 
          RowBox[{"StringFreeQ", ",", "x", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<[\>\"", ",", "\"\<]\>\""}], "}"}]}], "]"}], "]"}], "===", 
        RowBox[{"{", "False", "}"}]}], ",", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"StringPosition", "[", 
            RowBox[{"x", ",", "\"\<[\>\""}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"c", "\[Equal]", "1"}], ",", 
          RowBox[{"Return", "[", "False", "]"}], ",", 
          RowBox[{"a", "=", 
           RowBox[{"StringTake", "[", 
            RowBox[{"x", ",", 
             RowBox[{"{", 
              RowBox[{"c", ",", 
               RowBox[{"-", "1"}]}], "}"}]}], "]"}]}]}], "]"}]}], ",", 
       RowBox[{"Return", "[", "False", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"StringPosition", "[", 
         RowBox[{"a", ",", "\"\<[\>\""}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", 
     RowBox[{"c", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"StringPosition", "[", 
         RowBox[{"a", ",", "\"\<]\>\""}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"a", "=", 
      RowBox[{"\"\<{\>\"", "<>", 
       RowBox[{"StringTake", "[", 
        RowBox[{"a", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"b", "+", "1"}], ",", 
           RowBox[{"c", "-", "1"}]}], "}"}]}], "]"}], "<>", "\"\<}\>\""}]}], 
     ";", " ", 
     RowBox[{"a", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"ToString", ",", 
        RowBox[{"ToExpression", "[", "a", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Mapp", "[", 
          RowBox[{"StringFreeQ", ",", "a", ",", "\"\<_\>\""}], "]"}], "]"}], 
        "\[Equal]", 
        RowBox[{"{", "False", "}"}]}], ",", 
       RowBox[{"Return", "[", "True", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"c", ",", "a"}], "}"}], "\[Equal]", 
        RowBox[{"{", 
         RowBox[{"2", ",", 
          RowBox[{"{", "}"}]}], "}"}]}], ",", 
       RowBox[{"Return", "[", "True", "]"}], ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"a", "\[Equal]", 
            RowBox[{"{", "}"}]}], "||", 
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{
              RowBox[{"a", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}]}], "]"}], "\[Equal]", 
            "\"\<_\>\""}]}], ",", 
          RowBox[{"Return", "[", "False", "]"}], ",", 
          RowBox[{"For", "[", 
           RowBox[{"k", ",", 
            RowBox[{"k", "\[LessEqual]", 
             RowBox[{"Length", "[", "a", "]"}]}], ",", 
            RowBox[{"k", "++"}], ",", 
            RowBox[{
             RowBox[{"b", "=", 
              RowBox[{"a", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"StringReplace", "[", 
                   RowBox[{"b", ",", 
                    RowBox[{"\"\<_\>\"", "\[Rule]", "\"\<\>\""}]}], "]"}], 
                  "\[NotEqual]", "\"\<\>\""}], "&&", 
                 RowBox[{
                  RowBox[{"StringTake", "[", 
                   RowBox[{"b", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], "\[Equal]", 
                  "\"\<_\>\""}]}], "||", 
                RowBox[{"!", 
                 RowBox[{"StringFreeQ", "[", 
                  RowBox[{"b", ",", "\"\<_ \>\""}], "]"}]}], "||", 
                RowBox[{"!", 
                 RowBox[{"StringFreeQ", "[", 
                  RowBox[{"b", ",", "\"\<_:\>\""}], "]"}]}], "||", 
                RowBox[{"!", 
                 RowBox[{"StringFreeQ", "[", 
                  RowBox[{"b", ",", "\"\<_.\>\""}], "]"}]}]}], ",", 
               RowBox[{"m", "=", "True"}], ",", 
               RowBox[{"n", "=", "False"}]}], "]"}]}]}], "]"}]}], "]"}], ";", 
        RowBox[{"m", "&&", "n"}]}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`HeadingQ1`\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"HeadingQ1", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", "d", ",", 
      RowBox[{"h", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"Unique", "[", "\"\<sv\>\"", "]"}], "]"}]}], ",", "k", ",", 
      RowBox[{"a", "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"StringTake", "[", 
         RowBox[{"x", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"StringPosition", "[", 
                RowBox[{"x", ",", "\"\<[\>\"", ",", "1"}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], ",", 
            RowBox[{"-", "2"}]}], "}"}]}], "]"}], "]"}]}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"StringFreeQ", "[", 
       RowBox[{"x", ",", "\"\<[\>\""}], "]"}], ",", "False", ",", 
      RowBox[{
       RowBox[{"b", "=", 
        RowBox[{"StringSplit1", "[", 
         RowBox[{"a", ",", "\"\<,\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "b", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{
          RowBox[{"d", "=", 
           RowBox[{"b", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"c", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"StringFreeQ", "[", 
               RowBox[{"d", ",", "\"\<_\>\""}], "]"}], ",", "False", ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"MemberQ", "[", 
                 RowBox[{
                  RowBox[{"ToString", "/@", 
                   RowBox[{"{", 
                    RowBox[{
                    "Complex", ",", "Integer", ",", "List", ",", "Rational", 
                    ",", "Real", ",", "String", ",", "Symbol"}], "}"}]}], ",", 
                  RowBox[{"StringTake", "[", 
                   RowBox[{"d", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"d", ",", "\"\<_\>\""}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "+", "1"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "]"}], ",", 
                "True", ",", 
                RowBox[{"HeadingQ", "[", 
                 RowBox[{
                 "h", "<>", "\"\<[\>\"", "<>", "d", "<>", "\"\<]\>\""}], 
                 "]"}]}], "]"}]}], "]"}]}], "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"DeleteDuplicates", "[", "c", "]"}], "\[Equal]", 
          RowBox[{"{", "True", "}"}]}], ",", "True", ",", "False"}], 
        "]"}]}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`HeadingQ2`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HeadingQ2", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"Unique", "[", "\"\<agn\>\"", "]"}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}], "=", 
      RowBox[{"Map", "[", 
       RowBox[{"DeleteDuplicates", ",", 
        RowBox[{"Map", "[", 
         RowBox[{"Flatten", ",", 
          RowBox[{"Map3", "[", 
           RowBox[{"StringPosition", ",", "x", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<[\>\"", ",", "\"\<]\>\""}], "}"}]}], "]"}]}], 
         "]"}]}], "]"}]}], ";", "\n", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"StringLength", "[", "x", "]"}], "\[Equal]", 
         RowBox[{"b", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}]}], "&&", 
        RowBox[{"SymbolQ", "[", 
         RowBox[{"c", "=", 
          RowBox[{"StringTake", "[", 
           RowBox[{"x", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{
               RowBox[{"a", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
           "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Quiet", "[", 
         RowBox[{"Check", "[", 
          RowBox[{
           RowBox[{"ToExpression", "[", 
            RowBox[{
             RowBox[{"StringReplace", "[", 
              RowBox[{"x", ",", 
               RowBox[{
                RowBox[{"c", "<>", "\"\<[\>\""}], "\[Rule]", 
                RowBox[{"d", "<>", "\"\<[\>\""}]}], ",", "1"}], "]"}], "<>", 
             "\"\< := 72\>\""}], "]"}], ",", "False"}], "]"}], "]"}], ";", 
        RowBox[{"c", "=", 
         RowBox[{"Map", "[", 
          RowBox[{"SyntaxQ", ",", 
           RowBox[{"ArgsTypes", "[", "d", "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"\"\<Remove[\>\"", "<>", "d", "<>", "\"\<]\>\""}], "]"}], 
        ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"DeleteDuplicates", "[", "c", "]"}], "===", 
           RowBox[{"{", "True", "}"}]}], ",", "True", ",", "False"}], "]"}]}],
        ",", "False"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`HeadingQ3`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HeadingQ3", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "\"\<AvzRansIan\>\""}], ",", "b"}], "}"}], ",", 
    RowBox[{
     RowBox[{"Clear", "[", "AvzRansIan", "]"}], ";", 
     RowBox[{"b", "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"ToExpression", "[", 
        RowBox[{"a", "<>", 
         RowBox[{"StringTake", "[", 
          RowBox[{"x", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"StringPosition", "[", 
                RowBox[{"x", ",", "\"\<[\>\""}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "]"}], " ", "\[IndentingNewLine]",
          "<>", "\"\<:=90\>\""}], "]"}], "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"SameQ", "[", 
        RowBox[{"b", ",", "Null"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Clear", "[", "a", "]"}], ";", 
        RowBox[{"HeadingQ2", "[", "x", "]"}]}], ",", 
       RowBox[{
        RowBox[{"Clear", "[", "a", "]"}], ";", "False"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`TestHeadingQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TestHeadingQ", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"ToString", ",", 
         RowBox[{"{", 
          RowBox[{
          "Arbitrary", ",", "Integer", ",", "Real", ",", "Complex", ",", 
           "List", ",", "Symbol", ",", "String"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"g", "=", 
       RowBox[{"{", "}"}]}], ",", "f", ",", "h"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", "t_", "]"}], ":=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", "y", "}"}], "\[NotEqual]", 
          RowBox[{"{", "}"}]}], "&&", 
         RowBox[{"!", 
          RowBox[{"HowAct", "[", "y", "]"}]}]}], ",", 
        RowBox[{"y", "=", "t"}], ",", "Null"}], "]"}]}], ";", 
     RowBox[{"h", "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"Check", "[", 
        RowBox[{
         RowBox[{"StringReplace", "[", 
          RowBox[{"x", ",", 
           RowBox[{
            RowBox[{"HeadName1", "[", "x", "]"}], "->", "\"\<\>\""}], ",", 
           "1"}], "]"}], ",", "$Failed"}], "]"}], "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"h", "===", "$Failed"}], ",", 
       RowBox[{
        RowBox[{"f", "[", "x", "]"}], ";", "False"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"SyntaxQ", "[", "x", "]"}]}], ",", 
         RowBox[{
          RowBox[{"f", "[", "x", "]"}], ";", " ", "False"}], ",", 
         RowBox[{
          RowBox[{"h", "=", 
           RowBox[{"StringDelete", "[", 
            RowBox[{"h", ",", "\"\< \>\""}], "]"}]}], ";", "  ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"!", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"SuffPref", "[", 
                 RowBox[{"h", ",", "\"\<[\>\"", ",", "1"}], "]"}], "&&", 
                RowBox[{"SuffPref", "[", 
                 RowBox[{"h", ",", "\"\<]\>\"", ",", "2"}], "]"}]}], ")"}]}], 
             "||", 
             RowBox[{"StringFreeQ", "[", 
              RowBox[{"h", ",", "\"\<_\>\""}], "]"}], "||", 
             RowBox[{"!", 
              RowBox[{"StringFreeQ", "[", 
               RowBox[{"h", ",", "\"\<_;\>\""}], "]"}]}]}], ",", 
            RowBox[{
             RowBox[{"f", "[", "h", "]"}], ";", "False"}], ",", " ", 
            RowBox[{
             RowBox[{"a", "=", 
              RowBox[{"ToString", "[", 
               RowBox[{"Unique", "[", "\"\<gs\>\"", "]"}], "]"}]}], ";", " ", 
             RowBox[{"b", "=", 
              RowBox[{"Quiet", "[", 
               RowBox[{"Check", "[", 
                RowBox[{
                 RowBox[{"ToExpression", "[", 
                  RowBox[{"a", "<>", "h", "<>", "\"\<:=74\>\""}], "]"}], ",", 
                 "$Failed"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"b", "===", "$Failed"}], ",", 
               RowBox[{
                RowBox[{"f", "[", "h", "]"}], ";", 
                RowBox[{"Remove", "[", "a", "]"}], ";", "False"}], ",", " ", 
               RowBox[{
                RowBox[{"b", "=", 
                 RowBox[{"Quiet", "[", 
                  RowBox[{"Check", "[", 
                   RowBox[{
                    RowBox[{"Args", "[", 
                    RowBox[{"a", ",", "90"}], "]"}], ",", "$Failed"}], "]"}], 
                  "]"}]}], ";", " ", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"b", "===", "$Failed"}], ",", 
                  RowBox[{
                   RowBox[{"f", "[", "h", "]"}], ";", 
                   RowBox[{"Remove", "[", "a", "]"}], ";", " ", "False"}], 
                  ",", " ", 
                  RowBox[{
                   RowBox[{"b", "=", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{"Check", "[", 
                    RowBox[{
                    RowBox[{"ArgsTypes", "[", "a", "]"}], ",", "$Failed"}], 
                    "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"b", "===", "$Failed"}], ",", 
                    RowBox[{
                    RowBox[{"f", "[", "h", "]"}], ";", " ", 
                    RowBox[{"Remove", "[", "a", "]"}], ";", " ", "False"}], 
                    ",", " ", 
                    RowBox[{
                    RowBox[{"b", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"ListListQ", "[", "b", "]"}]}], ",", 
                    RowBox[{"{", "b", "}"}], ",", "b"}], "]"}]}], ";", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"c", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "||", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "==", "\"\<.\>\""}], "||", 
                    RowBox[{"SuffPref", "[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "\"\<:\>\"", ",", 
                    "1"}], "]"}], "||", 
                    RowBox[{"StringMatchQ", "[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"X__", "~~", "\"\<:\>\"", "~~", "Y__"}]}], "]"}], 
                    "||", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"True", ",", "False"}], "}"}], ",", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{"Check", "[", 
                    RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "$Failed"}], 
                    "]"}], "]"}]}], "]"}]}], ",", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"d", ",", "True"}], "]"}], ",", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"g", ",", "#"}], "]"}]}], "]"}], "&"}], ",", 
                    "b"}], "]"}], ";", " ", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"g", "\[Equal]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", "}"}], "]"}], ";", " ", "True"}], ",", 
                    RowBox[{
                    RowBox[{"f", "[", "g", "]"}], ";", "False"}]}], "]"}]}]}],
                     "]"}]}]}], "]"}]}]}], "]"}]}]}], "]"}]}]}], "]"}]}], 
      "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Df2`\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"Df2", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "a", "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"HowAct", "[", "y", "]"}]}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"x", ",", "y"}], "]"}], ",", 
      RowBox[{"Simplify", "[", 
       RowBox[{"ReplaceAll1", "[", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"ReplaceAll1", "[", 
            RowBox[{"x", ",", "y", ",", "a"}], "]"}], ",", "a"}], "]"}], ",", 
         "a", ",", "y"}], "]"}], "]"}]}], "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Difff`\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"Difff", "[", 
   RowBox[{"x_", ",", "y__"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "x"}], ",", "a1", ",", "a2", ",", "a3", ",", 
      RowBox[{"b", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"{", "y", "}"}], "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", "d", ",", 
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"n", "=", "g"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Clear", "[", "g", "]"}], ";", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", "b"}], ",", 
       RowBox[{
        RowBox[{"d", "=", 
         RowBox[{
          RowBox[{"{", "y", "}"}], "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"c", ",", 
          RowBox[{"Unique", "[", "g", "]"}]}], "]"}], ";", 
        RowBox[{"a1", "=", 
         RowBox[{"Replace4", "[", 
          RowBox[{"a", ",", 
           RowBox[{"d", "\[Rule]", 
            RowBox[{"c", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}]}], "]"}]}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"a2", "=", 
         RowBox[{"D", "[", 
          RowBox[{"a1", ",", 
           RowBox[{"c", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], ";", 
        RowBox[{"a3", "=", 
         RowBox[{"Replace4", "[", 
          RowBox[{"a2", ",", 
           RowBox[{
            RowBox[{"c", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "\[Rule]", "d"}]}], "]"}]}], ";",
         " ", "\[IndentingNewLine]", 
        RowBox[{"a", "=", "a3"}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", 
     RowBox[{"g", "=", "n"}], ";", 
     RowBox[{"Simplify", "[", "a3", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Int`\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"Int", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "a", "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"HowAct", "[", "y", "]"}]}], ",", 
      RowBox[{"Integrate", "[", 
       RowBox[{"x", ",", "y"}], "]"}], ",", 
      RowBox[{"Simplify", "[", 
       RowBox[{"Subs", "[", 
        RowBox[{
         RowBox[{"Integrate", "[", 
          RowBox[{
           RowBox[{"Subs", "[", 
            RowBox[{"x", ",", "y", ",", "a"}], "]"}], ",", "a"}], "]"}], ",", 
         "a", ",", "y"}], "]"}], "]"}]}], "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Integral2`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Integral2", "[", 
   RowBox[{"x_", ",", "y__"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "x"}], ",", "a1", ",", "a2", ",", "a3", ",", 
      RowBox[{"b", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"{", "y", "}"}], "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", "d", ",", 
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"n", "=", "g"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Clear", "[", "g", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", "b"}], ",", 
       RowBox[{
        RowBox[{"d", "=", 
         RowBox[{
          RowBox[{"{", "y", "}"}], "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"c", ",", 
          RowBox[{"Unique", "[", "g", "]"}]}], "]"}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"a1", "=", 
         RowBox[{"Replace4", "[", 
          RowBox[{"a", ",", 
           RowBox[{"d", "\[Rule]", 
            RowBox[{"c", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}]}], "]"}]}], ";", 
        RowBox[{"a2", "=", 
         RowBox[{"Integrate", "[", 
          RowBox[{"a1", ",", 
           RowBox[{"c", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"a3", "=", 
         RowBox[{"Replace4", "[", 
          RowBox[{"a2", ",", 
           RowBox[{
            RowBox[{"c", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "\[Rule]", "d"}]}], "]"}]}], ";", 
        RowBox[{"a", "=", "a3"}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", 
     RowBox[{"g", "=", "n"}], ";", 
     RowBox[{"Simplify", "[", "a3", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`MdP`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MdP", "[", "x___", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Names", "[", "\"\<`*\>\"", "]"}], ",", 
         RowBox[{
          RowBox[{"BlockFuncModQ", "[", "#", "]"}], "&"}]}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", "c", ",", "d"}], "}"}], ",", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"ToString", ",", 
         RowBox[{"{", "x", "}"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"a", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"a", "\[Equal]", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"{", "}"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"d", "\[Equal]", 
           RowBox[{"{", "}"}]}], ",", "a", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MemberQ4", "[", 
             RowBox[{"a", ",", "d"}], "]"}], ",", 
            RowBox[{"Intersection", "[", 
             RowBox[{"a", ",", "d"}], "]"}], ",", 
            RowBox[{"{", "}"}]}], "]"}]}], "]"}]}], "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"a", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", "$Failed", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{"b", ",", 
               RowBox[{"{", 
                RowBox[{"#", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"Flatten", "[", 
                   RowBox[{"{", 
                    RowBox[{"PureDefinition", "[", "#", "]"}], "}"}], "]"}], 
                  "]"}]}], "}"}]}], "]"}], "&"}], ",", "a"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "c", "]"}], ">", "1"}], ",", "c", ",", 
          RowBox[{"c", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ModLibraryPath`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ModLibraryPath", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"DirQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "$LibraryPath"}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Attributes", "[", "$LibraryPath", "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"ClearAttributes", "[", 
      RowBox[{"$LibraryPath", ",", "b"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"a", "=", 
      RowBox[{"Insert", "[", 
       RowBox[{"a", ",", "x", ",", 
        RowBox[{"-", "1"}]}], "]"}]}], ";", 
     RowBox[{"$LibraryPath", "=", "a"}], ";", 
     RowBox[{"SetAttributes", "[", 
      RowBox[{"$LibraryPath", ",", "b"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ModuleQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ModuleQ", "[", 
   RowBox[{"x_", ",", 
    RowBox[{"y___", "/;", 
     RowBox[{
      RowBox[{"y", "==", "Null"}], " ", "||", 
      RowBox[{
       RowBox[{"SymbolQ", "[", "y", "]"}], "&&", 
       RowBox[{"!", 
        RowBox[{"HowAct", "[", "y", "]"}]}]}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"PureDefinition", "[", "x", "]"}]}], ",", "b"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ListQ", "[", "a", "]"}], "||", 
       RowBox[{"a", "\[Equal]", "\"\<System\>\""}], "||", 
       RowBox[{"a", "===", "$Failed"}]}], ",", "False", ",", 
      RowBox[{
       RowBox[{"b", "=", 
        RowBox[{"HeadPF", "[", "x", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SuffPref", "[", 
          RowBox[{"a", ",", 
           RowBox[{"b", "<>", "\"\< := \>\"", "<>", "\"\<Module[{\>\""}], ",",
            "1"}], "]"}], ",", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", "y", "}"}], "\[NotEqual]", 
             RowBox[{"{", "}"}]}], ",", 
            RowBox[{"y", "=", "\"\<Module\>\""}]}], "]"}], ";", "True"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"SuffPref", "[", 
            RowBox[{"a", ",", 
             RowBox[{
             "b", "<>", "\"\< := \>\"", "<>", "\"\<DynamicModule[{\>\""}], 
             ",", "1"}], "]"}], ",", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", "y", "}"}], "\[NotEqual]", 
               RowBox[{"{", "}"}]}], ",", 
              RowBox[{"y", "=", "\"\<DynamicModule\>\""}]}], "]"}], ";", 
            "True"}], ",", "False"}], "]"}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ModuleQ1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ModuleQ1", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"SymbolQ", "[", "x", "]"}], "&&", 
     RowBox[{
      RowBox[{"TestBFM", "[", "x", "]"}], "===", "\"\<Module\>\""}]}], ",", 
    "True", ",", "False"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ModuleQ2`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ModuleQ2", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SymbolQ", "[", "x", "]"}], ",", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "$Failed"}], "]"}]}], ",", 
      "b"}], "}"}], ",", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"$Failed", ",", "\"\<System\>\""}], "}"}], ",", "a"}], "]"}],
       ",", "False", ",", " ", 
      RowBox[{
       RowBox[{"b", " ", "=", 
        RowBox[{"Map14", "[", 
         RowBox[{"StringJoin", ",", 
          RowBox[{"{", 
           RowBox[{"\"\< := \>\"", ",", "\"\< = \>\""}], "}"}], ",", 
          "\"\<Module[{\>\""}], "]"}]}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SuffPref", "[", 
          RowBox[{"a", ",", 
           RowBox[{"Map3", "[", 
            RowBox[{"StringJoin", ",", 
             RowBox[{"HeadPF", "[", "x", "]"}], ",", "b"}], "]"}], ",", "1"}],
           "]"}], ",", "True", ",", "False"}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`FuncBlockModQ`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FuncBlockModQ", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"SymbolQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"!", 
      RowBox[{"HowAct", "[", "y", "]"}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b", ",", "c", ",", "m", ",", "n", ",", 
      RowBox[{"a", "=", 
       RowBox[{"PureDefinition", "[", "x", "]"}]}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<System\>\"", ",", "$Failed"}], "}"}], ",", "a"}], "]"}],
       ",", "False", ",", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", "a", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"b", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"HeadPF", "[", "x", "]"}], "}"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"c", "=", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Mapp", "[", 
           RowBox[{"StringJoin", ",", "b", ",", "\"\< := \>\""}], "]"}], ",", 
          RowBox[{"Mapp", "[", 
           RowBox[{"StringJoin", ",", "b", ",", "\"\< = \>\""}], "]"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"c", "=", 
        RowBox[{"GenRules", "[", 
         RowBox[{"c", ",", "\"\<\>\""}], "]"}]}], ";", 
       RowBox[{"c", "=", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"a", ",", "c"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"m", ",", "n"}], "}"}], "=", 
        RowBox[{"Map", "[", 
         RowBox[{"Length", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Select", "[", 
             RowBox[{"c", ",", 
              RowBox[{
               RowBox[{"SuffPref", "[", 
                RowBox[{"#", ",", "\"\<Block[{\>\"", ",", "1"}], "]"}], 
               "&"}]}], "]"}], ",", 
            RowBox[{"Select", "[", 
             RowBox[{"c", ",", 
              RowBox[{
               RowBox[{"SuffPref", "[", 
                RowBox[{"#", ",", "\"\<Module[{\>\"", ",", "1"}], "]"}], 
               "&"}]}], "]"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "m"}], ",", 
         RowBox[{
          RowBox[{"y", "=", "\"\<Block\>\""}], ";", "True"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "n"}], ",", 
           RowBox[{
            RowBox[{"y", "=", "\"\<Module\>\""}], ";", "True"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"m", "+", "n"}], "\[Equal]", "0"}], ",", 
             RowBox[{
              RowBox[{"y", "=", "\"\<Function\>\""}], ";", "True"}], ",", 
             RowBox[{
              RowBox[{"y", "=", "\"\<Multiple\>\""}], ";", "False"}]}], 
            "]"}]}], "]"}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Int1`\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"Int1", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "a", "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"HowAct", "[", "y", "]"}]}], ",", 
      RowBox[{"Integrate", "[", 
       RowBox[{"x", ",", "y"}], "]"}], ",", 
      RowBox[{"Simplify", "[", 
       RowBox[{"ReplaceAll1", "[", 
        RowBox[{
         RowBox[{"Integrate", "[", 
          RowBox[{
           RowBox[{"ReplaceAll1", "[", 
            RowBox[{"x", ",", "y", ",", "a"}], "]"}], ",", "a"}], "]"}], ",", 
         "a", ",", "y"}], "]"}], "]"}]}], "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Integrate1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Integrate1", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
    RowBox[{
     RowBox[{"c", "=", 
      RowBox[{"Replace2", "[", 
       RowBox[{
        RowBox[{"Integrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"b", "=", 
            RowBox[{"Replace2", "[", 
             RowBox[{"x", ",", "y", ",", "a"}], "]"}]}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"b", "===", "$Failed"}], ",", 
             RowBox[{"Return", "[", "$Failed", "]"}], ",", "b"}], "]"}]}], 
          ",", "a"}], "]"}], ",", "a", ",", "y"}], "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"b", "===", "$Failed"}], ",", "$Failed", ",", "c"}], "]"}]}]}],
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SortNL`\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"SortNL", "[", 
   RowBox[{
    RowBox[{"L_", "/;", 
     RowBox[{
      RowBox[{"ListListQ", "[", "L", "]"}], "&&", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"NumericQ", "[", "#", "]"}], "&"}], ",", 
          RowBox[{"Flatten", "[", "L", "]"}]}], "]"}], "]"}], "\[Equal]", 
       RowBox[{"{", "True", "}"}]}]}]}], ",", 
    RowBox[{"p_", "/;", 
     RowBox[{"IntegerQ", "[", "p", "]"}]}], ",", 
    RowBox[{"b_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Greater", ",", "Less"}], "}"}], ",", "b"}], "]"}]}]}], "]"}],
   ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"p", "\[GreaterEqual]", "1"}], "&&", 
     RowBox[{"p", "\[LessEqual]", 
      RowBox[{"Length", "[", 
       RowBox[{"L", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], ",", 
    RowBox[{"Sort", "[", 
     RowBox[{"L", ",", 
      RowBox[{
       RowBox[{"b", "[", 
        RowBox[{
         RowBox[{"#1", "[", 
          RowBox[{"[", "p", "]"}], "]"}], ",", 
         RowBox[{"#2", "[", 
          RowBox[{"[", "p", "]"}], "]"}]}], "]"}], "&"}]}], "]"}], ",", 
    RowBox[{"Print", "[", 
     RowBox[{
      RowBox[{
      "SortNL", "::", 
       "\"\<incorrect second argument, should lay in interval \>\""}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"L", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SortNL1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SortNL1", "[", 
   RowBox[{
    RowBox[{"L_", "/;", 
     RowBox[{"ListListQ", "[", "L", "]"}]}], ",", 
    RowBox[{"p_", "/;", 
     RowBox[{"IntegerQ", "[", "p", "]"}]}], ",", 
    RowBox[{"b_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Greater", ",", "Less"}], "}"}], ",", "b"}], "]"}]}]}], "]"}],
   ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"p", "\[GreaterEqual]", "1"}], "&&", 
     RowBox[{"p", "\[LessEqual]", 
      RowBox[{"Length", "[", 
       RowBox[{"L", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], ",", 
    RowBox[{"Sort", "[", 
     RowBox[{"L", ",", 
      RowBox[{
       RowBox[{"b", "[", 
        RowBox[{
         RowBox[{"GC", "[", 
          RowBox[{"#1", "[", 
           RowBox[{"[", "p", "]"}], "]"}], "]"}], ",", 
         RowBox[{"GC", "[", 
          RowBox[{"#2", "[", 
           RowBox[{"[", "p", "]"}], "]"}], "]"}]}], "]"}], "&"}]}], "]"}], 
    ",", 
    RowBox[{"Print", "[", 
     RowBox[{
      RowBox[{
      "SortNL", "::", 
       "\"\<incorrect second argument, should lay in interval \>\""}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"L", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SortNestList`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SortNestList", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"NestListQ", "[", "x", "]"}]}], ",", 
    RowBox[{"p_", "/;", 
     RowBox[{"PosIntQ", "[", "p", "]"}]}], ",", "y_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"Length", ",", "x"}], "]"}], "]"}]}], ",", "b"}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{
           RowBox[{"DeleteDuplicates", "[", 
            RowBox[{"Map", "[", 
             RowBox[{"ListNumericQ", ",", "x"}], "]"}], "]"}], ",", 
           RowBox[{"{", "True", "}"}]}], "]"}], "&&", 
         RowBox[{"MemberQ", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Greater", ",", "Less"}], "}"}], ",", "y"}], "]"}]}], ",",
         "y", ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"SameQ", "[", 
            RowBox[{
             RowBox[{"DeleteDuplicates", "[", 
              RowBox[{"Map", "[", 
               RowBox[{"ListSymbolQ", ",", "x"}], "]"}], "]"}], ",", 
             RowBox[{"{", "True", "}"}]}], "]"}], "&&", 
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"SymbolGreater", ",", "SymbolLess"}], "}"}], ",", "y"}],
             "]"}]}], ",", "y"}], "]"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Defer", "[", 
          RowBox[{"SortNestList", "[", 
           RowBox[{"x", ",", "p", ",", "y"}], "]"}], "]"}], "]"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Min", "[", "a", "]"}], "\[LessEqual]", "p", "\[LessEqual]", 
        RowBox[{"Max", "[", "a", "]"}]}], ",", 
       RowBox[{"Sort", "[", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"b", "[", 
           RowBox[{
            RowBox[{"#1", "[", 
             RowBox[{"[", "p", "]"}], "]"}], ",", 
            RowBox[{"#2", "[", 
             RowBox[{"[", "p", "]"}], "]"}]}], "]"}], "&"}]}], "]"}], ",", 
       RowBox[{"Defer", "[", 
        RowBox[{"SortNestList", "[", 
         RowBox[{"x", ",", "p", ",", "y"}], "]"}], "]"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SeqToString`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SeqToString", "[", "h___", "]"}], ":=", 
  RowBox[{"StringTake", "[", 
   RowBox[{
    RowBox[{"ToString1", "[", 
     RowBox[{"{", "h", "}"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", 
      RowBox[{"-", "2"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Spos`\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"Spos", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"StringQ", "[", "y", "]"}]}], ",", 
    RowBox[{"p_", "/;", 
     RowBox[{"IntegerQ", "[", "p", "]"}]}], ",", 
    RowBox[{"dir_", "/;", 
     RowBox[{"IntegerQ", "[", "dir", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"StringFreeQ", "[", 
        RowBox[{"x", ",", "y"}], "]"}], ",", 
       RowBox[{"Return", "[", "0", "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"StringLength", "[", "y", "]"}], ">", "1"}], "||", 
          RowBox[{
           RowBox[{"dir", "\[NotEqual]", "0"}], "&&", 
           RowBox[{"dir", "\[NotEqual]", "1"}]}]}], ",", 
         RowBox[{"Return", "[", "False", "]"}], ",", 
         RowBox[{"b", "=", 
          RowBox[{"StringLength", "[", "x", "]"}]}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"p", "<", "1"}], "||", 
        RowBox[{"p", ">", "b"}]}], ",", "False", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"p", "==", "1"}], "&&", 
          RowBox[{"dir", "\[Equal]", "0"}]}], ",", 
         RowBox[{"c", "=", "0"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"p", "==", "b"}], "&&", 
            RowBox[{"dir", "\[Equal]", "1"}]}], ",", 
           RowBox[{"c", "=", "0"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"dir", "\[Equal]", "0"}], ",", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"a", "=", "p"}], ",", 
               RowBox[{"a", "\[GreaterEqual]", "1"}], ",", 
               RowBox[{"a", "-=", "1"}], ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"StringTake", "[", 
                   RowBox[{"x", ",", 
                    RowBox[{"{", "a", "}"}]}], "]"}], "\[Equal]", "y"}], ",", 
                 RowBox[{"Return", "[", "a", "]"}], ",", "c"}], "]"}]}], 
              "]"}], ",", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"a", "=", "p"}], ",", 
               RowBox[{"a", "\[LessEqual]", "b"}], ",", 
               RowBox[{"a", "+=", "1"}], ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"StringTake", "[", 
                   RowBox[{"x", ",", 
                    RowBox[{"{", "a", "}"}]}], "]"}], "\[Equal]", "y"}], ",", 
                 RowBox[{"Return", "[", "a", "]"}], ",", "c"}], "]"}]}], 
              "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "\[Equal]", "0"}], "||", 
        RowBox[{"a", "\[Equal]", 
         RowBox[{"b", "+", "1"}]}]}], ",", "0", ",", "a"}], "]"}]}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StringPat`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StringPat", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"StringQ", "[", "x", "]"}], "||", 
      RowBox[{"ListStringQ", "[", "x", "]"}]}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<_\>\"", ",", "\"\<__\>\"", ",", "\"\<___\>\""}], "}"}], 
       ",", "y"}], "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "\"\<\>\""}], ",", "b"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"StringQ", "[", "x", "]"}], ",", "x", ",", 
      RowBox[{
       RowBox[{"b", "=", 
        RowBox[{"Map", "[", 
         RowBox[{"ToString1", ",", "x"}], "]"}]}], ";", 
       RowBox[{"ToExpression", "[", 
        RowBox[{"StringJoin", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "<>", "\"\<~~\>\"", "<>", "y", "<>", "\"\<~~\>\""}],
              "&"}], ",", 
            RowBox[{"b", "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", 
               RowBox[{"-", "2"}]}], "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"b", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StringCases1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StringCases1", "[", 
   RowBox[{
    RowBox[{"x_", " ", "/;", " ", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", " ", 
    RowBox[{"y_", " ", "/;", " ", 
     RowBox[{
      RowBox[{"StringQ", "[", "y", "]"}], " ", "||", " ", 
      RowBox[{"ListStringQ", "[", "y", "]"}]}]}], ",", " ", 
    RowBox[{"z_", " ", "/;", " ", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<_\>\"", ",", "\"\<__\>\"", ",", " ", "\"\<___\>\""}], 
        "}"}], ",", " ", "z"}], "]"}]}]}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b", ",", " ", 
      RowBox[{"c", " ", "=", " ", "\"\<\>\""}], ",", " ", "d", ",", " ", 
      RowBox[{"k", " ", "=", " ", "1"}]}], "}"}], ",", " ", 
    RowBox[{"Sort", "[", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Map", "[", 
       RowBox[{"DeleteDuplicates", ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"StringQ", "[", "y", "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"StringCases", "[", 
            RowBox[{"x", ",", " ", "y"}], "]"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"StringCases", "[", 
            RowBox[{"x", ",", " ", 
             RowBox[{"StringPat", "[", 
              RowBox[{"y", ",", " ", "z"}], "]"}], ",", " ", 
             RowBox[{"Overlaps", " ", "->", " ", "All"}]}], "]"}], "}"}]}], 
         "]"}]}], "]"}], "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StringCases2`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StringCases2", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{"ListQ", "[", "y", "]"}], "&&", 
      RowBox[{"y", "\[NotEqual]", 
       RowBox[{"{", "}"}]}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"b", "=", "\"\<\>\""}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"ToString", ",", "y"}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"b", "=", 
        RowBox[{"b", "<>", 
         RowBox[{"ToString1", "[", 
          RowBox[{"c", "[", 
           RowBox[{"[", "k", "]"}], "]"}], "]"}], "<>", "\"\<~~__~~\>\""}]}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{"Length", "[", "c", "]"}]}], "}"}]}], "]"}], ";", 
     RowBox[{"a", "=", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"StringTake", "[", 
        RowBox[{"b", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "7"}]}], "}"}]}], "]"}], "]"}]}], ";", " ", 
     RowBox[{"StringCases", "[", 
      RowBox[{"x", ",", 
       RowBox[{"Shortest", "[", "a", "]"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StringFreeQ1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StringFreeQ1", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{"StringQ", "[", "y", "]"}], "||", 
      RowBox[{"ListStringQ", "[", "y", "]"}]}]}], ",", 
    RowBox[{"z_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<_\>\"", ",", "\"\<__\>\"", ",", "\"\<___\>\""}], "}"}], 
       ",", "z"}], "]"}]}]}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"StringQ", "[", "y", "]"}], ",", 
    RowBox[{"StringFreeQ", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"StringCases1", "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}], "\[Equal]", 
       RowBox[{"{", "}"}]}], ",", "True", ",", "False"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StringFreeQ2`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StringFreeQ2", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{"StringQ", "[", "y", "]"}], "||", 
      RowBox[{
       RowBox[{"ListQ", "[", "y", "]"}], "&&", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"StringQ", "[", "#", "]"}], "&"}], ",", "y"}], "]"}], 
         "]"}], "\[Equal]", 
        RowBox[{"{", "True", "}"}]}]}]}]}]}], "]"}], ":=", 
  RowBox[{"!", 
   RowBox[{"MemberQ", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"StringFreeQ", "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", "y", "}"}], "]"}]}], "]"}], ",", "False"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`StringFreeQ3`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StringFreeQ3", "[", 
   RowBox[{"x_", ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"StringQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"StringFreeQ", "[", 
   RowBox[{
    RowBox[{"ToString1", "[", "x", "]"}], ",", "y"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SelectStrings`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SelectStrings", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"ListQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"StringQ", ",", "x"}], "]"}], "]"}], "\[Equal]", 
       RowBox[{"{", "True", "}"}]}]}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{"ListQ", "[", "y", "]"}], "&&", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"StringQ", ",", "y"}], "]"}], "]"}], "\[Equal]", 
       RowBox[{"{", "True", "}"}]}]}]}], ",", 
    RowBox[{"Ig_:", "True"}]}], "]"}], ":=", 
  RowBox[{"Select", "[", 
   RowBox[{"x", ",", 
    RowBox[{
     RowBox[{"StringFreeQ2", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Ig", "==", "True"}], ",", 
         RowBox[{"ToUpperCase", "[", "#", "]"}], ",", "#"}], "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Ig", "\[Equal]", "True"}], ",", 
         RowBox[{"Map", "[", 
          RowBox[{"ToUpperCase", ",", "y"}], "]"}], ",", "y"}], "]"}]}], 
      "]"}], "&"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SelectContains`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SelectContains", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"ListQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"StringQ", ",", "x"}], "]"}], "]"}], "\[Equal]", 
       RowBox[{"{", "True", "}"}]}]}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{"ListQ", "[", "y", "]"}], "&&", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"StringQ", ",", "y"}], "]"}], "]"}], "\[Equal]", 
       RowBox[{"{", "True", "}"}]}]}]}], ",", 
    RowBox[{"r_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"False", ",", "True"}], "}"}], ",", "r"}], "]"}]}], ",", 
    RowBox[{"Ig_:", "True"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Riffle1", "[", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"StringFreeQ", "[", 
            RowBox[{"x", ",", "#", ",", 
             RowBox[{"IgnoreCase", "\[Rule]", "Ig"}]}], "]"}], "&"}], ",", 
          "y"}], "]"}], "]"}]}], ",", "b"}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ToExpression", "[", 
          RowBox[{"\"\<And[\>\"", "<>", 
           RowBox[{"StringTake", "[", 
            RowBox[{
             RowBox[{"ToString", "[", "#", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", 
               RowBox[{"-", "2"}]}], "}"}]}], "]"}], "<>", "\"\<]\>\""}], 
          "]"}], "&"}], ",", "a"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "===", "r"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "Nothing"}], "]"}], "&"}], 
       ",", 
       RowBox[{"Riffle1", "[", 
        RowBox[{"{", 
         RowBox[{"x", ",", "b"}], "}"}], "]"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`MaxNestLevel`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MaxNestLevel", "[", 
   RowBox[{"L_", "/;", 
    RowBox[{"ListQ", "[", "L", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", "L", "]"}]}], ",", 
      RowBox[{"b", "=", "L"}], ",", 
      RowBox[{"c", "=", "0"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"a", "\[Equal]", "b"}]}], ",", 
       RowBox[{
        RowBox[{"b", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"b", ",", "1"}], "]"}]}], ";", 
        RowBox[{"c", "=", 
         RowBox[{"c", "+", "1"}]}]}]}], "]"}], ";", "c"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Avg`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Avg", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b", ",", 
      RowBox[{"a", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"ToString", "[", 
          RowBox[{"InputForm", "[", 
           RowBox[{
            RowBox[{"Stack", "[", "_", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}], "]"}]}]}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"SuffPref", "[", 
          RowBox[{"a", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Module[\>\"", ",", "\"\<Block[\>\""}], "}"}], ",", 
           "1"}], "]"}]}], ",", 
        RowBox[{"\"\<Module[{},\>\"", "<>", "a", "<>", "\"\<]\>\""}], ",", 
        "a"}], "]"}]}], ";", " ", 
     RowBox[{"a", "=", 
      RowBox[{"StringReplace", "[", 
       RowBox[{"a", ",", 
        RowBox[{"\"\<$\>\"", "->", "\"\<\>\""}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"a", "=", 
      RowBox[{"StringReplace", "[", 
       RowBox[{"a", ",", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"SuffPref", "[", 
            RowBox[{"a", ",", "\"\<Block[\>\"", ",", "1"}], "]"}], ",", 
           "\"\<Block[\>\"", ",", "\"\<Module[\>\""}], "]"}], "\[Rule]", 
         "\"\<\>\""}], ",", "1"}], "]"}]}], ";", " ", 
     RowBox[{"a", "=", 
      RowBox[{
       RowBox[{"SubStrSymbolParity1", "[", 
        RowBox[{"a", ",", "\"\<{\>\"", ",", "\"\<}\>\""}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"a", "\[Equal]", "\"\<{}\>\""}], ",", 
       RowBox[{"{", "}"}], ",", 
       RowBox[{
        RowBox[{"b", "=", 
         RowBox[{"StrToList", "[", 
          RowBox[{"StringTake", "[", 
           RowBox[{"a", ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", 
              RowBox[{"-", "2"}]}], "}"}]}], "]"}], "]"}]}], ";", " ", 
        RowBox[{"b", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"StringSplit", "[", 
             RowBox[{"#", ",", "\"\< = \>\""}], "]"}], "&"}], ",", "b"}], 
          "]"}]}], ";", " ", "\[IndentingNewLine]", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "1"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<None\>\""}], "}"}], 
             ",", "#"}], "]"}], "&"}], ",", "b"}], "]"}]}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`LongestCommonSubString`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LongestCommonSubString", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"StringQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"StringLength", "[", "x", "]"}], ">", 
        RowBox[{"StringLength", "[", "y", "]"}]}], ",", 
       RowBox[{
        RowBox[{"a", "=", "x"}], ";", 
        RowBox[{"b", "=", "y"}]}], ",", 
       RowBox[{
        RowBox[{"a", "=", "y"}], ";", 
        RowBox[{"b", "=", "x"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"d", "=", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"StringJoin", ",", 
           RowBox[{"Subsets", "[", 
            RowBox[{"Characters", "[", "b", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"!", 
            RowBox[{"StringFreeQ", "[", 
             RowBox[{"a", ",", "#"}], "]"}]}], "&&", 
           RowBox[{"#", "\[NotEqual]", "\"\<\>\""}]}], "&"}]}], "]"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{"d", ",", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"StringFreeQ", "[", 
             RowBox[{"b", ",", "#"}], "]"}]}], "&"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"StringFreeQ", "[", 
           RowBox[{"a", ",", "#"}], "]"}]}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"c", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", "c", ",", 
       RowBox[{"Sort", "[", 
        RowBox[{"Select", "[", 
         RowBox[{"c", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"StringLength", "[", "#", "]"}], "\[Equal]", 
            RowBox[{"Max", "[", 
             RowBox[{"Map", "[", 
              RowBox[{"StringLength", ",", "c"}], "]"}], "]"}]}], "&"}]}], 
         "]"}], "]"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`LongestCommonSubSequence`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LongestCommonSubSequence", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"StringQ", "[", "y", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{"StringJoin", ",", 
            RowBox[{"Subsets", "[", 
             RowBox[{"Characters", "[", "x", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"#", "\[NotEqual]", "\"\<\>\""}], "&"}]}], "]"}], ",", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{"StringJoin", ",", 
            RowBox[{"Subsets", "[", 
             RowBox[{"Characters", "[", "y", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"#", "\[NotEqual]", "\"\<\>\""}], "&"}]}], "]"}]}], 
       "}"}]}], ";", 
     RowBox[{"c", "=", 
      RowBox[{"Intersection", "[", 
       RowBox[{"a", ",", "b"}], "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"c", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", "c", ",", 
       RowBox[{"Select", "[", 
        RowBox[{"c", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"StringLength", "[", "#", "]"}], "\[Equal]", 
           RowBox[{"Max", "[", 
            RowBox[{"Map", "[", 
             RowBox[{"StringLength", ",", "c"}], "]"}], "]"}]}], "&"}]}], 
        "]"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`LongestCommonSubsequence1`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LongestCommonSubsequence1", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"StringQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"StringQ", "[", "y", "]"}]}], ",", 
    RowBox[{"Ig_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"False", ",", "True"}], "}"}], ",", "Ig"}], "]"}]}], ",", 
    "t___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Characters", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Characters", "[", "y", "]"}]}], ",", "c", ",", "d", ",", 
      "f"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"z_", ",", "h_"}], "]"}], ":=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"StringFreeQ", "[", 
            RowBox[{"h", ",", "#"}], "]"}], ",", "Nothing", ",", "#"}], "]"}],
          "&"}], ",", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"StringJoin", "[", "#", "]"}], "&"}], ",", 
           RowBox[{"Subsets", "[", "z", "]"}]}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"2", ";;", 
           RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}]}], ";", 
     RowBox[{"c", "=", 
      RowBox[{"Gather", "[", 
       RowBox[{
        RowBox[{"d", "=", 
         RowBox[{"Sort", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"Ig", "\[Equal]", "True"}], ",", 
             RowBox[{"Intersection1", "[", 
              RowBox[{
               RowBox[{"f", "[", 
                RowBox[{"a", ",", "x"}], "]"}], ",", 
               RowBox[{"f", "[", 
                RowBox[{"b", ",", "y"}], "]"}], ",", "Ig"}], "]"}], ",", 
             RowBox[{"Intersection", "[", 
              RowBox[{
               RowBox[{"f", "[", 
                RowBox[{"a", ",", "x"}], "]"}], ",", 
               RowBox[{"f", "[", 
                RowBox[{"b", ",", "y"}], "]"}]}], "]"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"StringLength", "[", "#1", "]"}], "\[LessEqual]", 
             RowBox[{"StringLength", "[", "#2", "]"}]}], "&"}]}], "]"}]}], 
        ",", 
        RowBox[{
         RowBox[{
          RowBox[{"StringLength", "[", "#1", "]"}], "\[Equal]", 
          RowBox[{"StringLength", "[", "#2", "]"}]}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", "t", "}"}], "\[NotEqual]", 
         RowBox[{"{", "}"}]}], "&&", 
        RowBox[{"!", 
         RowBox[{"HowAct", "[", "t", "]"}]}]}], ",", 
       RowBox[{"t", "=", "d"}], ",", "Null"}], "]"}], ";", " ", 
     RowBox[{"c", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"c", "\[Equal]", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"{", "}"}], ",", 
        RowBox[{"c", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"c", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"{", "}"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "c", "]"}], "\[Equal]", "1"}], ",", 
         RowBox[{"c", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "c"}], "]"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`LongestCommonSubsequence2`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LongestCommonSubsequence2", "[", 
   RowBox[{
    RowBox[{"x__", "/;", 
     RowBox[{
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"StringQ", ",", 
          RowBox[{"{", "x", "}"}]}], "]"}], "]"}], "]"}], "\[Equal]", 
      RowBox[{"{", "True", "}"}]}]}], ",", 
    RowBox[{"Ig_", "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"False", ",", "True"}], "}"}], ",", "Ig"}], "]"}]}]}], "]"}], 
  ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "x", "}"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"{", "x", "}"}], "]"}]}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", "h"}], "}"}], ",", 
    RowBox[{
     RowBox[{"h", "=", 
      RowBox[{
       RowBox[{"Subsets", "[", 
        RowBox[{"b", ",", "2"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"c", "+", "2"}], ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"a", ",", 
         RowBox[{"LongestCommonSubsequence1", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"h", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"h", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", "Ig"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{"Length", "[", "h", "]"}]}], "}"}]}], "]"}], ";", " ", 
     RowBox[{"a", "=", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Flatten", "[", "a", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"DeleteDuplicates", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"!", 
                RowBox[{"StringFreeQ", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"a", "[", 
                   RowBox[{"[", "k", "]"}], "]"}], ",", 
                  RowBox[{"IgnoreCase", "\[Rule]", "Ig"}]}], "]"}]}], "&"}], 
              ",", "b"}], "]"}], "]"}], "]"}], "\[Equal]", 
          RowBox[{"{", "True", "}"}]}], ",", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"d", ",", 
           RowBox[{"a", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ",", "Null"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{"Length", "[", "a", "]"}]}], "}"}]}], "]"}], ";", " ", 
     "d"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DelSubStr`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DelSubStr", "[", 
   RowBox[{
    RowBox[{"S_", "/;", 
     RowBox[{"StringQ", "[", "S", "]"}]}], ",", 
    RowBox[{"L_", "/;", 
     RowBox[{
      RowBox[{"ListQ", "[", "L", "]"}], "&&", 
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"MaxNestLevel", "[", "L", "]"}]}], "]"}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"MaxNestLevel", "[", "L", "]"}], "\[Equal]", "1"}], ",", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Sort", "[", 
            RowBox[{"Map", "[", 
             RowBox[{"Sort", ",", "L"}], "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{"1", ",", 
                 RowBox[{"StringLength", "[", "S", "]"}]}], "]"}], ",", 
               RowBox[{"First", "[", "#", "]"}]}], "]"}], "&&", 
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{"1", ",", 
                 RowBox[{"StringLength", "[", "S", "]"}]}], "]"}], ",", 
               RowBox[{"First", "[", "#", "]"}]}], "]"}]}], "&"}]}], "]"}], 
         ",", 
         RowBox[{"Map", "[", 
          RowBox[{"List", ",", 
           RowBox[{"Sort", "[", "L", "]"}]}], "]"}]}], "]"}]}], ",", 
      RowBox[{"c", "=", "S"}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", "h", ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Sort", "[", 
         RowBox[{"Flatten", "[", "L", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}], ">", 
       RowBox[{"StringLength", "[", "S", "]"}]}], ",", "S", ",", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{"k", ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "a", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{"d", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"d", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", 
                RowBox[{"a", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "]"}], "\[Equal]", "2"}], 
              ",", 
              RowBox[{"a", "[", 
               RowBox[{"[", "k", "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"a", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"a", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], 
           "]"}]}]}], "]"}], ";", " ", 
       RowBox[{"d", "=", 
        RowBox[{"Sort", "[", "d", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "a", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{
          RowBox[{"h", "=", 
           RowBox[{"d", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ";", " ", 
          RowBox[{"c", "=", 
           RowBox[{"StringReplacePart", "[", 
            RowBox[{"c", ",", "\"\<\>\"", ",", "h"}], "]"}]}], ";", 
          RowBox[{"d", "=", 
           RowBox[{"d", "-", 
            RowBox[{"Last", "[", "h", "]"}], "+", 
            RowBox[{"First", "[", "h", "]"}], "-", "1"}]}]}]}], "]"}], ";", 
       "c"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Locals`\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"Locals", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], ",", "R___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", "p", ",", "q", ",", "t", ",", 
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"HeadPF", "[", "x", "]"}], "}"}], "]"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", "Sg", ",", "Sv"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Sg", "[", 
       RowBox[{"y_", "/;", 
        RowBox[{"StringQ", "[", "y", "]"}]}], "]"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"h", "=", "1"}], ",", 
          RowBox[{"v", "=", 
           RowBox[{"{", "}"}]}], ",", "j", ",", 
          RowBox[{"s", "=", "\"\<\>\""}], ",", 
          RowBox[{"z", "=", 
           RowBox[{
            RowBox[{"StringLength", "[", "y", "]"}], "-", "1"}]}]}], "}"}], 
        ",", 
        RowBox[{
         RowBox[{"Label", "[", "avz", "]"}], ";", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "h"}], ",", 
           RowBox[{"j", "\[LessEqual]", "z"}], ",", 
           RowBox[{"j", "++"}], ",", 
           RowBox[{
            RowBox[{"s", "=", 
             RowBox[{"s", "<>", 
              RowBox[{"StringTake", "[", 
               RowBox[{"y", ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "j"}], "}"}]}], "]"}]}]}], ";", " ", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"!", 
                RowBox[{"SameQ", "[", 
                 RowBox[{
                  RowBox[{"Quiet", "[", 
                   RowBox[{"ToExpression", "[", "s", "]"}], "]"}], ",", 
                  "$Failed"}], "]"}]}], "&&", 
               RowBox[{
                RowBox[{"StringTake", "[", 
                 RowBox[{"y", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"j", "+", "1"}], ",", 
                    RowBox[{"j", "+", "1"}]}], "}"}]}], "]"}], "\[Equal]", 
                "\"\<,\>\""}]}], ",", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"v", ",", "s"}], "]"}], ";", "   ", 
               "\[IndentingNewLine]", 
               RowBox[{"h", "=", 
                RowBox[{"j", "+", "3"}]}], ";", 
               RowBox[{"s", "=", "\"\<\>\""}], ";", 
               RowBox[{"Goto", "[", "avz", "]"}]}]}], "]"}]}]}], "]"}], ";", 
         " ", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"v", ",", 
           RowBox[{"s", "<>", 
            RowBox[{"StringTake", "[", 
             RowBox[{"y", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", " ", 
                RowBox[{"-", "1"}]}], "}"}]}], "]"}]}]}], "]"}], ";", " ", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Quiet", "[", 
                RowBox[{"StringTake", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], "===", 
               "\"\<, \>\""}], ",", 
              RowBox[{"StringTake", "[", 
               RowBox[{"#", ",", 
                RowBox[{"{", 
                 RowBox[{"3", ",", " ", 
                  RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "#"}], "]"}], 
            "&"}], ",", "v"}], "]"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Map3", "[", 
           RowBox[{"StringJoin", ",", "#", ",", 
            RowBox[{"{", 
             RowBox[{"\"\< := \>\"", ",", "\"\< = \>\""}], "}"}]}], "]"}], 
          "&"}], ",", "b"}], "]"}], "]"}]}], ";", " ", 
     RowBox[{"c", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringReplace", "[", 
          RowBox[{"#", ",", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Rule", "[", 
               RowBox[{"#", ",", "\"\<\>\""}], "]"}], "&"}], ",", "c"}], 
            "]"}]}], "]"}], "&"}], ",", "a"}], "]"}]}], ";", " ", 
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"p", "=", 
         RowBox[{"c", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SuffPref", "[", 
           RowBox[{"p", ",", "\"\<Module[{\>\"", ",", "1"}], "]"}], ",", 
          RowBox[{"t", "=", "8"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"SuffPref", "[", 
             RowBox[{"p", ",", "\"\<Block[{\>\"", ",", "1"}], "]"}], ",", 
            RowBox[{"t", "=", "7"}], ",", 
            RowBox[{
             RowBox[{"t", "=", "0"}], ";", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"d", ",", "\"\<Function\>\""}], "]"}]}]}], "]"}]}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"t", "\[NotEqual]", "0"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"d", ",", 
            RowBox[{
             RowBox[{"SubStrSymbolParity1", "[", 
              RowBox[{
               RowBox[{"StringTake", "[", 
                RowBox[{"p", ",", 
                 RowBox[{"{", 
                  RowBox[{"t", ",", " ", 
                   RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "\"\<{\>\"", 
               ",", "\"\<}\>\""}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "]"}], ";", 
        RowBox[{"Continue", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"d", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringReplace", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<{\>\"", "->", "\"\<{$$90$$\>\""}], ",", 
             RowBox[{"\"\<, \>\"", "->", "\"\<, $$90$$\>\""}], ",", 
             RowBox[{"\"\<= \>\"", "->", "\"\<= $$90$$\>\""}]}], "}"}]}], 
          "]"}], "&"}], ",", "d"}], "]"}]}], ";", " ", 
     RowBox[{"d", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<Function\>\"", ",", "\"\<{}\>\""}], "}"}], ",", 
             "#"}], "]"}], ",", "#", ",", 
           RowBox[{"Sg", "[", 
            RowBox[{"StringTake", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{"2", ",", " ", 
                RowBox[{"-", "2"}]}], "}"}]}], "]"}], "]"}]}], "]"}], "&"}], 
        ",", "d"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"FreeQ", "[", 
            RowBox[{
             RowBox[{"Quiet", "[", 
              RowBox[{"ToExpression", "[", "#", "]"}], "]"}], ",", 
             "$Failed"}], "]"}], ",", "#", ",", 
           RowBox[{"StringJoin1", "[", "#", "]"}]}], "]"}], "&"}], ",", "d"}],
        "]"}]}], ";", " ", 
     RowBox[{"d", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"#", "===", 
            RowBox[{"{", "\"\<\>\"", "}"}]}], ",", "\"\<{}\>\"", ",", "#"}], 
          "]"}], "&"}], ",", 
        RowBox[{"Mapp", "[", 
         RowBox[{"StringReplace", ",", "d", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<$$90$$\>\"", "->", "\"\<\>\""}], ",", 
            RowBox[{"\"\<\\\\\>\"", "->", "\"\<\>\""}]}], "}"}]}], "]"}]}], 
       "]"}]}], ";", " ", 
     RowBox[{"Map", "[", 
      RowBox[{"ClearAll", ",", 
       RowBox[{"Names", "[", "\"\<`$$90$$*\>\"", "]"}]}], "]"}], ";", "  ", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", "R", "}"}], "\[NotEqual]", 
         RowBox[{"{", "}"}]}], "&&", 
        RowBox[{"!", 
         RowBox[{"HowAct", "[", "R", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Sv", "[", "y_List", "]"}], ":=", 
         RowBox[{"Map", "[", 
          RowBox[{"Flatten", ",", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"q", "=", 
                  RowBox[{"StringPosition", "[", 
                   RowBox[{"#", ",", "\"\< = \>\""}], "]"}]}], ",", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"q", "\[Equal]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{"#", ",", "\"\<No\>\""}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"StringTake", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"q", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
                    "]"}], ",", 
                    RowBox[{"StringTake", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"q", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "}"}]}], "]"}]}], 
                "}"}], "[", 
               RowBox[{"[", 
                RowBox[{"2", ";;", 
                 RowBox[{"-", "1"}]}], "]"}], "]"}], "&"}], ",", "y"}], 
            "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", " ", 
        RowBox[{"R", "=", 
         RowBox[{"{", "}"}]}], ";", " ", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"R", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"ListQ", "[", 
               RowBox[{"d", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "]"}], ",", 
              RowBox[{"Sv", "[", 
               RowBox[{"d", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "]"}], ",", 
              RowBox[{"d", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", 
            RowBox[{"Length", "[", "d", "]"}]}], "}"}]}], "]"}], ";", " ", 
        RowBox[{"R", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"ListQ", "[", 
            RowBox[{"HeadPF", "[", "x", "]"}], "]"}], ",", "R", ",", 
           RowBox[{"R", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], ",", "Null"}], "]"}],
      ";", " ", 
     RowBox[{"d", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "d", "]"}], "\[Equal]", "1"}], ",", 
        RowBox[{"Flatten", "[", "d", "]"}], ",", "d"}], "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"d", "==", 
        RowBox[{"{", "\"\<{}\>\"", "}"}]}], ",", 
       RowBox[{"{", "}"}], ",", "d"}], "]"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Locals1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Locals1", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", "c", ",", 
      RowBox[{"k", "=", "1"}], ",", "kr"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"kr", "[", 
       RowBox[{"y_", "/;", 
        RowBox[{"ListQ", "[", "y", "]"}]}], "]"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"d", "=", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"v", "=", 
           RowBox[{"Flatten", "[", "y", "]"}]}], ",", 
          RowBox[{"j", "=", "1"}]}], "}"}], ",", 
        RowBox[{
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{"j", "\[LessEqual]", 
            RowBox[{
             RowBox[{"Length", "[", "v", "]"}], "/", "2"}]}], ",", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"d", ",", 
              RowBox[{"v", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"2", "*", "j"}], "-", "1"}], "]"}], "]"}]}], "]"}], 
            ";", 
            RowBox[{"j", "++"}]}]}], "]"}], ";", "d"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ClearAll", "[", "a", "]"}], ";", 
     RowBox[{"Locals", "[", 
      RowBox[{"x", ",", "a"}], "]"}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"NestListQ1", "[", "a", "]"}], ",", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{"k", ",", 
          RowBox[{"k", "\[LessEqual]", 
           RowBox[{"Length", "[", "a", "]"}]}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{
           RowBox[{"c", "=", 
            RowBox[{"a", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"b", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\"\<{}\>\"", ",", "\"\<Function\>\""}], "}"}], ",",
                  "c"}], "]"}], ",", "c", ",", 
               RowBox[{"kr", "[", "c", "]"}]}], "]"}]}], "]"}]}]}], "]"}], 
        ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"StringQ", "[", 
           RowBox[{"PureDefinition", "[", "x", "]"}], "]"}], ",", 
          RowBox[{"Flatten", "[", "b", "]"}], ",", "b"}], "]"}]}], ",", 
       RowBox[{"kr", "[", "a", "]"}]}], "]"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Locals2`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Locals2", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"QBlockMod", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", "d", ",", "p", ",", "h", ",", "q", ",", 
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"g", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"HeadPF", "[", "x", "]"}], "}"}], "]"}]}], ",", "Sv"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"c", ",", 
          RowBox[{
           RowBox[{"d", "=", 
            RowBox[{"StringReplace", "[", 
             RowBox[{
              RowBox[{"a", "[", 
               RowBox[{"[", "k", "]"}], "]"}], ",", 
              RowBox[{"Mapp", "[", 
               RowBox[{"Rule", ",", 
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"b", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "<>", "\"\< := \>\"", "<>",
                     "#"}], "&"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"\"\<Module[\>\"", ",", "\"\<Block[\>\""}], 
                   "}"}]}], "]"}], ",", "\"\<\>\""}], "]"}], ",", "1"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Quiet", "[", 
            RowBox[{
             RowBox[{"SubStrSymbolParity", "[", 
              RowBox[{"d", ",", "\"\<{\>\"", ",", "\"\<}\>\"", ",", "1"}], 
              "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}], "]"}]}]}], "]"}], ";", 
        RowBox[{"k", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Sv", "[", "y_List", "]"}], ":=", 
      RowBox[{"Map", "[", 
       RowBox[{"Flatten", ",", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"q", "=", 
               RowBox[{"StringPosition", "[", 
                RowBox[{"#", ",", "\"\< = \>\""}], "]"}]}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"q", "\[Equal]", 
                 RowBox[{"{", "}"}]}], ",", "#", ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"StringTake", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"q", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
                    "]"}], ",", 
                   RowBox[{"StringTake", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"q", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "}"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], "[", 
            RowBox[{"[", 
             RowBox[{"2", ";;", 
              RowBox[{"-", "1"}]}], "]"}], "]"}], "&"}], ",", "y"}], "]"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"Locals", "[", "x", "]"}]}], ";", " ", 
     RowBox[{"c", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NestListQ1", "[", "c", "]"}], ",", "c", ",", 
        RowBox[{"{", "c", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", " ", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"g", ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"ListQ", "[", 
              RowBox[{"c", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "]"}], ",", 
             RowBox[{"Quiet", "[", 
              RowBox[{"Check", "[", 
               RowBox[{
                RowBox[{"Sv", "[", 
                 RowBox[{"c", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], "]"}], ",", 
                RowBox[{"c", "[", 
                 RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "]"}], ",", 
             RowBox[{"c", "[", 
              RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{"Length", "[", "c", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"g", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "b", "]"}], ">", "1"}], ",", "g", ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"g", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], ">", "1"}], ",", 
          RowBox[{"g", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"g", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"StringQ", "[", "g", "]"}], ",", 
       RowBox[{"{", "g", "}"}], ",", "g"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Locals3`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Locals3", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"BlockFuncModQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"HeadPF", "[", "x", "]"}], "}"}], "]"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", "d", ",", "h", ",", "q", ",", 
      RowBox[{"g", "=", 
       RowBox[{"{", "}"}]}], ",", "S"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"d", "=", 
         RowBox[{"StringReplace", "[", 
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"[", "k", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"b", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "<>", "\"\< := \>\""}], "->", 
              "\"\<\>\""}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"b", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "<>", "\"\< = \>\""}], "->", 
              "\"\<\>\""}]}], " ", "}"}], ",", "1"}], "]"}]}], ";", 
        RowBox[{"h", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"SuffPref", "[", 
            RowBox[{"d", ",", 
             RowBox[{"{", 
              RowBox[{"\"\<Module[\>\"", ",", "\"\<Block[\>\""}], "}"}], ",", 
             "1"}], "]"}], ",", 
           RowBox[{"StringTrim", "[", 
            RowBox[{"d", ",", 
             RowBox[{"{", 
              RowBox[{"\"\<Module[\>\"", ",", "\"\<Block[\>\""}], "}"}]}], 
            "]"}], ",", "\"\<Function\>\""}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"c", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"h", "==", "\"\<Function\>\""}], ",", "\"\<Function\>\"", 
            ",", 
            RowBox[{"CorrectSubString", "[", 
             RowBox[{"h", ",", "1"}], "]"}]}], "]"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{"Length", "[", "a", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<Function\>\"", ",", "\"\<{}\>\""}], "}"}], ",", 
             "#"}], "]"}], ",", "#", ",", 
           RowBox[{"StringToList", "[", 
            RowBox[{"StringTake", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{"2", ",", 
                RowBox[{"-", "2"}]}], "}"}]}], "]"}], "]"}]}], "]"}], "&"}], 
        ",", "c"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"S", "[", "y_", "]"}], ":=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"q", "=", 
             RowBox[{"StringPosition", "[", 
              RowBox[{"#", ",", "\"\< = \>\""}], "]"}]}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"q", "\[Equal]", 
               RowBox[{"{", "}"}]}], ",", "#", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"StringTake", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"q", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
                 "]"}], ",", 
                RowBox[{"StringTake", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"q", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "}"}]}], "]"}]}], 
           "}"}], "[", 
          RowBox[{"[", 
           RowBox[{"2", ";;", 
            RowBox[{"-", "1"}]}], "]"}], "]"}], "&"}], ",", "y"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"g", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<Function\>\"", ",", "\"\<{}\>\""}], "}"}], ",", 
             RowBox[{"c", "[", 
              RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ",", 
           RowBox[{"c", "[", 
            RowBox[{"[", "k", "]"}], "]"}], ",", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", 
             RowBox[{"S", "[", 
              RowBox[{"c", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "]"}]}], "]"}]}], "]"}]}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{"Length", "[", "c", "]"}]}], "}"}]}], "]"}], ";", 
     RowBox[{"Flatten", "[", 
      RowBox[{"g", ",", 
       RowBox[{
        RowBox[{"LevelsList", "[", "g", "]"}], "-", "1"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SyntCorProcQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SyntCorProcQ", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"BlockModQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"d", ",", "h", ",", 
      RowBox[{"c", "=", "$KrArt$"}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"PureDefinition", "[", "x", "]"}]}], ",", 
      RowBox[{"a", "=", 
       RowBox[{"HeadPF", "[", "x", "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"ClearAll", "[", "$KrArt$", "]"}], ";", 
     RowBox[{"$KrArt$", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"ProcFuncTypeQ", "[", 
         RowBox[{"ToString", "[", "x", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"h", "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"Check", "[", 
        RowBox[{
         RowBox[{"Locals2", "[", "x", "]"}], ",", 
         RowBox[{"Locals1", "[", "x", "]"}]}], "]"}], "]"}]}], ";", " ", 
     RowBox[{"h", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"h", "===", 
         RowBox[{"{", "}"}]}], ",", "\"\<{}\>\"", ",", 
        RowBox[{"ToString", "[", "h", "]"}]}], "]"}]}], ";", " ", 
     RowBox[{"d", "=", 
      RowBox[{
      "a", "<>", "\"\< := \>\"", "<>", "$KrArt$", "<>", "\"\<[\>\"", "<>", 
       "h"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d", "=", 
      RowBox[{"StringReplace", "[", 
       RowBox[{"b", ",", 
        RowBox[{"d", "->", "\"\<\>\""}], ",", "1"}], "]"}]}], ";", " ", 
     RowBox[{"$KrArt$", "=", "c"}], ";", 
     RowBox[{"!", 
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<]\>\"", ",", "\"\<, Null]\>\""}], "}"}], ",", "d"}], 
       "]"}]}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{"Begin", "[", "\"\<`Subs`\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"Subs", "[", 
   RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"d", ",", 
      RowBox[{"k", "=", "2"}], ",", "subs"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"subs", "[", 
       RowBox[{"m_", ",", "n_", ",", "p_"}], "]"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "b", ",", "c", ",", "h", ",", "t"}], "}"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"HowAct", "[", "n", "]"}]}], ",", 
          RowBox[{"m", "/.", 
           RowBox[{"n", "\[Rule]", "p"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", ",", "b", ",", "c", ",", "h"}], "}"}], "=", 
            RowBox[{"First", "[", 
             RowBox[{"{", 
              RowBox[{"Map", "[", 
               RowBox[{"ToString", ",", 
                RowBox[{"Map", "[", 
                 RowBox[{"InputForm", ",", 
                  RowBox[{"{", 
                   RowBox[{"m", ",", "n", ",", "p", ",", 
                    RowBox[{"1", "/", "n"}]}], "}"}]}], "]"}]}], "]"}], "}"}],
              "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"t", "=", 
            RowBox[{"Simplify", "[", 
             RowBox[{"ToExpression", "[", 
              RowBox[{"StringReplace", "[", 
               RowBox[{
                RowBox[{"StringReplace", "[", 
                 RowBox[{"a", ",", 
                  RowBox[{"b", "\[Rule]", 
                   RowBox[{"\"\<(\>\"", "<>", "c", "<>", "\"\<)\>\""}]}]}], 
                 "]"}], ",", 
                RowBox[{"h", "->", 
                 RowBox[{
                 "\"\<1/\>\"", "<>", "\"\<(\>\"", "<>", "c", "<>", 
                  "\"\<)\>\""}]}]}], "]"}], "]"}], "]"}]}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"t", "===", "m"}], ",", 
             RowBox[{"m", "/.", 
              RowBox[{"n", "\[Rule]", "p"}]}], ",", "t"}], "]"}]}]}], "]"}]}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"!", 
         RowBox[{"ListQ", "[", "y", "]"}]}], "&&", 
        RowBox[{"!", 
         RowBox[{"ListQ", "[", "z", "]"}]}]}], ",", 
       RowBox[{"subs", "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ListQ", "[", "y", "]"}], "&&", 
          RowBox[{"ListQ", "[", "z", "]"}], "&&", 
          RowBox[{
           RowBox[{"Length", "[", "y", "]"}], "\[Equal]", 
           RowBox[{"Length", "[", "z", "]"}]}]}], ",", 
         RowBox[{
          RowBox[{"d", "=", 
           RowBox[{"subs", "[", 
            RowBox[{"x", ",", 
             RowBox[{"y", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"z", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{"k", ",", 
            RowBox[{"k", "\[LessEqual]", 
             RowBox[{"Length", "[", "y", "]"}]}], ",", 
            RowBox[{"k", "++"}], ",", 
            RowBox[{"d", "=", 
             RowBox[{"subs", "[", 
              RowBox[{"d", ",", 
               RowBox[{"y", "[", 
                RowBox[{"[", "k", "]"}], "]"}], ",", 
               RowBox[{"z", "[", 
                RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}]}], "]"}], ";", 
          "d"}], ",", 
         RowBox[{"Defer", "[", 
          RowBox[{"Subs", "[", 
           RowBox[{"x", ",", "y", ",", "z"}], "]"}], "]"}]}], "]"}]}], 
      "]"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Subs1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Subs1", "[", 
   RowBox[{"x_", ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{
       RowBox[{"ListQ", "[", "y", "]"}], "&&", 
       RowBox[{
        RowBox[{"Length", "[", "y", "]"}], "\[Equal]", "2"}]}], "||", 
      RowBox[{"ListListQ", "[", "y", "]"}]}]}]}], "]"}], ":=", 
  RowBox[{"ToExpression", "[", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"ToString", "[", 
      RowBox[{"FullForm", "[", "x", "]"}], "]"}], ",", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"ToString", "[", 
          RowBox[{"FullForm", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "\[Rule]", 
         RowBox[{"ToString", "[", 
          RowBox[{"FullForm", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}]}], "&"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ListListQ", "[", "y", "]"}], ",", "y", ",", 
         RowBox[{"{", "y", "}"}]}], "]"}]}], "]"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Subs2`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Subs2", "[", 
   RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Numerator", "[", "y", "]"}], "\[Equal]", "1"}], "&&", 
     RowBox[{"!", 
      RowBox[{"SameQ", "[", 
       RowBox[{
        RowBox[{"Denominator", "[", "y", "]"}], ",", "1"}], "]"}]}]}], ",", 
    RowBox[{"Subs1", "[", 
     RowBox[{"x", ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "z"}], "}"}]}], "]"}], ",", 
    RowBox[{"Subs", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Subs1Q`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Subs1Q", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"SameQ", "[", 
   RowBox[{"x", ",", 
    RowBox[{"Subs1", "[", 
     RowBox[{
      RowBox[{"Subs1", "[", 
       RowBox[{"x", ",", "y"}], "]"}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"ListListQ", "[", "y", "]"}], ",", 
        RowBox[{"Map", "[", 
         RowBox[{"Reverse", ",", "y"}], "]"}], ",", 
        RowBox[{"Reverse", "[", "y", "]"}]}], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Substitution`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Substitution", "[", 
   RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"d", ",", 
      RowBox[{"k", "=", "2"}], ",", "subs", ",", "subs1"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"subs", "[", 
       RowBox[{"m_", ",", "n_", ",", "p_"}], "]"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "b", ",", "c", ",", "h", ",", "t"}], "}"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"HowAct", "[", "n", "]"}]}], ",", 
          RowBox[{"m", "/.", 
           RowBox[{"n", "\[Rule]", "p"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", ",", "b", ",", "c", ",", "h"}], "}"}], "=", 
            RowBox[{"First", "[", 
             RowBox[{"{", 
              RowBox[{"Map", "[", 
               RowBox[{"ToString", ",", 
                RowBox[{"Map", "[", 
                 RowBox[{"InputForm", ",", 
                  RowBox[{"{", 
                   RowBox[{"m", ",", "n", ",", "p", ",", 
                    RowBox[{"1", "/", "n"}]}], "}"}]}], "]"}]}], "]"}], "}"}],
              "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"t", "=", 
            RowBox[{"Simplify", "[", 
             RowBox[{"ToExpression", "[", 
              RowBox[{"StringReplace", "[", 
               RowBox[{
                RowBox[{"StringReplace", "[", 
                 RowBox[{"a", ",", 
                  RowBox[{"b", "\[Rule]", 
                   RowBox[{"\"\<(\>\"", "<>", "c", "<>", "\"\<)\>\""}]}]}], 
                 "]"}], ",", 
                RowBox[{"h", "->", 
                 RowBox[{
                 "\"\<1/\>\"", "<>", "\"\<(\>\"", "<>", "c", "<>", 
                  "\"\<)\>\""}]}]}], "]"}], "]"}], "]"}]}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"t", "===", "m"}], ",", 
             RowBox[{"m", "/.", 
              RowBox[{"n", "\[Rule]", "p"}]}], ",", "t"}], "]"}]}]}], "]"}]}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"subs1", "[", 
       RowBox[{"m_", ",", "n_", ",", "p_"}], "]"}], ":=", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"StringReplace", "[", 
        RowBox[{
         RowBox[{"ToString", "[", 
          RowBox[{"FullForm", "[", "m", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{"FullForm", "[", "n", "]"}], "]"}], "\[Rule]", 
          RowBox[{"ToString", "[", 
           RowBox[{"FullForm", "[", "p", "]"}], "]"}]}]}], "]"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"!", 
         RowBox[{"ListQ", "[", "y", "]"}]}], "&&", 
        RowBox[{"!", 
         RowBox[{"ListQ", "[", "z", "]"}]}]}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Numerator", "[", "y", "]"}], "\[Equal]", "1"}], "&&", 
          RowBox[{"!", 
           RowBox[{"SameQ", "[", 
            RowBox[{
             RowBox[{"Denominator", "[", "y", "]"}], ",", "1"}], "]"}]}]}], 
         ",", 
         RowBox[{"subs1", "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
         RowBox[{"subs", "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ListQ", "[", "y", "]"}], "&&", 
          RowBox[{"ListQ", "[", "z", "]"}], "&&", 
          RowBox[{
           RowBox[{"Length", "[", "y", "]"}], "\[Equal]", 
           RowBox[{"Length", "[", "z", "]"}]}]}], ",", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Numerator", "[", 
               RowBox[{"y", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", "1"}], "&&", 
             RowBox[{"!", 
              RowBox[{"SameQ", "[", 
               RowBox[{
                RowBox[{"Denominator", "[", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "1"}], 
               "]"}]}]}], ",", 
            RowBox[{"d", "=", 
             RowBox[{"subs1", "[", 
              RowBox[{"x", ",", 
               RowBox[{"y", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"z", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ",", 
            RowBox[{"d", "=", 
             RowBox[{"subs", "[", 
              RowBox[{"x", ",", 
               RowBox[{"y", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"z", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{"k", ",", 
            RowBox[{"k", "\[LessEqual]", 
             RowBox[{"Length", "[", "y", "]"}]}], ",", 
            RowBox[{"k", "++"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Numerator", "[", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], "]"}], "\[Equal]", "1"}], "&&", 
               RowBox[{"!", 
                RowBox[{"SameQ", "[", 
                 RowBox[{
                  RowBox[{"Denominator", "[", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "]"}], ",", "1"}], 
                 "]"}]}]}], ",", 
              RowBox[{"d", "=", 
               RowBox[{"subs1", "[", 
                RowBox[{"d", ",", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], ",", 
                 RowBox[{"z", "[", 
                  RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], ",", 
              RowBox[{"d", "=", 
               RowBox[{"subs", "[", 
                RowBox[{"d", ",", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], ",", 
                 RowBox[{"z", "[", 
                  RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}]}], "]"}]}], "]"}],
           ";", " ", "d"}], ",", 
         RowBox[{"Defer", "[", 
          RowBox[{"Substitution", "[", 
           RowBox[{"x", ",", "y", ",", "z"}], "]"}], "]"}]}], "]"}]}], 
      "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Substitution1`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Substitution1", "[", 
   RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"y1", ",", "z1", ",", "d", ",", 
      RowBox[{"k", "=", "2"}], ",", "subst"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"subst", "[", 
       RowBox[{"m_", ",", "n_", ",", "p_"}], "]"}], ":=", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"StringTake", "[", 
        RowBox[{
         RowBox[{"StringReplace", "[", 
          RowBox[{
           RowBox[{"ToString1", "[", 
            RowBox[{"ReplaceAll", "[", 
             RowBox[{
              RowBox[{"HoldAll", "[", "m", "]"}], ",", 
              RowBox[{"n", "\[Rule]", "p"}]}], "]"}], "]"}], ",", 
           RowBox[{"\"\<HoldAll[\>\"", "->", "\"\<\>\""}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "2"}]}], "}"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"y1", ",", "z1"}], "}"}], "=", 
      RowBox[{"Map", "[", 
       RowBox[{"Flatten", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "y", "}"}], ",", 
          RowBox[{"{", "z", "}"}]}], "}"}]}], "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ListQ", "[", "y1", "]"}], "&&", 
        RowBox[{"ListQ", "[", "z1", "]"}], "&&", 
        RowBox[{
         RowBox[{"Length", "[", "y1", "]"}], "\[Equal]", 
         RowBox[{"Length", "[", "z1", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"d", "=", 
         RowBox[{"subst", "[", 
          RowBox[{"x", ",", 
           RowBox[{"y1", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"z1", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{"k", ",", 
          RowBox[{"k", "\[LessEqual]", 
           RowBox[{"Length", "[", "y1", "]"}]}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{"d", "=", 
           RowBox[{"subst", "[", 
            RowBox[{"d", ",", 
             RowBox[{"y1", "[", 
              RowBox[{"[", "k", "]"}], "]"}], ",", 
             RowBox[{"z1", "[", 
              RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}]}], "]"}], ";", " ", 
        "d"}], ",", 
       RowBox[{"Defer", "[", 
        RowBox[{"Substitution1", "[", 
         RowBox[{"x", ",", "y", ",", "z"}], "]"}], "]"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Integrate2`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Integrate2", "[", 
   RowBox[{"x_", ",", "y__"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Unique", "[", "\"\<gs\>\"", "]"}], "&"}], ",", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"{", "y", "}"}], "]"}]}], "]"}]}], "]"}]}], ",", "d"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"Riffle", "[", 
       RowBox[{
        RowBox[{"{", "y", "}"}], ",", "c"}], "]"}]}], ";", 
     RowBox[{"a", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"{", "y", "}"}], "]"}], "\[Equal]", "1"}], ",", "a", ",", 
        RowBox[{"Partition", "[", 
         RowBox[{"a", ",", "2"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"d", "=", 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{"Subs1", "[", 
         RowBox[{"x", ",", "a"}], "]"}], ",", 
        RowBox[{"Sequences", "[", "c", "]"}]}], "]"}]}], ";", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Simplify", "[", 
         RowBox[{"Subs1", "[", 
          RowBox[{"d", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"ListListQ", "[", "a", "]"}], ",", 
             RowBox[{"Map", "[", 
              RowBox[{"Reverse", ",", "a"}], "]"}], ",", 
             RowBox[{"Reverse", "[", "a", "]"}]}], "]"}]}], "]"}], "]"}], ",", 
        RowBox[{"Map", "[", 
         RowBox[{"Remove", ",", "c"}], "]"}]}], "}"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Diff1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Diff1", "[", 
   RowBox[{"x_", ",", "y__"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Unique", "[", "\"\<gs\>\"", "]"}], "&"}], ",", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"{", "y", "}"}], "]"}]}], "]"}]}], "]"}]}], ",", "d"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"Riffle", "[", 
       RowBox[{
        RowBox[{"{", "y", "}"}], ",", "c"}], "]"}]}], ";", 
     RowBox[{"a", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"{", "y", "}"}], "]"}], "\[Equal]", "1"}], ",", "a", ",", 
        RowBox[{"Partition", "[", 
         RowBox[{"a", ",", "2"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"d", "=", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"Subs1", "[", 
         RowBox[{"x", ",", "a"}], "]"}], ",", 
        RowBox[{"Sequences", "[", "c", "]"}]}], "]"}]}], ";", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Simplify", "[", 
         RowBox[{"Subs1", "[", 
          RowBox[{"d", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"ListListQ", "[", "a", "]"}], ",", 
             RowBox[{"Map", "[", 
              RowBox[{"Reverse", ",", "a"}], "]"}], ",", 
             RowBox[{"Reverse", "[", "a", "]"}]}], "]"}]}], "]"}], "]"}], ",", 
        RowBox[{"Map", "[", 
         RowBox[{"Remove", ",", "c"}], "]"}]}], "}"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Diff2`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Diff2", "[", 
   RowBox[{"x_", ",", "y__"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "x"}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "y", "}"}]}], ",", "c", ",", "k"}], "}"}], ",", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{"Substitution1", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"Substitution1", "[", 
             RowBox[{"a", ",", 
              RowBox[{"b", "[", 
               RowBox[{"[", "k", "]"}], "]"}], ",", "c"}], "]"}], ",", "c"}], 
           "]"}], ",", "c", ",", 
          RowBox[{"b", "[", 
           RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{"Length", "[", "b", "]"}]}], "}"}]}], "]"}], ";", 
     RowBox[{"Simplify", "[", "a", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SubsList`\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"SubsList", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"ListQ", "[", "x", "]"}]}], ",", "y_", ",", "z_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"FromCharacterCode", "[", "2016", "]"}]}], ",", "b", ",", "c", 
      ",", "d"}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ToString1", "[", "#", "]"}], "<>", "a"}], "&"}], ",", 
         "x"}], "]"}], "]"}]}], ";", " ", 
     RowBox[{"c", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringJoin", "[", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"ToString1", "[", "#", "]"}], "<>", "a"}], "&"}], ",", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", "#1", "}"}], "]"}]}], "]"}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "z"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"c", "=", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"StringSplit", "[", 
        RowBox[{
         RowBox[{"SubsString", "[", 
          RowBox[{"b", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"c", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"c", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ",", "a"}], 
        "]"}], "]"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "c", "]"}], "\[Equal]", "1"}], ",", 
       RowBox[{"c", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "c"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`BlockQ`\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BlockQ", "[", "x_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SymbolQ", "[", "x", "]"}], ",", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "$Failed"}], "]"}]}], ",", 
       "b"}], "}"}], ",", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"$Failed", ",", "\"\<System\>\""}], "}"}], ",", "a"}], 
        "]"}], ",", "False", ",", " ", 
       RowBox[{
        RowBox[{"b", " ", "=", 
         RowBox[{"Map14", "[", 
          RowBox[{"StringJoin", ",", 
           RowBox[{"{", 
            RowBox[{"\"\< := \>\"", ",", "\"\< = \>\""}], "}"}], ",", 
           "\"\<Block[{\>\""}], "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SuffPref", "[", 
           RowBox[{"a", ",", 
            RowBox[{"Map3", "[", 
             RowBox[{"StringJoin", ",", 
              RowBox[{"HeadPF", "[", "x", "]"}], ",", "b"}], "]"}], ",", 
            "1"}], "]"}], ",", "True", ",", "False"}], "]"}]}]}], "]"}]}], 
    "]"}]}], " "}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`BlockQ1`\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"BlockQ1", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"SymbolQ", "[", "x", "]"}], "&&", 
     RowBox[{
      RowBox[{"TestBFM", "[", "x", "]"}], "===", "\"\<Block\>\""}]}], ",", 
    "True", ",", "False"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SymbolToList`\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"SymbolToList", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"SymbolQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Map", "[", 
   RowBox[{"ToExpression", ",", 
    RowBox[{"Characters", "[", 
     RowBox[{"ToString", "[", "x", "]"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Nconcat`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nconcat", "[", 
   RowBox[{"h_", "/;", 
    RowBox[{
     RowBox[{"PosIntQ", "[", "h", "]"}], "||", 
     RowBox[{"PosIntListQ", "[", 
      RowBox[{"Flatten", "[", "h", "]"}], "]"}]}]}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"PosIntQ", "[", "h", "]"}], ",", "h", ",", 
    RowBox[{"ToExpression", "[", 
     RowBox[{"StringJoin", "[", 
      RowBox[{"ToString2", "[", 
       RowBox[{"Flatten", "[", "h", "]"}], "]"}], "]"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`FreeQ1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FreeQ1", "[", 
   RowBox[{"ex1_", ",", "ex2_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "h", "}"}], ",", 
    RowBox[{"Quiet", "[", 
     RowBox[{"FreeQ", "[", 
      RowBox[{
       RowBox[{"Subs", "[", 
        RowBox[{"ex1", ",", "ex2", ",", 
         RowBox[{"h", "=", 
          RowBox[{"Unique", "[", "\"\<ArtKr\>\"", "]"}]}]}], "]"}], ",", 
       "h"}], "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`FreeQ2`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FreeQ2", "[", 
   RowBox[{"x_", ",", "p_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"ListQ", "[", "p", "]"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Map10", "[", 
         RowBox[{"FreeQ", ",", "x", ",", "p"}], "]"}], "]"}], "===", 
       RowBox[{"{", "True", "}"}]}], ",", "True", ",", "False"}], "]"}], ",", 
    RowBox[{"FreeQ", "[", 
     RowBox[{"x", ",", "p"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Uprocs`\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"Uprocs", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "a", ",", "b", ",", "c", ",", "d", ",", "h", ",", "g", ",", "k", ",", 
      "t1", ",", "t2"}], "}"}], ",", 
    RowBox[{
     RowBox[{"a", ":=", "\"\<_$Art27_Kr20$_.txt\>\""}], ";", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"c", ",", "g"}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", "}"}]}], "}"}]}], ";", 
     RowBox[{"Save", "[", 
      RowBox[{"a", ",", "\"\<`*\>\""}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"b", ":=", 
      RowBox[{"Map", "[", 
       RowBox[{"ToString", ",", 
        RowBox[{"Flatten", "[", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"ReadList", "[", 
           RowBox[{"a", ",", "String"}], "]"}], "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "b", "]"}]}], ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"StringCount", "[", 
              RowBox[{
               RowBox[{"First", "[", 
                RowBox[{"b", "[", 
                 RowBox[{"[", 
                  RowBox[{"{", "k", "}"}], "]"}], "]"}], "]"}], ",", 
               "\"\< := Module[{\>\""}], "]"}], "\[NotEqual]", "0"}], "&&", 
            RowBox[{
             RowBox[{"StringTake", "[", 
              RowBox[{
               RowBox[{"First", "[", 
                RowBox[{"b", "[", 
                 RowBox[{"[", 
                  RowBox[{"{", "k", "}"}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"{", "1", "}"}]}], "]"}], "\[NotEqual]", 
             "\"\< \>\""}]}], "||", 
           RowBox[{
            RowBox[{
             RowBox[{"StringCount", "[", 
              RowBox[{
               RowBox[{"First", "[", 
                RowBox[{"b", "[", 
                 RowBox[{"[", 
                  RowBox[{"{", "k", "}"}], "]"}], "]"}], "]"}], ",", 
               "\"\< := Block[{\>\""}], "]"}], "\[NotEqual]", "0"}], "&&", 
            RowBox[{
             RowBox[{"StringTake", "[", 
              RowBox[{
               RowBox[{"First", "[", 
                RowBox[{"b", "[", 
                 RowBox[{"[", 
                  RowBox[{"{", "k", "}"}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"{", "1", "}"}]}], "]"}], "\[NotEqual]", 
             "\"\< \>\""}]}]}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"c", ",", 
            RowBox[{"First", "[", 
             RowBox[{"b", "[", 
              RowBox[{"[", 
               RowBox[{"{", "k", "}"}], "]"}], "]"}], "]"}]}], "]"}], ",", 
          "Null"}], "]"}], ";", " ", 
        RowBox[{"k", "=", 
         RowBox[{"k", "+", "1"}]}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "c", "]"}]}], ",", 
       RowBox[{
        RowBox[{"d", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"First", "[", 
           RowBox[{"c", "[", 
            RowBox[{"[", 
             RowBox[{"{", "k", "}"}], "]"}], "]"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"h", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Symbol", "[", 
           RowBox[{"StringTake", "[", 
            RowBox[{"d", ",", 
             RowBox[{
              RowBox[{"First", "[", 
               RowBox[{"First", "[", 
                RowBox[{"StringPosition", "[", 
                 RowBox[{"d", ",", "\"\<[\>\""}], "]"}], "]"}], "]"}], "-", 
              "1"}]}], "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"t1", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"StringCount", "[", 
             RowBox[{"d", ",", "\"\< := Module[{\>\""}], "]"}], "\[NotEqual]",
             "0"}], ",", "Module", ",", "Block"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"t2", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"StringTake", "[", 
           RowBox[{"d", ",", 
            RowBox[{"Last", "[", 
             RowBox[{"First", "[", 
              RowBox[{"StringPosition", "[", 
               RowBox[{"d", ",", "\"\<]\>\""}], "]"}], "]"}], "]"}]}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"BlockModQ", "[", "h", "]"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"g", ",", 
            RowBox[{"{", 
             RowBox[{"h", ",", "t2", ",", "t1"}], "}"}]}], "]"}], ",", 
          "Null"}], "]"}], ";", 
        RowBox[{"k", "=", 
         RowBox[{"k", "+", "1"}]}]}]}], "]"}], ";", " ", 
     RowBox[{"DeleteFile", "[", "a", "]"}], ";", "g"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ActCsProcFunc`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ActCsProcFunc", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Names", "[", "\"\<Global`*\>\"", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "\"\<Procedure\>\"", "}"}]}], ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "\"\<Function\>\"", "}"}]}], ",", 
      RowBox[{"h", "=", 
       RowBox[{"{", "}"}]}], ",", "d", ",", 
      RowBox[{"k", "=", "1"}], ",", "t", ",", "v"}], "}"}], ",", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"TemporaryQ", "[", "#", "]"}], "||", 
           RowBox[{
            RowBox[{"HeadPF", "[", "#", "]"}], "===", "#"}]}], ",", "Null", 
          ",", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"h", ",", 
             RowBox[{"ToString", "[", 
              RowBox[{"t", "=", 
               RowBox[{"Unique", "[", "\"\<g\>\"", "]"}]}], "]"}]}], "]"}], 
           ";", 
           RowBox[{"v", "=", 
            RowBox[{"BlockFuncModQ", "[", 
             RowBox[{"#", ",", "t"}], "]"}]}], ";", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"v", "&&", 
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"\"\<Block\>\"", ",", "\"\<Module\>\""}], "}"}], ",",
                 "t"}], "]"}]}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"b", ",", 
               RowBox[{"{", 
                RowBox[{"#", ",", 
                 RowBox[{"HeadPF", "[", "#", "]"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"v", "&&", 
                RowBox[{"t", "===", "\"\<Function\>\""}]}], ",", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"c", ",", 
                 RowBox[{"{", 
                  RowBox[{"#", ",", 
                   RowBox[{"HeadPF", "[", "#", "]"}]}], "}"}]}], "]"}]}], 
              "]"}]}], "]"}]}]}], "]"}], "&"}], ",", "a"}], "]"}], ";", " ", 
     RowBox[{"Map", "[", 
      RowBox[{"Remove", ",", "h"}], "]"}], ";", " ", 
     RowBox[{"{", 
      RowBox[{"b", ",", "c"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`TemporaryQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TemporaryQ", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"SymbolQ", "[", "x", "]"}], ",", 
    RowBox[{"MemberQ", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<Attributes[\>\"", "<>", 
         RowBox[{"ToString", "[", "x", "]"}], "<>", " ", 
         "\"\<] = {Temporary}\>\""}], ",", "\"\<Null\>\""}], "}"}], ",", 
      RowBox[{"ToString", "[", 
       RowBox[{"Definition", "[", "x", "]"}], "]"}]}], "]"}], ",", "False"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ListOp`\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"ListOp", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"ListQ", "[", "x", "]"}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{"ListQ", "[", "y", "]"}]}], ",", 
    RowBox[{"z_", "/;", 
     RowBox[{"HowAct", "[", "z", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Length", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Length", "[", "y", "]"}]}], ",", "c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"c", "=", 
      RowBox[{"Min", "[", 
       RowBox[{"a", ",", "b"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", "c"}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{"d", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"d", ",", 
          RowBox[{"z", "[", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "k", "]"}], "]"}], ",", 
            RowBox[{"y", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], "]"}]}]}], "]"}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{"d", ",", 
        RowBox[{"x", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"c", "+", "1"}], ";;", 
           RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
        RowBox[{"y", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"c", "+", "1"}], ";;", 
           RowBox[{"-", "1"}]}], "]"}], "]"}]}], "}"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ListTrim`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListTrim", "[", 
   RowBox[{
    RowBox[{"L_", "/;", 
     RowBox[{"ListQ", "[", "L", "]"}]}], ",", "expr_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", "expr", "}"}], "]"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"j", "=", 
       RowBox[{"Length", "[", "L", "]"}]}]}], "}"}], ",", " ", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "L", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"a", ",", 
            RowBox[{"L", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], ",", 
         RowBox[{"Break", "[", "]"}]}], "]"}]}], "]"}], ";", " ", 
     RowBox[{"For", "[", 
      RowBox[{"j", ",", 
       RowBox[{"j", "\[GreaterEqual]", "1"}], ",", 
       RowBox[{"j", "--"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"a", ",", 
            RowBox[{"L", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], ",", 
         RowBox[{"Break", "[", "]"}]}], "]"}]}], "]"}], ";", 
     RowBox[{"L", "[", 
      RowBox[{"[", 
       RowBox[{"k", ";;", "j"}], "]"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ProcQ`\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"ProcQ", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"atr", "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"Attributes", "[", "x", "]"}], "]"}]}], ",", "b", ",", "c", 
      ",", "d", ",", "h"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"SymbolQ", "[", "x", "]"}]}], ",", "False", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SystemQ", "[", "x", "]"}], ",", "False", ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"UnevaluatedQ", "[", 
           RowBox[{"Definition2", ",", "x"}], "]"}], ",", "False", ",", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ListQ", "[", "atr", "]"}], "&&", 
              RowBox[{"atr", "\[NotEqual]", 
               RowBox[{"{", "}"}]}]}], ",", 
             RowBox[{"ClearAllAttributes", "[", "x", "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"a", "=", 
            RowBox[{"StringReplace", "[", 
             RowBox[{
              RowBox[{"ToString", "[", 
               RowBox[{"InputForm", "[", 
                RowBox[{"Definition", "[", "x", "]"}], "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Context", "[", "x", "]"}], "<>", 
                RowBox[{"ToString", "[", "x", "]"}], "<>", "\"\<`\>\""}], 
               "->", "\"\<\>\""}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Quiet", "[", 
            RowBox[{
             RowBox[{"b", "=", 
              RowBox[{"StringTake", "[", 
               RowBox[{"a", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", 
                  RowBox[{"First", "[", 
                   RowBox[{"First", "[", 
                    RowBox[{
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\< := Block[{\>\"", ",", "\"\< :=Block[{\>\""}], 
                    "}"}]}], "]"}], "-", "1"}], "]"}], "]"}]}], "}"}]}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"c", "=", 
              RowBox[{"StringTake", "[", 
               RowBox[{"a", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", 
                  RowBox[{"First", "[", 
                   RowBox[{"First", "[", 
                    RowBox[{
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\< := Module[{\>\"", ",", "\"\< :=Module[{\>\""}], 
                    "}"}]}], "]"}], "-", "1"}], "]"}], "]"}]}], "}"}]}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"d", "=", 
              RowBox[{"StringTake", "[", 
               RowBox[{"a", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", 
                  RowBox[{"First", "[", 
                   RowBox[{"First", "[", 
                    RowBox[{
                    RowBox[{"StringPosition", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\< := DynamicModule[{\>\"", ",", 
                    "\"\< :=DynamicModule[{\>\""}], "}"}]}], "]"}], "-", 
                    "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"b", "===", 
              RowBox[{"ToString", "[", 
               RowBox[{"HeadPF", "[", "x", "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"SetAttributes", "[", 
               RowBox[{"x", ",", "atr"}], "]"}], ";", " ", "True"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"c", "===", 
                RowBox[{"ToString", "[", 
                 RowBox[{"HeadPF", "[", "x", "]"}], "]"}]}], ",", 
               RowBox[{
                RowBox[{"SetAttributes", "[", 
                 RowBox[{"x", ",", "atr"}], "]"}], ";", "True"}], ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"d", "===", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"HeadPF", "[", "x", "]"}], "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"SetAttributes", "[", 
                   RowBox[{"x", ",", "atr"}], "]"}], ";", " ", "True"}], ",", 
                 RowBox[{
                  RowBox[{"SetAttributes", "[", 
                   RowBox[{"x", ",", "atr"}], "]"}], ";", " ", "False"}]}], 
                "]"}]}], "]"}]}], "]"}]}]}], "]"}]}], "]"}]}], "]"}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ProcQ1`\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"ProcQ1", "[", 
   RowBox[{"x_", ",", 
    RowBox[{"y___", "/;", 
     RowBox[{
      RowBox[{"y", "===", "Null"}], "||", 
      RowBox[{
       RowBox[{"SymbolQ", "[", "y", "]"}], "&&", 
       RowBox[{"!", 
        RowBox[{"HowAct", "[", "y", "]"}]}]}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"Check", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"PureDefinition", "[", "x", "]"}], "}"}], "]"}], ",", 
          "$Failed"}], "]"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"StringLength", "[", 
        RowBox[{"ToString", "[", "x", "]"}], "]"}]}], ",", "c", ",", 
      RowBox[{"g", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"Unique", "[", "\"\<agn\>\"", "]"}], "]"}]}], ",", 
      RowBox[{"h", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"p", "=", "$$$74"}], ",", 
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"t", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"v", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"SubsetQ", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"$Failed", ",", "\"\<System\>\""}], "}"}], ",", "a"}], "]"}],
       ",", "False", ",", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{"k", ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "a", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{
          RowBox[{"Clear", "[", "$$$74", "]"}], ";", " ", 
          RowBox[{"ToExpression", "[", 
           RowBox[{"g", "<>", 
            RowBox[{"StringTake", "[", 
             RowBox[{
              RowBox[{"a", "[", 
               RowBox[{"[", "k", "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"b", "+", "1"}], ",", 
                RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "]"}], ";", " ", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"h", ",", 
            RowBox[{"c", "=", 
             RowBox[{"ProcQ", "[", "g", "]"}]}]}], "]"}], ";", " ", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"v", ",", "g"}], "]"}], ";", 
          RowBox[{"BlockFuncModQ", "[", 
           RowBox[{"g", ",", "$$$74"}], "]"}], ";", " ", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"t", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"c", "&&", 
               RowBox[{"$$$74", "==", "\"\<Function\>\""}]}], ",", 
              "\"\<DynamicModule\>\"", ",", "$$$74"}], "]"}]}], "]"}], ";", 
          " ", 
          RowBox[{"g", "=", 
           RowBox[{"ToString", "[", 
            RowBox[{"Unique", "[", "\"\<agn\>\"", "]"}], "]"}]}]}]}], "]"}], 
       ";", " ", 
       RowBox[{"$$$74", "=", "p"}], ";", " ", 
       RowBox[{"Map", "[", 
        RowBox[{"Remove", ",", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"g", ",", "v"}], "}"}], "]"}]}], "]"}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "y", "}"}], "\[NotEqual]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"y", "=", 
          RowBox[{"{", 
           RowBox[{"h", ",", "t"}], "}"}]}], ",", "Null"}], "]"}], ";", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"DeleteDuplicates", "[", "h", "]"}], "\[Equal]", 
          RowBox[{"{", "True", "}"}]}], ",", "True", ",", "False"}], 
        "]"}]}]}], "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ProcBMQ`\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"ProcBMQ", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"BlockModQ", "[", "x", "]"}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", 
      RowBox[{"c", "=", "\"\< = \>\""}], ",", "d", ",", "p"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"SingleDefQ", "[", "x", "]"}]}], ",", 
      RowBox[{"\"\<Object <\>\"", "<>", 
       RowBox[{"ToString", "[", "x", "]"}], "<>", 
       "\"\<> has multiple definitions\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"ModuleQ", "[", "x", "]"}], ",", "True", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", ",", "b"}], "}"}], "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PureDefinition", "[", "x", "]"}], ",", 
            RowBox[{"Locals1", "[", "x", "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"d", "=", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], "&"}], ",", 
            RowBox[{"StringPosition", "[", 
             RowBox[{"a", ",", "c"}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"p", "=", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ExprOfStr", "[", 
              RowBox[{"a", ",", "#", ",", 
               RowBox[{"-", "1"}], ",", 
               RowBox[{"{", 
                RowBox[{"\"\< \>\"", ",", "\"\<{\>\"", ",", "\"\<[\>\""}], 
                "}"}]}], "]"}], "&"}], ",", "d"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"p", "=", 
          RowBox[{"DeleteDuplicates", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Map", "[", 
             RowBox[{"StrToList", ",", "p"}], "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", "y", "}"}], "\[NotEqual]", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"y", "=", 
            RowBox[{"MinusList", "[", 
             RowBox[{"b", ",", "p"}], "]"}]}], ",", "Null"}], "]"}], ";", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"p", "\[Equal]", "b"}], ",", "True", ",", "False"}], 
          "]"}]}]}], "]"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ProcFuncTypeQ`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ProcFuncTypeQ", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"StringQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", "p"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"ShortPureFuncQ", "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"True", ",", "\"\<ShortPureFunction\>\""}], "}"}], ",", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{
         RowBox[{"Definition2", "[", "x", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Options", "[", "x", "]"}], "\[Equal]", 
             RowBox[{"{", "}"}]}], ",", 
            RowBox[{"1", ";;", 
             RowBox[{"-", "2"}]}], ",", 
            RowBox[{"1", ";;", 
             RowBox[{"-", "3"}]}]}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SuffPref", "[", 
          RowBox[{"x", ",", "\"\<Function[{\>\"", ",", "1"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"True", ",", "\"\<PureFunction\>\""}], "}"}], ",", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"a", "===", 
            RowBox[{"Definition2", "[", "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"False", ",", "x", ",", "\"\<Expression\>\""}], "}"}], 
           ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"SysFuncQ", "[", "x", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"False", ",", "x", ",", "\"\<System\>\""}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"For", "[", 
               RowBox[{"k", ",", 
                RowBox[{"k", "\[LessEqual]", 
                 RowBox[{"Length", "[", "a", "]"}]}], ",", 
                RowBox[{"k", "++"}], ",", " ", 
                RowBox[{
                 RowBox[{"b", "=", 
                  RowBox[{"Map", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"StringSplit", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\< := \>\"", ",", "\"\< = \>\""}], "}"}]}], 
                    "]"}], "&"}], ",", "a"}], "]"}]}], ";", " ", 
                 RowBox[{"p", "=", 
                  RowBox[{
                   RowBox[{"b", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"SuffPref", "[", 
                    RowBox[{"p", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Compile[{\>\"", ",", "\"\<CompiledFunction[{\>\""}], 
                    "}"}], ",", "1"}], "]"}], ",", 
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"d", ",", "\"\<CompiledFunction\>\""}], "]"}], 
                   ",", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"SuffPref", "[", 
                    RowBox[{"p", ",", "\"\<Block[{\>\"", ",", "1"}], "]"}], 
                    ",", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"d", ",", "\"\<Block\>\""}], "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"SuffPref", "[", 
                    RowBox[{"p", ",", "\"\<Module[\>\"", ",", "1"}], "]"}], 
                    ",", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"d", ",", "\"\<Module\>\""}], "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"SuffPref", "[", 
                    RowBox[{"p", ",", "\"\<Function[{\>\"", ",", "1"}], "]"}],
                     ",", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"d", ",", "\"\<PureFunction\>\""}], "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"ShortPureFuncQ", "[", "p", "]"}], ",", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"d", ",", "\"\<ShortPureFunction\>\""}], "]"}], 
                    ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"PureFuncQ", "[", 
                    RowBox[{"ToExpression", "[", "x", "]"}], "]"}], ",", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"d", ",", "\"\<PureFunction\>\""}], "]"}], ",", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"d", ",", "\"\<Function\>\""}], "]"}]}], "]"}]}], 
                    "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}]}], "]"}], ";", 
              RowBox[{"{", 
               RowBox[{"True", ",", "d"}], "}"}]}]}], "]"}]}], "]"}]}], 
        "]"}]}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`$Line1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"$Line1", ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "\"\<\>\""}], ",", 
      RowBox[{"c", "=", "\"\<Out[\>\""}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "<", "Infinity"}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"a", "=", 
         RowBox[{"ToString", "[", 
          RowBox[{"Out", "[", "k", "]"}], "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"a", "==", 
           RowBox[{"c", "<>", 
            RowBox[{"ToString", "[", "k", "]"}], "<>", "\"\<]\>\""}]}], ",", 
          RowBox[{"Return", "[", "k", "]"}]}], "]"}]}]}], "]"}], ";", "k"}]}],
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`PackNames`\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"PackNames", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<m\>\"", ",", "\"\<nb\>\""}], "}"}], ",", 
       RowBox[{"FileExtension", "[", "x", "]"}]}], "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{
         RowBox[{"ReadFullFile", "[", "x", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\< \>\"", "->", "\"\<\>\""}], ",", 
           RowBox[{"\"\<\\n\>\"", "->", "\"\<\>\""}]}], "}"}]}], "]"}]}], ",",
       "b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"d", "=", "\"\<\>\""}], ",", 
      RowBox[{"k", "=", "1"}], ",", "j", ",", "h"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", "\"\<m\>\""}], 
      ",", 
      RowBox[{"Sort", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"StringTake", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", 
             RowBox[{"9", ",", 
              RowBox[{"-", "4"}]}], "}"}]}], "]"}], "&"}], ",", 
         RowBox[{"StringCases", "[", 
          RowBox[{"a", ",", 
           RowBox[{"Shortest", "[", 
            RowBox[{
            "\"\<Begin[\\\"`\>\"", "~~", "__", "~~", "\"\<`\\\"]\>\""}], 
            "]"}]}], "]"}]}], "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"b", "=", 
        RowBox[{"Quiet", "[", 
         RowBox[{"SubsString1", "[", 
          RowBox[{"a", ",", 
           RowBox[{"{", 
            RowBox[{
            "\"\<RowBox[{RowBox[{RowBox[{\>\"", ",", "\"\<\\\"::\\\"\>\"", 
             ",", "\"\<\\\"usage\\\"}]\>\""}], "}"}], ",", 
           RowBox[{
            RowBox[{"StringQ", "[", "#", "]"}], "&"}], ",", "0"}], "]"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"b", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"StringTake", "[", 
            RowBox[{"#", ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", 
               RowBox[{"-", "6"}]}], "}"}]}], "]"}], "&"}], ",", "b"}], 
         "]"}]}], ";", " ", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Sort", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"SymbolQ", "[", "#1", "]"}], ",", "#1"}], "]"}], "&"}],
             ")"}], "/@", "b"}], "]"}], ",", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"SameQ", "[", 
            RowBox[{"#", ",", "Null"}], "]"}]}], "&"}]}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`PackNames1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PackNames1", "[", 
   RowBox[{"x_", " ", "/;", " ", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "x", "]"}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
      "\"\<mx\>\""}]}]}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", " ", "=", " ", 
       RowBox[{"ReadFullFile", "[", "x", "]"}]}], ",", " ", 
      RowBox[{"b", "=", 
       RowBox[{"ContextFromMx", "[", "x", "]"}]}]}], "}"}], ",", " ", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"StringCases", "[", 
       RowBox[{"a", ",", " ", 
        RowBox[{"Shortest", "[", 
         RowBox[{"b", "~~", " ", "__", " ", "~~", " ", "\"\<`\>\""}], "]"}]}],
        "]"}]}], ";", 
     RowBox[{"a", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"a", ",", 
        RowBox[{
         RowBox[{"StringFreeQ", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<\.0b\>\"", ",", "\"\<[\>\"", ",", "\"\<{\>\""}], 
            "}"}]}], "]"}], "&"}]}], "]"}]}], ";", " ", 
     RowBox[{"Sort", "[", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringReplace", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"b", "->", "\"\<\>\""}], ",", 
             RowBox[{"\"\<`\>\"", "->", "\"\<\>\""}]}], "}"}]}], "]"}], "&"}],
         ",", "a"}], "]"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`PackNames2`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PackNames2", "[", 
   RowBox[{"x_", " ", "/;", " ", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "x", "]"}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
      "\"\<nb\>\""}]}]}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", " ", "=", " ", 
       RowBox[{"StringReplace", "[", 
        RowBox[{
         RowBox[{"ReadFullFile", "[", "x", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\< \>\"", "->", "\"\<\>\""}], ",", 
           RowBox[{"\"\<\\n\>\"", "->", "\"\<\>\""}]}], "}"}]}], "]"}]}], ",",
       " ", "b", ",", "c"}], "}"}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"StringCases", "[", 
       RowBox[{"a", ",", " ", 
        RowBox[{"Shortest", "[", 
         RowBox[{
         "\"\<RowBox[{\\\"Begin\\\",\\\"[\\\",\\\"\\\\\\\"\\\\<`\>\"", "~~", 
          " ", "__", " ", "~~", " ", 
          "\"\<`\\\\>\\\\\\\"\\\",\\\"]\\\"}]\>\""}], "]"}]}], "]"}]}], ";", 
     " ", 
     RowBox[{"a", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"a", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"StringCount", "[", 
           RowBox[{"#", ",", "\"\<RowBox\>\""}], "]"}], "\[Equal]", "1"}], 
         "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Sort", "[", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"c", "=", 
              RowBox[{"DeleteDuplicates", "[", 
               RowBox[{"Flatten", "[", 
                RowBox[{"StringPosition", "[", 
                 RowBox[{"#", ",", "\"\<`\>\""}], "]"}], "]"}], "]"}]}], ",", 
             RowBox[{"StringTake", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"c", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], ",", 
                 RowBox[{
                  RowBox[{"c", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
              "]"}]}], "}"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "&"}], ",", "a"}], "]"}], "]"}], 
      "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`PackageQ`\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"PackageQ", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{"ContextQ", "[", "x", "]"}]}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"CNames", "[", "x", "]"}], "\[NotEqual]", 
     RowBox[{"{", "}"}]}], ",", "True", ",", "False"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Packages`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Packages", "[", "]"}], ":=", 
  RowBox[{"Select", "[", 
   RowBox[{"$Packages", ",", 
    RowBox[{
     RowBox[{"Quiet", "[", 
      RowBox[{"PackageQ", "[", "#", "]"}], "]"}], "&"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"End", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ListStringQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListStringQ", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"ListQ", "[", "x", "]"}], "&&", 
   RowBox[{
    RowBox[{"DeleteDuplicates", "[", 
     RowBox[{"Map", "[", 
      RowBox[{"StringQ", ",", "x"}], "]"}], "]"}], "\[Equal]", 
    RowBox[{"{", "True", "}"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SaveCurrentSession`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SaveCurrentSession", "[", "x___String", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Names", "[", "\"\<*\>\"", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "x", "}"}], "==", 
          RowBox[{"{", "}"}]}], ",", "\"\<SaveCS.m\>\"", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"SuffPref", "[", 
            RowBox[{"x", ",", "\"\<.m\>\"", ",", "2"}], "]"}], ",", "x", ",", 
           RowBox[{"x", "<>", "\"\<.m\>\""}]}], "]"}]}], "]"}]}]}], "}"}], 
    ",", 
    RowBox[{
     RowBox[{"Save1", "[", 
      RowBox[{"b", ",", "a"}], "]"}], ";", "b"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`RestoreCS`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RestoreCS", "[", "x___String", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "x", "}"}], "\[Equal]", 
         RowBox[{"{", "}"}]}], ",", "\"\<SaveCS.m\>\"", ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
           RowBox[{
            RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
            "\"\<m\>\""}]}], ",", "x", ",", "$Failed"}], "]"}]}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"a", "===", "$Failed"}], ",", "$Failed", ",", 
      RowBox[{
       RowBox[{"On", "[", "General", "]"}], ";", 
       RowBox[{"Quiet", "[", 
        RowBox[{"Get", "[", "a", "]"}], "]"}], ";", 
       RowBox[{"Off", "[", "General", "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DumpSaveP`\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"DumpSaveP", "[", 
   RowBox[{
    RowBox[{"f_", "/;", 
     RowBox[{"StringQ", "[", "f", "]"}]}], ",", 
    RowBox[{"x_", "/;", 
     RowBox[{"ContextQ", "[", "x", "]"}]}]}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"PackageQ", "[", "x", "]"}], ",", 
    RowBox[{"DumpSave", "[", 
     RowBox[{"f", ",", "x"}], "]"}], ",", "$Failed"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DumpSave1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DumpSave1", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"StringQ", "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
          "\"\<mx\>\""}], ",", 
         RowBox[{"c", "=", "x"}], ",", 
         RowBox[{"c", "=", 
          RowBox[{"x", "<>", "\"\<.mx\>\""}]}]}], "]"}], ";", " ", 
       RowBox[{"a", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", "y", "}"}], "]"}]}], ";", 
       RowBox[{"b", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"a", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ContextQ", "[", "#", "]"}], "&&", 
              RowBox[{"MemberQ", "[", 
               RowBox[{"$ContextPath", ",", "#"}], "]"}]}], ")"}], "||", 
            RowBox[{"!", 
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\"\<\>\"", ",", "\"\<Null\>\""}], "}"}], ",", 
               RowBox[{"Quiet", "[", 
                RowBox[{"ToString", "[", 
                 RowBox[{"Definition", "[", "#", "]"}], "]"}], "]"}]}], 
              "]"}]}]}], "&"}]}], "]"}]}], ";", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"b", "\[NotEqual]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", 
           RowBox[{"Flatten", "[", 
            RowBox[{"DumpSave", "[", 
             RowBox[{"c", ",", "b"}], "]"}], "]"}]}], "}"}], ",", "$Failed"}],
         "]"}]}], ",", "$Failed"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`DumpSave2`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DumpSave2", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", "\"\<mx\>\""}]}], 
    ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{"SymbolQ", "[", "y", "]"}], "||", 
      RowBox[{
       RowBox[{"ListQ", "[", "y", "]"}], "&&", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"SymbolQ", "[", "#", "]"}], "&"}], ",", "y"}], "]"}], 
         "]"}], "\[Equal]", 
        RowBox[{"{", "True", "}"}]}]}]}]}], ",", 
    RowBox[{"z_", "/;", 
     RowBox[{"ContextQ", "[", "z", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b", ",", "c", ",", 
      RowBox[{"a", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"{", "y", "}"}], "]"}], ",", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"SameQ", "[", 
            RowBox[{
             RowBox[{"PureDefinition", "[", "#", "]"}], ",", "$Failed"}], 
            "]"}]}], "&"}]}], "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"a", "\[Equal]", 
       RowBox[{"{", "}"}]}], ",", "$Failed", ",", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{"Map", "[", 
         RowBox[{"ToString", ",", "a"}], "]"}]}], ";", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ToExpression", "[", 
           RowBox[{"\"\<ContextToSymbol[\>\"", "<>", 
            RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString1", "[", "z", "]"}], "<>", "\"\<]\>\""}], "]"}], 
          "&"}], ",", "a"}], "]"}], ";", " ", 
       RowBox[{"DumpSave", "[", 
        RowBox[{"x", ",", "z"}], "]"}], ";"}]}], " ", "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SaveInMx`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SaveInMx", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", "\"\<mx\>\""}]}], 
    ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{"SymbolQ", "[", "y", "]"}], "||", 
      RowBox[{
       RowBox[{"ListQ", "[", "y", "]"}], "&&", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"SymbolQ", "[", "#", "]"}], "&"}], ",", "y"}], "]"}], 
         "]"}], "\[Equal]", 
        RowBox[{"{", "True", "}"}]}]}]}]}], ",", 
    RowBox[{"z_", "/;", 
     RowBox[{"ContextQ", "[", "z", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"PureDefinition", "[", "#", "]"}], "&"}], ",", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", "y", "}"}], "]"}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"SameQ", "[", 
             RowBox[{"#", ",", "$Failed"}], "]"}]}], "&"}]}], "]"}], "]"}]}], 
      ",", "b"}], "}"}], ",", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ToExpression", "[", 
         RowBox[{"z", "<>", "#"}], "]"}], "&"}], ",", "a"}], "]"}], ";", " ", 
     RowBox[{"$ContextPath", "=", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"$ContextPath", ",", "z"}], "]"}]}], ";", 
     RowBox[{"DumpSave", "[", 
      RowBox[{"x", ",", "z"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`HS`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HS", "[", 
   RowBox[{
    RowBox[{"LTF_", "/;", 
     RowBox[{"ListQ", "[", "LTF", "]"}]}], ",", 
    RowBox[{"CF_", "/;", 
     RowBox[{"StringQ", "[", "CF", "]"}]}], ",", 
    RowBox[{"P_", "/;", 
     RowBox[{"IntegerQ", "[", "P", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "=", "0"}], ",", "k", ",", "C1", ",", "Co", ",", "CFo", 
      ",", "CFf", ",", "H", ",", 
      RowBox[{"t", "=", "0"}], ",", "Z"}], "}"}], ",", 
    RowBox[{
     RowBox[{"n", "=", 
      RowBox[{"StringLength", "[", 
       RowBox[{"First", "[", 
        RowBox[{"First", "[", "LTF", "]"}], "]"}], "]"}]}], ";", 
     RowBox[{"C1", "=", "\"\<\>\""}], ";", 
     RowBox[{"Co", "=", "\"\<0\>\""}], ";", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"C1", "=", 
        RowBox[{"C1", "<>", "Co"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"CFo", "=", 
      RowBox[{"C1", "<>", "CF", "<>", "C1"}]}], ";", 
     RowBox[{"CFf", "=", "\"\<\>\""}], ";", 
     RowBox[{"Label", "[", "St", "]"}], ";", 
     RowBox[{"T1", "=", 
      RowBox[{"TimeUsed", "[", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"CFf", "=", 
        RowBox[{"CFf", "<>", 
         RowBox[{"StringReplace", "[", 
          RowBox[{
           RowBox[{"StringTake", "[", 
            RowBox[{"CFo", ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", 
               RowBox[{"k", "+", "n", "-", "1"}]}], "}"}]}], "]"}], ",", 
           "LTF"}], "]"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{
          RowBox[{"StringLength", "[", "CFo", "]"}], "+", "1", "-", "n"}]}], 
        "}"}]}], "]"}], ";", 
     RowBox[{"t", "++"}], ";", 
     RowBox[{"T2", "=", 
      RowBox[{"TimeUsed", "[", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"T2", "-", "T1"}], "\[GreaterEqual]", "15"}], ",", 
       RowBox[{"Goto", "[", "Q", "]"}], ",", "7"}], "]"}], ";", 
     RowBox[{"Goto", "[", "C", "]"}], ";", 
     RowBox[{"Label", "[", "Q", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Steps: \>\"", "<>", 
       RowBox[{"ToString", "[", "t", "]"}], "<>", "\"\<; CFfin: \>\"", "<>", 
       "CFf"}], "]"}], ";", 
     RowBox[{"Z", "=", 
      RowBox[{"Input", "[", "\"\<Continue(y/n)?\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Z", "\[Equal]", "y"}], ",", 
       RowBox[{"Goto", "[", "C", "]"}], ",", "7"}], "]"}], ";", 
     RowBox[{"Return", "[", 
      RowBox[{"\"\<Job is canceled in step: \>\"", "<>", 
       RowBox[{"ToString", "[", "t", "]"}]}], "]"}], ";", 
     RowBox[{"Label", "[", "C", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"H", "=", 
         RowBox[{"Length", "[", 
          RowBox[{"StringPosition", "[", 
           RowBox[{"CFf", ",", "CF"}], "]"}], "]"}]}], ";", 
        RowBox[{"H", "\[GreaterEqual]", "P"}]}], ",", 
       RowBox[{"Goto", "[", "Fin", "]"}], ",", 
       RowBox[{
        RowBox[{"CFo", "=", 
         RowBox[{"C1", "<>", "CFf", "<>", "C1"}]}], ";", 
        RowBox[{"CFf", "=", "\"\<\>\""}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Goto", "[", "St", "]"}], ";", 
     RowBox[{"Label", "[", "Fin", "]"}], ";", 
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<Initial configuration: \>\"", "<>", "CF", "<>", "\"\< is \>\"", "<>", 
       RowBox[{"ToString", "[", "H", "]"}], "<>", 
       "\"\<-\nreproductable!\>\""}], "]"}], ";", 
     RowBox[{"CFfin", "=", "CFf"}], ";", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Steps: \>\"", "<>", 
       RowBox[{"ToString", "[", "t", "]"}]}], " ", "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`Predecessors`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Predecessors", "[", 
   RowBox[{
    RowBox[{"Ltf_", "/;", 
     RowBox[{"ListQ", "[", "Ltf", "]"}]}], ",", 
    RowBox[{"Co_", "/;", 
     RowBox[{"StringQ", "[", "Co", "]"}]}], ",", 
    RowBox[{"n_", "/;", 
     RowBox[{"IntegerQ", "[", "n", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"L", ",", "a", ",", "b", ",", "c", ",", 
      RowBox[{"h", "=", 
       RowBox[{"{", "}"}]}], ",", "i", ",", "j", ",", "k", ",", 
      RowBox[{"d", "=", 
       RowBox[{"StringLength", "[", "Co", "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"Gather", "[", 
       RowBox[{"Ltf", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"StringTake", "[", 
           RowBox[{"#1", ",", 
            RowBox[{"-", "1"}]}], "]"}], "\[Equal]", 
          RowBox[{"StringTake", "[", 
           RowBox[{"#2", ",", 
            RowBox[{"-", "1"}]}], "]"}]}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"L", "[", 
         RowBox[{"StringTake", "[", 
          RowBox[{
           RowBox[{"First", "[", 
            RowBox[{"a", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "]"}], ",", 
           RowBox[{"-", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{"Map2", "[", 
         RowBox[{"StringDrop", ",", 
          RowBox[{"Map", "[", 
           RowBox[{"ToString1", ",", 
            RowBox[{"a", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"-", "1"}], "}"}]}], "]"}]}]}], "]"}], ";", 
     RowBox[{"b", "=", 
      RowBox[{"L", "[", 
       RowBox[{"StringTake", "[", 
        RowBox[{"Co", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "2"}], ",", 
       RowBox[{"k", "\[LessEqual]", "d"}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"L", "[", 
          RowBox[{"StringTake", "[", 
           RowBox[{"Co", ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "k"}], "}"}]}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "\[LessEqual]", 
           RowBox[{"Length", "[", "b", "]"}]}], ",", 
          RowBox[{"i", "++"}], ",", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "\[LessEqual]", 
             RowBox[{"Length", "[", "c", "]"}]}], ",", 
            RowBox[{"j", "++"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"SuffPref", "[", 
               RowBox[{
                RowBox[{"b", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{"StringTake", "[", 
                 RowBox[{
                  RowBox[{"c", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], ",", 
                  RowBox[{"n", "-", "1"}]}], "]"}], ",", "2"}], "]"}], ",", 
              RowBox[{"h", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"h", ",", 
                 RowBox[{
                  RowBox[{"b", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "<>", 
                  RowBox[{"StringTake", "[", 
                   RowBox[{
                    RowBox[{"c", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", 
                    RowBox[{"-", "1"}]}], "]"}]}]}], "]"}]}], ",", "Null"}], 
             "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"b", "=", "h"}], ";", 
        RowBox[{"h", "=", 
         RowBox[{"{", "}"}]}]}]}], "]"}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "b", "]"}], "\[NotEqual]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "-", "1"}], ")"}], "^", 
         RowBox[{"Length", "[", "a", "]"}]}]}], ",", 
       RowBox[{
       "Print", "[", 
        "\"\<Structure possesses the nonconstructability of NCF-type\>\"", 
        "]"}], ",", "Null"}], "]"}], ";", "b"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`PredecessorsL`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PredecessorsL", "[", 
   RowBox[{
    RowBox[{"Ltf_", "/;", 
     RowBox[{"ListQ", "[", "Ltf", "]"}]}], ",", 
    RowBox[{"Co_", "/;", 
     RowBox[{"StringQ", "[", "Co", "]"}]}], ",", 
    RowBox[{"n_", "/;", 
     RowBox[{"IntegerQ", "[", "n", "]"}]}], ",", 
    RowBox[{"Cf_", "/;", 
     RowBox[{"SymbolQ", "[", "Cf", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"L", ",", "a", ",", "b", ",", "c", ",", 
      RowBox[{"h", "=", 
       RowBox[{"{", "}"}]}], ",", "i", ",", "j", ",", "k", ",", 
      RowBox[{"d", "=", 
       RowBox[{"StringLength", "[", "Co", "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"Gather", "[", 
       RowBox[{"Ltf", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"StringTake", "[", 
           RowBox[{"#1", ",", 
            RowBox[{"-", "1"}]}], "]"}], "\[Equal]", 
          RowBox[{"StringTake", "[", 
           RowBox[{"#2", ",", 
            RowBox[{"-", "1"}]}], "]"}]}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"L", "[", 
         RowBox[{"StringTake", "[", 
          RowBox[{
           RowBox[{"First", "[", 
            RowBox[{"a", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "]"}], ",", 
           RowBox[{"-", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{"Map2", "[", 
         RowBox[{"StringDrop", ",", 
          RowBox[{"Map", "[", 
           RowBox[{"ToString1", ",", 
            RowBox[{"a", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"-", "1"}], "}"}]}], "]"}]}]}], "]"}], ";", 
     RowBox[{"b", "=", 
      RowBox[{"L", "[", 
       RowBox[{"StringTake", "[", 
        RowBox[{"Co", ",", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", 
        RowBox[{"d", "-", "1"}]}], ",", 
       RowBox[{"k", "\[GreaterEqual]", "1"}], ",", 
       RowBox[{"k", "--"}], ",", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"L", "[", 
          RowBox[{"StringTake", "[", 
           RowBox[{"Co", ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "k"}], "}"}]}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "\[LessEqual]", 
           RowBox[{"Length", "[", "b", "]"}]}], ",", 
          RowBox[{"i", "++"}], ",", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "\[LessEqual]", 
             RowBox[{"Length", "[", "c", "]"}]}], ",", 
            RowBox[{"j", "++"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"StringTake", "[", 
                RowBox[{
                 RowBox[{"b", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", 
                 RowBox[{"n", "-", "1"}]}], "]"}], "===", 
               RowBox[{"StringTake", "[", 
                RowBox[{
                 RowBox[{"c", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", 
                   RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ",", 
              RowBox[{"h", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"h", ",", 
                 RowBox[{
                  RowBox[{"StringTake", "[", 
                   RowBox[{
                    RowBox[{"c", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", "1"}], "]"}], "<>", 
                  RowBox[{"b", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}]}], ",", "Null"}],
              "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"b", "=", "h"}], ";", 
        RowBox[{"h", "=", 
         RowBox[{"{", "}"}]}]}]}], "]"}], ";", 
     RowBox[{"Cf", "=", "b"}], ";", 
     RowBox[{"Length", "[", "b", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`PredecessorsR`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PredecessorsR", "[", 
   RowBox[{
    RowBox[{"Ltf_", "/;", 
     RowBox[{"ListQ", "[", "Ltf", "]"}]}], ",", 
    RowBox[{"Co_", "/;", 
     RowBox[{"StringQ", "[", "Co", "]"}]}], ",", 
    RowBox[{"n_", "/;", 
     RowBox[{"IntegerQ", "[", "n", "]"}]}], ",", 
    RowBox[{"Cf_", "/;", 
     RowBox[{"SymbolQ", "[", "Cf", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"L", ",", "a", ",", "b", ",", "c", ",", 
      RowBox[{"h", "=", 
       RowBox[{"{", "}"}]}], ",", "i", ",", "j", ",", "k", ",", 
      RowBox[{"d", "=", 
       RowBox[{"StringLength", "[", "Co", "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"Gather", "[", 
       RowBox[{"Ltf", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"StringTake", "[", 
           RowBox[{"#1", ",", 
            RowBox[{"-", "1"}]}], "]"}], "\[Equal]", 
          RowBox[{"StringTake", "[", 
           RowBox[{"#2", ",", 
            RowBox[{"-", "1"}]}], "]"}]}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"L", "[", 
         RowBox[{"StringTake", "[", 
          RowBox[{
           RowBox[{"First", "[", 
            RowBox[{"a", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "]"}], ",", 
           RowBox[{"-", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{"Map2", "[", 
         RowBox[{"StringDrop", ",", 
          RowBox[{"Map", "[", 
           RowBox[{"ToString1", ",", 
            RowBox[{"a", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"-", "1"}], "}"}]}], "]"}]}]}], "]"}], ";", 
     RowBox[{"b", "=", 
      RowBox[{"L", "[", 
       RowBox[{"StringTake", "[", 
        RowBox[{"Co", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "2"}], ",", 
       RowBox[{"k", "\[LessEqual]", "d"}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"L", "[", 
          RowBox[{"StringTake", "[", 
           RowBox[{"Co", ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "k"}], "}"}]}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "\[LessEqual]", 
           RowBox[{"Length", "[", "b", "]"}]}], ",", 
          RowBox[{"i", "++"}], ",", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "\[LessEqual]", 
             RowBox[{"Length", "[", "c", "]"}]}], ",", 
            RowBox[{"j", "++"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"SuffPref", "[", 
               RowBox[{
                RowBox[{"b", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{"StringTake", "[", 
                 RowBox[{
                  RowBox[{"c", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], ",", 
                  RowBox[{"n", "-", "1"}]}], "]"}], ",", "2"}], "]"}], ",", 
              RowBox[{"h", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"h", ",", 
                 RowBox[{
                  RowBox[{"b", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "<>", 
                  RowBox[{"StringTake", "[", 
                   RowBox[{
                    RowBox[{"c", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", 
                    RowBox[{"-", "1"}]}], "]"}]}]}], "]"}]}], ",", "Null"}], 
             "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"b", "=", "h"}], ";", 
        RowBox[{"h", "=", 
         RowBox[{"{", "}"}]}]}]}], "]"}], ";", 
     RowBox[{"Cf", "=", "b"}], ";", 
     RowBox[{"Length", "[", "b", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`NcfQ`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NcfQ", "[", 
   RowBox[{
    RowBox[{"Ltf_", "/;", 
     RowBox[{"ListQ", "[", "Ltf", "]"}]}], ",", 
    RowBox[{"S_", "/;", 
     RowBox[{"StringQ", "[", "S", "]"}]}], ",", 
    RowBox[{"t_", "/;", 
     RowBox[{
      RowBox[{"IntegerQ", "[", "t", "]"}], "&&", 
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "9"}], "]"}], ",", "t"}], "]"}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "=", 
       RowBox[{"StringLength", "[", 
        RowBox[{"Part", "[", 
         RowBox[{
          RowBox[{"Ltf", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], "]"}]}], ",", 
      "a", ",", "b", ",", 
      RowBox[{"c", "=", "\"\<\>\""}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}], ",", "j", ",", "p"}], "}"}], ",", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"Tuples", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "t"}], "]"}], ",", 
        RowBox[{"p", "=", 
         RowBox[{
          RowBox[{"StringLength", "[", "S", "]"}], "+", "n", "-", "1"}]}]}], 
       "]"}]}], ";", 
     RowBox[{"b", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"ToString", ",", "#"}], "]"}], "&"}], ",", "a"}], "]"}]}], 
     ";", " ", "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"StringJoin", ",", "b"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "b", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", 
           RowBox[{"p", "-", "n", "+", "1"}]}], ",", 
          RowBox[{"j", "\[GreaterEqual]", "1"}], ",", 
          RowBox[{"j", "--"}], ",", 
          RowBox[{"c", "=", 
           RowBox[{
            RowBox[{"StringReplace", "[", 
             RowBox[{
              RowBox[{"StringTake", "[", 
               RowBox[{
                RowBox[{"b", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", 
                  RowBox[{"j", "+", "n", "-", "1"}]}], "}"}]}], "]"}], ",", 
              "Ltf"}], "]"}], "<>", "c"}]}]}], "]"}], ";", 
        RowBox[{"d", "=", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"d", ",", "c"}], "]"}], "]"}]}], ";", 
        RowBox[{"c", "=", "\"\<\>\""}]}]}], "]"}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"MemberQ", "[", 
         RowBox[{"d", ",", "S"}], "]"}]}], ",", "True", ",", "False"}], 
      "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`MinNCF`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MinNCF", "[", 
   RowBox[{
    RowBox[{"Ltf_", "/;", 
     RowBox[{"ListQ", "[", "Ltf", "]"}]}], ",", 
    RowBox[{"n_", "/;", 
     RowBox[{"IntegerQ", "[", "n", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"StringJoin", ",", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{"ToString", ",", "#"}], "]"}], "&"}], ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Tuples", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}], ",", "#"}], "]"}], "&"}], 
              ",", 
              RowBox[{"Range", "[", 
               RowBox[{"1", ",", "n"}], "]"}]}], "]"}], ",", "1"}], "]"}]}], 
         "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NcfQ", "[", 
          RowBox[{"Ltf", ",", 
           RowBox[{"a", "[", 
            RowBox[{"[", "k", "]"}], "]"}], ",", "1"}], "]"}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{"a", "[", 
           RowBox[{"[", "k", "]"}], "]"}], "]"}], ",", 
         RowBox[{"Continue", "[", "]"}]}], "]"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`NfToLtf`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NfToLtf", "[", 
   RowBox[{
    RowBox[{"m_", "/;", 
     RowBox[{"IntegerQ", "[", "m", "]"}]}], ",", 
    RowBox[{"n_", "/;", 
     RowBox[{"IntegerQ", "[", "n", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"IntegerDigits", "[", 
        RowBox[{"n", ",", "2"}], "]"}]}], ",", "b", ",", "c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"n", "\[GreaterEqual]", 
       RowBox[{"2", "^", 
        RowBox[{"2", "^", "m"}]}]}], ",", 
      RowBox[{"Defer", "[", 
       RowBox[{"NfToLtf", "[", 
        RowBox[{"m", ",", "n"}], "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"b", "=", 
        RowBox[{"Map", "[", 
         RowBox[{"ToString", ",", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{"0", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"2", "^", "m"}], "-", 
                RowBox[{"Length", "[", "a", "]"}]}], "}"}]}], "]"}], ",", 
            "a"}], "]"}]}], "]"}]}], ";", 
       RowBox[{"c", "=", 
        RowBox[{"Map", "[", 
         RowBox[{"StringJoin", ",", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Map", "[", 
              RowBox[{"ToString", ",", "#"}], "]"}], "&"}], ",", 
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Tuples", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], ",", "#"}], "]"}], "&"}], 
                ",", 
                RowBox[{"Range", "[", 
                 RowBox[{"m", ",", "m"}], "]"}]}], "]"}], ",", "1"}], "]"}]}],
            "]"}]}], "]"}]}], ";", " ", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"d", ",", 
           RowBox[{"Rule", "[", 
            RowBox[{
             RowBox[{"c", "[", 
              RowBox[{"[", "k", "]"}], "]"}], ",", 
             RowBox[{"b", "[", 
              RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", 
           RowBox[{"Length", "[", "b", "]"}]}], "}"}]}], "]"}], ";", "d"}]}], 
     "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ComposeGTF`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ComposeGTF", "[", "g__", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"j", "=", "1"}], ",", "cgtf", ",", 
      RowBox[{"v", "=", 
       RowBox[{"{", "g", "}"}]}], ",", 
      RowBox[{"s", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"{", "g", "}"}], "]"}]}], ",", "r", ",", "u", ",", "x"}], 
     "}"}], ",", "\[IndentingNewLine]", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"s", "<", "4"}], "||", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"IntegerQ", "[", 
                RowBox[{"v", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"2", "*", "#"}], "-", "1"}], "]"}], "]"}], "]"}], 
               ",", 
               RowBox[{
                RowBox[{"IntegerQ", "[", 
                 RowBox[{"v", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", "*", "#"}], "]"}], "]"}], "]"}], "&&", 
                RowBox[{"0", "\[LessEqual]", 
                 RowBox[{"v", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", "*", "#"}], "]"}], "]"}], "\[LessEqual]", 
                 RowBox[{
                  RowBox[{"2", "^", 
                   RowBox[{"2", "^", 
                    RowBox[{"v", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"2", "*", "#"}], "-", "1"}], "]"}], "]"}]}]}], 
                  "-", "1"}]}]}]}], "}"}], "&"}], ",", 
            RowBox[{"Range", "[", 
             RowBox[{"1", ",", 
              RowBox[{"Floor", "[", 
               RowBox[{"s", "/", "2"}], "]"}]}], "]"}]}], "]"}], "]"}], "]"}],
         "\[NotEqual]", 
        RowBox[{"{", "True", "}"}]}]}], ",", 
      RowBox[{"Return", "[", 
       RowBox[{"Defer", "[", 
        RowBox[{"ComposeGTF", "[", "g", "]"}], "]"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"cgtf", "[", 
         RowBox[{"n_Integer", ",", 
          RowBox[{"m_", "/;", 
           RowBox[{"IntegerQ", "[", "m", "]"}]}], ",", "n1_Integer", ",", 
          RowBox[{"m1_", "/;", 
           RowBox[{"IntegerQ", "[", "m1", "]"}]}]}], "]"}], ":=", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"a", "=", 
             RowBox[{"NfToLtf", "[", 
              RowBox[{"n", ",", "m"}], "]"}]}], ",", 
            RowBox[{"b", "=", 
             RowBox[{"NfToLtf", "[", 
              RowBox[{"n1", ",", "m1"}], "]"}]}], ",", 
            RowBox[{"c", "=", 
             RowBox[{"n", "+", "n1", "-", "1"}]}], ",", 
            RowBox[{"d", "=", 
             RowBox[{"{", "}"}]}], ",", "h", ",", 
            RowBox[{"k", "=", "1"}], ",", "p", ",", "t"}], "}"}], ",", 
          RowBox[{
           RowBox[{"h", "=", 
            RowBox[{"Map", "[", 
             RowBox[{"StringJoin", ",", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Map", "[", 
                  RowBox[{"ToString", ",", "#"}], "]"}], "&"}], ",", 
                RowBox[{"Flatten", "[", 
                 RowBox[{
                  RowBox[{"Map", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Tuples", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], ",", "#"}], "]"}], "&"}], 
                    ",", 
                    RowBox[{"Range", "[", 
                    RowBox[{"c", ",", "c"}], "]"}]}], "]"}], ",", "1"}], 
                 "]"}]}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{"k", ",", 
             RowBox[{"k", "\[LessEqual]", 
              RowBox[{"Length", "[", "h", "]"}]}], ",", 
             RowBox[{"k", "++"}], ",", 
             RowBox[{
              RowBox[{"p", "=", 
               RowBox[{"h", "[", 
                RowBox[{"[", "k", "]"}], "]"}]}], ";", 
              RowBox[{"t", "=", 
               RowBox[{"StringTake", "[", 
                RowBox[{"p", ",", 
                 RowBox[{"Map", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "+", "1"}], ",", 
                    RowBox[{"n", "+", "#"}]}], "}"}], "&"}], ",", 
                   RowBox[{"Range", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"n1", "-", "1"}]}], "]"}]}], "]"}]}], "]"}]}], 
              ";", " ", 
              RowBox[{"t", "=", 
               RowBox[{"StringJoin", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"StringReplace", "[", 
                    RowBox[{"#", ",", "a"}], "]"}], "&"}], ",", "t"}], "]"}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"d", "=", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"d", ",", 
                 RowBox[{"Rule", "[", 
                  RowBox[{"p", ",", 
                   RowBox[{"StringReplace", "[", 
                    RowBox[{"t", ",", "b"}], "]"}]}], "]"}]}], "]"}]}]}]}], 
            "]"}], ";", 
           RowBox[{"{", 
            RowBox[{"c", ",", 
             RowBox[{"FromDigits", "[", 
              RowBox[{
               RowBox[{"ToExpression", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Part", "[", 
                    RowBox[{"#", ",", "2"}], "]"}], "&"}], ",", "d"}], "]"}], 
                "]"}], ",", "2"}], "]"}]}], "}"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"r", "=", 
        RowBox[{"cgtf", "[", 
         RowBox[{
          RowBox[{"v", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"v", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{"v", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ",", 
          RowBox[{"v", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], "]"}]}], ";", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "3"}], ",", 
         RowBox[{"j", "\[LessEqual]", 
          RowBox[{"Floor", "[", 
           RowBox[{"s", "/", "2"}], "]"}]}], ",", 
         RowBox[{"j", "++"}], ",", 
         RowBox[{"r", "=", 
          RowBox[{"cgtf", "[", 
           RowBox[{
            RowBox[{"r", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"r", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{"v", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"2", "*", "j"}], "-", "1"}], "]"}], "]"}], ",", 
            RowBox[{"v", "[", 
             RowBox[{"[", 
              RowBox[{"2", "*", "j"}], "]"}], "]"}]}], "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"EvenQ", "[", "s", "]"}], ",", "r", ",", 
         RowBox[{
          RowBox[{"u", "=", 
           RowBox[{"Map", "[", 
            RowBox[{"StringJoin", ",", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Map", "[", 
                 RowBox[{"ToString", ",", "#"}], "]"}], "&"}], ",", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"Map", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Tuples", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], ",", "#"}], "]"}], "&"}], 
                   ",", 
                   RowBox[{"Range", "[", 
                    RowBox[{
                    RowBox[{"r", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"r", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "]"}], ",", 
                 "1"}], "]"}]}], "]"}]}], "]"}]}], ";", 
          RowBox[{"x", "=", 
           RowBox[{"Map", "[", 
            RowBox[{"ToString", ",", 
             RowBox[{"IntegerDigits", "[", 
              RowBox[{
               RowBox[{"r", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", "2", ",", 
               RowBox[{"2", "^", 
                RowBox[{"r", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], "]"}]}], ";", 
          " ", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Rule", "[", 
             RowBox[{
              RowBox[{"u", "[", 
               RowBox[{"[", "j", "]"}], "]"}], ",", 
              RowBox[{"x", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"2", "^", 
               RowBox[{"r", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}]}], "]"}]}]}], 
        "]"}]}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`GtfMod2`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GtfMod2", "[", 
   RowBox[{"n_", "/;", 
    RowBox[{"IntegerQ", "[", "n", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Tuples", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", "#"}], "]"}], "&"}], ",", 
           RowBox[{"Range", "[", 
            RowBox[{"n", ",", "n"}], "]"}]}], "]"}], ",", "1"}], "]"}]}], ",",
       "b", ",", "c"}], "}"}], ",", 
    RowBox[{"FromDigits", "[", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"#", ",", "2"}], "]"}], "&"}], ",", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", "#", "]"}], "&"}], ",", "a"}], "]"}]}], 
       "]"}], ",", "2"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`CFsequences`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CFsequences", "[", 
   RowBox[{
    RowBox[{"Co_", "/;", 
     RowBox[{
      RowBox[{"StringQ", "[", "Co", "]"}], "&&", 
      RowBox[{"Co", "!=", "\"\<\>\""}]}]}], ",", 
    RowBox[{"A_", "/;", 
     RowBox[{
      RowBox[{"ListQ", "[", "A", "]"}], "&&", 
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", "#"}], "]"}], "&"}], ",", 
          RowBox[{"Range", "[", "9", "]"}]}], "]"}], ",", "A"}], "]"}]}]}], 
    ",", 
    RowBox[{"Ltf_", "/;", 
     RowBox[{
      RowBox[{
       RowBox[{"ListQ", "[", "Ltf", "]"}], "&&", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"RuleQ", "[", "#", "]"}], "&"}], ",", "Ltf"}], "]"}], 
         "]"}], "==", 
        RowBox[{"{", "True", "}"}]}]}], "||", 
      RowBox[{"FunctionQ", "[", "Ltf", "]"}]}]}], ",", 
    RowBox[{"n_", "/;", " ", 
     RowBox[{
      RowBox[{"IntegerQ", "[", "n", "]"}], "&&", 
      RowBox[{"n", ">=", "0"}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"StringTrim2", "[", 
        RowBox[{"Co", ",", "\"\<0\>\"", ",", "3"}], "]"}]}], ",", "b", ",", 
      "c", ",", 
      RowBox[{"t1", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"t2", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"t3", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"t4", "=", 
       RowBox[{"{", "}"}]}], ",", "tf", ",", 
      RowBox[{"p", "=", "n"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"MemberQ3", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"ToString", ",", "A"}], "]"}], ",", 
         RowBox[{"Characters", "[", "Co", "]"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<Initial configuration <\>\"", "<>", " ", "Co", " ", "<>", 
         "\"\<> is incorrect\>\""}], "]"}], ";", " ", "$Failed"}], ",", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"FunctionQ", "[", "Ltf", "]"}], ",", 
         RowBox[{"b", "=", 
          RowBox[{"Arity", "[", "Ltf", "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"t1", ",", 
                   RowBox[{"StringQ", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], ",", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"t2", ",", 
                   RowBox[{"StringLength", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"t3", ",", 
                   RowBox[{"StringQ", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}], ",", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"t4", ",", 
                   RowBox[{"StringLength", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}]}], "}"}]}],
               "}"}], "&"}], ",", "Ltf"}], "]"}], ";", " ", 
          RowBox[{"b", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"DeleteDuplicates", "[", "#", "]"}], "&"}], ",", 
             RowBox[{"{", 
              RowBox[{"t1", ",", "t2", ",", "t3", ",", "t4"}], "}"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"MemberQ3", "[", 
                RowBox[{
                 RowBox[{"{", "True", "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"b", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                   RowBox[{"b", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "]"}], "&&", 
               RowBox[{
                RowBox[{"Map", "[", 
                 RowBox[{"Length", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"b", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"b", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}], "]"}], 
                "\[Equal]", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "1"}], "}"}]}], "&&", 
               RowBox[{
                RowBox[{"Length", "[", "t2", "]"}], "\[Equal]", 
                RowBox[{
                 RowBox[{"Length", "[", "A", "]"}], "^", 
                 RowBox[{"(", 
                  RowBox[{"b", "=", 
                   RowBox[{
                    RowBox[{"b", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}]}]}], ")"}]}], 
            ",", 
            RowBox[{
             RowBox[{
             "Print", "[", "\"\<Local transition function is incorrect\>\"", 
              "]"}], ";", 
             RowBox[{"Return", "[", "$Failed", "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"tf", "=", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"ToExpression", "[", 
                  RowBox[{"Characters", "[", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "\[Rule]", 
                 RowBox[{"ToExpression", "[", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "&"}], ",", 
               "Ltf"}], "]"}]}]}], "]"}]}]}], "]"}], ";", " ", 
       RowBox[{"c", "=", 
        RowBox[{"StringMultiple1", "[", 
         RowBox[{"\"\<0\>\"", ",", "b"}], "]"}]}], ";", 
       RowBox[{"Print", "[", "a", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"p", ">", "0"}], ",", 
         RowBox[{
          RowBox[{"p", "--"}], ";", 
          RowBox[{"a", "=", 
           RowBox[{"c", "<>", "a", "<>", "c"}]}], ";", 
          RowBox[{"a", "=", 
           RowBox[{"Partition", "[", 
            RowBox[{
             RowBox[{"ToExpression", "[", 
              RowBox[{"Characters", "[", "a", "]"}], "]"}], ",", "b", ",", 
             "1"}], "]"}]}], ";", " ", 
          RowBox[{"a", "=", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"FunctionQ", "[", "Ltf", "]"}], ",", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Ltf", "@@", "#"}], "&"}], ",", "a"}], "]"}], ",", 
             RowBox[{"ReplaceAll", "[", 
              RowBox[{"a", ",", "tf"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"a", "=", 
           RowBox[{"StringJoin", "[", 
            RowBox[{"Map", "[", 
             RowBox[{"ToString", ",", "a"}], "]"}], "]"}]}], ";", " ", 
          RowBox[{"Print", "[", 
           RowBox[{"StringTrim2", "[", 
            RowBox[{"a", ",", "\"\<0\>\"", ",", "3"}], "]"}], "]"}]}]}], 
        "]"}], ";"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`GtfMod2Q`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GtfMod2Q", "[", 
   RowBox[{
    RowBox[{"n_", "/;", 
     RowBox[{"IntegerQ", "[", "n", "]"}]}], ",", 
    RowBox[{"m_", "/;", 
     RowBox[{"IntegerQ", "[", "m", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "a", "}"}], ",", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"ComposeGTF", "[", 
       RowBox[{"n", ",", 
        RowBox[{"GtfMod2", "[", "n", "]"}], ",", "m", ",", 
        RowBox[{"GtfMod2", "[", "m", "]"}]}], "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
        RowBox[{"GtfMod2", "[", 
         RowBox[{"n", "+", "m", "-", "1"}], "]"}]}], ",", "True", ",", 
       "False"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`FunctionToRules`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FunctionToRules", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"SymbolQ", "[", "x", "]"}]}], ",", 
    RowBox[{"A_", "/;", 
     RowBox[{"ListQ", "[", "A", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"StringJoin", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"ToString", ",", "#"}], "]"}], "]"}], "\[Rule]", 
      RowBox[{"ToString", "[", 
       RowBox[{"x", "@@", "#"}], "]"}]}], "&"}], ",", 
    RowBox[{"Tuples", "[", 
     RowBox[{"A", ",", 
      RowBox[{"Arity", "[", "x", "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`XOR1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"XOR1", "[", 
   RowBox[{"n_", "/;", 
    RowBox[{
     RowBox[{"ListQ", "[", "n", "]"}], "&&", 
     RowBox[{
      RowBox[{"Length", "[", "n", "]"}], "\[GreaterEqual]", "1"}], "&&", 
     RowBox[{
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"IntegerQ", "[", "#", "]"}], "&"}], ",", "n"}], "]"}], 
       "]"}], "\[Equal]", 
      RowBox[{"{", "True", "}"}]}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "n", "]"}], "==", "1"}], ",", 
       RowBox[{
        RowBox[{"{", "n", "}"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"a", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"IntegerDigits", "[", 
             RowBox[{"#", ",", "2"}], "]"}], "&"}], ",", "n"}], "]"}]}], ";", 
        RowBox[{"b", "=", 
         RowBox[{
          RowBox[{"Sort", "[", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "#", "]"}], "&"}], ",", "a"}], "]"}], 
           "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}]}], ";", " ", 
        RowBox[{"b", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"PadLeft", "[", 
             RowBox[{"#", ",", "b"}], "]"}], "&"}], ",", "a"}], "]"}]}]}]}], 
      "]"}], ";", " ", 
     RowBox[{"b", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"#", ",", "2"}], "]"}], "&"}], ",", 
        RowBox[{"Total", "[", "b", "]"}]}], "]"}]}], ";", " ", 
     RowBox[{"FromDigits", "[", 
      RowBox[{"b", ",", "2"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ReprodXOR1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReprodXOR1", "[", 
   RowBox[{
    RowBox[{"S_", "/;", 
     RowBox[{"StringQ", "[", "S", "]"}]}], ",", 
    RowBox[{"n_", "/;", 
     RowBox[{"IntegerQ", "[", "n", "]"}]}], ",", 
    RowBox[{"m_", "/;", 
     RowBox[{"IntegerQ", "[", "m", "]"}]}], ",", "g___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", 
      RowBox[{"c", "=", "\"\<\>\""}], ",", "h", ",", "k", ",", 
      RowBox[{"d", "=", "0"}], ",", "t"}], "}"}], ",", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"ToString", ",", 
         RowBox[{"NestList", "[", 
          RowBox[{"Sin", ",", "0", ",", 
           RowBox[{"n", "-", "2"}]}], "]"}]}], "]"}], "]"}]}], ";", 
     RowBox[{"b", "=", 
      RowBox[{"a", "<>", "S", "<>", "a"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Label", "[", "AGN", "]"}], ";", " ", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", 
        RowBox[{
         RowBox[{"StringLength", "[", "b", "]"}], "-", "n", "+", "1"}]}], ",", 
       RowBox[{"k", "\[GreaterEqual]", "1"}], ",", 
       RowBox[{"k", "--"}], ",", 
       RowBox[{
        RowBox[{"h", "=", 
         RowBox[{"ToExpression", "[", 
          RowBox[{"Characters", "[", 
           RowBox[{"StringTake", "[", 
            RowBox[{"b", ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", 
               RowBox[{"k", "+", "n", "-", "1"}]}], "}"}]}], "]"}], "]"}], 
          "]"}]}], ";", 
        RowBox[{"c", "=", 
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{"XOR1", "[", "h", "]"}], "]"}], "<>", "c"}]}]}]}], "]"}], 
     ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"t", "=", 
         RowBox[{"StringCount", "[", 
          RowBox[{"c", ",", "S"}], "]"}]}], ";", " ", 
        RowBox[{"t", "\[GreaterEqual]", "m"}]}], ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"{", "g", "}"}], "]"}], "\[NotEqual]", "0"}], "&&", 
           RowBox[{"!", 
            RowBox[{"ValueQ", "[", "g", "]"}]}]}], ",", 
          RowBox[{"g", "=", "c"}]}], "]"}], ";", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"StringLength", "[", "c", "]"}], ",", "t"}], "}"}]}], ",", 
       RowBox[{
        RowBox[{"b", "=", 
         RowBox[{"a", "<>", "c", "<>", "a"}]}], ";", " ", 
        RowBox[{"c", "=", "\"\<\>\""}], ";", " ", 
        RowBox[{"d", "=", 
         RowBox[{"d", "+", "1"}]}], ";", " ", 
        RowBox[{"Goto", "[", "AGN", "]"}]}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ReprodXOR11`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReprodXOR11", "[", 
   RowBox[{
    RowBox[{"S_", "/;", 
     RowBox[{"ListQ", "[", "S", "]"}]}], ",", 
    RowBox[{"n_", "/;", 
     RowBox[{"IntegerQ", "[", "n", "]"}]}], ",", 
    RowBox[{"m_", "/;", 
     RowBox[{"IntegerQ", "[", "m", "]"}]}], ",", "g___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b", ",", 
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", "k", ",", 
      RowBox[{"j", "=", "1"}], ",", 
      RowBox[{"d", "=", "0"}], ",", "t", ",", 
      RowBox[{"h", "=", 
       RowBox[{"Length", "[", "S", "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"PadLeft", "[", 
       RowBox[{
        RowBox[{"PadRight", "[", 
         RowBox[{"S", ",", 
          RowBox[{"h", "+", "n", "-", "1"}], ",", "0"}], "]"}], ",", 
        RowBox[{"h", "+", 
         RowBox[{"2", "*", 
          RowBox[{"(", 
           RowBox[{"n", "-", "1"}], ")"}]}]}], ",", "0"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Label", "[", "ArtKr", "]"}], ";", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", 
        RowBox[{
         RowBox[{"Length", "[", "b", "]"}], "-", "n", "+", "1"}]}], ",", 
       RowBox[{"k", "\[GreaterEqual]", "1"}], ",", 
       RowBox[{"k", "--"}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"Prepend", "[", 
         RowBox[{"c", ",", 
          RowBox[{"XOR1", "[", 
           RowBox[{"b", "[", 
            RowBox[{"[", 
             RowBox[{"k", ";;", 
              RowBox[{"-", 
               RowBox[{"j", "++"}]}]}], "]"}], "]"}], "]"}]}], "]"}]}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"t", "=", 
         RowBox[{"ListCount", "[", 
          RowBox[{"c", ",", "S"}], "]"}]}], ";", 
        RowBox[{"t", "\[GreaterEqual]", "m"}]}], ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"{", "g", "}"}], "]"}], "\[NotEqual]", "0"}], "&&", 
           RowBox[{"!", 
            RowBox[{"ValueQ", "[", "g", "]"}]}]}], ",", 
          RowBox[{"g", "=", "c"}]}], "]"}], ";", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Length", "[", "c", "]"}], ",", "t"}], "}"}]}], ",", 
       RowBox[{
        RowBox[{"b", "=", 
         RowBox[{"PadLeft", "[", 
          RowBox[{
           RowBox[{"PadRight", "[", 
            RowBox[{"c", ",", 
             RowBox[{
              RowBox[{"Length", "[", "c", "]"}], "+", "n", "-", "1"}], ",", 
             "0"}], "]"}], ",", 
           RowBox[{
            RowBox[{"Length", "[", "c", "]"}], "+", 
            RowBox[{"2", "*", 
             RowBox[{"(", 
              RowBox[{"n", "-", "1"}], ")"}]}]}], ",", "0"}], "]"}]}], ";", 
        RowBox[{"c", "=", 
         RowBox[{"{", "}"}]}], ";", 
        RowBox[{"d", "=", 
         RowBox[{"d", "+", "1"}]}], ";", 
        RowBox[{"j", "=", "1"}], ";", 
        RowBox[{"Goto", "[", "ArtKr", "]"}]}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`CodeEncode`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CodeEncode", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"ToString", "[", "x", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#", ",", 
            RowBox[{"Prime", "[", "#", "]"}]}], "}"}], "&"}], ",", 
         RowBox[{"Range5", "[", 
          RowBox[{"2", ";;", "126"}], "]"}]}], "]"}]}], ",", 
      RowBox[{"c", "=", "\"\<\>\""}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{"ToCharacterCode", "[", "a", "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Max", "[", "d", "]"}], "\[LessEqual]", "126"}], ",", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"c", "=", 
          RowBox[{"c", "<>", 
           RowBox[{"FromCharacterCode", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Select", "[", 
               RowBox[{"b", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Max", "[", "d", "]"}], "\[LessEqual]", "126"}], 
                    ",", "1", ",", "2"}], "]"}], "]"}], "]"}], "\[Equal]", 
                  RowBox[{"d", "[", 
                   RowBox[{"[", "k", "]"}], "]"}]}], "&"}]}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", 
           RowBox[{"Length", "[", "d", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"c", "=", 
          RowBox[{"c", "<>", 
           RowBox[{"FromCharacterCode", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Select", "[", 
               RowBox[{"b", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
                  RowBox[{"d", "[", 
                   RowBox[{"[", "k", "]"}], "]"}]}], "&"}]}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", 
           RowBox[{"Length", "[", "d", "]"}]}], "}"}]}], "]"}]}], "]"}], ";", 
     " ", "c"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`CodeEncode1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CodeEncode1", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "x", "]"}], "||", 
     RowBox[{"StringQ", "[", "x", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{"ReadString", "[", 
         RowBox[{"x", ",", 
          RowBox[{
          "\"\<\\n\>\"", "|", "\"\<\\n\\n\>\"", "|", "\"\<\\r\\n\>\""}]}], 
         "]"}]}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Quiet", "[", 
           RowBox[{"Check", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"StringCases", "[", 
               RowBox[{"a", ",", 
                RowBox[{"\"\<Attributes[a$\>\"", "~~", 
                 RowBox[{"Shortest", "[", "X__", "]"}], "~~", 
                 "\"\<] = {Temporary}\>\""}]}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "$Failed"}], "]"}], "]"}], 
          "===", "$Failed"}], ",", 
         RowBox[{
          RowBox[{"a", "=", 
           RowBox[{"CodeEncode", "[", 
            RowBox[{"ReadString", "[", "x", "]"}], "]"}]}], ";", " ", 
          RowBox[{"DeleteFile", "[", "x", "]"}], ";", " ", 
          RowBox[{"Save", "[", 
           RowBox[{"x", ",", "a"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"a", "=", 
           RowBox[{"Get", "[", "x", "]"}]}], ";", " ", 
          RowBox[{"a", "=", 
           RowBox[{"CodeEncode", "[", "a", "]"}]}], ";", " ", 
          RowBox[{"a", "=", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"SuffPref", "[", 
               RowBox[{"a", ",", "\"\<\\\"\>\"", ",", "1"}], "]"}], "&&", 
              RowBox[{"SuffPref", "[", 
               RowBox[{"a", ",", "\"\<\\r\\n\>\"", ",", "2"}], "]"}]}], ",", 
             RowBox[{"ToExpression", "[", 
              RowBox[{"StringTake", "[", 
               RowBox[{"a", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", 
                  RowBox[{"-", "3"}]}], "}"}]}], "]"}], "]"}], ",", "a"}], 
            "]"}]}], ";", " ", 
          RowBox[{"WriteString", "[", 
           RowBox[{"x", ",", "a"}], "]"}], ";", " ", 
          RowBox[{"Close", "[", "x", "]"}], ";", " ", 
          RowBox[{"CodeEncode", "[", 
           RowBox[{"CodeEncode", "[", "a", "]"}], "]"}]}]}], "]"}]}], ",", 
      " ", 
      RowBox[{"CodeEncode", "[", "x", "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`SubConf`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SubConf", "[", 
   RowBox[{
    RowBox[{"Ltf_", "/;", 
     RowBox[{"ListQ", "[", "Ltf", "]"}]}], ",", 
    RowBox[{"Cf_", "/;", 
     RowBox[{"StringQ", "[", "Cf", "]"}]}], ",", 
    RowBox[{"p_", "/;", 
     RowBox[{"IntegerQ", "[", "p", "]"}]}], ",", 
    RowBox[{"h_", "/;", 
     RowBox[{"StringQ", "[", "h", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "=", 
       RowBox[{"StringLength", "[", 
        RowBox[{"Part", "[", 
         RowBox[{
          RowBox[{"Ltf", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], "]"}]}], ",", 
      "a", ",", "b", ",", 
      RowBox[{"c", "=", "\"\<\>\""}], ",", "k", ",", 
      RowBox[{"d", "=", "0"}], ",", "t"}], "}"}], ",", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"ToString", ",", 
         RowBox[{"NestList", "[", 
          RowBox[{"Sin", ",", "0", ",", 
           RowBox[{"n", "-", "2"}]}], "]"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"a", "<>", "h", "<>", "a"}]}], ";", " ", 
     RowBox[{"Label", "[", "AVZ", "]"}], ";", " ", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", 
        RowBox[{
         RowBox[{"StringLength", "[", "b", "]"}], "-", "n", "+", "1"}]}], ",", 
       RowBox[{"k", "\[GreaterEqual]", "1"}], ",", 
       RowBox[{"k", "--"}], ",", 
       RowBox[{"c", "=", 
        RowBox[{
         RowBox[{"StringReplace", "[", 
          RowBox[{
           RowBox[{"StringTake", "[", 
            RowBox[{"b", ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", 
               RowBox[{"k", "+", "n", "-", "1"}]}], "}"}]}], "]"}], ",", 
           "Ltf"}], "]"}], "<>", "c"}]}]}], "]"}], ";", " ", 
     RowBox[{"b", "=", 
      RowBox[{"a", "<>", "c", "<>", "a"}]}], ";", " ", 
     RowBox[{"c", "=", "\"\<\>\""}], ";", 
     RowBox[{"d", "=", 
      RowBox[{"d", "+", "1"}]}], ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"t", "=", 
         RowBox[{"StringCount", "[", 
          RowBox[{"b", ",", "Cf"}], "]"}]}], ";", " ", 
        RowBox[{"t", "\[GreaterEqual]", "p"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"d", ",", "t"}], "}"}], ",", 
       RowBox[{"Goto", "[", "AVZ", "]"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ToLTF`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ToLTF", "[", 
   RowBox[{
    RowBox[{"A_", "/;", 
     RowBox[{"ListQ", "[", "A", "]"}]}], ",", 
    RowBox[{"n_", "/;", 
     RowBox[{"IntegerQ", "[", "n", "]"}]}], ",", 
    RowBox[{"F_", "/;", 
     RowBox[{"SymbolQ", "[", "F", "]"}]}], ",", 
    RowBox[{"p_", "/;", 
     RowBox[{"IntegerQ", "[", "p", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Tuples", "[", 
        RowBox[{"A", ",", "n"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"k", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "a", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{"b", "=", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"b", ",", 
          RowBox[{"Rule", "[", 
           RowBox[{
            RowBox[{"StringJoin", "[", 
             RowBox[{"Map", "[", 
              RowBox[{"ToString", ",", 
               RowBox[{"a", "[", 
                RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "]"}], ",", 
            RowBox[{"ToString", "[", 
             RowBox[{"F", "[", 
              RowBox[{
               RowBox[{"a", "[", 
                RowBox[{"[", "k", "]"}], "]"}], ",", "p"}], "]"}], "]"}]}], 
           "]"}]}], "]"}]}]}], "]"}], ";", "b"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`HSD`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HSD", "[", 
   RowBox[{
    RowBox[{"A_", "/;", 
     RowBox[{"ListQ", "[", "A", "]"}]}], ",", 
    RowBox[{"delays_", "/;", 
     RowBox[{"ListQ", "[", "delays", "]"}]}], ",", 
    RowBox[{"Cf_", "/;", 
     RowBox[{"ListQ", "[", "Cf", "]"}]}], ",", 
    RowBox[{"ltf_", "/;", 
     RowBox[{"ListQ", "[", "ltf", "]"}]}], ",", 
    RowBox[{"n_", "/;", 
     RowBox[{"IntegerQ", "[", "n", "]"}]}], ",", 
    RowBox[{"p_", "/;", 
     RowBox[{"IntegerQ", "[", "p", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"Riffle", "[", 
          RowBox[{"A", ",", "delays"}], "]"}], ",", "2"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", "-", "1"}], "}"}]}], "]"}]}], ",", "c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", "k", ",", "F", ",", "t", ",", "h", ",", 
      "g"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"F", "[", "x_List", "]"}], ":=", 
      RowBox[{"Part", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{"ltf", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Part", "[", 
              RowBox[{"#", ",", "1"}], "]"}], "\[Equal]", "x"}], "&"}]}], 
          "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "2"}], "]"}]}], ";", " ", 
     RowBox[{"g", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", 
           RowBox[{"delays", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"Position", "[", 
                RowBox[{"a", ",", "#"}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], "}"}], "&"}], 
        ",", "Cf"}], "]"}]}], ";", 
     RowBox[{"c", "=", 
      RowBox[{"Join", "[", 
       RowBox[{"b", ",", "g", ",", "b"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "0"}], "&&", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "0"}]}], ",", 
                "0", ",", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "-", "1"}]}], "]"}]}], 
             "}"}], "&"}], ",", "c"}], "]"}]}], ";", " ", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "1"}], ",", 
          RowBox[{"k", "\[LessEqual]", 
           RowBox[{
            RowBox[{"Length", "[", "c", "]"}], "-", "n", "+", "1"}]}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{
           RowBox[{"t", "=", 
            RowBox[{"c", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], ";", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"t", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", "0"}], ",", 
             RowBox[{"d", "=", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"d", ",", "t"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"h", "=", 
               RowBox[{"c", "[", 
                RowBox[{"[", 
                 RowBox[{"k", ";;", 
                  RowBox[{"k", "+", "n", "-", "1"}]}], "]"}], "]"}]}], ";", 
              " ", 
              RowBox[{"h", "=", 
               RowBox[{"F", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", "h"}], "]"}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"d", "=", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"d", ",", 
                 RowBox[{"{", 
                  RowBox[{"h", ",", 
                   RowBox[{"delays", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"A", ",", "1"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], "}"}]}], 
                "]"}]}]}]}], "]"}]}]}], "]"}], ";", 
        RowBox[{"c", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"b", ",", "d", ",", "b"}], "]"}]}], ";", 
        RowBox[{"d", "=", 
         RowBox[{"{", "}"}]}]}], ",", 
       RowBox[{"{", "p", "}"}]}], "]"}], ";", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", 
       RowBox[{"c", "[", 
        RowBox[{"[", 
         RowBox[{"n", ";;", 
          RowBox[{"-", "n"}]}], "]"}], "]"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ReprodHSD`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReprodHSD", "[", 
   RowBox[{
    RowBox[{"A_", "/;", 
     RowBox[{"ListQ", "[", "A", "]"}]}], ",", 
    RowBox[{"delays_", "/;", 
     RowBox[{"ListQ", "[", "delays", "]"}]}], ",", 
    RowBox[{"Cf_", "/;", 
     RowBox[{"ListQ", "[", "Cf", "]"}]}], ",", 
    RowBox[{"ltf_", "/;", 
     RowBox[{"ListQ", "[", "ltf", "]"}]}], ",", 
    RowBox[{"n_", "/;", 
     RowBox[{"IntegerQ", "[", "n", "]"}]}], ",", 
    RowBox[{"p_", "/;", 
     RowBox[{"IntegerQ", "[", "p", "]"}]}], ",", 
    RowBox[{"v_", "/;", 
     RowBox[{"IntegerQ", "[", "v", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"Riffle", "[", 
          RowBox[{"A", ",", "delays"}], "]"}], ",", "2"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", "-", "1"}], "}"}]}], "]"}]}], ",", "c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", "k", ",", "F", ",", "t", ",", "h", ",", "g",
       ",", "s"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"F", "[", "x_List", "]"}], ":=", 
      RowBox[{"Part", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{"ltf", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Part", "[", 
              RowBox[{"#", ",", "1"}], "]"}], "\[Equal]", "x"}], "&"}]}], 
          "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "2"}], "]"}]}], ";", " ", 
     RowBox[{"g", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", 
           RowBox[{"delays", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"Position", "[", 
                RowBox[{"a", ",", "#"}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], "}"}], "&"}], 
        ",", "Cf"}], "]"}]}], ";", 
     RowBox[{"c", "=", 
      RowBox[{"Join", "[", 
       RowBox[{"b", ",", "g", ",", "b"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "0"}], "&&", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "0"}]}], ",", 
                "0", ",", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "-", "1"}]}], "]"}]}], 
             "}"}], "&"}], ",", "c"}], "]"}]}], ";", " ", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "1"}], ",", 
          RowBox[{"k", "\[LessEqual]", 
           RowBox[{
            RowBox[{"Length", "[", "c", "]"}], "-", "n", "+", "1"}]}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{
           RowBox[{"t", "=", 
            RowBox[{"c", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], ";", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"t", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", "0"}], ",", 
             RowBox[{"d", "=", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"d", ",", "t"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"h", "=", 
               RowBox[{"c", "[", 
                RowBox[{"[", 
                 RowBox[{"k", ";;", 
                  RowBox[{"k", "+", "n", "-", "1"}]}], "]"}], "]"}]}], ";", 
              " ", 
              RowBox[{"h", "=", 
               RowBox[{"F", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", "h"}], "]"}], 
                "]"}]}], ";", " ", "\[IndentingNewLine]", 
              RowBox[{"d", "=", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"d", ",", 
                 RowBox[{"{", 
                  RowBox[{"h", ",", 
                   RowBox[{"delays", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"A", ",", "1"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], "}"}]}], 
                "]"}]}]}]}], "]"}]}]}], "]"}], ";", 
        RowBox[{"t", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", "d"}], "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"s", "=", 
            RowBox[{"ListCount", "[", 
             RowBox[{"t", ",", "Cf"}], "]"}]}], ";", 
           RowBox[{"s", "\[GreaterEqual]", "p"}]}], ",", 
          RowBox[{"Return", "[", 
           RowBox[{"{", 
            RowBox[{"p", ",", "s"}], "}"}], "]"}]}], "]"}], ";", 
        RowBox[{"c", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"b", ",", "d", ",", "b"}], "]"}]}], ";", 
        RowBox[{"d", "=", 
         RowBox[{"{", "}"}]}]}], ",", 
       RowBox[{"{", "v", "}"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ReprodHSM`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReprodHSM", "[", 
   RowBox[{
    RowBox[{"Cf_", "/;", 
     RowBox[{"ListQ", "[", "Cf", "]"}]}], ",", 
    RowBox[{"n_", "/;", 
     RowBox[{"IntegerQ", "[", "n", "]"}]}], ",", 
    RowBox[{"p_", "/;", 
     RowBox[{
      RowBox[{"IntegerQ", "[", "p", "]"}], "&&", 
      RowBox[{"p", ">", "0"}]}]}], ",", 
    RowBox[{"m_", "/;", 
     RowBox[{"IntegerQ", "[", "m", "]"}]}], ",", 
    RowBox[{"g_", "/;", 
     RowBox[{"IntegerQ", "[", "g", "]"}]}], ",", 
    RowBox[{"v_", "/;", 
     RowBox[{"IntegerQ", "[", "v", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{"p", "+", "1"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", "-", "1"}], "}"}]}], "]"}], "]"}]}], ",", "b", ",", 
      "c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", "k", ",", "G", ",", "h", ",", "t", ",", 
      "s"}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", "a", "}"}], ",", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"#", ",", 
              RowBox[{"a", "[", 
               RowBox[{"[", 
                RowBox[{"1", ";;", "p"}], "]"}], "]"}]}], "}"}], "]"}], "&"}],
           ",", "Cf"}], "]"}], ",", 
        RowBox[{"{", "a", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"G", "[", "x_List", "]"}], ":=", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"Total", "[", "x", "]"}], ",", "m"}], "]"}]}], ";", " ", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "1"}], ",", 
          RowBox[{"k", "\[LessEqual]", 
           RowBox[{
            RowBox[{"Length", "[", "b", "]"}], "-", "n", "+", "1"}]}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{
           RowBox[{"h", "=", 
            RowBox[{"b", "[", 
             RowBox[{"[", 
              RowBox[{"k", ";;", 
               RowBox[{"k", "+", "n", "-", "1"}]}], "]"}], "]"}]}], ";", " ", 
           RowBox[{"c", "=", 
            RowBox[{"G", "[", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Part", "[", 
                    RowBox[{"#", ",", "1"}], "]"}], "&"}], ",", "h"}], "]"}], 
                ",", 
                RowBox[{
                 RowBox[{"b", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ";;", 
                   RowBox[{"-", "1"}]}], "]"}], "]"}]}], "}"}], "]"}], 
             "]"}]}], ";", " ", 
           RowBox[{"d", "=", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"d", ",", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"c", ",", 
                 RowBox[{
                  RowBox[{"b", "[", 
                   RowBox[{"[", "k", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"3", ";;", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "c"}], "}"}], 
               "]"}]}], "]"}]}]}]}], "]"}], ";", " ", "\[IndentingNewLine]", 
        RowBox[{"t", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", "d"}], "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"s", "=", 
            RowBox[{"ListCount", "[", 
             RowBox[{"t", ",", "Cf"}], "]"}]}], ";", 
           RowBox[{"s", "\[GreaterEqual]", "g"}]}], ",", 
          RowBox[{"Return", "[", 
           RowBox[{"{", 
            RowBox[{"g", ",", "s"}], "}"}], "]"}]}], "]"}], ";", 
        RowBox[{"b", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "a", "}"}], ",", "d", ",", 
           RowBox[{"{", "a", "}"}]}], "]"}]}], ";", 
        RowBox[{"d", "=", 
         RowBox[{"{", "}"}]}]}], ",", 
       RowBox[{"{", "v", "}"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ConvertMtoMx`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ConvertMtoMx", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
       "\"\<m\>\""}]}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{"Head", "[", "y", "]"}], "\[Equal]", "Symbol"}]}], ",", 
    "z___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", 
      RowBox[{"h", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"f", "=", 
       RowBox[{
        RowBox[{"StringTake", "[", 
         RowBox[{"x", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "2"}]}], "}"}]}], "]"}], "<>", "\"\<mx\>\""}]}], ",", 
      RowBox[{"p", "=", "\"\<\\\"\>\""}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"StringReplace", "[", 
       RowBox[{
        RowBox[{"StringJoin", "[", 
         RowBox[{"Map", "[", 
          RowBox[{"FromCharacterCode", ",", 
           RowBox[{"BinaryReadList", "[", "x", "]"}]}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<(**)\>\"", "->", "\"\<\>\""}], ",", 
          RowBox[{"\"\<*)\\r\\n(*\>\"", "\[Rule]", "\"\<\\r\>\""}], ",", 
          RowBox[{"\"\<*)\\r\\n\\r\\n(*\>\"", "->", "\"\<\\r\>\""}], ",", 
          RowBox[{"\"\<*)\\r\\n\\r\\n(\\r\\n*\>\"", "->", "\"\<\\r\>\""}], 
          ",", 
          RowBox[{"\"\<(* ::\>\"", "->", "\"\<::\>\""}], ",", 
          RowBox[{"\"\<End[]\>\"", "->", "\"\<\>\""}]}], " ", "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"a", "=", 
      RowBox[{"StringTake", "[", 
       RowBox[{"a", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"StringPosition", "[", 
              RowBox[{"a", ",", "\"\<BeginPackage[\>\""}], "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], ",", 
          RowBox[{"-", "4"}]}], "}"}]}], "]"}]}], ";", " ", 
     RowBox[{"b", "=", 
      RowBox[{"StringCases", "[", 
       RowBox[{"a", ",", 
        RowBox[{"\"\<Begin[\\\"`\>\"", "~~", 
         RowBox[{"Shortest", "[", "X__", "]"}], "~~", "\"\<`\\\"]\>\""}]}], 
       "]"}]}], ";", " ", 
     RowBox[{"c", "=", 
      RowBox[{"StringTake", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringCases", "[", 
          RowBox[{"a", ",", 
           RowBox[{"\"\<BeginPackage[\\\"\>\"", "~~", 
            RowBox[{"Shortest", "[", "X__", "]"}], "~~", "\"\<\\\"]\>\""}]}], 
          "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"14", ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "]"}]}], ";", " ", 
     "\[IndentingNewLine]", " ", 
     RowBox[{"Quiet", "[", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"StringTake", "[", 
        RowBox[{
         RowBox[{"StringReplace", "[", 
          RowBox[{"a", ",", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Rule", "[", 
               RowBox[{"#", ",", "\"\<\>\""}], "]"}], "&"}], ",", "b"}], 
            "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "2"}]}], "}"}]}], "]"}], "]"}], "]"}], ";", "   ", 
     "\[IndentingNewLine]", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
      "\"\<DumpSave[\>\"", "<>", "p", "<>", "f", "<>", "p", "<>", "\"\<,\>\"",
        "<>", "c", "<>", "\"\<]\>\""}], "]"}], ";", " ", 
     RowBox[{"y", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"StringTake", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", 
             RowBox[{"9", ",", 
              RowBox[{"-", "4"}]}], "}"}]}], "]"}], "&"}], ",", "b"}], "]"}], 
       "]"}]}], ";", "  ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "z", "}"}], "\[NotEqual]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{"ClearAll", ",", "y"}], "]"}], ";", 
        RowBox[{
        "d", "=", 
         "\"\<ClearAttributes[{$Packages,Contexts},Protected]; \
$Packages=Select[$Packages,StringFreeQ[#,g]&]; \
Contexts[]=Select[Contexts[],StringFreeQ[#,g]&]; \
SetAttributes[{$Packages,Contexts},Protected]; \
$ContextPath=Select[$ContextPath,StringFreeQ[#,g]&]\>\""}], ";", " ", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"StringReplace", "[", 
          RowBox[{"d", ",", 
           RowBox[{"\"\<,g\>\"", "\[Rule]", 
            RowBox[{"\"\<,\>\"", "<>", "c"}]}]}], "]"}], "]"}], ";"}], ",", 
       "Null"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ContUsageMfile`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContUsageMfile", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
       "\"\<m\>\""}]}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", "y", "}"}], "\[NotEqual]", 
      RowBox[{"{", "}"}]}], "&&", 
     RowBox[{
      RowBox[{"Head", "[", "y", "]"}], "\[Equal]", "Symbol"}]}], ",", 
    RowBox[{"StringReplace", "[", 
     RowBox[{
      RowBox[{"StringTake", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringCases", "[", 
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{"Map", "[", 
             RowBox[{"FromCharacterCode", ",", 
              RowBox[{"BinaryReadList", "[", "x", "]"}]}], "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"ToString", "[", "y", "]"}], "<>", "\"\<::usage=\>\""}], 
            " ", "~~", 
            RowBox[{"Shortest", "[", "X__", "]"}], "~~", "\"\<(**)\>\""}]}], 
          "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "9"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"\"\<::usage=\>\"", "->", "\"\<::\>\""}], ",", "1"}], "]"}], 
    ",", 
    RowBox[{"Sort", "[", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"StringTake", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", 
           RowBox[{"9", ",", 
            RowBox[{"-", "4"}]}], "}"}]}], "]"}], "&"}], ",", 
       RowBox[{"StringCases", "[", 
        RowBox[{
         RowBox[{"StringJoin", "[", 
          RowBox[{"Map", "[", 
           RowBox[{"FromCharacterCode", ",", 
            RowBox[{"BinaryReadList", "[", "x", "]"}]}], "]"}], "]"}], ",", 
         RowBox[{"\"\<Begin[\\\"`\>\"", "~~", 
          RowBox[{"Shortest", "[", "X__", "]"}], "~~", "\"\<`\\\"]\>\""}]}], 
        "]"}]}], "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`CodeObjMfile`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CodeObjMfile", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
       "\"\<m\>\""}]}]}], ",", 
    RowBox[{"y_", "/;", 
     RowBox[{
      RowBox[{"Head", "[", "y", "]"}], "\[Equal]", "Symbol"}]}]}], "]"}], ":=", 
  RowBox[{"StringTake", "[", 
   RowBox[{
    RowBox[{"StringReplace", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"StringCases", "[", 
        RowBox[{
         RowBox[{"StringJoin", "[", 
          RowBox[{"Map", "[", 
           RowBox[{"FromCharacterCode", ",", 
            RowBox[{"BinaryReadList", "[", "x", "]"}]}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"\"\<Begin[\\\"`\>\"", "<>", 
           RowBox[{"ToString", "[", "y", "]"}], "<>", "\"\<`\\\"]\>\""}], "~~", 
          RowBox[{"Shortest", "[", "W__", "]"}], "~~", "\"\<End[]\>\""}]}], 
        "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"\"\<*)\\r\\n(*\>\"", "->", "\"\<\\r\>\""}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"13", "+", 
       RowBox[{"StringLength", "[", 
        RowBox[{"ToString", "[", "y", "]"}], "]"}]}], ",", 
      RowBox[{"-", "7"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ContCodeUsageM`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContCodeUsageM", "[", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "x", "]"}], "&&", 
      RowBox[{
       RowBox[{"FileExtension", "[", "x", "]"}], "\[Equal]", 
       "\"\<m\>\""}]}]}], ",", "y___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"StringJoin", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"FromCharacterCode", ",", 
          RowBox[{"BinaryReadList", "[", "x", "]"}]}], "]"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"{", "y", "}"}]}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "b", "]"}], ">", "1"}], "&&", 
       RowBox[{
        RowBox[{"Head", "[", 
         RowBox[{"b", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", "Symbol"}]}], 
      ",", 
      RowBox[{"StringTake", "[", 
       RowBox[{
        RowBox[{"StringReplace", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"StringCases", "[", 
            RowBox[{"a", ",", 
             RowBox[{
              RowBox[{"\"\<Begin[\\\"`\>\"", "<>", 
               RowBox[{"ToString", "[", 
                RowBox[{"b", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
               "\"\<`\\\"]\>\""}], "~~", 
              RowBox[{"Shortest", "[", "W__", "]"}], "~~", 
              "\"\<End[]\>\""}]}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"\"\<*)\\r\\n(*\>\"", "\[Rule]", "\"\<\\r\>\""}]}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"13", "+", 
           RowBox[{"StringLength", "[", 
            RowBox[{"ToString", "[", 
             RowBox[{"b", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], ",", 
          RowBox[{"-", "7"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"b", "\[NotEqual]", 
          RowBox[{"{", "}"}]}], "&&", 
         RowBox[{
          RowBox[{"Head", "[", 
           RowBox[{"b", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", "Symbol"}]}], 
        ",", 
        RowBox[{"StringReplace", "[", 
         RowBox[{
          RowBox[{"StringTake", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"StringCases", "[", 
              RowBox[{"a", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"ToString", "[", 
                  RowBox[{"b", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
                 "\"\<::usage=\>\""}], "~~", 
                RowBox[{"Shortest", "[", "W__", "]"}], "~~", 
                "\"\<(**)\>\""}]}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"-", "9"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"\"\<::usage=\>\"", "\[Rule]", "\"\<::\>\""}], ",", "1"}], 
         "]"}], ",", 
        RowBox[{"Sort", "[", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"StringTake", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{"9", ",", 
                 RowBox[{"-", "4"}]}], "}"}]}], "]"}], "&"}], ",", 
            RowBox[{"StringCases", "[", 
             RowBox[{"a", ",", 
              RowBox[{"\"\<Begin[\\\"`\>\"", "~~", 
               RowBox[{"Shortest", "[", "W__", "]"}], "~~", 
               "\"\<`\\\"]\>\""}]}], "]"}]}], "]"}], "]"}], "]"}]}], "]"}], 
      ",", "$Failed"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ReprodHSM1`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReprodHSM1", "[", 
   RowBox[{
    RowBox[{"Cf_", "/;", 
     RowBox[{"ListQ", "[", "Cf", "]"}]}], ",", 
    RowBox[{"n_", "/;", 
     RowBox[{"IntegerQ", "[", "n", "]"}]}], ",", 
    RowBox[{"p_", "/;", 
     RowBox[{
      RowBox[{"IntegerQ", "[", "p", "]"}], "&&", 
      RowBox[{"p", ">", "0"}]}]}], ",", 
    RowBox[{"m_", "/;", 
     RowBox[{"IntegerQ", "[", "m", "]"}]}], ",", 
    RowBox[{"g_", "/;", 
     RowBox[{"IntegerQ", "[", "g", "]"}]}], ",", 
    RowBox[{"v_", "/;", 
     RowBox[{"IntegerQ", "[", "v", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{"p", "+", "1"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", "-", "1"}], "}"}]}], "]"}], "]"}]}], ",", "b", ",", 
      "c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", "k", ",", "G", ",", "h", ",", "t", ",", "s",
       ",", 
      RowBox[{"x", "=", "0"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", "a", "}"}], ",", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"#", ",", 
              RowBox[{"a", "[", 
               RowBox[{"[", 
                RowBox[{"1", ";;", "p"}], "]"}], "]"}]}], "}"}], "]"}], "&"}],
           ",", "Cf"}], "]"}], ",", 
        RowBox[{"{", "a", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"G", "[", "x_List", "]"}], ":=", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"Total", "[", "x", "]"}], ",", "m"}], "]"}]}], ";", " ", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "1"}], ",", 
          RowBox[{"k", "\[LessEqual]", 
           RowBox[{
            RowBox[{"Length", "[", "b", "]"}], "-", "n", "+", "1"}]}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{
           RowBox[{"h", "=", 
            RowBox[{"b", "[", 
             RowBox[{"[", 
              RowBox[{"k", ";;", 
               RowBox[{"k", "+", "n", "-", "1"}]}], "]"}], "]"}]}], ";", 
           RowBox[{"c", "=", 
            RowBox[{"G", "[", 
             RowBox[{"Flatten", "[", "h", "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"d", "=", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"d", ",", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"c", ",", 
                 RowBox[{
                  RowBox[{"b", "[", 
                   RowBox[{"[", "k", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"3", ";;", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "c"}], "}"}], 
               "]"}]}], "]"}]}]}]}], "]"}], ";", " ", 
        RowBox[{"t", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", "d"}], "]"}]}], ";", 
        RowBox[{"x", "++"}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"s", "=", 
            RowBox[{"ListCount", "[", 
             RowBox[{"t", ",", "Cf"}], "]"}]}], ";", 
           RowBox[{"s", "\[GreaterEqual]", "g"}]}], ",", 
          RowBox[{"Return", "[", 
           RowBox[{"{", 
            RowBox[{"x", ",", "g", ",", "s"}], "}"}], "]"}]}], "]"}], ";", 
        " ", 
        RowBox[{"b", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "a", "}"}], ",", "d", ",", 
           RowBox[{"{", "a", "}"}]}], "]"}]}], ";", 
        RowBox[{"d", "=", 
         RowBox[{"{", "}"}]}]}], ",", 
       RowBox[{"{", "v", "}"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Begin", "[", "\"\<`ReprodHSwVni`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReprodHSwVni", "[", 
   RowBox[{
    RowBox[{"A_", "/;", 
     RowBox[{"ListQ", "[", "A", "]"}]}], ",", 
    RowBox[{"Cf_", "/;", 
     RowBox[{"ListQ", "[", "Cf", "]"}]}], ",", 
    RowBox[{"m_", "/;", 
     RowBox[{"IntegerQ", "[", "m", "]"}]}], ",", 
    RowBox[{"g_", "/;", 
     RowBox[{"IntegerQ", "[", "g", "]"}]}], ",", 
    RowBox[{"v_", "/;", 
     RowBox[{"IntegerQ", "[", "v", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"Length", "[", "A", "]"}], "}"}]}], "]"}]}], ",", "b", ",", 
      "c", ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", "k", ",", "G", ",", "h", ",", "t", ",", "s",
       ",", 
      RowBox[{"x", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"x_", "/;", 
        RowBox[{"ListQ", "[", "x", "]"}]}], "]"}], ":=", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"Total", "[", "x", "]"}], ",", "m"}], "]"}]}], ";", 
     RowBox[{"b", "=", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", "0", "}"}], ",", "Cf", ",", "a"}], "]"}]}], ";", " ", 
     "\[IndentingNewLine]", " ", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "1"}], ",", 
          RowBox[{"k", "<", 
           RowBox[{"Length", "[", "b", "]"}]}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{
           RowBox[{"h", "=", 
            RowBox[{"b", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], ";", 
           RowBox[{"h", "=", 
            RowBox[{"b", "[", 
             RowBox[{"[", 
              RowBox[{"k", ";;", 
               RowBox[{"k", "+", "h", "+", "1"}]}], "]"}], "]"}]}], ";", 
           RowBox[{"c", "=", 
            RowBox[{"G", "[", 
             RowBox[{"Flatten", "[", "h", "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"d", "=", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"d", ",", "c"}], "]"}]}]}]}], "]"}], ";", " ", 
        RowBox[{"x", "++"}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"s", "=", 
            RowBox[{"ListCount", "[", 
             RowBox[{"d", ",", "Cf"}], "]"}]}], ";", 
           RowBox[{"s", "\[GreaterEqual]", "g"}]}], ",", 
          RowBox[{"Return", "[", 
           RowBox[{"{", 
            RowBox[{"x", ",", "g", ",", "s"}], "}"}], "]"}]}], "]"}], ";", 
        " ", 
        RowBox[{"d", "=", 
         RowBox[{"ListTrim", "[", 
          RowBox[{"d", ",", "0"}], "]"}]}], ";", 
        RowBox[{"b", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "0", "}"}], ",", "d", ",", "a"}], "]"}]}], ";", 
        RowBox[{"d", "=", 
         RowBox[{"{", "}"}]}]}], ",", 
       RowBox[{"{", "v", "}"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"End", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ToExpression", "[", 
  RowBox[{"PureDefinition", "[", "TestHeadingQ", "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ToExpression", "[", 
  RowBox[{"PureDefinition", "[", "FileOpenQ", "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"EndPackage", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.505987008625*^9, 3.505987008625*^9}, {
   3.505987218359375*^9, 3.5059872190625*^9}, {3.505987289265625*^9, 
   3.50598747575*^9}, {3.50598750821875*^9, 3.505987553828125*^9}, {
   3.505987585140625*^9, 3.505987638859375*^9}, {3.505987744890625*^9, 
   3.505987749953125*^9}, {3.505987785453125*^9, 3.50598785453125*^9}, {
   3.50598841153125*^9, 3.5059884318125*^9}, {3.50598859740625*^9, 
   3.505988604765625*^9}, {3.505988682609375*^9, 3.50598868453125*^9}, 
   3.50598872084375*^9, {3.505988795953125*^9, 3.5059888016875*^9}, {
   3.5059888826875*^9, 3.505988889046875*^9}, 3.5059890096875*^9, {
   3.5059890814375*^9, 3.50598908984375*^9}, {3.505989141625*^9, 
   3.505989144*^9}, {3.505989270328125*^9, 3.505989358515625*^9}, {
   3.50598939834375*^9, 3.50598944603125*^9}, {3.50598949003125*^9, 
   3.5059895360625*^9}, 3.505989618421875*^9, {3.505989672328125*^9, 
   3.505989685546875*^9}, {3.505990156125*^9, 3.505990281046875*^9}, {
   3.505990343765625*^9, 3.505990426890625*^9}, {3.505990460375*^9, 
   3.505990475125*^9}, {3.505990532796875*^9, 3.5059905445*^9}, {
   3.50599160121875*^9, 3.50599162725*^9}, {3.505992135515625*^9, 
   3.505992149375*^9}, {3.505995107890625*^9, 3.505995111546875*^9}, {
   3.50600832696875*^9, 3.506008406359375*^9}, {3.5060084394375*^9, 
   3.5060085043125*^9}, {3.506008589671875*^9, 3.506008644109375*^9}, {
   3.50600868825*^9, 3.50600877534375*^9}, {3.506008850171875*^9, 
   3.5060089800625*^9}, {3.50600904296875*^9, 3.506009044828125*^9}, {
   3.506009094625*^9, 3.506009137796875*^9}, {3.50606631678125*^9, 
   3.506066461921875*^9}, {3.5060847720625*^9, 3.506084776375*^9}, {
   3.506084811875*^9, 3.50608504828125*^9}, {3.506085154125*^9, 
   3.506085164921875*^9}, 3.506085202890625*^9, {3.506189524203125*^9, 
   3.5061895535*^9}, {3.506189632203125*^9, 3.506189643140625*^9}, {
   3.50618981953125*^9, 3.50618984628125*^9}, {3.506189997390625*^9, 
   3.506190000921875*^9}, {3.50623049125*^9, 3.506230511203125*^9}, {
   3.50623059496875*^9, 3.50623063496875*^9}, {3.5062306874375*^9, 
   3.5062307260625*^9}, 3.506231029*^9, {3.506231394078125*^9, 
   3.506231426453125*^9}, {3.506231474078125*^9, 3.50623150721875*^9}, {
   3.50623161834375*^9, 3.506231667359375*^9}, {3.506231877578125*^9, 
   3.50623190284375*^9}, {3.506232007421875*^9, 3.506232049546875*^9}, {
   3.506232151765625*^9, 3.5062321605625*^9}, {3.5062336496875*^9, 
   3.50623369184375*^9}, {3.506233850890625*^9, 3.5062338755625*^9}, {
   3.506233965828125*^9, 3.506233991125*^9}, {3.506234067546875*^9, 
   3.5062340978125*^9}, {3.50623424059375*^9, 3.506234270859375*^9}, 
   3.506234332203125*^9, {3.506234397484375*^9, 3.506234433140625*^9}, {
   3.506234590515625*^9, 3.506234599578125*^9}, {3.50623472790625*^9, 
   3.5062347501875*^9}, {3.50623487371875*^9, 3.506234908703125*^9}, {
   3.506234962484375*^9, 3.50623498990625*^9}, {3.50623507928125*^9, 
   3.50623509784375*^9}, {3.506235190984375*^9, 3.50623524109375*^9}, {
   3.5062354671875*^9, 3.50623548446875*^9}, {3.506235831453125*^9, 
   3.506235833265625*^9}, {3.506242667953125*^9, 3.50624272053125*^9}, 
   3.506242918625*^9, {3.506242956109375*^9, 3.506242997015625*^9}, 
   3.5062432569375*^9, {3.50624336775*^9, 3.506243370421875*^9}, {
   3.506246018359375*^9, 3.5062460375*^9}, {3.50624617425*^9, 
   3.506246197046875*^9}, {3.506247652234375*^9, 3.506247670484375*^9}, {
   3.506247765984375*^9, 3.5062477856875*^9}, {3.506254015875*^9, 
   3.506254034671875*^9}, {3.506254123171875*^9, 3.506254134921875*^9}, {
   3.506254308234375*^9, 3.506254320546875*^9}, {3.5062546633125*^9, 
   3.506254697046875*^9}, 3.50625513153125*^9, {3.5062661209375*^9, 
   3.506266163671875*^9}, {3.506266535109375*^9, 3.506266556859375*^9}, 
   3.50627198884375*^9, {3.5063160818308992`*^9, 3.5063161075183992`*^9}, {
   3.5063165371277742`*^9, 3.5063165907683992`*^9}, {3.5063166363933992`*^9, 
   3.5063166373777742`*^9}, {3.5063615949375*^9, 3.506361595359375*^9}, {
   3.50642770940625*^9, 3.50642773596875*^9}, {3.50642777659375*^9, 
   3.506427812546875*^9}, {3.506427849265625*^9, 3.506428003859375*^9}, {
   3.506428198734375*^9, 3.506428204046875*^9}, {3.50643147209375*^9, 
   3.506431492078125*^9}, {3.5064315460625*^9, 3.506431565109375*^9}, {
   3.506431846703125*^9, 3.50643188234375*^9}, {3.50643740765625*^9, 
   3.506437430296875*^9}, {3.50643772653125*^9, 3.50643774775*^9}, {
   3.506502460359375*^9, 3.506502510125*^9}, 3.506503463375*^9, {
   3.506503510140625*^9, 3.50650354171875*^9}, {3.50651230503125*^9, 
   3.50651251221875*^9}, 3.506512630484375*^9, 3.506514297765625*^9, {
   3.506514476515625*^9, 3.50651448915625*^9}, {3.5067670881875*^9, 
   3.506767192578125*^9}, {3.50676726396875*^9, 3.506767264515625*^9}, {
   3.506767321484375*^9, 3.5067673400625*^9}, {3.5067709733125*^9, 
   3.50677099603125*^9}, {3.50677143934375*^9, 3.506771452703125*^9}, 
   3.506771697734375*^9, {3.506771749890625*^9, 3.50677178225*^9}, {
   3.5067793580625*^9, 3.506779365125*^9}, {3.5068531993125*^9, 
   3.506853282046875*^9}, {3.50685331209375*^9, 3.50685334653125*^9}, {
   3.506853539328125*^9, 3.506853539546875*^9}, {3.50696183046875*^9, 
   3.50696185353125*^9}, {3.5069622810625*^9, 3.50696230065625*^9}, {
   3.507023133796875*^9, 3.507023158765625*^9}, 3.507023367671875*^9, {
   3.50711476340625*^9, 3.507114792640625*^9}, {3.507115017765625*^9, 
   3.50711503475*^9}, 3.50711694865625*^9, {3.507125438859375*^9, 
   3.507125484859375*^9}, {3.507125656234375*^9, 3.507125668796875*^9}, {
   3.50713413590625*^9, 3.507134154328125*^9}, {3.507134597546875*^9, 
   3.507134630859375*^9}, {3.5071824524375*^9, 3.507182452609375*^9}, {
   3.507203493890625*^9, 3.507203516109375*^9}, {3.507203948109375*^9, 
   3.507203951109375*^9}, 3.50720408546875*^9, {3.50721253246875*^9, 
   3.507212555046875*^9}, {3.507212697375*^9, 3.507212707109375*^9}, {
   3.507213038828125*^9, 3.507213046890625*^9}, {3.507216590609375*^9, 
   3.50721665378125*^9}, 3.50721669515625*^9, {3.507216741046875*^9, 
   3.507216784171875*^9}, {3.50721684675*^9, 3.50721687290625*^9}, {
   3.507217952546875*^9, 3.50721795996875*^9}, 3.5072180539375*^9, {
   3.507267901*^9, 3.50726791515625*^9}, 3.507267957171875*^9, {
   3.507268835078125*^9, 3.507268838015625*^9}, {3.507377285125*^9, 
   3.5073773561875*^9}, 3.5073853633125*^9, {3.507385597015625*^9, 
   3.50738562709375*^9}, {3.50738571265625*^9, 3.507385980078125*^9}, {
   3.507386018796875*^9, 3.507386140125*^9}, {3.5073862471875*^9, 
   3.507386272734375*^9}, {3.50738660075*^9, 3.5073866543125*^9}, {
   3.507386714390625*^9, 3.507386751328125*^9}, 3.50738724675*^9, {
   3.507387391609375*^9, 3.50738740503125*^9}, {3.507387508734375*^9, 
   3.507387510515625*^9}, {3.507396515578125*^9, 3.507396537125*^9}, {
   3.5073968264375*^9, 3.5073968505*^9}, 3.50743974646875*^9, {
   3.50743991653125*^9, 3.50743992525*^9}, {3.507440541984375*^9, 
   3.507440558890625*^9}, {3.5074428465*^9, 3.507442857390625*^9}, {
   3.507442901390625*^9, 3.507442909765625*^9}, {3.5074429431875*^9, 
   3.507442992609375*^9}, {3.507456266125*^9, 3.507456269671875*^9}, {
   3.507477909546875*^9, 3.5074779485*^9}, {3.50747816678125*^9, 
   3.507478206375*^9}, {3.507540058165651*^9, 3.507540090228151*^9}, {
   3.5075438781500263`*^9, 3.5075439054937763`*^9}, {3.5075439386812763`*^9, 
   3.507543946665651*^9}, {3.5075445038062763`*^9, 3.507544512228151*^9}, {
   3.5075560059625263`*^9, 3.5075560224000263`*^9}, {3.5075561248062763`*^9, 
   3.5075561274625263`*^9}, {3.507556284103151*^9, 3.5075562844625263`*^9}, {
   3.5075640084625263`*^9, 3.5075640088687763`*^9}, {3.5075643012437763`*^9, 
   3.5075643573062763`*^9}, 3.5075647060562763`*^9, {3.507564813790651*^9, 
   3.507564845571901*^9}, {3.507564957071901*^9, 3.507564957634401*^9}, {
   3.5075695981812763`*^9, 3.5075696354937763`*^9}, {3.507569670571901*^9, 
   3.5075696984625263`*^9}, {3.507569791353151*^9, 3.5075698102437763`*^9}, {
   3.5075699546812763`*^9, 3.507570081696901*^9}, {3.5075701325562763`*^9, 
   3.5075701329312763`*^9}, {3.50761224165625*^9, 3.50761224471875*^9}, 
   3.50761258275*^9, {3.507612686140625*^9, 3.507612688421875*^9}, {
   3.507613030140625*^9, 3.507613033015625*^9}, {3.50761315221875*^9, 
   3.507613160078125*^9}, {3.507642139296875*^9, 3.507642190234375*^9}, {
   3.507642279796875*^9, 3.507642302875*^9}, {3.50764240559375*^9, 
   3.507642408203125*^9}, {3.507642482546875*^9, 3.5076424849375*^9}, {
   3.507646738640625*^9, 3.507646788015625*^9}, 3.507646973609375*^9, {
   3.5076561935*^9, 3.507656195421875*^9}, {3.507696932875*^9, 
   3.507697040703125*^9}, {3.50769708640625*^9, 3.507697111796875*^9}, {
   3.507743492171875*^9, 3.507743587734375*^9}, 3.507781435*^9, {
   3.507781641390625*^9, 3.50778166875*^9}, {3.507781903296875*^9, 
   3.507781904828125*^9}, {3.507781939375*^9, 3.507781948640625*^9}, {
   3.507815954609375*^9, 3.5078159823125*^9}, {3.50781611671875*^9, 
   3.507816272453125*^9}, {3.507816345609375*^9, 3.50781634671875*^9}, 
   3.50781644828125*^9, {3.507823513203125*^9, 3.507823545859375*^9}, 
   3.5078236003125*^9, {3.5078236364375*^9, 3.50782365240625*^9}, {
   3.507823848640625*^9, 3.507823855421875*^9}, {3.5078239190625*^9, 
   3.507823946171875*^9}, 3.507823999875*^9, {3.507824091015625*^9, 
   3.50782412365625*^9}, {3.5078242056875*^9, 3.507824354859375*^9}, {
   3.507824431609375*^9, 3.50782445609375*^9}, {3.50782450628125*^9, 
   3.50782456965625*^9}, {3.507824625328125*^9, 3.50782463709375*^9}, {
   3.507824686*^9, 3.507824695578125*^9}, 3.507824933859375*^9, 
   3.50786687715625*^9, {3.507866985734375*^9, 3.50786698896875*^9}, {
   3.507869819609375*^9, 3.507869824015625*^9}, {3.507904216484375*^9, 
   3.507904247828125*^9}, {3.507904470390625*^9, 3.5079044940625*^9}, 
   3.50790453690625*^9, 3.50790464753125*^9, {3.507904759421875*^9, 
   3.507904827609375*^9}, 3.507906262375*^9, {3.507906297703125*^9, 
   3.507906378375*^9}, {3.507913863453125*^9, 3.507913927*^9}, {
   3.50791398359375*^9, 3.507913986328125*^9}, {3.50791402996875*^9, 
   3.507914136921875*^9}, 3.5081279150625*^9, {3.50813415221875*^9, 
   3.508134179421875*^9}, 3.50813421478125*^9, {3.508306224765625*^9, 
   3.50830626409375*^9}, {3.508306303453125*^9, 3.508306320421875*^9}, 
   3.5083063505625*^9, 3.50830658878125*^9, {3.508306889109375*^9, 
   3.50830689396875*^9}, {3.5083073371875*^9, 3.5083073505*^9}, 
   3.508307778859375*^9, {3.5083490450625*^9, 3.50834908140625*^9}, {
   3.50834914096875*^9, 3.508349154203125*^9}, {3.508405195953125*^9, 
   3.50840527121875*^9}, {3.508405445703125*^9, 3.508405453109375*^9}, {
   3.508405488984375*^9, 3.508405522625*^9}, 3.508407196640625*^9, {
   3.508416183234375*^9, 3.508416222265625*^9}, {3.508416401140625*^9, 
   3.508416425390625*^9}, {3.508479289296875*^9, 3.5084793205*^9}, 
   3.50848050559375*^9, {3.50848067*^9, 3.508480681640625*^9}, {
   3.508480750625*^9, 3.50848075625*^9}, {3.508480879546875*^9, 
   3.508480895453125*^9}, {3.5084809736875*^9, 3.5084809853125*^9}, {
   3.508490377484375*^9, 3.5084903879375*^9}, {3.508490491640625*^9, 
   3.5084905005*^9}, 3.50849183953125*^9, {3.508494268171875*^9, 
   3.50849427015625*^9}, {3.508504542359375*^9, 3.508504574375*^9}, {
   3.5085046454375*^9, 3.508504645640625*^9}, {3.508505017046875*^9, 
   3.5085050480625*^9}, {3.508563768328125*^9, 3.50856379165625*^9}, {
   3.5085638916875*^9, 3.50856389596875*^9}, {3.50856406565625*^9, 
   3.508564091859375*^9}, {3.508580164890625*^9, 3.508580198046875*^9}, {
   3.508580240359375*^9, 3.5085803294375*^9}, {3.50858055590625*^9, 
   3.508580603109375*^9}, 3.508580696765625*^9, {3.50858072684375*^9, 
   3.5085807465*^9}, {3.508596210171875*^9, 3.508596236359375*^9}, {
   3.50859634334375*^9, 3.508596348546875*^9}, {3.508596383671875*^9, 
   3.5085963995*^9}, {3.508596478625*^9, 3.508596505078125*^9}, {
   3.508605994078125*^9, 3.508606013*^9}, {3.50860610953125*^9, 
   3.508606115015625*^9}, {3.50860689325*^9, 3.50860690225*^9}, {
   3.508607158640625*^9, 3.50860716225*^9}, 3.50865147521875*^9, {
   3.508682262859375*^9, 3.50868229159375*^9}, {3.508682367765625*^9, 
   3.508682376890625*^9}, {3.5086824145625*^9, 3.508682428859375*^9}, {
   3.50868255884375*^9, 3.5086825856875*^9}, {3.50873681859375*^9, 
   3.508736881984375*^9}, {3.5087369739375*^9, 3.50873697434375*^9}, {
   3.5087372333125*^9, 3.50873762809375*^9}, {3.508751331984375*^9, 
   3.50875133578125*^9}, {3.508757533875*^9, 3.508757606703125*^9}, {
   3.50875765021875*^9, 3.508757666359375*^9}, {3.5087577384375*^9, 
   3.508757739015625*^9}, {3.5087579109375*^9, 3.508757923953125*^9}, {
   3.50875827475*^9, 3.508758277015625*^9}, {3.508758333109375*^9, 
   3.508758480734375*^9}, {3.508758514484375*^9, 3.50875865740625*^9}, 
   3.50875870378125*^9, {3.508758746515625*^9, 3.508758759328125*^9}, {
   3.5088216096259804`*^9, 3.5088216245947304`*^9}, {3.5088251358916054`*^9, 
   3.5088251675947304`*^9}, {3.5088252269853554`*^9, 
   3.5088252358134804`*^9}, {3.5088252689072304`*^9, 
   3.5088252775009804`*^9}, {3.5088253149228554`*^9, 
   3.5088253177978554`*^9}, {3.5088254168916054`*^9, 
   3.5088254235009804`*^9}, {3.5088254950166054`*^9, 3.5088255800166054`*^9}, 
   3.5088259359697304`*^9, {3.50883964009375*^9, 3.508839737828125*^9}, {
   3.50884006271875*^9, 3.508840069078125*^9}, 3.508847375734375*^9, 
   3.5088474901875*^9, 3.508847714140625*^9, {3.508855017546875*^9, 
   3.508855032125*^9}, 3.50885516478125*^9, {3.5088593859375*^9, 
   3.50885938915625*^9}, {3.508859562125*^9, 3.508859635078125*^9}, {
   3.508859668015625*^9, 3.50885969528125*^9}, {3.508911701296875*^9, 
   3.5089117046875*^9}, {3.508911843375*^9, 3.5089118904375*^9}, {
   3.50891192796875*^9, 3.508911930578125*^9}, {3.508912010828125*^9, 
   3.50891201359375*^9}, {3.5089122101875*^9, 3.5089122184375*^9}, {
   3.509031139578125*^9, 3.509031209859375*^9}, {3.509031627453125*^9, 
   3.509031629796875*^9}, {3.509086633*^9, 3.509086703578125*^9}, 
   3.50909624925*^9, 3.509098322765625*^9, {3.509099588125*^9, 
   3.5090996135625*^9}, 3.509099842796875*^9, 3.509100865609375*^9, 
   3.50910127203125*^9, {3.50917125871875*^9, 3.50917133375*^9}, {
   3.509171569828125*^9, 3.509171576140625*^9}, 3.509187578359375*^9, 
   3.509190617421875*^9, {3.50919131021875*^9, 3.50919133190625*^9}, {
   3.50919139953125*^9, 3.5091914235*^9}, 3.509198306515625*^9, {
   3.509199294421875*^9, 3.5091992993125*^9}, {3.5091994405625*^9, 
   3.5091994574375*^9}, 3.50919998603125*^9, {3.50920925209375*^9, 
   3.5092092953125*^9}, {3.50927519809375*^9, 3.50927523259375*^9}, {
   3.509275298921875*^9, 3.5092753283125*^9}, {3.5092753609375*^9, 
   3.509275420015625*^9}, {3.50927548271875*^9, 3.509275483640625*^9}, {
   3.50927564496875*^9, 3.509275648375*^9}, 3.509275721421875*^9, {
   3.509358965828125*^9, 3.509359090734375*^9}, {3.50935913146875*^9, 
   3.509359158234375*^9}, 3.509359532171875*^9, {3.509704165046875*^9, 
   3.509704172015625*^9}, {3.50970574521875*^9, 3.5097058234375*^9}, {
   3.509705859890625*^9, 3.509705868078125*^9}, {3.509706060953125*^9, 
   3.50970608071875*^9}, {3.5097284899375*^9, 3.509728493140625*^9}, {
   3.509728535796875*^9, 3.50972864065625*^9}, {3.509728732703125*^9, 
   3.5097288800625*^9}, 3.50972891696875*^9, {3.50972913634375*^9, 
   3.509729174921875*^9}, {3.50977280659375*^9, 3.509772817703125*^9}, {
   3.5097982521875*^9, 3.5097983054375*^9}, {3.509798347984375*^9, 
   3.509798382265625*^9}, {3.509858472078125*^9, 3.509858590703125*^9}, {
   3.50985900584375*^9, 3.50985905015625*^9}, 3.509859195890625*^9, {
   3.509859230953125*^9, 3.50985928665625*^9}, {3.509859324453125*^9, 
   3.509859382671875*^9}, {3.5098594318125*^9, 3.509859578953125*^9}, {
   3.509859633515625*^9, 3.509859635171875*^9}, {3.5098640318125*^9, 
   3.5098641159375*^9}, 3.509864343890625*^9, {3.509876981640625*^9, 
   3.5098770106875*^9}, {3.509877043703125*^9, 3.509877090765625*^9}, {
   3.5098772159375*^9, 3.509877236375*^9}, {3.50996907940625*^9, 
   3.509969117859375*^9}, {3.509969154875*^9, 3.50996917503125*^9}, {
   3.509969465125*^9, 3.50996947709375*^9}, {3.509969526140625*^9, 
   3.509969526328125*^9}, {3.509973746625*^9, 3.509973757984375*^9}, {
   3.5100487659375*^9, 3.5100487755*^9}, {3.510048909859375*^9, 
   3.51004892425*^9}, 3.51005722015625*^9, {3.510058249609375*^9, 
   3.510058249828125*^9}, {3.5100583404375*^9, 3.510058363984375*^9}, {
   3.510058422125*^9, 3.510058463625*^9}, 3.51005876484375*^9, {
   3.510131712671875*^9, 3.510131797296875*^9}, {3.51013195325*^9, 
   3.5101319554375*^9}, {3.51013463728125*^9, 3.51013464528125*^9}, {
   3.51013467534375*^9, 3.510134677921875*^9}, 3.51013474096875*^9, 
   3.51013492096875*^9, {3.510146235421875*^9, 3.5101462625*^9}, {
   3.51014644875*^9, 3.5101464643125*^9}, {3.51014728934375*^9, 
   3.510147371140625*^9}, {3.51020590596875*^9, 3.510205930453125*^9}, {
   3.51020596278125*^9, 3.510205976234375*^9}, {3.51020603709375*^9, 
   3.510206071609375*^9}, {3.510206790234375*^9, 3.51020679225*^9}, 
   3.510214700734375*^9, {3.510214748046875*^9, 3.51021474821875*^9}, {
   3.510214783078125*^9, 3.510214804265625*^9}, {3.51021483996875*^9, 
   3.5102148713125*^9}, {3.510216048359375*^9, 3.51021604875*^9}, {
   3.51021682825*^9, 3.510216844546875*^9}, {3.510288935421875*^9, 
   3.51028895746875*^9}, {3.51028898825*^9, 3.510289003921875*^9}, {
   3.510289050828125*^9, 3.510289051453125*^9}, {3.510289376109375*^9, 
   3.510289389078125*^9}, {3.510290467*^9, 3.510290518234375*^9}, {
   3.510290579015625*^9, 3.5102905795625*^9}, 3.510290818921875*^9, 
   3.510291670140625*^9, 3.510304139046875*^9, 3.510305366765625*^9, 
   3.51030550475*^9, {3.510312066046875*^9, 3.5103120984375*^9}, {
   3.5103121303125*^9, 3.510312139921875*^9}, {3.51031219378125*^9, 
   3.51031219403125*^9}, 3.51031233834375*^9, {3.510316111296875*^9, 
   3.510316140125*^9}, {3.51031618596875*^9, 3.51031620825*^9}, {
   3.510316280765625*^9, 3.51031628703125*^9}, {3.510316331875*^9, 
   3.510316342828125*^9}, {3.510316393921875*^9, 3.510316394578125*^9}, {
   3.510316936328125*^9, 3.510316953421875*^9}, {3.510328642609375*^9, 
   3.510328658921875*^9}, {3.510392383921875*^9, 3.510392407796875*^9}, {
   3.510392459765625*^9, 3.510392486796875*^9}, {3.510392527046875*^9, 
   3.510392527671875*^9}, 3.510393035953125*^9, 3.510399949140625*^9, {
   3.5103999906875*^9, 3.5104000541875*^9}, 3.5104001044375*^9, {
   3.510463016828125*^9, 3.510463044875*^9}, {3.510463078828125*^9, 
   3.51046309434375*^9}, 3.510479136265625*^9, {3.510481350625*^9, 
   3.51048135078125*^9}, {3.51048139746875*^9, 3.510481442109375*^9}, {
   3.510485796*^9, 3.510485872625*^9}, {3.510502341421875*^9, 
   3.510502342140625*^9}, {3.5105024166875*^9, 3.510502437875*^9}, {
   3.51056425921875*^9, 3.510564329078125*^9}, {3.510564416515625*^9, 
   3.51056441715625*^9}, {3.510566625109375*^9, 3.5105666369375*^9}, {
   3.510590487671875*^9, 3.51059051825*^9}, {3.5105905686875*^9, 
   3.5105905868125*^9}, {3.510591694875*^9, 3.51059169553125*^9}, {
   3.510591760359375*^9, 3.51059177653125*^9}, {3.510651337359375*^9, 
   3.510651411265625*^9}, {3.51065152103125*^9, 3.510651523078125*^9}, {
   3.5106517179375*^9, 3.51065173628125*^9}, {3.51065282528125*^9, 
   3.510652904984375*^9}, {3.5106529695625*^9, 3.51065296978125*^9}, 
   3.51065312078125*^9, {3.51066577734375*^9, 3.51066583775*^9}, {
   3.510673221921875*^9, 3.510673246953125*^9}, {3.510673285765625*^9, 
   3.510673307578125*^9}, {3.51067335478125*^9, 3.510673354953125*^9}, 
   3.510673789515625*^9, {3.51067434034375*^9, 3.510674341875*^9}, 
   3.510739193328125*^9, 3.510748964796875*^9, {3.510749061265625*^9, 
   3.510749082015625*^9}, {3.510753490578125*^9, 3.510753541890625*^9}, {
   3.510753578015625*^9, 3.5107535944375*^9}, {3.5107536770625*^9, 
   3.51075367746875*^9}, 3.510754306765625*^9, 3.510824608859375*^9, {
   3.510826284109375*^9, 3.510826312765625*^9}, {3.510826347828125*^9, 
   3.510826390984375*^9}, 3.510826721421875*^9, {3.51083977590625*^9, 
   3.510839826546875*^9}, 3.510841897796875*^9, {3.51089189590625*^9, 
   3.51089192228125*^9}, {3.510892023453125*^9, 3.5108920389375*^9}, {
   3.510892083265625*^9, 3.51089208353125*^9}, 3.51089261390625*^9, {
   3.510892679859375*^9, 3.510892695671875*^9}, {3.51089337790625*^9, 
   3.51089341134375*^9}, {3.51091560178125*^9, 3.510915669578125*^9}, {
   3.510917337234375*^9, 3.51091733740625*^9}, {3.510918312578125*^9, 
   3.510918333796875*^9}, {3.510918395375*^9, 3.51091848525*^9}, {
   3.510925293390625*^9, 3.5109253216875*^9}, {3.510925357515625*^9, 
   3.510925362859375*^9}, {3.510925396328125*^9, 3.510925399078125*^9}, {
   3.510925443265625*^9, 3.51092544346875*^9}, 3.5109256146875*^9, {
   3.510925727984375*^9, 3.51092573478125*^9}, {3.510976909484375*^9, 
   3.510976938890625*^9}, {3.51097697678125*^9, 3.51097698903125*^9}, {
   3.51097706859375*^9, 3.510977110234375*^9}, 3.5109774208125*^9, {
   3.5109943643125*^9, 3.510994364515625*^9}, {3.510994681828125*^9, 
   3.510994726015625*^9}, {3.510994804046875*^9, 3.51099482128125*^9}, {
   3.510994860734375*^9, 3.5109948846875*^9}, {3.510994943265625*^9, 
   3.510994943734375*^9}, {3.510994996*^9, 3.510995022078125*^9}, {
   3.51099515390625*^9, 3.51099515828125*^9}, {3.5109952629375*^9, 
   3.5109952750625*^9}, {3.510995472859375*^9, 3.51099548009375*^9}, {
   3.510995602828125*^9, 3.5109956565*^9}, {3.510995694328125*^9, 
   3.510995699078125*^9}, {3.511002058234375*^9, 3.51100211984375*^9}, {
   3.511002155734375*^9, 3.51100216390625*^9}, {3.5110023823125*^9, 
   3.51100239321875*^9}, 3.511005397484375*^9, {3.51169410125*^9, 
   3.5116941393125*^9}, {3.5116941865625*^9, 3.5116942065*^9}, {
   3.5116942428125*^9, 3.511694260296875*^9}, {3.511694439015625*^9, 
   3.51169445709375*^9}, {3.511694811734375*^9, 3.511694823421875*^9}, {
   3.51169861109375*^9, 3.511698647890625*^9}, 3.51170153325*^9, {
   3.511750888296875*^9, 3.51175091025*^9}, {3.511842808640625*^9, 
   3.511842837921875*^9}, {3.51184289534375*^9, 3.511842931953125*^9}, {
   3.511843059140625*^9, 3.5118430725625*^9}, {3.5118433364375*^9, 
   3.51184334278125*^9}, {3.5118434084375*^9, 3.511843420984375*^9}, {
   3.51184348409375*^9, 3.511843484265625*^9}, {3.5118435374375*^9, 
   3.511843561703125*^9}, {3.51219443296875*^9, 3.51219445671875*^9}, {
   3.512194513171875*^9, 3.51219454146875*^9}, {3.5121945818125*^9, 
   3.512194582015625*^9}, 3.5121955750625*^9, 3.51220993334375*^9, {
   3.51244806046875*^9, 3.512448083609375*^9}, {3.5124481151875*^9, 
   3.512448146703125*^9}, {3.5124481906875*^9, 3.512448190890625*^9}, 
   3.512448331125*^9, 3.512460980875*^9, 3.512461120578125*^9, {
   3.51253203290625*^9, 3.51253205765625*^9}, {3.512532094296875*^9, 
   3.51253210903125*^9}, {3.512547496421875*^9, 3.51254754834375*^9}, {
   3.51254774721875*^9, 3.51254776040625*^9}, {3.5127247118989534`*^9, 
   3.5127247437895784`*^9}, {3.5127247855239534`*^9, 
   3.5127247968364534`*^9}, {3.5127248453833284`*^9, 3.5127248457114534`*^9}, 
   3.5127257007270784`*^9, {3.513159458296875*^9, 3.5131595221875*^9}, {
   3.51315961540625*^9, 3.513159616*^9}, 3.513159824765625*^9, 
   3.5132454660625*^9, 3.513246191109375*^9, {3.51348171609375*^9, 
   3.51348173946875*^9}, {3.513481770890625*^9, 3.513481789640625*^9}, {
   3.51349572209375*^9, 3.5134957601875*^9}, {3.513495818203125*^9, 
   3.513495833140625*^9}, 3.513495917015625*^9, 3.51350800940625*^9, {
   3.51350821221875*^9, 3.5135083249375*^9}, 3.513508371375*^9, 
   3.51369206690625*^9, 3.514106541703125*^9, 3.514166997046875*^9, {
   3.519462084953125*^9, 3.51946212878125*^9}, {3.5194624110625*^9, 
   3.51946243653125*^9}, {3.51946257421875*^9, 3.519462616546875*^9}, {
   3.519463783109375*^9, 3.5194638116875*^9}, {3.5194638563125*^9, 
   3.519463878671875*^9}, {3.519464107484375*^9, 3.5194641101875*^9}, {
   3.519527713921875*^9, 3.519527741328125*^9}, {3.51952777753125*^9, 
   3.519527796859375*^9}, {3.519527893640625*^9, 3.5195279285625*^9}, {
   3.519535806296875*^9, 3.519535825484375*^9}, {3.5195358733125*^9, 
   3.51953593059375*^9}, {3.519536329125*^9, 3.519536331375*^9}, {
   3.51979313121875*^9, 3.51979316503125*^9}, {3.519793216140625*^9, 
   3.51979321634375*^9}, {3.51979328284375*^9, 3.519793308390625*^9}, {
   3.5197936603125*^9, 3.51979366053125*^9}, 3.51979372290625*^9, {
   3.519874479984375*^9, 3.519874513671875*^9}, {3.51987455025*^9, 
   3.519874555984375*^9}, {3.51987464846875*^9, 3.5198746801875*^9}, 
   3.519874795046875*^9, 3.519915892828125*^9, 3.51991650096875*^9, {
   3.520003716015625*^9, 3.5200037165625*^9}, {3.520218560984375*^9, 
   3.520218632890625*^9}, {3.52021871121875*^9, 3.52021874503125*^9}, {
   3.520219128515625*^9, 3.520219157375*^9}, {3.520219370265625*^9, 
   3.520219373421875*^9}, {3.52021953378125*^9, 3.520219559765625*^9}, {
   3.52021966409375*^9, 3.52021968040625*^9}, {3.520222111015625*^9, 
   3.520222113078125*^9}, {3.520225910625*^9, 3.520225923875*^9}, {
   3.520225976796875*^9, 3.52022604890625*^9}, {3.520603901953125*^9, 
   3.520603927734375*^9}, {3.520604016890625*^9, 3.5206040336875*^9}, {
   3.5206042341875*^9, 3.520604270984375*^9}, {3.520607118734375*^9, 
   3.520607127359375*^9}, {3.520688972734375*^9, 3.520689000546875*^9}, {
   3.52068906953125*^9, 3.520689092625*^9}, {3.520689385125*^9, 
   3.520689387328125*^9}, {3.520777337578125*^9, 3.52077736434375*^9}, {
   3.52077745434375*^9, 3.520777475109375*^9}, {3.52077777134375*^9, 
   3.520777773296875*^9}, 3.520778274734375*^9, {3.520778769375*^9, 
   3.520778805046875*^9}, {3.520778972390625*^9, 3.520778997765625*^9}, {
   3.5210851941875*^9, 3.52108521928125*^9}, {3.521085299203125*^9, 
   3.5210853014375*^9}, {3.52108533465625*^9, 3.52108533634375*^9}, {
   3.521085442015625*^9, 3.521085442234375*^9}, {3.521085929640625*^9, 
   3.52108597378125*^9}, {3.521109236796875*^9, 3.52110926065625*^9}, {
   3.521109347515625*^9, 3.521109361359375*^9}, {3.521109467796875*^9, 
   3.521109470609375*^9}, 3.5211161183125*^9, {3.52111782759375*^9, 
   3.521117852515625*^9}, {3.5219027038125*^9, 3.52190273328125*^9}, {
   3.521902829796875*^9, 3.521902845703125*^9}, {3.521903159421875*^9, 
   3.5219031845625*^9}, {3.522210529203125*^9, 3.522210565015625*^9}, {
   3.52221067046875*^9, 3.522210751296875*^9}, {3.5222110494375*^9, 
   3.522211073140625*^9}, {3.52221174278125*^9, 3.52221177178125*^9}, {
   3.522212411390625*^9, 3.522212465828125*^9}, {3.52221258496875*^9, 
   3.5222125856875*^9}, {3.5222510051875*^9, 3.522251027859375*^9}, {
   3.522251069296875*^9, 3.522251083515625*^9}, {3.5222515761875*^9, 
   3.52225157728125*^9}, 3.522252244484375*^9, {3.522328462125*^9, 
   3.522328487328125*^9}, {3.522328530046875*^9, 3.522328551140625*^9}, {
   3.522328695796875*^9, 3.5223287023125*^9}, 3.5223288355*^9, {
   3.5224015229375*^9, 3.522401532234375*^9}, {3.52240156659375*^9, 
   3.522401595625*^9}, {3.52240166878125*^9, 3.5224016810625*^9}, {
   3.522402712546875*^9, 3.522402712921875*^9}, {3.5224034385625*^9, 
   3.5224034565625*^9}, {3.5225818868125*^9, 3.522581921859375*^9}, {
   3.522581956609375*^9, 3.522581983078125*^9}, {3.522582068703125*^9, 
   3.522582092921875*^9}, {3.52259077315625*^9, 3.522590779671875*^9}, {
   3.52259727459375*^9, 3.522597274890625*^9}, {3.522597624296875*^9, 
   3.5225976869375*^9}, {3.52259773775*^9, 3.522597765140625*^9}, {
   3.522598216390625*^9, 3.522598339875*^9}, {3.52275421559375*^9, 
   3.522754247296875*^9}, {3.52275431665625*^9, 3.522754363265625*^9}, 
   3.522754607859375*^9, {3.522812119828125*^9, 3.5228121451875*^9}, {
   3.52281220796875*^9, 3.5228122235625*^9}, {3.522812297859375*^9, 
   3.5228122981875*^9}, {3.52281266378125*^9, 3.52281267278125*^9}, {
   3.522847641671875*^9, 3.52284766696875*^9}, {3.522847735578125*^9, 
   3.522847736296875*^9}, 3.52284781090625*^9, {3.522847879234375*^9, 
   3.52284789728125*^9}, 3.5228942935625*^9, {3.522897072609375*^9, 
   3.522897091234375*^9}, {3.5229230269375*^9, 3.522923051640625*^9}, {
   3.522923100640625*^9, 3.522923127625*^9}, {3.52292322290625*^9, 
   3.52292325509375*^9}, {3.52292407296875*^9, 3.52292407503125*^9}, {
   3.52299158109375*^9, 3.52299161278125*^9}, {3.5229916991875*^9, 
   3.522991701953125*^9}, {3.5229917345625*^9, 3.522991756421875*^9}, {
   3.522991949984375*^9, 3.522991967984375*^9}, {3.52300728159375*^9, 
   3.52300731315625*^9}, {3.523007345625*^9, 3.52300736934375*^9}, {
   3.5230074395*^9, 3.523007448359375*^9}, 3.523007589203125*^9, {
   3.523010037390625*^9, 3.523010081078125*^9}, {3.5230101709375*^9, 
   3.523010229625*^9}, {3.523010292484375*^9, 3.523010296703125*^9}, {
   3.523010360578125*^9, 3.52301036890625*^9}, {3.523010416640625*^9, 
   3.523010443203125*^9}, {3.523093672125*^9, 3.523093722171875*^9}, {
   3.523093844171875*^9, 3.5230938604375*^9}, {3.52309400815625*^9, 
   3.52309400840625*^9}, 3.52309443346875*^9, {3.523094932890625*^9, 
   3.52309494384375*^9}, {3.523095996140625*^9, 3.523096096609375*^9}, {
   3.523107199421875*^9, 3.523107248640625*^9}, 3.523107368375*^9, {
   3.523107654796875*^9, 3.523107765875*^9}, {3.52310782090625*^9, 
   3.523107822625*^9}, {3.523182853796875*^9, 3.523182881828125*^9}, {
   3.5231829653125*^9, 3.523182985828125*^9}, {3.52318307296875*^9, 
   3.523183073234375*^9}, {3.523183606390625*^9, 3.523183632203125*^9}, 
   3.523184199046875*^9, {3.52341580396875*^9, 3.523415815234375*^9}, {
   3.52341586521875*^9, 3.52341591721875*^9}, {3.5234161913125*^9, 
   3.5234162780625*^9}, {3.523416332703125*^9, 3.52341649146875*^9}, {
   3.52341694190625*^9, 3.523416970515625*^9}, {3.52341707990625*^9, 
   3.523417114734375*^9}, {3.523417483171875*^9, 3.52341749715625*^9}, {
   3.523447468234375*^9, 3.523447468921875*^9}, {3.523451772421875*^9, 
   3.52345179559375*^9}, {3.5234518328125*^9, 3.523451856578125*^9}, {
   3.523451929265625*^9, 3.523451947078125*^9}, {3.52345379159375*^9, 
   3.523453887390625*^9}, {3.523454040515625*^9, 3.523454066515625*^9}, {
   3.52350120234375*^9, 3.523501340125*^9}, {3.52350139128125*^9, 
   3.523501473515625*^9}, 3.523501547078125*^9, 3.523501595515625*^9, 
   3.523502835625*^9, 3.523589037515625*^9, {3.523878868765625*^9, 
   3.523878894*^9}, {3.523878959765625*^9, 3.523878977359375*^9}, {
   3.5238793328125*^9, 3.523879335234375*^9}, {3.52396136303125*^9, 
   3.52396144565625*^9}, 3.52396667290625*^9, {3.52397014365625*^9, 
   3.523970143921875*^9}, {3.523970584296875*^9, 3.52397064525*^9}, {
   3.52405676534375*^9, 3.52405679821875*^9}, {3.524056848015625*^9, 
   3.524057018859375*^9}, {3.52405728309375*^9, 3.52405736234375*^9}, {
   3.52405759825*^9, 3.524057604671875*^9}, 3.5240577530625*^9, 
   3.52405782409375*^9, {3.524058177046875*^9, 3.524058203515625*^9}, {
   3.52405830515625*^9, 3.524058305859375*^9}, {3.52405835196875*^9, 
   3.5240583808125*^9}, {3.524144306859375*^9, 3.524144333890625*^9}, {
   3.52414452690625*^9, 3.52414454625*^9}, {3.5241481565625*^9, 
   3.524148156828125*^9}, 3.52414862234375*^9, {3.5241927588125*^9, 
   3.524192784671875*^9}, {3.52419286634375*^9, 3.52419288340625*^9}, {
   3.524194809171875*^9, 3.52419480946875*^9}, 3.52419487671875*^9, {
   3.524315236078125*^9, 3.52431528725*^9}, {3.5243153889375*^9, 
   3.524315421078125*^9}, {3.52431585065625*^9, 3.524315936125*^9}, {
   3.524388836359375*^9, 3.52438887015625*^9}, {3.52438897415625*^9, 
   3.524388977859375*^9}, {3.524389011421875*^9, 3.524389015234375*^9}, {
   3.524389050234375*^9, 3.5243890505*^9}, 3.52438973621875*^9, {
   3.524399235953125*^9, 3.52439926359375*^9}, {3.52439937515625*^9, 
   3.524399393671875*^9}, {3.52439946828125*^9, 3.5243994685625*^9}, 
   3.52440100515625*^9, 3.524401206140625*^9, 3.524457560078125*^9, {
   3.5244576558125*^9, 3.5244576866875*^9}, 3.524481527359375*^9, 
   3.52448192021875*^9, {3.524482412828125*^9, 3.52448247815625*^9}, {
   3.5245393635*^9, 3.524539444453125*^9}, {3.524539545421875*^9, 
   3.5245395843125*^9}, {3.524539847359375*^9, 3.52453985475*^9}, {
   3.524540121109375*^9, 3.52454012534375*^9}, 3.524540308640625*^9, {
   3.524569265*^9, 3.52456929034375*^9}, {3.52456935384375*^9, 
   3.524569394515625*^9}, {3.52456960153125*^9, 3.524569607109375*^9}, {
   3.52464548875*^9, 3.524645515390625*^9}, {3.52464558475*^9, 
   3.5246456225625*^9}, 3.524645863109375*^9, {3.5246617791875*^9, 
   3.524661852515625*^9}, {3.524661966109375*^9, 3.52466205815625*^9}, {
   3.52466221796875*^9, 3.52466222425*^9}, {3.524662306625*^9, 
   3.524662310953125*^9}, {3.52467306959375*^9, 3.524673104421875*^9}, {
   3.524673205015625*^9, 3.524673241453125*^9}, 3.524673476046875*^9, {
   3.524823098125*^9, 3.524823122734375*^9}, {3.524823250484375*^9, 
   3.52482328790625*^9}, {3.52482354709375*^9, 3.524823550703125*^9}, {
   3.52489120621875*^9, 3.524891255421875*^9}, {3.524891321734375*^9, 
   3.52489133678125*^9}, {3.52489190478125*^9, 3.524891905078125*^9}, 
   3.524891959421875*^9, {3.524907985*^9, 3.5249080171875*^9}, {
   3.524908090375*^9, 3.524908131984375*^9}, 3.52490883575*^9, {
   3.52491487640625*^9, 3.52491492125*^9}, {3.524914962921875*^9, 
   3.524914992390625*^9}, {3.524915157671875*^9, 3.524915286390625*^9}, {
   3.5249154130625*^9, 3.524915415796875*^9}, 3.52491545353125*^9, {
   3.524987055890625*^9, 3.524987130953125*^9}, {3.52498722721875*^9, 
   3.524987315984375*^9}, {3.52498743821875*^9, 3.524987445875*^9}, 
   3.524987534375*^9, {3.524987710796875*^9, 3.524987737484375*^9}, {
   3.524990532375*^9, 3.524990560484375*^9}, {3.524990617796875*^9, 
   3.5249906314375*^9}, {3.524991091109375*^9, 3.5249910919375*^9}, {
   3.524991295546875*^9, 3.524991326046875*^9}, {3.525068180140625*^9, 
   3.52506820296875*^9}, {3.525068315640625*^9, 3.5250683324375*^9}, {
   3.525076009140625*^9, 3.525076009546875*^9}, {3.525076480203125*^9, 
   3.525076503296875*^9}, {3.525187925375*^9, 3.525187951984375*^9}, {
   3.52518802959375*^9, 3.5251880494375*^9}, {3.525249767140625*^9, 
   3.5252497674375*^9}, {3.525249842*^9, 3.525249864953125*^9}, {
   3.525404959265625*^9, 3.525404988515625*^9}, {3.525405019625*^9, 
   3.525405067765625*^9}, {3.5254052096875*^9, 3.525405286421875*^9}, {
   3.525405395140625*^9, 3.525405400203125*^9}, {3.525405485109375*^9, 
   3.525405487921875*^9}, {3.5254250315625*^9, 3.5254250546875*^9}, {
   3.525425113671875*^9, 3.525425143046875*^9}, {3.52542517540625*^9, 
   3.525425175703125*^9}, {3.5254256498125*^9, 3.525425776953125*^9}, {
   3.5254264263125*^9, 3.52542642959375*^9}, {3.525606957984375*^9, 
   3.525606985546875*^9}, {3.525607099453125*^9, 3.52560711725*^9}, {
   3.525607331625*^9, 3.52560733440625*^9}, {3.526043883609375*^9, 
   3.526043979953125*^9}, {3.526044976046875*^9, 3.526045059703125*^9}, {
   3.5260451465625*^9, 3.526045147453125*^9}, {3.526045380625*^9, 
   3.52604541209375*^9}, {3.526045759671875*^9, 3.526045777015625*^9}, {
   3.52626822759375*^9, 3.52626825478125*^9}, {3.52626832578125*^9, 
   3.52626834925*^9}, {3.5262685594375*^9, 3.526268559734375*^9}, {
   3.526268613140625*^9, 3.526268619515625*^9}, 3.526271712046875*^9, 
   3.526272601703125*^9, {3.5263044965*^9, 3.52630452375*^9}, {
   3.52630461715625*^9, 3.5263046263125*^9}, {3.526304721890625*^9, 
   3.526304724640625*^9}, {3.526305666515625*^9, 3.52630566721875*^9}, {
   3.52630572096875*^9, 3.52630575084375*^9}, 3.526357193890625*^9, 
   3.52635818665625*^9, {3.526358434765625*^9, 3.5263584613125*^9}, {
   3.526378420265625*^9, 3.52637843353125*^9}, {3.52648804478125*^9, 
   3.526488070828125*^9}, {3.526488180828125*^9, 3.526488194078125*^9}, {
   3.526530014421875*^9, 3.52653001484375*^9}, 3.526530315171875*^9, {
   3.526530355109375*^9, 3.526530363078125*^9}, {3.526561218859375*^9, 
   3.526561246515625*^9}, {3.526561357*^9, 3.526561381296875*^9}, {
   3.526563922203125*^9, 3.52656392253125*^9}, {3.526564238484375*^9, 
   3.52656427146875*^9}, 3.52698498978125*^9, 3.52699369578125*^9, 
   3.527002252015625*^9, {3.527003050203125*^9, 3.527003111609375*^9}, {
   3.5270031435*^9, 3.527003177109375*^9}, {3.527004009111206*^9, 
   3.527004034111206*^9}, {3.527004913173706*^9, 3.5270049382830815`*^9}, {
   3.527336628703125*^9, 3.52733665803125*^9}, {3.5273367761875*^9, 
   3.52733679446875*^9}, {3.527336965*^9, 3.527336968203125*^9}, {
   3.5274284581875*^9, 3.527428525046875*^9}, {3.527428817703125*^9, 
   3.52742882134375*^9}, {3.527506698890625*^9, 3.527506776453125*^9}, {
   3.527506846890625*^9, 3.527506847234375*^9}, 3.52750698434375*^9, {
   3.527511655703125*^9, 3.527511663125*^9}, {3.5275117043125*^9, 
   3.5275117584375*^9}, {3.5276573335*^9, 3.527657368046875*^9}, {
   3.527657439390625*^9, 3.527657470515625*^9}, {3.527676155609375*^9, 
   3.5276761564375*^9}, {3.527676224125*^9, 3.52767634384375*^9}, 
   3.52784121153125*^9, {3.527843613953125*^9, 3.527843645390625*^9}, {
   3.52784371015625*^9, 3.527843741515625*^9}, {3.527843961015625*^9, 
   3.52784396353125*^9}, {3.5279991788125*^9, 3.527999202921875*^9}, {
   3.527999265734375*^9, 3.5279992660625*^9}, 3.52799986875*^9, {
   3.528021887578125*^9, 3.52802196040625*^9}, {3.528021995078125*^9, 
   3.52802199540625*^9}, 3.528022188390625*^9, 3.52804185821875*^9, 
   3.528041982578125*^9, {3.528082939140625*^9, 3.52808296234375*^9}, {
   3.528083566375*^9, 3.528083589*^9}, {3.528084727484375*^9, 
   3.52808472784375*^9}, 3.528084800890625*^9, 3.528188093578125*^9, 
   3.528189310296875*^9, 3.528263105981906*^9, {3.52837081321875*^9, 
   3.5283708981875*^9}, {3.5283721280625*^9, 3.528372128453125*^9}, {
   3.528372219*^9, 3.5283722224375*^9}, 3.528372554703125*^9, {
   3.5283729760625*^9, 3.52837297821875*^9}, {3.528457023765625*^9, 
   3.528457053875*^9}, {3.528457089609375*^9, 3.528457107109375*^9}, {
   3.52845902478125*^9, 3.528459025125*^9}, {3.52845914225*^9, 
   3.528459169015625*^9}, {3.528474436421875*^9, 3.5284744891875*^9}, {
   3.528474519765625*^9, 3.5284745813125*^9}, {3.5286022885*^9, 
   3.52860231521875*^9}, {3.52860237571875*^9, 3.5286023961875*^9}, {
   3.52860272259375*^9, 3.52860272525*^9}, 3.528602806546875*^9, {
   3.528637186703125*^9, 3.528637209875*^9}, {3.5286372738125*^9, 
   3.528637291125*^9}, {3.528637335203125*^9, 3.528637336265625*^9}, 
   3.528637598125*^9, {3.52880232653125*^9, 3.5288023565625*^9}, {
   3.528802442703125*^9, 3.528802491328125*^9}, {3.528804877609375*^9, 
   3.528804877984375*^9}, 3.528805329578125*^9, {3.53510980165625*^9, 
   3.535109804046875*^9}, {3.535110651625*^9, 3.535110651984375*^9}, 
   3.53511070503125*^9, {3.535110829125*^9, 3.535110846265625*^9}, {
   3.535114549953125*^9, 3.535114560640625*^9}, {3.53511459640625*^9, 
   3.53511468453125*^9}, {3.535114739578125*^9, 3.535114740453125*^9}, 
   3.53511681496875*^9, {3.53511686975*^9, 3.535116900625*^9}, {
   3.535194514796875*^9, 3.535194515078125*^9}, {3.53519457540625*^9, 
   3.535194650140625*^9}, {3.535194704078125*^9, 3.535194768171875*^9}, {
   3.53519597575*^9, 3.535195981875*^9}, {3.53519654884375*^9, 
   3.535196574375*^9}, {3.535277811859375*^9, 3.535277842671875*^9}, {
   3.53527789175*^9, 3.535277918015625*^9}, {3.535278311640625*^9, 
   3.535278311984375*^9}, 3.535278357484375*^9, {3.5353641069375*^9, 
   3.535364120953125*^9}, {3.53547410778125*^9, 3.535474139046875*^9}, {
   3.53547421728125*^9, 3.535474234640625*^9}, {3.535476602234375*^9, 
   3.535476602640625*^9}, {3.535476643171875*^9, 3.535476669625*^9}, 
   3.535517826125*^9, {3.535644620953125*^9, 3.5356447235*^9}, {
   3.535644755515625*^9, 3.53564475884375*^9}, 3.53564481521875*^9, {
   3.535717252*^9, 3.535717298390625*^9}, {3.535717329640625*^9, 
   3.535717350953125*^9}, {3.535717406203125*^9, 3.53571751740625*^9}, {
   3.535717792265625*^9, 3.535717795140625*^9}, {3.535718124265625*^9, 
   3.53571813096875*^9}, {3.5357182035*^9, 3.53571820684375*^9}, {
   3.535801136640625*^9, 3.53580116578125*^9}, {3.53580125590625*^9, 
   3.53580129471875*^9}, {3.535802069484375*^9, 3.5358021048125*^9}, 
   3.53580856565625*^9, {3.53580861759375*^9, 3.53580862909375*^9}, {
   3.53580866590625*^9, 3.535808698703125*^9}, {3.53580879578125*^9, 
   3.5358088029375*^9}, {3.535818194286088*^9, 3.535818225254838*^9}, {
   3.535818270754838*^9, 3.535818304848588*^9}, {3.535818357239213*^9, 
   3.535818357754838*^9}, {3.535818839129838*^9, 3.535818865051713*^9}, {
   3.535820085004838*^9, 3.535820109801713*^9}, {3.535820158051713*^9, 
   3.535820194067338*^9}, 3.535820296879838*^9, {3.5358644275625*^9, 
   3.535864427734375*^9}, {3.535864538734375*^9, 3.53586456171875*^9}, {
   3.535864602828125*^9, 3.53586462021875*^9}, {3.5358651918125*^9, 
   3.535865274640625*^9}, {3.5358879455*^9, 3.535887998015625*^9}, {
   3.535888174890625*^9, 3.535888205671875*^9}, {3.535888238328125*^9, 
   3.535888253375*^9}, {3.535906717484375*^9, 3.535906766171875*^9}, {
   3.535906799890625*^9, 3.535906802515625*^9}, {3.5359068488125*^9, 
   3.53590686715625*^9}, 3.5359069531875*^9, {3.535946162609375*^9, 
   3.535946183453125*^9}, {3.535946247375*^9, 3.5359462590625*^9}, {
   3.535946324703125*^9, 3.5359463566875*^9}, {3.53594644415625*^9, 
   3.53594646625*^9}, {3.535971233796875*^9, 3.535971261609375*^9}, {
   3.535971299515625*^9, 3.53597131534375*^9}, {3.53597180071875*^9, 
   3.535971801125*^9}, {3.535971840671875*^9, 3.535971847671875*^9}, {
   3.53597293896875*^9, 3.5359730079375*^9}, {3.535973107296875*^9, 
   3.53597311159375*^9}, 3.53597363121875*^9, 3.535980238140625*^9, {
   3.53598236484375*^9, 3.5359824016875*^9}, {3.535982458796875*^9, 
   3.53598256209375*^9}, 3.53599091034375*^9, 3.53599292384375*^9, {
   3.5360546688125*^9, 3.536054669*^9}, {3.536054711140625*^9, 
   3.53605474296875*^9}, {3.5360573596875*^9, 3.536057389203125*^9}, {
   3.536057440296875*^9, 3.536057493875*^9}, {3.536057529421875*^9, 
   3.53605752984375*^9}, {3.5360578625625*^9, 3.536057934734375*^9}, 
   3.536058431328125*^9, {3.536062212203125*^9, 3.536062266015625*^9}, 
   3.536062652921875*^9, {3.53612431353125*^9, 3.536124341359375*^9}, {
   3.536124386328125*^9, 3.536124406265625*^9}, {3.536124445578125*^9, 
   3.53612444596875*^9}, {3.5361245490625*^9, 3.536124724296875*^9}, {
   3.536124756421875*^9, 3.536124934859375*^9}, {3.536125001625*^9, 
   3.53612501084375*^9}, {3.53612505765625*^9, 3.53612517984375*^9}, {
   3.536125217359375*^9, 3.53612522534375*^9}, {3.536140984265625*^9, 
   3.53614110653125*^9}, {3.536141146296875*^9, 3.536141163078125*^9}, {
   3.5362341005625*^9, 3.53623413390625*^9}, {3.536234177859375*^9, 
   3.5362341939375*^9}, {3.536234472625*^9, 3.536234472984375*^9}, {
   3.536234513640625*^9, 3.536234535796875*^9}, {3.5364241385086784`*^9, 
   3.5364241764149284`*^9}, {3.5364244111961784`*^9, 
   3.5364244193211784`*^9}, {3.5364256780868034`*^9, 
   3.5364256846649284`*^9}, {3.5364257856180534`*^9, 
   3.5364258099930534`*^9}, {3.536462606875*^9, 3.536462607203125*^9}, 
   3.536462947328125*^9, {3.536463203359375*^9, 3.536463212109375*^9}, {
   3.53646342465625*^9, 3.5364634518125*^9}, {3.53646349928125*^9, 
   3.53646355540625*^9}, {3.536463975078125*^9, 3.536463983046875*^9}, {
   3.536467015125*^9, 3.536467020578125*^9}, {3.536467532453125*^9, 
   3.536467536390625*^9}, 3.536469346296875*^9, 3.536489512921875*^9, 
   3.53648959321875*^9, 3.53649985765625*^9, {3.53664315165625*^9, 
   3.536643221125*^9}, {3.53666839709375*^9, 3.5366684253125*^9}, {
   3.536669457734375*^9, 3.53666957440625*^9}, 3.5369014716875*^9, 
   3.536915608609375*^9, {3.5369158115*^9, 3.536915847078125*^9}, {
   3.536937773109375*^9, 3.536937802046875*^9}, 3.53693783509375*^9, {
   3.536937870703125*^9, 3.536937878796875*^9}, {3.536937976171875*^9, 
   3.536938054265625*^9}, {3.536938350125*^9, 3.536938364640625*^9}, {
   3.536985914390625*^9, 3.53698597321875*^9}, {3.53698611953125*^9, 
   3.53698625215625*^9}, 3.536986406328125*^9, 3.536986629125*^9, {
   3.5369866660625*^9, 3.5369866875625*^9}, {3.53698677134375*^9, 
   3.53698677534375*^9}, 3.537016187203125*^9, {3.537159998453125*^9, 
   3.537160028171875*^9}, {3.537160069484375*^9, 3.53716008565625*^9}, {
   3.5371602068125*^9, 3.537160207203125*^9}, {3.537160738359375*^9, 
   3.537160763078125*^9}, 3.53716112159375*^9, {3.53717519125*^9, 
   3.537175292828125*^9}, {3.537175326421875*^9, 3.537175334890625*^9}, {
   3.537175459828125*^9, 3.53717546021875*^9}, {3.537175843375*^9, 
   3.53717587084375*^9}, {3.537197516359375*^9, 3.537197519859375*^9}, {
   3.537197609625*^9, 3.537197682640625*^9}, {3.5371979783125*^9, 
   3.53719799221875*^9}, {3.537203360078125*^9, 3.5372033636875*^9}, {
   3.537204761234375*^9, 3.5372047909375*^9}, {3.537204854984375*^9, 
   3.537204879546875*^9}, {3.5372049329375*^9, 3.53720493334375*^9}, {
   3.537205340546875*^9, 3.537205391625*^9}, {3.537247140421875*^9, 
   3.53724717434375*^9}, {3.53724721803125*^9, 3.53724724865625*^9}, 
   3.537247787953125*^9, {3.537247823484375*^9, 3.53724789096875*^9}, {
   3.537291730171875*^9, 3.53729175875*^9}, {3.5372918049375*^9, 
   3.537291839671875*^9}, 3.537292283078125*^9, 3.537340283796875*^9, 
   3.537347251828125*^9, 3.537361056296875*^9, {3.537369561390625*^9, 
   3.537369597265625*^9}, {3.537369650046875*^9, 3.537369688015625*^9}, 
   3.537370191609375*^9, {3.53737050390625*^9, 3.53737055065625*^9}, {
   3.537454270359375*^9, 3.537454283640625*^9}, 3.5374543145625*^9, {
   3.537458352890625*^9, 3.537458417171875*^9}, 3.5375330643125*^9, {
   3.537533503359375*^9, 3.53753352453125*^9}, 3.537533556109375*^9, {
   3.53754351446875*^9, 3.5375435258125*^9}, {3.537543574828125*^9, 
   3.53754359525*^9}, {3.53754633953125*^9, 3.5375463399375*^9}, {
   3.5375464455*^9, 3.537546473734375*^9}, {3.5375496351875*^9, 
   3.53754964365625*^9}, {3.537593685609375*^9, 3.53759370903125*^9}, {
   3.53759374909375*^9, 3.5375937551875*^9}, {3.537593807046875*^9, 
   3.5375938405*^9}, {3.537594201078125*^9, 3.5375942249375*^9}, {
   3.53759483809375*^9, 3.5375948541875*^9}, {3.537595251109375*^9, 
   3.537595274109375*^9}, 3.53760841715625*^9, 3.53760965865625*^9, {
   3.53760981703125*^9, 3.53760987334375*^9}, {3.53761086596875*^9, 
   3.5376108704375*^9}, 3.537612384875*^9, 3.5376131975*^9, 3.53761459325*^9, 
   3.537615582921875*^9, {3.537626237140625*^9, 3.537626252546875*^9}, 
   3.53762628865625*^9, {3.537626330875*^9, 3.537626513890625*^9}, 
   3.53762669884375*^9, 3.53763074590625*^9, 3.53769522540625*^9, 
   3.537695797390625*^9, 3.5377014296875*^9, {3.53770764859375*^9, 
   3.53770766203125*^9}, 3.537711474375*^9, 3.53771154559375*^9, 
   3.5377118945625*^9, 3.53779216928125*^9, 3.53779589509375*^9, 
   3.53787064253125*^9, 3.537875164875*^9, 3.53787899678125*^9, 
   3.537895096515625*^9, 3.5379599416875*^9, 3.537960359828125*^9, {
   3.537960396546875*^9, 3.53796042590625*^9}, {3.5379664079375*^9, 
   3.53796641596875*^9}, {3.53796646146875*^9, 3.53796647259375*^9}, 
   3.537969635078125*^9, 3.5379710829375*^9, 3.53802554709375*^9, {
   3.538042118390625*^9, 3.538042162328125*^9}, 3.5380454365*^9, 
   3.53811463996875*^9, 3.53813957959375*^9, {3.538140266765625*^9, 
   3.538140290796875*^9}, {3.538144253984375*^9, 3.538144346390625*^9}, {
   3.5381444675625*^9, 3.538144467984375*^9}, 3.53814474303125*^9, 
   3.538214784703125*^9, 3.5382180245*^9, 3.5382416083660893`*^9, 
   3.538281376359375*^9, {3.53828438059375*^9, 3.5382843853125*^9}, {
   3.53828665703125*^9, 3.53828666178125*^9}, 3.538298805515625*^9, 
   3.53829920075*^9, 3.53830104915625*^9, 3.538316121203125*^9, {
   3.53832658390625*^9, 3.538326610015625*^9}, {3.538394428734375*^9, 
   3.538394432375*^9}, 3.5384026069375*^9, 3.53841040934375*^9, 
   3.538410927546875*^9, 3.53841178734375*^9, 3.538456470171875*^9, 
   3.538479211796875*^9, {3.538479265421875*^9, 3.538479278546875*^9}, {
   3.53847936040625*^9, 3.53847941540625*^9}, {3.53848034075*^9, 
   3.538480344109375*^9}, {3.538502045546875*^9, 3.538502072765625*^9}, {
   3.53850214565625*^9, 3.538502177234375*^9}, {3.538543744484375*^9, 
   3.538543746984375*^9}, {3.538543845765625*^9, 3.53854386059375*^9}, {
   3.5385441031875*^9, 3.53854412396875*^9}, {3.53854441359375*^9, 
   3.53854451334375*^9}, {3.538544670859375*^9, 3.538544761625*^9}, {
   3.53858271815625*^9, 3.538582725328125*^9}, 3.538588320625*^9, 
   3.538589579890625*^9, 3.538652641375*^9, 3.538652680515625*^9, {
   3.538675011828125*^9, 3.538675088234375*^9}, {3.538711552015625*^9, 
   3.538711552421875*^9}, {3.53871176125*^9, 3.5387118188125*^9}, {
   3.53873565975*^9, 3.53873568825*^9}, {3.538735727828125*^9, 
   3.538735754609375*^9}, {3.538735868578125*^9, 3.538735869015625*^9}, 
   3.538735988046875*^9, {3.538742601828125*^9, 3.53874263553125*^9}, {
   3.538742668875*^9, 3.538742689375*^9}, {3.53874276321875*^9, 
   3.538742763609375*^9}, {3.538743769296875*^9, 3.538743812046875*^9}, 
   3.5387616129375*^9, {3.538801657328125*^9, 3.5388016604375*^9}, 
   3.5388234403125*^9, {3.538824848125*^9, 3.538824864984375*^9}, 
   3.538888503828125*^9, {3.538920322796875*^9, 3.538920357453125*^9}, {
   3.538920398984375*^9, 3.538920424734375*^9}, {3.538920456734375*^9, 
   3.538920480578125*^9}, {3.538922930765625*^9, 3.53892293125*^9}, {
   3.53892714534375*^9, 3.538927182046875*^9}, {3.53897593928125*^9, 
   3.538975953453125*^9}, {3.53898983090625*^9, 3.538989900296875*^9}, {
   3.538989943265625*^9, 3.538989962078125*^9}, {3.5389900103125*^9, 
   3.53899001071875*^9}, 3.538990189828125*^9, {3.5389960358125*^9, 
   3.5389960826875*^9}, {3.53899623040625*^9, 3.538996290921875*^9}, {
   3.538996616125*^9, 3.538996637359375*^9}, {3.5389967120625*^9, 
   3.53899671246875*^9}, {3.538996882125*^9, 3.538996891703125*^9}, {
   3.538998903859375*^9, 3.538998984234375*^9}, {3.539088210015625*^9, 
   3.53908827953125*^9}, {3.539088321*^9, 3.53908841878125*^9}, {
   3.5390895095625*^9, 3.539089527296875*^9}, 3.5390903678125*^9, 
   3.539100847921875*^9, {3.539101330421875*^9, 3.53910134078125*^9}, {
   3.53910198390625*^9, 3.539101988625*^9}, 3.53917247021875*^9, {
   3.539172554953125*^9, 3.53917274125*^9}, 3.53917893953125*^9, 
   3.539179005359375*^9, 3.53918023809375*^9, {3.5391833794375*^9, 
   3.539183404609375*^9}, 3.5391905871875*^9, 3.539190916078125*^9, {
   3.539191353609375*^9, 3.539191381828125*^9}, 3.53919157103125*^9, {
   3.539233148640625*^9, 3.539233221296875*^9}, 3.53923326975*^9, {
   3.539233300765625*^9, 3.539233308859375*^9}, {3.539233346671875*^9, 
   3.5392333605*^9}, 3.53923354021875*^9, 3.539237846234375*^9, {
   3.539239590125*^9, 3.53923962034375*^9}, {3.539239680671875*^9, 
   3.5392396900625*^9}, {3.539239733546875*^9, 3.5392397780625*^9}, {
   3.539253833515625*^9, 3.539253833953125*^9}, {3.539254449828125*^9, 
   3.53925460040625*^9}, 3.539258008046875*^9, 3.539259065609375*^9, {
   3.539269401890625*^9, 3.5392694180625*^9}, 3.53960463365625*^9, 
   3.53960808715625*^9, {3.5396086515*^9, 3.539608714765625*^9}, 
   3.539623310984375*^9, {3.5396725090625*^9, 3.539672539015625*^9}, {
   3.539682283796875*^9, 3.5396823009375*^9}, 3.539682343609375*^9, 
   3.5396858551875*^9, 3.539685948421875*^9, 3.539686406890625*^9, {
   3.539708082984375*^9, 3.53970811559375*^9}, {3.539708181171875*^9, 
   3.5397082091875*^9}, {3.539708388015625*^9, 3.5397083884375*^9}, {
   3.539708794625*^9, 3.539708806375*^9}, {3.53970887321875*^9, 
   3.539708882890625*^9}, {3.5397730030625*^9, 3.539773041890625*^9}, {
   3.539773148046875*^9, 3.53977318759375*^9}, {3.5397736405*^9, 
   3.53977365528125*^9}, {3.53977392775*^9, 3.539773943609375*^9}, 
   3.5397748668125*^9, 3.539797598375*^9, 3.53985461865625*^9, {
   3.539879062125*^9, 3.5398790675625*^9}, {3.539883666859375*^9, 
   3.539883696359375*^9}, {3.53988383565625*^9, 3.53988386578125*^9}, {
   3.5399212040625*^9, 3.53992120465625*^9}, {3.539921975765625*^9, 
   3.539921989640625*^9}, 3.539955860078125*^9, 3.539969589296875*^9, 
   3.540013396265625*^9, {3.54002620353125*^9, 3.54002628534375*^9}, {
   3.540026317046875*^9, 3.54002633978125*^9}, {3.540026443359375*^9, 
   3.540026456890625*^9}, 3.540026765734375*^9, {3.540032396265625*^9, 
   3.5400323970625*^9}, 3.5400338845625*^9, {3.54004185965625*^9, 
   3.540041875734375*^9}, {3.54004191190625*^9, 3.54004192090625*^9}, 
   3.54005029771875*^9, 3.540050775515625*^9, 3.540050845390625*^9, 
   3.540056929968979*^9, {3.540098220546875*^9, 3.540098309*^9}, 
   3.540118438109375*^9, {3.540121866765625*^9, 3.54012189946875*^9}, {
   3.5401219376875*^9, 3.54012196228125*^9}, 3.540128324109375*^9, {
   3.540132717828125*^9, 3.54013271828125*^9}, {3.540132836578125*^9, 
   3.540132862515625*^9}, 3.54020814165625*^9, {3.540208878296875*^9, 
   3.5402089081875*^9}, 3.54022464065625*^9, {3.54022592075*^9, 
   3.540225954265625*^9}, {3.54029778703125*^9, 3.540297817640625*^9}, {
   3.540298395296875*^9, 3.540298396640625*^9}, {3.5402984333125*^9, 
   3.54029845803125*^9}, {3.54029938359375*^9, 3.540299389578125*^9}, 
   3.540378887859375*^9, {3.540390327453125*^9, 3.5403903551875*^9}, {
   3.54039038534375*^9, 3.540390434078125*^9}, 3.540392085984375*^9, {
   3.540392153953125*^9, 3.540392169*^9}, {3.540445007875*^9, 
   3.540445056640625*^9}, {3.540445092*^9, 3.5404451150625*^9}, {
   3.540446420765625*^9, 3.540446431625*^9}, 3.540461741234375*^9, 
   3.54046255790625*^9, 3.54046305334375*^9, 3.54046391465625*^9, 
   3.54046465203125*^9, 3.540466692296875*^9, 3.540471372734375*^9, 
   3.540483166640625*^9, 3.540634981875*^9, 3.54063511878125*^9, 
   3.540635197515625*^9, 3.540653299828125*^9, 3.540661660412855*^9, {
   3.54070167584375*^9, 3.540701934015625*^9}, {3.54070200734375*^9, 
   3.540702264234375*^9}, {3.54071960909375*^9, 3.540719637734375*^9}, {
   3.54071968234375*^9, 3.540719835078125*^9}, 3.540720195171875*^9, {
   3.54073887690625*^9, 3.540738907703125*^9}, {3.5407390813125*^9, 
   3.54073911090625*^9}, {3.5407394181875*^9, 3.540739440015625*^9}, 
   3.540742203359375*^9, 3.54074587753125*^9, {3.540835129078125*^9, 
   3.54083515884375*^9}, {3.540835197390625*^9, 3.5408352225625*^9}, {
   3.540867173171875*^9, 3.54086717378125*^9}, {3.540867312203125*^9, 
   3.54086733259375*^9}, {3.540878620203125*^9, 3.540878651515625*^9}, {
   3.540878827703125*^9, 3.54087889153125*^9}, {3.54087899634375*^9, 
   3.540878996828125*^9}, {3.540879249125*^9, 3.54087928834375*^9}, {
   3.540893074625*^9, 3.540893121109375*^9}, {3.540893363875*^9, 
   3.5408933701875*^9}, {3.540893402859375*^9, 3.54089345996875*^9}, {
   3.540893492015625*^9, 3.54089351925*^9}, 3.540897132171875*^9, {
   3.540905480765625*^9, 3.54090552365625*^9}, {3.5409055570625*^9, 
   3.540905618734375*^9}, 3.540906804859375*^9, {3.540906836515625*^9, 
   3.54090689421875*^9}, 3.54092307625*^9, 3.540958905390625*^9, 
   3.5409598411875*^9, {3.5409603306875*^9, 3.5409603526875*^9}, 
   3.540962788328125*^9, 3.5409657534375*^9, {3.5409666248125*^9, 
   3.540966663265625*^9}, 3.540982761375*^9, {3.54098347234375*^9, 
   3.540983481921875*^9}, 3.5409911745625*^9, 3.540992789453125*^9, {
   3.540993230671875*^9, 3.540993257359375*^9}, {3.540993819390625*^9, 
   3.540993824453125*^9}, {3.54100694696875*^9, 3.541006963671875*^9}, 
   3.54100708146875*^9, 3.541007350625*^9, {3.54100738528125*^9, 
   3.54100739709375*^9}, {3.54100787678125*^9, 3.5410079023125*^9}, 
   3.541049706546875*^9, {3.541051705640625*^9, 3.541051711453125*^9}, {
   3.5410840639375*^9, 3.541084071390625*^9}, {3.541084107046875*^9, 
   3.541084166875*^9}, {3.54108423515625*^9, 3.54108423940625*^9}, {
   3.541084279484375*^9, 3.5410843098125*^9}, {3.541084356078125*^9, 
   3.541084411859375*^9}, {3.541084519390625*^9, 3.54108452021875*^9}, {
   3.541085116703125*^9, 3.54108520984375*^9}, {3.54108585671875*^9, 
   3.54108588884375*^9}, 3.54108744625*^9, {3.54114027359375*^9, 
   3.541140304015625*^9}, {3.54114033909375*^9, 3.541140357671875*^9}, 
   3.541156749921875*^9, 3.5411600393125*^9, {3.541160116203125*^9, 
   3.541160116890625*^9}, {3.541160713828125*^9, 3.541160812515625*^9}, {
   3.54117169446875*^9, 3.541171724140625*^9}, {3.54117176125*^9, 
   3.541171802625*^9}, {3.541171837921875*^9, 3.541171973765625*^9}, {
   3.54117208159375*^9, 3.54117209490625*^9}, 3.541172140125*^9, 
   3.541172172640625*^9, {3.54126099046875*^9, 3.541261053578125*^9}, 
   3.541261151296875*^9, 3.5414302340625*^9, {3.5417835788125*^9, 
   3.5417835944375*^9}, 3.54182549328125*^9, {3.541838287546875*^9, 
   3.541838316984375*^9}, {3.541838360046875*^9, 3.541838389890625*^9}, {
   3.54183989121875*^9, 3.541839891671875*^9}, 3.54184003715625*^9, {
   3.541840071734375*^9, 3.54184016484375*^9}, {3.541906393739329*^9, 
   3.541906422176829*^9}, {3.541906472239329*^9, 3.541906504848704*^9}, {
   3.541906897036204*^9, 3.541906997192454*^9}, 3.541934431921875*^9, {
   3.5419354484375*^9, 3.541935474171875*^9}, {3.541952455609375*^9, 
   3.541952499203125*^9}, {3.5419529334375*^9, 3.54195296503125*^9}, {
   3.541953000375*^9, 3.5419530008125*^9}, 3.54195349478125*^9, {
   3.54202570671875*^9, 3.542025719359375*^9}, {3.5420300236875*^9, 
   3.54203006421875*^9}, {3.542030153765625*^9, 3.5420301809375*^9}, {
   3.542032987703125*^9, 3.542032988234375*^9}, {3.542033047390625*^9, 
   3.542033094140625*^9}, {3.54209885221875*^9, 3.5420988764375*^9}, {
   3.542098929578125*^9, 3.542098946296875*^9}, {3.542098978984375*^9, 
   3.542098979421875*^9}, {3.5420999624375*^9, 3.54209999146875*^9}, {
   3.542126391734375*^9, 3.542126427453125*^9}, {3.5421264755625*^9, 
   3.54212650696875*^9}, {3.542126622375*^9, 3.54212662284375*^9}, {
   3.542126687203125*^9, 3.54212671325*^9}, {3.54221148559375*^9, 
   3.542211516375*^9}, {3.542211653890625*^9, 3.54221170471875*^9}, {
   3.542211821484375*^9, 3.542211857203125*^9}, {3.54221262028125*^9, 
   3.542212720640625*^9}, {3.54221280071875*^9, 3.542212800828125*^9}, 
   3.542212833328125*^9, {3.542213148828125*^9, 3.542213169703125*^9}, {
   3.5422132396875*^9, 3.542213295046875*^9}, 3.54221359521875*^9, {
   3.54225464409375*^9, 3.542254676078125*^9}, {3.542254726296875*^9, 
   3.542254752625*^9}, {3.542254814171875*^9, 3.542254814640625*^9}, {
   3.54225524590625*^9, 3.54225533046875*^9}, {3.5422790888125*^9, 
   3.5422791540625*^9}, {3.5422792238125*^9, 3.54227922825*^9}, {
   3.542279377171875*^9, 3.542279403515625*^9}, {3.542279456765625*^9, 
   3.54227945771875*^9}, 3.5422796328125*^9, {3.542280169953125*^9, 
   3.542280193109375*^9}, {3.542345945890625*^9, 3.542345976125*^9}, {
   3.54234603715625*^9, 3.542346115875*^9}, {3.542346368265625*^9, 
   3.54234641821875*^9}, {3.542377262375*^9, 3.542377460609375*^9}, {
   3.542377534921875*^9, 3.54237757046875*^9}, {3.542377604921875*^9, 
   3.542377668453125*^9}, {3.542377820875*^9, 3.54237782346875*^9}, {
   3.542378076203125*^9, 3.542378082421875*^9}, {3.542378353703125*^9, 
   3.5423783573125*^9}, {3.542378397296875*^9, 3.542378403375*^9}, {
   3.542451933671875*^9, 3.542451965625*^9}, {3.54245199921875*^9, 
   3.542452018984375*^9}, {3.5424520609375*^9, 3.542452061421875*^9}, {
   3.542452629390625*^9, 3.54245266321875*^9}, {3.5425385584839687`*^9, 
   3.5425385692027187`*^9}, {3.5425386879527187`*^9, 
   3.5425386998433437`*^9}, {3.5425387824370937`*^9, 
   3.5425388842808437`*^9}, {3.5425396842808437`*^9, 
   3.5425396932964687`*^9}, {3.542645015484375*^9, 3.542645046671875*^9}, {
   3.542645400046875*^9, 3.542645423609375*^9}, {3.5426454675625*^9, 
   3.542645471640625*^9}, 3.542645948609375*^9, {3.542646266203125*^9, 
   3.542646266703125*^9}, {3.54264652253125*^9, 3.542646544234375*^9}, {
   3.542713000234375*^9, 3.54271300246875*^9}, {3.542713063140625*^9, 
   3.542713096921875*^9}, 3.54271314353125*^9, {3.54271318484375*^9, 
   3.54271321209375*^9}, {3.542713262453125*^9, 3.542713262953125*^9}, {
   3.542713731609375*^9, 3.542713794609375*^9}, {3.542726650234375*^9, 
   3.54272665090625*^9}, {3.54272676428125*^9, 3.54272685309375*^9}, {
   3.5427269081875*^9, 3.5427269399375*^9}, {3.542727122578125*^9, 
   3.542727201953125*^9}, {3.54272724671875*^9, 3.542727297515625*^9}, {
   3.542727728125*^9, 3.542727728890625*^9}, {3.54272782540625*^9, 
   3.542727889703125*^9}, {3.54272825309375*^9, 3.54272825859375*^9}, 
   3.542728293578125*^9, 3.542728969546875*^9, {3.5427290555625*^9, 
   3.542729058453125*^9}, {3.5428113836875*^9, 3.542811427109375*^9}, {
   3.542811537296875*^9, 3.54281159925*^9}, {3.542811634078125*^9, 
   3.542811634890625*^9}, {3.5428124459375*^9, 3.542812466875*^9}, {
   3.5428131720625*^9, 3.54281332440625*^9}, {3.542813356734375*^9, 
   3.5428133805*^9}, 3.54286210475*^9, {3.542862325625*^9, 3.5428623445*^9}, {
   3.54288755328125*^9, 3.54288758696875*^9}, {3.542887661875*^9, 
   3.5428877085625*^9}, {3.542889560953125*^9, 3.54288956146875*^9}, {
   3.54288970325*^9, 3.5428897259375*^9}, {3.542963783578125*^9, 
   3.542963858484375*^9}, {3.5429639195625*^9, 3.542963965890625*^9}, {
   3.5429655121875*^9, 3.54296556196875*^9}, {3.542982108296875*^9, 
   3.542982147203125*^9}, {3.54298218984375*^9, 3.542982233078125*^9}, 
   3.5429822798125*^9, 3.5430331123125*^9, {3.5430504709375*^9, 
   3.54305050646875*^9}, {3.543050560421875*^9, 3.543050588671875*^9}, {
   3.5430506693125*^9, 3.54305066978125*^9}, {3.543051030296875*^9, 
   3.54305104940625*^9}, {3.543063354109375*^9, 3.543063364171875*^9}, {
   3.543065493953125*^9, 3.54306554109375*^9}, {3.543065597703125*^9, 
   3.5430656191875*^9}, {3.543065659203125*^9, 3.54306565984375*^9}, {
   3.543065723640625*^9, 3.5430657476875*^9}, {3.54306605840625*^9, 
   3.54306608496875*^9}, 3.543141246734375*^9, {3.5431414428125*^9, 
   3.543141478328125*^9}, 3.543141775921875*^9, 3.543141986484375*^9, {
   3.543204170546875*^9, 3.543204199546875*^9}, {3.543204233109375*^9, 
   3.543204254953125*^9}, {3.543204309703125*^9, 3.54320431015625*^9}, 
   3.543204601375*^9, {3.543204632828125*^9, 3.54320465759375*^9}, {
   3.5432880156875*^9, 3.54328804896875*^9}, {3.5432881086875*^9, 
   3.54328816459375*^9}, {3.543288733890625*^9, 3.54328876378125*^9}, 
   3.543306152046875*^9, {3.543306234359375*^9, 3.543306255578125*^9}, 
   3.543306529375*^9, {3.543411976703125*^9, 3.543412012484375*^9}, {
   3.54341205675*^9, 3.543412074515625*^9}, {3.543412200125*^9, 
   3.54341220059375*^9}, {3.543413064953125*^9, 3.5434130755*^9}, 
   3.54346612690625*^9, {3.54348766259375*^9, 3.543487735734375*^9}, {
   3.543487790296875*^9, 3.543487818890625*^9}, {3.54348790059375*^9, 
   3.5434879013125*^9}, {3.543488180890625*^9, 3.543488198125*^9}, {
   3.54349776746875*^9, 3.543497803765625*^9}, {3.5434979280625*^9, 
   3.54349797*^9}, {3.5434980005625*^9, 3.543498003375*^9}, {
   3.5434991860625*^9, 3.54349922953125*^9}, 3.543506847484375*^9, 
   3.543562260078125*^9, {3.54356382334375*^9, 3.5435638691875*^9}, {
   3.5436537765*^9, 3.54365385275*^9}, {3.54365408503125*^9, 
   3.543654124234375*^9}, {3.543658740828125*^9, 3.543658742453125*^9}, {
   3.54365954309375*^9, 3.54365959409375*^9}, {3.5436607475625*^9, 
   3.543660800171875*^9}, 3.543660832578125*^9, {3.543740952890625*^9, 
   3.54374098825*^9}, {3.543741111703125*^9, 3.54374113590625*^9}, {
   3.543741303234375*^9, 3.543741326984375*^9}, {3.54374871840625*^9, 
   3.5437487649375*^9}, {3.54374896203125*^9, 3.5437489950625*^9}, {
   3.54374903840625*^9, 3.54374903890625*^9}, {3.543751194921875*^9, 
   3.543751200796875*^9}, {3.543751389625*^9, 3.54375144446875*^9}, {
   3.5437518548125*^9, 3.543751884625*^9}, {3.543757285984375*^9, 
   3.5437573295*^9}, {3.5437573803125*^9, 3.54375740840625*^9}, {
   3.54375749259375*^9, 3.5437574949375*^9}, {3.54375754240625*^9, 
   3.54375756215625*^9}, 3.54375996296875*^9, {3.54376001971875*^9, 
   3.543760345546875*^9}, 3.543760402625*^9, {3.543760489453125*^9, 
   3.543760508328125*^9}, {3.543760553328125*^9, 3.543760588171875*^9}, 
   3.543760716109375*^9, {3.54376075475*^9, 3.5437607981875*^9}, 
   3.543760872671875*^9, {3.54376091734375*^9, 3.5437609615*^9}, 
   3.5437609935*^9, {3.543767874921875*^9, 3.54376789975*^9}, {
   3.5438238485134478`*^9, 3.5438239478415723`*^9}, {3.5438241283259478`*^9, 
   3.5438242190759478`*^9}, {3.5438242968571978`*^9, 
   3.5438242973728223`*^9}, {3.5438261121853223`*^9, 
   3.5438261390446978`*^9}, {3.5438270447321978`*^9, 
   3.5438271072790723`*^9}, {3.5438271867946978`*^9, 
   3.5438272017790723`*^9}, {3.54398502990625*^9, 3.543985064765625*^9}, {
   3.5439851465*^9, 3.543985178421875*^9}, {3.5439852290625*^9, 
   3.54398522953125*^9}, {3.543985712828125*^9, 3.543985728171875*^9}, {
   3.54401132265625*^9, 3.544011350515625*^9}, {3.54401533821875*^9, 
   3.54401539915625*^9}, {3.544015539265625*^9, 3.54401560815625*^9}, 
   3.544015797390625*^9, 3.54409901309375*^9, {3.54417813321875*^9, 
   3.54417817934375*^9}, {3.544178253703125*^9, 3.54417827740625*^9}, {
   3.544178976171875*^9, 3.544178981125*^9}, 3.5441793655625*^9, {
   3.54418031175*^9, 3.54418031265625*^9}, {3.544180454109375*^9, 
   3.54418058315625*^9}, {3.544180794375*^9, 3.54418080365625*^9}, {
   3.54424097803125*^9, 3.544241006796875*^9}, {3.544241059125*^9, 
   3.54424108403125*^9}, {3.54424111678125*^9, 3.544241117265625*^9}, 
   3.544241281484375*^9, {3.544241992953125*^9, 3.544242001234375*^9}, {
   3.54425709175*^9, 3.5442572053125*^9}, 3.544258789515625*^9, 
   3.54425898309375*^9, 3.544259458515625*^9, 3.544259860578125*^9, {
   3.5442599678125*^9, 3.544259987734375*^9}, 3.54426021090625*^9, 
   3.544260674203125*^9, {3.54427408009375*^9, 3.5442740958125*^9}, 
   3.54427494925*^9, {3.5443588244375*^9, 3.544358854375*^9}, {
   3.544358903515625*^9, 3.544358925484375*^9}, {3.54435896265625*^9, 
   3.5443589649375*^9}, 3.54435938328125*^9, {3.544536700546875*^9, 
   3.544536731765625*^9}, {3.54453680890625*^9, 3.544536864703125*^9}, {
   3.544536906*^9, 3.5445369065*^9}, 3.544537064671875*^9, 
   3.54454439303125*^9, {3.54454442665625*^9, 3.544544449375*^9}, {
   3.544677627578125*^9, 3.544677628078125*^9}, {3.544677814234375*^9, 
   3.54467787075*^9}, {3.54467794321875*^9, 3.5446781015625*^9}, {
   3.54467813984375*^9, 3.544678207171875*^9}, {3.544690383515625*^9, 
   3.54469042225*^9}, 3.54469321053125*^9, {3.54469324153125*^9, 
   3.544693263203125*^9}, {3.544715618484375*^9, 3.54471569334375*^9}, {
   3.544716756953125*^9, 3.54471675746875*^9}, {3.5447168138125*^9, 
   3.5447168465*^9}, {3.544790246*^9, 3.54479029790625*^9}, {
   3.544790379625*^9, 3.544790503984375*^9}, {3.5447905466875*^9, 
   3.544790547765625*^9}, 3.5447912488125*^9, {3.544793936359375*^9, 
   3.544793956765625*^9}, {3.544794042375*^9, 3.54479406896875*^9}, {
   3.5448830695*^9, 3.5448831265*^9}, {3.54488315921875*^9, 
   3.54488319796875*^9}, {3.544883239765625*^9, 3.544883297*^9}, {
   3.544883461375*^9, 3.544883470515625*^9}, {3.544883506671875*^9, 
   3.54488366271875*^9}, {3.544953919765625*^9, 3.544953985796875*^9}, {
   3.544954245984375*^9, 3.544954291515625*^9}, {3.54495440375*^9, 
   3.544954405375*^9}, {3.544955400796875*^9, 3.544955411609375*^9}, 
   3.5450184946947002`*^9, {3.545048079046875*^9, 3.545048142109375*^9}, {
   3.545048208796875*^9, 3.54504829828125*^9}, {3.545050243703125*^9, 
   3.545050245578125*^9}, {3.54505067040625*^9, 3.54505068703125*^9}, 
   3.545061523640625*^9, 3.545061568234375*^9, 3.545061698859375*^9, 
   3.54510032071875*^9, {3.545100464421875*^9, 3.5451005129375*^9}, 
   3.545100817078125*^9, {3.545102186296875*^9, 3.54510222653125*^9}, 
   3.545115197109375*^9, {3.54511522878125*^9, 3.54511523809375*^9}, 
   3.54511953053125*^9, {3.54513165084375*^9, 3.545131706421875*^9}, {
   3.545131758359375*^9, 3.545131794671875*^9}, {3.545136639171875*^9, 
   3.5451366399375*^9}, 3.545136772703125*^9, {3.545278002203125*^9, 
   3.545278013796875*^9}, {3.545278194921875*^9, 3.5452782398125*^9}, {
   3.54527830684375*^9, 3.545278307609375*^9}, {3.545278346421875*^9, 
   3.545278455453125*^9}, {3.54527903753125*^9, 3.545279079375*^9}, {
   3.545366635859375*^9, 3.54536667453125*^9}, {3.5453667185625*^9, 
   3.545366748953125*^9}, {3.545366978515625*^9, 3.54536697971875*^9}, 
   3.5453670275625*^9, {3.54536706778125*^9, 3.54536708346875*^9}, {
   3.54539793728125*^9, 3.5453980095*^9}, {3.545398071984375*^9, 
   3.54539811709375*^9}, {3.5454483411875*^9, 3.54544836471875*^9}, {
   3.5454483956875*^9, 3.545448445859375*^9}, {3.54544910996875*^9, 
   3.545449111*^9}, {3.545449217046875*^9, 3.545449263171875*^9}, {
   3.545466153796875*^9, 3.5454661633125*^9}, {3.545474624296875*^9, 
   3.545474766796875*^9}, {3.545474833890625*^9, 3.54547483509375*^9}, 
   3.54547488384375*^9, 3.545484115890625*^9, 3.54548448125*^9, 
   3.545484896046875*^9, {3.54548645884375*^9, 3.545486479890625*^9}, {
   3.545487019953125*^9, 3.5454871006875*^9}, 3.545488164515625*^9, {
   3.545650795921875*^9, 3.5456508568125*^9}, {3.545650939046875*^9, 
   3.545650982015625*^9}, {3.5456510519375*^9, 3.545651053765625*^9}, {
   3.54565129659375*^9, 3.5456513555625*^9}, {3.54566177640625*^9, 
   3.545661857015625*^9}, {3.545661889328125*^9, 3.545661934796875*^9}, {
   3.54571352371875*^9, 3.54571352428125*^9}, 3.54571375084375*^9, {
   3.5457353595625*^9, 3.545735399484375*^9}, {3.545735443203125*^9, 
   3.545735464828125*^9}, {3.545735514375*^9, 3.545735514921875*^9}, 
   3.545735662875*^9, {3.545832696859375*^9, 3.5458327795625*^9}, {
   3.545833227890625*^9, 3.5458332284375*^9}, {3.545833329859375*^9, 
   3.545833340109375*^9}, {3.54583580784375*^9, 3.5458358378125*^9}, {
   3.545835935203125*^9, 3.54583597240625*^9}, {3.5458394555*^9, 
   3.545839456046875*^9}, {3.545839523796875*^9, 3.545839624265625*^9}, {
   3.545899821265625*^9, 3.545899859703125*^9}, {3.54589993796875*^9, 
   3.54589998734375*^9}, {3.54590023090625*^9, 3.545900361875*^9}, {
   3.545918034375*^9, 3.54591803490625*^9}, 3.545918153984375*^9, {
   3.54591819915625*^9, 3.54591820971875*^9}, {3.545918308171875*^9, 
   3.545918341859375*^9}, {3.545918519671875*^9, 3.54591858534375*^9}, {
   3.5459962893125*^9, 3.545996327546875*^9}, {3.545996364609375*^9, 
   3.545996395484375*^9}, {3.545996509859375*^9, 3.545996528046875*^9}, {
   3.54599657084375*^9, 3.545996571453125*^9}, 3.54599680828125*^9, 
   3.54599687384375*^9, 3.5459999466875*^9, {3.546000133359375*^9, 
   3.546000145296875*^9}, 3.546001248546875*^9, 3.54600132090625*^9, 
   3.546002525265625*^9, 3.546014257359375*^9, {3.54601762559375*^9, 
   3.546017656828125*^9}, {3.546017720328125*^9, 3.546017756734375*^9}, 
   3.54601789303125*^9, {3.546055121546875*^9, 3.5460551265625*^9}, 
   3.5460552229375*^9, 3.546055658828125*^9, {3.54609260625*^9, 
   3.54609266875*^9}, {3.5460927018125*^9, 3.546092707140625*^9}, {
   3.54609274584375*^9, 3.546092753375*^9}, {3.5460960719375*^9, 
   3.54609607246875*^9}, 3.54609612384375*^9, {3.546096163453125*^9, 
   3.546096191125*^9}, {3.5461372918125*^9, 3.54613732565625*^9}, {
   3.54613761165625*^9, 3.546137658453125*^9}, {3.54613772603125*^9, 
   3.546137814265625*^9}, {3.546137855921875*^9, 3.546137857484375*^9}, {
   3.546138057078125*^9, 3.54613811959375*^9}, {3.546355083796875*^9, 
   3.546355119234375*^9}, {3.546355191765625*^9, 3.54635521765625*^9}, {
   3.546355643671875*^9, 3.54635564421875*^9}, {3.546355802171875*^9, 
   3.54635580375*^9}, {3.546355878296875*^9, 3.5463559419375*^9}, {
   3.546356042109375*^9, 3.546356108171875*^9}, {3.5463561796875*^9, 
   3.54635621228125*^9}, {3.54640714190625*^9, 3.546407211453125*^9}, {
   3.546407284484375*^9, 3.546407311296875*^9}, {3.5464073939375*^9, 
   3.54640739678125*^9}, {3.546407846265625*^9, 3.5464079996875*^9}, 
   3.5464080425625*^9, 3.546413480125*^9, 3.546434797359375*^9, 
   3.546435713359375*^9, {3.54648637065625*^9, 3.546486408640625*^9}, {
   3.546486444921875*^9, 3.54648648334375*^9}, {3.54648654534375*^9, 
   3.5464865459375*^9}, {3.546486650078125*^9, 3.54648667053125*^9}, 
   3.5464929135625*^9, {3.546492978921875*^9, 3.54649302484375*^9}, {
   3.546493056375*^9, 3.54649309003125*^9}, {3.5464931693125*^9, 
   3.546493169890625*^9}, {3.54649451534375*^9, 3.54649453746875*^9}, {
   3.5465163840625*^9, 3.546516471171875*^9}, {3.546516525375*^9, 
   3.546516525953125*^9}, {3.54651676090625*^9, 3.54651679603125*^9}, {
   3.54652047803125*^9, 3.5465205649375*^9}, {3.54652076278125*^9, 
   3.546520763390625*^9}, {3.546521055109375*^9, 3.54652107375*^9}, 
   3.5465922326875*^9, {3.546594011671875*^9, 3.5465940640625*^9}, {
   3.546594141890625*^9, 3.54659418103125*^9}, 3.54661110278125*^9, 
   3.54661293096875*^9, {3.546616789265625*^9, 3.5466168994375*^9}, {
   3.54661701890625*^9, 3.546617036515625*^9}, {3.546617494328125*^9, 
   3.546617501234375*^9}, {3.546617558265625*^9, 3.54661759396875*^9}, {
   3.54661840665625*^9, 3.5466184085*^9}, {3.54661881103125*^9, 
   3.546618932578125*^9}, {3.546619499078125*^9, 3.546619507171875*^9}, {
   3.546619576046875*^9, 3.546619807921875*^9}, {3.546619840015625*^9, 
   3.5466198639375*^9}, 3.546619906015625*^9, {3.546619936109375*^9, 
   3.54661994921875*^9}, {3.546620015546875*^9, 3.54662006153125*^9}, {
   3.546620126015625*^9, 3.546620158171875*^9}, {3.546620307703125*^9, 
   3.546620965546875*^9}, {3.546681665328125*^9, 3.546681692734375*^9}, {
   3.54668195490625*^9, 3.54668196128125*^9}, 3.546682048640625*^9, {
   3.546682134453125*^9, 3.546682147046875*^9}, 3.546682233171875*^9, {
   3.54668245315625*^9, 3.54668245471875*^9}, 3.546682585640625*^9, {
   3.546682761046875*^9, 3.54668287825*^9}, {3.546683001203125*^9, 
   3.5466830061875*^9}, {3.546683056953125*^9, 3.5466830744375*^9}, {
   3.54668312521875*^9, 3.54668317053125*^9}, {3.5466832398125*^9, 
   3.546683246890625*^9}, {3.5466832855625*^9, 3.5466832870625*^9}, {
   3.54668345909375*^9, 3.546683477734375*^9}, {3.546691063203125*^9, 
   3.546691153328125*^9}, {3.5466912119375*^9, 3.54669121259375*^9}, 
   3.546691673140625*^9, {3.54676536515625*^9, 3.54676540075*^9}, {
   3.54676544103125*^9, 3.54676547271875*^9}, {3.5467655574375*^9, 
   3.546765558*^9}, 3.54676640503125*^9, 3.54676649109375*^9, {
   3.546767419546875*^9, 3.5467674710625*^9}, 3.546768321875*^9, {
   3.5467763649375*^9, 3.546776411640625*^9}, {3.546776455859375*^9, 
   3.546776488703125*^9}, {3.546776585171875*^9, 3.546776585828125*^9}, {
   3.54677697253125*^9, 3.546777094546875*^9}, {3.546777874390625*^9, 
   3.5467779525*^9}, {3.5471283855*^9, 3.547128471234375*^9}, 
   3.547128504796875*^9, {3.547128556796875*^9, 3.54712920528125*^9}, {
   3.54712942225*^9, 3.54713009884375*^9}, {3.547131343265625*^9, 
   3.547131416078125*^9}, {3.547131448640625*^9, 3.547131527453125*^9}, 
   3.547131800234375*^9, {3.54745400334375*^9, 3.547454006203125*^9}, {
   3.54745405478125*^9, 3.547454057703125*^9}, {3.54746793296875*^9, 
   3.54746797096875*^9}, {3.547468016078125*^9, 3.54746805409375*^9}, 
   3.547468505453125*^9, {3.547469417265625*^9, 3.547469419328125*^9}, {
   3.547470003609375*^9, 3.54747001509375*^9}, {3.547537492567836*^9, 
   3.547537544224086*^9}, {3.547537575286586*^9, 3.547537600849086*^9}, {
   3.547537665599086*^9, 3.547537666911586*^9}, {3.547538204864711*^9, 
   3.547538216958461*^9}, 3.547539079833461*^9, {3.547558710770961*^9, 
   3.547558784302211*^9}, {3.547559816411586*^9, 3.547559857130336*^9}, {
   3.547559911895961*^9, 3.547559913208461*^9}, 3.547559961614711*^9, 
   3.547616842125*^9, {3.54763056134375*^9, 3.54763056234375*^9}, {
   3.547630668984375*^9, 3.547630708484375*^9}, {3.547631087046875*^9, 
   3.547631088*^9}, {3.54763183146875*^9, 3.54763186109375*^9}, {
   3.5476319234375*^9, 3.54763197165625*^9}, 3.547642899703125*^9, 
   3.54764295525*^9, {3.547732669046875*^9, 3.547732719796875*^9}, {
   3.54773275375*^9, 3.547732791109375*^9}, {3.547733243921875*^9, 
   3.54773324509375*^9}, 3.54773341684375*^9, {3.54779308765625*^9, 
   3.547793121953125*^9}, {3.54779364071875*^9, 3.547794047234375*^9}, {
   3.547795241640625*^9, 3.54779530425*^9}, {3.54779535284375*^9, 
   3.547795641859375*^9}, {3.547795672234375*^9, 3.5477956838125*^9}, 
   3.5477981418125*^9, {3.5478057795625*^9, 3.54780588846875*^9}, 
   3.547824932875*^9, {3.547825678453125*^9, 3.54782569421875*^9}, {
   3.54788980571875*^9, 3.547889857546875*^9}, {3.54788989646875*^9, 
   3.547889934625*^9}, {3.547890030921875*^9, 3.54789003209375*^9}, {
   3.547890415203125*^9, 3.547890450234375*^9}, {3.547910543109375*^9, 
   3.547910638515625*^9}, 3.54791066909375*^9, {3.54791088328125*^9, 
   3.547911053140625*^9}, {3.547911083328125*^9, 3.547911085890625*^9}, {
   3.547911525578125*^9, 3.5479115600625*^9}, {3.547911785671875*^9, 
   3.547911800765625*^9}, 3.547969170296875*^9, 3.547970351328125*^9, 
   3.54797386334375*^9, 3.547974251890625*^9, 3.54797587875*^9, 
   3.547975908796875*^9, 3.547977075765625*^9, 3.547981953171875*^9, 
   3.547982708984375*^9, 3.547983298796875*^9, 3.5479844143125*^9, 
   3.54798531165625*^9, 3.5479854041875*^9, {3.54799400465625*^9, 
   3.547994011625*^9}, {3.5479940601875*^9, 3.5479941506875*^9}, {
   3.547994218703125*^9, 3.54799428259375*^9}, {3.54799503903125*^9, 
   3.547995040265625*^9}, 3.54799535878125*^9, {3.548079680609375*^9, 
   3.548079722296875*^9}, {3.54807978371875*^9, 3.54807985115625*^9}, {
   3.54808019940625*^9, 3.548080217640625*^9}, 3.548156357153232*^9, 
   3.548157683825107*^9, {3.548159053840732*^9, 3.548159113575107*^9}, 
   3.548218818875*^9, 3.548219337859375*^9, {3.54850478234375*^9, 
   3.548504783640625*^9}, {3.54850484659375*^9, 3.548504875203125*^9}, {
   3.548505122078125*^9, 3.54850515703125*^9}, {3.5485051956875*^9, 
   3.548505196609375*^9}, {3.548505246640625*^9, 3.548505295953125*^9}, {
   3.5485978018125*^9, 3.548597803109375*^9}, 3.548597845265625*^9, {
   3.54859787659375*^9, 3.54859794196875*^9}, {3.54859799909375*^9, 
   3.5485981095625*^9}, 3.548599137390625*^9, {3.54859916921875*^9, 
   3.548599188953125*^9}, {3.548769482739792*^9, 3.548769535599167*^9}, {
   3.548769567864792*^9, 3.548769575786667*^9}, {3.548769611161667*^9, 
   3.548769623849167*^9}, {3.548769657083542*^9, 3.548769673224167*^9}, {
   3.548769946614792*^9, 3.548770114505417*^9}, 3.548770460864792*^9, {
   3.54881803346875*^9, 3.5488180743125*^9}, {3.5488431803125*^9, 
   3.548843265796875*^9}, {3.54884334578125*^9, 3.548843408421875*^9}, {
   3.54884407475*^9, 3.54884407653125*^9}, 3.548844391640625*^9, {
   3.548844497515625*^9, 3.54884458159375*^9}, {3.548844781*^9, 
   3.548844872953125*^9}, 3.54884529834375*^9, 3.54884570809375*^9, {
   3.548942226296875*^9, 3.548942263296875*^9}, {3.5489422955*^9, 
   3.548942320234375*^9}, {3.548942380203125*^9, 3.5489423808125*^9}, 
   3.5489440930625*^9, 3.548944523140625*^9, {3.54909843346875*^9, 
   3.54909846475*^9}, {3.549098507640625*^9, 3.5490985450625*^9}, {
   3.549102223078125*^9, 3.54910225790625*^9}, {3.54910230040625*^9, 
   3.549102301046875*^9}, {3.5491026425*^9, 3.5491026528125*^9}, {
   3.5491027178125*^9, 3.5491027183125*^9}, {3.549102750859375*^9, 
   3.54910278265625*^9}, {3.5491028306875*^9, 3.54910284478125*^9}, {
   3.54910301196875*^9, 3.54910302271875*^9}, {3.549167962890625*^9, 
   3.5491680081875*^9}, {3.549168049421875*^9, 3.54916806265625*^9}, {
   3.54916810321875*^9, 3.549168107984375*^9}, {3.54916814171875*^9, 
   3.54916814234375*^9}, 3.549168336546875*^9, {3.54917680490625*^9, 
   3.549176845890625*^9}, {3.5491769144375*^9, 3.549176967375*^9}, {
   3.5491770006875*^9, 3.549177001265625*^9}, {3.549177157953125*^9, 
   3.549177168125*^9}, {3.549347029234375*^9, 3.549347029671875*^9}, {
   3.54934726365625*^9, 3.549347293671875*^9}, {3.549347363796875*^9, 
   3.549347407875*^9}, 3.549347477125*^9, {3.549446163578125*^9, 
   3.549446195765625*^9}, {3.549446247234375*^9, 3.549446275546875*^9}, {
   3.549446315046875*^9, 3.549446315640625*^9}, {3.54944665*^9, 
   3.5494467273125*^9}, 3.54946205596875*^9, {3.549463194640625*^9, 
   3.54946334240625*^9}, {3.549463402890625*^9, 3.549463458*^9}, {
   3.549513154328125*^9, 3.5495131991875*^9}, {3.5495133320625*^9, 
   3.54951336709375*^9}, 3.549513434734375*^9, {3.5495135534375*^9, 
   3.54951359121875*^9}, {3.5495136375*^9, 3.54951364478125*^9}, {
   3.549513677015625*^9, 3.549513701515625*^9}, 3.549513747546875*^9, 
   3.549513805890625*^9, {3.549513913296875*^9, 3.54951394225*^9}, {
   3.54951414721875*^9, 3.54951415465625*^9}, {3.54951419128125*^9, 
   3.549514233234375*^9}, 3.5495142655625*^9, {3.549514331703125*^9, 
   3.549514338328125*^9}, 3.549514586328125*^9, {3.54951469625*^9, 
   3.549514898515625*^9}, {3.549514934109375*^9, 3.549514941375*^9}, 
   3.549515008046875*^9, {3.54951514684375*^9, 3.549515153890625*^9}, {
   3.549515508296875*^9, 3.549515509015625*^9}, {3.549515562921875*^9, 
   3.549515603609375*^9}, {3.549548954515625*^9, 3.549548955125*^9}, {
   3.549549027921875*^9, 3.549549040734375*^9}, {3.549549081765625*^9, 
   3.54954908471875*^9}, {3.549549174*^9, 3.54954919590625*^9}, {
   3.549549235421875*^9, 3.549549271390625*^9}, {3.54961906396875*^9, 
   3.549619114125*^9}, {3.54961921603125*^9, 3.5496192225625*^9}, {
   3.549619255828125*^9, 3.549619291734375*^9}, {3.549619643390625*^9, 
   3.549619662515625*^9}, {3.549623225640625*^9, 3.549623331296875*^9}, {
   3.54962365871875*^9, 3.54962371678125*^9}, 3.549625054421875*^9, {
   3.549633831203125*^9, 3.5496339135*^9}, {3.54963396759375*^9, 
   3.54963396825*^9}, 3.54963425225*^9, {3.549778036890625*^9, 
   3.549778082359375*^9}, {3.5497781135*^9, 3.549778165171875*^9}, {
   3.549778988609375*^9, 3.549779099671875*^9}, {3.549856596390625*^9, 
   3.54985662921875*^9}, {3.54985705684375*^9, 3.549857081625*^9}, {
   3.54985748959375*^9, 3.54985749021875*^9}, 3.549857704328125*^9, 
   3.5498578040625*^9, {3.549864489421875*^9, 3.549864640671875*^9}, {
   3.549864800796875*^9, 3.549864802109375*^9}, {3.54986517078125*^9, 
   3.5498652275*^9}, {3.549947473390625*^9, 3.5499475708125*^9}, {
   3.54994764465625*^9, 3.54994764525*^9}, {3.549947808078125*^9, 
   3.549947867109375*^9}, {3.549979226546875*^9, 3.549979313296875*^9}, {
   3.5499793640625*^9, 3.549979364671875*^9}, 3.549980429226248*^9, {
   3.55015923953125*^9, 3.550159280515625*^9}, {3.5501593135*^9, 
   3.55015931678125*^9}, {3.5501593563125*^9, 3.55015936621875*^9}, {
   3.55015940140625*^9, 3.550159402046875*^9}, 3.5501607588125*^9, {
   3.550160836578125*^9, 3.5501609428125*^9}, {3.55020274975*^9, 
   3.550202754890625*^9}, {3.550211574984375*^9, 3.5502116080625*^9}, {
   3.550211688234375*^9, 3.550211724078125*^9}, {3.550211772265625*^9, 
   3.5502118695625*^9}, 3.55021212415625*^9, {3.55030827903125*^9, 
   3.550308329234375*^9}, {3.550308410484375*^9, 3.55030843296875*^9}, {
   3.550308531265625*^9, 3.55030853184375*^9}, {3.550308951953125*^9, 
   3.550308963578125*^9}, {3.550499004828125*^9, 3.550499126625*^9}, {
   3.550499191140625*^9, 3.55049919178125*^9}, {3.550499402296875*^9, 
   3.550499431890625*^9}, {3.550499577171875*^9, 3.5504996633125*^9}, {
   3.550499694953125*^9, 3.55049969553125*^9}, 3.550500169484375*^9, 
   3.5505016826875*^9, 3.5505901834819517`*^9, {3.5505905900913267`*^9, 
   3.5505907030757017`*^9}, {3.5505907427788267`*^9, 
   3.5505907945600767`*^9}, {3.5505911310757017`*^9, 
   3.5505911317163267`*^9}, {3.5505919900913267`*^9, 
   3.5505920324507017`*^9}, {3.550743111546875*^9, 3.550743149953125*^9}, {
   3.550743230234375*^9, 3.55074325578125*^9}, {3.5507432958125*^9, 
   3.55074329646875*^9}, 3.55074367525*^9, {3.55080870640625*^9, 
   3.55080870671875*^9}, {3.550808740328125*^9, 3.550808775375*^9}, {
   3.550808822171875*^9, 3.550808850265625*^9}, {3.55080890021875*^9, 
   3.55080890084375*^9}, {3.55080904271875*^9, 3.55080906865625*^9}, {
   3.550809109453125*^9, 3.55080916815625*^9}, {3.5508383086875*^9, 
   3.55083834621875*^9}, {3.55083840378125*^9, 3.550838426625*^9}, {
   3.55083846621875*^9, 3.550838543421875*^9}, {3.550838612203125*^9, 
   3.55083864478125*^9}, {3.550891881328125*^9, 3.55089193403125*^9}, {
   3.550892022125*^9, 3.550892043109375*^9}, {3.55089208084375*^9, 
   3.550892081484375*^9}, {3.550892482265625*^9, 3.550892506015625*^9}, {
   3.550896851015625*^9, 3.55089687671875*^9}, 3.55089700584375*^9, {
   3.550897044890625*^9, 3.550897067671875*^9}, {3.55089710746875*^9, 
   3.550897108140625*^9}, {3.550897298390625*^9, 3.550897308671875*^9}, 
   3.55093640909375*^9, {3.550937020421875*^9, 3.55093703359375*^9}, 
   3.550937100546875*^9, {3.55106846059375*^9, 3.551068549109375*^9}, {
   3.55106860775*^9, 3.551068608390625*^9}, {3.551068785734375*^9, 
   3.55106882284375*^9}, {3.551069302921875*^9, 3.55106930815625*^9}, {
   3.551069349859375*^9, 3.551069411078125*^9}, {3.551069454796875*^9, 
   3.551069489640625*^9}, {3.55106954496875*^9, 3.551069585328125*^9}, {
   3.551069710859375*^9, 3.551069740046875*^9}, {3.551070364625*^9, 
   3.55107036925*^9}, 3.551098983140625*^9, {3.55111010071875*^9, 
   3.55111020225*^9}, {3.551110477265625*^9, 3.551110560078125*^9}, {
   3.55111066509375*^9, 3.551110667*^9}, {3.551111165265625*^9, 
   3.551111267953125*^9}, 3.5511537325*^9, 3.551165992640625*^9, 
   3.551166093078125*^9, {3.55118580084375*^9, 3.55118586690625*^9}, {
   3.551185915828125*^9, 3.55118592309375*^9}, {3.551185955890625*^9, 
   3.551185970453125*^9}, {3.551186118703125*^9, 3.551186129703125*^9}, {
   3.55118616259375*^9, 3.551186163984375*^9}, 3.551186445265625*^9, 
   3.5512753959950867`*^9, {3.5512754454482117`*^9, 3.5512754486982117`*^9}, {
   3.55132685290625*^9, 3.55132687746875*^9}, 3.551327214953125*^9, {
   3.55133198453125*^9, 3.551332018203125*^9}, {3.55133206028125*^9, 
   3.5513320633125*^9}, {3.551332093859375*^9, 3.551332127953125*^9}, {
   3.551332257078125*^9, 3.55133229228125*^9}, 3.551332341390625*^9, {
   3.551332379609375*^9, 3.551332381375*^9}, {3.551332426765625*^9, 
   3.5513325666875*^9}, {3.55133265628125*^9, 3.551332734*^9}, {
   3.551333131875*^9, 3.551333133671875*^9}, 3.551333274390625*^9, {
   3.55133330440625*^9, 3.551333314953125*^9}, {3.551333367453125*^9, 
   3.55133339440625*^9}, 3.551333441984375*^9, {3.551333512390625*^9, 
   3.551333562171875*^9}, {3.551333593109375*^9, 3.551333643921875*^9}, {
   3.55133367946875*^9, 3.55133368003125*^9}, 3.551334405375*^9, 
   3.551425966578125*^9, 3.551427350203125*^9, 3.551427726421875*^9, {
   3.551436775796875*^9, 3.551436879828125*^9}, {3.55143691309375*^9, 
   3.551436913734375*^9}, 3.55143718584375*^9, {3.551437320515625*^9, 
   3.5514373626875*^9}, {3.551437436421875*^9, 3.551437443015625*^9}, {
   3.551437479109375*^9, 3.551437486421875*^9}, {3.551437526875*^9, 
   3.5514375275*^9}, 3.55143798153125*^9, {3.551526139453125*^9, 
   3.551526172234375*^9}, {3.55152627846875*^9, 3.55152631690625*^9}, {
   3.5515263594375*^9, 3.551526360140625*^9}, {3.551526641390625*^9, 
   3.551526658921875*^9}, {3.551527082*^9, 3.551527106796875*^9}, {
   3.551527220859375*^9, 3.551527271671875*^9}, {3.5515274860625*^9, 
   3.55152760259375*^9}, {3.551527693875*^9, 3.551527782109375*^9}, {
   3.55152782246875*^9, 3.551527826265625*^9}, {3.551528266265625*^9, 
   3.55152827809375*^9}, {3.5515283523125*^9, 3.551528361296875*^9}, {
   3.5516255900625*^9, 3.551625614703125*^9}, {3.551625751765625*^9, 
   3.551625784234375*^9}, {3.55162599703125*^9, 3.5516260128125*^9}, {
   3.551626051046875*^9, 3.551626056421875*^9}, {3.551626118640625*^9, 
   3.55162611925*^9}, 3.55162659353125*^9, {3.551700311875*^9, 
   3.5517003124375*^9}, {3.551700360953125*^9, 3.55170042146875*^9}, {
   3.551700649640625*^9, 3.551700662328125*^9}, {3.551700706109375*^9, 
   3.551700801203125*^9}, {3.5517008415*^9, 3.55170092209375*^9}, {
   3.551700953625*^9, 3.551701022953125*^9}, 3.55170135396875*^9, {
   3.55180117275*^9, 3.551801173390625*^9}, 3.55180122540625*^9, {
   3.551801826359375*^9, 3.551801863484375*^9}, {3.55180190853125*^9, 
   3.551801938328125*^9}, {3.551874671015625*^9, 3.551874702390625*^9}, {
   3.551874770921875*^9, 3.551874799578125*^9}, {3.55187484190625*^9, 
   3.551874851375*^9}, {3.551874933828125*^9, 3.5518749344375*^9}, 
   3.55187515040625*^9, 3.551882733823095*^9, {3.5518827721512194`*^9, 
   3.551882815573095*^9}, 3.551882860635595*^9, 3.551883147510595*^9, 
   3.55192839971875*^9, {3.55195403671875*^9, 3.5519540716875*^9}, {
   3.551954963234375*^9, 3.55195500790625*^9}, {3.55196174765625*^9, 
   3.5519617828125*^9}, {3.551961840125*^9, 3.551961848125*^9}, {
   3.551969624859375*^9, 3.5519696701875*^9}, {3.551969760859375*^9, 
   3.551969761515625*^9}, 3.55197002446875*^9, {3.551970409625*^9, 
   3.55197045471875*^9}, {3.55197066265625*^9, 3.551970663296875*^9}, 
   3.551970969765625*^9, 3.552018545046875*^9, 3.5520185899375*^9, {
   3.552018961546875*^9, 3.5520189763125*^9}, {3.552041962046875*^9, 
   3.5520420525625*^9}, {3.55204214209375*^9, 3.55204214275*^9}, 
   3.552042503921875*^9, {3.5522099999375*^9, 3.5522100515625*^9}, {
   3.552210095578125*^9, 3.5522101394375*^9}, {3.5522106703125*^9, 
   3.552210685375*^9}, {3.55221074921875*^9, 3.55221074940625*^9}, {
   3.5522107866875*^9, 3.552210818296875*^9}, {3.5522108760625*^9, 
   3.552210899625*^9}, {3.55221094553125*^9, 3.55221094615625*^9}, 
   3.552211145078125*^9, {3.5522112213125*^9, 3.552211221953125*^9}, {
   3.5522113119375*^9, 3.55221144425*^9}, {3.55221152565625*^9, 
   3.552211554453125*^9}, {3.5522115976875*^9, 3.5522116484375*^9}, {
   3.55221826996875*^9, 3.552218334890625*^9}, {3.55221869446875*^9, 
   3.552218760390625*^9}, {3.5522195323125*^9, 3.552219534671875*^9}, {
   3.552277458234375*^9, 3.55227749209375*^9}, {3.552277526859375*^9, 
   3.5522775309375*^9}, {3.55227756271875*^9, 3.552277569125*^9}, {
   3.552277695765625*^9, 3.552277696390625*^9}, 3.55227810696875*^9, {
   3.55230106128125*^9, 3.5523011144375*^9}, {3.55230158384375*^9, 
   3.55230159221875*^9}, {3.552301624390625*^9, 3.552301630109375*^9}, {
   3.552301684578125*^9, 3.55230168521875*^9}, 3.55230219271875*^9, {
   3.5523643855625*^9, 3.55236442471875*^9}, {3.55236446746875*^9, 
   3.5523645044375*^9}, {3.5523645376875*^9, 3.552364538390625*^9}, {
   3.552364626515625*^9, 3.5523646381875*^9}, {3.55238564209375*^9, 
   3.5523856815625*^9}, {3.552385772734375*^9, 3.55238581046875*^9}, {
   3.5523858940625*^9, 3.552385894734375*^9}, {3.55238629334375*^9, 
   3.552386304890625*^9}, {3.552386389859375*^9, 3.5523864021875*^9}, {
   3.55240208984375*^9, 3.55240221128125*^9}, 3.5524022829375*^9, {
   3.552557974640625*^9, 3.5525580189375*^9}, {3.552558114765625*^9, 
   3.552558125453125*^9}, {3.552558161203125*^9, 3.552558171234375*^9}, {
   3.552560442078125*^9, 3.55256047428125*^9}, {3.55257094178125*^9, 
   3.552570972109375*^9}, {3.5525710643125*^9, 3.55257108871875*^9}, {
   3.552571266515625*^9, 3.55257126790625*^9}, {3.55257149178125*^9, 
   3.55257153134375*^9}, {3.55273238878125*^9, 3.55273239065625*^9}, 
   3.552732460984375*^9, 3.552732941546875*^9, {3.552733515265625*^9, 
   3.552733578125*^9}, {3.552733612828125*^9, 3.55273366975*^9}, {
   3.552733710078125*^9, 3.552733777796875*^9}, {3.552733815578125*^9, 
   3.5527338546875*^9}, {3.553000195171875*^9, 3.55300023109375*^9}, {
   3.553000738609375*^9, 3.55300079978125*^9}, 3.55300137940625*^9, {
   3.553003804546875*^9, 3.553003844140625*^9}, {3.553138769859375*^9, 
   3.5531388634375*^9}, {3.55313890215625*^9, 3.553138933578125*^9}, {
   3.553138982671875*^9, 3.553139168515625*^9}, {3.553139228078125*^9, 
   3.55313923009375*^9}, 3.55313932959375*^9, 3.55313952096875*^9, {
   3.553225861984375*^9, 3.5532258625625*^9}, 3.553226361984375*^9, {
   3.55322672428125*^9, 3.5532267248125*^9}, {3.553226755734375*^9, 
   3.553226794203125*^9}, {3.553226836640625*^9, 3.553226882953125*^9}, 
   3.55331277778125*^9, 3.553313161609375*^9, {3.55333773078125*^9, 
   3.553337782578125*^9}, {3.55333786615625*^9, 3.553337892890625*^9}, {
   3.55333792478125*^9, 3.553337925484375*^9}, 3.553338079765625*^9, {
   3.55333813525*^9, 3.553338196515625*^9}, {3.553338259703125*^9, 
   3.553338298453125*^9}, {3.55333839484375*^9, 3.5533383955625*^9}, 
   3.55333877134375*^9, {3.553424518421875*^9, 3.553424613734375*^9}, {
   3.553424664796875*^9, 3.5534246655*^9}, 3.553425003109375*^9, {
   3.553524875734375*^9, 3.553524877171875*^9}, {3.553525306578125*^9, 
   3.553525384421875*^9}, {3.553525584953125*^9, 3.553525585671875*^9}, 
   3.55352678240625*^9, {3.553693555125*^9, 3.553693604640625*^9}, {
   3.55369366428125*^9, 3.553693691734375*^9}, {3.553693743109375*^9, 
   3.55369374378125*^9}, {3.5536977577204685`*^9, 3.5536978360954685`*^9}, {
   3.5536983754079685`*^9, 3.5536983790954685`*^9}, {3.553745087390625*^9, 
   3.5537451054375*^9}, {3.553863682546875*^9, 3.55386374059375*^9}, {
   3.553863771921875*^9, 3.5538638059375*^9}, {3.55386384415625*^9, 
   3.553863896625*^9}, {3.55386533184375*^9, 3.553865332546875*^9}, {
   3.55386569053125*^9, 3.553865747359375*^9}, 3.553865990609375*^9, {
   3.553866048515625*^9, 3.553866060828125*^9}, {3.55402694228125*^9, 
   3.554027009828125*^9}, {3.554027042921875*^9, 3.55402704775*^9}, {
   3.55402780175*^9, 3.554027802390625*^9}, {3.5540280085625*^9, 
   3.554028016875*^9}, {3.5540280800625*^9, 3.554028172109375*^9}, {
   3.554028251484375*^9, 3.554028311125*^9}, 3.554028356125*^9, {
   3.5540284325625*^9, 3.554028451296875*^9}, {3.554121882953125*^9, 
   3.554121915484375*^9}, {3.55412194559375*^9, 3.554121983265625*^9}, {
   3.55412204809375*^9, 3.554122048734375*^9}, {3.554127140640625*^9, 
   3.55412714871875*^9}, {3.554127183328125*^9, 3.554127370296875*^9}, {
   3.554127412953125*^9, 3.5541275043125*^9}, {3.5541275380625*^9, 
   3.554127844109375*^9}, 3.55412799146875*^9, {3.55412806403125*^9, 
   3.554128120265625*^9}, {3.554281114796875*^9, 3.554281164125*^9}, {
   3.554281196390625*^9, 3.55428123975*^9}, {3.55428127559375*^9, 
   3.55428127621875*^9}, 3.554281714171875*^9, {3.554521965828125*^9, 
   3.554522002296875*^9}, {3.554522048484375*^9, 3.55452207465625*^9}, {
   3.5545225384375*^9, 3.55452256846875*^9}, {3.5545593021875*^9, 
   3.554559398484375*^9}, {3.55455945965625*^9, 3.554559460359375*^9}, 
   3.554559554625*^9, {3.55455962871875*^9, 3.554559686828125*^9}, {
   3.554559765578125*^9, 3.554559805296875*^9}, {3.55455990896875*^9, 
   3.554559909640625*^9}, 3.554560295546875*^9, {3.55462879853125*^9, 
   3.55462886834375*^9}, {3.554628944734375*^9, 3.554628972765625*^9}, {
   3.554643341671875*^9, 3.55464335671875*^9}, {3.554643399359375*^9, 
   3.554643421671875*^9}, {3.55464349028125*^9, 3.554643545390625*^9}, 
   3.554643668578125*^9, 3.55465247365625*^9, 3.55471280571875*^9, {
   3.554713263140625*^9, 3.5547133084375*^9}, {3.5547194259375*^9, 
   3.55471943025*^9}, {3.554719555359375*^9, 3.554719577875*^9}, 
   3.554722042921875*^9, {3.5547221425625*^9, 3.5547221789375*^9}, 
   3.554727655953125*^9, 3.554779866609375*^9, {3.554780053484375*^9, 
   3.55478013790625*^9}, {3.554780169859375*^9, 3.5547802263125*^9}, 
   3.55478036665625*^9, 3.5548891050625*^9, {3.554889290296875*^9, 
   3.554889323609375*^9}, {3.554892941015625*^9, 3.55489306159375*^9}, {
   3.554893098*^9, 3.554893098734375*^9}, {3.554893318171875*^9, 
   3.554893333578125*^9}, 3.5550644674375*^9, {3.555074031640625*^9, 
   3.555074045359375*^9}, {3.55507408346875*^9, 3.555074129453125*^9}, {
   3.55507417065625*^9, 3.555074244765625*^9}, {3.555074277484375*^9, 
   3.55507431515625*^9}, {3.555074349078125*^9, 3.55507438778125*^9}, 
   3.555129216234375*^9, {3.555144003453125*^9, 3.55514411990625*^9}, {
   3.55514432665625*^9, 3.5551445131875*^9}, {3.555144544203125*^9, 
   3.555144545078125*^9}, {3.555144883875*^9, 3.55514489809375*^9}, {
   3.555145037578125*^9, 3.55514508790625*^9}, 3.5551451589375*^9, 
   3.55516705209375*^9, {3.5552390585*^9, 3.55523915978125*^9}, {
   3.55523924621875*^9, 3.55523924690625*^9}, 3.55523962259375*^9, {
   3.55543030590625*^9, 3.55543037278125*^9}, {3.555501986359375*^9, 
   3.555502025625*^9}, {3.55550211715625*^9, 3.555502147390625*^9}, {
   3.555502190625*^9, 3.555502191265625*^9}, {3.555502224609375*^9, 
   3.555502260609375*^9}, {3.555502359953125*^9, 3.555502364484375*^9}, {
   3.555502457375*^9, 3.555502463671875*^9}, {3.55550265065625*^9, 
   3.555502651375*^9}, 3.55550323421875*^9, {3.555503320609375*^9, 
   3.5555033213125*^9}, 3.55550416528125*^9, 3.555589940796875*^9, {
   3.5555933518125*^9, 3.55559347103125*^9}, {3.555593741484375*^9, 
   3.5555937583125*^9}, {3.5555938878125*^9, 3.55559405253125*^9}, {
   3.55559410134375*^9, 3.555594118234375*^9}, {3.55559414871875*^9, 
   3.555594156703125*^9}, {3.5555942105625*^9, 3.555594212859375*^9}, 
   3.55559460678125*^9, 3.555594935859375*^9, {3.55567529859375*^9, 
   3.555675423609375*^9}, {3.555675554765625*^9, 3.55567558990625*^9}, {
   3.5556756346875*^9, 3.55567564303125*^9}, {3.555675678578125*^9, 
   3.55567568584375*^9}, {3.55567571846875*^9, 3.555675752828125*^9}, {
   3.5556758231875*^9, 3.55567583740625*^9}, {3.555675876765625*^9, 
   3.55567588696875*^9}, {3.555676021140625*^9, 3.555676022890625*^9}, {
   3.55567637528125*^9, 3.555676387984375*^9}, 3.55567774653125*^9, {
   3.55576421890625*^9, 3.555764336109375*^9}, {3.55576437309375*^9, 
   3.555764373875*^9}, 3.555764743546875*^9, {3.555990708578125*^9, 
   3.555990752203125*^9}, {3.55599082703125*^9, 3.555990871109375*^9}, 
   3.555991369359375*^9, 3.555996488671875*^9, {3.555996542625*^9, 
   3.555996543359375*^9}, {3.5559969899375*^9, 3.555997056390625*^9}, 
   3.55599738184375*^9, {3.55607973509375*^9, 3.556079844046875*^9}, {
   3.556079959328125*^9, 3.5560799600625*^9}, 3.5560826674375*^9, {
   3.55611196*^9, 3.5561119985*^9}, 3.5561128474375*^9, {3.5561652769375*^9, 
   3.55616534809375*^9}, {3.55616538940625*^9, 3.556165446640625*^9}, 
   3.5561659301875*^9, {3.556443255328125*^9, 3.556443300203125*^9}, {
   3.556443349328125*^9, 3.556443382390625*^9}, {3.55644344246875*^9, 
   3.556443443203125*^9}, 3.556443916375*^9, {3.55661396096875*^9, 
   3.55661400603125*^9}, {3.556614076296875*^9, 3.5566141085*^9}, {
   3.55661415740625*^9, 3.556614158140625*^9}, 3.556614546609375*^9, 
   3.556616041765625*^9, 3.556616678015625*^9, 3.55661671353125*^9, {
   3.55662709084375*^9, 3.55662712840625*^9}, {3.556627204890625*^9, 
   3.556627231765625*^9}, {3.55662729190625*^9, 3.556627292625*^9}, 
   3.55662744896875*^9, {3.5566824785625*^9, 3.55668250184375*^9}, {
   3.556682532296875*^9, 3.556682573609375*^9}, {3.556682638265625*^9, 
   3.55668268925*^9}, {3.55668272425*^9, 3.556682751421875*^9}, 
   3.556683912046875*^9, {3.55668403678125*^9, 3.556684038703125*^9}, 
   3.556684103859375*^9, 3.556684707359375*^9, {3.5566847428125*^9, 
   3.556684744734375*^9}, 3.5567093880625*^9, {3.5567239804227843`*^9, 
   3.5567240761102843`*^9}, {3.5567242532509093`*^9, 3.5567243464227843`*^9}, 
   3.5567243772821593`*^9, {3.5567244949227843`*^9, 3.5567244956102843`*^9}, {
   3.5567247904384093`*^9, 3.5567248006259093`*^9}, 3.5567253155790343`*^9, 
   3.556799253140625*^9, 3.5568794490625*^9, 3.55687950071875*^9, 
   3.5568795491875*^9, {3.556879637109375*^9, 3.55687969175*^9}, 
   3.55688033765625*^9, 3.556898744546875*^9, {3.556963349078125*^9, 
   3.556963393796875*^9}, {3.556963452625*^9, 3.55696348615625*^9}, {
   3.556964374953125*^9, 3.556964392125*^9}, {3.55696444246875*^9, 
   3.556964450796875*^9}, {3.556964657015625*^9, 3.556964657765625*^9}, 
   3.5569649830625*^9, 3.55704317034375*^9, {3.557043704125*^9, 
   3.557043767703125*^9}, {3.557043882515625*^9, 3.557043913125*^9}, {
   3.557043967984375*^9, 3.55704396871875*^9}, 3.557044342859375*^9, 
   3.55713254796875*^9, 3.55713436571875*^9, {3.55713441559375*^9, 
   3.55713448365625*^9}, 3.55713519425*^9, {3.5571445094375*^9, 
   3.55714456265625*^9}, {3.557144639421875*^9, 3.55714468009375*^9}, {
   3.557144735671875*^9, 3.557144736421875*^9}, 3.557144998609375*^9, {
   3.557307344609375*^9, 3.55730738184375*^9}, {3.5573074510625*^9, 
   3.557307496578125*^9}, {3.55731941609375*^9, 3.55731941684375*^9}, 
   3.55732092628125*^9, {3.557415546265625*^9, 3.55741562553125*^9}, {
   3.5574156891875*^9, 3.557415733390625*^9}, {3.557415805078125*^9, 
   3.5574158058125*^9}, 3.55741622209375*^9, {3.557416489765625*^9, 
   3.5574165274375*^9}, {3.557416583296875*^9, 3.557416612390625*^9}, 
   3.55741667521875*^9, {3.55741674034375*^9, 3.557416741109375*^9}, 
   3.557417148234375*^9, {3.557417979453125*^9, 3.55741799625*^9}, {
   3.557418397359375*^9, 3.55741845271875*^9}, {3.557418526484375*^9, 
   3.557418575125*^9}, {3.557418625390625*^9, 3.557418626171875*^9}, 
   3.557419205953125*^9, 3.55746465065625*^9, 3.557466982*^9, 
   3.5574876274375*^9, 3.5575037903125*^9, {3.557546558*^9, 
   3.557546664296875*^9}, 3.557548114390625*^9, 3.557548888453125*^9, {
   3.557550349*^9, 3.557550460203125*^9}, {3.557552752046875*^9, 
   3.55755278596875*^9}, {3.557552843390625*^9, 3.557552875078125*^9}, {
   3.557552959796875*^9, 3.5575529605625*^9}, 3.557553198421875*^9, {
   3.5575703091875*^9, 3.55757033609375*^9}, {3.557655783421875*^9, 
   3.55765580909375*^9}, {3.5576642929375*^9, 3.557664337734375*^9}, {
   3.557664470828125*^9, 3.55766452865625*^9}, {3.55766530509375*^9, 
   3.557665305828125*^9}, {3.55766535071875*^9, 3.557665525265625*^9}, {
   3.55775264503125*^9, 3.557752662734375*^9}, {3.55775272*^9, 
   3.557752762828125*^9}, {3.557752804828125*^9, 3.557752832484375*^9}, {
   3.557752890609375*^9, 3.5577528914375*^9}, 3.557753382953125*^9, {
   3.55782430490625*^9, 3.557824340421875*^9}, {3.55782438925*^9, 
   3.5578243940625*^9}, {3.557824442359375*^9, 3.557824453140625*^9}, 
   3.55782580559375*^9, {3.557825921140625*^9, 3.557825921984375*^9}, {
   3.5578283149375*^9, 3.557828336171875*^9}, {3.557916676171875*^9, 
   3.55791670809375*^9}, {3.557917113203125*^9, 3.557917173203125*^9}, {
   3.557917220828125*^9, 3.55791722865625*^9}, 3.557917360234375*^9, {
   3.5579183789375*^9, 3.5579183793125*^9}, 3.557922090671875*^9, {
   3.557922200421875*^9, 3.557922227359375*^9}, {3.557922322484375*^9, 
   3.5579223505625*^9}, {3.55792238190625*^9, 3.557922382640625*^9}, 
   3.557922562875*^9, {3.557926792078125*^9, 3.55792680503125*^9}, {
   3.557926847953125*^9, 3.557926881453125*^9}, {3.557926930578125*^9, 
   3.557926976796875*^9}, 3.557927393171875*^9, {3.558248644515625*^9, 
   3.558248713765625*^9}, {3.558248827078125*^9, 3.55824885978125*^9}, {
   3.558248981890625*^9, 3.558249059734375*^9}, {3.558249116703125*^9, 
   3.55824911928125*^9}, {3.558249392796875*^9, 3.558249448125*^9}, 
   3.558251352609375*^9, 3.55825256471875*^9, {3.558252641890625*^9, 
   3.55825265225*^9}, {3.55825337675*^9, 3.55825338421875*^9}, {
   3.55825342959375*^9, 3.55825345146875*^9}, {3.558353278984375*^9, 
   3.55835337634375*^9}, {3.55835344740625*^9, 3.558353448296875*^9}, 
   3.55835454503125*^9, {3.55844863240625*^9, 3.55844867778125*^9}, {
   3.558448727734375*^9, 3.558448767828125*^9}, {3.55844879846875*^9, 
   3.5584487991875*^9}, 3.558448996421875*^9, {3.5585335995*^9, 
   3.558533633484375*^9}, {3.558533744375*^9, 3.55853378146875*^9}, {
   3.55853381390625*^9, 3.558533814640625*^9}, 3.55853410765625*^9, {
   3.55853540104708*^9, 3.55853540651583*^9}, 3.55853544354708*^9, {
   3.558535476062705*^9, 3.55853550923458*^9}, {3.55853554367208*^9, 
   3.558535544125205*^9}, {3.55853558689083*^9, 3.55853562482833*^9}, {
   3.55853568326583*^9, 3.558535709687705*^9}, 3.5586100340625*^9, 
   3.558611428796875*^9, 3.55862610375*^9, 3.558669400828125*^9, 
   3.5586718719375*^9, 3.558673032359375*^9, 3.55867400990625*^9, 
   3.558691480609375*^9, 3.55869353196875*^9, {3.55869377753125*^9, 
   3.55869378340625*^9}, 3.558699862484375*^9, 3.558703889703125*^9, {
   3.558759813265625*^9, 3.55875985134375*^9}, {3.558759909234375*^9, 
   3.558759940015625*^9}, {3.558760009296875*^9, 3.55876001003125*^9}, 
   3.5587602195*^9, 3.5587763468125*^9, 3.558788785734375*^9, 
   3.558788932046875*^9, 3.55879026659375*^9, 3.55884455715625*^9, {
   3.558844635*^9, 3.55884463728125*^9}, {3.55884477978125*^9, 
   3.558844790375*^9}, {3.558851857859375*^9, 3.558851906703125*^9}, {
   3.5588522405625*^9, 3.558852266453125*^9}, {3.558852307984375*^9, 
   3.558852326265625*^9}, {3.558852421859375*^9, 3.558852422609375*^9}, 
   3.558863770765625*^9, {3.558961534625*^9, 3.558961634828125*^9}, {
   3.55896225628125*^9, 3.558962378328125*^9}, {3.5590159229375*^9, 
   3.559015931578125*^9}, {3.5590161166875*^9, 3.5590161410625*^9}, {
   3.559016258328125*^9, 3.559016317328125*^9}, {3.559016399*^9, 
   3.55901639971875*^9}, {3.55901681778125*^9, 3.55901682646875*^9}, 
   3.55901761334375*^9, {3.55904902571875*^9, 3.55904905740625*^9}, {
   3.55904909021875*^9, 3.55904911009375*^9}, {3.559049179703125*^9, 
   3.55904918046875*^9}, 3.559049815828125*^9, 3.559107385984375*^9, {
   3.559107592296875*^9, 3.559107596328125*^9}, 3.559107811796875*^9, 
   3.55910936059375*^9, {3.55911115475*^9, 3.5591112560625*^9}, {
   3.5591112950625*^9, 3.559111295828125*^9}, 3.55911150403125*^9, 
   3.5591117171875*^9, 3.55912029571875*^9, {3.5591274934375*^9, 
   3.559127538984375*^9}, {3.5591275925625*^9, 3.559127625203125*^9}, {
   3.55912765953125*^9, 3.55912766028125*^9}, 3.5591277960625*^9, 
   3.5592971849375*^9, {3.55937569421875*^9, 3.559375694921875*^9}, 
   3.55937586103125*^9, {3.5593759234375*^9, 3.55937601440625*^9}, {
   3.559376098640625*^9, 3.559376137609375*^9}, 3.559557918203125*^9, 
   3.559562737125*^9, 3.559563778921875*^9, 3.55956430290625*^9, 
   3.55961810021875*^9, 3.559620170671875*^9, 3.559625745171875*^9, {
   3.559639385171875*^9, 3.55963939115625*^9}, {3.559639426671875*^9, 
   3.559639452625*^9}, {3.55963951328125*^9, 3.5596395469375*^9}, {
   3.559641155203125*^9, 3.559641155984375*^9}, 3.559641317390625*^9, 
   3.559643793625*^9, {3.559656793484375*^9, 3.559656803234375*^9}, 
   3.559709535609375*^9, 3.559709645296875*^9, {3.5597100431875*^9, 
   3.559710052453125*^9}, {3.55971023225*^9, 3.559710281140625*^9}, 
   3.559710319015625*^9, {3.559710921625*^9, 3.55971093153125*^9}, {
   3.5597112038125*^9, 3.55971128259375*^9}, {3.559711459015625*^9, 
   3.559711459359375*^9}, {3.559711583203125*^9, 3.55971165946875*^9}, {
   3.559711705890625*^9, 3.55971171434375*^9}, {3.55971176940625*^9, 
   3.55971177021875*^9}, 3.55971196921875*^9, {3.559735917046875*^9, 
   3.559735944234375*^9}, {3.5597967203889685`*^9, 3.5597967207483435`*^9}, {
   3.5597971542327185`*^9, 3.5597971874827185`*^9}, {3.5597976264202185`*^9, 
   3.5597976707327185`*^9}, {3.5597977297170935`*^9, 
   3.5597977710295935`*^9}, {3.5597978180139685`*^9, 3.5597978187639685`*^9}, 
   3.5597981047170935`*^9, {3.55982432596875*^9, 3.559824359515625*^9}, {
   3.559824482828125*^9, 3.5598245106875*^9}, {3.55982455415625*^9, 
   3.559824554953125*^9}, 3.55982527528125*^9, {3.55982550125*^9, 
   3.5598255590625*^9}, {3.559825591109375*^9, 3.559825597171875*^9}, {
   3.559979404921875*^9, 3.559979439375*^9}, {3.559979515703125*^9, 
   3.559979569984375*^9}, {3.559979608078125*^9, 3.559979608875*^9}, {
   3.559980849359375*^9, 3.559980863953125*^9}, {3.5601395319375*^9, 
   3.560139532296875*^9}, {3.56013961578125*^9, 3.560139665203125*^9}, {
   3.5601397094375*^9, 3.56013973553125*^9}, {3.560140215859375*^9, 
   3.56014022259375*^9}, {3.560140310828125*^9, 3.56014033784375*^9}, {
   3.56022650509375*^9, 3.560226545390625*^9}, {3.56022659603125*^9, 
   3.56022664965625*^9}, {3.56022674090625*^9, 3.56022674934375*^9}, 
   3.5602273561875*^9, {3.560313701859375*^9, 3.560313736671875*^9}, {
   3.56031378415625*^9, 3.5603137883125*^9}, {3.560313829484375*^9, 
   3.560313866109375*^9}, 3.560314395828125*^9, {3.560314430109375*^9, 
   3.560314448234375*^9}, {3.56031451990625*^9, 3.560314598890625*^9}, {
   3.560314634984375*^9, 3.5603146799375*^9}, {3.5604060075625*^9, 
   3.56040612340625*^9}, 3.560419091484375*^9, {3.56042075521875*^9, 
   3.560420756*^9}, {3.560420832578125*^9, 3.560420849734375*^9}, {
   3.56052762653125*^9, 3.560527736875*^9}, {3.56052783571875*^9, 
   3.560527836515625*^9}, 3.5605284465*^9, {3.560742770546875*^9, 
   3.560742813609375*^9}, {3.560742849421875*^9, 3.56074288003125*^9}, {
   3.5607429441875*^9, 3.5607429449375*^9}, {3.5607453180625*^9, 
   3.5607454615625*^9}, {3.56076529084375*^9, 3.5607652975625*^9}, {
   3.560765457953125*^9, 3.560765470984375*^9}, {3.56087709896875*^9, 
   3.560877148265625*^9}, 3.5669058969375*^9, 3.56697325153125*^9, 
   3.5670552300625*^9, 3.567056543734375*^9, 3.567336771265625*^9, 
   3.56733774346875*^9, {3.56734132946875*^9, 3.567341332375*^9}, {
   3.567341666375*^9, 3.567341695421875*^9}, 3.567341762625*^9, {
   3.567342190140625*^9, 3.56734237009375*^9}, 3.567342449515625*^9, 
   3.567342972609375*^9, 3.5673430383125*^9, 3.56734310084375*^9, 
   3.567343540796875*^9, 3.56734385075*^9, 3.56734513340625*^9, {
   3.567345365859375*^9, 3.567345375078125*^9}, {3.5673484978125*^9, 
   3.56734850765625*^9}, {3.567400814015625*^9, 3.567400821375*^9}, 
   3.567400984265625*^9, 3.567421715265625*^9, 3.5674241973125*^9, 
   3.56742479496875*^9, 3.567430708734375*^9, {3.567772647671875*^9, 
   3.56777265784375*^9}, 3.56785071884375*^9, {3.56785715459375*^9, 
   3.567857324578125*^9}, {3.567861356290474*^9, 3.567861412462349*^9}, {
   3.567911938609375*^9, 3.567911940484375*^9}, 3.567912035171875*^9, 
   3.567913254359375*^9, {3.567913544484375*^9, 3.5679135455*^9}, 
   3.567914380046875*^9, 3.567920588984375*^9, 3.56793725446875*^9, 
   3.567939955890625*^9, {3.567940600171875*^9, 3.567940621640625*^9}, 
   3.5679407385*^9, 3.5679597625625*^9, 3.56800253646875*^9, 
   3.568027571421875*^9, 3.568027879078125*^9, 3.568041608171875*^9, 
   3.568096669609375*^9, {3.568106609328125*^9, 3.56810674234375*^9}, 
   3.568106804015625*^9, 3.568107948015625*^9, 3.568175853984375*^9, 
   3.568176091015625*^9, 3.568178598140625*^9, 3.56818047646875*^9, 
   3.56821438565625*^9, {3.568262520234375*^9, 3.568262583515625*^9}, 
   3.568262721984375*^9, 3.56827138053125*^9, 3.568283271125*^9, 
   3.5682889765*^9, 3.568291715421875*^9, {3.56837691325*^9, 
   3.5683769775*^9}, {3.568377078390625*^9, 3.568377079375*^9}, 
   3.568377665953125*^9, {3.5684732882743616`*^9, 3.5684733031649866`*^9}, 
   3.5684735181649866`*^9, 3.5684739262274866`*^9, 3.5684741882587366`*^9, {
   3.5684742311649866`*^9, 3.5684742507118616`*^9}, {3.5685677334375*^9, 
   3.5685678098125*^9}, {3.568611940359375*^9, 3.56861194140625*^9}, 
   3.568612020546875*^9, 3.568613696828125*^9, {3.56861374875*^9, 
   3.568613784578125*^9}, {3.56861382665625*^9, 3.56861384828125*^9}, 
   3.56864968703125*^9, {3.568895857828125*^9, 3.56889591196875*^9}, {
   3.56889595915625*^9, 3.5688959601875*^9}, 3.568896421078125*^9, {
   3.5688975010625*^9, 3.568897547984375*^9}, {3.56897351065625*^9, 
   3.5689735303125*^9}, 3.568973568328125*^9, {3.568973602015625*^9, 
   3.568973627109375*^9}, 3.5689736585625*^9, {3.568973697046875*^9, 
   3.568973787515625*^9}, {3.568974016859375*^9, 3.56897409153125*^9}, {
   3.568974144828125*^9, 3.568974219375*^9}, {3.568978435515625*^9, 
   3.56897843646875*^9}, 3.5689789861875*^9, 3.568984466015625*^9, {
   3.56898488796875*^9, 3.568984940421875*^9}, {3.5690644163125*^9, 
   3.56906447359375*^9}, 3.569064536234375*^9, {3.569064570515625*^9, 
   3.56906457328125*^9}, {3.56907483695564*^9, 3.56907484376814*^9}, 
   3.569151235625*^9, {3.56915166078125*^9, 3.569151700953125*^9}, {
   3.569151744609375*^9, 3.56915176534375*^9}, 3.569151873671875*^9, 
   3.569169178328125*^9, 3.569218692125*^9, 3.569219062*^9, {
   3.569235349921875*^9, 3.56923537521875*^9}, {3.569235414328125*^9, 
   3.56923543803125*^9}, 3.569251074828125*^9, 3.5692528355625*^9, {
   3.56925524421875*^9, 3.56925524871875*^9}, {3.56932807040625*^9, 
   3.569328092453125*^9}, {3.569328129296875*^9, 3.569328140296875*^9}, {
   3.56932925159375*^9, 3.5693292651875*^9}, 3.569338399859375*^9, 
   3.56941218790625*^9, 3.56947410628125*^9, 3.5694741783125*^9, 
   3.569476309359375*^9, {3.569477302109375*^9, 3.569477396828125*^9}, 
   3.569477789296875*^9, {3.56947856353125*^9, 3.569478575171875*^9}, 
   3.56950428940625*^9, 3.569561471890625*^9, 3.56956155084375*^9, 
   3.569563034671875*^9, 3.569564267875*^9, {3.569564378265625*^9, 
   3.56956448921875*^9}, {3.569565313265625*^9, 3.56956531421875*^9}, 
   3.569565402125*^9, {3.569575179265625*^9, 3.56957519528125*^9}, 
   3.5695877273125*^9, 3.569596982625*^9, {3.569597319515625*^9, 
   3.5695973264375*^9}, 3.5696646434375*^9, {3.56966474003125*^9, 
   3.569664803328125*^9}, 3.56966986978125*^9, {3.56967042228125*^9, 
   3.569670425140625*^9}, {3.569670472046875*^9, 3.569670508125*^9}, 
   3.5696706118125*^9, 3.569684229341812*^9, {3.5696857253539133`*^9, 
   3.569685797009246*^9}, {3.5696880403221664`*^9, 3.5696880672751193`*^9}, {
   3.5696881150248137`*^9, 3.5696881247122517`*^9}, 3.5696881559933014`*^9, {
   3.569688191368075*^9, 3.569688212289816*^9}, 3.569688776536205*^9, 
   3.5696888599731708`*^9, {3.569750042859375*^9, 3.569750105765625*^9}, {
   3.569750268890625*^9, 3.569750274640625*^9}, {3.56975109325*^9, 
   3.56975112021875*^9}, {3.569855415875*^9, 3.569855430625*^9}, {
   3.56985618875*^9, 3.569856230765625*^9}, {3.569910501265625*^9, 
   3.56991054284375*^9}, 3.569910587265625*^9, 3.569911087375*^9, 
   3.569930177078125*^9, 3.569944958828125*^9, 3.56994525275*^9, {
   3.569945412578125*^9, 3.56994542259375*^9}, {3.569945540734375*^9, 
   3.5699455520625*^9}, {3.570022816875*^9, 3.57002289675*^9}, {
   3.57002297265625*^9, 3.570022973671875*^9}, 3.5700230261875*^9, {
   3.570183948765625*^9, 3.5701840100625*^9}, {3.57018408678125*^9, 
   3.57018412271875*^9}, 3.57034222796875*^9, 3.5703471273125*^9, 
   3.57035893440625*^9, {3.57035902765625*^9, 3.570359029328125*^9}, {
   3.570359060515625*^9, 3.570359141453125*^9}, {3.57036036928125*^9, 
   3.5703604185625*^9}, {3.570367295390625*^9, 3.570367324625*^9}, {
   3.5703686740625*^9, 3.570368756875*^9}, {3.57036881178125*^9, 
   3.57036881946875*^9}, {3.5703697065625*^9, 3.570369755203125*^9}, {
   3.5704404068125*^9, 3.57044043853125*^9}, {3.570440497171875*^9, 
   3.570440507984375*^9}, {3.5704444503125*^9, 3.570444619203125*^9}, 
   3.570444727109375*^9, {3.57044918271875*^9, 3.57044925296875*^9}, {
   3.57044930921875*^9, 3.570449310265625*^9}, 3.570450401015625*^9, {
   3.570451542125*^9, 3.57045160896875*^9}, {3.57045166703125*^9, 
   3.57045167915625*^9}, {3.5704517383125*^9, 3.57045174071875*^9}, {
   3.570452956796875*^9, 3.57045296221875*^9}, {3.570453305015625*^9, 
   3.570453307578125*^9}, {3.57045333871875*^9, 3.57045334084375*^9}, {
   3.57045923634375*^9, 3.5704592679375*^9}, 3.5705545399375*^9, 
   3.570601403890625*^9, 3.57063477409375*^9, 3.570771078046875*^9, 
   3.57077118828125*^9, {3.57077132125*^9, 3.570771379421875*^9}, {
   3.57077143959375*^9, 3.570771470640625*^9}, 3.57077163640625*^9, 
   3.57077560484375*^9, 3.570775709484375*^9, {3.5708799024375*^9, 
   3.5708799295*^9}, 3.57087996146875*^9, 3.57088067821875*^9, {
   3.57088075121875*^9, 3.5708807521875*^9}, {3.5708810203125*^9, 
   3.570881092453125*^9}, {3.570882099296875*^9, 3.57088219503125*^9}, 
   3.57088815003125*^9, {3.57088832790625*^9, 3.570888362140625*^9}, 
   3.5708884016875*^9, {3.570888788265625*^9, 3.570888841875*^9}, {
   3.5708896134375*^9, 3.570889633796875*^9}, {3.570890361828125*^9, 
   3.57089037321875*^9}, {3.570890889140625*^9, 3.570890901390625*^9}, {
   3.570894187346863*^9, 3.570894470034363*^9}, 3.57097510790625*^9, {
   3.571150663140625*^9, 3.57115082390625*^9}, {3.57115111884375*^9, 
   3.571151164328125*^9}, {3.57115121384375*^9, 3.5711512148125*^9}, 
   3.57115179534375*^9, {3.571151895671875*^9, 3.57115191290625*^9}, {
   3.57115201025*^9, 3.57115201309375*^9}, {3.571152541125*^9, 
   3.5711525485*^9}, 3.57115263571875*^9, {3.571152900109375*^9, 
   3.57115292690625*^9}, 3.571396895484375*^9, {3.571398314828125*^9, 
   3.57139842621875*^9}, 3.571400366234375*^9, {3.571407797359375*^9, 
   3.5714078064375*^9}, {3.571407868109375*^9, 3.5714078975625*^9}, 
   3.571408425109375*^9, {3.57140883628125*^9, 3.571408867265625*^9}, 
   3.571409966859375*^9, 3.571410008484375*^9, {3.57141006046875*^9, 
   3.5714101098125*^9}, 3.571546712265625*^9, 3.571549988203125*^9, {
   3.571552215734375*^9, 3.571552232890625*^9}, {3.571552286234375*^9, 
   3.57155228846875*^9}, 3.57155864215625*^9, 3.5716369969375*^9, 
   3.57165341509375*^9, {3.57165395096875*^9, 3.571653961984375*^9}, 
   3.571673255453125*^9, {3.5717506765625*^9, 3.57175067759375*^9}, 
   3.57175110403125*^9, {3.571751135703125*^9, 3.571751147890625*^9}, {
   3.57175119075*^9, 3.57175120515625*^9}, 3.57175193665625*^9, {
   3.57175456646875*^9, 3.571754578140625*^9}, 3.57191688103125*^9, 
   3.57191790440625*^9, 3.571917959265625*^9, {3.57191877959375*^9, 
   3.571918880203125*^9}, {3.571918987578125*^9, 3.57191898859375*^9}, 
   3.5719204231875*^9, {3.571920476265625*^9, 3.571920511375*^9}, {
   3.572016147328125*^9, 3.572016214265625*^9}, {3.57202025096875*^9, 
   3.572020252203125*^9}, 3.572021533125*^9, {3.572090656984375*^9, 
   3.572090699203125*^9}, {3.5720917213125*^9, 3.572091727515625*^9}, {
   3.57209191784375*^9, 3.57209193975*^9}, {3.5720920511875*^9, 
   3.57209206140625*^9}, {3.5720941516875*^9, 3.572094170125*^9}, 
   3.572094556078125*^9, 3.572160508890625*^9, {3.572175861546875*^9, 
   3.572175909265625*^9}, 3.572176339390625*^9, 3.572176887078125*^9, 
   3.57217783078125*^9, 3.5721864779375*^9, {3.57224242959375*^9, 
   3.57224246303125*^9}, 3.572270064828125*^9, 3.5722707840625*^9, {
   3.572532797984375*^9, 3.5725328708125*^9}, {3.572532911765625*^9, 
   3.57253295090625*^9}, {3.572533109484375*^9, 3.572533112625*^9}, {
   3.572533775359375*^9, 3.572533800984375*^9}, {3.572533863890625*^9, 
   3.57253387328125*^9}, 3.572603033046875*^9, 3.572603765515625*^9, {
   3.572603819015625*^9, 3.57260384621875*^9}, {3.572603884078125*^9, 
   3.572603886828125*^9}, {3.572603922796875*^9, 3.572603924703125*^9}, {
   3.57260397140625*^9, 3.57260398678125*^9}, 3.572606732359375*^9, {
   3.5726068075*^9, 3.572606810359375*^9}, 3.572607021171875*^9, {
   3.572622020359375*^9, 3.57262203028125*^9}, 3.57262259415625*^9, {
   3.572626103390625*^9, 3.572626135359375*^9}, 3.5726283924375*^9, 
   3.572628794984375*^9, {3.572670924328125*^9, 3.572670943484375*^9}, 
   3.57267202509375*^9, 3.572676831390625*^9, {3.572688293328125*^9, 
   3.572688303375*^9}, 3.572689142125*^9, 3.57269240709375*^9, 
   3.572693441328125*^9, 3.57269372228125*^9, 3.57269727065625*^9, {
   3.57269730615625*^9, 3.5726973138125*^9}, 3.572699197609375*^9, 
   3.57271087578125*^9, 3.5727587822588778`*^9, 3.5727632241807528`*^9, 
   3.572777868453125*^9, 3.572786746625*^9, 3.572786824703125*^9, 
   3.572791071765625*^9, 3.572796172140625*^9, 3.572840797734375*^9, {
   3.57284132990625*^9, 3.5728413370625*^9}, {3.572841418359375*^9, 
   3.57284142296875*^9}, 3.572842058171875*^9, 3.57286367284375*^9, {
   3.572863731234375*^9, 3.5728637349375*^9}, 3.5728736921875*^9, 
   3.57287494203125*^9, {3.57287986446875*^9, 3.572879892796875*^9}, {
   3.573039811734375*^9, 3.573039851296875*^9}, 3.573041312359375*^9, 
   3.5730414059375*^9, 3.5730415555*^9, {3.573041612828125*^9, 
   3.57304163565625*^9}, {3.57304668509375*^9, 3.5730467393125*^9}, {
   3.573046899640625*^9, 3.573046929953125*^9}, 3.573048084515625*^9, {
   3.573058848734375*^9, 3.573058852125*^9}, 3.573059396078125*^9, {
   3.5730594560625*^9, 3.573059456609375*^9}, {3.5730594880625*^9, 
   3.5730595394375*^9}, {3.5731043999375*^9, 3.573104468265625*^9}, {
   3.5731045369375*^9, 3.57310453790625*^9}, 3.5731051231875*^9, {
   3.573191391375*^9, 3.573191441296875*^9}, {3.573191486953125*^9, 
   3.57319155609375*^9}, 3.573191601546875*^9, {3.573191678515625*^9, 
   3.573191679546875*^9}, 3.57319185846875*^9, {3.573193699140625*^9, 
   3.573193831375*^9}, {3.573203025359375*^9, 3.5732030263125*^9}, 
   3.573203422796875*^9, {3.573229429953125*^9, 3.573229430796875*^9}, {
   3.57322960378125*^9, 3.573229666890625*^9}, {3.573229723265625*^9, 
   3.57322972421875*^9}, 3.5732302913125*^9, {3.573230370578125*^9, 
   3.5732303715625*^9}, 3.573230840203125*^9, {3.573230877921875*^9, 
   3.573230878609375*^9}, {3.573230916640625*^9, 3.57323097359375*^9}, 
   3.573233180421875*^9, 3.573384729953125*^9, {3.573384806125*^9, 
   3.57338482459375*^9}, 3.573384886328125*^9, {3.5733851119375*^9, 
   3.57338517375*^9}, {3.5733886739375*^9, 3.57338867490625*^9}, 
   3.5733890796875*^9, {3.573390561390625*^9, 3.573390564078125*^9}, 
   3.5733906758125*^9, {3.5733934490625*^9, 3.57339345778125*^9}, 
   3.57345110865625*^9, {3.573468279765625*^9, 3.573468283875*^9}, {
   3.573468319265625*^9, 3.57346835934375*^9}, {3.573468438609375*^9, 
   3.57346845871875*^9}, {3.57346849784375*^9, 3.5734685298125*^9}, {
   3.57346856146875*^9, 3.573468585328125*^9}, {3.573468656625*^9, 
   3.573468699046875*^9}, {3.57346875115625*^9, 3.573468771828125*^9}, {
   3.573468816875*^9, 3.573468838953125*^9}, {3.573476074390625*^9, 
   3.573476133421875*^9}, 3.573476207671875*^9, {3.573477003421875*^9, 
   3.57347704290625*^9}, 3.57349186709375*^9, {3.573555682375*^9, 
   3.573555683265625*^9}, {3.5735557353125*^9, 3.573555763671875*^9}, {
   3.573555799984375*^9, 3.573555840328125*^9}, {3.57362408534375*^9, 
   3.573624132640625*^9}, {3.573624190109375*^9, 3.573624191046875*^9}, 
   3.573624866671875*^9, 3.57366085459375*^9, 3.573660928703125*^9, {
   3.573661005703125*^9, 3.57366101715625*^9}, 3.57382351553125*^9, 
   3.573829481125*^9, 3.5738986655*^9, 3.5738996123125*^9, 
   3.573995348734375*^9, {3.574000361828125*^9, 3.574000372328125*^9}, {
   3.574004035546875*^9, 3.574004036078125*^9}, {3.57400407271875*^9, 
   3.57400411375*^9}, {3.574004179125*^9, 3.5740041805*^9}, 
   3.57400461928125*^9, 3.574005391125*^9, {3.57404942040625*^9, 
   3.57404948296875*^9}, 3.57405106134375*^9, {3.57407721746875*^9, 
   3.5740772366875*^9}, {3.57407945384375*^9, 3.574079454875*^9}, 
   3.57408046515625*^9, {3.57408050684375*^9, 3.574080540203125*^9}, 
   3.574080577484375*^9, 3.57409153996875*^9, 3.574092103046875*^9, {
   3.574158302015625*^9, 3.574158378265625*^9}, {3.574158455390625*^9, 
   3.57415845634375*^9}, 3.57415851346875*^9, 3.5741589089375*^9, 
   3.5741599135625*^9, 3.574160238328125*^9, 3.5741635941875*^9, 
   3.574164284640625*^9, {3.5741644579375*^9, 3.574164702640625*^9}, {
   3.5741649508125*^9, 3.574164954296875*^9}, {3.574165001375*^9, 
   3.574165004234375*^9}, 3.57417286678125*^9, 3.574173298484375*^9, 
   3.574174235828125*^9, 3.574174314125*^9, 3.5741751394375*^9, 
   3.57417597496875*^9, {3.574177207109375*^9, 3.57417723*^9}, {
   3.574223462421875*^9, 3.574223471890625*^9}, 3.574223564296875*^9, {
   3.574225561953125*^9, 3.574225580703125*^9}, 3.574239691125*^9, 
   3.5742464619375*^9, 3.574253176828125*^9, 3.574253538515625*^9, 
   3.574258493453125*^9, {3.57426022303125*^9, 3.57426025628125*^9}, {
   3.574260806375*^9, 3.5742608235625*^9}, 3.57426491890625*^9, 
   3.574265597515625*^9, {3.57441326909375*^9, 3.574413331109375*^9}, {
   3.574413376609375*^9, 3.574413377625*^9}, 3.574413659703125*^9, 
   3.574415192859375*^9, 3.574424727671875*^9, 3.574439120828125*^9, 
   3.574439197671875*^9, {3.57443976796875*^9, 3.574439845140625*^9}, {
   3.57448509834375*^9, 3.574485166421875*^9}, 3.574508809671875*^9, {
   3.5745088405*^9, 3.57450884165625*^9}, 3.574509085765625*^9, {
   3.57451726721875*^9, 3.574517275640625*^9}, 3.574607883953125*^9, 
   3.57470063853125*^9, 3.574745425890625*^9, 3.574759357421875*^9, {
   3.57475977425*^9, 3.57475982065625*^9}, {3.574766645140625*^9, 
   3.574766666484375*^9}, {3.574771384*^9, 3.574771400921875*^9}, {
   3.57477716921875*^9, 3.574777249046875*^9}, 3.574780267703125*^9, 
   3.57478234184375*^9, {3.574782470875*^9, 3.57478247415625*^9}, 
   3.574783038671875*^9, 3.574783208765625*^9, 3.574784633375*^9, 
   3.574829751671875*^9, 3.574831158171875*^9, 3.574848092515625*^9, {
   3.574848447234375*^9, 3.574848479609375*^9}, {3.574848631265625*^9, 
   3.57484865403125*^9}, {3.57484882665625*^9, 3.574848847078125*^9}, {
   3.57484909978125*^9, 3.5748491279375*^9}, {3.57484935265625*^9, 
   3.5748493773125*^9}, {3.574939725703125*^9, 3.574939836015625*^9}, 
   3.574940543046875*^9, {3.574943211546875*^9, 3.574943222390625*^9}, {
   3.575003805109375*^9, 3.57500386990625*^9}, 3.5750055384375*^9, 
   3.57502892465625*^9, 3.575036402609375*^9, {3.575040225734375*^9, 
   3.575040245140625*^9}, 3.575119962625*^9, 3.575176293393303*^9, 
   3.575194495359375*^9, 3.575217134921875*^9, 3.575217964375*^9, {
   3.575254178953125*^9, 3.5752542193125*^9}, 3.575254303453125*^9, {
   3.5752578808125*^9, 3.575257898703125*^9}, 3.575285006265625*^9, 
   3.5752865724375*^9, 3.575288761375*^9, {3.575343442109375*^9, 
   3.575343453109375*^9}, {3.575349684234375*^9, 3.57534968521875*^9}, 
   3.57534974621875*^9, {3.575349793875*^9, 3.575349867109375*^9}, {
   3.57536492590625*^9, 3.57536498459375*^9}, {3.5753650196875*^9, 
   3.575365021*^9}, 3.57536572609375*^9, {3.575365944015625*^9, 
   3.575365999703125*^9}, {3.5753721485625*^9, 3.57537219790625*^9}, 
   3.5753723265*^9, {3.575372358484375*^9, 3.5753724463125*^9}, {
   3.575372482984375*^9, 3.575372508703125*^9}, {3.575451512984375*^9, 
   3.57545156403125*^9}, {3.575451606078125*^9, 3.5754516219375*^9}, {
   3.575452452296875*^9, 3.575452516203125*^9}, {3.575466716765625*^9, 
   3.575466718984375*^9}, {3.575466751046875*^9, 3.575466754546875*^9}, {
   3.57546695153125*^9, 3.575466982*^9}, {3.575470661328125*^9, 
   3.575470756703125*^9}, {3.57547080790625*^9, 3.57547080875*^9}, 
   3.57547085371875*^9, 3.575471306609375*^9, {3.57547239403125*^9, 
   3.57547244296875*^9}, 3.575516137015625*^9, 3.5755192569375*^9, 
   3.57552063159375*^9, {3.575523131484375*^9, 3.575523133796875*^9}, {
   3.575523192078125*^9, 3.575523195484375*^9}, {3.575602198*^9, 
   3.575602260015625*^9}, 3.575602585875*^9, {3.575602643703125*^9, 
   3.575602644578125*^9}, {3.575603167078125*^9, 3.575603218265625*^9}, {
   3.57569509053125*^9, 3.575695092890625*^9}, {3.575695127515625*^9, 
   3.575695132140625*^9}, 3.575730452859375*^9, 3.575733218015625*^9, {
   3.575769525890625*^9, 3.575769575921875*^9}, {3.575772649171875*^9, 
   3.575772660796875*^9}, {3.57577507471875*^9, 3.57577510465625*^9}, {
   3.57579647828125*^9, 3.575796508296875*^9}, {3.57580277890625*^9, 
   3.575802813671875*^9}, 3.57586125896875*^9, 3.575869894265625*^9, 
   3.575973748984375*^9, 3.5759741415625*^9, 3.5761482945625*^9, {
   3.576149377890625*^9, 3.576149397234375*^9}, {3.5762985825*^9, 
   3.57629863709375*^9}, 3.576316606875*^9, {3.57632721640625*^9, 
   3.57632728175*^9}, 3.5763280455*^9, {3.57638191428125*^9, 
   3.576381919921875*^9}, {3.57638199759375*^9, 3.576382043421875*^9}, {
   3.576418459140625*^9, 3.576418541296875*^9}, {3.576418577765625*^9, 
   3.5764185925*^9}, {3.57641885003125*^9, 3.576418851265625*^9}, 
   3.5764195636875*^9, {3.576472452734375*^9, 3.57647254415625*^9}, {
   3.576483104921875*^9, 3.576483105890625*^9}, 3.57648487184375*^9, 
   3.5765521476875*^9, 3.576552606234375*^9, {3.57655347596875*^9, 
   3.576553500578125*^9}, 3.5765545526875*^9, 3.576554907875*^9, 
   3.576556592765625*^9, 3.576556733015625*^9, 3.57657362053125*^9, 
   3.5765840879375*^9, 3.576645002796875*^9, 3.576645496046875*^9, 
   3.576660755484375*^9, 3.57666081553125*^9, {3.5766677991875*^9, 
   3.57666780421875*^9}, 3.5766685005*^9, 3.5766685711875*^9, {
   3.576668601765625*^9, 3.576668603421875*^9}, 3.576678475796875*^9, 
   3.57667868340625*^9, 3.576682689328125*^9, 3.576732643484375*^9, 
   3.5767481560625*^9, 3.5767483993125*^9, 3.576748814125*^9, 
   3.57674927090625*^9, 3.576749701046875*^9, 3.57675668075*^9, 
   3.576757024484375*^9, 3.576757218609375*^9, 3.576757700875*^9, 
   3.576758090546875*^9, {3.576758259140625*^9, 3.576758312375*^9}, 
   3.57681688859375*^9, 3.576817371875*^9, 3.576818185828125*^9, 
   3.576818243921875*^9, 3.576832310765625*^9, {3.576838453609375*^9, 
   3.576838476203125*^9}, {3.57683873178125*^9, 3.576838757515625*^9}, 
   3.57684373909375*^9, 3.576844078796875*^9, {3.5768555315625*^9, 
   3.576855533875*^9}, 3.576855598546875*^9, {3.576856123546875*^9, 
   3.576856129375*^9}, 3.576899792546875*^9, {3.576901073015625*^9, 
   3.5769010971875*^9}, {3.57690241575*^9, 3.576902434546875*^9}, 
   3.576920411390625*^9, {3.576921984875*^9, 3.57692207234375*^9}, {
   3.5769268290625*^9, 3.57692689878125*^9}, {3.576926954859375*^9, 
   3.5769269559375*^9}, 3.57692726390625*^9, 3.5769944033767443`*^9, 
   3.577076815453125*^9, 3.5770774215*^9, 3.577157129109375*^9, {
   3.5771907865*^9, 3.5771908245625*^9}, 3.577191152796875*^9, {
   3.5772703278125*^9, 3.577270331140625*^9}, 3.5772708138125*^9, {
   3.5772708629375*^9, 3.577270866625*^9}, 3.577270914484375*^9, {
   3.57736708084375*^9, 3.57736710525*^9}, {3.57736716196875*^9, 
   3.577367166171875*^9}, 3.5773673785*^9, {3.577435791109375*^9, 
   3.57743580296875*^9}, 3.57743615665625*^9, {3.5774453494375*^9, 
   3.57744535815625*^9}, {3.5774455533125*^9, 3.57744567128125*^9}, {
   3.577445789359375*^9, 3.577445816375*^9}, 3.577445856078125*^9, {
   3.577540757046875*^9, 3.5775408744375*^9}, {3.577708085125*^9, 
   3.57770808615625*^9}, {3.5777086480625*^9, 3.577708678140625*^9}, {
   3.577708718640625*^9, 3.57770876590625*^9}, {3.577712291046875*^9, 
   3.577712322734375*^9}, 3.577712615453125*^9, 3.577794659375*^9, {
   3.5777952936875*^9, 3.577795301765625*^9}, 3.577855075625*^9, 
   3.577869276703125*^9, {3.577869730046875*^9, 3.577869778046875*^9}, 
   3.577895123640625*^9, {3.577895182078125*^9, 3.577895263390625*^9}, 
   3.577942947734375*^9, 3.5779647075*^9, {3.57796479615625*^9, 
   3.577964853625*^9}, 3.57797114159375*^9, {3.57797117359375*^9, 
   3.5779711770625*^9}, {3.577971237625*^9, 3.577971241171875*^9}, 
   3.57802807934375*^9, {3.578121840953125*^9, 3.578121841890625*^9}, 
   3.578122201578125*^9, {3.57812236459375*^9, 3.57812237153125*^9}, {
   3.57812242775*^9, 3.578122443328125*^9}, 3.5781332126875*^9, 
   3.5781397454375*^9, 3.578234384647682*^9, 3.57830245015625*^9, {
   3.578390819921875*^9, 3.578390834828125*^9}, {3.578391932296875*^9, 
   3.578391946484375*^9}, 3.578401633078125*^9, {3.578407283734375*^9, 
   3.578407287046875*^9}, {3.57840735153125*^9, 3.57840735453125*^9}, 
   3.57840755878125*^9, {3.5784076310625*^9, 3.578407650859375*^9}, 
   3.578478358640625*^9, 3.57849575090625*^9, 3.578495825984375*^9, {
   3.57854546184375*^9, 3.578545470796875*^9}, 3.5785461104375*^9, 
   3.5785463075625*^9, 3.578570007609375*^9, 3.578654040515625*^9, 
   3.578654406703125*^9, 3.5786545489375*^9, {3.5787428811875*^9, 
   3.578742883078125*^9}, {3.578742936125*^9, 3.578742937765625*^9}, 
   3.578744144203125*^9, 3.57874634915625*^9, 3.578806615015625*^9, 
   3.578830910203125*^9, {3.578831116328125*^9, 3.578831142671875*^9}, 
   3.5788329828431125`*^9, {3.5788378890618625`*^9, 3.5788379095618625`*^9}, {
   3.5788379497337375`*^9, 3.5788379772493625`*^9}, 3.5788394059681125`*^9, 
   3.578892898765625*^9, 3.5789206180625*^9, 3.5789206689375*^9, 
   3.57900730340625*^9, 3.5790798681875*^9, {3.57908548459375*^9, 
   3.5790855109375*^9}, {3.5790856125*^9, 3.579085619296875*^9}, {
   3.579085655796875*^9, 3.579085690640625*^9}, 3.579085846203125*^9, 
   3.579091386625*^9, 3.579097530375*^9, {3.579100175703125*^9, 
   3.579100209203125*^9}, {3.57910025259375*^9, 3.579100265734375*^9}, {
   3.57916991653125*^9, 3.579169973609375*^9}, {3.5791700091875*^9, 
   3.579170062578125*^9}, 3.57917680778125*^9, 3.57917683896875*^9, 
   3.579178795109375*^9, 3.57926364271875*^9, 3.5792636870625*^9, 
   3.579264767203125*^9, 3.579339498984375*^9, 3.5793395296875*^9, 
   3.579339590375*^9, 3.579350492421875*^9, 3.57935061378125*^9, 
   3.579350847625*^9, 3.57935093321875*^9, 3.579352678828125*^9, 
   3.579352810859375*^9, 3.57942872559375*^9, 3.57942968240625*^9, {
   3.57943386175*^9, 3.579433924171875*^9}, {3.579433997125*^9, 
   3.579433998125*^9}, 3.57943533190625*^9, 3.579436927078125*^9, {
   3.579513311421875*^9, 3.579513375046875*^9}, {3.57951342440625*^9, 
   3.57951342534375*^9}, 3.579513825171875*^9, 3.579518120703125*^9, 
   3.579518644359375*^9, {3.57951873125*^9, 3.57951874453125*^9}, 
   3.579519875453125*^9, 3.57961864421875*^9, 3.5796838650625*^9, 
   3.5796959314375*^9, 3.57969623046875*^9, {3.579702077515625*^9, 
   3.57970208390625*^9}, {3.57970223065625*^9, 3.57970223571875*^9}, 
   3.5797031595625*^9, 3.579705530359375*^9, {3.579707153671875*^9, 
   3.579707166828125*^9}, 3.57977100046875*^9, 3.579771078578125*^9, {
   3.579787309359375*^9, 3.5797873286875*^9}, 3.57985849490625*^9, 
   3.579859163015625*^9, 3.57985983771875*^9, {3.579869133453125*^9, 
   3.579869201515625*^9}, {3.57986929446875*^9, 3.579869295921875*^9}, 
   3.5798697570625*^9, 3.579954705578125*^9, 3.57996395578125*^9, {
   3.580012137640625*^9, 3.580012141203125*^9}, {3.5800121764375*^9, 
   3.58001217925*^9}, {3.5800460116875*^9, 3.5800460206875*^9}, {
   3.580047424421875*^9, 3.5800474376875*^9}, {3.58013131525*^9, 
   3.58013133390625*^9}, 3.58013165159375*^9, 3.580189594015625*^9, 
   3.5801906239375*^9, 3.580208957359375*^9, {3.580209830875*^9, 
   3.580209893921875*^9}, 3.580221316109375*^9, 3.5802750261875*^9, 
   3.580275697828125*^9, 3.580276329984375*^9, 3.580293726640625*^9, 
   3.580300374296875*^9, 3.58030041009375*^9, 3.58030050490625*^9, 
   3.58030980959375*^9, 3.5803759625625*^9, 3.580378003484375*^9, 
   3.580378454328125*^9, {3.58037849503125*^9, 3.580378497859375*^9}, {
   3.580378528453125*^9, 3.580378542828125*^9}, 3.580388176265625*^9, 
   3.58038892490625*^9, {3.580388969828125*^9, 3.580388996234375*^9}, 
   3.58046435453125*^9, 3.58046495975*^9, 3.580464993734375*^9, 
   3.580476621265625*^9, 3.580481656375*^9, 3.58048186171875*^9, 
   3.580555947625*^9, {3.580563123734375*^9, 3.580563154640625*^9}, 
   3.5806399478125*^9, {3.580830685734375*^9, 3.580830724140625*^9}, {
   3.58083079565625*^9, 3.580830796578125*^9}, {3.580832179328125*^9, 
   3.580832216125*^9}, 3.580832251234375*^9, {3.580905574703125*^9, 
   3.580905620015625*^9}, {3.58090566459375*^9, 3.580905665546875*^9}, 
   3.580906106546875*^9, {3.580906140046875*^9, 3.580906154109375*^9}, 
   3.580993034046875*^9, 3.58099873525*^9, 3.581076338671875*^9, 
   3.581133717390625*^9, 3.58115122221875*^9, 3.581151325203125*^9, {
   3.581154354359375*^9, 3.581154426921875*^9}, {3.581167235515625*^9, 
   3.58116724728125*^9}, 3.58117306640625*^9, {3.581173589125*^9, 
   3.581173607765625*^9}, {3.581242235375*^9, 3.581242309046875*^9}, 
   3.581242564765625*^9, {3.58124268828125*^9, 3.581242704375*^9}, {
   3.581304135890625*^9, 3.581304167*^9}, 3.5813068153125*^9, {
   3.5813094114375*^9, 3.581309413109375*^9}, {3.5813094673125*^9, 
   3.581309503796875*^9}, 3.58132591096875*^9, 3.58133160428125*^9, {
   3.581341079875*^9, 3.5813410825625*^9}, 3.58134113503125*^9, {
   3.581341261890625*^9, 3.581341262671875*^9}, {3.581341317109375*^9, 
   3.581341369921875*^9}, 3.58148178528125*^9, {3.5814950943125*^9, 
   3.581495107328125*^9}, {3.5815924744375*^9, 3.5815925888125*^9}, {
   3.581592640984375*^9, 3.5815926419375*^9}, 3.581593813953125*^9, 
   3.5815939258125*^9, 3.58159447321875*^9, 3.5816812145*^9, 
   3.581681660625*^9, 3.58182658821875*^9, 3.581827947578125*^9, 
   3.581829319765625*^9, {3.581849215140625*^9, 3.581849229109375*^9}, {
   3.58184932878125*^9, 3.581849330078125*^9}, {3.58185637125*^9, 
   3.581856404640625*^9}, 3.581859108578125*^9, {3.5818591745625*^9, 
   3.58185925034375*^9}, 3.581867401390625*^9, 3.581869126203125*^9, 
   3.581869338640625*^9, {3.5819196356832714`*^9, 3.581919674948897*^9}, {
   3.5819200184957714`*^9, 3.5819200234020214`*^9}, {3.58201593565625*^9, 
   3.58201593659375*^9}, 3.5820165923125*^9, {3.582016626375*^9, 
   3.582016695984375*^9}, 3.582102740140625*^9, 3.58210338465625*^9, {
   3.582103429015625*^9, 3.58210345709375*^9}, {3.58210661896875*^9, 
   3.5821066638125*^9}, {3.582106735953125*^9, 3.582106736890625*^9}, 
   3.582107191328125*^9, 3.582191608765625*^9, 3.5822007739375*^9, 
   3.582201821859375*^9, {3.582286598703125*^9, 3.5822866173125*^9}, {
   3.582286648140625*^9, 3.582286651859375*^9}, {3.582286697890625*^9, 
   3.582286701484375*^9}, {3.582286832484375*^9, 3.582286856765625*^9}, {
   3.5822869266875*^9, 3.5822869275625*^9}, 3.582287913875*^9, {
   3.58228794440625*^9, 3.582287959640625*^9}, {3.5822880064375*^9, 
   3.582288020609375*^9}, {3.5823653488125*^9, 3.582365405765625*^9}, 
   3.582365478203125*^9, 3.58236720171875*^9, 3.582463665296875*^9, 
   3.5824642915625*^9, 3.5825192091981916`*^9, 3.5825195792138166`*^9, {
   3.5825199906669416`*^9, 3.5825200002919416`*^9}, {3.58254593784375*^9, 
   3.58254595509375*^9}, {3.58254600328125*^9, 3.582546110578125*^9}, {
   3.582546148546875*^9, 3.582546166046875*^9}, {3.5825462020625*^9, 
   3.58254621946875*^9}, {3.582546275625*^9, 3.5825463469375*^9}, {
   3.582546433*^9, 3.58254645028125*^9}, {3.5826235204375*^9, 
   3.582623540765625*^9}, 3.582624781140625*^9, {3.58262484025*^9, 
   3.582624867734375*^9}, {3.582624946515625*^9, 3.5826250085*^9}, {
   3.582726872*^9, 3.58272696446875*^9}, {3.58272705778125*^9, 
   3.582727058703125*^9}, 3.582727515640625*^9, {3.582727836203125*^9, 
   3.582727845921875*^9}, {3.582796534890625*^9, 3.58279660725*^9}, {
   3.5827966746875*^9, 3.5827966756875*^9}, {3.58279750775*^9, 
   3.582797518265625*^9}, {3.582807598390625*^9, 3.582807649*^9}, {
   3.582807784359375*^9, 3.5828077853125*^9}, 3.58280821275*^9, {
   3.58280845265625*^9, 3.582808463375*^9}, 3.582890997453125*^9, 
   3.58289664790625*^9, 3.5828973795*^9, {3.582969578265625*^9, 
   3.5829695959375*^9}, {3.582971245328125*^9, 3.5829713000625*^9}, 
   3.5829836366875*^9, 3.582983855015625*^9, {3.583075742578125*^9, 
   3.58307576990625*^9}, {3.5831250306064577`*^9, 3.5831250824970827`*^9}, {
   3.5831251194658327`*^9, 3.5831251484502077`*^9}, {3.58314481553125*^9, 
   3.58314487746875*^9}, {3.58314493390625*^9, 3.583144934921875*^9}, 
   3.583144984921875*^9, {3.58322473325*^9, 3.5832247729375*^9}, {
   3.583224848328125*^9, 3.583224849296875*^9}, 3.583225150359375*^9, 
   3.5832530393125*^9, {3.583384726453125*^9, 3.583384762625*^9}, {
   3.583386473140625*^9, 3.583386501171875*^9}, {3.583386958453125*^9, 
   3.583386969453125*^9}, 3.58341433171875*^9, 3.583414385640625*^9, {
   3.58346613290625*^9, 3.583466171*^9}, {3.583466251515625*^9, 
   3.583466252515625*^9}, 3.583466675359375*^9, {3.583496008921875*^9, 
   3.58349600909375*^9}, {3.583496160609375*^9, 3.5834962826875*^9}, {
   3.583496403203125*^9, 3.5834964041875*^9}, 3.5834968148125*^9, {
   3.583643205*^9, 3.58364324515625*^9}, {3.583643317296875*^9, 
   3.583643318375*^9}, 3.58364390509375*^9, {3.58364584559375*^9, 
   3.583645860796875*^9}, {3.583671541546875*^9, 3.58367159840625*^9}, {
   3.583671730046875*^9, 3.583671731078125*^9}, 3.583672007171875*^9, 
   3.58372643953125*^9, {3.58374418284375*^9, 3.5837442221875*^9}, {
   3.583744265*^9, 3.583744266171875*^9}, 3.58374515328125*^9, {
   3.583745216*^9, 3.58374521690625*^9}, {3.5837452525625*^9, 
   3.5837452876875*^9}, {3.5837454064375*^9, 3.58374540753125*^9}, 
   3.583745944875*^9, 3.583746624484375*^9, {3.583852108265625*^9, 
   3.58385218321875*^9}, {3.583852370703125*^9, 3.583852463453125*^9}, {
   3.58385250265625*^9, 3.58385250371875*^9}, 3.58385313634375*^9, {
   3.583853176421875*^9, 3.583853177484375*^9}, 3.583853390109375*^9, 
   3.58391946578125*^9, 3.58391987746875*^9, 3.58393887196875*^9, 
   3.58393913528125*^9, {3.583939165328125*^9, 3.583939182234375*^9}, 
   3.583939305921875*^9, 3.583939338046875*^9, 3.5839393713125*^9, 
   3.5839395453125*^9, {3.583939607484375*^9, 3.583939644296875*^9}, {
   3.5839397083125*^9, 3.58393973425*^9}, 3.5839415320625*^9, {
   3.583941586953125*^9, 3.58394159975*^9}, {3.583941664640625*^9, 
   3.583941759515625*^9}, 3.583941865640625*^9, 3.583942209828125*^9, 
   3.584091853046875*^9, {3.584092147671875*^9, 3.584092265203125*^9}, 
   3.58409278453125*^9, {3.58409322615625*^9, 3.584093315078125*^9}, {
   3.584093732390625*^9, 3.584093747734375*^9}, 3.58410522015625*^9, 
   3.584184662921875*^9, 3.584185833609375*^9, 3.58424714540625*^9, {
   3.584436659453125*^9, 3.584436737125*^9}, {3.58443681140625*^9, 
   3.584436812671875*^9}, 3.584437941796875*^9, 3.58444870753125*^9, {
   3.584448759328125*^9, 3.584448809640625*^9}, 3.584533771796875*^9, {
   3.5845340315625*^9, 3.584534067390625*^9}, 3.58453943315625*^9, 
   3.58453982684375*^9, {3.584540266796875*^9, 3.584540304296875*^9}, {
   3.584618891921875*^9, 3.58461893796875*^9}, {3.584622427171875*^9, 
   3.584622459640625*^9}, {3.58467854046875*^9, 3.58467854503125*^9}, 
   3.5846789765*^9, 3.584679289015625*^9, {3.584707912140625*^9, 
   3.584707927921875*^9}, {3.584711879421875*^9, 3.58471196096875*^9}, {
   3.584712047953125*^9, 3.584712049109375*^9}, 3.58471225778125*^9, 
   3.584712324890625*^9, {3.584934178984375*^9, 3.58493424528125*^9}, {
   3.58493441265625*^9, 3.5849345363125*^9}, {3.585043275109375*^9, 
   3.5850432759375*^9}, {3.585043308078125*^9, 3.585043410671875*^9}, {
   3.585054522984375*^9, 3.585054551*^9}, {3.585057778203125*^9, 
   3.585057779265625*^9}, {3.58505881271875*^9, 3.585058829765625*^9}, 
   3.585059655109375*^9, 3.585060191265625*^9, 3.58506197215625*^9, 
   3.58513606571875*^9, {3.585307813109375*^9, 3.585307900140625*^9}, 
   3.585307968890625*^9, {3.585316920953125*^9, 3.585316942828125*^9}, {
   3.585400108671875*^9, 3.5854001519375*^9}, {3.58540020665625*^9, 
   3.58540020778125*^9}, 3.5854005443125*^9, 3.585461407265625*^9, 
   3.585461484234375*^9, {3.58547235396875*^9, 3.585472362390625*^9}, {
   3.58547248790625*^9, 3.585472488296875*^9}, 3.585472658484375*^9, 
   3.585479301453125*^9, {3.58548929875*^9, 3.5854893214375*^9}, 
   3.5855603898134203`*^9, {3.5855605553446703`*^9, 3.5855606100946703`*^9}, {
   3.5855624626102953`*^9, 3.5855625240790453`*^9}, {3.5855625733446703`*^9, 
   3.5855625743290453`*^9}, 3.5855631015477953`*^9, 3.585581287359375*^9, 
   3.58563050571875*^9, 3.58563056634375*^9, 3.58563120359375*^9, {
   3.585631375515625*^9, 3.585631399953125*^9}, {3.585738010078125*^9, 
   3.585738011203125*^9}, 3.585739494890625*^9, {3.5857396394375*^9, 
   3.585739640375*^9}, {3.585739703265625*^9, 3.58573976234375*^9}, {
   3.585747514984375*^9, 3.58574756734375*^9}, 3.585826649234375*^9, {
   3.585827416828125*^9, 3.585827475125*^9}, {3.58592067378125*^9, 
   3.585920692984375*^9}, 3.58592180909375*^9, 3.58592229109375*^9, 
   3.585992571859375*^9, 3.585994447765625*^9, 3.585994551640625*^9, {
   3.5859993399375*^9, 3.58599941609375*^9}, 3.58599945409375*^9, {
   3.58599960703125*^9, 3.585999608671875*^9}, 3.586001112296875*^9, 
   3.58614624515625*^9, 3.5861610380856867`*^9, 3.5861615530856867`*^9, 
   3.5861705173125*^9, {3.586251604375*^9, 3.586251632*^9}, {
   3.5862516641875*^9, 3.58625171490625*^9}, {3.5862518081875*^9, 
   3.58625181071875*^9}, 3.5862540906875*^9, 3.586254139859375*^9, {
   3.586254218875*^9, 3.586254230953125*^9}, 3.586265953328125*^9, 
   3.586424248171875*^9, {3.58642640059375*^9, 3.5864267050625*^9}, 
   3.58660562190625*^9, 3.5866057084375*^9, {3.5866058504375*^9, 
   3.586605879265625*^9}, {3.586606858828125*^9, 3.5866069133125*^9}, {
   3.586609588015625*^9, 3.586609605703125*^9}, {3.586862452421875*^9, 
   3.58686251753125*^9}, {3.58686272853125*^9, 3.586862783984375*^9}, 
   3.58687145628125*^9, 3.5869267943125*^9, {3.587013465328125*^9, 
   3.587013502671875*^9}, {3.5870135579375*^9, 3.58701355903125*^9}, 
   3.587014008328125*^9, {3.58711545328125*^9, 3.587115520140625*^9}, 
   3.58711557378125*^9, 3.587128356890625*^9, {3.587200944234375*^9, 
   3.587200997484375*^9}, {3.587201047859375*^9, 3.587201048890625*^9}, 
   3.58720213528125*^9, {3.58728527234375*^9, 3.587285272734375*^9}, {
   3.58728556721875*^9, 3.587285676328125*^9}, {3.58728574725*^9, 
   3.58728574825*^9}, {3.587288192484375*^9, 3.587288204453125*^9}, {
   3.58728823871875*^9, 3.587288461625*^9}, {3.5872885309375*^9, 
   3.5872886086875*^9}, {3.5873897993985*^9, 3.5873898791943536`*^9}, {
   3.5873943369602146`*^9, 3.587394338085208*^9}, 3.587394467350005*^9, 
   3.5874707795625*^9, 3.587480463921875*^9, {3.587648012296875*^9, 
   3.58764810790625*^9}, {3.5876481429375*^9, 3.587648176140625*^9}, 
   3.587648382578125*^9, 3.587725624140625*^9, 3.587725891640625*^9, {
   3.587813838*^9, 3.58781392953125*^9}, {3.587813968921875*^9, 
   3.587814015828125*^9}, {3.58781405853125*^9, 3.587814061265625*^9}, {
   3.587814098453125*^9, 3.587814137953125*^9}, {3.587814194078125*^9, 
   3.587814248484375*^9}, {3.587900099671875*^9, 3.587900163296875*^9}, {
   3.58790047021875*^9, 3.58790057021875*^9}, {3.5879122269375*^9, 
   3.587912232875*^9}, 3.587912288703125*^9, {3.58816562759375*^9, 
   3.588165628703125*^9}, {3.58816567134375*^9, 3.588165699515625*^9}, {
   3.588165744390625*^9, 3.588165772671875*^9}, {3.58816580840625*^9, 
   3.5881658288125*^9}, 3.588166118203125*^9, {3.58816616921875*^9, 
   3.588166169625*^9}, {3.588406153171875*^9, 3.58840619909375*^9}, {
   3.588406269953125*^9, 3.588406274546875*^9}, {3.58840733796875*^9, 
   3.588407378359375*^9}, 3.5884153223125*^9, {3.58848887446875*^9, 
   3.588488875453125*^9}, {3.588489330359375*^9, 3.588489415703125*^9}, {
   3.588589923953125*^9, 3.58858993175*^9}, {3.5885904122805576`*^9, 
   3.5885904790618076`*^9}, {3.5886685260625*^9, 3.588668551265625*^9}, {
   3.588668583484375*^9, 3.588668643109375*^9}, {3.588668793328125*^9, 
   3.588668794484375*^9}, 3.58866888453125*^9, {3.5886689293125*^9, 
   3.58866921871875*^9}, {3.58877470475*^9, 3.58877481184375*^9}, 
   3.588774887265625*^9, {3.588776808890625*^9, 3.5887768095625*^9}, {
   3.588776863078125*^9, 3.58877693475*^9}, {3.588776999015625*^9, 
   3.588777000109375*^9}, 3.588777722546875*^9, 3.588828368734375*^9, 
   3.588828660203125*^9, 3.588845434921875*^9, 3.588845490390625*^9, 
   3.588845532375*^9, 3.588845631875*^9, {3.58884569140625*^9, 
   3.588845695484375*^9}, 3.58895474671875*^9, 3.5889548261875*^9, {
   3.58895488134375*^9, 3.58895495434375*^9}, {3.589003776765625*^9, 
   3.589003838828125*^9}, {3.58902181628125*^9, 3.5890218231875*^9}, 
   3.5890219*^9, {3.58918440975*^9, 3.58918445878125*^9}, {3.5891845779375*^9,
    3.58918457909375*^9}, 3.589184865625*^9, {3.589185128375*^9, 
   3.589185196859375*^9}, {3.58918544971875*^9, 3.58918545090625*^9}, 
   3.589185893296875*^9, {3.589357918359375*^9, 3.5893579195*^9}, 
   3.589358070546875*^9, {3.58935818890625*^9, 3.58935818996875*^9}, {
   3.589358497078125*^9, 3.589358543734375*^9}, {3.58935862184375*^9, 
   3.58935864453125*^9}, 3.58935907240625*^9, {3.58935912465625*^9, 
   3.589359170625*^9}, {3.5893592771875*^9, 3.5893592850625*^9}, {
   3.589359464765625*^9, 3.589359507875*^9}, {3.589359572609375*^9, 
   3.589359611453125*^9}, {3.589359662546875*^9, 3.589359672203125*^9}, {
   3.589359717421875*^9, 3.58935971790625*^9}, {3.5893597496875*^9, 
   3.589359794375*^9}, {3.589359825453125*^9, 3.589359825953125*^9}, {
   3.589359858859375*^9, 3.589359912546875*^9}, {3.589359943796875*^9, 
   3.5893599440625*^9}, {3.589359976375*^9, 3.58936003596875*^9}, {
   3.58936007071875*^9, 3.589360137765625*^9}, 3.589433016390625*^9, 
   3.589449322578125*^9, {3.5895200801875*^9, 3.58952010171875*^9}, {
   3.589631346296875*^9, 3.589631347359375*^9}, {3.589631785546875*^9, 
   3.5896318798125*^9}, {3.58963225859375*^9, 3.589632270484375*^9}, {
   3.5896323271875*^9, 3.58963237415625*^9}, 3.58963299128125*^9, 
   3.589633067953125*^9, {3.58963870225*^9, 3.589638755140625*^9}, 
   3.589706575953125*^9, 3.589706735265625*^9, {3.589706776609375*^9, 
   3.589706792984375*^9}, {3.589805841140625*^9, 3.5898058423125*^9}, 
   3.5898058935*^9, {3.589805946890625*^9, 3.589806020453125*^9}, {
   3.590147351640625*^9, 3.590147438140625*^9}, {3.590147535578125*^9, 
   3.590147630828125*^9}, {3.59015752796875*^9, 3.590157616953125*^9}, 
   3.59015782903125*^9, {3.5901593099375*^9, 3.59015933171875*^9}, {
   3.5901593909375*^9, 3.590159416078125*^9}, {3.590494939839492*^9, 
   3.590494941058242*^9}, {3.5904949847301164`*^9, 3.5904950570426164`*^9}, {
   3.5904963030426164`*^9, 3.5904963181051164`*^9}, {3.590574869828125*^9, 
   3.5905748710625*^9}, 3.590574929328125*^9, {3.5905749794375*^9, 
   3.5905749804375*^9}, {3.590575021203125*^9, 3.5905750796875*^9}, 
   3.5905798589375*^9, 3.590583102171875*^9, 3.59058572371875*^9, 
   3.590661076421875*^9, {3.590666654609375*^9, 3.59066671709375*^9}, {
   3.590764298625*^9, 3.5907643745625*^9}, {3.59076446178125*^9, 
   3.590764463375*^9}, 3.59076498703125*^9, {3.5908362500625*^9, 
   3.590836359484375*^9}, {3.59083646315625*^9, 3.590836466359375*^9}, 
   3.590836790453125*^9, {3.5909161071875*^9, 3.590916148703125*^9}, 
   3.590916189453125*^9, {3.590916242640625*^9, 3.5909162665625*^9}, {
   3.590919420875*^9, 3.590919429125*^9}, {3.5909194599375*^9, 
   3.590919518171875*^9}, {3.590919571953125*^9, 3.59091957525*^9}, 
   3.590920369078125*^9, 3.5909204323125*^9, {3.59106856634375*^9, 
   3.591068567609375*^9}, {3.591068658375*^9, 3.5910686623125*^9}, 
   3.59106917809375*^9, {3.591069231875*^9, 3.591069232671875*^9}, {
   3.591069280171875*^9, 3.591069347578125*^9}, {3.591086211375*^9, 
   3.591086212609375*^9}, 3.591086481734375*^9, 3.591086568515625*^9, {
   3.591086720359375*^9, 3.591086824828125*^9}, {3.59118554821875*^9, 
   3.591185549296875*^9}, 3.591185941484375*^9, {3.5911859878125*^9, 
   3.5911860584375*^9}, {3.591186122140625*^9, 3.59118616540625*^9}, {
   3.591186208765625*^9, 3.591186289859375*^9}, 3.591189607828125*^9, {
   3.591189671828125*^9, 3.591189688703125*^9}, {3.59118975415625*^9, 
   3.59118976621875*^9}, {3.591328596375*^9, 3.5913286479375*^9}, {
   3.591328741546875*^9, 3.5913287428125*^9}, 3.5913295635625*^9, {
   3.591356815953125*^9, 3.591356817203125*^9}, 3.591357171921875*^9, {
   3.591357228359375*^9, 3.59135723378125*^9}, {3.59135726384375*^9, 
   3.5913573536875*^9}, {3.591452955515625*^9, 3.59145295684375*^9}, 
   3.591453513421875*^9, {3.59145354896875*^9, 3.591453645390625*^9}, {
   3.591537032890625*^9, 3.59153703415625*^9}, 3.59153740184375*^9, {
   3.591537441421875*^9, 3.591537521640625*^9}, {3.591537568546875*^9, 
   3.5915375698125*^9}, 3.591537880234375*^9, {3.59153792721875*^9, 
   3.591538019203125*^9}, {3.591676042078125*^9, 3.591676069515625*^9}, {
   3.591676383640625*^9, 3.591676467328125*^9}, {3.59167652609375*^9, 
   3.591676527078125*^9}, {3.5916767370625*^9, 3.591676871765625*^9}, {
   3.591676905703125*^9, 3.591676972578125*^9}, {3.59167701209375*^9, 
   3.5916770124375*^9}, {3.59167704840625*^9, 3.591677095359375*^9}, {
   3.59167714596875*^9, 3.5916771470625*^9}, 3.5916775588125*^9, {
   3.59167760371875*^9, 3.591677678796875*^9}, {3.591678074890625*^9, 
   3.59167820184375*^9}, {3.591777028546875*^9, 3.591777134203125*^9}, {
   3.591777217578125*^9, 3.591777218828125*^9}, 3.591777986921875*^9, 
   3.591800597640625*^9, {3.59180433146875*^9, 3.59180436675*^9}, 
   3.592114188921875*^9, {3.592233729375*^9, 3.592233847296875*^9}, {
   3.592233884328125*^9, 3.592233885703125*^9}, 3.5922339689375*^9, {
   3.59228570884375*^9, 3.592285710046875*^9}, {3.5922860688125*^9, 
   3.592286106640625*^9}, {3.5922863639375*^9, 3.5922864573125*^9}, 
   3.592286643296875*^9, {3.5923133430937443`*^9, 3.5923134370312443`*^9}, {
   3.5923135001406193`*^9, 3.5923135013593693`*^9}, 3.5923137692656193`*^9, 
   3.592413135109375*^9, {3.59265017309375*^9, 3.592650221859375*^9}, 
   3.5926506744375*^9, 3.592653957921875*^9, 3.59265566475*^9, 
   3.592666451921875*^9, 3.59266652178125*^9, 3.59266887675*^9, 
   3.5927401321875*^9, 3.592744565171875*^9, 3.592822734390625*^9, 
   3.592827443546875*^9, {3.592888601046875*^9, 3.592888653296875*^9}, 
   3.592888799015625*^9, {3.592891899796875*^9, 3.592891947984375*^9}, {
   3.592892047078125*^9, 3.592892048265625*^9}, {3.5928927035625*^9, 
   3.592892724328125*^9}, {3.592904937890625*^9, 3.5929049516875*^9}, {
   3.592905155671875*^9, 3.5929052306875*^9}, 3.592906504265625*^9, 
   3.592907102359375*^9, {3.592914438984375*^9, 3.59291450640625*^9}, {
   3.5929147585625*^9, 3.592914759828125*^9}, 3.592915394453125*^9, {
   3.59297892621875*^9, 3.592978993296875*^9}, {3.592979029484375*^9, 
   3.592979030671875*^9}, 3.5929795186875*^9, {3.593006710443325*^9, 
   3.593006812868478*^9}, {3.5930068502290483`*^9, 3.5930068515572157`*^9}, 
   3.5930072196783705`*^9, {3.5930090909244213`*^9, 3.5930091044403057`*^9}, {
   3.593009139394102*^9, 3.593009140503498*^9}, {3.593009171863475*^9, 
   3.5930092323490114`*^9}, {3.59316798375*^9, 3.593167984921875*^9}, 
   3.593168764671875*^9, {3.5931687979375*^9, 3.593168798140625*^9}, {
   3.593168829921875*^9, 3.59316887528125*^9}, {3.593236702171875*^9, 
   3.5932367565625*^9}, {3.59323683784375*^9, 3.593236839046875*^9}, 
   3.59323771753125*^9, 3.5934931825625*^9, {3.593495050015625*^9, 
   3.59349505296875*^9}, 3.593495280484375*^9, {3.593495326125*^9, 
   3.59349537790625*^9}, {3.5935256736875*^9, 3.593525680828125*^9}, 
   3.59352573371875*^9, 3.593526774328125*^9, 3.59352712315625*^9, 
   3.593582776484375*^9, 3.593583376984375*^9, {3.59386971609375*^9, 
   3.5938697278125*^9}, {3.593869765203125*^9, 3.59386976609375*^9}, {
   3.593869806078125*^9, 3.593869816625*^9}, 3.593869859828125*^9, {
   3.593869918265625*^9, 3.593869976578125*^9}, 3.5938702988125*^9, 
   3.593870362484375*^9, {3.594640583296875*^9, 3.594640663796875*^9}, {
   3.59464078703125*^9, 3.594640788234375*^9}, {3.594641347453125*^9, 
   3.59464135753125*^9}, {3.5946495079375*^9, 3.594649578859375*^9}, {
   3.59464961265625*^9, 3.594649613828125*^9}, 3.594650659421875*^9, 
   3.594650695375*^9, {3.594716975015625*^9, 3.59471699784375*^9}, {
   3.602072673125*^9, 3.602072724734375*^9}, {3.602072883734375*^9, 
   3.602072901734375*^9}, 3.60207339665625*^9, {3.602073443828125*^9, 
   3.602073456171875*^9}, {3.60222344765625*^9, 3.602223447890625*^9}, {
   3.602223533828125*^9, 3.602223589890625*^9}, 3.60222363328125*^9, {
   3.602223702375*^9, 3.60222372321875*^9}, {3.60222375928125*^9, 
   3.60222376240625*^9}, 3.602223872203125*^9, {3.602493795125*^9, 
   3.602493886328125*^9}, {3.60249391778125*^9, 3.60249391871875*^9}, 
   3.602494110890625*^9, 3.602588748453125*^9, {3.602588914828125*^9, 
   3.602588952046875*^9}, {3.603029861875*^9, 3.60302997528125*^9}, {
   3.603030020328125*^9, 3.603030103984375*^9}, {3.6030301733125*^9, 
   3.603030179625*^9}, {3.603030336765625*^9, 3.603030366078125*^9}, {
   3.603030434234375*^9, 3.60303045884375*^9}, 3.603030534671875*^9, {
   3.6031022013983684`*^9, 3.603102222570243*^9}, 3.6031022636483684`*^9, {
   3.60328710796875*^9, 3.60328714621875*^9}, {3.6032871790625*^9, 
   3.603287199875*^9}, 3.60328723134375*^9, {3.603287512265625*^9, 
   3.6032875135625*^9}, 3.60328758475*^9, {3.603377439640625*^9, 
   3.6033774435625*^9}, {3.6033774923125*^9, 3.603377610703125*^9}, {
   3.6033776420625*^9, 3.60337777115625*^9}, {3.603626581109375*^9, 
   3.603626695328125*^9}, {3.60362672728125*^9, 3.60362674059375*^9}, 
   3.60362677465625*^9, {3.603626846078125*^9, 3.603626847125*^9}, 
   3.603627001640625*^9, {3.603627143140625*^9, 3.603627150703125*^9}, {
   3.603627343015625*^9, 3.603627359625*^9}, {3.60362743178125*^9, 
   3.6036275044375*^9}, {3.605435275125*^9, 3.6054354244375*^9}, {
   3.605435538609375*^9, 3.605435539640625*^9}, {3.605435679453125*^9, 
   3.605435796515625*^9}, 3.605435855078125*^9, {3.6056891301875*^9, 
   3.605689131640625*^9}, 3.605689209609375*^9, {3.605689254890625*^9, 
   3.605689256296875*^9}, {3.605689307625*^9, 3.605689369578125*^9}, {
   3.605689416265625*^9, 3.6056894666875*^9}, {3.605689526859375*^9, 
   3.605689527046875*^9}, {3.6056895936875*^9, 3.605689636859375*^9}, {
   3.605689692859375*^9, 3.605689694125*^9}, {3.605689791328125*^9, 
   3.60568982621875*^9}, 3.605700328328125*^9, {3.60575946903125*^9, 
   3.605759575171875*^9}, {3.605759626234375*^9, 3.605759627390625*^9}, 
   3.6057597149375*^9, 3.605784276671875*^9, {3.605945505875*^9, 
   3.605945550921875*^9}, {3.6059457493125*^9, 3.60594575028125*^9}, {
   3.605945815578125*^9, 3.605945842609375*^9}, {3.60647828953125*^9, 
   3.606478351578125*^9}, {3.6064783866875*^9, 3.606478387703125*^9}, 
   3.606478477703125*^9, {3.60656333284375*^9, 3.60656341390625*^9}, {
   3.60656345821875*^9, 3.606563459234375*^9}, 3.606563657078125*^9, {
   3.606823485953125*^9, 3.606823486921875*^9}, {3.6068236435625*^9, 
   3.606823670953125*^9}, {3.606823702125*^9, 3.606823757515625*^9}, {
   3.606823974234375*^9, 3.606823990125*^9}, {3.606904089786265*^9, 
   3.6069040993643894`*^9}, {3.606904140786265*^9, 3.6069041897706394`*^9}, {
   3.606904223786265*^9, 3.606904224973765*^9}, 3.606904452286265*^9, {
   3.607164094*^9, 3.607164095171875*^9}, 3.607164155546875*^9, {
   3.607164220890625*^9, 3.607164334640625*^9}, {3.60716968546875*^9, 
   3.60716968565625*^9}, {3.607169759921875*^9, 3.60716984128125*^9}, {
   3.60716995709375*^9, 3.60716995809375*^9}, 3.607173697890625*^9, 
   3.607227468859375*^9, 3.6234180605346556`*^9, 3.62347960599535*^9, 
   3.6234996847499547`*^9, {3.623500064980487*^9, 3.6235001135105553`*^9}, {
   3.6235785339140697`*^9, 3.6235785557040997`*^9}, 3.623580822059273*^9, 
   3.6236703973098583`*^9, 3.6236756004337807`*^9, {3.623757569806597*^9, 
   3.623757706296788*^9}, {3.623757739596835*^9, 3.6237577603468637`*^9}, {
   3.6237614099207535`*^9, 3.6237614211307693`*^9}, 3.6237736049070797`*^9, 
   3.6241015275167913`*^9, {3.6241071858594294`*^9, 3.6241072420276423`*^9}, {
   3.624182684559662*^9, 3.6241827167705045`*^9}, {3.6241828158321705`*^9, 
   3.6241828161581893`*^9}, 3.6241829460826206`*^9, 3.624465964424527*^9, 
   3.624530204591753*^9, {3.624530314531907*^9, 3.6245303176219115`*^9}, {
   3.624530665322398*^9, 3.624530668122402*^9}, {3.6245309774728355`*^9, 
   3.624531027342905*^9}, {3.6245311231030393`*^9, 3.62453115933309*^9}, 
   3.6245311902331333`*^9, 3.624531245643211*^9, {3.6245312763532534`*^9, 
   3.6245312782932563`*^9}, {3.6245347194809113`*^9, 
   3.6245347210600023`*^9}, {3.6245347994184837`*^9, 3.624534801237588*^9}, 
   3.624534856287737*^9, {3.624535264215069*^9, 3.624535295814876*^9}, {
   3.6245354092723656`*^9, 3.624535412864571*^9}, {3.6245442640948257`*^9, 
   3.624544282104851*^9}, 3.6246997091887984`*^9, {3.624858169812614*^9, 
   3.6248581788626266`*^9}, 3.624871423196448*^9, {3.624871459716499*^9, 
   3.6248714610665007`*^9}, {3.6248806410828876`*^9, 3.624880709792984*^9}, {
   3.6249716008866067`*^9, 3.6249716326566515`*^9}, 3.624974807262547*^9, 
   3.6252043423666105`*^9, 3.625221085409614*^9, 3.625232238483078*^9, 
   3.625290874950841*^9, {3.6253052420412254`*^9, 3.6253052660712595`*^9}, {
   3.6253745991837373`*^9, 3.625374628103778*^9}, {3.625374747644945*^9, 
   3.625374763094967*^9}, {3.625374806615028*^9, 3.625374865885111*^9}, {
   3.6254170360700283`*^9, 3.625417062540065*^9}, {3.625417146280182*^9, 
   3.6254171557501955`*^9}, {3.625417201170259*^9, 3.6254172552903347`*^9}, 
   3.625584296811185*^9, 3.625585074713274*^9, {3.625585112283327*^9, 
   3.62558514316337*^9}, 3.625639499126877*^9, {3.6256397379272113`*^9, 
   3.625639740517215*^9}, {3.6257219703568716`*^9, 3.6257220109569283`*^9}, {
   3.6257228045022354`*^9, 3.6257228322422743`*^9}, {3.6257228704723277`*^9, 
   3.625722874972334*^9}, 3.625811395755848*^9, 3.625831747576935*^9, {
   3.6258959183863163`*^9, 3.6258959252863255`*^9}, {3.6259067792087493`*^9, 
   3.625906784028756*^9}, {3.626011008135138*^9, 3.6260110141651464`*^9}, {
   3.626167579159359*^9, 3.626167599929388*^9}, {3.626168191637483*^9, 
   3.626168295407628*^9}, 3.626168356277714*^9, {3.626168423047807*^9, 
   3.6261684610978603`*^9}, 3.6263553133554306`*^9, 3.626441635536328*^9, 
   3.626441854905801*^9, {3.6264423061656113`*^9, 3.626442317418255*^9}, 
   3.6265881286925077`*^9, 3.626588582683143*^9, 3.626589447104354*^9, 
   3.6266083639525414`*^9, {3.626610747441882*^9, 3.6266107568718953`*^9}, {
   3.6266107894119406`*^9, 3.626610790821943*^9}, {3.62661085341203*^9, 
   3.6266108599720397`*^9}, 3.6266194787786465`*^9, 3.6266889869737916`*^9, {
   3.6266964582546406`*^9, 3.626696484814678*^9}, {3.6266965212647285`*^9, 
   3.6266965396547546`*^9}, 3.6266966189848657`*^9, 3.6267076129447603`*^9, 
   3.626759544780199*^9, {3.626759625772832*^9, 3.6267596880223923`*^9}, {
   3.6270176090413275`*^9, 3.627017636303887*^9}, {3.6270177935748825`*^9, 
   3.627017864363931*^9}, {3.627018022857997*^9, 3.6270180269082284`*^9}, 
   3.627018109373945*^9, 3.6270380445808873`*^9, {3.6270464682572913`*^9, 
   3.6270464955448523`*^9}, {3.6270472069885445`*^9, 3.6270472073425646`*^9}, 
   3.627047341513239*^9, {3.627190111005929*^9, 3.6271901130259314`*^9}, 
   3.6272936086834364`*^9, 3.627310275902586*^9, 3.6273177699367657`*^9, 
   3.627363576607811*^9, {3.627380252883853*^9, 3.6273802749581156`*^9}, {
   3.6273803559107456`*^9, 3.627380359857971*^9}, {3.6273803942149363`*^9, 
   3.6273804199404078`*^9}, {3.6273804951507096`*^9, 3.627380596893529*^9}, 
   3.6273961030302625`*^9, {3.627396194710391*^9, 3.627396234650447*^9}, {
   3.6273988429260983`*^9, 3.627398856806118*^9}, 3.6274728557257853`*^9, {
   3.6274729911955338`*^9, 3.6274730690629873`*^9}, {3.627473167595623*^9, 
   3.627473233643401*^9}, 3.6274733251756363`*^9, {3.6274828938849354`*^9, 
   3.627482898916223*^9}, 3.6275544937027674`*^9, 3.6275557228354883`*^9, {
   3.6275557638655453`*^9, 3.627555771715556*^9}, 3.627556618866742*^9, {
   3.627564003800398*^9, 3.6275640265456905`*^9}, {3.6275642219069643`*^9, 
   3.6275642222069645`*^9}, 3.6275643048170805`*^9, 3.627630339946324*^9, 
   3.6276304418764668`*^9, 3.6276309954972415`*^9, 3.6276310324472933`*^9, 
   3.6276317736693316`*^9, 3.6276361843595114`*^9, 3.6276364374398656`*^9, 
   3.6276365079099646`*^9, 3.6278119236903877`*^9, 3.6278255624984956`*^9, {
   3.627825606030986*^9, 3.6278256225679317`*^9}, {3.62782565419074*^9, 
   3.6278256545407605`*^9}, 3.6278257863442993`*^9, {3.62782593252666*^9, 
   3.627825932841678*^9}, {3.6278259629734015`*^9, 3.627825986967774*^9}, 
   3.6279051923318443`*^9, {3.627905279961856*^9, 3.627905305328307*^9}, {
   3.6279159632279043`*^9, 3.627916043721508*^9}, 3.627916109683281*^9, 
   3.6281417176204977`*^9, 3.6281741408809547`*^9, 3.6284165147192535`*^9, 
   3.6284166352894225`*^9, 3.6284167380095663`*^9, 3.6284167892496376`*^9, 
   3.628416868699749*^9, 3.628416944669855*^9, 3.628416999319932*^9, 
   3.6284171133100915`*^9, 3.6284171889201975`*^9, 3.6284172759103193`*^9, 
   3.628417367230447*^9, 3.628417453500568*^9, {3.6284175627617207`*^9, 
   3.62841756931173*^9}, 3.628417740231969*^9, {3.6284178077020636`*^9, 
   3.628417835882103*^9}, 3.6284179526622667`*^9, {3.628417992352322*^9, 
   3.628418036952385*^9}, {3.6284181188824997`*^9, 3.628418123072505*^9}, {
   3.628418306472762*^9, 3.6284183249227877`*^9}, {3.6284184304329357`*^9, 
   3.628418457352973*^9}, {3.628418521043062*^9, 3.6284185213930626`*^9}, {
   3.628418588763157*^9, 3.6284186184031987`*^9}, {3.628418763284402*^9, 
   3.628418767714408*^9}, {3.6284188064644623`*^9, 3.628418809744467*^9}, 
   3.6284189252446284`*^9, {3.628418964864684*^9, 3.628418999164732*^9}, {
   3.6284190916048613`*^9, 3.6284190981448703`*^9}, {3.6284191855149927`*^9, 
   3.628419189914999*^9}, 3.628419313815172*^9, 3.628425963260341*^9, 
   3.6284373127988586`*^9, 3.628439005472229*^9, {3.628439069072318*^9, 
   3.628439140352418*^9}, 3.6284901597332134`*^9, {3.628490367843505*^9, 
   3.6284904067835593`*^9}, 3.6284978951239786`*^9, 3.628502833715691*^9, 
   3.628596009296275*^9, {3.6285961334254494`*^9, 3.6285961520754757`*^9}, {
   3.6285962442856045`*^9, 3.6285962446556053`*^9}, 3.628596336715734*^9, {
   3.6285964914359508`*^9, 3.628596491725951*^9}, {3.6285965329360085`*^9, 
   3.6285965564560413`*^9}, 3.628596616826126*^9, 3.6286034500186625`*^9, {
   3.6286056192907853`*^9, 3.628605649660828*^9}, {3.628693310314307*^9, 
   3.6286933554143705`*^9}, {3.628693390444419*^9, 3.6286933907544193`*^9}, {
   3.628693480324545*^9, 3.628693499114571*^9}, {3.6288647096802464`*^9, 
   3.6288647148375416`*^9}, 3.628867276257139*^9, {3.6289458353742075`*^9, 
   3.628945853624233*^9}, {3.6289458841042757`*^9, 3.6289458843942757`*^9}, 
   3.629035139084303*^9, 3.6290409649074607`*^9, {3.6290440800420637`*^9, 
   3.629044099532091*^9}, 3.6290441422221503`*^9, {3.6290442106142473`*^9, 
   3.629044211054248*^9}, 3.629044393034503*^9, {3.629044534364701*^9, 
   3.6290445426547127`*^9}, 3.6291176222079163`*^9, 3.6291203897209806`*^9, {
   3.629126147047904*^9, 3.6291261524579115`*^9}, {3.629131846228883*^9, 
   3.6291318730389204`*^9}, {3.6291319414790163`*^9, 
   3.6291319418290167`*^9}, {3.629131975109063*^9, 3.6291319762190647`*^9}, {
   3.629132007689109*^9, 3.6291320080191092`*^9}, {3.6291321061692467`*^9, 
   3.6291321146092587`*^9}, {3.629193644659633*^9, 3.629193665129662*^9}, {
   3.6291937066297197`*^9, 3.6291937161097336`*^9}, {3.6291938002098513`*^9, 
   3.629193833079897*^9}, 3.629196199845211*^9, 3.6292106144568005`*^9, {
   3.6292678738449445`*^9, 3.629267901614983*^9}, {3.629267997155117*^9, 
   3.6292679974751177`*^9}, 3.6292680999652605`*^9, 3.6292794700624914`*^9, 
   3.6292853575137343`*^9, {3.6292994059159884`*^9, 3.629299451986053*^9}, {
   3.6292995670562143`*^9, 3.6292995680762157`*^9}, 3.629299748176468*^9, 
   3.629352648140415*^9, {3.629354057783389*^9, 3.629354071723408*^9}, {
   3.6294392022337613`*^9, 3.6294392311464148`*^9}, {3.6294394313068633`*^9, 
   3.629439431667884*^9}, 3.6294395334557056`*^9, 3.629641578112464*^9, 
   3.629642062674142*^9, {3.6297123235773177`*^9, 3.6297123349173336`*^9}, 
   3.629717046769373*^9, 3.629718536512459*^9, 3.6297185894025326`*^9, {
   3.629726864720454*^9, 3.6297268806504765`*^9}, 3.6297831158701787`*^9, 
   3.6297861631363125`*^9, {3.629818499459741*^9, 3.6298185243497763`*^9}, {
   3.62981856256983*^9, 3.6298185629198303`*^9}, {3.6298186540499573`*^9, 
   3.6298186662099743`*^9}, 3.630317021779116*^9, 3.6303299729213905`*^9, 
   3.6304030129400063`*^9, 3.6304036001308284`*^9, 3.630418862029908*^9, 
   3.6304219121232915`*^9, 3.6305100653145*^9, 3.6305776309973106`*^9, {
   3.6307680412827764`*^9, 3.6307680563327975`*^9}, {3.630822071536956*^9, 
   3.630822077056964*^9}, {3.630837561346464*^9, 3.6308375736564817`*^9}, {
   3.630903671284489*^9, 3.630903698508046*^9}, {3.6309038075242815`*^9, 
   3.6309038078473*^9}, 3.6309040209984913`*^9, 3.630908562975278*^9, 
   3.6309322145269566`*^9, 3.6309370128549623`*^9, 3.6310098946686363`*^9, {
   3.6310099362086945`*^9, 3.6310099395986986`*^9}, 3.631015954896367*^9, {
   3.6310230386199517`*^9, 3.6310230577499785`*^9}, 3.6310235731207*^9, 
   3.631075836206701*^9, 3.6310768016890526`*^9, {3.6310768410691075`*^9, 
   3.631076841529108*^9}, 3.6310906860105195`*^9, 3.631102066810337*^9, 
   3.631102134660432*^9, 3.6311102744575653`*^9, 3.6311123216924314`*^9, 
   3.631168538264717*^9, 3.631183614926508*^9, 3.631189150760312*^9, {
   3.6311951444147778`*^9, 3.6311951502047853`*^9}, {3.631270791203185*^9, 
   3.6312707994496565`*^9}, 3.631270858549037*^9, {3.6312713830490365`*^9, 
   3.6312714057313337`*^9}, 3.6312759234937353`*^9, 3.631337580823825*^9, {
   3.6313376764139585`*^9, 3.631337744324054*^9}, {3.6313377748240967`*^9, 
   3.631337813824151*^9}, {3.6313397925789213`*^9, 3.6313398733690343`*^9}, 
   3.631340845321395*^9, 3.631360676587102*^9, {3.631366003864023*^9, 
   3.6313660077240286`*^9}, 3.6313672519867706`*^9, {3.631367543917179*^9, 
   3.6313675482671857`*^9}, {3.6313693180487175`*^9, 3.63136936967879*^9}, 
   3.631369426208869*^9, 3.6314550039946065`*^9, 3.6314574814653015`*^9, 
   3.6314597828825245`*^9, 3.6315118884080095`*^9, 3.631513964931916*^9, {
   3.63154034488771*^9, 3.6315403536977224`*^9}, 3.6315406787881775`*^9, 
   3.631547014373048*^9, 3.631551542635435*^9, 3.6316257926736155`*^9, 
   3.631626177084154*^9, 3.6316993914962797`*^9, {3.631700751369184*^9, 
   3.6317007903992386`*^9}, 3.6317131858013773`*^9, 3.6317154177765017`*^9, 
   3.631718239762453*^9, {3.631789480949274*^9, 3.631789508372843*^9}, {
   3.631792954935975*^9, 3.631792967758708*^9}, 3.6318042568225946`*^9, 
   3.631878626371046*^9, {3.6318790610626545`*^9, 3.631879061902656*^9}, 
   3.631962200362234*^9, 3.631962241942292*^9, {3.6319666388005934`*^9, 
   3.6319666411605964`*^9}, 3.6319722158925505`*^9, 3.631972552073021*^9, 
   3.6319731998349276`*^9, 3.6320436910831113`*^9, 3.632044453479718*^9, {
   3.632055428723812*^9, 3.632055445563836*^9}, {3.6320625479728155`*^9, 
   3.6320625916028767`*^9}, {3.63215076216302*^9, 3.632150811373089*^9}, {
   3.6321508980732107`*^9, 3.632150898393211*^9}, {3.6321513232538056`*^9, 
   3.6321513458638372`*^9}, {3.6322023164261165`*^9, 3.632202317393318*^9}, {
   3.632202381618631*^9, 3.632202402288667*^9}, {3.6322026404080367`*^9, 
   3.6322026424880395`*^9}, 3.6322032752289257`*^9, {3.6322033714890604`*^9, 
   3.632203409239113*^9}, 3.632216389666426*^9, {3.6322177502983313`*^9, 
   3.6322177673183546`*^9}, 3.6322363852041187`*^9, 3.632309075031684*^9, {
   3.6323121593960996`*^9, 3.6323121818473835`*^9}, {3.6323186757318125`*^9, 
   3.6323186810671177`*^9}, 3.6324805670252447`*^9, 3.632483285057707*^9, 
   3.6324834120639715`*^9, {3.632483505471314*^9, 3.632483514789847*^9}, 
   3.6324936372022495`*^9, 3.632563264647662*^9, 3.6325653916816406`*^9, {
   3.6326514957195997`*^9, 3.6326515019296083`*^9}, 3.6326643107902026`*^9, 
   3.63266763737586*^9, 3.632667731545992*^9, {3.6326677633570366`*^9, 
   3.6326678168771114`*^9}, 3.6328100980506907`*^9, {3.632842111573728*^9, 
   3.6328421433737726`*^9}, {3.6328434110265474`*^9, 3.632843411346548*^9}, 
   3.6328434778466406`*^9, 3.6329113245330534`*^9, {3.632913337277871*^9, 
   3.632913361247905*^9}, {3.6329171666252327`*^9, 3.6329171991352777`*^9}, {
   3.6329172313053226`*^9, 3.632917232905325*^9}, 3.632917273825382*^9, 
   3.6330024226452303`*^9, 3.6330064706638975`*^9, 3.6330084946687317`*^9, {
   3.633014575262244*^9, 3.633014691372407*^9}, 3.6330148324826045`*^9, 
   3.6330807364565887`*^9, 3.633083911023033*^9, {3.633083942193077*^9, 
   3.633084043563219*^9}, 3.6330969063225436`*^9, 3.6331002841682725`*^9, 
   3.6331063030777187`*^9, {3.6331849658154755`*^9, 3.63318497637549*^9}, {
   3.633185106535672*^9, 3.6331851692357607`*^9}, {3.6331852416568613`*^9, 
   3.633185288686928*^9}, {3.633240449027811*^9, 3.633240474047846*^9}, {
   3.6332405154079037`*^9, 3.6332405157279043`*^9}, 3.6332406230180545`*^9, 
   3.633256422600487*^9, 3.6332566651408267`*^9, 3.633280035902631*^9, {
   3.633325567868844*^9, 3.633325573088851*^9}, {3.633325604758896*^9, 
   3.633325629998931*^9}, {3.6333256755489945`*^9, 3.633325679449*^9}, {
   3.633325998339446*^9, 3.633326001309451*^9}, 3.633327995465244*^9, {
   3.633328212065547*^9, 3.6333282445655923`*^9}, 3.6333490985533576`*^9, 
   3.633349622404091*^9, {3.6334315457075663`*^9, 3.6334315695276003`*^9}, 
   3.6334321333393893`*^9, {3.633432212909501*^9, 3.63343223362953*^9}, {
   3.633442964710041*^9, 3.633443023160123*^9}, 3.6335191563883204`*^9, {
   3.6335200578705826`*^9, 3.6335201472707076`*^9}, {3.633526093406247*^9, 
   3.6335260971762524`*^9}, 3.633526247836464*^9, 3.633529937065629*^9, {
   3.633529997965714*^9, 3.633530042235776*^9}, 3.633584712312379*^9, 
   3.633585958106016*^9, 3.6335869766274424`*^9, {3.6336017440844345`*^9, 
   3.633601745224436*^9}, {3.6336017990445113`*^9, 3.6336017994845123`*^9}, 
   3.6336050022499957`*^9, 3.633605739862028*^9, 3.6336068316198215`*^9, {
   3.6336087576835175`*^9, 3.633608761623523*^9}, 3.6336917394565*^9, 
   3.633702237707372*^9, 3.6337023173074837`*^9, {3.6337032687598157`*^9, 
   3.633703280409832*^9}, {3.6337077956428623`*^9, 3.633707811762884*^9}, 
   3.6337081378703413`*^9, {3.633708487751831*^9, 3.63370851507187*^9}, 
   3.6337716280667734`*^9, {3.6337716961168685`*^9, 3.6337717185769*^9}, 
   3.6337959955679674`*^9, {3.6337960515580454`*^9, 3.6337960727980757`*^9}, 
   3.633866621776474*^9, 3.633876289915491*^9, 3.6338802518140383`*^9, {
   3.633880373664209*^9, 3.633880444424308*^9}, {3.633932654559971*^9, 
   3.6339326580599756`*^9}, 3.633934271863235*^9, 3.633947584386647*^9, 
   3.6339570635663958`*^9, 3.634016499226671*^9, 3.634036453079572*^9, 
   3.634127383669177*^9, {3.634129535163189*^9, 3.634129579413251*^9}, 
   3.634298468559251*^9, {3.634298755709653*^9, 3.6342988517497873`*^9}, {
   3.634311987895343*^9, 3.634312016235382*^9}, {3.634372837823759*^9, 
   3.6343728569637856`*^9}, {3.634372889963832*^9, 3.634372962493933*^9}, {
   3.63437637948172*^9, 3.6343763884517326`*^9}, {3.634464596321211*^9, 
   3.634464656071295*^9}, {3.634464750641427*^9, 3.6344647513614283`*^9}, {
   3.6344673165253906`*^9, 3.63446733037541*^9}, {3.634483794929931*^9, 
   3.6344837952199316`*^9}, {3.6344838435999994`*^9, 
   3.6344838955900717`*^9}, {3.63448397274018*^9, 3.634483977130186*^9}, 
   3.634569297127075*^9, {3.6345698433253155`*^9, 3.6345699393878107`*^9}, {
   3.6345699822442617`*^9, 3.634570001193345*^9}, 3.634638189638645*^9, {
   3.6346410669102163`*^9, 3.63464113219095*^9}, 3.634641185016971*^9, {
   3.634659231445567*^9, 3.63465926916562*^9}, 3.6350789044178724`*^9, 
   3.6350791958945436`*^9, {3.6351581416870837`*^9, 3.635158175277131*^9}, {
   3.6351598953420095`*^9, 3.6351599032164593`*^9}, {3.6351600540850887`*^9, 
   3.6351601942131033`*^9}, 3.635175325162279*^9, 3.635308953426797*^9, {
   3.6353093357326636`*^9, 3.635309336931732*^9}, 3.635328227086117*^9, 
   3.6353331979298215`*^9, 3.6353434518296003`*^9, 3.6354244705889196`*^9, {
   3.6354994627000933`*^9, 3.6354995153201675`*^9}, 3.635499604440292*^9, {
   3.6354996551303635`*^9, 3.6354996560003643`*^9}, 3.635499844881629*^9, {
   3.635504267784219*^9, 3.6355042874142466`*^9}, {3.635521900517781*^9, 
   3.6355220467579856`*^9}, {3.63552224988827*^9, 3.635522251318272*^9}, {
   3.635522362258427*^9, 3.6355223774684486`*^9}, 3.6355224618685665`*^9, {
   3.6355225182686453`*^9, 3.6355225191186466`*^9}, 3.6355225760287266`*^9, 
   3.635569537585264*^9, 3.6355717183808737`*^9, 3.6356085336082077`*^9, 
   3.635685779780905*^9, 3.63569250962183*^9, {3.6357688535456*^9, 
   3.6357688739107647`*^9}, 3.6357757253116426`*^9, 3.6357763371966405`*^9, {
   3.6357768750104017`*^9, 3.635776900955886*^9}, 3.6358462440608015`*^9, {
   3.635949252930914*^9, 3.63594928602096*^9}, 3.6359494348511686`*^9, 
   3.63595100985442*^9, 3.6360045768524237`*^9, {3.6360046166624794`*^9, 
   3.6360046202024846`*^9}, {3.636004743092657*^9, 3.636004908172888*^9}, 
   3.636029033322198*^9, 3.6360362738102684`*^9, 3.636113574445159*^9, 
   3.6361262011059227`*^9, {3.6361764761503677`*^9, 3.6361765009704027`*^9}, 
   3.6361778780533304`*^9, {3.636178071893602*^9, 3.6361780847336197`*^9}, 
   3.636201915101997*^9, 3.6362631105403223`*^9, 3.636263160220392*^9, 
   3.6362631950214405`*^9, 3.636274975957264*^9, {3.6362857415749035`*^9, 
   3.6362857418549037`*^9}, 3.6362908922318635`*^9, 3.636349227836047*^9, 
   3.6363496154112153`*^9, 3.6363748501522026`*^9, 3.6363863485371675`*^9, {
   3.636461950712816*^9, 3.6364619818485975`*^9}, {3.6364620739718666`*^9, 
   3.636462074361889*^9}, 3.636462221406299*^9, {3.6364669986615424`*^9, 
   3.6364670084511023`*^9}, 3.636470243233121*^9, 3.636517862974027*^9, 
   3.6365216878240967`*^9, {3.6365301003652077`*^9, 3.636530170875306*^9}, 
   3.6365479628566027`*^9, {3.6365480544848433`*^9, 3.636548111880126*^9}, 
   3.6365527412239094`*^9, 3.636556573687114*^9, {3.63670838062947*^9, 
   3.636708409918145*^9}, {3.6367084964360943`*^9, 3.6367084971861367`*^9}, {
   3.6367087266692624`*^9, 3.636708837576606*^9}, 3.6367155140278845`*^9, {
   3.6367247055851536`*^9, 3.6367247305165796`*^9}, 3.6367269718467765`*^9, {
   3.6367793890251055`*^9, 3.636779403925126*^9}, {3.636779722925573*^9, 
   3.6367797861956615`*^9}, 3.6367800854760804`*^9, {3.636792331925171*^9, 
   3.636792334265174*^9}, 3.6368093914712353`*^9, 3.636859117362132*^9, {
   3.637064852415225*^9, 3.637064884015269*^9}, {3.637065051075503*^9, 
   3.637065051445503*^9}, 3.637065188485695*^9, 3.6371358924869003`*^9, {
   3.637136327377509*^9, 3.63713635010754*^9}, {3.6371384857325306`*^9, 
   3.6371384877725334`*^9}, {3.63713935669475*^9, 3.637139361594757*^9}, 
   3.637243440113164*^9, 3.637245027083314*^9, 3.6372891280898705`*^9, {
   3.637290768163166*^9, 3.6372908002232113`*^9}, {3.637290852963285*^9, 
   3.637290853773286*^9}, 3.637291068833587*^9, {3.6373096630461583`*^9, 
   3.6373096772761784`*^9}, {3.6373101084377823`*^9, 3.637310109547784*^9}, 
   3.637324648492898*^9, 3.6373317748158054`*^9, 3.6373918579778605`*^9, {
   3.6373946367517977`*^9, 3.63739463993698*^9}, {3.6374953422195787`*^9, 
   3.63749551458982*^9}, {3.6374955533498745`*^9, 3.637495858190301*^9}, {
   3.6374958909703465`*^9, 3.6374964685611553`*^9}, {3.6374965070212092`*^9, 
   3.6374965187212257`*^9}, {3.637496674031443*^9, 3.637496824561654*^9}, {
   3.637496863231708*^9, 3.6374968951417527`*^9}, {3.6374969330618057`*^9, 
   3.6374973423823786`*^9}, {3.637497373272422*^9, 3.6374974042424655`*^9}, {
   3.6374974399525156`*^9, 3.637497899683159*^9}, {3.637497941683218*^9, 
   3.6374981673935337`*^9}, {3.637498205393587*^9, 3.6374983315137634`*^9}, {
   3.6374983634338083`*^9, 3.6374984494439287`*^9}, {3.637498486723981*^9, 
   3.637498583714117*^9}, {3.6374986149441605`*^9, 3.637498875004524*^9}, {
   3.6374989291846004`*^9, 3.637499277665088*^9}, {3.637499661185625*^9, 
   3.637499931246003*^9}, {3.6374999728660617`*^9, 3.6375001577363205`*^9}, {
   3.6375650528174686`*^9, 3.6375650628274827`*^9}, {3.6375651297275763`*^9, 
   3.637565137597587*^9}, {3.637565178597645*^9, 3.6375652400977306`*^9}, {
   3.637565367157909*^9, 3.6375653851379337`*^9}, {3.637565424727989*^9, 
   3.6375654344780025`*^9}, {3.6375654697180524`*^9, 
   3.6375654924680843`*^9}, {3.63756709486033*^9, 3.6375673023606205`*^9}, {
   3.637567376220724*^9, 3.6375673821507325`*^9}, {3.6375674470108232`*^9, 
   3.6375674559108353`*^9}, {3.637567501190899*^9, 3.6375675085209093`*^9}, {
   3.6375675645209875`*^9, 3.6375675888410215`*^9}, {3.6375676379610906`*^9, 
   3.6375676457911015`*^9}, 3.6375677221912084`*^9, 3.6375677768712854`*^9, 
   3.63756781602134*^9, {3.6375678592514005`*^9, 3.637567881561432*^9}, 
   3.637567958131539*^9, {3.6375679965815926`*^9, 3.637567999821597*^9}, {
   3.637568145651801*^9, 3.6375682201119056`*^9}, {3.637568298452015*^9, 
   3.6375682998520174`*^9}, {3.6375684198521852`*^9, 3.637568422362189*^9}, {
   3.637568659842521*^9, 3.637568663192526*^9}, {3.637568727882616*^9, 
   3.637568769032674*^9}, {3.6375688431327777`*^9, 3.637568849572787*^9}, {
   3.637568906432866*^9, 3.6375689185628834`*^9}, {3.6375689743329616`*^9, 
   3.637568974672962*^9}, {3.637569133533184*^9, 3.6375691402831936`*^9}, {
   3.6376730152829733`*^9, 3.637673015512974*^9}, {3.637673057763033*^9, 
   3.6376730857430725`*^9}, {3.637673183333209*^9, 3.6376732052432394`*^9}, {
   3.637673242603292*^9, 3.6376732773333406`*^9}, {3.637673387743495*^9, 
   3.637673421553542*^9}, {3.6376735695937495`*^9, 3.6376736372638445`*^9}, {
   3.6376739502742825`*^9, 3.637673952514286*^9}, {3.637674036664404*^9, 
   3.637674036924404*^9}, {3.637674072604454*^9, 3.6376740946744847`*^9}, {
   3.637674251534704*^9, 3.637674253234707*^9}, {3.6377513474508247`*^9, 
   3.6377513850808773`*^9}, {3.6377514208909273`*^9, 
   3.6377514301709404`*^9}, {3.637751549741108*^9, 3.6377515500211077`*^9}, {
   3.6377522993831573`*^9, 3.637752326343195*^9}, {3.6377523657632504`*^9, 
   3.6377523720232587`*^9}, {3.6377541343877263`*^9, 
   3.6377541360077286`*^9}, {3.637762912342969*^9, 3.637762933832999*^9}, 
   3.637832537577652*^9, 3.6378349181709847`*^9, 3.6379021343911695`*^9, {
   3.637903460873027*^9, 3.6379034744730453`*^9}, 3.6379149369673195`*^9, {
   3.6379881672572985`*^9, 3.6379881911016617`*^9}, {3.6379882402224717`*^9, 
   3.6379882405884924`*^9}, 3.637988678172521*^9, 3.6380012275611353`*^9, 
   3.6380014591914597`*^9, {3.638089316115161*^9, 3.638089323845172*^9}, {
   3.6380893839652567`*^9, 3.63808939349527*^9}, {3.6380894958254128`*^9, 
   3.6380894961554136`*^9}, 3.6380900104320374`*^9, 3.6380900554521008`*^9, {
   3.6380901290822034`*^9, 3.638090147352229*^9}, {3.638093613182124*^9, 
   3.6380936154621267`*^9}, {3.6380936988022437`*^9, 3.638093699102244*^9}, {
   3.6380937362222958`*^9, 3.6380937602023296`*^9}, {3.63815745424704*^9, 
   3.638157482297079*^9}, {3.638157556517183*^9, 3.6381575573271837`*^9}, 
   3.638157631607288*^9, {3.6382668856443505`*^9, 3.638266923884404*^9}, {
   3.638329293159833*^9, 3.6383293333098893`*^9}, {3.63833058376373*^9, 
   3.638330584143731*^9}, 3.6383306528238273`*^9, {3.63836688029*^9, 
   3.638366931690072*^9}, {3.638367009610181*^9, 3.638367012410185*^9}, {
   3.6386234585256233`*^9, 3.6386234728856435`*^9}, {3.6386235069356914`*^9, 
   3.6386235113356977`*^9}, {3.6386236829059377`*^9, 3.638623687235944*^9}, {
   3.638623808806114*^9, 3.638623814106121*^9}, {3.638625382779318*^9, 
   3.638625404729348*^9}, {3.6386262043904676`*^9, 3.638626209510475*^9}, {
   3.638672346975438*^9, 3.638672369005469*^9}, {3.6386729000662127`*^9, 
   3.638672914876233*^9}, {3.6386735472081184`*^9, 3.63867355560813*^9}, {
   3.638688942760022*^9, 3.6386889606100473`*^9}, {3.638690965342854*^9, 
   3.638690987622885*^9}, {3.6386917436449437`*^9, 3.63869174818495*^9}, {
   3.638698709533904*^9, 3.63869871396391*^9}, {3.638708614843455*^9, 
   3.6387086651135254`*^9}, {3.6387099369353056`*^9, 3.638709941875313*^9}, {
   3.6387614435055475`*^9, 3.6387615172756505`*^9}, {3.638762543457087*^9, 
   3.6387625720271273`*^9}, {3.638791298058772*^9, 3.6387913033240733`*^9}, {
   3.638791826849017*^9, 3.638791831471281*^9}, {3.638799330388583*^9, 
   3.6387993757286468`*^9}, 3.638860681124509*^9, {3.638877218006462*^9, 
   3.6388772225764685`*^9}, {3.638880102941501*^9, 3.6388801080715084`*^9}, {
   3.638930525229374*^9, 3.6389306002094784`*^9}, {3.638930738999673*^9, 
   3.6389307456596823`*^9}, {3.638931093720169*^9, 3.638931101900181*^9}, {
   3.6389318490322266`*^9, 3.638931871972259*^9}, {3.6389324586730804`*^9, 
   3.6389324796031094`*^9}, {3.6389515679443226`*^9, 3.638951612964386*^9}, {
   3.6389522347152567`*^9, 3.638952254565284*^9}, {3.6389526515468397`*^9, 
   3.638952656156846*^9}, {3.638952856597127*^9, 3.6389528618571343`*^9}, {
   3.6389542692891045`*^9, 3.638954275399113*^9}, {3.6389620516548634`*^9, 
   3.6389620559348693`*^9}, {3.6389650687011147`*^9, 3.638965099061157*^9}, {
   3.6390500475918427`*^9, 3.639050051331848*^9}, {3.639050134871965*^9, 
   3.639050136951968*^9}, {3.6390505880125995`*^9, 3.639050589292601*^9}, {
   3.639051853896372*^9, 3.639051857646377*^9}, 3.639052374677101*^9, {
   3.6390526138774357`*^9, 3.6390526180374413`*^9}, 3.639129215323324*^9, {
   3.639130718066428*^9, 3.6391307838265204`*^9}, {3.6391308367265944`*^9, 
   3.639130837106595*^9}, 3.6391309254167185`*^9, 3.639134476367622*^9, 
   3.6391949494493914`*^9, 3.6392781045725136`*^9, 3.639278936344678*^9, 
   3.6392831123615246`*^9, 3.63928321629167*^9, 3.6392833177318125`*^9, {
   3.639284820434916*^9, 3.639284843974949*^9}, {3.639284913215046*^9, 
   3.639284914165047*^9}, 3.6392850696352654`*^9, 3.6393074811878157`*^9, 
   3.6393082596389055`*^9, 3.6393185483597264`*^9, {3.6393639440581245`*^9, 
   3.6393639831081796`*^9}, {3.639475083325428*^9, 3.639475130205494*^9}, {
   3.639475223455624*^9, 3.639475224115625*^9}, {3.639475441265929*^9, 
   3.6394754616959577`*^9}, {3.6395409061289473`*^9, 
   3.6395409063889475`*^9}, {3.639541583829896*^9, 3.6395416040499244`*^9}, 
   3.639556400369923*^9, {3.6395572224219418`*^9, 3.6395572228049636`*^9}, 
   3.6395573902595415`*^9, {3.6395576146783776`*^9, 3.639557633689465*^9}, {
   3.63965695086931*^9, 3.63965697219934*^9}, {3.6396570121593957`*^9, 
   3.6396571188005447`*^9}, {3.639657310850814*^9, 3.639657312240816*^9}, {
   3.6396577575614395`*^9, 3.639657766801452*^9}, 3.639657831001542*^9, {
   3.639657939021693*^9, 3.6396579749617434`*^9}, {3.6397976112285156`*^9, 
   3.639797629382554*^9}, {3.639797683378642*^9, 3.6397976837526636`*^9}, 
   3.639797759463994*^9, 3.639828635639191*^9, {3.6398288834595385`*^9, 
   3.639828885419541*^9}, {3.6398289349496107`*^9, 3.639828954679638*^9}, {
   3.639828998299699*^9, 3.6398290210697308`*^9}, 3.639906568307811*^9, {
   3.6399940549713025`*^9, 3.63999406082131*^9}, {3.639994701552208*^9, 
   3.639994704252211*^9}, {3.6399999976801214`*^9, 3.6400000340301723`*^9}, {
   3.64000017517037*^9, 3.64000017555037*^9}, 3.640000281890519*^9, {
   3.6400567732382507`*^9, 3.640056775900403*^9}, {3.6402504715343685`*^9, 
   3.6402504976938643`*^9}, {3.640250544075517*^9, 3.64025054569361*^9}, {
   3.640250677216132*^9, 3.640250677593154*^9}, 3.640251074148836*^9, 
   3.6402610098919516`*^9, {3.6404224554518127`*^9, 3.64042249859328*^9}, {
   3.6404228108241386`*^9, 3.6404228112211614`*^9}, 3.64042312345002*^9, 
   3.640436070916915*^9, {3.6404972105859985`*^9, 3.64049721879601*^9}, 
   3.6405188918733497`*^9, {3.6405788392820396`*^9, 3.6405788484020524`*^9}, {
   3.640578966102217*^9, 3.640579054482341*^9}, {3.6405791186924305`*^9, 
   3.64057913255245*^9}, {3.6405957185898237`*^9, 3.64059573030984*^9}, 
   3.640595808039949*^9, 3.6405966284610977`*^9, 3.6405997325121636`*^9, {
   3.6405997674622126`*^9, 3.6405997682422137`*^9}, {3.640601119875106*^9, 
   3.640601127525117*^9}, {3.6406018171823707`*^9, 3.640601817962372*^9}, 
   3.6406126281233034`*^9, 3.6406126699133625`*^9, {3.64069794659145*^9, 
   3.6406979988115234`*^9}, {3.6406980482596607`*^9, 3.640698048631682*^9}, 
   3.640699189934637*^9, 3.640950046831174*^9, {3.6409503468015933`*^9, 
   3.6409503593316107`*^9}, 3.641007954919871*^9, {3.6410088175954127`*^9, 
   3.641008878385498*^9}, {3.6410137850177717`*^9, 3.6410137854177947`*^9}, 
   3.6410138757769628`*^9, {3.641013980028926*^9, 3.641014016695023*^9}, 
   3.6410917572051344`*^9, {3.641092872936696*^9, 3.6410928992467337`*^9}, {
   3.641092965786826*^9, 3.6410929661468267`*^9}, 3.64109329444534*^9, 
   3.6410936027457714`*^9, 3.6410942667067013`*^9, {3.6410943009367495`*^9, 
   3.6410943218667784`*^9}, {3.641120645997161*^9, 3.641120681427211*^9}, 
   3.641122877761286*^9, {3.641297557235731*^9, 3.6412975579157324`*^9}, {
   3.641297605295799*^9, 3.64129765625587*^9}, {3.6412977215559616`*^9, 
   3.641297721925962*^9}, 3.641297937146263*^9, {3.641298054776428*^9, 
   3.641298055146428*^9}, {3.641298155516569*^9, 3.6412982313476753`*^9}, 
   3.641303971922675*^9, {3.641304528333454*^9, 3.6413045308034573`*^9}, 
   3.6413067330411515`*^9, {3.6413068685813413`*^9, 3.6413068979113827`*^9}, {
   3.641373883988661*^9, 3.6413739128187013`*^9}, {3.6413741901390896`*^9, 
   3.6413741905190897`*^9}, 3.641374459999467*^9, 3.6413767406732016`*^9, 
   3.6413816968541403`*^9, {3.641384465784052*^9, 3.6413844661440525`*^9}, {
   3.6413845032941046`*^9, 3.6413845298341417`*^9}, {3.641384580254212*^9, 
   3.6413845806642127`*^9}, 3.6413850295648413`*^9, 3.6414425892333946`*^9, {
   3.6416388111699905`*^9, 3.6416388134599934`*^9}, 3.64163904664032*^9, {
   3.641640527463393*^9, 3.6416405297433963`*^9}, {3.6416405743634586`*^9, 
   3.6416406033335*^9}, {3.6416406388735495`*^9, 3.64164063926355*^9}, 
   3.6416408012837763`*^9, 3.6416408783438845`*^9, 3.641700371772735*^9, 
   3.6417019533349495`*^9, {3.641731189630559*^9, 3.6417312765765324`*^9}, {
   3.641731417149573*^9, 3.641731444234122*^9}, {3.641731532094147*^9, 
   3.641731532426166*^9}, {3.6417316176850424`*^9, 3.6417316410493793`*^9}, {
   3.6417317595111547`*^9, 3.641731761671278*^9}, {3.6417319615487103`*^9, 
   3.641731984480022*^9}, {3.641805928973712*^9, 3.641805951763744*^9}, {
   3.6418074304678965`*^9, 3.6418074400074425`*^9}, 3.6418810435754285`*^9, 
   3.6418817207463765`*^9, 3.6418828148679085`*^9, {3.641884167093755*^9, 
   3.641884179423772*^9}, {3.641900196005859*^9, 3.641900238195918*^9}, {
   3.641900320586033*^9, 3.641900320966034*^9}, 3.6419007248105993`*^9, {
   3.6421574910667167`*^9, 3.64215755783681*^9}, 3.6421577014670115`*^9, {
   3.6421582246877437`*^9, 3.6421582282977486`*^9}, {3.6421582951478424`*^9, 
   3.642158397377986*^9}, {3.642158427538028*^9, 3.642158446978055*^9}, {
   3.642163315706283*^9, 3.6421633590363436`*^9}, {3.642163430056443*^9, 
   3.642163467276495*^9}, {3.6421635479866085`*^9, 3.642163548296609*^9}, {
   3.6421643288577013`*^9, 3.6421643350477104`*^9}, 3.6422322158215494`*^9, {
   3.6422327276722665`*^9, 3.64223275885231*^9}, 3.6422395859078684`*^9, 
   3.6423076811242065`*^9, {3.642325334961255*^9, 3.64232533556629*^9}, 
   3.64232537438251*^9, {3.642325425719446*^9, 3.6423254534620333`*^9}, {
   3.6423277542836328`*^9, 3.6423277571427965`*^9}, 3.642410911885744*^9, {
   3.64655092087607*^9, 3.646550921246071*^9}, {3.646550994846174*^9, 
   3.6465510090461936`*^9}, 3.646551041426239*^9, 3.646551096336316*^9, {
   3.6465512346165094`*^9, 3.6465512804265738`*^9}, {3.646572862699093*^9, 
   3.6465728868691273`*^9}, {3.646572964079235*^9, 3.646572966209238*^9}, 
   3.646573726030302*^9, {3.6466452635980206`*^9, 3.6466453034980764`*^9}, {
   3.6466454287282515`*^9, 3.6466454291482525`*^9}, 3.646646173861326*^9, {
   3.646722658048401*^9, 3.646722663478409*^9}, {3.646722711448476*^9, 
   3.6467227154884815`*^9}, {3.6470969645742674`*^9, 3.647096986874299*^9}, 
   3.6471706151544952`*^9, {3.6471721398013353`*^9, 3.6471721425224915`*^9}, 
   3.647228989935875*^9, {3.64723001697912*^9, 3.6472300229174595`*^9}, 
   3.647238724134688*^9, {3.6472441235063205`*^9, 3.6472441478263545`*^9}, {
   3.6472442180864525`*^9, 3.6472442184564533`*^9}, 3.647244632126281*^9, 
   3.6472461653784275`*^9, {3.6472591644021206`*^9, 3.647259164682121*^9}, {
   3.6472592726122723`*^9, 3.64725929978231*^9}, {3.64725952850263*^9, 
   3.6472595514026623`*^9}, {3.64731612118255*^9, 3.6473161535325956`*^9}, {
   3.647509932899453*^9, 3.6475099333694534`*^9}, 3.6475100258795834`*^9, {
   3.647510127069725*^9, 3.6475101714997873`*^9}, 3.647513833666938*^9, 
   3.6475176845509663`*^9, {3.6475181365313363`*^9, 3.647518141897643*^9}, 
   3.647525947131173*^9, {3.6475262159512196`*^9, 3.647526241131255*^9}, 
   3.6475755898872194`*^9, 3.6476895382000875`*^9, {3.6478369142306414`*^9, 
   3.6478369145806417`*^9}, 3.6478369722507224`*^9, {3.6478370955008955`*^9, 
   3.6478371142209215`*^9}, {3.6478372615011272`*^9, 
   3.6478373094411945`*^9}, {3.648007133496387*^9, 3.648007174796445*^9}, {
   3.6480073095766335`*^9, 3.6480073099466343`*^9}, 3.648007670545556*^9, {
   3.6480336029114847`*^9, 3.6480336351073265`*^9}, 3.6480337082985125`*^9, {
   3.648033744035557*^9, 3.6480337443405743`*^9}, {3.648034167159758*^9, 
   3.6480341943363123`*^9}, 3.6480345148606453`*^9, {3.6480417609591475`*^9, 
   3.648041761949149*^9}, {3.648117492613061*^9, 3.648117494446166*^9}, {
   3.648521504545041*^9, 3.648521504915042*^9}, {3.648521593085165*^9, 
   3.648521663865264*^9}, {3.6485216999053144`*^9, 3.6485217284853544`*^9}, {
   3.6485533213961544`*^9, 3.6485533222561555`*^9}, {3.6485586713516884`*^9, 
   3.6485586963117237`*^9}, {3.648558754501805*^9, 3.6485587549218054`*^9}, 
   3.6485590567313275`*^9, {3.6486311980053854`*^9, 3.648631198299402*^9}, {
   3.6486312303412347`*^9, 3.648631255048648*^9}, {3.6486313572094913`*^9, 
   3.648631367973107*^9}, {3.6486323451950006`*^9, 3.6486323547545476`*^9}, 
   3.6486394542621565`*^9, 3.6486410102244897`*^9, {3.6487257273703737`*^9, 
   3.64872572765939*^9}, {3.648725765882576*^9, 3.6487257891959095`*^9}, {
   3.6487258413298917`*^9, 3.648725841699913*^9}, 3.648726180519292*^9, {
   3.648889248052356*^9, 3.6488892814134026`*^9}, {3.648889345523493*^9, 
   3.648889345903493*^9}, 3.6488902446893387`*^9, {3.648890321811982*^9, 
   3.6488903246419864`*^9}, {3.648890477933201*^9, 3.648890487263214*^9}, {
   3.648890565693324*^9, 3.6488905854333515`*^9}, {3.6490636965495315`*^9, 
   3.649063699909536*^9}, {3.6490641682901917`*^9, 3.6490641887902203`*^9}, {
   3.6490644182305417`*^9, 3.6490644185005417`*^9}, {3.6490644651606073`*^9, 
   3.649064527040694*^9}, {3.649065533982104*^9, 3.649065546812122*^9}, {
   3.6491553485030684`*^9, 3.649155348833069*^9}, {3.649155401673143*^9, 
   3.64915542837318*^9}, {3.6491554593832235`*^9, 3.649155459773224*^9}, 
   3.649156233635309*^9, {3.6492424232331533`*^9, 3.6492424234621663`*^9}, {
   3.64924253402549*^9, 3.6492425540586357`*^9}, {3.6492426070266657`*^9, 
   3.649242607389686*^9}, {3.649242986685381*^9, 3.64924309244443*^9}, {
   3.6493252264050922`*^9, 3.649325230369319*^9}, {3.6493255554131193`*^9, 
   3.649325556943122*^9}, 3.6493261794339933`*^9, {3.6494064868593645`*^9, 
   3.6494065150894036`*^9}, {3.649406742949723*^9, 3.649406743349723*^9}, 
   3.6494087241525373`*^9, {3.6494097683139987`*^9, 3.6494097785140133`*^9}, {
   3.649507882852772*^9, 3.6495078985236683`*^9}, {3.649667587855795*^9, 
   3.649667629545853*^9}, {3.6496678546861687`*^9, 3.649667854966169*^9}, {
   3.6496704760118384`*^9, 3.6496704776018405`*^9}, {3.6496718035964546`*^9, 
   3.6496718761765566`*^9}, {3.6496719063465986`*^9, 3.649672003856735*^9}, {
   3.649672244227072*^9, 3.649672358267231*^9}, {3.6496723962472844`*^9, 
   3.6496724158273115`*^9}, 3.6496724565573688`*^9, 3.649672660657655*^9, {
   3.6496727112577257`*^9, 3.6496727532877846`*^9}, {3.649752685924882*^9, 
   3.649752697204897*^9}, {3.649754289096591*^9, 3.6497543070366163`*^9}, 
   3.649852801799918*^9, {3.6498602607729416`*^9, 3.649860283432973*^9}, {
   3.649908780547047*^9, 3.6499087808270473`*^9}, 3.6499095319612007`*^9, {
   3.6499095656212473`*^9, 3.6499096149113164`*^9}, {3.6499097307514787`*^9, 
   3.649909733371482*^9}, 3.64991044900488*^9, {3.6499104850949306`*^9, 
   3.649910487564934*^9}, {3.6499277844624987`*^9, 3.6499277847524996`*^9}, 
   3.6499281904043045`*^9, {3.64992833662451*^9, 3.649928381714573*^9}, {
   3.6499921969052167`*^9, 3.649992221985252*^9}, {3.649992269115318*^9, 
   3.6499922753453264`*^9}, {3.6499923053453684`*^9, 3.649992414675522*^9}, {
   3.6500261086453457`*^9, 3.650026159515417*^9}, {3.6500262006454744`*^9, 
   3.650026208385485*^9}, {3.6500262391955285`*^9, 3.6500262394755287`*^9}, 
   3.6500267821673465`*^9, {3.650080145153137*^9, 3.6500801716631746`*^9}, {
   3.650080291603342*^9, 3.6500802918933425`*^9}, 3.650080809428114*^9, {
   3.650196292863265*^9, 3.6501963012832766`*^9}, 3.6501965185091515`*^9, {
   3.6501965804146924`*^9, 3.6501965806237044`*^9}, {3.650196627928793*^9, 
   3.650196662248841*^9}, 3.6502586757794867`*^9, {3.650258708639533*^9, 
   3.6502587124395385`*^9}, 3.6502720958895435`*^9, 3.650273267131183*^9, {
   3.650285746919605*^9, 3.6502857471696053`*^9}, {3.6502857828996553`*^9, 
   3.6502858268358517`*^9}, 3.650287335481239*^9, 3.6502874804314413`*^9, 
   3.650359279294649*^9, 3.6503608991469164`*^9, 3.6503616911911945`*^9, {
   3.65036189077061*^9, 3.6503618910876274`*^9}, 3.6503620232761884`*^9, {
   3.650362107471737*^9, 3.650362139861782*^9}, {3.650362198041864*^9, 
   3.650362200951868*^9}, {3.6504233649637194`*^9, 3.650423385503748*^9}, {
   3.650423427883807*^9, 3.650423435443818*^9}, 3.650424244197525*^9, {
   3.6504423194290667`*^9, 3.650442319769067*^9}, {3.650442356389118*^9, 
   3.6504423838491564`*^9}, 3.650442576419426*^9, {3.6504437549410763`*^9, 
   3.6504437553510766`*^9}, 3.6504467857754745`*^9, 3.6504476283574452`*^9, {
   3.650599845166031*^9, 3.650599897276104*^9}, {3.6505999524461813`*^9, 
   3.6505999675862026`*^9}, {3.6506000710463476`*^9, 
   3.6506000712863483`*^9}, {3.650600103986394*^9, 3.6506001267764254`*^9}, {
   3.6506002821066427`*^9, 3.6506002823866434`*^9}, {3.6506004467368736`*^9, 
   3.650600464436898*^9}, {3.6506034178164883`*^9, 3.650603448516531*^9}, {
   3.650713024437604*^9, 3.6507130270584087`*^9}, 3.650718372094669*^9, {
   3.6507933936594124`*^9, 3.6507934097603335`*^9}, 3.650891206219761*^9, {
   3.6508922804891157`*^9, 3.6508923029191475`*^9}, {3.650973365249627*^9, 
   3.6509733878196588`*^9}, {3.6509737841702137`*^9, 
   3.6509737858002157`*^9}, {3.65097392452041*^9, 3.6509739249404106`*^9}, 
   3.650974068160611*^9, {3.6509741753912144`*^9, 3.6509742092081485`*^9}, {
   3.650974254323946*^9, 3.650974272903972*^9}, {3.650975352815484*^9, 
   3.6509753758955164`*^9}, {3.6509787708893957`*^9, 3.650978771149396*^9}, {
   3.6509788533695107`*^9, 3.6509788798495483`*^9}, {3.6509820389039707`*^9, 
   3.650982039203971*^9}, 3.6509831771546535`*^9, 3.651116810933518*^9, {
   3.651117247739502*^9, 3.6511172605382338`*^9}, 3.6512063058526363`*^9, {
   3.6513747904271603`*^9, 3.651374815527195*^9}, {3.651375577388262*^9, 
   3.651375579698265*^9}, 3.651481982593752*^9, {3.651482176314023*^9, 
   3.6514822833541727`*^9}, {3.6514916583549547`*^9, 3.651491708225024*^9}, {
   3.6514966538649473`*^9, 3.6514966783549814`*^9}, {3.651497363650996*^9, 
   3.6514973724224977`*^9}, {3.6514974043681316`*^9, 3.6514974049381323`*^9}, 
   3.651497976858933*^9, {3.6515496912551003`*^9, 3.651549692575102*^9}, {
   3.6516527780066853`*^9, 3.6516527783066854`*^9}, 3.6516529282968955`*^9, {
   3.6516529867669773`*^9, 3.651653010697011*^9}, 3.6516535320377407`*^9, 
   3.651670661880745*^9, {3.6517470590643625`*^9, 3.651747072744382*^9}, 
   3.6518342432063875`*^9, 3.651893716958056*^9, 3.651896870949767*^9, {
   3.651900056053485*^9, 3.65190008095352*^9}, {3.651900149463616*^9, 
   3.651900149873616*^9}, 3.651920134336378*^9, {3.6519201773864384`*^9, 
   3.6519201862164507`*^9}, {3.6519812917803335`*^9, 3.6519813101203594`*^9}, 
   3.6519813411304026`*^9, 3.651981385030464*^9, {3.6519831089572477`*^9, 
   3.6519831093172483`*^9}, 3.6519832058717613`*^9, {3.652003418485737*^9, 
   3.6520034189257374`*^9}, 3.652003526345888*^9, {3.652003579396962*^9, 
   3.6520036255070267`*^9}, 3.6521820505599003`*^9, {3.652266659211549*^9, 
   3.65226670973162*^9}, {3.652266904491892*^9, 3.6522669053718934`*^9}, {
   3.652267370109762*^9, 3.652267405170768*^9}, {3.652268711280012*^9, 
   3.6522687154700184`*^9}, {3.6523324307233663`*^9, 3.652332487513446*^9}, {
   3.652332557563544*^9, 3.652332557883544*^9}, 3.652332665453695*^9, 
   3.6524142704471235`*^9, {3.652531208730466*^9, 3.6525312090004816`*^9}, {
   3.6525312435304565`*^9, 3.652531268673895*^9}, {3.6525313834914618`*^9, 
   3.6525313839424877`*^9}, 3.6525315315759315`*^9, {3.652615781109903*^9, 
   3.652615789149914*^9}, 3.652618983514386*^9, {3.6526742556232057`*^9, 
   3.652674309473281*^9}, {3.6528467729592676`*^9, 3.6528468174893303`*^9}, {
   3.6528476555877666`*^9, 3.652847663087777*^9}, {3.6528480221282797`*^9, 
   3.652848023598282*^9}, {3.652848707300239*^9, 3.6528487115702453`*^9}, {
   3.652848756440308*^9, 3.6528487591203117`*^9}, 3.6528667227192173`*^9, 
   3.6528690902855344`*^9, {3.652879041829875*^9, 3.6528790764999237`*^9}, 
   3.652879185370076*^9, {3.6528796936807876`*^9, 3.652879707470807*^9}, {
   3.6528797466508617`*^9, 3.652879765380888*^9}, {3.652965508310711*^9, 
   3.6529655510007706`*^9}, {3.6529657693710775`*^9, 3.652965769761078*^9}, {
   3.6529659664213533`*^9, 3.6529659788013706`*^9}, {3.6529661058615484`*^9, 
   3.652966107811551*^9}, {3.6533079056940465`*^9, 3.6533079066840477`*^9}, {
   3.653307959634122*^9, 3.6533079833841553`*^9}, {3.653308017844203*^9, 
   3.6533080188242044`*^9}, 3.6533081509043894`*^9, {3.6533083673146925`*^9, 
   3.653308382674714*^9}, {3.6534679956892853`*^9, 3.6534679960592856`*^9}, 
   3.653468071399391*^9, {3.6534681150894527`*^9, 3.6534681153694525`*^9}, {
   3.6534681594095144`*^9, 3.6534681917795596`*^9}, {3.653648057383848*^9, 
   3.6536480875035715`*^9}, {3.6536481294649715`*^9, 3.653648152669298*^9}, {
   3.6536534367864375`*^9, 3.653653439496441*^9}, {3.653653911453588*^9, 
   3.653653915416815*^9}, {3.653827568285866*^9, 3.6538275685458665`*^9}, {
   3.6538276673560047`*^9, 3.6538277418861094`*^9}, {3.6540000403881273`*^9, 
   3.6540000421581297`*^9}, {3.65400007852818*^9, 3.6540001006182117`*^9}, {
   3.654000365258582*^9, 3.654000373148593*^9}, 3.654080893812194*^9, 
   3.6541639785141625`*^9, 3.6541640236142254`*^9, 3.6541646926261635`*^9, {
   3.6543160564199047`*^9, 3.654316093669035*^9}, 3.654316145940025*^9, {
   3.6543290224155335`*^9, 3.6543290226755342`*^9}, {3.654329056675582*^9, 
   3.6543290806056147`*^9}, {3.654329228335822*^9, 3.654329228605822*^9}, 
   3.65432929112591*^9, {3.654422158242426*^9, 3.654422160257541*^9}, 
   3.6544222200709624`*^9, {3.654517102287841*^9, 3.654517103097842*^9}, {
   3.6545172658180695`*^9, 3.654517328398157*^9}, 3.6545759283615203`*^9, {
   3.6546614144903708`*^9, 3.654661414880371*^9}, {3.654682937001407*^9, 
   3.654682949215106*^9}, {3.654685689107991*^9, 3.6546857194380336`*^9}, 
   3.654750006023559*^9, 3.6547502717339315`*^9, {3.6547512004715767`*^9, 
   3.6547512355616255`*^9}, {3.6547516423721952`*^9, 3.654751652332209*^9}, 
   3.654785848986745*^9, 3.654786501977659*^9, 3.654835776251175*^9, {
   3.654868541239399*^9, 3.6548685691194377`*^9}, {3.654868662889569*^9, 
   3.6548686632995696`*^9}, 3.6548687587097034`*^9, 3.6549436655980706`*^9, {
   3.6549437068081284`*^9, 3.6549437260681553`*^9}, {3.6550387374443703`*^9, 
   3.655038795764452*^9}, {3.6550388790745687`*^9, 3.6550389063946066`*^9}, {
   3.6550391419049363`*^9, 3.6550391431149383`*^9}, 3.65509822967097*^9, 
   3.6550984003112087`*^9, 3.6550989844620266`*^9, {3.6550994338597074`*^9, 
   3.6550994387797146`*^9}, {3.655099606199949*^9, 3.6550996403199964`*^9}, 
   3.655099786500201*^9, 3.6551009064727707`*^9, 3.655117892295994*^9, {
   3.6551184765168114`*^9, 3.6551184847468233`*^9}, 3.655126432643251*^9, 
   3.6551273144844856`*^9, 3.6551281903357115`*^9, {3.6551317255741186`*^9, 
   3.655131746394148*^9}, {3.6551318303142653`*^9, 3.655131830754266*^9}, 
   3.6551321837228146`*^9, 3.6552113955706177`*^9, 3.6552653724033885`*^9, {
   3.65526557309367*^9, 3.6552655806936803`*^9}, {3.6552656303637495`*^9, 
   3.6552656360037575`*^9}, {3.6552656668438005`*^9, 3.655265701413849*^9}, {
   3.6552657439239087`*^9, 3.655265767113941*^9}, {3.6552659164841504`*^9, 
   3.655265916864151*^9}, {3.6552663289227805`*^9, 3.6552663329527864`*^9}, 
   3.6552664598129635`*^9, {3.6552675962075424`*^9, 3.655267603887553*^9}, 
   3.6552682032983923`*^9, {3.655268417603715*^9, 3.6552685580539117`*^9}, {
   3.6552873009074364`*^9, 3.655287335077484*^9}, {3.655287659317938*^9, 
   3.65528766023794*^9}, {3.655288403162284*^9, 3.6552884731723814`*^9}, 
   3.6552897773652077`*^9, {3.655298899656911*^9, 3.6552989613969975`*^9}, 
   3.6552998744102764`*^9, {3.6555627577851195`*^9, 3.655562800435179*^9}, {
   3.655562953305393*^9, 3.6555629535653934`*^9}, {3.655562995125452*^9, 
   3.655563026135495*^9}, 3.6556152070789304`*^9, {3.6556158933898916`*^9, 
   3.6556158962698956`*^9}, {3.655616870166086*^9, 3.655616882136103*^9}, {
   3.6556184020643587`*^9, 3.655618402384359*^9}, 3.6556184719944563`*^9, {
   3.6556333452157416`*^9, 3.655633411355834*^9}, {3.6556336365661497`*^9, 
   3.6556336368961496`*^9}, {3.6556337844763565`*^9, 3.655633804976385*^9}, 
   3.655697647792776*^9, 3.6556995178653955`*^9, 3.655700084076188*^9, 
   3.6557198141392727`*^9, {3.6557268010544457`*^9, 3.655726805429696*^9}, 
   3.6557268725255337`*^9, {3.6557271057978764`*^9, 3.6557271097751036`*^9}, {
   3.6557852831499414`*^9, 3.6557853015999675`*^9}, {3.6557898515104055`*^9, 
   3.655789928430513*^9}, {3.6558046801932316`*^9, 3.6558046843932376`*^9}, 
   3.6558047238132925`*^9, {3.655805503254384*^9, 3.6558055219444103`*^9}, {
   3.655805824794834*^9, 3.655805829874841*^9}, {3.655806479775751*^9, 
   3.655806492175769*^9}, {3.6559041025665784`*^9, 3.6559041072165847`*^9}, {
   3.655904308493292*^9, 3.6559044059434285`*^9}, {3.6559068013736057`*^9, 
   3.6559068065436134`*^9}, 3.655907821655034*^9, {3.655907888845128*^9, 
   3.655907902975148*^9}, {3.655907946585209*^9, 3.6559079515752163`*^9}, 
   3.655908472600786*^9, {3.6559817561903853`*^9, 3.6559818077304573`*^9}, {
   3.6559819892607117`*^9, 3.655981989590712*^9}, 3.6559824397423425`*^9, {
   3.655983250143697*^9, 3.6559832582437077`*^9}, {3.656154889675291*^9, 
   3.6561548899952917`*^9}, 3.6561550465755105`*^9, {3.6561550935155764`*^9, 
   3.656155132725631*^9}, {3.656389978500035*^9, 3.6563900263001018`*^9}, 
   3.6563901625602922`*^9, {3.6564200509059315`*^9, 3.65642005706594*^9}, {
   3.6564205311446342`*^9, 3.656420533974638*^9}, {3.6564242460228353`*^9, 
   3.6564242464128356`*^9}, {3.6564243373229628`*^9, 
   3.6564244025240545`*^9}, {3.65658533522227*^9, 3.6565854334324074`*^9}, {
   3.656585537782553*^9, 3.6565855382025537`*^9}, 3.656585681852755*^9, {
   3.656585743502841*^9, 3.6565857841528983`*^9}, {3.656739060541765*^9, 
   3.6567390608517656`*^9}, {3.656739140342877*^9, 3.656739202482964*^9}, {
   3.656739238293014*^9, 3.6567392421830196`*^9}, 3.6568236840979714`*^9, {
   3.6568253200935736`*^9, 3.6568253718936462`*^9}, 3.656826013824545*^9, {
   3.6568277821170206`*^9, 3.6568277825270214`*^9}, 3.6568402366821423`*^9, {
   3.6568495734367037`*^9, 3.656849574156705*^9}, {3.6568496958168755`*^9, 
   3.6568496967768764`*^9}, 3.6568522022047005`*^9, {3.656852266614791*^9, 
   3.656852299024836*^9}, {3.656857917761591*^9, 3.6568579183615923`*^9}, {
   3.656908663646499*^9, 3.6569086642265*^9}, 3.656910330048832*^9, 
   3.656911693866835*^9, 3.656943123681023*^9, 3.656948931179241*^9, {
   3.6569965748488693`*^9, 3.6569965964389*^9}, {3.6569966703490033`*^9, 
   3.656996670759004*^9}, 3.6569969584884367`*^9, {3.657017824441038*^9, 
   3.657017829081045*^9}, {3.6570178629610925`*^9, 3.657017877591113*^9}, {
   3.657017985981265*^9, 3.657018028371324*^9}, 3.6570230285713243`*^9, {
   3.6571083292581997`*^9, 3.657108329553217*^9}, {3.6571083629591274`*^9, 
   3.6571083883912983`*^9}, {3.6571084993314533`*^9, 3.6571085003814545`*^9}, 
   3.657108713601753*^9, {3.6571087723118353`*^9, 3.65710878224185*^9}, {
   3.657108833141921*^9, 3.657108836921926*^9}, {3.657108872541976*^9, 
   3.6571088807219877`*^9}, {3.6571089118420305`*^9, 3.657108917372039*^9}, 
   3.6571094434427752`*^9, {3.6571111037958717`*^9, 3.657111136025917*^9}, {
   3.657111168735963*^9, 3.657111169185963*^9}, {3.657111356036225*^9, 
   3.657111356906226*^9}, {3.6571154509381685`*^9, 3.6571154517181697`*^9}, 
   3.657116754260994*^9, 3.6571724041822767`*^9, {3.6571728026128345`*^9, 
   3.657172803052835*^9}, {3.657193050451384*^9, 3.6571930551013904`*^9}, {
   3.6572031053629994`*^9, 3.657203106383001*^9}, {3.6572032413531895`*^9, 
   3.657203292193261*^9}, {3.657257664239008*^9, 3.6572576645590076`*^9}, 
   3.6572577325491033`*^9, {3.657257943739399*^9, 3.657257967649432*^9}, {
   3.6572720373563595`*^9, 3.6572720640163965`*^9}, {3.65734091167546*^9, 
   3.657340942995504*^9}, {3.6573410043755903`*^9, 3.657341009415597*^9}, 
   3.657341684336542*^9, 3.657344546484106*^9, {3.657361288331314*^9, 
   3.6573613011013317`*^9}, {3.657362350252801*^9, 3.6573623523028035`*^9}, {
   3.657362390162857*^9, 3.6573623994128695`*^9}, {3.6573624315729146`*^9, 
   3.6573624413629284`*^9}, 3.6573625470430765`*^9, 3.6573626431932106`*^9, 
   3.65736291405359*^9, {3.6573701253050437`*^9, 3.657370143155069*^9}, {
   3.6573720706577673`*^9, 3.6573720836677856`*^9}, 3.6573722970980844`*^9, 
   3.657376009065281*^9, 3.657446565415879*^9, 3.657446935656397*^9, 
   3.6574480355479374`*^9, 3.6574590054278183`*^9, 3.657462926731642*^9, {
   3.6574629703117027`*^9, 3.6574629752317095`*^9}, 3.657518803585985*^9, 
   3.657520876368887*^9, 3.657533332948111*^9, 3.6576266792078633`*^9, {
   3.6576903414024615`*^9, 3.6576903434024644`*^9}, 3.6576903979625406`*^9, {
   3.6577138021235375`*^9, 3.6577138024035378`*^9}, {3.6577138878436575`*^9, 
   3.6577139262437115`*^9}, {3.6577140919939437`*^9, 3.657714092403944*^9}, 
   3.6577150831763315`*^9, 3.657777564900367*^9, {3.657795163937826*^9, 
   3.6577951660378294`*^9}, 3.657795693478568*^9, {3.657796055049074*^9, 
   3.6577960555690746`*^9}, 3.6578040125390635`*^9, 3.6578821909988623`*^9, 
   3.65796111521817*^9, 3.6579712184418383`*^9, 3.6579727077139235`*^9, 
   3.657974725796749*^9, {3.6579878856320887`*^9, 3.6579879248121433`*^9}, 
   3.658123732825221*^9, 3.658136827906983*^9, {3.6581452759838305`*^9, 
   3.6581452807838373`*^9}, {3.6581453235038967`*^9, 
   3.6581453239038973`*^9}, {3.658145803174568*^9, 3.6581458114545803`*^9}, 
   3.658146016464867*^9, {3.6581460659349365`*^9, 3.658146113395003*^9}, {
   3.658146231575168*^9, 3.6581462345451727`*^9}, {3.658146293565255*^9, 
   3.658146333335311*^9}, {3.658147602837088*^9, 3.6581476048670907`*^9}, {
   3.6581486337085314`*^9, 3.658148644478546*^9}, {3.658148738468678*^9, 
   3.6581487459686885`*^9}, 3.6581489174789286`*^9, {3.658228462019184*^9, 
   3.658228472309199*^9}, 3.6582324454247613`*^9, {3.6582333342260056`*^9, 
   3.6582333406760144`*^9}, 3.658240536136088*^9, 3.658295181017645*^9, 
   3.6582966788249702`*^9, 3.658330393616641*^9, 3.6583832090532875`*^9, 
   3.6584008185251184`*^9, 3.658401394105924*^9, {3.658552457008295*^9, 
   3.6585524580082965`*^9}, 3.658552520708384*^9, {3.6585528195807085`*^9, 
   3.658552821487818*^9}, {3.658552855125513*^9, 3.6585528554355135`*^9}, {
   3.658552885575556*^9, 3.658552909155589*^9}, 3.658572103819895*^9, {
   3.658575230089324*^9, 3.6585752825593977`*^9}, 3.658575776501089*^9, 
   3.6585920733084598`*^9, 3.6586394331238503`*^9, {3.658639467813899*^9, 
   3.6586394681738997`*^9}, {3.658639501473946*^9, 3.65863952547398*^9}, {
   3.6586396360341344`*^9, 3.6586396364841347`*^9}, 3.6586400876957664`*^9, 
   3.6586578679383636`*^9, {3.658660313032646*^9, 3.6586603159626503`*^9}, {
   3.658672335010455*^9, 3.658672335440456*^9}, 3.658672456910626*^9, {
   3.6586727308820095`*^9, 3.65867273119201*^9}, {3.6586727648020573`*^9, 
   3.658672786982088*^9}, {3.658728697937137*^9, 3.658728718037165*^9}, {
   3.658729462178207*^9, 3.6587294653082113`*^9}, {3.658832716772524*^9, 
   3.658832764932591*^9}, {3.6588398185870275`*^9, 3.658839818947028*^9}, 
   3.658839938927196*^9, 3.6589286547685843`*^9, {3.6589813029482384`*^9, 
   3.6589813374782867`*^9}, {3.6589813916683626`*^9, 
   3.6589813920683627`*^9}, {3.6589818751900396`*^9, 3.6589818948100667`*^9}, 
   3.658982067620309*^9, {3.6589821614204397`*^9, 3.6589822053705015`*^9}, {
   3.6590049831559277`*^9, 3.659005048186019*^9}, 3.6591054283422556`*^9, {
   3.6591867940388803`*^9, 3.6591867986888866`*^9}, {3.659188080330681*^9, 
   3.659188084640687*^9}, 3.659188590581395*^9, {3.659189145392172*^9, 
   3.6591891467621737`*^9}, 3.6591893171724124`*^9, {3.6591924160701356`*^9, 
   3.659192421300143*^9}, 3.6592463025595465`*^9, 3.659272260346242*^9, 
   3.6593452530376263`*^9, 3.65934528431767*^9, {3.659345317207716*^9, 
   3.6593453252077274`*^9}, 3.6593529997548323`*^9, {3.659355124267806*^9, 
   3.659355127567811*^9}, {3.659357671095587*^9, 3.6593576928456173`*^9}, 
   3.659357785635747*^9, {3.6593578828058834`*^9, 3.659357934075955*^9}, 
   3.659359523958181*^9, 3.659362408572219*^9, {3.659363368833564*^9, 
   3.6593633770935755`*^9}, 3.659368385720662*^9, {3.65936892044141*^9, 
   3.659368925451418*^9}, 3.659416597727129*^9, 3.6595052132643256`*^9, {
   3.659515912497892*^9, 3.6595159274679127`*^9}, 3.6595206292654953`*^9, {
   3.6595213596265182`*^9, 3.65952136843653*^9}, 3.6595362768262987`*^9, 
   3.659537031377355*^9, 3.6595372599776754`*^9, {3.659537505458019*^9, 
   3.65953750620802*^9}, {3.6597085741978316`*^9, 3.659708579377839*^9}, {
   3.6597086908679953`*^9, 3.659708695668002*^9}, {3.659712517993353*^9, 
   3.6597125317733727`*^9}, {3.6597129047838945`*^9, 
   3.6597129103539023`*^9}, {3.6597132328443537`*^9, 
   3.6597132381543612`*^9}, {3.6597132791644187`*^9, 
   3.6597132867844296`*^9}, {3.65976523165985*^9, 3.6597652371598577`*^9}, {
   3.6597776863556423`*^9, 3.659777697515658*^9}, 3.659871807313266*^9, {
   3.659956937132502*^9, 3.659956941992509*^9}, {3.659960897204784*^9, 
   3.6599609254948235`*^9}, {3.660108739781548*^9, 3.6601087506415634`*^9}, 
   3.660300620798929*^9, {3.6603910535677223`*^9, 3.6603910691677437`*^9}, {
   3.660391106937797*^9, 3.6603911399378433`*^9}, {3.6603913760581737`*^9, 
   3.660391404768214*^9}, {3.66039164478855*^9, 3.6603916535985622`*^9}, {
   3.660394421189826*^9, 3.6603945706800356`*^9}, {3.6604035108603687`*^9, 
   3.6604035286903934`*^9}, {3.6604663580622067`*^9, 3.660466401142267*^9}, {
   3.6604664677723603`*^9, 3.660466501072407*^9}, {3.6604666706226444`*^9, 
   3.6604667278927245`*^9}, {3.6604787786039276`*^9, 3.660478782313933*^9}, 
   3.660480379527169*^9, {3.6604811165082006`*^9, 3.6604811220582085`*^9}, {
   3.660568000056096*^9, 3.6605680251961308`*^9}, {3.6605680748962007`*^9, 
   3.6605680777962046`*^9}, {3.66056812461627*^9, 3.6605681538863115`*^9}, {
   3.6605683223965473`*^9, 3.660568391126643*^9}, {3.660570994900272*^9, 
   3.66057104335034*^9}, {3.660571129590461*^9, 3.660571171370519*^9}, {
   3.6606617554327316`*^9, 3.6606618148528147`*^9}, {3.6606619043257475`*^9, 
   3.660661940833835*^9}, 3.660739984038989*^9, 3.6607468602138615`*^9, {
   3.661334273012805*^9, 3.661334275452808*^9}, 3.6613344462230473`*^9, {
   3.66133449143311*^9, 3.6613345365331736`*^9}, {3.661408000921687*^9, 
   3.6614080101117*^9}, {3.6614290559771957`*^9, 3.661429069507215*^9}, {
   3.661429289557523*^9, 3.661429323847571*^9}, 3.6614294063476863`*^9, {
   3.661510332387269*^9, 3.6615103577773046`*^9}, {3.661510745314478*^9, 
   3.661510745761503*^9}, 3.6615108878576307`*^9, {3.661523563939389*^9, 
   3.66152356438939*^9}, {3.6615241661312323`*^9, 3.661524184541258*^9}, {
   3.6615243532614946`*^9, 3.661524391551548*^9}, 3.661581058645544*^9, {
   3.661605096139962*^9, 3.6616051211699977`*^9}, {3.661605295800242*^9, 
   3.6616052961302423`*^9}, 3.661605560800613*^9, {3.6616089519654293`*^9, 
   3.6616089844382863`*^9}, {3.6616934759978504`*^9, 
   3.6616935046878905`*^9}, {3.6616936496180935`*^9, 
   3.6616936545681005`*^9}, {3.661693731238208*^9, 3.6616937316782084`*^9}, 
   3.661693869128401*^9, 3.661785099651404*^9, {3.6618361348369465`*^9, 
   3.661836160606982*^9}, {3.6618362600971217`*^9, 3.661836260427122*^9}, {
   3.661836398767316*^9, 3.6618364053673253`*^9}, {3.661865418451687*^9, 
   3.661865454161737*^9}, {3.6618655087718134`*^9, 3.661865509221814*^9}, 
   3.66186572332489*^9, 3.661925256675329*^9, 3.6619400790167427`*^9, {
   3.6621345625761414`*^9, 3.662134562976142*^9}, {3.6621346404662504`*^9, 
   3.6621347101763477`*^9}, {3.6622092932541504`*^9, 3.662209293684151*^9}, {
   3.662209452684374*^9, 3.6622094824944153`*^9}, {3.662209517984465*^9, 
   3.6622095387244945`*^9}, {3.6622095846745586`*^9, 3.662209603664585*^9}, {
   3.6622991103626113`*^9, 3.662299110752612*^9}, {3.662299201502739*^9, 
   3.6622992611628227`*^9}, {3.662299340772934*^9, 3.66229941673304*^9}, 
   3.662299561674243*^9, 3.662353696236021*^9, 3.6623558565770683`*^9, {
   3.662356092394764*^9, 3.6623560936147656`*^9}, {3.662356888775025*^9, 
   3.662356895488409*^9}, {3.662358307654358*^9, 3.6623583088043594`*^9}, 
   3.66235842363452*^9, 3.6623799715422597`*^9, 3.662381926914997*^9, {
   3.662548580169869*^9, 3.6625485991379538`*^9}, {3.6625487100882998`*^9, 
   3.6625487105293255`*^9}, 3.6625487979443245`*^9, 3.6625597970735517`*^9, 
   3.6626146655101833`*^9, {3.662877185103129*^9, 3.662877187293132*^9}, {
   3.6628850723014207`*^9, 3.662885095941454*^9}, {3.662885153321534*^9, 
   3.662885153771535*^9}, {3.662885747365368*^9, 3.662885769515399*^9}, {
   3.6628858554555197`*^9, 3.6628858717855425`*^9}, 3.662886011795738*^9, {
   3.6628864549913874`*^9, 3.6628864577113914`*^9}, 3.662886540451507*^9, {
   3.6628866326816363`*^9, 3.6628866328716364`*^9}, {3.662886676811698*^9, 
   3.6628866994917297`*^9}, {3.6629608139453106`*^9, 
   3.6629608321553364`*^9}, {3.6629608718453918`*^9, 
   3.6629608725353928`*^9}, {3.6629788810127444`*^9, 3.662978881412745*^9}, {
   3.6629790061829195`*^9, 3.6629790484329786`*^9}, {3.6629897793081894`*^9, 
   3.6629897803781905`*^9}, 3.663051845201498*^9, {3.663060771392703*^9, 
   3.6630607736427064`*^9}, {3.663133925570328*^9, 3.663133952430366*^9}, {
   3.6631340711305323`*^9, 3.6631340716005325`*^9}, {3.6631341837006893`*^9, 
   3.663134247280779*^9}, {3.6631561191618195`*^9, 3.66315611959182*^9}, 
   3.663158088717581*^9, 3.6631582383477907`*^9, {3.6631584398880725`*^9, 
   3.6631584584680986`*^9}, {3.663158491488145*^9, 3.663158530398199*^9}, {
   3.66333241349081*^9, 3.6633324566608706`*^9}, {3.663332507130941*^9, 
   3.6633325082309427`*^9}, 3.6633326937112017`*^9, 3.6633327748113155`*^9, {
   3.663332816361374*^9, 3.663332822721383*^9}, {3.663332874031454*^9, 
   3.663332874471455*^9}, {3.6633329712915907`*^9, 3.6633330281016703`*^9}, 
   3.6633330720317316`*^9, {3.6633331358718214`*^9, 3.6633331772518787`*^9}, 
   3.6634097765300837`*^9, {3.6634099204302855`*^9, 3.663409933890304*^9}, 
   3.6634142542183495`*^9, {3.663416038942848*^9, 3.663416059852877*^9}, {
   3.6634750969752655`*^9, 3.6634751600653543`*^9}, {3.6634803609315696`*^9, 
   3.663480393361615*^9}, 3.6635066173278103`*^9, {3.663508753860564*^9, 
   3.66350878666061*^9}, 3.6635623811142936`*^9, 3.6635960978818502`*^9, 
   3.663653231114291*^9, {3.66373894761847*^9, 3.663738973058506*^9}, {
   3.663739039568599*^9, 3.6637390635486326`*^9}, 3.663754095629368*^9, 
   3.6637573689549503`*^9, {3.6638227835671625`*^9, 3.663822792027646*^9}, 
   3.66382525765333*^9, {3.6638258102441034`*^9, 3.6638258347641373`*^9}, 
   3.6638264660150213`*^9, {3.6638408816576815`*^9, 3.663840889997693*^9}, {
   3.6638409254877424`*^9, 3.6638409437177677`*^9}, 3.6638521935286465`*^9, {
   3.6638531319299603`*^9, 3.6638531342299633`*^9}, 3.6638544539418106`*^9, {
   3.6638551778228245`*^9, 3.6638551785728254`*^9}, 3.663908408987089*^9, {
   3.6639084428071365`*^9, 3.663908446697142*^9}, 3.6639978297015944`*^9, {
   3.663998066421926*^9, 3.663998073801936*^9}, 3.663998586252654*^9, {
   3.6640831977009172`*^9, 3.664083198490918*^9}, 3.6640840768421483`*^9, 
   3.664191567217963*^9, 3.6642000343868146`*^9, {3.664287005439431*^9, 
   3.66428701161944*^9}, 3.6643746656424227`*^9, 3.6643748448626738`*^9, {
   3.6645379938794107`*^9, 3.6645379958294134`*^9}, 3.6646242954403543`*^9, {
   3.664624343580422*^9, 3.6646243530604353`*^9}, {3.6646246779228563`*^9, 
   3.6646246887474756`*^9}, {3.6646297706327953`*^9, 
   3.6646297883628206`*^9}, {3.664630165283348*^9, 3.6646302026034*^9}, {
   3.6646303237579927`*^9, 3.664630346758025*^9}, 3.6646303962575507`*^9, {
   3.664769568777433*^9, 3.6647696049374833`*^9}, {3.664769653527551*^9, 
   3.664769653967552*^9}, {3.664770193467334*^9, 3.6647702222673745`*^9}, {
   3.6647702894274683`*^9, 3.6647703818675976`*^9}, {3.664794731095442*^9, 
   3.6647947400654545`*^9}, {3.664795708893304*^9, 3.664795713873311*^9}, 
   3.66485864352054*^9, {3.6648586999706197`*^9, 3.6648587171206436`*^9}, {
   3.664858793640751*^9, 3.66485880046076*^9}, 3.66486332821797*^9, 
   3.664863771229173*^9, 3.664871749620208*^9, 3.664873620092827*^9, 
   3.6648765551769357`*^9, 3.664877561578345*^9, 3.6650345115971804`*^9, {
   3.6650509181770816`*^9, 3.6650510018871984`*^9}, 3.6650639253063164`*^9, 
   3.6651227737199516`*^9, {3.6651228077399993`*^9, 3.665122811090004*^9}, 
   3.665202887030193*^9, 3.6652067881196833`*^9, {3.665206869249797*^9, 
   3.6652069048798475`*^9}, {3.665222406987176*^9, 3.6652224326772118`*^9}, {
   3.665222485327286*^9, 3.6652224888972907`*^9}, 3.6652955260427713`*^9, {
   3.6653193516758366`*^9, 3.665319352105837*^9}, {3.6653197412563815`*^9, 
   3.6653197473763905`*^9}, {3.6653198211764936`*^9, 3.665319834826513*^9}, {
   3.6653198755165696`*^9, 3.665319926856642*^9}, {3.6654001325515647`*^9, 
   3.6654001329115653`*^9}, {3.6654001694216166`*^9, 
   3.6654001952916527`*^9}, {3.665400254841736*^9, 3.665400255301737*^9}, 
   3.665400891108049*^9, 3.665405193813117*^9, {3.6654054072625*^9, 
   3.6654054080925007`*^9}, {3.6654095889318385`*^9, 
   3.6654095948141747`*^9}, {3.6654096369955873`*^9, 3.665409650769375*^9}, {
   3.665719702941055*^9, 3.665719703351055*^9}, 3.665719933071377*^9, {
   3.66572005634155*^9, 3.6657201099116244`*^9}, {3.66575313718217*^9, 
   3.66575314450218*^9}, {3.6658440381161275`*^9, 3.6658440511961455`*^9}, {
   3.6658449276673727`*^9, 3.6658449280873733`*^9}, {3.665844968047429*^9, 
   3.665844985587454*^9}, 3.665845733698501*^9, {3.665845775298559*^9, 
   3.6658457997485933`*^9}, {3.6659151211496153`*^9, 3.665915167990681*^9}, {
   3.6659152112707415`*^9, 3.6659152205107546`*^9}, {3.665915426451043*^9, 
   3.665915477041114*^9}, {3.6660028560133953`*^9, 3.666002937093509*^9}, 
   3.666003012993615*^9, {3.666065121579254*^9, 3.666065130959267*^9}, {
   3.6662687318230658`*^9, 3.6662687322630663`*^9}, {3.666268793373152*^9, 
   3.6662688374832134`*^9}, {3.6662688694932585`*^9, 
   3.6662688958932953`*^9}, {3.6663277734802103`*^9, 
   3.6663277751202126`*^9}, {3.666327860760332*^9, 3.6663278889503717`*^9}, {
   3.6663279602204714`*^9, 3.6663279894005127`*^9}, {3.666363178219427*^9, 
   3.6663632191494846`*^9}, {3.666363314429618*^9, 3.6663633148796186`*^9}, 
   3.6663640497563295`*^9, {3.6665857550651293`*^9, 3.6665857561451306`*^9}, {
   3.666586028105511*^9, 3.6665860545055485`*^9}, {3.6665860893655972`*^9, 
   3.6665861316456566`*^9}, 3.666586977856841*^9, 3.666670728092188*^9, {
   3.666692398097709*^9, 3.666692398397726*^9}, {3.66669243028555*^9, 
   3.6666924564270453`*^9}, {3.6666925433810186`*^9, 3.6666925438670464`*^9}, 
   3.6666927182770224`*^9, 3.6666986678307543`*^9, {3.666707863559628*^9, 
   3.666707874659643*^9}, {3.666868842512927*^9, 3.6668688438929286`*^9}, {
   3.666868906393016*^9, 3.666868976933115*^9}, {3.6668811986911497`*^9, 
   3.6668812133911705`*^9}, {3.6670369651135397`*^9, 
   3.6670370448836513`*^9}, {3.6670374357641983`*^9, 3.6670374942042804`*^9}, 
   3.6670432637800293`*^9, {3.6670433535301547`*^9, 3.6670433538701553`*^9}, {
   3.6670556925136757`*^9, 3.667055719353713*^9}, 3.6670557565637655`*^9, {
   3.6671381999250503`*^9, 3.667138254455127*^9}, {3.667138394845323*^9, 
   3.6671383953453236`*^9}, 3.6671385815355844`*^9, 3.6672168832184553`*^9, 
   3.667280624942178*^9, 3.6672814773643713`*^9, {3.667301889672082*^9, 
   3.6673019165921197`*^9}, 3.6673164734037204`*^9, {3.6673698805540705`*^9, 
   3.667369932424143*^9}, {3.6673700241442714`*^9, 3.6673700258842735`*^9}, 
   3.667370216155713*^9, 3.667391537305337*^9, {3.6673915831349583`*^9, 
   3.6673915926073465`*^9}, {3.6674722943677397`*^9, 3.667472340967805*^9}, {
   3.6674725007080283`*^9, 3.667472501048029*^9}, 3.6674726613782535`*^9, 
   3.667533033011517*^9, 3.6675331048576264`*^9, {3.667542278774684*^9, 
   3.667542281906863*^9}, 3.6675663001686993`*^9, {3.6676252101419954`*^9, 
   3.667625224346808*^9}, {3.6676252726825724`*^9, 3.6676252807360334`*^9}, 
   3.667637310278431*^9, 3.6676533070070596`*^9, {3.667653873727068*^9, 
   3.667653884618691*^9}, 3.667706120928934*^9, 3.667706371509285*^9, 
   3.667796085716265*^9, {3.6678276563112917`*^9, 3.667827656641292*^9}, 
   3.667827756641432*^9, {3.6678278067215023`*^9, 3.6678278732915955`*^9}, {
   3.667885501792658*^9, 3.6678855196226826`*^9}, {3.667885549882725*^9, 
   3.6678855761427617`*^9}, {3.66788568912292*^9, 3.6678857069829445`*^9}, 
   3.6678863636738644`*^9, {3.6680870873777523`*^9, 3.6680871398178263`*^9}, {
   3.6680871735578732`*^9, 3.6680871740078735`*^9}, {3.6680873234680834`*^9, 
   3.6680873453981137`*^9}, 3.6680876185584965`*^9, {3.668087796298745*^9, 
   3.6680877967787457`*^9}, {3.6680879666289835`*^9, 3.668088046379095*^9}, {
   3.6681364194760237`*^9, 3.668136436786048*^9}, 3.668170274487259*^9, {
   3.6681708418280525`*^9, 3.6681708436180553`*^9}, 3.668241346929725*^9, {
   3.66824432730618*^9, 3.668244344079139*^9}, {3.66831287282763*^9, 
   3.668312920297697*^9}, {3.66831295840775*^9, 3.668312958857751*^9}, 
   3.668313133487995*^9, {3.6684342178318796`*^9, 3.668434218396912*^9}, {
   3.668434357752883*^9, 3.668434387831603*^9}, {3.668434439253544*^9, 
   3.668434464797005*^9}, 3.668586781736519*^9, {3.668594386038769*^9, 
   3.668594418688815*^9}, {3.6685945798190403`*^9, 3.6685945807890415`*^9}, {
   3.6685961870387383`*^9, 3.668596191398744*^9}, {3.668596342598956*^9, 
   3.668596354378972*^9}, 3.668661441059435*^9, 3.668676186304246*^9, 
   3.6686954536887045`*^9, 3.668696233730797*^9, {3.6689385086509695`*^9, 
   3.6689385335910044`*^9}, {3.6689385847510757`*^9, 
   3.6689385852210765`*^9}, {3.6689387167912607`*^9, 3.668938729711279*^9}, 
   3.668946869365638*^9, {3.6691088940095744`*^9, 3.669108894489575*^9}, 
   3.6691092528500767`*^9, {3.669109306490152*^9, 3.6691093068201523`*^9}, {
   3.669109360580228*^9, 3.6691093871702647`*^9}, 3.6691135896979055`*^9, 
   3.6691136283279595`*^9, 3.669113825808236*^9, {3.6691779847198753`*^9, 
   3.6691780267599344`*^9}, {3.6691781090700493`*^9, 3.6691781095500507`*^9}, 
   3.6691784344860044`*^9, 3.6692013333121405`*^9, {3.6693445036808844`*^9, 
   3.669344504160885*^9}, {3.669344555520957*^9, 3.669344635411069*^9}, {
   3.669541212076513*^9, 3.6695412124165134`*^9}, 3.669541320056664*^9, {
   3.6695414054767838`*^9, 3.6695414516568484`*^9}, {3.670212440078781*^9, 
   3.6702124405887823`*^9}, 3.6702125514489374`*^9, {3.6702126102190194`*^9, 
   3.6702126106290197`*^9}, {3.670212654389081*^9, 3.670212678089114*^9}, 
   3.6702466560066004`*^9, {3.670246688436646*^9, 3.67024670584667*^9}, 
   3.6702468201368303`*^9, 3.6702982332341037`*^9, {3.6704180452530403`*^9, 
   3.67041808820162*^9}, {3.670418167471731*^9, 3.670418167971732*^9}, {
   3.6704183318522916`*^9, 3.670418358133795*^9}, {3.6705789014121823`*^9, 
   3.6705789138322*^9}, {3.6705789488222485`*^9, 3.670578984572299*^9}, {
   3.6705790429323807`*^9, 3.670579090112447*^9}, {3.6706501478938427`*^9, 
   3.6706501740638795`*^9}, {3.670650357344136*^9, 3.670650380784169*^9}, {
   3.6706504265842333`*^9, 3.6706504269342337`*^9}, 3.670650662964322*^9, 
   3.6706507426968827`*^9, {3.670650938020055*^9, 3.6706509577371826`*^9}, {
   3.670675466535786*^9, 3.670675467025787*^9}, {3.6706755437858944`*^9, 
   3.670675607195983*^9}, {3.6708498798518972`*^9, 3.6708499238719587`*^9}, {
   3.6708499674520197`*^9, 3.67084998877205*^9}, 3.670850303922491*^9, {
   3.6709908181785274`*^9, 3.6709908581085835`*^9}, {3.6709909426787014`*^9, 
   3.670990982868758*^9}, 3.6709910296788235`*^9, 3.6709913112202187`*^9, {
   3.6709914610004287`*^9, 3.6709914878504663`*^9}, {3.6710256942148695`*^9, 
   3.6710257395549326`*^9}, 3.6710258952851505`*^9, {3.6710259803552694`*^9, 
   3.6710260140453167`*^9}, {3.671026093425428*^9, 3.6710261209354663`*^9}, 
   3.671075706715992*^9, {3.671112529119626*^9, 3.671112529549627*^9}, {
   3.671112697271862*^9, 3.671112796682001*^9}, {3.671627170004964*^9, 
   3.6716271703949647`*^9}, 3.6716273335751934`*^9, {3.671627376335253*^9, 
   3.6716274145753064`*^9}, {3.6720542571402063`*^9, 3.672054257740207*^9}, 
   3.6720543077602773`*^9, {3.672054337780319*^9, 3.6720543925803957`*^9}, {
   3.6721404054400873`*^9, 3.672140406076123*^9}, {3.6721406833530197`*^9, 
   3.6721407034530478`*^9}, {3.6721407354130926`*^9, 3.672140784753162*^9}, 
   3.672224587904722*^9, {3.6722248157650414`*^9, 3.672224816415042*^9}, 
   3.6722249024151626`*^9, {3.672224934725208*^9, 3.6722249808852725`*^9}, 
   3.6723085428406568`*^9, 3.6723099979026937`*^9, {3.6724754034287624`*^9, 
   3.6724754040187635`*^9}, {3.6724756314700813`*^9, 
   3.6724757128201957`*^9}, {3.67247574503024*^9, 3.672475745990242*^9}, {
   3.672475775990284*^9, 3.6724758027603216`*^9}, {3.672569920898918*^9, 
   3.672569921308919*^9}, {3.672569982979005*^9, 3.672570014229049*^9}, {
   3.6725700469690948`*^9, 3.672570094509162*^9}, {3.6725701679792643`*^9, 
   3.6725701700692673`*^9}, {3.6725702108693247`*^9, 3.672570261349395*^9}, {
   3.6726494477414513`*^9, 3.6726495213715544`*^9}, {3.672649733402851*^9, 
   3.6726497408528614`*^9}, {3.672743024219758*^9, 3.67274309709986*^9}, {
   3.6727431502299347`*^9, 3.6727431998700037`*^9}, 3.672823471656451*^9, {
   3.6728404595042987`*^9, 3.672840531364399*^9}, 3.672840565914448*^9, {
   3.6728850688042603`*^9, 3.672885091894293*^9}, {3.67288513267435*^9, 
   3.6728851706844034`*^9}, {3.6730837455655212`*^9, 3.6730837459955215`*^9}, 
   3.6730838017956*^9, {3.673083871995698*^9, 3.673083915326759*^9}, 
   3.673084621227747*^9, 3.673346210209086*^9, {3.6733588990527725`*^9, 
   3.6733589311928177`*^9}, {3.673358989172899*^9, 3.6733589895528994`*^9}, {
   3.67335922564323*^9, 3.6733592389232483`*^9}, 3.6734208055263057`*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1904, 998},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{594.9599999999999, 842.04}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
ShowSelection->True,
FrontEndVersion->"10.4 for Microsoft Windows (32-bit) (February 25, 2016)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]]}, Visible -> False, 
  FrontEndVersion -> 
  "10.4 for Microsoft Windows (32-bit) (February 25, 2016)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[1486, 35, 26116, 643, 402, "Title"],
Cell[27605, 680, 10798, 273, 108, "Subtitle"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38440, 958, 3872, 114, 90, "Title",
 Evaluatable->False],
Cell[42315, 1074, 20939, 636, 271, "Input",
 Evaluatable->False],
Cell[63257, 1712, 16420, 505, 213, "Input",
 Evaluatable->False],
Cell[79680, 2219, 912, 21, 38, "Input",
 Evaluatable->False],
Cell[80595, 2242, 38501, 1186, 445, "Input",
 Evaluatable->False],
Cell[119099, 3430, 34369, 1019, 416, "Input",
 Evaluatable->False],
Cell[153471, 4451, 46761, 1473, 474, "Input",
 Evaluatable->False],
Cell[200235, 5926, 16599, 514, 184, "Input",
 Evaluatable->False],
Cell[216837, 6442, 11576, 341, 126, "Input",
 Evaluatable->False],
Cell[228416, 6785, 127, 3, 27, "Input"],
Cell[CellGroupData[{
Cell[228568, 6792, 1607, 33, 93, "Subtitle"],
Cell[230178, 6827, 2823294, 68624, 176012, "Input"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

(* NotebookSignature JxTCoYbSwd2jwCwkPZIA@6RB *)
