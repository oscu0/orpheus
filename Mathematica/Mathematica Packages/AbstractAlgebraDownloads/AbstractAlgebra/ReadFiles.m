(***********************************************************************This file was generated automatically by the Mathematica front end.It contains Initialization cells from a Notebook file, which typicallywill have the same name as this file except ending in ".nb" instead of".m".This file is intended to be loaded into the Mathematica kernel usingthe package loading commands Get or Needs.  Doing so is equivalent tousing the Evaluate Initialization Cells menu command in the front end.DO NOT EDIT THIS FILE.  This entire file is regenerated automatically each time the parent Notebook file is saved in the Mathematica front end.Any changes you make to this file will be overwritten.***********************************************************************)(* :Title:  AbstractAlgebra`ReadFiles *)(* :Context: AbstractAlgebra`ReadFiles` *)(* :Authors: 			Allen C. Hibbard	hibbarda@central.edu	http://www.central.edu/homepages/hibbarda/hibbard.html							 	Kenneth M. Levasseur	Kenneth_Levasseur@uml.edu	http://www.uml.edu/Dept/Math/LevasseuK.html		Homepage for Exploring Abstract Algebra with Mathematica:	http://www.central.edu/eaam.html*)(* :History:	1/6/00 - created	*)(* :Package Version: 1.0.1 *)(* :Mathematica Version: 2.2 and 3.x *)(* :Copyright: Copyright 1998, Allen C. Hibbard and 			 Kenneth M. Levasseur*)BeginPackage["AbstractAlgebra`ReadFiles`"];FolderAndFileQst::usage = "FolderAndFileQst[boxedFN] returns directoryand file name for questions files given 'Group Labs x' or 'Ring Labs x'in boxed form in a button.";FolderAndFile::usage = "FolderAndFile[boxedFN] returns directoryand file name for lab files given 'Group Labs x' or 'Ring Labs x'in boxed form in a button.";CopyNotebook::usage = "CopyNotebook[{dir, file}] opens up AbstractAlgebra/dir/file and places it in a new untitled notebook.";Begin["`Private`"];FolderAndFileQst[in_]:= Module[{char,num,type,file},		char = Characters[in[[1,1]]//StringJoin];If[First[char]==="G",type= "GroupLabQuestions";num= Drop[char,10];      file =If[Length[num]==1, "GrpQst"<>"0"<>First[num]<>".nb",          "GrpQst"<>(num//StringJoin)<>".nb"],type="RingLabQuestions";      num= Drop[char,9];      file =If[Length[num]==1, "RngQst"<>"0"<>First[num]<>".nb",          "RngQst"<>(num//StringJoin)<>".nb"]];	{type,file}]FolderAndFile[in_]:= Module[{char,num,type,file},		char = Characters[in[[1,1]]//StringJoin];If[First[char]==="G",type= "GroupLabs";num= Drop[char,10];      file =If[Length[num]==1, "GrpLab"<>"0"<>First[num]<>".nb",          "GrpLab"<>(num//StringJoin)<>".nb"],type="RingLabs";      num= Drop[char,9];      file =If[Length[num]==1, "RngLab"<>"0"<>First[num]<>".nb",          "RngLab"<>(num//StringJoin)<>".nb"]];	{type,file}]CopyNotebook[info_List] := Module[{nb,type,flnm, nb2},		{type,flnm}=info;		nb=NotebookOpen[ToFileName[{$TopDirectory, "AddOns",       "Applications", "AbstractAlgebra", type},       flnm]];	NotebookPut[NotebookGet[nb],			NotebookCreate[Sequence@@Options[nb]]];    nb2 = SelectedNotebook[];    	NotebookClose[nb];    SelectionMove[nb2, Before, Notebook]]End[];EndPackage[];